<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Thu, 30 Dec 2022 01:57:05 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>babysor/MockingBird</title>
      <link>https://github.com/babysor/MockingBird</link>
      <description>&lt;p&gt;üöÄAIÊãüÂ£∞: 5ÁßíÂÜÖÂÖãÈöÜÊÇ®ÁöÑÂ£∞Èü≥Âπ∂ÁîüÊàê‰ªªÊÑèËØ≠Èü≥ÂÜÖÂÆπ Clone a voice in 5 seconds to generate arbitrary speech in real-time&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12797292/131216767-6eb251d6-14fc-4951-8324-2722f0cd4c63.jpg&quot; alt=&quot;mockingbird&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://choosealicense.com/licenses/mit/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/babysor/MockingBird/main/README-CN.md&quot;&gt;‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;üåç &lt;strong&gt;Chinese&lt;/strong&gt; supported mandarin and tested with multiple datasets: aidatatang_200zh, magicdata, aishell3, data_aishell, and etc.&lt;/p&gt; 
&lt;p&gt;ü§© &lt;strong&gt;PyTorch&lt;/strong&gt; worked for pytorch, tested in version of 1.9.0(latest in August 2021), with GPU Tesla T4 and GTX 2060&lt;/p&gt; 
&lt;p&gt;üåç &lt;strong&gt;Windows + Linux&lt;/strong&gt; run in both Windows OS and linux OS (even in M1 MACOS)&lt;/p&gt; 
&lt;p&gt;ü§© &lt;strong&gt;Easy &amp;amp; Awesome&lt;/strong&gt; effect with only newly-trained synthesizer, by reusing the pretrained encoder/vocoder&lt;/p&gt; 
&lt;p&gt;üåç &lt;strong&gt;Webserver Ready&lt;/strong&gt; to serve your result with remote calling&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV17Q4y1B7mY/&quot;&gt;DEMO VIDEO&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;1. Install Requirements&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Follow the original repo to test if you got all environment ready. **Python 3.7 or higher ** is needed to run the toolbox.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://pytorch.org/get-started/locally/&quot;&gt;PyTorch&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you get an &lt;code&gt;ERROR: Could not find a version that satisfies the requirement torch==1.9.0+cu102 (from versions: 0.1.2, 0.1.2.post1, 0.1.2.post2 )&lt;/code&gt; This error is probably due to a low version of python, try using 3.9 and it will install successfully&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://ffmpeg.org/download.html#get-packages&quot;&gt;ffmpeg&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; to install the remaining necessary packages.&lt;/li&gt; 
 &lt;li&gt;Install webrtcvad &lt;code&gt;pip install webrtcvad-wheels&lt;/code&gt;(If you need)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that we are using the pretrained encoder/vocoder but synthesizer, since the original model is incompatible with the Chinese sympols. It means the demo_cli is not working at this moment.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;2. Prepare your models&lt;/h3&gt; 
&lt;p&gt;You can either train your models or use existing ones:&lt;/p&gt; 
&lt;h4&gt;2.1 Train encoder with your dataset (Optional)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Preprocess with the audios and the mel spectrograms: &lt;code&gt;python encoder_preprocess.py &amp;lt;datasets_root&amp;gt;&lt;/code&gt; Allowing parameter &lt;code&gt;--dataset {dataset}&lt;/code&gt; to support the datasets you want to preprocess. Only the train set of these datasets will be used. Possible names: librispeech_other, voxceleb1, voxceleb2. Use comma to sperate multiple datasets.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Train the encoder: &lt;code&gt;python encoder_train.py my_run &amp;lt;datasets_root&amp;gt;/SV2TTS/encoder&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For training, the encoder uses visdom. You can disable it with &lt;code&gt;--no_visdom&lt;/code&gt;, but it&#39;s nice to have. Run &quot;visdom&quot; in a separate CLI/process to start your visdom server.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;2.2 Train synthesizer with your dataset&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Download dataset and unzip: make sure you can access all .wav in folder&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Preprocess with the audios and the mel spectrograms: &lt;code&gt;python pre.py &amp;lt;datasets_root&amp;gt;&lt;/code&gt; Allowing parameter &lt;code&gt;--dataset {dataset}&lt;/code&gt; to support aidatatang_200zh, magicdata, aishell3, data_aishell, etc.If this parameter is not passed, the default dataset will be aidatatang_200zh.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Train the synthesizer: &lt;code&gt;python synthesizer_train.py mandarin &amp;lt;datasets_root&amp;gt;/SV2TTS/synthesizer&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to next step when you see attention line show and loss meet your need in training folder &lt;em&gt;synthesizer/saved_models/&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2.3 Use pretrained model of synthesizer&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Thanks to the community, some models will be shared:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;author&lt;/th&gt; 
   &lt;th&gt;Download link&lt;/th&gt; 
   &lt;th&gt;Preview Video&lt;/th&gt; 
   &lt;th&gt;Info&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;@author&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pan.baidu.com/s/1iONvRxmkI-t1nHqxKytY3g&quot;&gt;https://pan.baidu.com/s/1iONvRxmkI-t1nHqxKytY3g&lt;/a&gt; &lt;a href=&quot;https://pan.baidu.com/s/1iONvRxmkI-t1nHqxKytY3g&quot;&gt;Baidu&lt;/a&gt; 4j5d&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;75k steps trained by multiple datasets&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;@author&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pan.baidu.com/s/1fMh9IlgKJlL2PIiRTYDUvw&quot;&gt;https://pan.baidu.com/s/1fMh9IlgKJlL2PIiRTYDUvw&lt;/a&gt; &lt;a href=&quot;https://pan.baidu.com/s/1fMh9IlgKJlL2PIiRTYDUvw&quot;&gt;Baidu&lt;/a&gt; codeÔºöom7f&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;25k steps trained by multiple datasets, only works under version 0.0.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;@FawenYo&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://drive.google.com/file/d/1H-YGOUHpmqKxJ9FRc6vAjPuqQki24UbC/view?usp=sharing&quot;&gt;https://drive.google.com/file/d/1H-YGOUHpmqKxJ9FRc6vAjPuqQki24UbC/view?usp=sharing&lt;/a&gt; &lt;a href=&quot;https://u.teknik.io/AYxWf.pt&quot;&gt;https://u.teknik.io/AYxWf.pt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/babysor/MockingBird/wiki/audio/self_test.mp3&quot;&gt;input&lt;/a&gt; &lt;a href=&quot;https://github.com/babysor/MockingBird/wiki/audio/export.wav&quot;&gt;output&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;200k steps with local accent of Taiwan, only works under version 0.0.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;@miven&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pan.baidu.com/s/1PI-hM3sn5wbeChRryX-RCQ&quot;&gt;https://pan.baidu.com/s/1PI-hM3sn5wbeChRryX-RCQ&lt;/a&gt; codeÔºö2021&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1uh411B7AD/&quot;&gt;https://www.bilibili.com/video/BV1uh411B7AD/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;only works under version 0.0.1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;2.4 Train vocoder (Optional)&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;note: vocoder has little difference in effect, so you may not need to train a new one.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preprocess the data: &lt;code&gt;python vocoder_preprocess.py &amp;lt;datasets_root&amp;gt; -m &amp;lt;synthesizer_model_path&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt; replace with your dataset rootÔºå&lt;code&gt;&amp;lt;synthesizer_model_path&amp;gt;&lt;/code&gt;replace with directory of your best trained models of sythensizer, e.g. &lt;em&gt;sythensizer\saved_mode\xxx&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Train the wavernn vocoder: &lt;code&gt;python vocoder_train.py mandarin &amp;lt;datasets_root&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Train the hifigan vocoder &lt;code&gt;python vocoder_train.py mandarin &amp;lt;datasets_root&amp;gt; hifigan&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. Launch&lt;/h3&gt; 
&lt;h4&gt;3.1 Using the web server&lt;/h4&gt; 
&lt;p&gt;You can then try to run:&lt;code&gt;python web.py&lt;/code&gt; and open it in browser, default as &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;3.2 Using the Toolbox&lt;/h4&gt; 
&lt;p&gt;You can then try the toolbox: &lt;code&gt;python demo_toolbox.py -d &amp;lt;datasets_root&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Reference&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This repository is forked from &lt;a href=&quot;https://github.com/CorentinJ/Real-Time-Voice-Cloning&quot;&gt;Real-Time-Voice-Cloning&lt;/a&gt; which only support English.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;URL&lt;/th&gt; 
   &lt;th&gt;Designation&lt;/th&gt; 
   &lt;th&gt;Title&lt;/th&gt; 
   &lt;th&gt;Implementation source&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/abs/1803.09017&quot;&gt;1803.09017&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;GlobalStyleToken (synthesizer)&lt;/td&gt; 
   &lt;td&gt;Style Tokens: Unsupervised Style Modeling, Control and Transfer in End-to-End Speech Synthesis&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/abs/2010.05646&quot;&gt;2010.05646&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;HiFi-GAN (vocoder)&lt;/td&gt; 
   &lt;td&gt;Generative Adversarial Networks for Efficient and High Fidelity Speech Synthesis&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/pdf/1806.04558.pdf&quot;&gt;&lt;strong&gt;1806.04558&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;SV2TTS&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/pdf/1802.08435.pdf&quot;&gt;1802.08435&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;WaveRNN (vocoder)&lt;/td&gt; 
   &lt;td&gt;Efficient Neural Audio Synthesis&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/fatchord/WaveRNN&quot;&gt;fatchord/WaveRNN&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/pdf/1703.10135.pdf&quot;&gt;1703.10135&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tacotron (synthesizer)&lt;/td&gt; 
   &lt;td&gt;Tacotron: Towards End-to-End Speech Synthesis&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/fatchord/WaveRNN&quot;&gt;fatchord/WaveRNN&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/pdf/1710.10467.pdf&quot;&gt;1710.10467&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;GE2E (encoder)&lt;/td&gt; 
   &lt;td&gt;Generalized End-To-End Loss for Speaker Verification&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;F Q&amp;amp;A&lt;/h2&gt; 
&lt;h4&gt;1.Where can I download the dataset?&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Dataset&lt;/th&gt; 
   &lt;th&gt;Original Source&lt;/th&gt; 
   &lt;th&gt;Alternative Sources&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;aidatatang_200zh&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.openslr.org/62/&quot;&gt;OpenSLR&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://drive.google.com/file/d/110A11KZoVe7vy6kXlLb6zVPLb_J91I_t/view?usp=sharing&quot;&gt;Google Drive&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;magicdata&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.openslr.org/68/&quot;&gt;OpenSLR&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://drive.google.com/file/d/1g5bWRUSNH68ycC6eNvtwh07nX3QhOOlo/view?usp=sharing&quot;&gt;Google Drive (Dev set)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;aishell3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.openslr.org/93/&quot;&gt;OpenSLR&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://drive.google.com/file/d/1shYp_o4Z0X0cZSKQDtFirct2luFUwKzZ/view?usp=sharing&quot;&gt;Google Drive&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;data_aishell&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.openslr.org/33/&quot;&gt;OpenSLR&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;After unzip aidatatang_200zh, you need to unzip all the files under &lt;code&gt;aidatatang_200zh\corpus\train&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;2.What is&lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt;?&lt;/h4&gt; 
&lt;p&gt;If the dataset path is &lt;code&gt;D:\data\aidatatang_200zh&lt;/code&gt;,then &lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt; is&lt;code&gt;D:\data&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;3.Not enough VRAM&lt;/h4&gt; 
&lt;p&gt;Train the synthesizerÔºöadjust the batch_size in &lt;code&gt;synthesizer/hparams.py&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;//Before
tts_schedule = [(2,  1e-3,  20_000,  12),   # Progressive training schedule
                (2,  5e-4,  40_000,  12),   # (r, lr, step, batch_size)
                (2,  2e-4,  80_000,  12),   #
                (2,  1e-4, 160_000,  12),   # r = reduction factor (# of mel frames
                (2,  3e-5, 320_000,  12),   #     synthesized for each decoder iteration)
                (2,  1e-5, 640_000,  12)],  # lr = learning rate
//After
tts_schedule = [(2,  1e-3,  20_000,  8),   # Progressive training schedule
                (2,  5e-4,  40_000,  8),   # (r, lr, step, batch_size)
                (2,  2e-4,  80_000,  8),   #
                (2,  1e-4, 160_000,  8),   # r = reduction factor (# of mel frames
                (2,  3e-5, 320_000,  8),   #     synthesized for each decoder iteration)
                (2,  1e-5, 640_000,  8)],  # lr = learning rate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Train Vocoder-Preprocess the dataÔºöadjust the batch_size in &lt;code&gt;synthesizer/hparams.py&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;//Before
### Data Preprocessing
        max_mel_frames = 900,
        rescale = True,
        rescaling_max = 0.9,
        synthesis_batch_size = 16,                  # For vocoder preprocessing and inference.
//After
### Data Preprocessing
        max_mel_frames = 900,
        rescale = True,
        rescaling_max = 0.9,
        synthesis_batch_size = 8,                  # For vocoder preprocessing and inference.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Train Vocoder-Train the vocoderÔºöadjust the batch_size in &lt;code&gt;vocoder/wavernn/hparams.py&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;//Before
# Training
voc_batch_size = 100
voc_lr = 1e-4
voc_gen_at_checkpoint = 5
voc_pad = 2

//After
# Training
voc_batch_size = 6
voc_lr = 1e-4
voc_gen_at_checkpoint = 5
voc_pad =2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;4.If it happens &lt;code&gt;RuntimeError: Error(s) in loading state_dict for Tacotron: size mismatch for encoder.embedding.weight: copying a param with shape torch.Size([70, 512]) from checkpoint, the shape in current model is torch.Size([75, 512]).&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Please refer to issue &lt;a href=&quot;https://github.com/babysor/MockingBird/issues/37&quot;&gt;#37&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;5. How to improve CPU and GPU occupancy rate?&lt;/h4&gt; 
&lt;p&gt;Adjust the batch_size as appropriate to improve&lt;/p&gt; 
&lt;h4&gt;6. What if it happens &lt;code&gt;the page file is too small to complete the operation&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Please refer to this &lt;a href=&quot;https://www.youtube.com/watch?v=Oh6dga-Oy10&amp;amp;ab_channel=CodeProf&quot;&gt;video&lt;/a&gt; and change the virtual memory to 100G (102400), for example : When the file is placed in the D disk, the virtual memory of the D disk is changed.&lt;/p&gt; 
&lt;h4&gt;7. When should I stop during training?&lt;/h4&gt; 
&lt;p&gt;FYI, my attention came after 18k steps and loss became lower than 0.4 after 50k steps. &lt;img src=&quot;https://user-images.githubusercontent.com/7423248/128587252-f669f05a-f411-4811-8784-222156ea5e9d.png&quot; alt=&quot;attention_step_20500_sample_1&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/7423248/128587255-4945faa0-5517-46ea-b173-928eff999330.png&quot; alt=&quot;step-135500-mel-spectrogram_sample_1&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>janeczku/calibre-web</title>
      <link>https://github.com/janeczku/calibre-web</link>
      <description>&lt;p&gt;üìö Web app for browsing, reading and downloading eBooks stored in a Calibre database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About&lt;/h1&gt; 
&lt;p&gt;Calibre-Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing &lt;a href=&quot;https://calibre-ebook.com&quot;&gt;Calibre&lt;/a&gt; database.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/janeczku/calibre-web/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/janeczku/calibre-web?style=flat-square&quot; alt=&quot;GitHub License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/w/janeczku/calibre-web?logo=github&amp;amp;style=flat-square&amp;amp;label=commits&quot; alt=&quot;GitHub commit activity&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/janeczku/calibre-web/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/janeczku/calibre-web/total?logo=github&amp;amp;style=flat-square&quot; alt=&quot;GitHub all releases&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/calibreweb/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/calibreweb?logo=pypi&amp;amp;logoColor=fff&amp;amp;style=flat-square&quot; alt=&quot;PyPI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/calibreweb/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/dm/calibreweb?logo=pypi&amp;amp;logoColor=fff&amp;amp;style=flat-square&quot; alt=&quot;PyPI - Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/h2VsJ2NEfB&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/838810113564344381?label=Discord&amp;amp;logo=discord&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;This software is a fork of &lt;a href=&quot;https://github.com/mutschler/calibreserver&quot;&gt;library&lt;/a&gt; and licensed under the GPL v3 License.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/janeczku/calibre-web/wiki/images/main_screen.png&quot; alt=&quot;Main screen&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bootstrap 3 HTML5 interface&lt;/li&gt; 
 &lt;li&gt;full graphical setup&lt;/li&gt; 
 &lt;li&gt;User management with fine-grained per-user permissions&lt;/li&gt; 
 &lt;li&gt;Admin interface&lt;/li&gt; 
 &lt;li&gt;User Interface in brazilian, czech, dutch, english, finnish, french, german, greek, hungarian, italian, japanese, khmer, polish, russian, simplified and traditional chinese, spanish, swedish, turkish, ukrainian&lt;/li&gt; 
 &lt;li&gt;OPDS feed for eBook reader apps&lt;/li&gt; 
 &lt;li&gt;Filter and search by titles, authors, tags, series and language&lt;/li&gt; 
 &lt;li&gt;Create a custom book collection (shelves)&lt;/li&gt; 
 &lt;li&gt;Support for editing eBook metadata and deleting eBooks from Calibre library&lt;/li&gt; 
 &lt;li&gt;Support for converting eBooks through Calibre binaries&lt;/li&gt; 
 &lt;li&gt;Restrict eBook download to logged-in users&lt;/li&gt; 
 &lt;li&gt;Support for public user registration&lt;/li&gt; 
 &lt;li&gt;Send eBooks to Kindle devices with the click of a button&lt;/li&gt; 
 &lt;li&gt;Sync your Kobo devices through Calibre-Web with your Calibre library&lt;/li&gt; 
 &lt;li&gt;Support for reading eBooks directly in the browser (.txt, .epub, .pdf, .cbr, .cbt, .cbz, .djvu)&lt;/li&gt; 
 &lt;li&gt;Upload new books in many formats, including audio formats (.mp3, .m4a, .m4b)&lt;/li&gt; 
 &lt;li&gt;Support for Calibre Custom Columns&lt;/li&gt; 
 &lt;li&gt;Ability to hide content based on categories and Custom Column content per user&lt;/li&gt; 
 &lt;li&gt;Self-update capability&lt;/li&gt; 
 &lt;li&gt;&quot;Magic Link&quot; login to make it easy to log on eReaders&lt;/li&gt; 
 &lt;li&gt;Login via LDAP, google/github oauth and via proxy authentication&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h4&gt;Installation via pip (recommended)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install calibre web via pip with the command &lt;code&gt;pip install calibreweb&lt;/code&gt; (Depending on your OS and or distro the command could also be &lt;code&gt;pip3&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Optional features can also be installed via pip, please refer to &lt;a href=&quot;https://github.com/janeczku/calibre-web/wiki/Dependencies-in-Calibre-Web-Linux-Windows&quot;&gt;this page&lt;/a&gt; for details&lt;/li&gt; 
 &lt;li&gt;Calibre-Web can be started afterwards by typing &lt;code&gt;cps&lt;/code&gt; or &lt;code&gt;python3 -m cps&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Manual installation&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install dependencies by running &lt;code&gt;pip3 install --target vendor -r requirements.txt&lt;/code&gt; (python3.x). Alternativly set up a python virtual environment.&lt;/li&gt; 
 &lt;li&gt;Execute the command: &lt;code&gt;python3 cps.py&lt;/code&gt; (or &lt;code&gt;nohup python3 cps.py&lt;/code&gt; - recommended if you want to exit the terminal window)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Issues with Ubuntu: Please note that running the above install command can fail on some versions of Ubuntu, saying &lt;code&gt;&quot;can&#39;t combine user with prefix&quot;&lt;/code&gt;. This is a &lt;a href=&quot;https://github.com/pypa/pip/issues/3826&quot;&gt;known bug&lt;/a&gt; and can be remedied by using the command &lt;code&gt;pip install --system --target vendor -r requirements.txt&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Point your browser to &lt;code&gt;http://localhost:8083&lt;/code&gt; or &lt;code&gt;http://localhost:8083/opds&lt;/code&gt; for the OPDS catalog Set &lt;code&gt;Location of Calibre database&lt;/code&gt; to the path of the folder where your Calibre library (metadata.db) lives, push &quot;submit&quot; button&lt;br&gt; Optionally a Google Drive can be used to host the calibre library &lt;a href=&quot;https://github.com/janeczku/calibre-web/wiki/Configuration#using-google-drive-integration&quot;&gt;-&amp;gt; Using Google Drive integration&lt;/a&gt; Go to Login page&lt;/p&gt; 
&lt;h4&gt;Default admin login:&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Username:&lt;/em&gt; admin&lt;br&gt; &lt;em&gt;Password:&lt;/em&gt; admin123&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;python 3.5+&lt;/p&gt; 
&lt;p&gt;Optionally, to enable on-the-fly conversion from one ebook format to another when using the send-to-kindle feature, or during editing of ebooks metadata:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://calibre-ebook.com/download&quot;&gt;Download and install&lt;/a&gt; the Calibre desktop program for your platform and enter the folder including program name (normally /opt/calibre/ebook-convert, or C:\Program Files\calibre\ebook-convert.exe) in the field &quot;calibre&#39;s converter tool&quot; on the setup page.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/pgaskin/kepubify/releases/latest&quot;&gt;Download&lt;/a&gt; Kepubify tool for your platform and place the binary starting with &lt;code&gt;kepubify&lt;/code&gt; in Linux: &lt;code&gt;\opt\kepubify&lt;/code&gt; Windows: &lt;code&gt;C:\Program Files\kepubify&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Docker Images&lt;/h2&gt; 
&lt;p&gt;A pre-built Docker image is available in these Docker Hub repository (maintained by the LinuxServer team):&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;LinuxServer - x64, armhf, aarch64&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Docker Hub - &lt;a href=&quot;https://hub.docker.com/r/linuxserver/calibre-web&quot;&gt;https://hub.docker.com/r/linuxserver/calibre-web&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Github - &lt;a href=&quot;https://github.com/linuxserver/docker-calibre-web&quot;&gt;https://github.com/linuxserver/docker-calibre-web&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Github - (Optional Calibre layer) - &lt;a href=&quot;https://github.com/linuxserver/docker-calibre-web/tree/calibre&quot;&gt;https://github.com/linuxserver/docker-calibre-web/tree/calibre&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This image has the option to pull in an extra docker manifest layer to include the Calibre &lt;code&gt;ebook-convert&lt;/code&gt; binary. Just include the environmental variable &lt;code&gt;DOCKER_MODS=linuxserver/calibre-web:calibre&lt;/code&gt; in your docker run/docker compose file. &lt;strong&gt;(x64 only)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;If you do not need this functionality then this can be omitted, keeping the image as lightweight as possible.&lt;/p&gt; &lt;p&gt;Both the Calibre-Web and Calibre-Mod images are rebuilt automatically on new releases of Calibre-Web and Calibre respectively, and on updates to any included base image packages on a weekly basis if required.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The &quot;path to convertertool&quot; should be set to &lt;code&gt;/usr/bin/ebook-convert&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;The &quot;path to unrar&quot; should be set to &lt;code&gt;/usr/bin/unrar&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contact&lt;/h1&gt; 
&lt;p&gt;Just reach us out on &lt;a href=&quot;https://discord.gg/h2VsJ2NEfB&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For further information, How To&#39;s and FAQ please check the &lt;a href=&quot;https://github.com/janeczku/calibre-web/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Contributing to Calibre-Web&lt;/h1&gt; 
&lt;p&gt;Please have a look at our &lt;a href=&quot;https://github.com/janeczku/calibre-web/raw/master/CONTRIBUTING.md&quot;&gt;Contributing Guidelines&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>30-seconds/30-seconds-of-code</title>
      <link>https://github.com/30-seconds/30-seconds-of-code</link>
      <description>&lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/logo.png&quot; alt=&quot;Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;30 seconds of code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit &lt;a href=&quot;https://30secondsofcode.org&quot;&gt;our website&lt;/a&gt; to view our snippet collection.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://30secondsofcode.org/search&quot;&gt;Search page&lt;/a&gt; to find snippets that suit your needs. You can search by name, tag, language or using a snippet&#39;s description. Just start typing a term and see what comes up.&lt;/li&gt; 
 &lt;li&gt;Browse the &lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;JavaScript Snippet collection&lt;/a&gt; to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.&lt;/li&gt; 
 &lt;li&gt;Click on each snippet card to view the whole snippet, including code, explanation and examples.&lt;/li&gt; 
 &lt;li&gt;You can use the button at the bottom of a snippet card to copy the code to clipboard.&lt;/li&gt; 
 &lt;li&gt;If you like the project, give it a star. It means a lot to the people maintaining it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Want to contribute?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to help us improve, take a minute to read the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/snippet-template.md&quot;&gt;Snippet Template&lt;/a&gt; to add new snippets to the collection.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with a specific snippet, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-of-code/issues/new&quot;&gt;open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with the website, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-web/issues/new&quot;&gt;report it in the web repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This repository is maintained by the &lt;a href=&quot;https://github.com/30-seconds&quot;&gt;30 seconds of code organization on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;All snippets are licensed under the CC-BY-4.0 License, unless explicitly stated otherwise.&lt;/li&gt; 
 &lt;li&gt;Logos, names and trademarks are not to be used without the explicit consent of the owners of the 30 seconds of code GitHub organization.&lt;/li&gt; 
 &lt;li&gt;Our website is powered by &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>alshedivat/al-folio</title>
      <link>https://github.com/alshedivat/al-folio</link>
      <description>&lt;p&gt;A beautiful, simple, clean, and responsive Jekyll theme for academics&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;al-folio&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/alshedivat/al-folio&quot;&gt;&lt;img src=&quot;https://travis-ci.org/alshedivat/al-folio.svg?branch=master&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://alshedivat.github.io/al-folio/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/theme-demo-brightgreen.svg?sanitize=true&quot; alt=&quot;demo&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/alshedivat/al-folio/graphs/contributors/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/alshedivat/al-folio.svg?sanitize=true&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/alshedivat/al-folio&quot; alt=&quot;GitHub release (latest SemVer)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/alshedivat/al-folio?color=blue&quot; alt=&quot;GitHub&quot;&gt; &lt;a href=&quot;https://github.com/alshedivat/al-folio&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/alshedivat/al-folio&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/alshedivat/al-folio/fork&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/alshedivat/al-folio&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ko-fi.com/alshedivat&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/support-Ko--fi-yellow.svg?sanitize=true&quot; alt=&quot;support&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A simple, clean, and responsive &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; theme for academics. If you like the theme, give it a star!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://alshedivat.github.io/al-folio/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/al-folio-preview.png&quot; alt=&quot;Preview&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;User community&lt;/h2&gt; 
&lt;p&gt;The vibrant community of &lt;strong&gt;al-folio&lt;/strong&gt; users is growing! Academics around the world use this theme for their homepages, blogs, lab pages, as well as webpages for courses, workshops, conferences, meetups, and more. Check out the community webpages below. Feel free to add your own page(s) by sending a PR.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;Academics&lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;http://maruan.alshedivat.com&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://www.cs.columbia.edu/~chen1ru/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://maithraraghu.com&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;http://platanois.org&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://otiliastr.github.io&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://www.maths.dur.ac.uk/~sxwc62/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;http://jessachandler.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://mayankm96.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://markdean.info/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://kakodkar.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sahirbhatnagar.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://spd.gr/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://jay-sarkar.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://aborowska.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://aditisgh.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://alexhaydock.co.uk/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://alixkeener.net/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://andreea7b.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://rishabhjoshi.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sheelabhadra.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://giograno.me/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://immsrini.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://apooladian.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://chinmoy-dutta.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://liamcli.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://yoonholee.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://zrqiao.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://abstractgeek.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://www.compphys.de/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://julianstreyczek.github.io&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sdaza.com&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://niweera.gq&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Labs&lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://www.haylab.caltech.edu/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sjkimlab.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://systemconsultantgroup.github.io/scg-folio/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://decisionlab.ucsf.edu/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://programming-group.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sailing-lab.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Courses&lt;/td&gt; 
   &lt;td&gt; CMU PGM (&lt;a href=&quot;https://sailinglab.github.io/pgm-spring-2019/&quot; target=&quot;_blank&quot;&gt;S-19&lt;/a&gt;) &lt;br&gt; CMU DeepRL (&lt;a href=&quot;https://cmudeeprl.github.io/703website_f19/&quot; target=&quot;_blank&quot;&gt;F-19&lt;/a&gt;, &lt;a href=&quot;https://cmudeeprl.github.io/Spring202010403website/&quot; target=&quot;_blank&quot;&gt;S-20&lt;/a&gt;, &lt;a href=&quot;https://cmudeeprl.github.io/703website/&quot; target=&quot;_blank&quot;&gt;F-20&lt;/a&gt;, &lt;a href=&quot;https://cmudeeprl.github.io/403_website/&quot; target=&quot;_blank&quot;&gt;S-21&lt;/a&gt;) &lt;br&gt; CMU MMML (&lt;a href=&quot;https://cmu-multicomp-lab.github.io/mmml-course/fall2020/&quot; target=&quot;_blank&quot;&gt;F-20&lt;/a&gt;) &lt;br&gt; CMU Distributed Systems (&lt;a href=&quot;https://andrew.cmu.edu/course/15-440/&quot; target=&quot;_blank&quot;&gt;S-21&lt;/a&gt;) &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Conferences &amp;amp; workshops&lt;/td&gt; 
   &lt;td&gt; ML Retrospectives (NeurIPS: &lt;a href=&quot;https://ml-retrospectives.github.io/neurips2019/&quot; target=&quot;_blank&quot;&gt;2019&lt;/a&gt;, &lt;a href=&quot;https://ml-retrospectives.github.io/neurips2020/&quot; target=&quot;_blank&quot;&gt;2020&lt;/a&gt;; ICML: &lt;a href=&quot;https://ml-retrospectives.github.io/icml2020/&quot; target=&quot;_blank&quot;&gt;2020&lt;/a&gt;) &lt;br&gt; HAMLETS (NeurIPS: &lt;a href=&quot;https://hamlets-workshop.github.io/&quot; target=&quot;_blank&quot;&gt;2020&lt;/a&gt;) &lt;br&gt; ICBINB (NeurIPS: &lt;a href=&quot;https://i-cant-believe-its-not-better.github.io/&quot; target=&quot;_blank&quot;&gt;2020&lt;/a&gt;, &lt;a href=&quot;https://i-cant-believe-its-not-better.github.io/neurips2021/&quot; target=&quot;_blank&quot;&gt;2021&lt;/a&gt;) &lt;br&gt; Neural Compression (ICLR: &lt;a href=&quot;https://neuralcompression.github.io/&quot; target=&quot;_blank&quot;&gt;2021&lt;/a&gt;) &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Best practices&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Falshedivat.github.io%2Fal-folio%2F&amp;amp;tab=desktop&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/pagespeed.svg?sanitize=true&quot; alt=&quot;Google PageSpeeg&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;For more about how to use Jekyll, check out &lt;a href=&quot;https://www.taniarascia.com/make-a-static-website-with-jekyll/&quot;&gt;this tutorial&lt;/a&gt;. Why Jekyll? Read &lt;a href=&quot;https://karpathy.github.io/2014/07/01/switching-to-jekyll/&quot;&gt;Andrej Karpathy&#39;s blog post&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;h4&gt;Local setup&lt;/h4&gt; 
&lt;p&gt;Assuming you have &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; and &lt;a href=&quot;https://bundler.io/&quot;&gt;Bundler&lt;/a&gt; installed on your system (&lt;em&gt;hint: for ease of managing ruby gems, consider using &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt;&lt;/em&gt;), first &lt;a href=&quot;https://guides.github.com/activities/forking/&quot;&gt;fork&lt;/a&gt; the theme from &lt;code&gt;github.com:alshedivat/al-folio&lt;/code&gt; to &lt;code&gt;github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-repo-name&amp;gt;&lt;/code&gt; and do the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone git@github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-repo-name&amp;gt;.git
$ cd &amp;lt;your-repo-name&amp;gt;
$ bundle install
$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, feel free to customize the theme however you like (don&#39;t forget to change the name!). After you are done, &lt;strong&gt;commit&lt;/strong&gt; your final changes.&lt;/p&gt; 
&lt;h4&gt;Deployment&lt;/h4&gt; 
&lt;p&gt;Deploying your website to &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; is the most popular option. Starting version &lt;a href=&quot;https://github.com/alshedivat/al-folio/releases/tag/v0.3.5&quot;&gt;v0.3.5&lt;/a&gt;, &lt;strong&gt;al-folio&lt;/strong&gt; will automatically re-deploy your webpage each time you push new changes to your repository! &lt;span&gt;‚ú®&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For personal and organization webpages:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Rename your repository to &lt;code&gt;&amp;lt;your-github-username&amp;gt;.github.io&lt;/code&gt; or &lt;code&gt;&amp;lt;your-github-orgname&amp;gt;.github.io&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In &lt;code&gt;_config.yml&lt;/code&gt;, set &lt;code&gt;url&lt;/code&gt; to &lt;code&gt;https://&amp;lt;your-github-username&amp;gt;.github.io&lt;/code&gt; and leave &lt;code&gt;baseurl&lt;/code&gt; empty.&lt;/li&gt; 
 &lt;li&gt;Set up automatic deployment of your webpage (see instructions below).&lt;/li&gt; 
 &lt;li&gt;Make changes, commit, and push!&lt;/li&gt; 
 &lt;li&gt;After deployment, the webpage will become available at &lt;code&gt;&amp;lt;your-github-username&amp;gt;.github.io&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;For project pages:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;In &lt;code&gt;_config.yml&lt;/code&gt;, set &lt;code&gt;url&lt;/code&gt; to &lt;code&gt;https://&amp;lt;your-github-username&amp;gt;.github.io&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; to &lt;code&gt;/&amp;lt;your-repository-name&amp;gt;/&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Set up automatic deployment of your webpage (see instructions below).&lt;/li&gt; 
 &lt;li&gt;Make changes, commit, and push!&lt;/li&gt; 
 &lt;li&gt;After deployment, the webpage will become available at &lt;code&gt;&amp;lt;your-github-username&amp;gt;.github.io/&amp;lt;your-repository-name&amp;gt;/&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;To enable automatic deployment:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click on &lt;strong&gt;Actions&lt;/strong&gt; tab and &lt;strong&gt;Enable GitHub Actions&lt;/strong&gt;; do not worry about creating any workflows as everything has already been set for you.&lt;/li&gt; 
 &lt;li&gt;Make any other changes to your webpage, commit, and push. This will automatically trigger the &lt;strong&gt;Deploy&lt;/strong&gt; action.&lt;/li&gt; 
 &lt;li&gt;Wait for a few minutes and let the action complete. You can see the progress in the &lt;strong&gt;Actions&lt;/strong&gt; tab. If completed successfully, in addition to the &lt;code&gt;master&lt;/code&gt; branch, your repository should now have a newly built &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/li&gt; 
 &lt;li&gt;Finally, in the &lt;strong&gt;Settings&lt;/strong&gt; of your repository, in the Pages section, set the branch to &lt;code&gt;gh-pages&lt;/code&gt; (&lt;strong&gt;NOT&lt;/strong&gt; to &lt;code&gt;master&lt;/code&gt;). For more details, see &lt;a href=&quot;https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#choosing-a-publishing-source&quot;&gt;Configuring a publishing source for your GitHub Pages site&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt;
 &lt;summary&gt;(click to expand) &lt;strong&gt;Manual deployment to GitHub Pages:&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;If you need to manually re-deploy your website to GitHub pages, run the deploy script from the root directory of your repository:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ./bin/deploy
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;uses the &lt;code&gt;master&lt;/code&gt; branch for the source code and deploys the webpage to &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;(click to expand) &lt;strong&gt;Deployment to another hosting server (non GitHub Pages):&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;If you decide to not use GitHub Pages and host your page elsewhere, simply run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bundle exec jekyll build
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;which will (re-)generate the static webpage in the &lt;code&gt;_site/&lt;/code&gt; folder. Then simply copy the contents of the &lt;code&gt;_site/&lt;/code&gt; foder to your hosting server.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure to correctly set the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; fields in &lt;code&gt;_config.yml&lt;/code&gt; before building the webpage. If you are deploying your webpage to &lt;code&gt;your-domain.com/your-project/&lt;/code&gt;, you must set &lt;code&gt;url: your-domain.com&lt;/code&gt; and &lt;code&gt;baseurl: /your-project/&lt;/code&gt;. If you are deploing directly to &lt;code&gt;your-domain.com&lt;/code&gt;, leave &lt;code&gt;baseurl&lt;/code&gt; blank.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;(click to expand) &lt;strong&gt;Deployment to a separate repository (advanced users only):&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Do not try using this method unless you know what you are doing (make sure you are familiar with &lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/about-github-pages#publishing-sources-for-github-pages-sites&quot;&gt;publishing sources&lt;/a&gt;). This approach allows to have the website&#39;s source code in one repository and the deployment version in a different repository.&lt;/p&gt; 
 &lt;p&gt;Let&#39;s assume that your website&#39;s publishing source is a &lt;code&gt;publishing-source&lt;/code&gt; sub-directory of a git-versioned repository cloned under &lt;code&gt;$HOME/repo/&lt;/code&gt;. For a user site this could well be something like &lt;code&gt;$HOME/&amp;lt;user&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Firstly, from the deployment repo dir, checkout the git branch hosting your publishing source.&lt;/p&gt; 
 &lt;p&gt;Then from the website sources dir (commonly your al-folio fork&#39;s clone):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bundle exec jekyll build --destination $HOME/repo/publishing-source
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This will instruct jekyll to deploy the website under &lt;code&gt;$HOME/repo/publishing-source&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Jekyll will clean &lt;code&gt;$HOME/repo/publishing-source&lt;/code&gt; before building!&lt;/p&gt; 
 &lt;p&gt;The quote below is taken directly from the &lt;a href=&quot;https://jekyllrb.com/docs/configuration/options/&quot;&gt;jekyll configuration docs&lt;/a&gt;:&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Destination folders are cleaned on site builds&lt;/p&gt; 
  &lt;p&gt;The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Some files could be retained by specifying them within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.&lt;/p&gt; 
  &lt;p&gt;Do not use an important location for &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt;; instead, use it as a staging area and copy files from there to your web server.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;If &lt;code&gt;$HOME/repo/publishing-source&lt;/code&gt; contains files that you want jekyll to leave untouched, specify them under &lt;code&gt;keep_files&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;. In its default configuration, al-folio will copy the top-level &lt;code&gt;README.md&lt;/code&gt; to the publishing source. If you want to change this behaviour, add &lt;code&gt;README.md&lt;/code&gt; under &lt;code&gt;exclude&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Do &lt;em&gt;not&lt;/em&gt; run &lt;code&gt;jekyll clean&lt;/code&gt; on your publishing source repo as this will result in the entire directory getting deleted, irrespective of the content of &lt;code&gt;keep_files&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Upgrading from a previous version&lt;/h4&gt; 
&lt;p&gt;If you installed &lt;strong&gt;al-folio&lt;/strong&gt; as described above, you can upgrade to the latest version as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Assuming the current directory is &amp;lt;your-repo-name&amp;gt;
$ git remote add upstream https://github.com/alshedivat/al-folio.git
$ git fetch upstream
$ git rebase upstream/v0.3.5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have extensively customized a previous version, it might be trickier to upgrade. You can still follow the steps above, but &lt;code&gt;git rebase&lt;/code&gt; may result in merge conflicts that must be resolved. See &lt;a href=&quot;https://help.github.com/en/github/using-git/about-git-rebase&quot;&gt;git rebase manual&lt;/a&gt; and how to &lt;a href=&quot;https://help.github.com/en/github/using-git/resolving-merge-conflicts-after-a-git-rebase&quot;&gt;resolve conflicts&lt;/a&gt; for more information. If rebasing is too complicated, we recommend to re-install the new version of the theme from scratch and port over your content and changes from the previous version manually.&lt;/p&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;Here are some frequently asked questions. If you have a different question, please ask using &lt;a href=&quot;https://github.com/alshedivat/al-folio/discussions/categories/q-a&quot;&gt;Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; After I fork and setup the repo, I get a deployment error. Isn&#39;t the website supposed to correctly deploy automatically? &lt;br&gt; &lt;strong&gt;A:&lt;/strong&gt; Yes, if you are using release &lt;code&gt;v0.3.5&lt;/code&gt; or later, the website will automatically and correctly re-deploy right after your first commit. Please make some changes (e.g., change your website info in &lt;code&gt;_config.yml&lt;/code&gt;), commit, and push. Make sure to follow &lt;a href=&quot;https://github.com/alshedivat/al-folio#deployment&quot;&gt;deployment instructions&lt;/a&gt; in the previous section. (Relevant issue: &lt;a href=&quot;https://github.com/alshedivat/al-folio/issues/209#issuecomment-798849211&quot;&gt;209&lt;/a&gt;.)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; I am using a custom domain (e.g., &lt;code&gt;foo.com&lt;/code&gt;). My custom domain becomes blank in the repository settings after each deployment. How do I fix that? &lt;br&gt; &lt;strong&gt;A:&lt;/strong&gt; You need to add &lt;code&gt;CNAME&lt;/code&gt; file to the &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; branch of your repository. The file should contain your custom domain name. (Relevant issue: &lt;a href=&quot;https://github.com/alshedivat/al-folio/issues/130&quot;&gt;130&lt;/a&gt;.)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; My webpage works locally. But after deploying, it is not displayed correctly (CSS and JS is not loaded properly). How do I fix that? &lt;br&gt; &lt;strong&gt;A:&lt;/strong&gt; Make sure to correctly specify the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; paths in &lt;code&gt;_config.yml&lt;/code&gt;. Set &lt;code&gt;url&lt;/code&gt; to &lt;code&gt;https://&amp;lt;your-github-username&amp;gt;.github.io&lt;/code&gt; or to &lt;code&gt;https://&amp;lt;your.custom.domain&amp;gt;&lt;/code&gt; if you are using a custom domain. If you are deploying a personal or organization website, leave &lt;code&gt;baseurl&lt;/code&gt; blank. If you are deploying a project page, set &lt;code&gt;baseurl: /&amp;lt;your-project-name&amp;gt;/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Atom feed doesn&#39;t work. Why? &lt;br&gt; &lt;strong&gt;A:&lt;/strong&gt; Make sure to correctly specify the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; paths in &lt;code&gt;_config.yml&lt;/code&gt;. RSS Feed plugin works with these correctly set up fields: &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;author&lt;/code&gt;. Make sure to fill them in an appropriate way and try again.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Publications&lt;/h3&gt; 
&lt;p&gt;Your publications page is generated automatically from your BibTex bibliography. Simply edit &lt;code&gt;_bibliography/papers.bib&lt;/code&gt;. You can also add new &lt;code&gt;*.bib&lt;/code&gt; files and customize the look of your publications however you like by editing &lt;code&gt;_pages/publications.md&lt;/code&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/publications-screenshot.png&quot; width=&quot;800&quot;&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;(click to expand) &lt;strong&gt;Author annotation:&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;In publications, the author entry for yourself is identified by string &lt;code&gt;scholar:last_name&lt;/code&gt; and string array &lt;code&gt;scholar:first_name&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;scholar:
  last_name: Einstein
  first_name: [Albert, A.]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If the entry matches the last name and one form of the first names, it will be underlined. Keep meta-information about your co-authors in &lt;code&gt;_data/coauthors.yml&lt;/code&gt; and Jekyll will insert links to their webpages automatically. The coauthor data format in &lt;code&gt;_data/coauthors.yml&lt;/code&gt; is as follows,&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;&quot;Adams&quot;:
  - firstname: [&quot;Edwin&quot;, &quot;E.&quot;, &quot;E. P.&quot;, &quot;Edwin Plimpton&quot;]
    url: https://en.wikipedia.org/wiki/Edwin_Plimpton_Adams

&quot;Podolsky&quot;:
  - firstname: [&quot;Boris&quot;, &quot;B.&quot;, &quot;B. Y.&quot;, &quot;Boris Yakovlevich&quot;]
    url: https://en.wikipedia.org/wiki/Boris_Podolsky

&quot;Rosen&quot;:
  - firstname: [&quot;Nathan&quot;, &quot;N.&quot;]
    url: https://en.wikipedia.org/wiki/Nathan_Rosen

&quot;Bach&quot;:
  - firstname: [&quot;Johann Sebastian&quot;, &quot;J. S.&quot;]
    url: https://en.wikipedia.org/wiki/Johann_Sebastian_Bach

  - firstname: [&quot;Carl Philipp Emanuel&quot;, &quot;C. P. E.&quot;]
    url: https://en.wikipedia.org/wiki/Carl_Philipp_Emanuel_Bach
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If the entry matches one of the combinations of the last names and the first names, it will be highlighted and linked to the url provided.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Collections&lt;/h3&gt; 
&lt;p&gt;This Jekyll theme implements &lt;code&gt;collections&lt;/code&gt; to let you break up your work into categories. The theme comes with two default collections: &lt;code&gt;news&lt;/code&gt; and &lt;code&gt;projects&lt;/code&gt;. Items from the &lt;code&gt;news&lt;/code&gt; collection are automatically displayed on the home page. Items from the &lt;code&gt;projects&lt;/code&gt; collection are displayed on a responsive grid on projects page.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/projects-screenshot.png&quot; width=&quot;700&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can easily create your own collections, apps, short stories, courses, or whatever your creative work is. To do this, edit the collections in the &lt;code&gt;_config.yml&lt;/code&gt; file, create a corresponding folder, and create a landing page for your collection, similar to &lt;code&gt;_pages/projects.md&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Layouts&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;al-folio&lt;/strong&gt; comes with stylish layouts for pages and blog posts.&lt;/p&gt; 
&lt;h4&gt;The iconic style of Distill&lt;/h4&gt; 
&lt;p&gt;The theme allows you to create blog posts in the &lt;a href=&quot;https://distill.pub/&quot;&gt;distill.pub&lt;/a&gt; style:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://alshedivat.github.io/al-folio/blog/2018/distill/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/distill-screenshot.png&quot; width=&quot;700&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For more details on how to create distill-styled posts using &lt;code&gt;&amp;lt;d-*&amp;gt;&lt;/code&gt; tags, please refer to &lt;a href=&quot;https://alshedivat.github.io/al-folio/blog/2018/distill/&quot;&gt;the example&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Full support for math &amp;amp; code&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;al-folio&lt;/strong&gt; supports fast math typesetting through &lt;a href=&quot;https://katex.org/&quot;&gt;KaTeX&lt;/a&gt; and code syntax highlighting using &lt;a href=&quot;https://github.com/jwarby/jekyll-pygments-themes&quot;&gt;GitHub style&lt;/a&gt;:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://alshedivat.github.io/al-folio/blog/2015/math/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/math-screenshot.png&quot; width=&quot;400&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://alshedivat.github.io/al-folio/blog/2015/code/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/code-screenshot.png&quot; width=&quot;400&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h4&gt;Photos&lt;/h4&gt; 
&lt;p&gt;Photo formatting is made simple using &lt;a href=&quot;https://getbootstrap.com/docs/4.4/layout/grid/&quot;&gt;Bootstrap&#39;s grid system&lt;/a&gt;. Easily create beautiful grids within your blog posts and project pages:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://alshedivat.github.io/al-folio/projects/1_project/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/photos-screenshot.png&quot; width=&quot;75%&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Other features&lt;/h3&gt; 
&lt;h4&gt;Theming&lt;/h4&gt; 
&lt;p&gt;Six beautiful theme colors have been selected to choose from. The default is purple, but you can quickly change it by editing &lt;code&gt;$theme-color&lt;/code&gt; variable in the &lt;code&gt;_sass/_themes.scss&lt;/code&gt; file. Other color variables are listed there as well.&lt;/p&gt; 
&lt;h4&gt;Social media previews&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;al-folio&lt;/strong&gt; supports preview images on social media. To enable this functionality you will need to set &lt;code&gt;serve_og_meta&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt;. Once you have done so, all your site&#39;s pages will include Open Graph data in the HTML head element.&lt;/p&gt; 
&lt;p&gt;You will then need to configure what image to display in your site&#39;s social media previews. This can be configured on a per-page basis, by setting the &lt;code&gt;og_image&lt;/code&gt; page variable. If for an individual page this variable is not set, then the theme will fall back to a site-wide &lt;code&gt;og_image&lt;/code&gt; variable, configurable in your &lt;code&gt;_config.yml&lt;/code&gt;. In both the page-specific and site-wide cases, the &lt;code&gt;og_image&lt;/code&gt; variable needs to hold the URL for the image you wish to display in social media previews.&lt;/p&gt; 
&lt;h4&gt;Atom (RSS-like) Feed&lt;/h4&gt; 
&lt;p&gt;It generates an Atom (RSS-like) feed of your posts, useful for Atom and RSS readers. The feed is reachable simply by typing after your homepage &lt;code&gt;/feed.xml&lt;/code&gt;. E.g. assuming your website mountpoint is the main folder, you can type &lt;code&gt;yourusername.github.io/feed.xml&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to al-folio are very welcome! Before you get started, please take a look at &lt;a href=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/CONTRIBUTING.md&quot;&gt;the guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you would like to improve documentation, add your webpage to the list below, or fix a minor inconsistency or bug, please feel free to send a PR directly to &lt;code&gt;master&lt;/code&gt;. For more complex issues/bugs or feature requests, please open an issue using the appropriate template.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The theme is available as open source under the terms of the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Originally, &lt;strong&gt;al-folio&lt;/strong&gt; was based on the &lt;a href=&quot;https://github.com/bogoli/-folio&quot;&gt;*folio theme&lt;/a&gt; (published by &lt;a href=&quot;http://liabogoev.com&quot;&gt;Lia Bogoev&lt;/a&gt; and under the MIT license). Since then, it got a full re-write of the styles and many additional cool features.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sveltejs/kit</title>
      <link>https://github.com/sveltejs/kit</link>
      <description>&lt;p&gt;The fastest way to build Svelte apps&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://svelte.dev/chat&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/457912077277855764?label=chat&amp;amp;logo=discord&quot; alt=&quot;Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;READ THIS FIRST!&lt;/h1&gt; 
&lt;p&gt;SvelteKit is still in beta. Expect bugs! Read more &lt;a href=&quot;https://svelte.dev/blog/sveltekit-beta&quot;&gt;here&lt;/a&gt;, and track progress towards 1.0 &lt;a href=&quot;https://github.com/sveltejs/kit/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;The Fastest Way to Build Svelte Apps&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üí® Blazing-Fast Production Sites&lt;/li&gt; 
 &lt;li&gt;üõ†Ô∏è SSR, SPA, SSG, and In-Between&lt;/li&gt; 
 &lt;li&gt;‚ö°Ô∏è Instantly Visible Code Changes&lt;/li&gt; 
 &lt;li&gt;üî© Existing Universe of Plugins&lt;/li&gt; 
 &lt;li&gt;üîë Fully Typed APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://kit.svelte.dev/docs&quot;&gt;the documentation&lt;/a&gt; for information about getting started and developing with SvelteKit.&lt;/p&gt; 
&lt;h3&gt;Packages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Changelog&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/kit&quot;&gt;@sveltejs/kit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/kit/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte&quot;&gt;create-svelte&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-node&quot;&gt;@sveltejs/adapter-node&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-node/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-static&quot;&gt;@sveltejs/adapter-static&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-static/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare-workers&quot;&gt;@sveltejs/adapter-cloudflare-workers&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare-workers/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare&quot;&gt;@sveltejs/adapter-cloudflare&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-netlify&quot;&gt;@sveltejs/adapter-netlify&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-netlify/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-vercel&quot;&gt;@sveltejs/adapter-vercel&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-vercel/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The SvelteKit community also makes additional &lt;a href=&quot;https://sveltesociety.dev/components#adapters&quot;&gt;SvelteKit adapters available for use&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Migrating from Sapper&lt;/h3&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://kit.svelte.dev/migrating&quot;&gt;Migration Guide&lt;/a&gt; if you are upgrading from Sapper.&lt;/p&gt; 
&lt;h2&gt;Bug reporting&lt;/h2&gt; 
&lt;p&gt;Please make sure the issue you&#39;re reporting involves SvelteKit. Many issues related to how a project builds originate from &lt;a href=&quot;https://vitejs.dev/&quot;&gt;Vite&lt;/a&gt;, which is used to build a SvelteKit project. It&#39;s important to note that new Vite projects don&#39;t use SSR by default, and so if you create a new Vite project from scratch, many issues won&#39;t reproduce. You should thus start with a project that utilizes SSR, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GrygrFlzr/vite-ssr-d3&quot;&gt;https://github.com/GrygrFlzr/vite-ssr-d3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/vite-plugin-svelte/tree/main/packages/e2e-tests/vite-ssr&quot;&gt;https://github.com/sveltejs/vite-plugin-svelte/tree/main/packages/e2e-tests/vite-ssr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If an issue originates from Vite, please report in the &lt;a href=&quot;https://github.com/vitejs/vite/issues&quot;&gt;Vite issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changing SvelteKit locally&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supporting Svelte&lt;/h2&gt; 
&lt;p&gt;Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you&#39;d like to support their efforts, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/svelte&quot;&gt;Becoming a backer on Open Collective&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Funds donated via Open Collective will be used for compensating expenses related to Svelte&#39;s development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte&#39;s development more directly.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/raw/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>1in9e/gosint</title>
      <link>https://github.com/1in9e/gosint</link>
      <description>&lt;p&gt;Gosint is a distributed asset information collection and vulnerability scanning platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gosint&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/1in9e/gosint&quot;&gt;&lt;img src=&quot;https://travis-ci.org/1in9e/gosint.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/newpanjing/simpleui&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/developing%20with-Simpleui-2077ff.svg?sanitize=true&quot; alt=&quot;simpleui&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/1in9e/gosint/tree/main/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/python-3.6%7C3.7%7C3.8-blue&quot; alt=&quot;python&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ÁÆÄ‰ªã&lt;/h2&gt; 
&lt;p&gt;Âú®ÂºÄÂßã‰ΩøÁî®‰πãÂâçÔºåËØ∑Âä°ÂøÖÈòÖËØªÂπ∂ÂêåÊÑè&lt;a href=&quot;https://raw.githubusercontent.com/1in9e/gosint/main/thirdparty/%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E.md&quot;&gt;ÂÖçË¥£Â£∞Êòé&lt;/a&gt;‰∏≠ÁöÑÊù°Ê¨æÔºåÂê¶ÂàôËØ∑Âãø‰∏ãËΩΩÂÆâË£Ö‰ΩøÁî®Êú¨Á≥ªÁªü„ÄÇ&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;gosint, srchunterÂÖ®Êñ∞Âá∫ÂèëÔºå ‰∏ÄÊ¨æÂàÜÂ∏ÉÂºèËµÑ‰∫ß‰ø°ÊÅØÊî∂ÈõÜ‰∏éÁÆ°ÁêÜÂíåÊºèÊ¥ûÊâ´ÊèèÂ∑•ÂÖ∑&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;    1. ÂÆûÁé∞ÂéüÁêÜÁÆÄÂçïÔºåÂèØÊ†πÊçÆ‰∏™‰∫∫ÊåñÊ¥ûÁªèÈ™åËøõË°åÊâ©Â±ï
    2. ÊîØÊåÅÂàÜÂ∏ÉÂºèÈÉ®ÁΩ≤ÔºåÂèñÂÜ≥‰∫é‰Ω†ÁöÑË¥¢Âäõ(‰∏ªÊú∫Êï∞ÈáèÂ§öÂ∞ë);ÂÆ¢Êà∑Á´ØÂèØÈÉ®ÁΩ≤‰∫évps/pc/laptop...
    3. docker‰∏ÄÈîÆÂåñÈÉ®ÁΩ≤
    4. ÊºèÊ¥ûÂÆûÊó∂ÈÄöÁü•
    5. Êâ´ÊèèÂºïÊìéÂèØËá™ÂÆö‰πâ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ÂéüÁêÜ&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/1in9e/gosint/main/thirdparty/gosint_info.jpg&quot; alt=&quot;info&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;‰ΩøÁî®ÂâçÈ°ªÁü•&lt;/h3&gt; 
&lt;p&gt;Êâ´ÊèèÊèí‰ª∂‰∏≠‰ΩøÁî®‰∫Ü‰∏Ä‰∫õ‰ºòÁßÄÁöÑÂ∑•ÂÖ∑ÔºåÂÖ∂‰∏≠ÈÉ®ÂàÜÂ∑•ÂÖ∑ÊâÄÈúÄlicense„ÄÅÊé•Âè£api tokenÁ≠âÈúÄËá™Ë°åÊ∑ªÂä†&lt;/p&gt; 
&lt;h4&gt;xrayÈ´òÁ∫ßÁâàlicense&lt;/h4&gt; 
&lt;p&gt;Â∞Üxray-license.licÂàÜÂà´Ê∑ªÂä†Âà∞Â¶Ç‰∏ã‰ΩçÁΩÆÂç≥ÂèØ:(xrayÈÖçÁΩÆÊñá‰ª∂ÈúÄËá™Ë°åÈÖçÁΩÆ/Â¶ÇreverseÁ≠â)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;gosint/client/subdomain_scan/xray_subdomain/tools/
gosint/client/vuln_scan/rad2xray/tools/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Client Config&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;CÊÆµÂ≠òÊ¥ª/Á´ØÂè£‰æùËµñ‰∫éfofaÔºåÈúÄÈÖçÁΩÆfofa api&lt;/li&gt; 
 &lt;li&gt;ÂüüÂêçCNAMEÈªëÂêçÂçï&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;gosint/client/config.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ÈÄöÁü•&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÊîØÊåÅÈÇÆ‰ª∂/‰ºÅ‰∏öÂæÆ‰ø°Êú∫Âô®‰∫∫ÊèêÈÜíÈÄöÁü•ÂäüËÉΩÔºåÂÖ∂‰ªñÂèØÈÄöËøálibs/common.pyÊâ©Â±ï&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Êõ¥ÊîπdjangoÈÖçÁΩÆÊñá‰ª∂‰∏≠ÈÇÆ‰ª∂Âèä‰ºÅ‰∏öÂæÆ‰ø°Êú∫Âô®‰∫∫tokenÂç≥ÂèØÂÆûÁé∞Êú∫Âô®‰∫∫ÈÄöÁü•ÂäüËÉΩ&lt;/p&gt; 
&lt;h4&gt;ÂÖ∂‰ªñToolsÈÖçÁΩÆÈ°πËØ∑Ëá™Ë°åÈÖçÁΩÆ&lt;/h4&gt; 
&lt;p&gt;...&lt;/p&gt; 
&lt;h3&gt;Áîü‰∫ßÁéØÂ¢ÉÁâà&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Ê≥®ÊÑèÔºöËØ∑Âú®Áîü‰∫ßÁéØÂ¢É‰∏ãÊõøÊç¢‰∏∫Âº∫ÂØÜÁ†Å&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºågosint‰∏≠Èó¥‰ª∂ÊâÄ‰ΩøÁî®Ë¥¶Âè∑ÂØÜÁ†ÅÂàÜÂà´‰∏∫gosintuser„ÄÅgosintpass
# ‰∏≠Èó¥‰ª∂Ë¥¶Âè∑ÂØÜÁ†ÅÈúÄÊõøÊç¢Êñá‰ª∂:(Âª∫ËÆÆÂÖ®Â±ÄÂÖ≥ÈîÆÂ≠óÊêúÁ¥¢ÊõøÊç¢)
gosint/docker-compose.yml
gosint/client/docker-compose.yml
gosint/gosint/setting-prod.py
gosint/supervisor/supervisord.conf

# WebÂ∫îÁî®Ë¥¶Âè∑ÂØÜÁ†ÅÈúÄÊõøÊç¢Êñá‰ª∂ÔºöÔºàWebÂ∫îÁî®Ë¥¶Âè∑ÂØÜÁ†ÅÈªòËÆ§ÂàÜÂà´‰∏∫gosint„ÄÅgosintÔºâ
gosint/docker-entrypoint.sh: Â¶Ç‰∏ãÂàÜÂà´ÂØπÂ∫îÁî®Êà∑Âêç„ÄÅÈÇÆÁÆ±„ÄÅÂØÜÁ†ÅÔºåÊîπ‰∏∫Ëá™Â∑±ÁöÑÂç≥ÂèØ
python manage.py shell -c &quot;from django.contrib.auth.models import User; User.objects.create_superuser(&#39;gosint&#39;, &#39;root@ohlinge.cn&#39;, &#39;gosint&#39;) if not User.objects.filter(username=&#39;gosint&#39;).exists() else 0&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;ÂÖ≥‰∫éceleryÁõëÊéß&lt;/h5&gt; 
&lt;p&gt;Êñ∞ÁâàÊú¨ÈªòËÆ§ÂºÄÂêØÔºåÈúÄÂú®gosint/setting-prod.py 252Ë°åipÊîπ‰∏∫Ëá™Â∑±ÊúçÂä°Âô®ipÂç≥ÂèØ:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&#39;url&#39;: &#39;http://127.0.0.1:5555/goflower/&#39;,
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Âçï‰∏ÄÊúçÂä°Âô®ÈÉ®ÁΩ≤&lt;/h4&gt; 
&lt;p&gt;Áîü‰∫ßÁéØÂ¢ÉÊê≠Âª∫ÔºåÈááÂèñdockerÂåñÈÉ®ÁΩ≤ÁöÑÊñπÊ°à&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÊúçÂä°Âô®ÈúÄÂÆâË£Ödocker / docker-compose, ËØ∑Ëá™Ë°åÂÆâË£Ö&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;cd gosint/
docker-compose up -d --build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;! ‰∏∫‰∫ÜÈÅøÂÖçxray webhookË¢´‰∫∫ÊÅ∂ÊÑèÂ°ûÊï∞ÊçÆÔºåÂª∫ËÆÆÂØπwebhook url pathËøõË°å‰øÆÊîπÔºåÁõ¥Êé•ÊîπÂ¶Ç‰∏ã‰∏§Â§ÑÂç≥ÂèØÔºö&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;gosint/apps/dashboard/urls.py
gosint/client/docker-entrypoint.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ÂàÜÂ∏ÉÂºèÈÉ®ÁΩ≤&lt;/h4&gt; 
&lt;p&gt;ÂàÜÂ∏ÉÂºèÈÉ®ÁΩ≤‰æùËµñ‰∫éceleryÁöÑ‰ªªÂä°Ë∞ÉÂ∫¶ÔºåÈÄöËøáCelery BrokerÂ∞Ü‰ªªÂä°ÂàÜÂèëÂà∞‰∏çÂêåÁöÑÂÆ¢Êà∑Á´ØÔºåË∞ÉÂ∫¶workÂÜçÈÄöËøáCelery BackendÂºÇÊ≠•Ëé∑ÂèñÊâßË°åÂêéÁöÑÁªìÊûúÔºåÊú¨Â∫îÁî®ÂàÜÂà´ÈááÁî®‰∫ÜRabbitMQ„ÄÅRedis‰Ωú‰∏∫broker„ÄÅbackendÔºåÊâÄ‰ª•ÈúÄË¶ÅÁ°Æ‰øùÊúçÂä°Á´ØÁõ∏Â∫îÁ´ØÂè£ÂºÄÊîæ&lt;/p&gt; 
&lt;h5&gt;ÊúçÂä°Á´Ø&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;cd gosint/
docker-compose up -d --build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;ÂÆ¢Êà∑Á´Ø(ÂèØÈÉ®ÁΩ≤Â§ö‰∏™)&lt;/h5&gt; 
&lt;p&gt;ÂÆ¢Êà∑Á´Ø‰Ωç‰∫égosint/clientÁõÆÂΩï, ÂçïÁã¨ËÆ≤client‰∏ä‰º†Ëá≥ÂÆ¢Êà∑Á´ØVPSÂç≥ÂèØÔºåÊó†ÈúÄÊã∑Ë¥ùÊúçÂä°Á´Ø‰ª£Á†Å&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Êüê‰∏Ä‰∏™ËäÇÁÇπÂºÄÂêØÂì™‰∫õÊâ´ÊèèÂäüËÉΩÈÄöËøáclient/config.iniÈÖçÁΩÆ, Êâ´ÊèèÊèí‰ª∂ÂàóË°®Â¶Ç‰∏ã:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;# true or falseÂØπÂ∫îÁõ∏Â∫îÁöÑÊâ´ÊèèÊèí‰ª∂ÊòØÂê¶ÂêØÁî®
subfinder=true
ksubdomain=true
xray_subdomain=true
certip=false
# domaininfo=true
httpx=true
naabu=true
port_api=true
fileleak=true
jsfinder=true
nuclei=true
rad2xray=true
redfinger=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÂÆ¢Êà∑Á´ØËäÇÁÇπÂºÄÂêØÊñπÂºè:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd client/
# Êèí‰ª∂ÈÄâÁî®ÊéßÂà∂
vim config.ini
# Êõ¥ÊîπÊúçÂä°Á´ØIP
vim docker-compose.yml 
# ÂºÄÂêØËäÇÁÇπ
docker-compose up -d --build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÈúÄÊ≥®ÊÑèÔºåÂÆ¢Êà∑Á´Ødocker-compose.yml‰∏≠ÈúÄË¶Å‰øÆÊîπÊúçÂä°Á´ØÂú∞ÂùÄÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;BROKER&lt;/li&gt; 
 &lt;li&gt;BACKEND&lt;/li&gt; 
 &lt;li&gt;SERVER_URL (Áî®‰∫éxray webhookÊé•Êî∂)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Êú¨Âú∞ÂºÄÂèëË∞ÉËØïÁâà&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÈúÄË¶ÅÂàÜÂà´ÈÉ®ÁΩ≤WebÊúçÂä°Á´Ø„ÄÅCelery ServicerÁ´ØÂèäClientÁ´ØÂèäredis. Ê≥®ÊÑèË∞ÉËØïÊ®°Âºè&quot;debug&quot;‰∏ãÂÆ¢Êà∑Á´ØÊâßË°åMacÂèØÊâßË°åÊñá‰ª∂ÔºåWindowsÈúÄËá™Ë°å‰∏ãËΩΩÂÆ¢Êà∑Á´ØÂèØÊâßË°åÊñá‰ª∂ÔºåÂπ∂‰øÆÊîπÁõ∏Â∫î‰ΩçÁΩÆ‰ª£Á†Å&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;WebÊúçÂä°Á´Ø&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;pip3 install -r requirements.txt
# Django
python3 manage.py migrate
python3 manage.py runserver
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ServerÁ´Ø&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;# ÂΩìÂâç‰ΩçÁΩÆ‰∏ãÊâßË°å
python3 -m celery -A gosint  worker -Q server -n server -l info
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ClientÁ´Ø&lt;/h4&gt; 
&lt;p&gt;ÈúÄË¶ÅÂà∞./client/‰∏ãÂêÑ‰∏™ÂÆ¢Êà∑Á´ØÁõÆÂΩï‰∏≠ÊâßË°åÁõ∏Â∫îCeleryÔºåÂ∞ÜÂÖ∂‰∏≠ÁöÑdocker-entrypoint.shÁî®python3ÊâßË°åÂç≥ÂèØ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# ‰æãÂ¶Çfileleak
python3 -m celery -A fileleak worker -l info -Q fileleak
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Redis&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Âª∫ËÆÆdocker‰∏ÄÈîÆÂêØÂä®&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;docker run -it -d -p 6379:6379 redis redis-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;PycharmÂºÄÂèëÁéØÂ¢É&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;# mac ËÆæÁΩÆpython3ËôöÊãüÁéØÂ¢É
cd ~
virtualenv  -p /usr/bin/python3  py3env
# ÁªàÁ´ØËøõÂÖ•py3envËôöÊãüÁéØÂ¢É
source ~/py3env/bin/activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ËäÇÁÇπ‰ªªÂä°ÁõëÊéß&lt;/h3&gt; 
&lt;p&gt;gosintÂèØÈááÁî®Celery flowerÂØπËäÇÁÇπ‰ªªÂä°ËøõË°åÁõëÊéß&lt;/p&gt; 
&lt;h4&gt;Áîü‰∫ßÁéØÂ¢ÉÂºÄÂêØÁõëÊéß&lt;/h4&gt; 
&lt;p&gt;ÂºÄÂêØÊúçÂä°Á´ØdockerÂâç‰øÆÊîπÂ¶Ç‰∏ãÊñá‰ª∂ÈÖçÁΩÆËá™ÂêØÂä®Âç≥ÂèØ gosint/supervisor/supervisord.conf&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[program:flower]
...
autostart=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÂØπÂ∫îÁîü‰∫ßÁéØÂ¢ÉÁöÑËäÇÁÇπ‰ªªÂä°ÁõëÊéßÔºå‰πüÂèØ‰ª•Âú®Êú¨Âú∞ËÆ°ÁÆóÊú∫ËøêË°åÂ¶Ç‰∏ãÂëΩ‰ª§Âç≥ÂèØÂú®Êú¨Âú∞ËøõË°åÁõëÊéß&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# flower Êú¨Âú∞ÁõëÊéß
celery flower --broker=amqp://gosintuser:gosintpass@8.8.8.8:25672/gosint
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Êú¨Âú∞ÂºÄÂèëË∞ÉËØïÁéØÂ¢ÉÂêØÂä®‰ªªÂä°ÁõëÊéß&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;celery flower -A gosint
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;È¢ÑËßà&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/1in9e/gosint/main/thirdparty/1.png&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1in9e/gosint/main/thirdparty/2.png&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1in9e/gosint/main/thirdparty/3.png&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1in9e/gosint/main/thirdparty/4.png&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1in9e/gosint/main/thirdparty/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Version&lt;/h2&gt; 
&lt;h3&gt;V1.0.1&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êõ¥Êñ∞ÈÉ®ÂàÜissueÂèçÈ¶àÈóÆÈ¢ò 
  &lt;ul&gt; 
   &lt;li&gt;clientÊó†ÈôêÈáçÂêØÈóÆÈ¢ò&lt;/li&gt; 
   &lt;li&gt;celeryÁõëÊéßÈªòËÆ§Êú™ÂºÄÂêØÈóÆÈ¢ò&lt;/li&gt; 
   &lt;li&gt;README‰øÆÊîπÁî®Êà∑ÂêçÂØÜÁ†ÅÂº∫ÊèêÁ§∫ÈóÆÈ¢ò&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;fix issue: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/1in9e/gosint/issues/3&quot;&gt;https://github.com/1in9e/gosint/issues/3&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/1in9e/gosint/issues/8&quot;&gt;https://github.com/1in9e/gosint/issues/8&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/1in9e/gosint/issues/4&quot;&gt;https://github.com/1in9e/gosint/issues/4&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V1.0.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;open source&lt;/li&gt; 
 &lt;li&gt;from gosint_priv to gosint&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;TODO&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰∏ªÊú∫Êâ´Êèè&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñËøáÁ®ã&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gosintÂèÇËÄÉ‰∫ÜËÆ∏Â§ö‰ºòÁßÄÁöÑÂºÄÊ∫êÈ°πÁõÆÔºåÂÆÉ‰ª¨ÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÔºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/le31ei/srchunters&quot;&gt;https://github.com/le31ei/srchunters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/yogeshojha/rengine&quot;&gt;https://github.com/yogeshojha/rengine&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/TophantTechnology/ARL&quot;&gt;https://github.com/TophantTechnology/ARL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/projectdiscovery/naabu&quot;&gt;https://github.com/projectdiscovery/naabu&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/projectdiscovery/subfinder&quot;&gt;https://github.com/projectdiscovery/subfinder&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/projectdiscovery/nuclei&quot;&gt;https://github.com/projectdiscovery/nuclei&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/projectdiscovery/httpx&quot;&gt;https://github.com/projectdiscovery/httpx&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Threezh1/JSFinder&quot;&gt;https://github.com/Threezh1/JSFinder&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/chaitin/xray&quot;&gt;https://github.com/chaitin/xray&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;gosint bannerÂèälogoÂõæËÆæËÆ°Êù•Ëá™‰∫éÊàëÁöÑÂ•≥ÊúãÂèã&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;img src=&quot;https://assets.vercel.com/image/upload/v1607554385/repositories/next-js/next-logo.png&quot; height=&quot;128&quot;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://nextjs.org&quot;&gt;Next.js&lt;/a&gt;&lt;/h1&gt;
&lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a aria-label=&quot;Vercel logo&quot; href=&quot;https://vercel.com&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;NPM version&quot; href=&quot;https://www.npmjs.com/package/next&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;License&quot; href=&quot;https://github.com/vercel/next.js/raw/canary/license.md&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;Join the community on GitHub&quot; href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label=&quot;next.js learn&quot; href=&quot;https://nextjs.org/learn&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://nextjs.org/learn&quot;&gt;https://nextjs.org/learn&lt;/a&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world&#39;s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/vercel/next.js/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>wenzhixin/bootstrap-table</title>
      <link>https://github.com/wenzhixin/bootstrap-table</link>
      <description>&lt;p&gt;An extended table to integration with some of the most widely used CSS frameworks. (Supports Bootstrap, Semantic UI, Bulma, Material Design, Foundation, Vue.js)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://bootstrap-table.com&quot;&gt;Bootstrap Table&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/wenzhixin/bootstrap-table&quot;&gt;&lt;img src=&quot;https://travis-ci.org/wenzhixin/bootstrap-table.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://badge.fury.io/gh/wenzhixin%2Fbootstrap-table&quot;&gt;&lt;img src=&quot;https://badge.fury.io/gh/wenzhixin%2Fbootstrap-table.svg?sanitize=true&quot; alt=&quot;GitHub version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=ZDHP676FQDUT6&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&quot; alt=&quot;Donate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/wenzhixin/bootstrap-table/develop/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backers/badge.svg?sanitize=true&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/wenzhixin/bootstrap-table/develop/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsors/badge.svg?sanitize=true&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagequality.com/#?package=bootstrap-table&quot;&gt;&lt;img src=&quot;https://npm.packagequality.com/shield/bootstrap-table.svg?sanitize=true&quot; alt=&quot;Package Quality&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An extended Bootstrap table with radio, checkbox, sort, pagination, extensions and other added features.&lt;/p&gt; 
&lt;p&gt;To get started, check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bootstrap-table.com&quot;&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table-examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/bootstrap-table&quot;&gt;Questions/Helps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://segmentfault.com/t/bootstrap-table&quot;&gt;ÈóÆÈ¢ò/Â∏ÆÂä©&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/raw/master/DONATORS.md&quot;&gt;&lt;strong&gt;List of donators&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Bootstrap Table is licensed under &lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/raw/master/LICENSE&quot;&gt;The MIT License&lt;/a&gt;. Completely free, you can arbitrarily use and modify this plugin. If this plugin is useful to you, you can &lt;strong&gt;Star&lt;/strong&gt; this repo, your support is my biggest motive force, thanks.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Created for Twitter Bootstrap (All versions supported)&lt;/li&gt; 
 &lt;li&gt;Responsive web design&lt;/li&gt; 
 &lt;li&gt;Scrollable Table with fixed headers&lt;/li&gt; 
 &lt;li&gt;Fully configurable&lt;/li&gt; 
 &lt;li&gt;Via data attributes&lt;/li&gt; 
 &lt;li&gt;Show/Hide columns&lt;/li&gt; 
 &lt;li&gt;Show/Hide headers&lt;/li&gt; 
 &lt;li&gt;Show/Hide footers&lt;/li&gt; 
 &lt;li&gt;Get data in JSON format using AJAX&lt;/li&gt; 
 &lt;li&gt;Simple column sorting with a click&lt;/li&gt; 
 &lt;li&gt;Format column&lt;/li&gt; 
 &lt;li&gt;Single or multiple row selection&lt;/li&gt; 
 &lt;li&gt;Powerful pagination&lt;/li&gt; 
 &lt;li&gt;Card view&lt;/li&gt; 
 &lt;li&gt;Detail view&lt;/li&gt; 
 &lt;li&gt;Localization&lt;/li&gt; 
 &lt;li&gt;Extensions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get it&lt;/h2&gt; 
&lt;h3&gt;Manual download&lt;/h3&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/releases&quot;&gt;Releases page&lt;/a&gt; or &lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/archive/master.zip&quot;&gt;the source&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;yarn add bootstrap-table
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Npm&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm install bootstrap-table
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CDN&lt;/h3&gt; 
&lt;p&gt;You can source bootstrap-table directly from a CDN like &lt;a href=&quot;http://www.cdnjs.com/libraries/bootstrap-table&quot;&gt;CDNJS&lt;/a&gt; or &lt;a href=&quot;http://open.bootcss.com/bootstrap-table/&quot;&gt;bootcss&lt;/a&gt; or &lt;a href=&quot;http://www.jsdelivr.com/#!bootstrap.table&quot;&gt;jsdelivr&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For feature requests, bug reports or submitting pull requests, please ensure you first read &lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/raw/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Reporting Issues&lt;/h2&gt; 
&lt;p&gt;As stated above, please read &lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/raw/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;, especially &lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/raw/master/CONTRIBUTING.md#bug-reports&quot;&gt;Bug Reports&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;And as stated there, please provide an &lt;a href=&quot;https://live.bootstrap-table.com&quot;&gt;Online Example&lt;/a&gt; when creating issues!&lt;/p&gt; 
&lt;p&gt;It&#39;s really saves much time.&lt;/p&gt; 
&lt;p&gt;You can also use our examples template via Load Examples button:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://live.bootstrap-table.com/&quot;&gt;Online Editor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Your feedback is very appreciated!&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who have given feedback and submitted pull requests. A list of all the contributors can be found &lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/graphs/contributors&quot;&gt;here&lt;/a&gt;. This project exists thanks to all the people who contribute. [&lt;a href=&quot;https://raw.githubusercontent.com/wenzhixin/bootstrap-table/develop/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://raw.githubusercontent.com/wenzhixin/bootstrap-table/develop/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/contributors.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Release History&lt;/h2&gt; 
&lt;p&gt;Look at the &lt;a href=&quot;https://github.com/wenzhixin/bootstrap-table/raw/master/CHANGELOG.md&quot;&gt;Change Log&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Local develop&lt;/h2&gt; 
&lt;p&gt;To develop bootstrap-table locally please run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir bootstrap-table-dev
cd bootstrap-table-dev
git clone https://github.com/wenzhixin/bootstrap-table
git clone https://github.com/wenzhixin/bootstrap-table-examples

yarn add http-server
npx http-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then open: &lt;a href=&quot;http://localhost:8081/bootstrap-table-examples&quot;&gt;http://localhost:8081/bootstrap-table-examples&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Local build&lt;/h2&gt; 
&lt;p&gt;To build bootstrap-table locally please run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Result will appear in &lt;code&gt;dist&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;PayPal Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://edubirdie.com/write-my-essay&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;64&quot; src=&quot;https://bootstrap-table.com/assets/images/edu-birdie.png&quot; alt=&quot;Write my essay services from Edubirdie&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;OpenCollective Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/bootstrap-table#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/10/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/11/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/12/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/13/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/14/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/15/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/16/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/17/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/18/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/19/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/20/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/21/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/22/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/23/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/24/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/25/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/26/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/27/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/28/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/29/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/30/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/30/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/31/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/31/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/32/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/32/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/33/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/33/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/34/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/34/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/35/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/35/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/36/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/36/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/37/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/37/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/38/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/38/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/39/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/39/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/40/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/40/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/41/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/41/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/42/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/42/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/43/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/43/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/44/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/44/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/45/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/45/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/46/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/46/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/47/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/47/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/48/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/48/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/49/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/49/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/sponsor/50/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/sponsor/50/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;OpenCollective Backers&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a backer. Your image will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/bootstrap-table#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/10/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/11/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/12/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/13/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/14/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/15/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/16/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/17/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/18/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/19/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/20/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/21/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/22/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/23/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/24/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/25/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/26/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/27/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/28/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/29/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/30/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/30/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/31/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/31/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/32/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/32/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/33/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/33/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/34/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/34/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/35/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/35/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/36/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/36/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/37/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/37/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/38/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/38/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/39/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/39/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/40/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/40/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/41/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/41/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/42/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/42/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/43/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/43/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/44/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/44/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/45/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/45/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/46/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/46/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/47/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/47/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/48/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/48/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/49/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/49/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap-table/backer/50/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap-table/backer/50/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>moment/moment</title>
      <link>https://github.com/moment/moment</link>
      <description>&lt;p&gt;Parse, validate, manipulate, and display dates in javascript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;http://momentjs.com/&quot;&gt;Moment.js&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/moment&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/moment.svg?style=flat&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmcharts.com/compare/moment?minimal=true&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/moment.svg?style=flat&quot; alt=&quot;NPM downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/moment/moment/develop/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/moment/moment&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/moment/moment/develop.svg?style=flat&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/moment/moment?branch=develop&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/moment/moment/badge.svg?branch=develop&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dependabot.com/compatibility-score.html?dependency-name=moment&amp;amp;package-manager=npm_and_yarn&amp;amp;version-scheme=semver&quot;&gt;&lt;img src=&quot;https://api.dependabot.com/badges/compatibility_score?dependency-name=moment&amp;amp;package-manager=npm_and_yarn&amp;amp;version-scheme=semver&quot; alt=&quot;SemVer compatibility&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A JavaScript date library for parsing, validating, manipulating, and formatting dates.&lt;/p&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;Moment.js is a legacy project, now in maintenance mode. In most cases, you should choose a different library.&lt;/p&gt; 
&lt;p&gt;For more details and recommendations, please see &lt;a href=&quot;https://momentjs.com/docs/#/-project-status/&quot;&gt;Project Status&lt;/a&gt; in the docs.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Thank you.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://momentjs.com/docs/&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/moment/moment/develop/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/momentjs&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Moment.js is freely distributable under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/moment/moment/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alvarotrigo/fullPage.js</title>
      <link>https://github.com/alvarotrigo/fullPage.js</link>
      <description>&lt;p&gt;fullPage plugin by Alvaro Trigo. Create full screen pages fast and simple&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fullPage.js&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/alvarotrigo/fullPage.js/master/examples/imgs/intro.png&quot; alt=&quot;preview&quot;&gt; &lt;img src=&quot;https://raw.github.com/alvarotrigo/fullPage.js/master/examples/imgs/compatible.gif?v=2&quot; alt=&quot;compatibility&quot;&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/spanish#fullpagejs&quot;&gt;Espa√±ol&lt;/a&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/french#fullpagejs&quot;&gt;Fran√ßais&lt;/a&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/russian#fullpagejs&quot;&gt;P—É—Å—Å–∫–∏–π&lt;/a&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs&quot;&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/korean#fullpagejs&quot;&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Available for &lt;a href=&quot;https://github.com/alvarotrigo/vue-fullpage.js&quot;&gt;Vue&lt;/a&gt;, &lt;a href=&quot;https://github.com/alvarotrigo/react-fullpage&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;https://github.com/alvarotrigo/angular-fullpage&quot;&gt;Angular&lt;/a&gt;. &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;img src=&quot;http://img.shields.io/badge/fullPage.js-v3.1.2-brightgreen.svg?sanitize=true&quot; alt=&quot;fullPage.js version&quot;&gt; &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-GPL-blue.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.paypal.me/alvarotrigo/9.95&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/donate-PayPal.me-ff69b4.svg?sanitize=true&quot; alt=&quot;PayPal Donate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/npm/fullpage.js&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/fullpage.js/badge?style=rounded&quot; alt=&quot;jsDelivr Hits&quot;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;strong&gt;|&lt;/strong&gt;&amp;nbsp;&amp;nbsp; &lt;em&gt;7Kb gziped&lt;/em&gt; &amp;nbsp;&amp;nbsp;&lt;strong&gt;|&lt;/strong&gt;&amp;nbsp;&amp;nbsp; &lt;em&gt;Created by &lt;a href=&quot;https://twitter.com/imac2&quot;&gt;@imac2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/&quot;&gt;Demo online&lt;/a&gt; | &lt;a href=&quot;https://codepen.io/alvarotrigo/pen/NxyPPp&quot;&gt;Codepen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-gutenberg/&quot;&gt;Wordpress plugin for Gutenberg&lt;/a&gt; and &lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-elementor/&quot;&gt;WordPress plugin for Elementor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/utils/wordpress.html&quot;&gt;Wordpress theme&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;fullpage.js Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/FAQ---Frequently-Answered-Questions&quot;&gt;Frequently Answered Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;A simple and easy to use library that creates fullscreen scrolling websites (also known as single page websites or onepage sites) and adds landscape sliders inside the sections of the site.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#compatibility&quot;&gt;Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#creating-links-to-sections-or-slides&quot;&gt;Creating links to sections or slides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#creating-smaller-or-bigger-sections&quot;&gt;Creating smaller or bigger sections&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#state-classes-added-by-fullpagejs&quot;&gt;State classes added by fullpage.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#lazy-loading&quot;&gt;Lazy loading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#auto-playpause-embedded-media&quot;&gt;Auto play/pause embedded media&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#use-extensions&quot;&gt;Use extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#options&quot;&gt;Options&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#methods&quot;&gt;Methods&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#callbacks&quot;&gt;Callbacks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#reporting-issues&quot;&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#contributing-to-fullpagejs&quot;&gt;Contributing to fullpage.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#changelog&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#build-tasks&quot;&gt;Build tasks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#who-is-using-fullpagejs&quot;&gt;Who is using fullpage.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#donations&quot;&gt;Donations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#sponsors&quot;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Suggestion are more than welcome, not only for feature requests but also for coding style improvements. Let&#39;s make this a great library to make people&#39;s lives easier!&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;fullPage.js is fully functional on all modern browsers, as well as some old ones such as Internet Explorer 9, Opera 12, etc. It works with browsers with CSS3 support and with the ones which don&#39;t have it, making it ideal for old browsers compatibility. It also provides touch support for mobile phones, tablets and touch screen computers.&lt;/p&gt; 
&lt;p&gt;Special thanks to &lt;a href=&quot;http://www.browserstack.com/&quot;&gt;Browserstack&lt;/a&gt; for supporting fullpage.js.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;h3&gt;Commercial license&lt;/h3&gt; 
&lt;p&gt;If you want to use fullPage to develop non open sourced sites, themes, projects, and applications, the Commercial license is the appropriate license. With this option, your source code is kept proprietary. Which means, you won&#39;t have to change your whole application source code to an open source license. &lt;a href=&quot;https://alvarotrigo.com/fullPage/pricing/&quot;&gt;[Purchase a Fullpage Commercial License]&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Open source license&lt;/h3&gt; 
&lt;p&gt;If you are creating an open source application under a license compatible with the &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU GPL license v3&lt;/a&gt;, you may use fullPage under the terms of the GPLv3.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The credit comments in the JavaScript and CSS files should be kept intact&lt;/strong&gt; (even after combination or minification)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/pricing/&quot;&gt;Read more about fullPage&#39;s license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;As you can see in the example files, you will need to include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The JavaScript file &lt;code&gt;fullpage.js&lt;/code&gt; (or its minified version &lt;code&gt;fullpage.min.js&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;The css file &lt;code&gt;fullpage.css&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Optionally&lt;/strong&gt;, when using &lt;code&gt;css3:false&lt;/code&gt;, you can add the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/vendors/easings.min.js&quot;&gt;easings file&lt;/a&gt; in case you want to use other easing effects apart from the one included in the library (&lt;code&gt;easeInOutCubic&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Install using bower or npm&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Optionally&lt;/strong&gt;, you can install fullPage.js with bower or npm if you prefer:&lt;/p&gt; 
&lt;p&gt;Terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;// With bower
bower install fullpage.js

// With npm
npm install fullpage.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Including files:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;fullpage.css&quot; /&amp;gt;

&amp;lt;!-- This following line is optional. Only necessary if you use the option css3:false and you want to use other easing effects rather than &quot;easeInOutCubic&quot;. --&amp;gt;
&amp;lt;script src=&quot;vendors/easings.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;


&amp;lt;!-- This following line is only necessary in the case of using the option `scrollOverflow:true` --&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;vendors/scrolloverflow.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using Webpack, Browserify or Require.js? Check &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Use-module-loaders-for-fullPage.js&quot;&gt;how to use fullPage.js with module loaders&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Optional use of CDN&lt;/h3&gt; 
&lt;p&gt;If you prefer to use a CDN to load the needed files, fullPage.js is in CDNJS: &lt;a href=&quot;https://cdnjs.com/libraries/fullPage.js&quot;&gt;https://cdnjs.com/libraries/fullPage.js&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Required HTML structure&lt;/h3&gt; 
&lt;p&gt;Start your HTML document with the compulsory &lt;a href=&quot;http://www.corelangs.com/html/introduction/doctype.html&quot;&gt;HTML DOCTYPE declaration&lt;/a&gt; on the 1st line of your HTML code. You might have troubles with sections heights otherwise. The examples provided use HTML 5 doctype &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each section will be defined with an element containing the &lt;code&gt;section&lt;/code&gt; class. The active section by default will be the first section, which is taken as the home page.&lt;/p&gt; 
&lt;p&gt;Sections should be placed inside a wrapper (&lt;code&gt;&amp;lt;div id=&quot;fullpage&quot;&amp;gt;&lt;/code&gt; in this case). The wrapper can not be the &lt;code&gt;body&lt;/code&gt; element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&quot;fullpage&quot;&amp;gt;
	&amp;lt;div class=&quot;section&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;section&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;section&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;section&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to define a different starting point rather than the first section or the first slide of a section, just add the class &lt;code&gt;active&lt;/code&gt; to the section and slide you want to load first.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;section active&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to create a landscape slider within a section, each slide will be defined by default with an element containing the &lt;code&gt;slide&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;section&quot;&amp;gt;
	&amp;lt;div class=&quot;slide&quot;&amp;gt; Slide 1 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot;&amp;gt; Slide 2 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot;&amp;gt; Slide 3 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot;&amp;gt; Slide 4 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see a fully working example of the HTML structure in the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/raw/master/examples/simple.html&quot;&gt;&lt;code&gt;simple.html&lt;/code&gt; file&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Initialization&lt;/h3&gt; 
&lt;h4&gt;Initialization with Vanilla Javascript&lt;/h4&gt; 
&lt;p&gt;All you need to do is call fullPage.js before the closing &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	//options here
	autoScrolling:true,
	scrollHorizontally: true
});

//methods
fullpage_api.setAllowScrolling(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Initialization with jQuery&lt;/h4&gt; 
&lt;p&gt;You can use fullpage.js as a jQuery plugin if you want to!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function() {
	$(&#39;#fullpage&#39;).fullpage({
		//options here
		autoScrolling:true,
		scrollHorizontally: true
	});

	//methods
	$.fn.fullpage.setAllowScrolling(false);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Functions and methods can still be called in the jQuery way, as &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/2.9.7&quot;&gt;in fullPage.js v2.X&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Vanilla JS example with all options&lt;/h4&gt; 
&lt;p&gt;A more complex initialization with all options set could look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
var myFullpage = new fullpage(&#39;#fullpage&#39;, {
	//Navigation
	menu: &#39;#menu&#39;,
	lockAnchors: false,
	anchors:[&#39;firstPage&#39;, &#39;secondPage&#39;],
	navigation: false,
	navigationPosition: &#39;right&#39;,
	navigationTooltips: [&#39;firstSlide&#39;, &#39;secondSlide&#39;],
	showActiveTooltip: false,
	slidesNavigation: false,
	slidesNavPosition: &#39;bottom&#39;,

	//Scrolling
	css3: true,
	scrollingSpeed: 700,
	autoScrolling: true,
	fitToSection: true,
	fitToSectionDelay: 1000,
	scrollBar: false,
	easing: &#39;easeInOutCubic&#39;,
	easingcss3: &#39;ease&#39;,
	loopBottom: false,
	loopTop: false,
	loopHorizontal: true,
	continuousVertical: false,
	continuousHorizontal: false,
	scrollHorizontally: false,
	interlockedSlides: false,
	dragAndMove: false,
	offsetSections: false,
	resetSliders: false,
	fadingEffect: false,
	normalScrollElements: &#39;#element1, .element2&#39;,
	scrollOverflow: false,
	scrollOverflowReset: false,
	scrollOverflowOptions: null,
	touchSensitivity: 15,
	bigSectionsDestination: null,

	//Accessibility
	keyboardScrolling: true,
	animateAnchor: true,
	recordHistory: true,

	//Design
	controlArrows: true,
	verticalCentered: true,
	sectionsColor : [&#39;#ccc&#39;, &#39;#fff&#39;],
	paddingTop: &#39;3em&#39;,
	paddingBottom: &#39;10px&#39;,
	fixedElements: &#39;#header, .footer&#39;,
	responsiveWidth: 0,
	responsiveHeight: 0,
	responsiveSlides: false,
	parallax: false,
	parallaxOptions: {type: &#39;reveal&#39;, percentage: 62, property: &#39;translate&#39;},
	dropEffect: false,
	dropEffectOptions: { speed: 2300, color: &#39;#F82F4D&#39;, zIndex: 9999},
	waterEffect: false,
	waterEffectOptions: { animateContent: true, animateOnMouseMove: true},
	cards: false,
	cardsOptions: {perspective: 100, fadeContent: true, fadeBackground: true},

	//Custom selectors
	sectionSelector: &#39;.section&#39;,
	slideSelector: &#39;.slide&#39;,

	lazyLoading: true,

	//events
	onLeave: function(origin, destination, direction){},
	afterLoad: function(origin, destination, direction){},
	afterRender: function(){},
	afterResize: function(width, height){},
	afterReBuild: function(){},
	afterResponsive: function(isResponsive){},
	afterSlideLoad: function(section, origin, destination, direction){},
	onSlideLeave: function(section, origin, destination, direction){}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating links to sections or slides&lt;/h3&gt; 
&lt;p&gt;If you are using fullPage.js with anchor links for the sections (using the &lt;code&gt;anchors&lt;/code&gt; option or the attribute &lt;code&gt;data-anchor&lt;/code&gt; in each section), then you will be able to use anchor links also to navigate directly to a certain slide inside a section.&lt;/p&gt; 
&lt;p&gt;This would be an example of a link with an anchor: &lt;a href=&quot;http://alvarotrigo.com/fullPage/#secondPage/2&quot;&gt;http://alvarotrigo.com/fullPage/#secondPage/2&lt;/a&gt; (which is the URL you will see once you access to that section/slide manually) Notice the last part of the URL ends in &lt;code&gt;#secondPage/2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Having the following initialization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	anchors:[&#39;firstPage&#39;, &#39;secondPage&#39;, &#39;thirdPage&#39;]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The anchor at the end of the URL &lt;code&gt;#secondPage/2&lt;/code&gt; defines the section and slide of destination respectively. In the previous URL, the section of destination will be the one defined with the anchor &lt;code&gt;secondPage&lt;/code&gt; and the slide will be the 2nd slide, as we are using the index &lt;code&gt;2&lt;/code&gt; for it. (the fist slide of a section has index 0, as technically it is a section).&lt;/p&gt; 
&lt;p&gt;We could have used a custom anchor for the slide instead of its index if we would have used the attribute &lt;code&gt;data-anchor&lt;/code&gt; on the HTML markup like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;section&quot;&amp;gt;
	&amp;lt;div class=&quot;slide&quot; data-anchor=&quot;slide1&quot;&amp;gt; Slide 1 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot; data-anchor=&quot;slide2&quot;&amp;gt; Slide 2 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot; data-anchor=&quot;slide3&quot;&amp;gt; Slide 3 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot; data-anchor=&quot;slide4&quot;&amp;gt; Slide 4 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this last case, the URL we would use would be &lt;code&gt;#secondPage/slide3&lt;/code&gt;, which is the equivalent to our previous &lt;code&gt;#secondPage/2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that section anchors can also be defined in the same way, by using the &lt;code&gt;data-anchor&lt;/code&gt; attribute, if no &lt;code&gt;anchors&lt;/code&gt; array is provided.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Be careful!&lt;/strong&gt; &lt;code&gt;data-anchor&lt;/code&gt; tags can not have the same value as any ID element on the site (or NAME element for IE).&lt;/p&gt; 
&lt;h3&gt;Creating smaller or bigger sections&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/BKjRYm&quot;&gt;Demo&lt;/a&gt; fullPage.js provides a way to remove the full height restriction from its sections and slides. It is possible to create sections which height is smaller or bigger than the viewport. This is ideal for footers. It is important to realise that it doesn&#39;t make sense to have all of your sections using this feature. If there is more than one section in the initial load of the site, fullPage.js won&#39;t scroll at all to see the next one as it will be already in the viewport.&lt;/p&gt; 
&lt;p&gt;To create smaller sections just use the class &lt;code&gt;fp-auto-height&lt;/code&gt; in the section you want to apply it. It will then take the height defined by your section/slide content.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;section&quot;&amp;gt;Whole viewport&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;section fp-auto-height&quot;&amp;gt;Auto height&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Responsive auto height sections&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://codepen.io/alvarotrigo/pen/MzByMa&quot;&gt;Demo&lt;/a&gt; A responsive auto height can be applied by using the class &lt;code&gt;fp-auto-height-responsive&lt;/code&gt;. This way sections will be fullscreen until the responsive mode gets fired. Then they&#39;ll take the size required by their content, which could be bigger or smaller than the viewport.&lt;/p&gt; 
&lt;h3&gt;State classes added by fullpage.js&lt;/h3&gt; 
&lt;p&gt;Fullpage.js adds multiple classes in different elements to keep a record of the status of the site:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;active&lt;/code&gt; is added the current visible section and slide.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;active&lt;/code&gt; is added to the current menu element (if using the &lt;code&gt;menu&lt;/code&gt; option).&lt;/li&gt; 
 &lt;li&gt;A class of the form &lt;code&gt;fp-viewing-SECTION-SLIDE&lt;/code&gt; is added to the &lt;code&gt;body&lt;/code&gt; element of the site. (eg: &lt;a href=&quot;http://alvarotrigo.com/fullPage/#secondPage&quot;&gt;&lt;code&gt;fp-viewing-secondPage-0&lt;/code&gt;&lt;/a&gt;) The &lt;code&gt;SECTION&lt;/code&gt; and &lt;code&gt;SLIDE&lt;/code&gt; parts will be the anchors (or indexes if no anchor is provided) of the current section and slide.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fp-responsive&lt;/code&gt; is added to the &lt;code&gt;body&lt;/code&gt; element when the entering in the responsive mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fp-enabled&lt;/code&gt; is added to the &lt;code&gt;html&lt;/code&gt; element when fullpage.js is enabled. (and removed when destroyed).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fp-destroyed&lt;/code&gt; is added to the fullpage.js container when fullPage.js is destroyed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Lazy Loading&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/eNLBXo&quot;&gt;Demo&lt;/a&gt; fullPage.js provides a way to lazy load images, videos and audio elements so they won&#39;t slow down the loading of your site or unnecessarily waste data transfer. When using lazy loading, all these elements will only get loaded when entering in the viewport. To enable lazy loading all you need to do is change your &lt;code&gt;src&lt;/code&gt; attribute to &lt;code&gt;data-src&lt;/code&gt; as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;img data-src=&quot;image.png&quot;&amp;gt;
&amp;lt;video&amp;gt;
	&amp;lt;source data-src=&quot;video.webm&quot; type=&quot;video/webm&quot; /&amp;gt;
	&amp;lt;source data-src=&quot;video.mp4&quot; type=&quot;video/mp4&quot; /&amp;gt;
&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you already use another lazy load solution which uses &lt;code&gt;data-src&lt;/code&gt; as well, you can disable the fullPage.js lazy loading by setting the option &lt;code&gt;lazyLoading: false&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Auto play/pause embedded media&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://codepen.io/alvarotrigo/pen/pXEaaK&quot;&gt;Demo&lt;/a&gt; &lt;strong&gt;Note&lt;/strong&gt;: the autoplay feature might not work on some mobile devices depending on the OS and browser (i.e. &lt;a href=&quot;https://webkit.org/blog/6784/new-video-policies-for-ios/&quot;&gt;Safari on iOS&lt;/a&gt; version &amp;lt; 10.0).&lt;/p&gt; 
&lt;h4&gt;Play on section/slide load:&lt;/h4&gt; 
&lt;p&gt;Using the attribute &lt;code&gt;autoplay&lt;/code&gt; for videos or audio, or the param &lt;code&gt;autoplay=1&lt;/code&gt; for youtube iframes will result in the media element playing on page load. In order to play it on section/slide load use instead the attribute &lt;code&gt;data-autoplay&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;audio data-autoplay&amp;gt;
	&amp;lt;source src=&quot;http://metakoncept.hr/horse.ogg&quot; type=&quot;audio/ogg&quot;&amp;gt;
&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Pause on leave&lt;/h4&gt; 
&lt;p&gt;Embedded HTML5 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; and Youtube iframes are automatically paused when you navigate away from a section or slide. This can be disabled by using the attribute &lt;code&gt;data-keepplaying&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;audio data-keepplaying&amp;gt;
	&amp;lt;source src=&quot;http://metakoncept.hr/horse.ogg&quot; type=&quot;audio/ogg&quot;&amp;gt;
&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use extensions&lt;/h3&gt; 
&lt;p&gt;fullpage.js &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;provides a set of extensions&lt;/a&gt; you can use to enhance its default features. All of them are listed as &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#options&quot;&gt;fullpage.js options&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Extensions requires you to use the minified file &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/raw/master/dist/fullpage.extensions.min.js&quot;&gt;&lt;code&gt;fullpage.extensions.min.js&lt;/code&gt;&lt;/a&gt; that is inside the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/dist&quot;&gt;&lt;code&gt;dist&lt;/code&gt; folder&lt;/a&gt; instead of the usual fullPage.js file (&lt;code&gt;fullpage.js&lt;/code&gt; or &lt;code&gt;fullpage.min.js&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Once you acquire the extension file, you will need to add it before fullPage. For example, if I want to use the Continuous Horizontal extension, I would have include the extension file and then the extensions version of the fullPage file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.continuousHorizontal.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;fullpage/fullpage.extensions.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An activation key and a license key will be required for each extension. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/How-to-activate-a-fullPage.js-extension&quot;&gt;See more details about it here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Then you will be able to use and configure them as explained in &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#options&quot;&gt;options&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;licenseKey&lt;/code&gt;: (default &lt;code&gt;null&lt;/code&gt;). &lt;strong&gt;This option is compulsory.&lt;/strong&gt; If you use fullPage in a non open source project, then you should use the license key provided on the purchase of the fullPage Commercial License. If your project is open source and it is compatible with the GPLv3 license you can &lt;a href=&quot;https://alvarotrigo.com/fullPage/extensions/requestKey.html&quot;&gt;request a license key&lt;/a&gt;. Please read more about licenses &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#license&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://alvarotrigo.com/fullPage/pricing/&quot;&gt;on the website&lt;/a&gt;. For example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage({
    licenseKey: &#39;YOUR_KEY_HERE&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;v2compatible&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;). Determines whether to make it 100% compatible with any code written for version 2, ignoring new features or api changes of version 3. State classes, callbacks signature etc. will work exactly in the same way as it did on verion 2. &lt;strong&gt;Note that this option will be removed at some point in the future.&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;controlArrows&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Determines whether to use control arrows for the slides to move right or left.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;verticalCentered&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Vertically centering of the content within sections. When set to &lt;code&gt;true&lt;/code&gt;, your content will be wrapped by the library. Consider using delegation or load your other scripts in the &lt;code&gt;afterRender&lt;/code&gt; callback.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollingSpeed&lt;/code&gt;: (default &lt;code&gt;700&lt;/code&gt;) Speed in milliseconds for the scrolling transitions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sectionsColor&lt;/code&gt;: (default &lt;code&gt;none&lt;/code&gt;) Define the CSS &lt;code&gt;background-color&lt;/code&gt; property for each section. Example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	sectionsColor: [&#39;#f2f2f2&#39;, &#39;#4BBFC3&#39;, &#39;#7BAABE&#39;, &#39;whitesmoke&#39;, &#39;#000&#39;],
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;anchors&lt;/code&gt;: (default &lt;code&gt;[]&lt;/code&gt;) Defines the anchor links (#example) to be shown on the URL for each section. Anchors value should be unique. The position of the anchors in the array will define to which sections the anchor is applied. (second position for second section and so on). Using anchors forward and backward navigation will also be possible through the browser. This option also allows users to bookmark a specific section or slide. &lt;strong&gt;Be careful!&lt;/strong&gt; anchors can not have the same value as any ID element on the site (or NAME element for IE). Now anchors can be defined directly in the HTML structure by using the attribute &lt;code&gt;data-anchor&lt;/code&gt; as explained here.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;lockAnchors&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Determines whether anchors in the URL will have any effect at all in the library. You can still using anchors internally for your own functions and callbacks, but they won&#39;t have any effect in the scrolling of the site. Useful if you want to combine fullPage.js with other plugins using anchor in the URL.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt; It is helpful to understand that the values in the &lt;code&gt;anchors&lt;/code&gt; option array correlate directly to the element with the class of &lt;code&gt;.section&lt;/code&gt; by it&#39;s position in the markup.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;easing&lt;/code&gt;: (default &lt;code&gt;easeInOutCubic&lt;/code&gt;) Defines the transition effect to use for the vertical and horizontal scrolling. It requires the file &lt;code&gt;vendors/easings.min.js&lt;/code&gt; or &lt;a href=&quot;http://jqueryui.com/&quot;&gt;jQuery UI&lt;/a&gt; for using some of &lt;a href=&quot;http://api.jqueryui.com/easings/&quot;&gt;its transitions&lt;/a&gt;. Other libraries could be used instead.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;easingcss3&lt;/code&gt;: (default &lt;code&gt;ease&lt;/code&gt;) Defines the transition effect to use in case of using &lt;code&gt;css3:true&lt;/code&gt;. You can use the &lt;a href=&quot;http://www.w3schools.com/cssref/css3_pr_transition-timing-function.asp&quot;&gt;pre-defined ones&lt;/a&gt; (such as &lt;code&gt;linear&lt;/code&gt;, &lt;code&gt;ease-out&lt;/code&gt;...) or create your own ones using the &lt;code&gt;cubic-bezier&lt;/code&gt; function. You might want to use &lt;a href=&quot;http://matthewlein.com/ceaser/&quot;&gt;Matthew Lein CSS Easing Animation Tool&lt;/a&gt; for it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;loopTop&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Defines whether scrolling up in the first section should scroll to the last one or not.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;loopBottom&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Defines whether scrolling down in the last section should scroll to the first one or not.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;loopHorizontal&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines whether horizontal sliders will loop after reaching the last or previous slide or not.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;css3&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;). Defines whether to use JavaScript or CSS3 transforms to scroll within sections and slides. Useful to speed up the movement in tablet and mobile devices with browsers supporting CSS3. If this option is set to &lt;code&gt;true&lt;/code&gt; and the browser doesn&#39;t support CSS3, a fallback will be used instead.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;autoScrolling&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines whether to use the &quot;automatic&quot; scrolling or the &quot;normal&quot; one. It also has affects the way the sections fit in the browser/device window in tablets and mobile phones.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;fitToSection&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Determines whether or not to fit sections to the viewport or not. When set to &lt;code&gt;true&lt;/code&gt; the current active section will always fill the whole viewport. Otherwise the user will be free to stop in the middle of a section.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;fitToSectionDelay&lt;/code&gt;: (default 1000). If &lt;code&gt;fitToSection&lt;/code&gt; is set to true, this delays the fitting by the configured milliseconds.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollBar&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Determines whether to use scroll bar for the &lt;strong&gt;vertical sections&lt;/strong&gt; on site or not. In case of using scroll bar, the &lt;code&gt;autoScrolling&lt;/code&gt; functionality will still work as expected. The user will also be free to scroll the site with the scroll bar and fullPage.js will fit the section in the screen when scrolling finishes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;paddingTop&lt;/code&gt;: (default &lt;code&gt;0&lt;/code&gt;) Defines the top padding for each section with a numerical value and its measure (paddingTop: &#39;10px&#39;, paddingTop: &#39;10em&#39;...) Useful in case of using a fixed header.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;paddingBottom&lt;/code&gt;: (default &lt;code&gt;0&lt;/code&gt;) Defines the bottom padding for each section with a numerical value and its measure (paddingBottom: &#39;10px&#39;, paddingBottom: &#39;10em&#39;...). Useful in case of using a fixed footer.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;fixedElements&lt;/code&gt;: (default &lt;code&gt;null&lt;/code&gt;) Defines which elements will be taken off the scrolling structure of the plugin which is necessary when using the &lt;code&gt;css3&lt;/code&gt; option to keep them fixed. It requires a string with the Javascript selectors for those elements. (For example: &lt;code&gt;fixedElements: &#39;#element1, .element2&#39;&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;normalScrollElements&lt;/code&gt;: (default &lt;code&gt;null&lt;/code&gt;) &lt;a href=&quot;https://codepen.io/alvarotrigo/pen/RmVazM&quot;&gt;Demo&lt;/a&gt; If you want to avoid the auto scroll when scrolling over some elements, this is the option you need to use. (useful for maps, scrolling divs etc.) It requires a string with the Javascript selectors for those elements. (For example: &lt;code&gt;normalScrollElements: &#39;#element1, .element2&#39;&lt;/code&gt;). This option should not be applied to any section/slide element itself.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;bigSectionsDestination&lt;/code&gt;: (default &lt;code&gt;null&lt;/code&gt;) &lt;a href=&quot;https://codepen.io/alvarotrigo/pen/vYLdMrx&quot;&gt;Demo&lt;/a&gt; Defines how to scroll to a section which height is bigger than the viewport and when not using &lt;code&gt;scrollOverflow:true&lt;/code&gt;. (Read &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#creating-smaller-or-bigger-sections&quot;&gt;how to create smaller or bigger sections&lt;/a&gt;). By default fullPage.js scrolls to the top if you come from a section above the destination one and to the bottom if you come from a section below the destination one. Possible values are &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keyboardScrolling&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines if the content can be navigated using the keyboard.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;touchSensitivity&lt;/code&gt;: (default &lt;code&gt;5&lt;/code&gt;) Defines a percentage of the browsers window width/height, and how far a swipe must measure for navigating to the next section / slide&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;continuousVertical&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Defines whether scrolling down in the last section should scroll down to the first one and if scrolling up in the first section should scroll up to the last one. Not compatible with &lt;code&gt;loopTop&lt;/code&gt;, &lt;code&gt;loopBottom&lt;/code&gt; or any scroll bar present in the site (&lt;code&gt;scrollBar:true&lt;/code&gt; or &lt;code&gt;autoScrolling:false&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;continuousHorizontal&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether sliding right in the last slide should slide right to the first one or not, and if scrolling left in the first slide should slide left to the last one or not. Not compatible with &lt;code&gt;loopHorizontal&lt;/code&gt;. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollHorizontally&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether to slide horizontally within sliders by using the mouse wheel or trackpad. It can only be used when using: &lt;code&gt;autoScrolling:true&lt;/code&gt;. Ideal for story telling. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;interlockedSlides&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Determines whether moving one horizontal slider will force the sliding of sliders in other section in the same direction. Possible values are &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or an array with the interlocked sections. For example &lt;code&gt;[1,3,5]&lt;/code&gt; starting by 1. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;dragAndMove&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Enables or disables the dragging and flicking of sections and slides by using mouse or fingers. Requires fullpage.js &amp;gt;= 3.0.1. Possible values are:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: enables the feature.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: disables the feature.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;vertical&lt;/code&gt;: enables the feature only vertically.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;horizontal&lt;/code&gt;: enables the feature only horizontally.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;fingersonly&lt;/code&gt;: enables the feature for touch devices only.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;mouseonly&lt;/code&gt;: enables the feature for desktop devices only (mouse and trackpad).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;offsetSections&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;)&lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Provides a way to use non full screen sections based on percentage. Ideal to show visitors there&#39;s more content in the site by showing part of the next or previous section. Requires fullPage.js &amp;gt;= 3.0.1. To define the percentage of each section the attribute &lt;code&gt;data-percentage&lt;/code&gt; must be used. The centering of the section in the viewport can be determined by using a boolean value in the attribute &lt;code&gt;data-centered&lt;/code&gt; (default to &lt;code&gt;true&lt;/code&gt; if not specified). For example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;    &amp;lt;div class=&quot;section&quot; data-percentage=&quot;80&quot; data-centered=&quot;true&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;resetSliders&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;). &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to reset every slider after leaving its section. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;fadingEffect&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;). &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether to use a fading effect or not instead of the default scrolling one. Possible values are &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;sections&lt;/code&gt;, &lt;code&gt;slides&lt;/code&gt;. It can therefore be applied just vertically or horizontally, or to both at the time. It can only be used when using: &lt;code&gt;autoScrolling:true&lt;/code&gt;. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;animateAnchor&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines whether the load of the site when given an anchor (#) will scroll with animation to its destination or will directly load on the given section.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;recordHistory&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines whether to push the state of the site to the browser&#39;s history. When set to &lt;code&gt;true&lt;/code&gt; each section/slide of the site will act as a new page and the back and forward buttons of the browser will scroll the sections/slides to reach the previous or next state of the site. When set to &lt;code&gt;false&lt;/code&gt;, the URL will keep changing but will have no effect on the browser&#39;s history. This option is automatically turned off when using &lt;code&gt;autoScrolling:false&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;menu&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) A selector can be used to specify the menu to link with the sections. This way the scrolling of the sections will activate the corresponding element in the menu using the class &lt;code&gt;active&lt;/code&gt;. This won&#39;t generate a menu but will just add the &lt;code&gt;active&lt;/code&gt; class to the element in the given menu with the corresponding anchor links. In order to link the elements of the menu with the sections, an HTML 5 data-tag (&lt;code&gt;data-menuanchor&lt;/code&gt;) will be needed to use with the same anchor links as used within the sections. Example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;ul id=&quot;myMenu&quot;&amp;gt;
	&amp;lt;li data-menuanchor=&quot;firstPage&quot; class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;#firstPage&quot;&amp;gt;First section&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
	&amp;lt;li data-menuanchor=&quot;secondPage&quot;&amp;gt;&amp;lt;a href=&quot;#secondPage&quot;&amp;gt;Second section&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
	&amp;lt;li data-menuanchor=&quot;thirdPage&quot;&amp;gt;&amp;lt;a href=&quot;#thirdPage&quot;&amp;gt;Third section&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
	&amp;lt;li data-menuanchor=&quot;fourthPage&quot;&amp;gt;&amp;lt;a href=&quot;#fourthPage&quot;&amp;gt;Fourth section&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	anchors: [&#39;firstPage&#39;, &#39;secondPage&#39;, &#39;thirdPage&#39;, &#39;fourthPage&#39;, &#39;lastPage&#39;],
	menu: &#39;#myMenu&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the menu element should be placed outside the fullpage wrapper in order to avoid problem when using &lt;code&gt;css3:true&lt;/code&gt;. Otherwise it will be appended to the &lt;code&gt;body&lt;/code&gt; by the plugin itself.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;navigation&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) If set to &lt;code&gt;true&lt;/code&gt;, it will show a navigation bar made up of small circles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;navigationPosition&lt;/code&gt;: (default &lt;code&gt;none&lt;/code&gt;) It can be set to &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt; and defines which position the navigation bar will be shown (if using one).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;navigationTooltips&lt;/code&gt;: (default []) Defines the tooltips to show for the navigation circles in case they are being used. Example: &lt;code&gt;navigationTooltips: [&#39;firstSlide&#39;, &#39;secondSlide&#39;]&lt;/code&gt;. You can also define them by using the attribute &lt;code&gt;data-tooltip&lt;/code&gt; in each section if you prefer.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;showActiveTooltip&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Shows a persistent tooltip for the actively viewed section in the vertical navigation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;slidesNavigation&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) If set to &lt;code&gt;true&lt;/code&gt; it will show a navigation bar made up of small circles for each landscape slider on the site.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;slidesNavPosition&lt;/code&gt;: (default &lt;code&gt;bottom&lt;/code&gt;) Defines the position for the landscape navigation bar for sliders. Admits &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; as values. You may want to modify the CSS styles to determine the distance from the top or bottom as well as any other style such as color.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollOverflow&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) defines whether or not to create a scroll for the section/slide in case its content is bigger than the height of it. When set to &lt;code&gt;true&lt;/code&gt;, your content will be wrapped by the plugin. Consider using delegation or load your other scripts in the &lt;code&gt;afterRender&lt;/code&gt; callback. In case of setting it to &lt;code&gt;true&lt;/code&gt;, it requires the vendor library &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/raw/master/vendors/scrolloverflow.min.js&quot;&gt;&lt;code&gt;scrolloverflow.min.js&lt;/code&gt;&lt;/a&gt;. This file has to be loaded before the fullPage.js plugin, but after jQuery ( in case of using it). For example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;vendors/scrolloverflow.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to prevent fullpage.js from creating the scrollbar in certain sections or slides use the class &lt;code&gt;fp-noscroll&lt;/code&gt;. For example: &lt;code&gt;&amp;lt;div class=&quot;section fp-noscroll&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can also prevent scrolloverflow from getting applied on responsive mode when using &lt;code&gt;fp-auto-height-responsive&lt;/code&gt; in the section element.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollOverflowReset&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. When set to &lt;code&gt;true&lt;/code&gt; it scrolls up the content of the section/slide with scroll bar when leaving to another vertical section. This way the section/slide will always show the start of its content even when scrolling from a section under it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollOverflowOptions&lt;/code&gt;: when using scrollOverflow:true fullpage.js will make use of a forked and modified version of &lt;a href=&quot;https://github.com/cubiq/iscroll/&quot;&gt;iScroll.js library&lt;/a&gt;. You can customize the scrolling behaviour by providing fullpage.js with the iScroll.js options you want to use. Check &lt;a href=&quot;https://github.com/cubiq/iscroll&quot;&gt;its documentation&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sectionSelector&lt;/code&gt;: (default &lt;code&gt;.section&lt;/code&gt;) Defines the Javascript selector used for the plugin sections. It might need to be changed sometimes to avoid problem with other plugins using the same selectors as fullpage.js.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;slideSelector&lt;/code&gt;: (default &lt;code&gt;.slide&lt;/code&gt;) Defines the Javascript selector used for the plugin slides. It might need to be changed sometimes to avoid problem with other plugins using the same selectors as fullpage.js.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;responsiveWidth&lt;/code&gt;: (default &lt;code&gt;0&lt;/code&gt;) A normal scroll (&lt;code&gt;autoScrolling:false&lt;/code&gt;) will be used under the defined width in pixels. A class &lt;code&gt;fp-responsive&lt;/code&gt; is added to the body tag in case the user wants to use it for their own responsive CSS. For example, if set to 900, whenever the browser&#39;s width is less than 900 the plugin will scroll like a normal site.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;responsiveHeight&lt;/code&gt;: (default &lt;code&gt;0&lt;/code&gt;) A normal scroll (&lt;code&gt;autoScrolling:false&lt;/code&gt;) will be used under the defined height in pixels. A class &lt;code&gt;fp-responsive&lt;/code&gt; is added to the body tag in case the user wants to use it for their own responsive CSS. For example, if set to 900, whenever the browser&#39;s height is less than 900 the plugin will scroll like a normal site.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;responsiveSlides&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. When set to &lt;code&gt;true&lt;/code&gt; slides will be turned into vertical sections when responsive mode is fired. (by using the &lt;code&gt;responsiveWidth&lt;/code&gt; or &lt;code&gt;responsiveHeight&lt;/code&gt; options detailed above). Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;parallax&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to use the parallax backgrounds effects on sections / slides. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension---Parallax&quot;&gt;Read more about how to apply the parallax option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;parallaxOptions&lt;/code&gt;: (default: &lt;code&gt;{ type: &#39;reveal&#39;, percentage: 62, property: &#39;translate&#39;}&lt;/code&gt;). Allows to configure the parameters for the parallax backgrounds effect when using the option &lt;code&gt;parallax:true&lt;/code&gt;. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension---Parallax&quot;&gt;Read more about how to apply the parallax option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;dropEffect&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to use the drop effect on sections / slides. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Drop-Effect&quot;&gt;Read more about how to apply the the drop effect option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;dropEffectOptions&lt;/code&gt;: (default: &lt;code&gt;{ speed: 2300, color: &#39;#F82F4D&#39;, zIndex: 9999}&lt;/code&gt;). Allows to configure the parameters for the drop effect when using the option &lt;code&gt;dropEffect:true&lt;/code&gt;.&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Drop-Effect&quot;&gt;Read more about how to apply the the drop effect option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;waterEffect&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to use the water effect on sections / slides. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Water-Effect&quot;&gt;Read more about how to apply the the water effect option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;waterEffectOptions&lt;/code&gt;: (default: &lt;code&gt;{ animateContent: true, animateOnMouseMove: true}&lt;/code&gt;). Allows to configure the parameters for the water effect when using the option &lt;code&gt;waterEffect:true&lt;/code&gt;.&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Water-Effect&quot;&gt;Read more about how to apply the the water effect option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;cards&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to use the cards effect on sections/slides. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Cards&quot;&gt;Read more about how to apply the cards option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;cardsOptions&lt;/code&gt;: (default: &lt;code&gt;{ perspective: 100, fadeContent: true, fadeBackground: true}&lt;/code&gt;). Allows you to configure the parameters for the cards effect when using the option &lt;code&gt;cards:true&lt;/code&gt;. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Cards&quot;&gt;Read more about how to apply the cards option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;lazyLoading&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Lazy loading is active by default which means it will lazy load any media element containing the attribute &lt;code&gt;data-src&lt;/code&gt; as detailed in the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#lazy-loading&quot;&gt;Lazy Loading docs&lt;/a&gt; . If you want to use any other lazy loading library you can disable this fullpage.js feature.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Methods&lt;/h2&gt; 
&lt;p&gt;You can see them in action &lt;a href=&quot;http://alvarotrigo.com/fullPage/examples/methods.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;getActiveSection()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://codepen.io/alvarotrigo/pen/VdpzRN/&quot;&gt;Demo&lt;/a&gt; Gets an Object (type &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#callbacks&quot;&gt;Section&lt;/a&gt;) containing the active section and its properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.getActiveSection();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;getActiveSlide()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://codepen.io/alvarotrigo/pen/VdpzRN/&quot;&gt;Demo&lt;/a&gt; Gets an Object (type &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#callbacks&quot;&gt;Slide&lt;/a&gt;) containing the active slide and its properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.getActiveSlide();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;moveSectionUp()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/GJXNMN&quot;&gt;Demo&lt;/a&gt; Scrolls one section up:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.moveSectionUp();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;moveSectionDown()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/jPvVZx&quot;&gt;Demo&lt;/a&gt; Scrolls one section down:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.moveSectionDown();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;moveTo(section, slide)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/doqOmY&quot;&gt;Demo&lt;/a&gt; Scrolls the page to the given section and slide. The first section will have the index 1 whilst the first slide, the visible one by default, will have index 0.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/*Scrolling to the section with the anchor link `firstSlide` and to the 2nd Slide */
fullpage_api.moveTo(&#39;firstSlide&#39;, 2);

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Scrolling to the 3rd section (with index 3) in the site
fullpage_api.moveTo(3, 0);

//Which is the same as
fullpage_api.moveTo(3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;silentMoveTo(section, slide)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/doqOeY&quot;&gt;Demo&lt;/a&gt; Exactly the same as &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#movetosection-slide&quot;&gt;&lt;code&gt;moveTo&lt;/code&gt;&lt;/a&gt; but in this case it performs the scroll without animation. A direct jump to the destination.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/*Scrolling to the section with the anchor link `firstSlide` and to the 2nd Slide */
fullpage_api.silentMoveTo(&#39;firstSlide&#39;, 2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;moveSlideRight()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/Wvgoyz&quot;&gt;Demo&lt;/a&gt; Scrolls the horizontal slider of the current section to the next slide:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.moveSlideRight();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;moveSlideLeft()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/gpdLjW&quot;&gt;Demo&lt;/a&gt; Scrolls the horizontal slider of the current section to the previous slide:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.moveSlideLeft();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setAutoScrolling(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/rVZWrR&quot;&gt;Demo&lt;/a&gt; Sets the scrolling configuration in real time. Defines the way the page scrolling behaves. If it is set to &lt;code&gt;true&lt;/code&gt;, it will use the &quot;automatic&quot; scrolling, otherwise, it will use the &quot;manual&quot; or &quot;normal&quot; scrolling of the site.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setAutoScrolling(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setFitToSection(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/GJXNYm&quot;&gt;Demo&lt;/a&gt; Sets the value for the option &lt;code&gt;fitToSection&lt;/code&gt; determining whether to fit the section in the screen or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setFitToSection(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;fitToSection()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/JWWagj&quot;&gt;Demo&lt;/a&gt; Scrolls to the nearest active section fitting it in the viewport.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.fitToSection();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setLockAnchors(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/yNxVRQ&quot;&gt;Demo&lt;/a&gt; Sets the value for the option &lt;code&gt;lockAnchors&lt;/code&gt; determining whether anchors will have any effect in the URL or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setLockAnchors(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setAllowScrolling(boolean, [directions])&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/EjeNdq&quot;&gt;Demo&lt;/a&gt; Adds or remove the possibility of scrolling through sections/slides by using the mouse wheel/trackpad or touch gestures (which is active by default). Note this won&#39;t disable the keyboard scrolling. You would need to use &lt;code&gt;setKeyboardScrolling&lt;/code&gt; for it.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;directions&lt;/code&gt;: (optional parameter) Admitted values: &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or a combination of them separated by commas like &lt;code&gt;down, right&lt;/code&gt;. It defines the direction for which the scrolling will be enabled or disabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
//disabling scrolling
fullpage_api.setAllowScrolling(false);

//disabling scrolling down
fullpage_api.setAllowScrolling(false, &#39;down&#39;);

//disabling scrolling down and right
fullpage_api.setAllowScrolling(false, &#39;down, right&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setKeyboardScrolling(boolean, [directions])&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/GJXNwm&quot;&gt;Demo&lt;/a&gt; Adds or remove the possibility of scrolling through sections by using the keyboard (which is active by default).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;directions&lt;/code&gt;: (optional parameter) Admitted values: &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or a combination of them separated by commas like &lt;code&gt;down, right&lt;/code&gt;. It defines the direction for which the scrolling will be enabled or disabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//disabling all keyboard scrolling
fullpage_api.setKeyboardScrolling(false);

//disabling keyboard scrolling down
fullpage_api.setKeyboardScrolling(false, &#39;down&#39;);

//disabling keyboard scrolling down and right
fullpage_api.setKeyboardScrolling(false, &#39;down, right&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setRecordHistory(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/rVZWQb&quot;&gt;Demo&lt;/a&gt; Defines whether to record the history for each hash change in the URL.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setRecordHistory(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setScrollingSpeed(milliseconds)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/NqLbeY&quot;&gt;Demo&lt;/a&gt; Defines the scrolling speed in milliseconds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setScrollingSpeed(700);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;destroy(type)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/bdxBzv&quot;&gt;Demo&lt;/a&gt; Destroys the plugin events and optionally its HTML markup and styles. Ideal to use when using AJAX to load content.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: (optional parameter) can be empty or &lt;code&gt;all&lt;/code&gt;. If &lt;code&gt;all&lt;/code&gt; is passed, the HTML markup and styles used by fullpage.js will be removed. This way the original HTML markup, the one used before any plugin modification is made, will be maintained.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//destroying all Javascript events created by fullPage.js (scrolls, hashchange in the URL...)
fullpage_api.destroy();

//destroying all Javascript events and any modification done by fullPage.js over your original HTML markup.
fullpage_api.destroy(&#39;all&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;reBuild()&lt;/h3&gt; 
&lt;p&gt;Updates the DOM structure to fit the new window size or its contents. Ideal to use in combination with AJAX calls or external changes in the DOM structure of the site, specially when using &lt;code&gt;scrollOverflow:true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.reBuild();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setResponsive(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/WxOyLA&quot;&gt;Demo&lt;/a&gt; Sets the responsive mode of the page. When set to &lt;code&gt;true&lt;/code&gt; the autoScrolling will be turned off and the result will be exactly the same one as when the &lt;code&gt;responsiveWidth&lt;/code&gt; or &lt;code&gt;responsiveHeight&lt;/code&gt; options get fired.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setResponsive(true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;responsiveSlides.toSections()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Requires fullpage.js &amp;gt;= 3.0.1. Turns horizontal slides into vertical sections.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.responsiveSlides.toSections();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;responsiveSlides.toSlides()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Requires fullpage.js &amp;gt;= 3.0.1. Turns back the original slides (now converted into vertical sections) into horizontal slides again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.responsiveSlides.toSlides();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Callbacks&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/XbPNQv&quot;&gt;Demo&lt;/a&gt; You can see them in action &lt;a href=&quot;http://alvarotrigo.com/fullPage/examples/callbacks.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some callbacks, such as &lt;code&gt;onLeave&lt;/code&gt; will contain Object type of parameters containing the following properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;anchor&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; item&#39;s anchor.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;index&lt;/code&gt;: &lt;em&gt;(Number)&lt;/em&gt; item&#39;s index.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;item&lt;/code&gt;: &lt;em&gt;(DOM element)&lt;/em&gt; item element.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;isFirst&lt;/code&gt;: &lt;em&gt;(Boolean)&lt;/em&gt; determines if the item is the first child.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;isLast&lt;/code&gt;: &lt;em&gt;(Boolean)&lt;/em&gt; determines if the item is the last child.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;afterLoad (origin, destination, direction)&lt;/h3&gt; 
&lt;p&gt;Callback fired once the sections have been loaded, after the scrolling has ended. Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;origin&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; section of origin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; destination section.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; it will take the values &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;down&lt;/code&gt; depending on the scrolling direction.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	anchors: [&#39;firstPage&#39;, &#39;secondPage&#39;, &#39;thirdPage&#39;, &#39;fourthPage&#39;, &#39;lastPage&#39;],

	afterLoad: function(origin, destination, direction){
		var loadedSection = this;

		//using index
		if(origin.index == 2){
			alert(&quot;Section 3 ended loading&quot;);
		}

		//using anchorLink
		if(origin.anchor == &#39;secondSlide&#39;){
			alert(&quot;Section 2 ended loading&quot;);
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;onLeave (&lt;code&gt;origin&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;This callback is fired once the user leaves a section, in the transition to the new section. Returning &lt;code&gt;false&lt;/code&gt; will cancel the move before it takes place.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;origin&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; section of origin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; destination section.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; it will take the values &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;down&lt;/code&gt; depending on the scrolling direction.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	onLeave: function(origin, destination, direction){
		var leavingSection = this;

		//after leaving section 2
		if(origin.index == 1 &amp;amp;&amp;amp; direction ==&#39;down&#39;){
			alert(&quot;Going to section 3!&quot;);
		}

		else if(origin.index == 1 &amp;amp;&amp;amp; direction == &#39;up&#39;){
			alert(&quot;Going to section 1!&quot;);
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cancelling the scroll before it takes place&lt;/h4&gt; 
&lt;p&gt;You can cancel the scroll by returning &lt;code&gt;false&lt;/code&gt; on the &lt;code&gt;onLeave&lt;/code&gt; callback:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	onLeave: function(origin, destination, direction){
		//it won&#39;t scroll if the destination is the 3rd section
		if(destination.index == 2){
			return false;
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterRender()&lt;/h3&gt; 
&lt;p&gt;This callback is fired just after the structure of the page is generated. This is the callback you want to use to initialize other plugins or fire any code which requires the document to be ready (as this plugin modifies the DOM to create the resulting structure). See &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/FAQ---Frequently-Answered-Questions&quot;&gt;FAQs&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	afterRender: function(){
		var pluginContainer = this;
		alert(&quot;The resulting DOM structure is ready&quot;);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterResize(width, height)&lt;/h3&gt; 
&lt;p&gt;This callback is fired after resizing the browser&#39;s window. Just after the sections are resized.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: &lt;em&gt;(Number)&lt;/em&gt; window&#39;s width.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: &lt;em&gt;(Number)&lt;/em&gt; window&#39;s height.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	afterResize: function(width, height){
		var fullpageContainer = this;
		alert(&quot;The sections have finished resizing&quot;);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterReBuild()&lt;/h3&gt; 
&lt;p&gt;This callback is fired after manually re-building fullpage.js by calling &lt;code&gt;fullpage_api.reBuild()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	afterReBuild: function(){
		console.log(&quot;fullPage.js has manually being re-builded&quot;);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterResponsive(&lt;code&gt;isResponsive&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;This callback is fired after fullpage.js changes from normal to responsive mode or from responsive mode to normal mode.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;isResponsive&lt;/code&gt;: &lt;em&gt;(Boolean)&lt;/em&gt; determines if it enters into responsive mode (&lt;code&gt;true&lt;/code&gt;) or goes back to normal mode (&lt;code&gt;false&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	afterResponsive: function(isResponsive){
		alert(&quot;Is responsive: &quot; + isResponsive);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterSlideLoad (&lt;code&gt;section&lt;/code&gt;, &lt;code&gt;origin&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;Callback fired once the slide of a section have been loaded, after the scrolling has ended.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;section&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; active vertical section.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;origin&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; horizontal slide of origin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; destination horizontal slide.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;left&lt;/code&gt; depending on the scrolling direction.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	anchors: [&#39;firstPage&#39;, &#39;secondPage&#39;, &#39;thirdPage&#39;, &#39;fourthPage&#39;, &#39;lastPage&#39;],

	afterSlideLoad: function( section, origin, destination, direction){
		var loadedSlide = this;

		//first slide of the second section
		if(section.anchor == &#39;secondPage&#39; &amp;amp;&amp;amp; destination.index == 1){
			alert(&quot;First slide loaded&quot;);
		}

		//second slide of the second section (supposing #secondSlide is the
		//anchor for the second slide)
		if(section.index == 1 &amp;amp;&amp;amp; destination.anchor == &#39;secondSlide&#39;){
			alert(&quot;Second slide loaded&quot;);
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;onSlideLeave (&lt;code&gt;section&lt;/code&gt;, &lt;code&gt;origin&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;This callback is fired once the user leaves an slide to go to another, in the transition to the new slide. Returning &lt;code&gt;false&lt;/code&gt; will cancel the move before it takes place.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;section&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; active vertical section.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;origin&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; horizontal slide of origin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; destination horizontal slide.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;left&lt;/code&gt; depending on the scrolling direction.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	onSlideLeave: function( section, origin, destination, direction){
		var leavingSlide = this;

		//leaving the first slide of the 2nd Section to the right
		if(section.index == 1 &amp;amp;&amp;amp; origin.index == 0 &amp;amp;&amp;amp; direction == &#39;right&#39;){
			alert(&quot;Leaving the fist slide!!&quot;);
		}

		//leaving the 3rd slide of the 2nd Section to the left
		if(section.index == 1 &amp;amp;&amp;amp; origin.index == 2 &amp;amp;&amp;amp; direction == &#39;left&#39;){
			alert(&quot;Going to slide 2! &quot;);
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cancelling a move before it takes place&lt;/h4&gt; 
&lt;p&gt;You can cancel a move by returning &lt;code&gt;false&lt;/code&gt; on the &lt;code&gt;onSlideLeave&lt;/code&gt; callback. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#cancelling-the-scroll-before-it-takes-place&quot;&gt;Same as when canceling a movement with &lt;code&gt;onLeave&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Reporting issues&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Please, look for your issue before asking using the github issues search.&lt;/li&gt; 
 &lt;li&gt;Make sure you use the latest fullpage.js version. No support is provided for older versions.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/issues&quot;&gt;the Github Issues forum&lt;/a&gt; to create issues.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;An isolated reproduction of the issue will be required.&lt;/strong&gt; Make use of &lt;a href=&quot;https://jsfiddle.net/alvarotrigo/ea17skjr/&quot;&gt;jsfiddle&lt;/a&gt; or &lt;a href=&quot;http://codepen.io/alvarotrigo/pen/NxyPPp&quot;&gt;codepen&lt;/a&gt; for it if possible.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Contributing to fullpage.js&lt;/h1&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Contributing-to-fullpage.js&quot;&gt;Contributing to fullpage.js&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Changelog&lt;/h1&gt; 
&lt;p&gt;To see the list of recent changes, see &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/releases&quot;&gt;Releases section&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Build tasks&lt;/h1&gt; 
&lt;p&gt;Want to build fullpage.js distribution files? Please see &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Build-tasks&quot;&gt;Build Tasks&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wordpress Plugin &lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-gutenberg/&quot;&gt;for Gutenberg&lt;/a&gt; and &lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-elementor/&quot;&gt;for Elementor&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/utils/wordpress.html&quot;&gt;Wordpress theme&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/vue-fullpage.js&quot;&gt;Official Vue.js wrapper component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/react-fullpage&quot;&gt;Official React.js wrapper component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/angular-fullpage&quot;&gt;Official Angular wrapper component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://matthewlein.com/ceaser/&quot;&gt;CSS Easing Animation Tool - Matthew Lein&lt;/a&gt; (useful to define the &lt;code&gt;easingcss3&lt;/code&gt; value)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jsdelivr.com/package/npm/fullpage.js&quot;&gt;fullPage.js jsDelivr CDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freestream/oc-parallax-plugin&quot;&gt;fullPage.js plugin for October CMS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/meiblorn/ng2-fullpage&quot;&gt;fullPage.js Angular2 directive&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellsan631/angular-fullpage.js&quot;&gt;fullPage.js angular directive&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/ember-cli-fullpagejs&quot;&gt;fullPage.js ember-cli addon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/fullpagejs-rails&quot;&gt;fullPage.js Rails Ruby Gem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmautomatizacion/angular-fullpage.js&quot;&gt;Angular fullPage.js - Adaptation for Angular.js v1.x&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://premium.wpmudev.org/blog/build-apple-inspired-full-page-scrolling-pages-for-your-wordpress-site/&quot;&gt;Integrating fullPage.js with Wordpress (Tutorial)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-divi/&quot;&gt;Wordpress Plugin for Divi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-elementor/&quot;&gt;Wordpress Plugin for Elementor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Who is using fullPage.js&lt;/h2&gt; 
&lt;p&gt;If you want your page to be listed here, please &lt;a href=&quot;mailto:alvaro@alvarotrigo.com&quot;&gt;contact me&lt;/a&gt; with the URL.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.yourprimer.com/&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/google-4.png&quot; alt=&quot;Google&quot;&gt;&lt;/a&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/cocacola-4.png&quot; alt=&quot;Coca-cola&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/ebay-4.png&quot; alt=&quot;eBay&quot;&gt; &lt;a href=&quot;http://www.bbc.co.uk/news/resources/idt-d88680d1-26f2-4863-be95-83298fd01e02&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/bbc-4.png&quot; alt=&quot;BBC&quot;&gt;&lt;/a&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/sony-4.png&quot; alt=&quot;Sony&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/vodafone-5.png&quot; alt=&quot;Vodafone&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/british-airways-5.png&quot; alt=&quot;British Airways&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/mcdonalds-6.png&quot; alt=&quot;McDonalds&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/ea-6.png&quot; alt=&quot;EA&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/vogue-6.png&quot; alt=&quot;Vogue&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/mi-6.png&quot; alt=&quot;Mi&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/mercedes-5.png&quot; alt=&quot;Mercedes&quot;&gt; &lt;a href=&quot;http://www.sanyang.com.tw/service/Conception/&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/sym-5.png&quot; alt=&quot;sym&quot;&gt;&lt;/a&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/bugatti-5.png&quot; alt=&quot;Bugatti&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/edarling-5.png&quot; alt=&quot;eDarling&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/ubisoft-5.png&quot; alt=&quot;Ubisoft&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coca-colacompany.com/annual-review/2017/index.html&quot;&gt;https://www.coca-colacompany.com/annual-review/2017/index.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/resources/idt-d88680d1-26f2-4863-be95-83298fd01e02&quot;&gt;http://www.bbc.co.uk/news/resources/idt-d88680d1-26f2-4863-be95-83298fd01e02&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.newjumoconcept.com/&quot;&gt;http://www.newjumoconcept.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.shootinggalleryasia.com/&quot;&gt;http://www.shootinggalleryasia.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://medoff.ua/en/&quot;&gt;http://medoff.ua/en/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://promo.prestigio.com/grace1/&quot;&gt;http://promo.prestigio.com/grace1/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://torchbrowser.com/&quot;&gt;http://torchbrowser.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://thekorner.fr/&quot;&gt;http://thekorner.fr/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://charlotteaimes.com/&quot;&gt;http://charlotteaimes.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.boxreload.com/&quot;&gt;http://www.boxreload.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://educationaboveall.org/&quot;&gt;http://educationaboveall.org/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://usescribe.com/&quot;&gt;http://usescribe.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://boxx.hk/&quot;&gt;http://boxx.hk/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sanyang.com.tw/service/Conception/&quot;&gt;http://www.sanyang.com.tw/service/Conception/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trasmissione-energia.terna.it/&quot;&gt;http://trasmissione-energia.terna.it/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.villareginateodolinda.it&quot;&gt;http://www.villareginateodolinda.it&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kesstrio.com&quot;&gt;http://www.kesstrio.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ded-morozz.kiev.ua/&quot;&gt;http://ded-morozz.kiev.ua/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dancingroad.com&quot;&gt;http://dancingroad.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.camanihome.com/&quot;&gt;http://www.camanihome.com/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find another list &lt;a href=&quot;http://libscore.com/#$.fn.fullpage&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;Donations would be more than welcome :)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=BEK5JQCQMED4J&amp;amp;lc=GB&amp;amp;item_name=fullPage%2ejs&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/GB/i/btn/btn_donateCC_LG.gif&quot; alt=&quot;Donate&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&quot;https://alvarotrigo.com/#contact&quot;&gt;Become a sponsor&lt;/a&gt;] | &lt;a href=&quot;https://www.patreon.com/fullpagejs&quot;&gt;[Become a patreon]&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.stackpath.com/&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/stackpath3.png&quot; alt=&quot;Stackpath&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.browserstack.com/&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/browserstack3.png&quot; alt=&quot;Browserstack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codepen.com&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/codepen3.png&quot; alt=&quot;CodePen&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefirst.co.uk&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/codefirst2.png&quot; alt=&quot;CodeFirst&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;People&lt;/h3&gt; 
&lt;a href=&quot;https://github.com/donsalvadori&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/avatars/donsalvadori.jpg&quot;&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>sweetalert2/sweetalert2</title>
      <link>https://github.com/sweetalert2/sweetalert2</link>
      <description>&lt;p&gt;A beautiful, responsive, highly customizable and accessible (WAI-ARIA) replacement for JavaScript&#39;s popup boxes. Zero dependencies.&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://sweetalert2.github.io/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/sweetalert2/sweetalert2/master/assets/swal2-logo.png&quot; width=&quot;498&quot; alt=&quot;SweetAlert2&quot;&gt; &lt;/a&gt; 
&lt;p&gt;A beautiful, responsive, customizable, accessible (WAI-ARIA) replacement &lt;br&gt; for JavaScript&#39;s popup boxes. Zero dependencies.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;a href=&quot;https://sweetalert2.github.io/#download&quot;&gt;Installation&lt;/a&gt; | &lt;a href=&quot;https://sweetalert2.github.io/#usage&quot;&gt;Usage&lt;/a&gt; | &lt;a href=&quot;https://sweetalert2.github.io/#examples&quot;&gt;Examples&lt;/a&gt; | &lt;a href=&quot;https://sweetalert2.github.io/recipe-gallery/&quot;&gt;Recipe gallery&lt;/a&gt; | &lt;a href=&quot;https://github.com/sweetalert2/sweetalert2-themes&quot;&gt;Themes&lt;/a&gt; | &lt;a href=&quot;https://github.com/sweetalert2/sweetalert2-react-content&quot;&gt;React&lt;/a&gt; | &lt;a href=&quot;https://github.com/sweetalert2/ngx-sweetalert2&quot;&gt;Angular&lt;/a&gt; | &lt;a href=&quot;https://sweetalert2.github.io/#donations&quot;&gt;&lt;span&gt;‚ù§Ô∏è&lt;/span&gt; Donate&lt;/a&gt;&lt;/h3&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;span&gt;üí∞&lt;/span&gt; &lt;a href=&quot;https://m.do.co/c/12907f2ba0bf&quot;&gt;Get $100 in free credits with DigitalOcean!&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;For all questions related to sponsorship please contact me via email &lt;a href=&quot;mailto:limon.monte@protonmail.com&quot;&gt;limon.monte@protonmail.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://flowcrypt.com/?utm_source=sweetalert2&amp;amp;utm_medium=banner&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/flowcrypt-banner.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sweetalert2/sweetalert2/master/SPONSORS.md&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/plus.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://flowcrypt.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/28631236?s=80&amp;amp;v=4&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://celltrackingapps.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/celltrackingapps.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.mybitcoinslots.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/mybitcoinslots.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://torcstark.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/torc-stark.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sweetalert2/sweetalert2/master/SPONSORS.md&quot;&gt;Become a sponsor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://flowcrypt.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;FlowCrypt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://celltrackingapps.com&quot;&gt;Phone Tracking Apps&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.mybitcoinslots.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;My Bitcoin slots&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://torcstark.com/&quot;&gt;TorcStark&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://coderubik.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/coderubik.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://halvinlaina.fi/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/halvinlaina.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/tiagostutz&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3986989?s=80&amp;amp;v=4&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/sebaebc&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/sebaebc.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coderubik.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;Code Rubik&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://halvinlaina.fi/&quot;&gt;Halvin Laina&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/tiagostutz&quot;&gt;Tiago de Oliveira Stutz&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/sebaebc&quot;&gt;SebaEBC&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;NSFW Sponsors&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.bestrealdoll.com/collections/us-warehouse&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/bestrealdoll.jpeg&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.sexdolltech.com/product-category/us-warehouse/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/sexdolltech.jpeg&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://rosewives.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/rosewives.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bestrealdoll.com/collections/us-warehouse&quot;&gt;BestRealDoll&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.sexdolltech.com/product-category/us-warehouse/&quot;&gt;SexDollTech&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://rosewives.com/&quot;&gt;Rose Wives&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.sexdollsoff.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/sexdollsoff.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://realsexdoll.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/realsexdoll.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.yourdoll.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/yourdoll.jpg&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://anniesdollhouse.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/annies-dollhouse.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://sexdollcenter.vip/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/sexdollcenter.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.sexdollsoff.com/&quot;&gt;SexDollsOff&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://realsexdoll.com/&quot;&gt;RealSexDoll&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.yourdoll.com/&quot;&gt;Your Doll&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://anniesdollhouse.com/&quot;&gt;Annie&#39;s Dollhouse&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://sexdollcenter.vip/&quot;&gt;Sex Doll Center&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://vsdoll.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/vsdoll.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://sexangelbaby.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/sexangelbaby.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://theadulttoyfinder.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/theadulttoyfinder.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.thefreshmaterials.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/fresh-materials.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://vsdoll.com/&quot;&gt;VSDoll&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://sexangelbaby.com/&quot;&gt;SexAngelbaby&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://theadulttoyfinder.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;The Adult Toy Finder&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.thefreshmaterials.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;Fresh Materials&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.joylovedolls.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/joylovedolls.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.mysextoyguide.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/my-sex-toy-guide.jpg&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://www.bestblowjobmachines.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/best-blowjob-machines.jpg&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://sextoycollective.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/sextoycollective.jpg&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://doctorclimax.com/&quot;&gt;&lt;img src=&quot;https://sweetalert2.github.io/images/sponsors/doctorclimax.png&quot; width=&quot;80&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.joylovedolls.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;Joy Love Dolls&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.mysextoyguide.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;My Sex Toy Guide&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bestblowjobmachines.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;Best Blowjob Machines&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://sextoycollective.com/?utm_source=sweetalert2&amp;amp;utm_medium=logo&quot;&gt;STC&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://doctorclimax.com/&quot;&gt;DoctorClimax&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Support and Donations&lt;/h2&gt; 
&lt;p&gt;Has SweetAlert2 helped you create an amazing application? You can show your support via &lt;a href=&quot;https://github.com/sponsors/limonte&quot;&gt;GitHub Sponsors&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Alternative ways for donations (PayPal, cryptocurrencies, etc.) are listed here: &lt;a href=&quot;https://sweetalert2.github.io/#donations&quot;&gt;https://sweetalert2.github.io/#donations&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sweetalert2/sweetalert2/master/DONATIONS.md&quot;&gt;Hall of Donators &lt;span&gt;üèÜ&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>odoo/odoo</title>
      <link>https://github.com/odoo/odoo</link>
      <description>&lt;p&gt;Odoo. Open Source Apps To Grow Your Business.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://runbot.odoo.com/runbot&quot;&gt;&lt;img src=&quot;https://runbot.odoo.com/runbot/badge/flat/1/master.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.odoo.com/documentation/15.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/master-docs-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Tech Doc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.odoo.com/forum/help-1&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/master-help-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Help&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://nightly.odoo.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/master-nightly-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Nightly Builds&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Odoo&lt;/h2&gt; 
&lt;p&gt;Odoo is a suite of web based open source business apps.&lt;/p&gt; 
&lt;p&gt;The main Odoo Apps include an &lt;a href=&quot;https://www.odoo.com/page/crm&quot;&gt;Open Source CRM&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/website&quot;&gt;Website Builder&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/ecommerce&quot;&gt;eCommerce&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/inventory&quot;&gt;Warehouse Management&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/project&quot;&gt;Project Management&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/accounting&quot;&gt;Billing &amp;amp; Accounting&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/point-of-sale-shop&quot;&gt;Point of Sale&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/employees&quot;&gt;Human Resources&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/social-marketing&quot;&gt;Marketing&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/app/manufacturing&quot;&gt;Manufacturing&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/&quot;&gt;...&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Odoo Apps can be used as stand-alone applications, but they also integrate seamlessly so you get a full-featured &lt;a href=&quot;https://www.odoo.com&quot;&gt;Open Source ERP&lt;/a&gt; when you install several Apps.&lt;/p&gt; 
&lt;h2&gt;Getting started with Odoo&lt;/h2&gt; 
&lt;p&gt;For a standard installation please follow the &lt;a href=&quot;https://www.odoo.com/documentation/15.0/administration/install.html&quot;&gt;Setup instructions&lt;/a&gt; from the documentation.&lt;/p&gt; 
&lt;p&gt;To learn the software, we recommend the &lt;a href=&quot;https://www.odoo.com/slides&quot;&gt;Odoo eLearning&lt;/a&gt;, or &lt;a href=&quot;https://www.odoo.com/page/scale-up-business-game&quot;&gt;Scale-up&lt;/a&gt;, the &lt;a href=&quot;https://www.odoo.com/page/scale-up-business-game&quot;&gt;business game&lt;/a&gt;. Developers can start with &lt;a href=&quot;https://www.odoo.com/documentation/15.0/developer/howtos.html&quot;&gt;the developer tutorials&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jackocnr/intl-tel-input</title>
      <link>https://github.com/jackocnr/intl-tel-input</link>
      <description>&lt;p&gt;A JavaScript plugin for entering and validating international telephone numbers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;International Telephone Input &lt;a href=&quot;https://app.travis-ci.com/jackocnr/intl-tel-input&quot;&gt;&lt;img src=&quot;https://app.travis-ci.com/jackocnr/intl-tel-input.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/package-json/v/jackocnr/intl-tel-input.svg?sanitize=true&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/dm/intl-tel-input.svg?sanitize=true&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;A JavaScript plugin for entering and validating international telephone numbers. It adds a flag dropdown to any input, detects the user&#39;s country, displays a relevant placeholder and provides formatting/validation methods.&lt;/p&gt; 
&lt;img src=&quot;https://raw.github.com/jackocnr/intl-tel-input/master/screenshots/vanilla.png&quot; width=&quot;424&quot; height=&quot;246&quot;&gt; 
&lt;p&gt;If you like it, please consider making a donation, which you can do from &lt;a href=&quot;http://intl-tel-input.com&quot;&gt;the demo page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsored by&lt;/h2&gt; 
&lt;img src=&quot;https://raw.github.com/jackocnr/intl-tel-input/master/screenshots/twilio.png&quot; height=&quot;100&quot;&gt; Use 
&lt;a href=&quot;https://www.twilio.com/blog/international-telephone-input-twilio?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=intl_tel_input&quot;&gt;Twilio&#39;s API to build phone verification, SMS 2FA, appointment reminders, marketing notifications and so much more&lt;/a&gt;. We can&#39;t wait to see what you build. 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#demo-and-examples&quot;&gt;Demo and Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#browser-compatibility&quot;&gt;Browser Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#getting-started-using-a-bundler-eg-webpack&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#recommended-usage&quot;&gt;Recommended Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#initialisation-options&quot;&gt;Options&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#public-methods&quot;&gt;Public Methods&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#static-methods&quot;&gt;Static Methods&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#utilities-script&quot;&gt;Utilities Script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#attributions&quot;&gt;Attributions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo and Examples&lt;/h2&gt; 
&lt;p&gt;You can view a live demo and some examples of how to use the various options here: &lt;a href=&quot;http://intl-tel-input.com&quot;&gt;http://intl-tel-input.com&lt;/a&gt;, or try it for yourself using the included demo.html.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automatically select the user&#39;s current country using an IP lookup&lt;/li&gt; 
 &lt;li&gt;Automatically set the input placeholder to an example number for the selected country&lt;/li&gt; 
 &lt;li&gt;Navigate the country dropdown by typing a country&#39;s name, or using up/down keys&lt;/li&gt; 
 &lt;li&gt;Handle phone number extensions&lt;/li&gt; 
 &lt;li&gt;The user types their national number and the plugin gives you the full standardized international number&lt;/li&gt; 
 &lt;li&gt;Full validation, including specific error types&lt;/li&gt; 
 &lt;li&gt;Retina flag icons&lt;/li&gt; 
 &lt;li&gt;Lots of initialisation options for customisation, as well as public methods for interaction&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Browser Compatibility&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Chrome&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;FF&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Safari&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;IE&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Chrome Android&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Mobile Safari&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;IE Mob&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úì&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úì&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úì&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úì&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úì&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úì&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Note: In v12.0.0 we dropped support for IE9 and IE10, because they are no longer supported by any version of Windows - see &lt;a href=&quot;https://www.xfive.co/blog/stop-supporting-ie10-ie9-ie8/&quot;&gt;https://www.xfive.co/blog/stop-supporting-ie10-ie9-ie8/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started (Using a bundler e.g. Webpack)&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install with npm: &lt;code&gt;npm install intl-tel-input --save&lt;/code&gt; or yarn: &lt;code&gt;yarn add intl-tel-input&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Import CSS: &lt;code&gt;import &#39;intl-tel-input/build/css/intlTelInput.css&#39;;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Override the path to flags.png in your CSS&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.iti__flag {background-image: url(&quot;path/to/flags.png&quot;);}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .iti__flag {background-image: url(&quot;path/to/flags@2x.png&quot;);}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Import JS and initialise plugin:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import intlTelInput from &#39;intl-tel-input&#39;;

const input = document.querySelector(&quot;#phone&quot;);
intlTelInput(input, {
    // any initialisation options go here
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Recommended:&lt;/strong&gt; initialise the plugin with the &lt;code&gt;utilsScript&lt;/code&gt; option to enable formatting/validation, and to allow you to extract full international numbers using &lt;code&gt;getNumber&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting Started (Not using a bundler)&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/releases/latest&quot;&gt;latest release&lt;/a&gt;, or better yet install it with &lt;a href=&quot;https://www.npmjs.com/package/intl-tel-input&quot;&gt;npm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Include the stylesheet&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/intlTelInput.css&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Override the path to flags.png in your CSS&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.iti__flag {background-image: url(&quot;path/to/flags.png&quot;);}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .iti__flag {background-image: url(&quot;path/to/flags@2x.png&quot;);}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Add the plugin script and initialise it on your input element&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input type=&quot;tel&quot; id=&quot;phone&quot;&amp;gt;

&amp;lt;script src=&quot;path/to/intlTelInput.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  var input = document.querySelector(&quot;#phone&quot;);
  window.intlTelInput(input, {
    // any initialisation options go here
  });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Recommended:&lt;/strong&gt; initialise the plugin with the &lt;code&gt;utilsScript&lt;/code&gt; option to enable formatting/validation, and to allow you to extract full international numbers using &lt;code&gt;getNumber&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Recommended Usage&lt;/h2&gt; 
&lt;p&gt;We highly recommend you (lazy) load the included utils.js using the &lt;code&gt;utilsScript&lt;/code&gt; option. Then the plugin is built to always deal with numbers in the full international format (e.g. &quot;+17024181234&quot;) and convert them accordingly - even when &lt;code&gt;nationalMode&lt;/code&gt; or &lt;code&gt;separateDialCode&lt;/code&gt; is enabled. We recommend you get, store, and set numbers exclusively in this format for simplicity - then you don&#39;t have to deal with handling the country code separately, as full international numbers include the country code information.&lt;/p&gt; 
&lt;p&gt;You can always get the full international number (including country code) using &lt;code&gt;getNumber&lt;/code&gt;, then you only have to store that one string in your database (you don&#39;t have to store the country separately), and then the next time you initialise the plugin with that number it will automatically set the country and format it according to the options you specify (e.g. if you enable &lt;code&gt;nationalMode&lt;/code&gt; it will automatically remove the international dial code for you).&lt;/p&gt; 
&lt;h2&gt;Initialisation Options&lt;/h2&gt; 
&lt;p&gt;When you initialise the plugin, the first argument is the input element, and the second is an object containing any initialisation options you want, which are detailed below. Note: any options that take country codes should be &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2&quot;&gt;ISO 3166-1 alpha-2&lt;/a&gt; codes&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;allowDropdown&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;br&gt; Whether or not to allow the dropdown. If disabled, there is no dropdown arrow, and the selected flag is not clickable. Also we display the selected flag on the right instead because it is just a marker of state.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;del&gt;autoFormat&lt;/del&gt; [REMOVED]&lt;/strong&gt;&lt;br&gt; Automatically format the number as the user types. Unfortunately this had to be removed for the reasons listed here: &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/issues/346&quot;&gt;#346 Disable and remove autoFormat feature&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;autoHideDialCode&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;br&gt; If there is just a dial code in the input: remove it on blur or submit. This is to prevent just a dial code getting submitted with the form. Requires &lt;code&gt;nationalMode&lt;/code&gt; to be set to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;autoPlaceholder&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&quot;polite&quot;&lt;/code&gt;&lt;br&gt; Set the input&#39;s placeholder to an example number for the selected country, and update it if the country changes. You can specify the number type using the &lt;code&gt;placeholderNumberType&lt;/code&gt; option. By default it is set to &lt;code&gt;&quot;polite&quot;&lt;/code&gt;, which means it will only set the placeholder if the input doesn&#39;t already have one. You can also set it to &lt;code&gt;&quot;aggressive&quot;&lt;/code&gt;, which will replace any existing placeholder, or &lt;code&gt;&quot;off&quot;&lt;/code&gt;. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;customContainer&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;br&gt; Additional classes to add to the parent div.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;customPlaceholder&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt; Change the placeholder generated by autoPlaceholder. Must return a string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;intlTelInput(input, {
  customPlaceholder: function(selectedCountryPlaceholder, selectedCountryData) {
    return &quot;e.g. &quot; + selectedCountryPlaceholder;
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;dropdownContainer&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Node&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt; Expects a node e.g. &lt;code&gt;document.body&lt;/code&gt;. Instead of putting the country dropdown next to the input, append it to the specified node, and it will then be positioned absolutely next to the input using JavaScript. This is useful when the input is inside a container with &lt;code&gt;overflow: hidden&lt;/code&gt;. Note that the absolute positioning can be broken by scrolling, so it will automatically close on the &lt;code&gt;window&lt;/code&gt; scroll event.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;excludeCountries&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;&lt;br&gt; In the dropdown, display all countries except the ones you specify here.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;formatOnDisplay&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;br&gt; Format the input value (according to the &lt;code&gt;nationalMode&lt;/code&gt; option) during initialisation, and on &lt;code&gt;setNumber&lt;/code&gt;. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;geoIpLookup&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt; When setting &lt;code&gt;initialCountry&lt;/code&gt; to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, you must use this option to specify a custom function that looks up the user&#39;s location, and then calls the success callback with the relevant country code. Also note that when instantiating the plugin, if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt; object is defined, one of those is returned under the &lt;code&gt;promise&lt;/code&gt; instance property, so you can do something like &lt;code&gt;iti.promise.then(callback)&lt;/code&gt; to know when initialisation requests like this have completed.&lt;/p&gt; 
&lt;p&gt;Here is an example using the &lt;a href=&quot;https://ipinfo.io/&quot;&gt;ipinfo.io&lt;/a&gt; service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;intlTelInput(input, {
  initialCountry: &quot;auto&quot;,
  geoIpLookup: function(success, failure) {
    $.get(&quot;https://ipinfo.io&quot;, function() {}, &quot;jsonp&quot;).always(function(resp) {
      var countryCode = (resp &amp;amp;&amp;amp; resp.country) ? resp.country : &quot;us&quot;;
      success(countryCode);
    });
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note that the callback must still be called in the event of an error, hence the use of &lt;code&gt;always&lt;/code&gt; in this example.&lt;/em&gt;&lt;br&gt; &lt;em&gt;Tip: store the result in a cookie to avoid repeat lookups!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;hiddenInput&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;br&gt; Add a hidden input with the given name. Alternatively, if your input name contains square brackets (e.g. &lt;code&gt;name=&quot;phone_number[main]&quot;&lt;/code&gt;) then it will give the hidden input the same name, replacing the contents of the brackets with the given name (e.g. if you init the plugin with &lt;code&gt;hiddenInput: &quot;full&quot;&lt;/code&gt;, then in this case the hidden input would have &lt;code&gt;name=&quot;phone_number[full]&quot;&lt;/code&gt;). On submit, it will automatically populate the hidden input with the full international number (using &lt;code&gt;getNumber&lt;/code&gt;). This is a quick way for people using non-Ajax forms to get the full international number, even when &lt;code&gt;nationalMode&lt;/code&gt; is enabled. Avoid this option when using Ajax forms and instead just call &lt;code&gt;getNumber&lt;/code&gt; to get the full international number to send in the request. &lt;em&gt;Note: requires the input to be inside a form element, as this feature works by listening for the submit event on the closest form element. Also note that since this uses &lt;code&gt;getNumber&lt;/code&gt; internally, firstly it requires the &lt;code&gt;utilsScript&lt;/code&gt; option, and secondly it expects a valid number and so should only be used after validation.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;initialCountry&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;br&gt; Set the initial country selection by specifying its country code. You can also set it to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, which will lookup the user&#39;s country based on their IP address (requires the &lt;code&gt;geoIpLookup&lt;/code&gt; option - &lt;a href=&quot;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/default-country-ip.html&quot;&gt;see example&lt;/a&gt;). Note that the &lt;code&gt;&quot;auto&quot;&lt;/code&gt; option will not update the country selection if the input already contains a number.&lt;/p&gt; 
&lt;p&gt;If you leave &lt;code&gt;initialCountry&lt;/code&gt; blank, it will default to the first country in the list.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;localizedCountries&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;&lt;br&gt; Allows to translate the countries by its given iso code e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ &#39;de&#39;: &#39;Deutschland&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;nationalMode&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;br&gt; Allow users to enter national numbers (and not have to think about international dial codes). Formatting, validation and placeholders still work. Then you can use &lt;code&gt;getNumber&lt;/code&gt; to extract a full international number - &lt;a href=&quot;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/national-mode.html&quot;&gt;see example&lt;/a&gt;. This option now defaults to &lt;code&gt;true&lt;/code&gt;, and it is recommended that you leave it that way as it provides a better experience for the user.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;onlyCountries&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;&lt;br&gt; In the dropdown, display only the countries you specify - &lt;a href=&quot;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/only-countries-europe.html&quot;&gt;see example&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;placeholderNumberType&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&quot;MOBILE&quot;&lt;/code&gt;&lt;br&gt; Specify &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/utils.js#L119&quot;&gt;one of the keys&lt;/a&gt; from the global enum &lt;code&gt;intlTelInputUtils.numberType&lt;/code&gt; e.g. &lt;code&gt;&quot;FIXED_LINE&quot;&lt;/code&gt; to set the number type to use for the placeholder.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;preferredCountries&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;code&gt;[&quot;us&quot;, &quot;gb&quot;]&lt;/code&gt;&lt;br&gt; Specify the countries to appear at the top of the list.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;del&gt;preventInvalidNumbers&lt;/del&gt; [REMOVED]&lt;/strong&gt;&lt;br&gt; Prevent the user from entering invalid characters. Unfortunately this had to be removed for the reasons listed here: &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/issues/79#issuecomment-121799307&quot;&gt;#79 Limit Input Characters to Formatted String Length&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;separateDialCode&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Display the country dial code next to the selected flag so it&#39;s not part of the typed number. Note that this will disable &lt;code&gt;nationalMode&lt;/code&gt; because technically we are dealing with international numbers, but with the dial code separated.&lt;/p&gt; 
&lt;img src=&quot;https://raw.github.com/jackocnr/intl-tel-input/master/screenshots/separateDialCode.png&quot; width=&quot;257px&quot; height=&quot;46px&quot;&gt; 
&lt;p&gt;&lt;strong&gt;utilsScript&lt;/strong&gt;&lt;br&gt; Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;&quot;&quot;&lt;/code&gt; Example: &lt;code&gt;&quot;build/js/utils.js&quot;&lt;/code&gt;&lt;br&gt; Enable formatting/validation etc. by specifying the URL of the included utils.js script (or alternatively just point it to the file on &lt;a href=&quot;https://cdnjs.com/libraries/intl-tel-input&quot;&gt;cdnjs.com&lt;/a&gt;). The script is fetched only when the page has finished loading (on the window load event) to prevent blocking (the script is ~215KB). When instantiating the plugin, if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt; object is defined, one of those is returned under the &lt;code&gt;promise&lt;/code&gt; instance property, so you can do something like &lt;code&gt;iti.promise.then(callback)&lt;/code&gt; to know when initialisation requests like this have finished. See &lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#utilities-script&quot;&gt;Utilities Script&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Public Methods&lt;/h2&gt; 
&lt;p&gt;In these examples, &lt;code&gt;iti&lt;/code&gt; refers to the plugin instance which gets returned when you initialise the plugin e.g. &lt;code&gt;var iti = intlTelInput(input)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;destroy&lt;/strong&gt;&lt;br&gt; Remove the plugin from the input, and unbind any event listeners.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;iti.destroy();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;getExtension&lt;/strong&gt;&lt;br&gt; Get the extension from the current number. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var extension = iti.getExtension();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns a string e.g. if the input value was &lt;code&gt;&quot;(702) 555-5555 ext. 1234&quot;&lt;/code&gt;, this would return &lt;code&gt;&quot;1234&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;getNumber&lt;/strong&gt;&lt;br&gt; Get the current number in the given format (defaults to &lt;a href=&quot;http://en.wikipedia.org/wiki/E.164&quot;&gt;E.164 standard&lt;/a&gt;). The different formats are available in the enum &lt;code&gt;intlTelInputUtils.numberFormat&lt;/code&gt; - which you can see &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/utils.js#L109&quot;&gt;here&lt;/a&gt;. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option. &lt;em&gt;Note that even if &lt;code&gt;nationalMode&lt;/code&gt; is enabled, this can still return a full international number. Also note that this method expects a valid number, and so should only be used after validation.&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var number = iti.getNumber();
// or
var number = iti.getNumber(intlTelInputUtils.numberFormat.E164);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns a string e.g. &lt;code&gt;&quot;+17024181234&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;getNumberType&lt;/strong&gt;&lt;br&gt; Get the type (fixed-line/mobile/toll-free etc) of the current number. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var numberType = iti.getNumberType();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns an integer, which you can match against the &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/utils.js#L119&quot;&gt;various options&lt;/a&gt; in the global enum &lt;code&gt;intlTelInputUtils.numberType&lt;/code&gt; e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if (numberType === intlTelInputUtils.numberType.MOBILE) {
    // is a mobile number
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note that in the US there&#39;s no way to differentiate between fixed-line and mobile numbers, so instead it will return &lt;code&gt;FIXED_LINE_OR_MOBILE&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;getSelectedCountryData&lt;/strong&gt;&lt;br&gt; Get the country data for the currently selected flag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var countryData = iti.getSelectedCountryData();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  name: &quot;Afghanistan (‚Ä´ÿßŸÅÿ∫ÿßŸÜÿ≥ÿ™ÿßŸÜ‚Ä¨‚Äé)&quot;,
  iso2: &quot;af&quot;,
  dialCode: &quot;93&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;getValidationError&lt;/strong&gt;&lt;br&gt; Get more information about a validation error. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var error = iti.getValidationError();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns an integer, which you can match against the &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/utils.js#L153&quot;&gt;various options&lt;/a&gt; in the global enum &lt;code&gt;intlTelInputUtils.validationError&lt;/code&gt; e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if (error === intlTelInputUtils.validationError.TOO_SHORT) {
    // the number is too short
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;isValidNumber&lt;/strong&gt;&lt;br&gt; Validate the current number - &lt;a href=&quot;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/is-valid-number.html&quot;&gt;see example&lt;/a&gt;. Expects an internationally formatted number (unless &lt;code&gt;nationalMode&lt;/code&gt; is enabled). If validation fails, you can use &lt;code&gt;getValidationError&lt;/code&gt; to get more information. Requires the &lt;code&gt;utilsScript&lt;/code&gt; option. Also see &lt;code&gt;getNumberType&lt;/code&gt; if you want to make sure the user enters a certain type of number e.g. a mobile number.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var isValid = iti.isValidNumber();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns: &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;setCountry&lt;/strong&gt;&lt;br&gt; Change the country selection (e.g. when the user is entering their address).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;iti.setCountry(&quot;gb&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;setNumber&lt;/strong&gt;&lt;br&gt; Insert a number, and update the selected flag accordingly. &lt;em&gt;Note that if &lt;code&gt;formatOnDisplay&lt;/code&gt; is enabled, this will attempt to format the number according to the &lt;code&gt;nationalMode&lt;/code&gt; option.&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;iti.setNumber(&quot;+447733123456&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;setPlaceholderNumberType&lt;/strong&gt;&lt;br&gt; Change the placeholderNumberType option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;iti.setPlaceholderNumberType(&quot;FIXED_LINE&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Static Methods&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;getCountryData&lt;/strong&gt;&lt;br&gt; Get all of the plugin&#39;s country data - either to re-use elsewhere e.g. to populate a country dropdown - &lt;a href=&quot;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/country-sync.html&quot;&gt;see example&lt;/a&gt;, or to modify - &lt;a href=&quot;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/modify-country-data.html&quot;&gt;see example&lt;/a&gt;. Note that any modifications must be done before initialising the plugin.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var countryData = window.intlTelInputGlobals.getCountryData();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns an array of country objects:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[{
  name: &quot;Afghanistan (‚Ä´ÿßŸÅÿ∫ÿßŸÜÿ≥ÿ™ÿßŸÜ‚Ä¨‚Äé)&quot;,
  iso2: &quot;af&quot;,
  dialCode: &quot;93&quot;
}, ...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;getInstance&lt;/strong&gt;&lt;br&gt; After initialising the plugin, you can always access the instance again using this method, by just passing in the relevant input element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var input = document.querySelector(&#39;#phone&#39;);
var iti = window.intlTelInputGlobals.getInstance(input);
iti.isValidNumber(); // etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;loadUtils&lt;/strong&gt;&lt;br&gt; An alternative to the &lt;code&gt;utilsScript&lt;/code&gt; option, this method lets you manually load the utils.js script on demand, to enable formatting/validation etc. See &lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/#utilities-script&quot;&gt;Utilities Script&lt;/a&gt; for more information. This method should only be called once per page. If the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt; object is defined, one of those is returned so you can use &lt;code&gt;loadUtils().then(callback)&lt;/code&gt; to know when it&#39;s finished.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;window.intlTelInputGlobals.loadUtils(&quot;build/js/utils.js&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;del&gt;setCountryData&lt;/del&gt; [REMOVED]&lt;/strong&gt;&lt;br&gt; Set the plugin&#39;s country data. This method was removed because it makes much more sense to just use &lt;code&gt;getCountryData&lt;/code&gt; and then modify that (&lt;a href=&quot;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/modify-country-data.html&quot;&gt;see example&lt;/a&gt;) instead of having to generate the whole thing yourself - the country data has become increasingly complicated and for each country we now have five properties: the name, &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2&quot;&gt;iso2 country code&lt;/a&gt;, international dial code, priority (in case two countries have the same international dial code), and finally a list of area codes used in that country - see &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/raw/master/src/js/data.js#L36&quot;&gt;data.js&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;You can listen for the following events on the input.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;countrychange&lt;/strong&gt;&lt;br&gt; This is triggered when the user selects a country from the dropdown.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;input.addEventListener(&quot;countrychange&quot;, function() {
  // do something with iti.getSelectedCountryData()
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See an example here: &lt;a href=&quot;http://intl-tel-input.com/node_modules/intl-tel-input/examples/gen/country-sync.html&quot;&gt;Country sync&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;open:countrydropdown&lt;/strong&gt;&lt;br&gt; This is triggered when the user opens the dropdown.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;close:countrydropdown&lt;/strong&gt;&lt;br&gt; This is triggered when the user closes the dropdown.&lt;/p&gt; 
&lt;h2&gt;Utilities Script&lt;/h2&gt; 
&lt;p&gt;The utilities script (&lt;a href=&quot;https://raw.githubusercontent.com/jackocnr/intl-tel-input/master/build/js/utils.js&quot;&gt;build/js/utils.js&lt;/a&gt;) is a custom build of Google&#39;s &lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt;libphonenumber&lt;/a&gt; which enables the following features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Formatting upon initialisation, as well as with &lt;code&gt;getNumber&lt;/code&gt; and &lt;code&gt;setNumber&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Validation with &lt;code&gt;isValidNumber&lt;/code&gt;, &lt;code&gt;getNumberType&lt;/code&gt; and &lt;code&gt;getValidationError&lt;/code&gt; methods&lt;/li&gt; 
 &lt;li&gt;Placeholder set to an example number for the selected country - even specify the type of number (e.g. mobile) using the &lt;code&gt;placeholderNumberType&lt;/code&gt; option&lt;/li&gt; 
 &lt;li&gt;Extract the standardised (E.164) international number with &lt;code&gt;getNumber&lt;/code&gt; even when using the &lt;code&gt;nationalMode&lt;/code&gt; option&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;International number formatting/validation is hard (it varies by country/district, and we currently support ~230 countries). The only comprehensive solution I have found is libphonenumber, from which I have precompiled the relevant parts into a single JavaScript file and included in the build directory. Unfortunately even after minification it is still ~215KB, but if you use the &lt;code&gt;utilsScript&lt;/code&gt; option then it will only fetch the script when the page has finished loading (to prevent blocking). If size is not a concern, then you can manually include the script yourself however you like, and as long as it has loaded before you initialise the plugin then it should work fine.&lt;/p&gt; 
&lt;p&gt;To recompile the utils script yourself (e.g. to update the version of libphonenumber it is built from), see the &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/raw/master/.github/CONTRIBUTING.md#updating-to-a-new-version-of-libphonenumber&quot;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Full width input&lt;/strong&gt;&lt;br&gt; If you want your input to be full-width, you need to set the container to be the same i.e.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.iti { width: 100%; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;dropdownContainer: dropdown not closing on scroll&lt;/strong&gt;&lt;br&gt; If you have a scrolling container other than &lt;code&gt;window&lt;/code&gt; which is causing problems by not closing the dropdown on scroll, simply listen for the scroll event on that element, and trigger a scroll event on &lt;code&gt;window&lt;/code&gt;, which in turn will close the dropdown e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;scrollingElement.addEventListener(&quot;scroll&quot;, function() {
  var e = document.createEvent(&#39;Event&#39;);
  e.initEvent(&quot;scroll&quot;, true, true);
  window.dispatchEvent(e);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Input margin&lt;/strong&gt;&lt;br&gt; For the sake of alignment, the default CSS forces the input&#39;s vertical margin to &lt;code&gt;0px&lt;/code&gt;. If you want vertical margin, you should add it to the container (with class &lt;code&gt;iti&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Displaying error messages&lt;/strong&gt;&lt;br&gt; If your error handling code inserts an error message before the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; it will break the layout. Instead you must insert it before the container (with class &lt;code&gt;iti&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dropdown position&lt;/strong&gt;&lt;br&gt; The dropdown should automatically appear above/below the input depending on the available space. For this to work properly, you must only initialise the plugin after the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; has been added to the DOM.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Placeholders&lt;/strong&gt;&lt;br&gt; In order to get the automatic country-specific placeholders, simply omit the placeholder attribute on the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bootstrap input groups&lt;/strong&gt;&lt;br&gt; A couple of CSS fixes are required to get the plugin to play nice with Bootstrap &lt;a href=&quot;https://getbootstrap.com/docs/3.3/components/#input-groups&quot;&gt;input groups&lt;/a&gt;. You can see a Codepen &lt;a href=&quot;http://codepen.io/jackocnr/pen/EyPXed&quot;&gt;here&lt;/a&gt;.&lt;br&gt; &lt;em&gt;Note: there is currently &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=141822&quot;&gt;a bug&lt;/a&gt; in Mobile Safari which causes a crash when you click the dropdown arrow (a CSS triangle) inside an input group. The simplest workaround is to remove the CSS triangle with this line:&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.iti__arrow { border: none; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/raw/master/.github/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; for instructions on setting up the project and making changes, and also for how to update to a new version of libphonenumber, or how to update the flag images.&lt;/p&gt; 
&lt;h2&gt;Attributions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Flag images from &lt;a href=&quot;https://github.com/behdad/region-flags&quot;&gt;region-flags&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Original country data from mledoze&#39;s &lt;a href=&quot;https://github.com/mledoze/countries&quot;&gt;World countries in JSON, CSV and XML&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Formatting/validation/example number code from &lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt;libphonenumber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Feature contributions are listed in the wiki: &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/wiki/Contributions&quot;&gt;Contributions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;List of &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/wiki/Sites-using-intl-tel-input&quot;&gt;sites using intl-tel-input&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;List of &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/wiki/Integrations&quot;&gt;integrations with intl-tel-input&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Android native port: &lt;a href=&quot;https://github.com/Rimoto/IntlPhoneInput&quot;&gt;IntlPhoneInput&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Typescript type definitions are available in the &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/master/types/intl-tel-input/index.d.ts&quot;&gt;DefinitelyTyped repo&lt;/a&gt; (more info &lt;a href=&quot;https://github.com/jackocnr/intl-tel-input/issues/433#issuecomment-228517623&quot;&gt;here&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img width=&quot;200&quot; src=&quot;https://www.browserstack.com/images/layout/browserstack-logo-600x315.png&quot;&gt;&lt;br&gt; Testing powered by &lt;a href=&quot;https://www.browserstack.com/open-source&quot;&gt;BrowserStack Open-Source Program&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Koenkk/zigbee2mqtt</title>
      <link>https://github.com/Koenkk/zigbee2mqtt</link>
      <description>&lt;p&gt;Zigbee üêù to MQTT bridge üåâ, get rid of your proprietary Zigbee bridges üî®&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://github.com/koenkk/zigbee2mqtt&quot;&gt; &lt;img width=&quot;150&quot; height=&quot;150&quot; src=&quot;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/logo.png&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;div style=&quot;display: flex;&quot;&gt; 
  &lt;a href=&quot;https://github.com/Koenkk/zigbee2mqtt/actions?query=workflow%3ACI&quot;&gt; &lt;img src=&quot;https://github.com/koenkk/zigbee2mqtt/workflows/CI/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
  &lt;a href=&quot;https://github.com/Koenkk/zigbee2mqtt/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/koenkk/zigbee2mqtt.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
  &lt;a href=&quot;https://github.com/Koenkk/zigbee2mqtt/stargazers&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/koenkk/zigbee2mqtt.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
  &lt;a href=&quot;https://www.paypal.me/koenkk&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/donate-PayPal-blue.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
  &lt;a href=&quot;https://discord.gg/dadfWYE&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/556563650429583360.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
  &lt;a href=&quot;http://zigbee2mqtt.discourse.group/&quot;&gt; &lt;img src=&quot;https://img.shields.io/discourse/https/zigbee2mqtt.discourse.group/status.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
  &lt;a&gt; &lt;img src=&quot;https://img.shields.io/badge/Coverage-100%25-brightgreen.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
  &lt;a href=&quot;https://www.codacy.com/manual/Koenkk/zigbee2mqtt?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Koenkk/zigbee2mqtt&amp;amp;utm_campaign=Badge_Grade&quot;&gt; &lt;img src=&quot;https://api.codacy.com/project/badge/Grade/24f1e0fe39f04daa810e8a1416693d3f&quot;&gt; &lt;/a&gt; 
  &lt;a href=&quot;https://www.npmjs.com/package/zigbee2mqtt&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/zigbee2mqtt&quot;&gt; &lt;/a&gt; 
 &lt;/div&gt; 
 &lt;h1&gt;Zigbee2MQTT üåâ üêù&lt;/h1&gt; 
 &lt;p&gt; Allows you to use your Zigbee devices &lt;b&gt;without&lt;/b&gt; the vendor&#39;s bridge or gateway. &lt;/p&gt; 
 &lt;p&gt; It bridges events and allows you to control your Zigbee devices via MQTT. In this way you can integrate your Zigbee devices with whatever smart home infrastructure you are using. &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;&lt;a href=&quot;https://www.zigbee2mqtt.io/guide/getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.zigbee2mqtt.io/&quot;&gt;documentation&lt;/a&gt; provides you all the information needed to get up and running! Make sure you don&#39;t skip sections if this is your first visit, as there might be important details in there for you.&lt;/p&gt; 
&lt;p&gt;If you aren&#39;t familiar with &lt;strong&gt;Zigbee&lt;/strong&gt; terminology make sure you &lt;a href=&quot;https://www.zigbee2mqtt.io/advanced/zigbee/01_zigbee_network.html&quot;&gt;read this&lt;/a&gt; to help you out.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://www.zigbee2mqtt.io/guide/usage/integrations.html&quot;&gt;Integrations&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Zigbee2MQTT integrates well with (almost) every home automation solution because it uses MQTT. However the following integrations are worth mentioning:&lt;/p&gt; 
&lt;img align=&quot;left&quot; height=&quot;100px&quot; width=&quot;100px&quot; src=&quot;https://user-images.githubusercontent.com/7738048/40914297-49e6e560-6800-11e8-8904-36cce896e5a8.png&quot;&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.home-assistant.io/hassio/&quot;&gt;Home Assistant&lt;/a&gt;: Using &lt;a href=&quot;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt&quot;&gt;the official addon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Generic install or Hassbian: Using instructions &lt;a href=&quot;https://www.zigbee2mqtt.io/guide/usage/integrations/home_assistant.html&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img align=&quot;left&quot; height=&quot;100px&quot; width=&quot;100px&quot; src=&quot;https://user-images.githubusercontent.com/2734836/47615848-b8dd8700-dabd-11e8-9d77-175002dd8987.png&quot;&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.domoticz.com/&quot;&gt;Domoticz&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integration implemented in &lt;a href=&quot;https://github.com/stas-demydiuk/domoticz-zigbee2mqtt-plugin&quot;&gt;domoticz-zigbee2mqtt-plugin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/architecture.png&quot; alt=&quot;Architecture&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Internal Architecture&lt;/h3&gt; 
&lt;p&gt;Zigbee2MQTT is made up of three modules, each developed in its own Github project. Starting from the hardware (adapter) and moving up; &lt;a href=&quot;https://github.com/koenkk/zigbee-herdsman&quot;&gt;zigbee-herdsman&lt;/a&gt; connects to your Zigbee adapter and makes an API available to the higher levels of the stack. For e.g. Texas Instruments hardware, zigbee-herdsman uses the &lt;a href=&quot;https://github.com/koenkk/zigbee-herdsman/raw/master/docs/Z-Stack%20Monitor%20and%20Test%20API.pdf&quot;&gt;TI zStack monitoring and test API&lt;/a&gt; to communicate with the adapter. Zigbee-herdsman handles the core Zigbee communication. The module &lt;a href=&quot;https://github.com/koenkk/zigbee-herdsman-converters&quot;&gt;zigbee-herdsman-converters&lt;/a&gt; handles the mapping from individual device models to the Zigbee clusters they support. &lt;a href=&quot;https://github.com/Koenkk/zigbee-herdsman/raw/master/docs/07-5123-08-Zigbee-Cluster-Library.pdf&quot;&gt;Zigbee clusters&lt;/a&gt; are the layers of the Zigbee protocol on top of the base protocol that define things like how lights, sensors and switches talk to each other over the Zigbee network. Finally, the Zigbee2MQTT module drives zigbee-herdsman and maps the zigbee messages to MQTT messages. Zigbee2MQTT also keeps track of the state of the system. It uses a &lt;code&gt;database.db&lt;/code&gt; file to store this state; a text file with a JSON database of connected devices and their capabilities. Zigbee2MQTT provides a &lt;a href=&quot;https://github.com/nurikk/zigbee2mqtt-frontend&quot;&gt;web-based interface&lt;/a&gt; that allows monitoring and configuration.&lt;/p&gt; 
&lt;h3&gt;Developing&lt;/h3&gt; 
&lt;p&gt;Zigbee2MQTT uses TypeScript (partially for now). Therefore after making changes to files in the &lt;code&gt;lib/&lt;/code&gt; directory you need to recompile Zigbee2MQTT. This can be done by executing &lt;code&gt;npm run build&lt;/code&gt;. For faster development instead of running &lt;code&gt;npm run build&lt;/code&gt; you can run &lt;code&gt;npm run build-watch&lt;/code&gt; in another terminal session, this will recompile as you change files.&lt;/p&gt; 
&lt;h2&gt;Supported devices&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://www.zigbee2mqtt.io/supported-devices&quot;&gt;Supported devices&lt;/a&gt; to check whether your device is supported. There is quite an extensive list, including devices from vendors like Xiaomi, Ikea, Philips, OSRAM and more.&lt;/p&gt; 
&lt;p&gt;If it&#39;s not listed in &lt;a href=&quot;https://www.zigbee2mqtt.io/supported-devices&quot;&gt;Supported devices&lt;/a&gt;, support can be added (fairly) easily, see &lt;a href=&quot;https://www.zigbee2mqtt.io/advanced/support-new-devices/01_support_new_devices.html&quot;&gt;How to support new devices&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support &amp;amp; help&lt;/h2&gt; 
&lt;p&gt;If you need assistance you can check &lt;a href=&quot;https://github.com/Koenkk/zigbee2mqtt/issues&quot;&gt;opened issues&lt;/a&gt;. Feel free to help with Pull Requests when you were able to fix things or add new devices or just share the love on social media.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sequelize/sequelize</title>
      <link>https://github.com/sequelize/sequelize</link>
      <description>&lt;p&gt;An easy-to-use and promise-based multi SQL dialects ORM tool for Node.js&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/sequelize/sequelize/main/docs/images/logo-small.png&quot; width=&quot;100&quot;&gt; &lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;Sequelize&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/sequelize&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/v/sequelize&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sequelize/sequelize/actions?query=workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/sequelize/sequelize/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/sequelize&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/dm/sequelize&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/sequelize&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/sequelize?label=sponsors&quot; alt=&quot;sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sequelize/sequelize&quot;&gt;&lt;img src=&quot;https://badgen.net/github/merged-prs/sequelize/sequelize&quot; alt=&quot;Merged PRs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/semantic-release/semantic-release&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&quot; alt=&quot;semantic-release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Sequelize is a promise-based &lt;a href=&quot;https://nodejs.org/en/about/&quot;&gt;Node.js&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Object-relational_mapping&quot;&gt;ORM tool&lt;/a&gt; for &lt;a href=&quot;https://en.wikipedia.org/wiki/PostgreSQL&quot;&gt;Postgres&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/MySQL&quot;&gt;MySQL&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/MariaDB&quot;&gt;MariaDB&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/SQLite&quot;&gt;SQLite&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/IBM_Db2_Family&quot;&gt;DB2&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Microsoft_SQL_Server&quot;&gt;Microsoft SQL Server&lt;/a&gt;. It features solid transaction support, relations, eager and lazy loading, read replication and more.&lt;/p&gt; 
&lt;p&gt;Sequelize follows &lt;a href=&quot;http://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt; and the &lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;official Node.js LTS schedule&lt;/a&gt;. Version 7 of Sequelize officially supports the Node.js versions &lt;code&gt;^12.22.0&lt;/code&gt;, &lt;code&gt;^14.17,0&lt;/code&gt;, &lt;code&gt;^16.0.0&lt;/code&gt;. Other version might be working as well.&lt;/p&gt; 
&lt;p&gt;New to Sequelize? Take a look at the &lt;a href=&quot;https://sequelize.org/master&quot;&gt;Tutorials and Guides&lt;/a&gt;. You might also be interested in the &lt;a href=&quot;https://sequelize.org/master/identifiers&quot;&gt;API Reference&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Would you like to contribute? Read &lt;a href=&quot;https://github.com/sequelize/sequelize/raw/main/CONTRIBUTING.md&quot;&gt;our contribution guidelines&lt;/a&gt; to know more. There are many ways to help.&lt;/p&gt; 
&lt;h3&gt;Major version changelog&lt;/h3&gt; 
&lt;p&gt;Please find upgrade information to major versions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sequelize/sequelize/raw/main/docs/manual/other-topics/upgrade-to-v6.md&quot;&gt;Upgrade from v5 to v6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sequelize/sequelize/raw/main/docs/manual/other-topics/upgrade-to-v7.md&quot;&gt;Upgrade from v6 to v7&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supporting the project&lt;/h2&gt; 
&lt;p&gt;Do you like Sequelize and would like to give back to the engineering team behind it?&lt;/p&gt; 
&lt;p&gt;We have recently created an &lt;a href=&quot;https://opencollective.com/sequelize&quot;&gt;OpenCollective based money pool&lt;/a&gt; which is shared amongst all core maintainers based on their contributions. Every support is wholeheartedly welcome. ‚ù§Ô∏è&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npm i sequelize # This will install v6

# And one of the following:
$ npm i pg pg-hstore # Postgres
$ npm i mysql2
$ npm i mariadb
$ npm i sqlite3
$ npm i tedious # Microsoft SQL Server
$ npm i ibm_db #DB2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sequelize.org/master&quot;&gt;v6 Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sequelize.org&quot;&gt;v5/v4/v3 Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sequelize/sequelize/raw/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Responsible disclosure&lt;/h2&gt; 
&lt;p&gt;If you have security issues to report, please refer to our &lt;a href=&quot;https://github.com/sequelize/sequelize/raw/main/SECURITY.md&quot;&gt;Responsible Disclosure Policy&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sequelize/sequelize/releases&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sequelize-slack.herokuapp.com/&quot;&gt;Slack Inviter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/sequelize.js&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sequelize/cli&quot;&gt;CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sequelize.org/master/manual/typescript.html&quot;&gt;With TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RobinBuschmann/sequelize-typescript&quot;&gt;Enhanced TypeScript with decorators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mickhansen/graphql-sequelize&quot;&gt;For GraphQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cockroachdb/sequelize-cockroachdb&quot;&gt;For CockroachDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sequelize.org/master/manual/resources.html&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yugabyte/sequelize-yugabytedb&quot;&gt;For YugabyteDB&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sequelize.org/master&quot;&gt;English&lt;/a&gt; (OFFICIAL)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/demopark/sequelize-docs-Zh-CN&quot;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt; (UNOFFICIAL)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;ÌïúÍµ≠Ïñ¥&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;Êó•Êú¨Ë™û&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Fran√ßais&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Espa√±ol&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Portugu√™s&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;–†—É—Å—Å–∫–∏–π&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;T√ºrk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md&quot;&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‚òù Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/binary-floating-point&quot;&gt;Binary Floating Point&lt;/a&gt; - binary representation of the floating-point numbers.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui œÄ Algorithm&lt;/a&gt; - approximate œÄ calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher‚ÄìYates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - &quot;0/1&quot; and &quot;Unbound&quot; ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#39;s) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth‚ÄìMorris‚ÄìPratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Statistics&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/statistics/weighted-random&quot;&gt;Weighted Random&lt;/a&gt; - select the random item from the list based on items&#39; weights&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolutionary algorithms&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/self-parking-car-evolution&quot;&gt;Genetic algorithm&lt;/a&gt; - example of how the genetic algorithm may be applied for training the self-parking cars&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In case if linting or testing is failing try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;‚ñ∂ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Big O Notation&lt;/th&gt; 
   &lt;th&gt;Computations for 10 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 100 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 1000 elements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;1000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;600&lt;/td&gt; 
   &lt;td&gt;9000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;10000&lt;/td&gt; 
   &lt;td&gt;1000000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1024&lt;/td&gt; 
   &lt;td&gt;1.26e+29&lt;/td&gt; 
   &lt;td&gt;1.07e+301&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3628800&lt;/td&gt; 
   &lt;td&gt;9.3e+157&lt;/td&gt; 
   &lt;td&gt;4.02e+2567&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Data Structure&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Access&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Search&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Insertion&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Deletion&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;False positives are possible while searching&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Best&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Average&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Worst&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Memory&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Stable&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Quicksort is usually done in-place with O(log(n)) stack space&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;depends on gap sequence&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;r - biggest number in array&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;k - length of longest key&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;‚àë = 0&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ÑπÔ∏è A few more &lt;a href=&quot;https://trekhleb.dev/projects/&quot;&gt;projects&lt;/a&gt; and &lt;a href=&quot;https://trekhleb.dev/blog/&quot;&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href=&quot;https://trekhleb.dev&quot;&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>liabru/matter-js</title>
      <link>https://github.com/liabru/matter-js</link>
      <description>&lt;p&gt;a 2D rigid body physics engine for the web ‚ñ≤‚óè ‚ñ†&lt;/p&gt;&lt;hr&gt;&lt;img alt=&quot;Matter.js&quot; src=&quot;https://brm.io/matter-js/img/matter-js.svg?sanitize=true&quot; width=&quot;300&quot;&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Matter.js&lt;/em&gt; is a JavaScript 2D rigid body physics engine for the web&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://brm.io/matter-js/&quot;&gt;brm.io/matter-js&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#demos&quot;&gt;Demos&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#gallery&quot;&gt;Gallery&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#features&quot;&gt;Features&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#plugins&quot;&gt;Plugins&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#install&quot;&gt;Install&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#usage&quot;&gt;Usage&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#examples&quot;&gt;Examples&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#documentation&quot;&gt;Docs&lt;/a&gt; „Éª &lt;a href=&quot;https://github.com/liabru/matter-js/wiki&quot;&gt;Wiki&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#references&quot;&gt;References&lt;/a&gt; „Éª &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#license&quot;&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/liabru/matter-js&quot;&gt;&lt;img src=&quot;https://travis-ci.org/liabru/matter-js.png?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Demos&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#mixed&quot;&gt;Mixed Shapes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#mixedSolid&quot;&gt;Solid Shapes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#svg&quot;&gt;Concave SVG Paths&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#terrain&quot;&gt;Concave Terrain&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#concave&quot;&gt;Concave Bodies&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#compound&quot;&gt;Compound Bodies&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#newtonsCradle&quot;&gt;Newton&#39;s Cradle&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#wreckingBall&quot;&gt;Wrecking Ball&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#slingshot&quot;&gt;Slingshot Game&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#rounded&quot;&gt;Rounded Corners&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#views&quot;&gt;Views&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#timescale&quot;&gt;Time Scaling&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#manipulation&quot;&gt;Body Manipulation&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#compositeManipulation&quot;&gt;Composite Manipulation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#raycasting&quot;&gt;Raycasting&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#sprites&quot;&gt;Sprites&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#pyramid&quot;&gt;Pyramid&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#car&quot;&gt;Car&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#catapult&quot;&gt;Catapult&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#gravity&quot;&gt;Reverse Gravity&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#bridge&quot;&gt;Bridge&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#avalanche&quot;&gt;Avalanche&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#softBody&quot;&gt;Basic Soft Bodies&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#cloth&quot;&gt;Cloth&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#collisionFiltering&quot;&gt;Collision Filtering&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#chains&quot;&gt;Chains&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#ballPool&quot;&gt;Ball Pool&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#circleStack&quot;&gt;Circle Stack&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#compoundStack&quot;&gt;Compound Stack&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#restitution&quot;&gt;Restitution&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#friction&quot;&gt;Friction&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#airFriction&quot;&gt;Air Friction&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#staticFriction&quot;&gt;Static Friction&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#sleeping&quot;&gt;Sleeping&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#beachBalls&quot;&gt;Beach Balls&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#stress&quot;&gt;Stress 1&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#stress2&quot;&gt;Stress 2&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://brm.io/matter-js/demo/#sensors&quot;&gt;Sensors&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;br&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Gallery&lt;/h3&gt; 
&lt;p&gt;See how others are using matter.js physics&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://patrickheng.com/&quot;&gt;Patrick Heng&lt;/a&gt; by Patrick Heng&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://useless.london/&quot;&gt;USELESS&lt;/a&gt; by Nice and Serious&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://secret-7.com/&quot;&gt;Secret 7&lt;/a&gt; by Goodness&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.new.company/&quot;&gt;New Company&lt;/a&gt; by New Company&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gameoftheyear.withgoogle.com/&quot;&gt;Game of The Year&lt;/a&gt; by Google&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pablotheflamingo.com/&quot;&gt;Pablo The Flamingo&lt;/a&gt; by Nathan Gordon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lab212.org/oeuvres/2:art/18/Les-metamorphoses-de-Mr-Kalia&quot;&gt;Les m√©tamorphoses de Mr. Kalia&lt;/a&gt; by Lab212&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://phaser.io/&quot;&gt;Phaser&lt;/a&gt; by Photon Storm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sorryihavenofilter.com/pages/about/&quot;&gt;Sorry I Have No Filter&lt;/a&gt; by Jessica Walsh&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fuse.blog/&quot;&gt;Fuse&lt;/a&gt; by Fuse&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.glyphfinder.com/&quot;&gt;Glyphfinder&lt;/a&gt; by √ºberdosis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://isolation.is/postcards/my-week&quot;&gt;Isolation&lt;/a&gt; by sabato studio&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liabru/matter-js/wiki/Gallery&quot;&gt;more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rigid bodies&lt;/li&gt; 
 &lt;li&gt;Compound bodies&lt;/li&gt; 
 &lt;li&gt;Composite bodies&lt;/li&gt; 
 &lt;li&gt;Concave and convex hulls&lt;/li&gt; 
 &lt;li&gt;Physical properties (mass, area, density etc.)&lt;/li&gt; 
 &lt;li&gt;Restitution (elastic and inelastic collisions)&lt;/li&gt; 
 &lt;li&gt;Collisions (broad-phase, mid-phase and narrow-phase)&lt;/li&gt; 
 &lt;li&gt;Stable stacking and resting&lt;/li&gt; 
 &lt;li&gt;Conservation of momentum&lt;/li&gt; 
 &lt;li&gt;Friction and resistance&lt;/li&gt; 
 &lt;li&gt;Events&lt;/li&gt; 
 &lt;li&gt;Constraints&lt;/li&gt; 
 &lt;li&gt;Gravity&lt;/li&gt; 
 &lt;li&gt;Sleeping and static bodies&lt;/li&gt; 
 &lt;li&gt;Plugins&lt;/li&gt; 
 &lt;li&gt;Rounded corners (chamfering)&lt;/li&gt; 
 &lt;li&gt;Views (translate, zoom)&lt;/li&gt; 
 &lt;li&gt;Collision queries (raycasting, region tests)&lt;/li&gt; 
 &lt;li&gt;Time scaling (slow-mo, speed-up)&lt;/li&gt; 
 &lt;li&gt;Canvas renderer (supports vectors and textures)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liabru/matter-tools&quot;&gt;MatterTools&lt;/a&gt; for creating, testing and debugging worlds&lt;/li&gt; 
 &lt;li&gt;World state serialisation (requires &lt;a href=&quot;https://github.com/skeeto/resurrect-js&quot;&gt;resurrect.js&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Cross-browser and Node.js support (Chrome, Firefox, Safari, IE8+)&lt;/li&gt; 
 &lt;li&gt;Mobile-compatible (touch, responsive)&lt;/li&gt; 
 &lt;li&gt;An original JavaScript physics implementation (not a port)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;p&gt;You can install using package managers &lt;a href=&quot;https://www.npmjs.org/package/matter-js&quot;&gt;npm&lt;/a&gt; and &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;Yarn&lt;/a&gt; using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install matter-js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively you can download a &lt;a href=&quot;https://github.com/liabru/matter-js/tags&quot;&gt;stable release&lt;/a&gt; or try the latest experimental &lt;a href=&quot;https://github.com/liabru/matter-js/tree/master/build&quot;&gt;alpha build&lt;/a&gt; (master) and include the script in your web page:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&quot;matter.js&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Webpack&lt;/h3&gt; 
&lt;p&gt;Some &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; configs including the default may impact your project&#39;s performance during development, for a solution see &lt;a href=&quot;https://github.com/liabru/matter-js/issues/1001&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Visit the &lt;a href=&quot;https://github.com/liabru/matter-js/wiki/Getting-started&quot;&gt;Getting started&lt;/a&gt; wiki page for a minimal usage example which should work in both browsers and Node.js.&lt;br&gt; Also see the &lt;a href=&quot;https://github.com/liabru/matter-js/wiki/Running&quot;&gt;Running&lt;/a&gt; and &lt;a href=&quot;https://github.com/liabru/matter-js/wiki/Rendering&quot;&gt;Rendering&lt;/a&gt; wiki pages, which show how to use your own game and rendering loops.&lt;/p&gt; 
&lt;h3&gt;Tutorials&lt;/h3&gt; 
&lt;p&gt;See the list of &lt;a href=&quot;https://github.com/liabru/matter-js/wiki/Tutorials&quot;&gt;tutorials&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/liabru/matter-js/tree/master/examples&quot;&gt;examples&lt;/a&gt; directory which contains the source for all &lt;a href=&quot;https://raw.githubusercontent.com/liabru/matter-js/master/#demos&quot;&gt;demos&lt;/a&gt;.&lt;br&gt; There are even more examples on &lt;a href=&quot;https://codepen.io/collection/Fuagy/&quot;&gt;codepen&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Plugins&lt;/h3&gt; 
&lt;p&gt;The engine can be extended through plugins, see these resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liabru/matter-js/wiki/Using-plugins&quot;&gt;Using plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liabru/matter-js/wiki/Creating-plugins&quot;&gt;Creating plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liabru/matter-js/wiki/List-of-plugins&quot;&gt;List of plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liabru/matter-plugin-boilerplate&quot;&gt;matter-plugin-boilerplate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://brm.io/matter-js/docs/&quot;&gt;API Documentation&lt;/a&gt; and the &lt;a href=&quot;https://github.com/liabru/matter-js/wiki&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Building and Contributing&lt;/h3&gt; 
&lt;p&gt;To build you must first install &lt;a href=&quot;https://nodejs.org/&quot;&gt;node.js&lt;/a&gt;, then run&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will install the required build dependencies, then run&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to spawn a development server. For information on contributing see &lt;a href=&quot;https://github.com/liabru/matter-js/raw/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Changelog&lt;/h3&gt; 
&lt;p&gt;To see what&#39;s new or changed in the latest version, see the &lt;a href=&quot;https://github.com/liabru/matter-js/raw/master/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;See the wiki page on &lt;a href=&quot;https://github.com/liabru/matter-js/wiki/References&quot;&gt;References&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Matter.js is licensed under &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;The MIT License (MIT)&lt;/a&gt;&lt;br&gt; Copyright (c) 2014 Liam Brummitt&lt;/p&gt; 
&lt;p&gt;This license is also supplied with the release and source code.&lt;br&gt; As stated in the license, absolutely no warranty is provided.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>awesome-selfhosted/awesome-selfhosted</title>
      <link>https://github.com/awesome-selfhosted/awesome-selfhosted</link>
      <description>&lt;p&gt;A list of Free Software network services and web applications which can be hosted on your own servers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome-Selfhosted&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/awesome&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/awesome-selfhosted/awesome-selfhosted/issues/2266&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/awesome-selfhosted/awesome-selfhosted/master?label=link%20checks&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Self-hosting is the practice of locally hosting and managing applications instead of renting from &lt;a href=&quot;https://www.gnu.org/philosophy/who-does-that-server-really-serve.html&quot;&gt;SaaSS&lt;/a&gt; providers.&lt;/p&gt; 
&lt;p&gt;This is a list of &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software&quot;&gt;Free&lt;/a&gt; Software &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_service&quot;&gt;network services&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_application&quot;&gt;web applications&lt;/a&gt; which can be hosted locally. Non-Free software is listed on the &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/non-free.md&quot;&gt;Non-Free&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software&quot;&gt;Software&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#analytics&quot;&gt;Analytics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#archiving-and-digital-preservation-dp&quot;&gt;Archiving and Digital Preservation (DP)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#automation&quot;&gt;Automation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#blogging-platforms&quot;&gt;Blogging Platforms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#booking-and-scheduling&quot;&gt;Booking and Scheduling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#bookmarks-and-link-sharing&quot;&gt;Bookmarks and Link Sharing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#calendar--contacts&quot;&gt;Calendar &amp;amp; Contacts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#calendar--contacts---caldav-or-carddav-servers&quot;&gt;Calendar &amp;amp; Contacts - CalDAV or CardDAV Servers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#calendar--contacts---caldav-or-carddav-web-based-clients&quot;&gt;Calendar &amp;amp; Contacts - CalDAV or CardDAV Web-based Clients&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication&quot;&gt;Communication&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---custom-communication-systems&quot;&gt;Communication - Custom Communication Systems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---email&quot;&gt;Communication - Email&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---email---complete-solutions&quot;&gt;Communication - Email - Complete Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---email---mail-delivery-agents&quot;&gt;Communication - Email - Mail Delivery Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---email---mail-transfer-agents&quot;&gt;Communication - Email - Mail Transfer Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---email---mailing-lists-and-newsletters&quot;&gt;Communication - Email - Mailing Lists and Newsletters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---email---webmail-clients&quot;&gt;Communication - Email - Webmail Clients&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---irc&quot;&gt;Communication - IRC&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---sip&quot;&gt;Communication - SIP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---social-networks-and-forums&quot;&gt;Communication - Social Networks and Forums&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---xmpp&quot;&gt;Communication - XMPP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---xmpp---servers&quot;&gt;Communication - XMPP - Servers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#communication---xmpp---web-clients&quot;&gt;Communication - XMPP - Web Clients&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#community-supported-agriculture-csa&quot;&gt;Community-Supported Agriculture (CSA)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#conference-management&quot;&gt;Conference Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#content-management-systems-cms&quot;&gt;Content Management Systems (CMS)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#dns&quot;&gt;DNS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#document-management&quot;&gt;Document Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#document-management---e-books&quot;&gt;Document Management - E-books&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#document-management---institutional-repository-and-digital-library-software&quot;&gt;Document Management - Institutional Repository and Digital Library Software&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#document-management---integrated-library-systems-ils&quot;&gt;Document Management - Integrated Library Systems (ILS)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#e-commerce&quot;&gt;E-commerce&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#federated-identity--authentication&quot;&gt;Federated Identity &amp;amp; Authentication&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#feed-readers&quot;&gt;Feed Readers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#file-transfer--synchronization&quot;&gt;File Transfer &amp;amp; Synchronization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#file-transfer---distributed-filesystems&quot;&gt;File Transfer - Distributed Filesystems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#file-transfer---object-storage--file-servers&quot;&gt;File Transfer - Object Storage &amp;amp; File Servers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#file-transfer---peer-to-peer-filesharing&quot;&gt;File Transfer - Peer-to-peer Filesharing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#file-transfer---single-click--drag-n-drop-upload&quot;&gt;File Transfer - Single-click &amp;amp; Drag-n-drop Upload&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#file-transfer---web-based-file-managers&quot;&gt;File Transfer - Web-based File Managers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#games&quot;&gt;Games&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#gateways-and-terminal-sharing&quot;&gt;Gateways and Terminal Sharing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#genealogy&quot;&gt;Genealogy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#groupware&quot;&gt;Groupware&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#human-resources-management-hrm&quot;&gt;Human Resources Management (HRM)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#internet-of-things-iot&quot;&gt;Internet of Things (IoT)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#knowledge-management-tools&quot;&gt;Knowledge Management Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#learning-and-courses&quot;&gt;Learning and Courses&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#maps-and-global-positioning-system-gps&quot;&gt;Maps and Global Positioning System (GPS)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#media-streaming&quot;&gt;Media Streaming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#media-streaming---audio-streaming&quot;&gt;Media Streaming - Audio Streaming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#media-streaming---multimedia-streaming&quot;&gt;Media Streaming - Multimedia Streaming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#media-streaming---video-streaming&quot;&gt;Media Streaming - Video Streaming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#miscellaneous&quot;&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#money-budgeting--management&quot;&gt;Money, Budgeting &amp;amp; Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#monitoring&quot;&gt;Monitoring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#note-taking--editors&quot;&gt;Note-taking &amp;amp; Editors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#office-suites&quot;&gt;Office Suites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#password-managers&quot;&gt;Password Managers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#pastebins&quot;&gt;Pastebins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#personal-dashboards&quot;&gt;Personal Dashboards&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#photo-and-video-galleries&quot;&gt;Photo and Video Galleries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#polls-and-events&quot;&gt;Polls and Events&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#read-it-later-lists&quot;&gt;Read-it-later Lists&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#recipe-management&quot;&gt;Recipe Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#resource-planning&quot;&gt;Resource Planning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#resource-planning---enterprise-resource-planning&quot;&gt;Resource Planning - Enterprise Resource Planning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#search-engines&quot;&gt;Search Engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#self-hosting-solutions&quot;&gt;Self-hosting Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development&quot;&gt;Software Development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---api-management&quot;&gt;Software Development - API Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---bug-trackers&quot;&gt;Software Development - Bug Trackers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---continuous-integration--deployment&quot;&gt;Software Development - Continuous Integration &amp;amp; Deployment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---documentation-generators&quot;&gt;Software Development - Documentation Generators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---faas--serverless&quot;&gt;Software Development - FaaS &amp;amp; Serverless&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---ide--tools&quot;&gt;Software Development - IDE &amp;amp; Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---localization&quot;&gt;Software Development - Localization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---project-management&quot;&gt;Software Development - Project Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---ux-testing&quot;&gt;Software Development - UX Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#static-site-generators&quot;&gt;Static Site Generators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#task-management--to-do-lists&quot;&gt;Task Management &amp;amp; To-do Lists&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ticketing&quot;&gt;Ticketing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#url-shorteners&quot;&gt;URL Shorteners&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#vpn&quot;&gt;VPN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#web-servers&quot;&gt;Web Servers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#wikis&quot;&gt;Wikis&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#list-of-licenses&quot;&gt;List of Licenses&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#external-links&quot;&gt;External Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#authors&quot;&gt;Authors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Software&lt;/h2&gt; 
&lt;!-- BEGIN SOFTWARE LIST --&gt; 
&lt;h3&gt;Analytics&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://github.com/0xnr/awesome-analytics&quot;&gt;Awesome Analytics&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#personal-dashboards&quot;&gt;Personal Dashboards&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Archiving and Digital Preservation (DP)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#content-management-systems-cms&quot;&gt;Content Management Systems (CMS)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accesstomemory.org/&quot;&gt;Access to Memory (AtoM)&lt;/a&gt; - Web-based, open source application for standards-based archival description and access in a multilingual, multi-repository environment. (&lt;a href=&quot;https://demo.accesstomemory.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/artefactual/atom&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0-only&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://archivebox.io/&quot;&gt;ArchiveBox&lt;/a&gt; - Self-hosted &lt;em&gt;wayback machine&lt;/em&gt; that creates HTML &amp;amp; screenshot archives of sites from your bookmarks, browsing history, RSS feeds, or other sources. (&lt;a href=&quot;https://github.com/ArchiveBox/ArchiveBox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.archivematica.org/&quot;&gt;Archivematica&lt;/a&gt; - Mature digital preservation system designed to maintain standards-based, long-term access to collections of digital objects. (&lt;a href=&quot;https://sandbox.archivematica.org/administration/accounts/login/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/artefactual/archivematica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0-only&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://archivesspace.org/&quot;&gt;ArchivesSpace&lt;/a&gt; - Archives information management application for managing and providing Web access to archives, manuscripts and digital objects. (&lt;a href=&quot;https://archivesspace.org/application/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/archivesspace/archivesspace&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ECL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ckan.org&quot;&gt;CKAN&lt;/a&gt; - CKAN is a tool for making open data websites. (&lt;a href=&quot;https://github.com/ckan/ckan&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://collectiveaccess.org/&quot;&gt;Collective Access - Providence&lt;/a&gt; - Highly configurable Web-based framework for management, description, and discovery of digital and physical collections supporting a variety of metadata standards, data types, and media formats. (&lt;a href=&quot;https://github.com/collectiveaccess/providence&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0-only&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/horahoradev/horahora&quot;&gt;Horahora&lt;/a&gt; - Video hosting website and video archival manager for Niconico, Bilibili, and Youtube. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automation&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#internet-of-things-iot&quot;&gt;Internet of Things (IoT)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tokenmill/accelerated-text&quot;&gt;Accelerated Text&lt;/a&gt; - Automatically generate multiple natural language descriptions of your data varying in wording and structure. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/actionsflow/actionsflow&quot;&gt;Actionsflow&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - The free Zapier/IFTTT alternative for developers to automate your workflows based on Github actions. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/automaticmode/active_workflow&quot;&gt;ActiveWorkflow&lt;/a&gt; - An intelligent process and workflow automation platform based on software agents. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alltubedownload.net&quot;&gt;Alltube&lt;/a&gt; - Web interface for &lt;a href=&quot;https://github.com/ytdl-org/youtube-dl&quot;&gt;youtube-dl&lt;/a&gt;, a program to download videos and audio from &lt;a href=&quot;https://ytdl-org.github.io/youtube-dl/supportedsites.html&quot;&gt;more than 100 websites&lt;/a&gt;. (&lt;a href=&quot;https://github.com/Rudloff/alltube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amiunique.org/&quot;&gt;AmIUnique&lt;/a&gt; - Learn how identifiable you are on the Internet (browser fingerprinting tool). (&lt;a href=&quot;https://github.com/DIVERSIFY-project/amiunique&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://baserow.io/&quot;&gt;Baserow&lt;/a&gt; - Open source online database tool and Airtable alternative. Create your own database without technical experience. (&lt;a href=&quot;https://gitlab.com/bramw/baserow&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muesli/beehive&quot;&gt;Beehive&lt;/a&gt; - Flexible event and agent system, which allows you to create your own agents that perform automated tasks triggered by events and filters. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sentriz/betanin/&quot;&gt;betanin&lt;/a&gt; - Music organization man-in-the-middle of your torrent client and music player. Based on beets.io, similar to Sonarr and Radarr. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chiefonboarding.com&quot;&gt;ChiefOnboarding&lt;/a&gt; - Employee onboarding platform that allows you to provision user accounts and create sequences with todo items, resources, text/email/Slack messages, and more! Available as a web portal and Slack bot. (&lt;a href=&quot;https://github.com/chiefonboarding/ChiefOnboarding&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://couchpota.to/&quot;&gt;CouchPotato&lt;/a&gt; - CouchPotato is an automatic Video Library Manager for Movies. Automatic torrent/nzb searching, downloading, and processing at the qualities you want. (&lt;a href=&quot;https://github.com/CouchPotato/CouchPotatoServer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/guptachetan1997/Episodes&quot;&gt;Episodes&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Self Hosted TV show Episode tracker and recommender built using django, bootstrap4. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exadel.com/solutions/compreface/&quot;&gt;Exadel CompreFace&lt;/a&gt; - face recognition system that provides REST API for face recognition, face detection, and other face services, and is easily deployed with docker. There are SDKs for Python and JavaScript languages. Can be used without prior machine learning skills. (&lt;a href=&quot;https://github.com/exadel-inc/CompreFace&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker/Java/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feed2toot.readthedocs.io/&quot;&gt;feed2toot&lt;/a&gt; - Feed2toot parses a RSS feed, extracts the last entries and sends them to Mastodon. (&lt;a href=&quot;https://gitlab.com/chaica/feed2toot&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cristoper/feedmixer&quot;&gt;feedmixer&lt;/a&gt; - FeedMixer is a WSGI (Python3) micro web service which takes a list of feed URLs and returns a new feed consisting of the most recent n entries from each given feed(Returns Atom, RSS, or JSON). (&lt;a href=&quot;https://mretc.net/feedmixer/json?f=https://hnrss.org/newest&amp;amp;f=https://americancynic.net/atom.xml&amp;amp;n=1&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rembo10/headphones&quot;&gt;Headphones&lt;/a&gt; - Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, ¬µTorrent, Deluge and Blackhole. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://healthchecks.io/&quot;&gt;Healthchecks&lt;/a&gt; - Django app which listens for pings and sends alerts when pings are late. (&lt;a href=&quot;https://github.com/healthchecks/healthchecks&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Binnette/homebank-converter&quot;&gt;homebank-converter&lt;/a&gt; - Web app to convert an export bank file to compatible Homebank csv. (&lt;a href=&quot;https://binnette.github.io/homebank-converter/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zelon88/HRConvert2&quot;&gt;HRConvert2&lt;/a&gt; - Drag-and-drop file conversion server with session based authentication, automatic temporary file maintenance, and logging capability. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huginn/huginn&quot;&gt;Huginn&lt;/a&gt; - Allows you to build agents that monitor and act on your behalf. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kibitzr.github.io&quot;&gt;Kibitzr&lt;/a&gt; - Lightweight personal web assistant with powerful integrations. (&lt;a href=&quot;https://github.com/kibitzr/kibitzr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://krayincrm.com/&quot;&gt;Krayin&lt;/a&gt; - Free and Opensource Laravel CRM Application. (&lt;a href=&quot;https://github.com/krayin/laravel-crm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/LazyLibrarian/LazyLibrarian&quot;&gt;LazyLibrarian&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getleon.ai&quot;&gt;Leon&lt;/a&gt; - Open-source personal assistant who can live on your server. (&lt;a href=&quot;https://github.com/leon-ai/leon&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lidarr.audio/&quot;&gt;Lidarr&lt;/a&gt; - Lidarr is a music collection manager for Usenet and BitTorrent users. (&lt;a href=&quot;https://github.com/Lidarr/Lidarr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pymedusa.com/&quot;&gt;Medusa&lt;/a&gt; - Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. (&lt;a href=&quot;https://github.com/pymedusa/Medusa&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexta69/metube&quot;&gt;MeTube&lt;/a&gt; - Web GUI for youtube-dl, with playlist support. Allows downloading videos from dozens of websites. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; - Free node based Workflow Automation Tool. Easily automate tasks across different services. (&lt;a href=&quot;https://github.com/n8n-io/n8n&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lardbit/nefarious&quot;&gt;nefarious&lt;/a&gt; - Web application that automates downloading Movies and TV Shows. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nocodb.com/&quot;&gt;NocoDB&lt;/a&gt; - No-code platform that turns any database into a smart spreadsheet. It can be considered as an Airtable or Smartsheet alternative. (&lt;a href=&quot;https://github.com/nocodb/nocodb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OliveTin/OliveTin&quot;&gt;OliveTin&lt;/a&gt; - OliveTin is a web interface for running Linux shell commands. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Patrowl/PatrowlManager&quot;&gt;Patrowl&lt;/a&gt; - Open Source, Smart and Scalable Security Operations Orchestration Platform. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/akhilrex/podgrab&quot;&gt;Podgrab&lt;/a&gt; - Lightweight podcast manager and automatic podcast episode downloader. It will monitor podcasts for your and download them automatically whenever a new episode goes live. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pyload.net/&quot;&gt;pyLoad&lt;/a&gt; - Lightweight, customizable and remotely manageable downloader for 1-click-hosting sites like rapidshare.com or uploaded.to. (&lt;a href=&quot;https://github.com/pyload/pyload&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://radarr.video/&quot;&gt;Radarr&lt;/a&gt; - Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent, √† la Couchpotato. (&lt;a href=&quot;https://github.com/Radarr/Radarr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sickrage.ca&quot;&gt;SickRage&lt;/a&gt; - SickRage is an automatic Video Library Manager for TV Shows. Automatic torrent/nzb searching, downloading, and processing at the qualities you want. (&lt;a href=&quot;https://github.com/SickRage/SickRage&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getsiteinspector.com/&quot;&gt;SiteInspector&lt;/a&gt; - Web-based tool for catching spelling errors, grammatical errors, broken links, and other errors on websites. (&lt;a href=&quot;https://demo.getsiteinspector.com/reports&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/siteinspector/siteinspector&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sonarr.tv/&quot;&gt;Sonarr&lt;/a&gt; - Automatic TV Shows downloader and manager for Usenet and BitTorrent. It can grab, sort and rename new episodes and automatically upgrade the quality of files already downloaded when a better quality format becomes available. (&lt;a href=&quot;https://github.com/Sonarr/Sonarr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackstorm.com&quot;&gt;StackStorm&lt;/a&gt; - StackStorm (aka &lt;em&gt;IFTTT for Ops&lt;/em&gt;) is event-driven automation for auto-remediation, security responses, troubleshooting, deployments, and more. Includes rules engine, workflow, 160 integration packs with 6000+ actions and ChatOps. (&lt;a href=&quot;https://github.com/StackStorm/st2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ziahamza/webui-aria2&quot;&gt;WebUI-aria2&lt;/a&gt; - Interface to interact with the aria2 downloader. Very simple to use, just download and open index.html in any web browser. (&lt;a href=&quot;https://ziahamza.github.io/webui-aria2/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Totonyus/ydl_api&quot;&gt;ydl_api&lt;/a&gt; - Simple youtube-dl REST API to launch downloads on a distant server. &lt;code&gt;Unlicense&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tzahi12345/YoutubeDL-Material&quot;&gt;YoutubeDL-Material&lt;/a&gt; - Material Design inspired YouTube downloader, based on youtube-dl. Supports playlists, quality select, search, dark mode and much more, all with a clean and modern design. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DeviaVir/zenbot&quot;&gt;Zenbot&lt;/a&gt; - Zenbot is a lightweight, extendable, artificially intelligent trading bot for Bitcoin, Ether, Litecoin, and more. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thezeroqueue/zeroqueue&quot;&gt;ZeroQueue&lt;/a&gt; - A low-code queue management system that lets you run scheduled jobs for anything. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ovh/utask&quot;&gt;¬µTask&lt;/a&gt; - ¬µTask is an automation engine that models and executes business processes declared in yaml. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Blogging Platforms&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#static-site-generators&quot;&gt;Static Site Generators&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#content-management-systems-cms&quot;&gt;Content Management Systems (CMS)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also: &lt;a href=&quot;https://www.weblogmatrix.org/&quot;&gt;WeblogMatrix&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://antville.org&quot;&gt;Antville&lt;/a&gt; - Free, open source project aimed at the development of a high performance, feature rich weblog hosting software. (&lt;a href=&quot;https://github.com/antville/antville&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m1k1o/blog&quot;&gt;Blog&lt;/a&gt; - Facebook-styled blog. Free, extremely lightweight, single-user and easy to install. (&lt;a href=&quot;https://blog.m1k1o.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BlogoText/blogotext&quot;&gt;Blogotext&lt;/a&gt; - Free blog-engine written in PHP and using SQLite. This offers you both an unmatched simplicity during installation and great performances. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bludit.com/&quot;&gt;Bludit&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Simple application to build a site or blog in seconds. Bludit uses flat-files (text files in JSON format) to store posts and pages. (&lt;a href=&quot;https://demo.bludit.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/bludit/bludit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ldemafelix/cadmus&quot;&gt;Cadmus&lt;/a&gt; - Cadmus is an extremely lightweight, flat-file blogging platform powered by Markdown. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trycanvas.app/&quot;&gt;Canvas&lt;/a&gt; - A Laravel publishing platform. (&lt;a href=&quot;https://github.com/austintoddj/canvas&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chyrplite.net&quot;&gt;Chyrp Lite&lt;/a&gt; - Extra-awesome, extra-lightweight blog engine. (&lt;a href=&quot;https://github.com/xenocrat/chyrp-lite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dante-stories.herokuapp.com/&quot;&gt;Dante Stories&lt;/a&gt; - Self hosted Medium platform built with Ruby on Rails. (&lt;a href=&quot;https://github.com/michelson/dante-stories&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotclear.org/&quot;&gt;Dotclear&lt;/a&gt; - Take control over your blog. (&lt;a href=&quot;https://hg.dotclear.org/dotclear&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://formtools.org/&quot;&gt;Formtools&lt;/a&gt; - Powerful, flexible, free and open source PHP/MySQL script to manage your forms and data. (&lt;a href=&quot;https://github.com/formtools&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghost.org/&quot;&gt;Ghost&lt;/a&gt; - Just a blogging platform. (&lt;a href=&quot;https://github.com/TryGhost/Ghost&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://havenweb.org/&quot;&gt;Haven&lt;/a&gt; - Private blogging system with markdown editing and built in RSS reader. (&lt;a href=&quot;https://havenweb.org/demo.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/havenweb/haven&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hotglue.me/&quot;&gt;Hotglue&lt;/a&gt; - Freehand CMS which allows to construct websites directly in a web-browser. It uses flat files for storage and provides an intuitive GUI. (&lt;a href=&quot;https://hotglue.me/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/k0a1a/hotglue2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.htmly.com/&quot;&gt;htmly&lt;/a&gt; - Databaseless Blogging Platform (Flat-File Blog). (&lt;a href=&quot;https://demo.htmly.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/danpros/htmly&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://withknown.com/&quot;&gt;Known&lt;/a&gt; - A collaborative social publishing platform. (&lt;a href=&quot;https://github.com/idno/known&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinplu.me/&quot;&gt;Plume&lt;/a&gt; - Federated blogging engine, based on ActivityPub. (&lt;a href=&quot;https://github.com/Plume-org/Plume&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pluxml.org&quot;&gt;PluXml&lt;/a&gt; - XML-based blog/CMS platform. (&lt;a href=&quot;https://github.com/pluxml/PluXml&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.s9y.org/&quot;&gt;Serendipity&lt;/a&gt; - Serendipity (s9y) is a highly extensible and customizable PHP blog engine using Smarty templating. (&lt;a href=&quot;https://github.com/s9y/serendipity&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Booking and Scheduling&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#polls-and-events&quot;&gt;Polls and Events&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alf.io/&quot;&gt;Alf.io&lt;/a&gt; - The open source ticket reservation system. (&lt;a href=&quot;https://demo.alf.io/authentication&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/alfio-event/alf.io&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://calendso.com/&quot;&gt;Calendso&lt;/a&gt; - The open-source online appointment scheduling system. (&lt;a href=&quot;https://app.calendso.com/bailey&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/calendso/calendso&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://easyappointments.org/&quot;&gt;Easy!Appointments&lt;/a&gt; - A highly customizable web application that allows your customers to book appointments with you via the web. (&lt;a href=&quot;https://easyappointments.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/alextselegidis/easyappointments&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bookmarks and Link Sharing&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dyu/bookmarks&quot;&gt;dyu bookmarks&lt;/a&gt; - Single-threaded/process bookmark app powered by leveldb and uWebSockets. Supports importing from Delicious and Chrome. (&lt;a href=&quot;https://dyuproject.com/bookmarks/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonschoning/espial&quot;&gt;Espial&lt;/a&gt; - An open-source, web-based bookmarking server. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mozilla-services.readthedocs.io/en/latest/howtos/run-fxa.html&quot;&gt;Firefox Account Server&lt;/a&gt; - This allows you to host your own Firefox accounts server. (&lt;a href=&quot;https://github.com/mozilla/fxa&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Nodejs, Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla-services/syncserver&quot;&gt;Firefox Sync Server&lt;/a&gt; - Sync Firefox bookmarks, passwords, history, tabs, preferences. &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://geekmarks.dmitryfrank.com/&quot;&gt;Geekmarks&lt;/a&gt; - Personal bookmarking service focused on speed and organization using hierarchical tags. (&lt;a href=&quot;https://github.com/dimonomid/geekmarks&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.mills.io/prologic/golinks&quot;&gt;golinks&lt;/a&gt; - Web application that allows you to create smart bookmarks, commands and aliases by pointing your web browser&#39;s default search engine at a running instance. Similar to bunny1 or yubnub. (&lt;a href=&quot;https://search.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hackershare/hackershare&quot;&gt;Hackershare&lt;/a&gt; - Social bookmarks website for hackers. (&lt;a href=&quot;https://hackershare.dev&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linkace.org/&quot;&gt;LinkAce&lt;/a&gt; - A bookmark archive with automatic backups to the Internet Archive, link monitoring, and a full REST API. Installation is done via Docker, or as a simple PHP application. (&lt;a href=&quot;https://demo.linkace.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Kovah/LinkAce/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sissbruecker/linkding&quot;&gt;linkding&lt;/a&gt; - Minimal bookmark management with a fast and clean UI. Simple installation through Docker and can run on your Raspberry Pi. (&lt;a href=&quot;https://demo.linkding.link/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Python/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lobste.rs&quot;&gt;Lobsters&lt;/a&gt; - Run your own link aggregation site. (&lt;a href=&quot;https://github.com/jcs/lobsters&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nofussbm.herokuapp.com/signup.html&quot;&gt;No Fuss Bookmarks&lt;/a&gt; - Very simple software and service to store bookmarks especially designed for hackers (that don&#39;t need fancy interfaces, but nice API). (&lt;a href=&quot;https://github.com/mapio/nofussbm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getpinry.com/&quot;&gt;Pinry&lt;/a&gt; - The tiling image board system for people who want to save, tag, and share images, videos, and webpages. (&lt;a href=&quot;https://github.com/pinry/pinry&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kanishka-linux/reminiscence&quot;&gt;Reminiscence&lt;/a&gt; - Self-Hosted Bookmark And Archive Manager. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shaarli/Shaarli&quot;&gt;Shaarli&lt;/a&gt; - Personal, minimalist, super-fast, no-database bookmarking and link sharing platform. (&lt;a href=&quot;https://demo.shaarli.org&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Zlib&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/go-shiori/shiori&quot;&gt;Shiori&lt;/a&gt; - Simple bookmark manager built with Go. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ungleich.ch/u/projects/ubookmark/&quot;&gt;ubookmark&lt;/a&gt; - LDAP enabled bookmarking service. (&lt;a href=&quot;https://ipv6.blog&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://code.ungleich.ch/ungleich-public/ubookmark/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unmark.it/&quot;&gt;unmark&lt;/a&gt; - Open source to do app for links. (&lt;a href=&quot;https://github.com/cdevroe/unmark&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xbrowsersync.org&quot;&gt;xBrowserSync&lt;/a&gt; - Open source tool for syncing browser data between browsers and devices. (&lt;a href=&quot;https://github.com/xBrowserSync&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Calendar &amp;amp; Contacts&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#groupware&quot;&gt;Groupware&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also: &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_CalDAV_and_CardDAV_implementations&quot;&gt;Comparison of CalDAV and CardDAV implementations - Wikipedia&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Calendar &amp;amp; Contacts - CalDAV or CardDAV Servers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sabre.io/baikal/&quot;&gt;Ba√Økal&lt;/a&gt; - Lightweight CalDAV and CardDAV server based on sabre/dav. (&lt;a href=&quot;https://github.com/sabre-io/Baikal&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keithp.com/calypso/&quot;&gt;calypso&lt;/a&gt; - Python-based CalDAV and CardDAV server, forked from Radicale. (&lt;a href=&quot;https://keithp.com/git/calypso.git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.davical.org/&quot;&gt;DAViCal&lt;/a&gt; - Server for calendar sharing (CalDAV) that uses a PostgreSQL database as a data store. (&lt;a href=&quot;https://gitlab.com/davical-project/davical&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tchapi/davis/&quot;&gt;Davis&lt;/a&gt; - A simple, dockerizable and fully translatable admin interface for sabre/dav based on Symfony 5 and Bootstrap 4, largely inspired by Ba√Økal. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://f-droid.org/packages/org.decsync.cc/&quot;&gt;DecSync CC&lt;/a&gt; - Serverless contacts, calendar synchronization using your own file syncing method i.e Syncthing, Nextcloud etc. (&lt;a href=&quot;https://github.com/39aldo39/DecSyncCC&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Kotlin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etebase.com/&quot;&gt;Etebase (EteSync)&lt;/a&gt; - End-to-end encrypted and journaled personal information server supporting calendar and contact data, offering its own clients. (&lt;a href=&quot;https://github.com/etesync/server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://radicale.org/&quot;&gt;Radicale&lt;/a&gt; - Simple calendar and contact server with extremely low administrative overhead. (&lt;a href=&quot;https://github.com/Kozea/Radicale&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sabre.io/&quot;&gt;SabreDAV&lt;/a&gt; - Open source CardDAV, CalDAV, and WebDAV framework and server. (&lt;a href=&quot;https://github.com/sabre-io/dav&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xandikos.org/&quot;&gt;Xandikos&lt;/a&gt; - Open source CardDAV and CalDAV server with minimal administrative overhead, backed by a Git repository. (&lt;a href=&quot;https://github.com/jelmer/xandikos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Calendar &amp;amp; Contacts - CalDAV or CardDAV Web-based Clients&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://agendav.org/&quot;&gt;AgenDAV&lt;/a&gt; - Multilanguage CalDAV web client with a rich AJAX interface and shared calendars support. (&lt;a href=&quot;https://github.com/agendav/agendav&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etesync.com/faq/#web-client&quot;&gt;EteSync Web&lt;/a&gt; - EteSync&#39;s official Web-based client (i.e., their Web app). (&lt;a href=&quot;https://client.etesync.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/etesync/etesync-web&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inf-it.com/open-source/clients/infcloud/&quot;&gt;InfCloud&lt;/a&gt; - Open source CalDAV/CardDAV web client implementation. (&lt;a href=&quot;https://www.inf-it.com/infcloud/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://www.inf-it.com/InfCloud_0.13.1.zip&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Communication - Custom Communication Systems&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/niedev/BluetoothCommunicatorExample&quot;&gt;BluetoothCommunicatorExample&lt;/a&gt; - Bluetooth LE chat app to communicate between android devices with P2P architecture. (&lt;a href=&quot;https://github.com/niedev/RTranslator&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/centrifugal/centrifugo&quot;&gt;Centrifugo&lt;/a&gt; - Language-agnostic real-time messaging (Websocket or SockJS) server. (&lt;a href=&quot;https://github.com/centrifugal/centrifugo#demo&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chaskiq.io&quot;&gt;Chaskiq&lt;/a&gt; - Full featured livechat, helpcenter and CRM as an alternative to Intercom &amp;amp; Drift, Crisp and others. (&lt;a href=&quot;https://github.com/chaskiq/chaskiq&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chatwoot.com&quot;&gt;Chatwoot&lt;/a&gt; - Self-hosted customer communication platform, an alternative to Intercom &amp;amp; Zendesk. (&lt;a href=&quot;https://github.com/chatwoot/chatwoot&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rafael-santiago/cherry&quot;&gt;Cherry&lt;/a&gt; - Tiny webchat server. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://conduit.rs/&quot;&gt;Conduit&lt;/a&gt; - A simple, fast, and reliable chat server powered by Matrix. (&lt;a href=&quot;https://gitlab.com/famedly/conduit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darkwire/darkwire.io&quot;&gt;Darkwire.io&lt;/a&gt; - End-to-end encrypted instant web chat. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://element.io&quot;&gt;Element&lt;/a&gt; - Fully-featured Matrix client for Web, iOS &amp;amp; Android. (&lt;a href=&quot;https://github.com/vector-im/element-web&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/enigma-reloaded/enigma-reloaded&quot;&gt;Enigma Reloaded&lt;/a&gt; - DIY Message and file encryption for any platform. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freenetproject.org/index.html&quot;&gt;Freenet&lt;/a&gt; - Anonymously share files, browse and publish &lt;em&gt;freesites&lt;/em&gt; (web sites accessible only through Freenet) and chat on forums. (&lt;a href=&quot;https://github.com/freenet/fred&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://galene.org/&quot;&gt;Galene&lt;/a&gt; - Gal√®ne (or Galene) is a videoconference server (an ‚ÄúSFU‚Äù) that is easy to deploy and that requires moderate server resources. (&lt;a href=&quot;https://github.com/jech/galene&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gnunet.org/&quot;&gt;GNUnet&lt;/a&gt; - Free software framework for decentralized, peer-to-peer networking. (&lt;a href=&quot;https://gnunet.org/git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotify.net/&quot;&gt;Gotify&lt;/a&gt; - Self-hosted notification server with Android and CLI clients, similar to PushBullet. (&lt;a href=&quot;https://github.com/gotify/server&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/gotify/android&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hawkpost.co&quot;&gt;Hawkpost&lt;/a&gt; - HawkPost is a web app that lets you create unique links that you can share with a person that desires to send you important information but doesn&#39;t know how to encrypt it. The message is encrypted in their browser and sent to your email address. (&lt;a href=&quot;https://github.com/whitesmith/hawkpost&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jami.net/&quot;&gt;Jami&lt;/a&gt; - Free and universal communication platform which preserves the user&#39;s privacy and freedoms (formerly GNU Ring). (&lt;a href=&quot;https://git.ring.cx/savoirfairelinux/ring-project&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jitsi.org/Projects/JitsiMeet&quot;&gt;Jitsi Meet&lt;/a&gt; - Jitsi Meet is an OpenSource (MIT) WebRTC Javascript application that uses Jitsi Videobridge to provide high quality, scalable video conferences. (&lt;a href=&quot;https://github.com/jitsi/jitsi-meet&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jitsi.org/Projects/JitsiVideobridge&quot;&gt;Jitsi Video Bridge&lt;/a&gt; - WebRTC compatible Selective Forwarding Unit (SFU) that allows for multiuser video communication. (&lt;a href=&quot;https://github.com/jitsi/jitsi-videobridge&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/php-kchat/kchat&quot;&gt;KChat&lt;/a&gt; - PHP Based Live Chat Application. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cryptag/leapchat&quot;&gt;LeapChat&lt;/a&gt; - Ephemeral, encrypted, in-browser chat rooms. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sdelements.github.io/lets-chat/&quot;&gt;Lets-Chat&lt;/a&gt; - Self hosted chat suite written in Node. (&lt;a href=&quot;https://github.com/sdelements/lets-chat&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://librenews.io/&quot;&gt;LibreNews&lt;/a&gt; - Decentralized and secure breaking news notification system. (&lt;a href=&quot;https://github.com/milesmcc/LibreNews-Server/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://livehelperchat.com/&quot;&gt;Live Helper Chat&lt;/a&gt; - Live Support chat for your website. (&lt;a href=&quot;https://github.com/LiveHelperChat/livehelperchat&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://livekit.io/&quot;&gt;LiveKit&lt;/a&gt; - Modern, scalable WebRTC conferencing platform with client SDKs. (&lt;a href=&quot;https://livekit.io/playground&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/livekit/livekit-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://matrix.org/docs/projects/client/matrix-console-web&quot;&gt;Matrix Console Web&lt;/a&gt; - Web client meant to be a showcase of Matrix capabilities, and reference implementation of the Matrix standard. (&lt;a href=&quot;https://github.com/matrix-org/matrix-angular-sdk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.org/&quot;&gt;Mattermost&lt;/a&gt; - Open-source, on-prem Slack-alternative. It can be integrated with Gitlab. (&lt;a href=&quot;https://github.com/mattermost/mattermost-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0/Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://miaou.dystroy.org/login&quot;&gt;MiAOU&lt;/a&gt; - Multi-room persistent chat server. (&lt;a href=&quot;https://github.com/Canop/miaou&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mibew.org&quot;&gt;Mibew&lt;/a&gt; - Mibew Messenger is an open-source live support application written in PHP and MySQL. It enables one-on-one chat assistance in real-time directly from your website. (&lt;a href=&quot;https://mibew.org/demo2&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Mibew/mibew&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.mumble.info/wiki/Main_Page&quot;&gt;Mumble&lt;/a&gt; - Low-latency, high quality voice/text chat software. (&lt;a href=&quot;https://github.com/mumble-voip/mumble&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://wiki.mumble.info/wiki/3rd_Party_Applications&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ots.fyi/&quot;&gt;OTS&lt;/a&gt; - One-Time-Secret sharing platform with a symmetric 256bit AES encryption in the browser. (&lt;a href=&quot;https://github.com/Luzifer/ots&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://papercups.io/&quot;&gt;Papercups&lt;/a&gt; - An open source live customer chat web app written in Elixir. (&lt;a href=&quot;https://app.papercups.io/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/papercups-io/papercups&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pushbits/server&quot;&gt;PushBits&lt;/a&gt; - Self-hosted notification server for relaying push notifications via Matrix, similar to PushBullet and Gotify. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/soketi/pws&quot;&gt;pWS&lt;/a&gt; - pWS is a free, open-source Pusher drop-in alternative. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rallly.co&quot;&gt;Rallly&lt;/a&gt; - Rallly is a free collaborative scheduling service. (&lt;a href=&quot;https://github.com/lukevella/Rallly&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC-BY-SA-4.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://retroshare.cc&quot;&gt;RetroShare&lt;/a&gt; - Secured and decentralized communication system. Offers decentralized chat, forums, messaging, file transfer. (&lt;a href=&quot;https://github.com/RetroShare/RetroShare&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revolt.chat/&quot;&gt;Revolt&lt;/a&gt; - Revolt is a user-first chat platform built with modern web technologies. (&lt;a href=&quot;https://github.com/revoltchat&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rocket.chat/&quot;&gt;Rocket.Chat&lt;/a&gt; - Teamchat solution similar to Gitter.im or Slack. (&lt;a href=&quot;https://github.com/RocketChat/Rocket.Chat&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/smallwat3r/shhh&quot;&gt;Shhh&lt;/a&gt; - Keep secrets out of emails or chat logs, share them using secure links with passphrase and expiration dates. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spectrum.im/&quot;&gt;Spectrum 2&lt;/a&gt; - Spectrum 2 is an open source instant messaging transport. It allows users to chat together even when they are using different IM networks. (&lt;a href=&quot;https://github.com/SpectrumIM/spectrum2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spreed.me/&quot;&gt;Spreed&lt;/a&gt; - WebRTC audio/video calls, conferencing server, and web client. (&lt;a href=&quot;https://github.com/strukturag/spreed-webrtc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cweb.gitlab.io/StoneAge.html&quot;&gt;StoneAge Messenger&lt;/a&gt; - A self-hosted Android messenger, S3-compatible storage is the only backend needed. (&lt;a href=&quot;https://gitlab.com/cweb-repos/cweb-conversations&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://f-droid.org/en/packages/com.cweb.messenger/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://matrix.org/docs/projects/server/synapse&quot;&gt;Synapse&lt;/a&gt; - Server for &lt;a href=&quot;https://matrix.org/&quot;&gt;Matrix&lt;/a&gt;, an open standard for decentralized persistent communication. (&lt;a href=&quot;https://github.com/matrix-org/synapse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://syndie.de&quot;&gt;Syndie&lt;/a&gt; - Syndie is a libre system for operating distributed forums. &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typpo/textbelt&quot;&gt;TextBelt&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Outgoing SMS API that uses carrier-specific gateways to deliver your text messages for free, and without ads. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tinode&quot;&gt;Tinode&lt;/a&gt; - Instant messaging platform. Backend in Go. Clients: Swift iOS, Java Android, JS webapp, scriptable command line; chatbots. (&lt;a href=&quot;https://sandbox.tinode.co/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/tinode/chat&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/tinode/webapp&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tox.chat/&quot;&gt;Tox&lt;/a&gt; - Distributed, secure messenger with audio and video chat capabilities. (&lt;a href=&quot;https://github.com/TokTok/c-toxcore&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.trailofbits.com/2015/12/15/self-hosted-video-chat-with-tuber/&quot;&gt;Tuber&lt;/a&gt; - Peer-to-peer video chat that works. (&lt;a href=&quot;https://github.com/trailofbits/tubertc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lovasoa/whitebophir#wbo&quot;&gt;WBO&lt;/a&gt; - A web Whiteboard to collaborate in real-time on schemas, drawings, and notes. (&lt;a href=&quot;https://wbo.ophir.dev/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zeronet.io/&quot;&gt;ZeroNet&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Open, free, and uncensorable websites, using Bitcoin cryptography and BitTorrent network. (&lt;a href=&quot;https://github.com/HelloZeroNet/ZeroNet&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zulip.org&quot;&gt;Zulip&lt;/a&gt; - Zulip is a powerful, open source group chat application. (&lt;a href=&quot;https://github.com/zulip/zulip&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0/Other&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - Email&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Communication - Email - Complete Solutions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Simple deployment of a mail server, e.g. for inexperienced or impatient admins.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://anonaddy.com&quot;&gt;AnonAddy&lt;/a&gt; - Open source email forwarding service for creating aliases. (&lt;a href=&quot;https://github.com/anonaddy/anonaddy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.debops.org/&quot;&gt;DebOps&lt;/a&gt; - Your Debian-based data center in a box. A set of general-purpose Ansible roles that can be used to manage Debian or Ubuntu hosts. (&lt;a href=&quot;https://github.com/debops/debops&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0-only&lt;/code&gt; &lt;code&gt;YAML/Ansible/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/edge/&quot;&gt;docker-mailserver&lt;/a&gt; - Production-ready fullstack but simple mail server (SMTP, IMAP, LDAP, Antispam, Antivirus, etc.) running inside a container. Only configuration files, no SQL database. (&lt;a href=&quot;https://github.com/docker-mailserver/docker-mailserver&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LukeSmithxyz/emailwiz&quot;&gt;emailwiz&lt;/a&gt; - Luke Smith&#39;s bash script to completely automate the setup of a Postfix/Dovecot/SpamAssassin/OpenDKIM server on debian. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Bash&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Excision-Mail/Excision-Mail&quot;&gt;Excision Mail&lt;/a&gt; - Fullstack, security focused mailserver based on OpenSMTPD for OpenBSD using ansible. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Shell/Ansible&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/progmaticltd/homebox&quot;&gt;homebox&lt;/a&gt; - Suite of Ansible scripts to deploy a fully functional mail server on Debian. Unobtrusive and automatic as much as possible, focusing on stability and security. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inboxen.org&quot;&gt;Inboxen&lt;/a&gt; - Inboxen is a service that provides you with an infinite number of unique inboxes. (&lt;a href=&quot;https://github.com/Inboxen/Inboxen&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.iredmail.org/&quot;&gt;iRedMail&lt;/a&gt; - Full-featured mail server solution based on Postfix and Dovecot. (&lt;a href=&quot;https://github.com/iredmail/iRedMail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/foxcpp/maddy&quot;&gt;Maddy Mail Server&lt;/a&gt; - All-in-one mail server that implements SMTP (both MTA and MX) and IMAP. Replaces Postfix, Dovecot, OpenDKIM, OpenSPF, OpenDMARC with single daemon. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailinabox.email/&quot;&gt;Mail-in-a-Box&lt;/a&gt; - Turns any Ubuntu server into a fully functional mail server with one command. (&lt;a href=&quot;https://github.com/mail-in-a-box/mailinabox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailcow.email/&quot;&gt;Mailcow&lt;/a&gt; - Mail server suite based on Dovecot, Postfix and other open source software, that provides a modern Web UI for administration. (&lt;a href=&quot;https://github.com/mailcow/mailcow-dockerized&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Docker/PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailu.io/&quot;&gt;Mailu&lt;/a&gt; - Mailu is a simple yet full-featured mail server as a set of Docker images. (&lt;a href=&quot;https://github.com/Mailu/Mailu&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modoboa.org/en/&quot;&gt;Modoboa&lt;/a&gt; - Modoboa is a mail hosting and management platform including a modern and simplified Web User Interface. (&lt;a href=&quot;https://github.com/modoboa/modoboa&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xyfir/ptorx&quot;&gt;Ptorx&lt;/a&gt; - Email privacy. Anonymously send and receive with alias forwarding. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/simple-nixos-mailserver/nixos-mailserver&quot;&gt;Simple NixOS Mailserver&lt;/a&gt; - Complete mailserver solution leveraging the Nix Ecosystem. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nix&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://simplelogin.io&quot;&gt;SimpleLogin&lt;/a&gt; - Open source email alias solution to protect your email address. Comes with browser extensions and mobile apps. (&lt;a href=&quot;https://github.com/simple-login/app&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wildduck.email/&quot;&gt;wildduck&lt;/a&gt; - Scalable no-SPOF IMAP/POP3 mail server. (&lt;a href=&quot;https://github.com/nodemailer/wildduck&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EUPL-1.2&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - Email - Mail Delivery Agents&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;MDAs - IMAP/POP3 software&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cyrusimap.org/&quot;&gt;Cyrus IMAP&lt;/a&gt; - Email (IMAP/POP3), contacts and calendar server. (&lt;a href=&quot;https://github.com/cyrusimap/cyrus-imapd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause-Attribution&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dovecot.org/&quot;&gt;Dovecot&lt;/a&gt; - IMAP and POP3 server written primarily with security in mind. (&lt;a href=&quot;https://github.com/dovecot/core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT/LGPL-2.1&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Feuerhamster/mailform&quot;&gt;MailForm&lt;/a&gt; - Lightweight self-hosted open source alternative to Formspree and SendGrid. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mailpiler.org/wiki/start&quot;&gt;Piler&lt;/a&gt; - feature-rich open source email archiving solution. (&lt;a href=&quot;https://bitbucket.org/jsuto/piler&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - Email - Mail Transfer Agents&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;MTAs / SMTP servers&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blitiri.com.ar/p/chasquid/&quot;&gt;chasquid&lt;/a&gt; - SMTP (email) server with a focus on simplicity, security, and ease of operation. (&lt;a href=&quot;https://blitiri.com.ar/git/r/chasquid/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.courier-mta.org/&quot;&gt;Courier MTA&lt;/a&gt; - Fast, scalable, enterprise mail/groupware server providing ESMTP, IMAP, POP3, webmail, mailing list, basic web-based calendaring and scheduling services. (&lt;a href=&quot;https://www.courier-mta.org/repo.html&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.exim.org/&quot;&gt;Exim&lt;/a&gt; - Message transfer agent (MTA) developed at the University of Cambridge. (&lt;a href=&quot;https://git.exim.org/exim.git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://haraka.github.io/&quot;&gt;Haraka&lt;/a&gt; - High-performance, pluginable SMTP server written in Javascript. (&lt;a href=&quot;https://github.com/haraka/Haraka&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailcatcher.me/&quot;&gt;MailCatcher&lt;/a&gt; - Ruby gem that deploys a simply SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. (&lt;a href=&quot;https://github.com/sj26/mailcatcher&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/markbeeson/maildrop&quot;&gt;Maildrop&lt;/a&gt; - Disposable email SMTP server, also useful for development. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mailhog/MailHog&quot;&gt;MailHog&lt;/a&gt; - Small Golang executable which runs an SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opensmtpd.org/&quot;&gt;OpenSMTPD&lt;/a&gt; - Secure SMTP server implementation from the OpenBSD project. (&lt;a href=&quot;https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/smtpd/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.postfix.org/&quot;&gt;Postfix&lt;/a&gt; - Fast, easy to administer, and secure Sendmail replacement. &lt;code&gt;IPL-1.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cr.yp.to/qmail.html&quot;&gt;Qmail&lt;/a&gt; - Secure Sendmail replacement. (&lt;a href=&quot;https://sources.debian.net/src/netqmail/1.06-5/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.proofpoint.com/us/products/email-protection/open-source-email-solution&quot;&gt;Sendmail&lt;/a&gt; - Message transfer agent (MTA). &lt;code&gt;Sendmail&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.slimta.org&quot;&gt;Slimta&lt;/a&gt; - Mail Transfer Library built on Python. (&lt;a href=&quot;https://github.com/slimta/python-slimta&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - Email - Mailing Lists and Newsletters&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Mailing lists servers and mass mailing software - one message to many recipients.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dadamailproject.com/&quot;&gt;Dada Mail&lt;/a&gt; - Web-based list management system that can be used for announcement lists and/or discussion lists. (&lt;a href=&quot;https://github.com/justingit/dada-mail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.list.org/HyperKitty&quot;&gt;HyperKitty&lt;/a&gt; - Open source Django application to provide a web interface to access GNU Mailman v3 archives. (&lt;a href=&quot;https://lists.mailman3.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/mailman/hyperkitty&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listmonk.app/&quot;&gt;Listmonk&lt;/a&gt; - High performance, self-hosted newsletter and mailing list manager with a modern dashboard. (&lt;a href=&quot;https://github.com/knadh/listmonk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/mailman/&quot;&gt;Mailman&lt;/a&gt; - The Gnu mailing list server. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailtrain.org/&quot;&gt;Mailtrain&lt;/a&gt; - Self hosted newsletter application. (&lt;a href=&quot;https://github.com/Mailtrain-org/mailtrain&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailyherald.org/&quot;&gt;MailyHerald&lt;/a&gt; - Self-hosted Mailchimp alternative that you can easily integrate with your site. Helps you send and manage your application mailings. It supports email marketing and conducting the daily stream of notifications you send to your users. (&lt;a href=&quot;https://github.com/Sology/maily_herald&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mautic.org/&quot;&gt;Mautic&lt;/a&gt; - Mautic is marketing automation software (email, social and more). (&lt;a href=&quot;https://github.com/mautic/mautic&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://phplist.org&quot;&gt;phpList&lt;/a&gt; - Newsletter and email marketing with advanced management of subscribers, bounces, and plugins. (&lt;a href=&quot;https://github.com/phpList/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://postal.atech.media/&quot;&gt;Postal&lt;/a&gt; - Fully featured open source mail delivery platform for incoming and outgoing e-mail. (&lt;a href=&quot;https://github.com/postalhq/postal&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mailman3.org/projects/postorius/en/latest/&quot;&gt;Postorius&lt;/a&gt; - Web user interface to access GNU Mailman. (&lt;a href=&quot;https://gitlab.com/mailman/postorius/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://schleuder.nadir.org/&quot;&gt;Schleuder&lt;/a&gt; - GPG-enabled mailing list manager with resending-capabilities. (&lt;a href=&quot;https://0xacab.org/schleuder/schleuder/tree/master&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sympa.org/&quot;&gt;Sympa&lt;/a&gt; - Mailing list manager. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - Email - Webmail Clients&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://afterlogic.org/webmail-lite&quot;&gt;Afterlogic WebMail Lite&lt;/a&gt; - Fast and easy-to-use webmail front-end for your existing IMAP mail server, Plesk or cPanel. (&lt;a href=&quot;https://lite.afterlogic.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/afterlogic/webmail-lite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cypht.org&quot;&gt;Cypht&lt;/a&gt; - Feed reader for your email accounts. (&lt;a href=&quot;https://github.com/jasonmunro/cypht&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.horde.org/apps/imp/&quot;&gt;IMP&lt;/a&gt; - HORDE application that provides webmail access to IMAP and POP3 accounts. (&lt;a href=&quot;http://demo.horde.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://www.horde.org/download/imp&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.marcnuri.com/isotope-mail-client-introduction/&quot;&gt;Isotope Mail&lt;/a&gt; - Microservice based webmail client built with ReactJS and Spring. (&lt;a href=&quot;https://github.com/manusa/isotope-mail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mailcare.io&quot;&gt;MailCare&lt;/a&gt; - Open source disposable email address service. (&lt;a href=&quot;https://github.com/mailcare/mailcare&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mailpile.is/&quot;&gt;Mailpile&lt;/a&gt; - Webmail client with search, filtering, encryption features and more. (&lt;a href=&quot;https://github.com/mailpile/Mailpile&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rainloop.net/&quot;&gt;RainLoop&lt;/a&gt; - Simple, modern and fast webmail with IMAP/SMTP Support and multi accounting. (&lt;a href=&quot;https://mail.rainloop.net&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/RainLoop/rainloop-webmail&quot;&gt;Source Code&lt;/a&gt;). &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://roundcube.net&quot;&gt;Roundcube&lt;/a&gt; - Browser-based IMAP client with an application-like user interface. (&lt;a href=&quot;https://github.com/roundcube/roundcubemail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squirrelmail.org&quot;&gt;SquirrelMail&lt;/a&gt; - Another browser-based IMAP client. (&lt;a href=&quot;https://sourceforge.net/p/squirrelmail/code/HEAD/tree/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - IRC&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Relay_Chat&quot;&gt;IRC&lt;/a&gt; communication software&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://convos.chat/&quot;&gt;Convos&lt;/a&gt; - Always online web IRC client. (&lt;a href=&quot;https://convos.chat/#instant-demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nordaaker/convos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Artistic-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khlieng/dispatch&quot;&gt;Dispatch&lt;/a&gt; - Self-hosted web IRC client written in Go. (&lt;a href=&quot;https://dispatch.khlieng.com/connect&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ergo.chat/&quot;&gt;Ergo&lt;/a&gt; - Modern IRCv3 server written in Go, combining the features of an ircd, a services framework, and a bouncer. (&lt;a href=&quot;https://github.com/ergochat/ergo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glowing-bear/glowing-bear/&quot;&gt;Glowing Bear&lt;/a&gt; - A web frontend for WeeChat. (&lt;a href=&quot;https://www.glowing-bear.org&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inspircd.org/&quot;&gt;InspIRCd&lt;/a&gt; - Modular IRC server written in C++ for Linux, BSD, Windows, and macOS. (&lt;a href=&quot;https://github.com/inspircd/inspircd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GFDL-1.2-only&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kiwiirc.com/&quot;&gt;Kiwi IRC&lt;/a&gt; - Responsive web IRC client with theming support. (&lt;a href=&quot;https://kiwiirc.com/nextclient/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kiwiirc/kiwiirc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ngircd.barton.de/&quot;&gt;ngircd&lt;/a&gt; - Free, portable and lightweight Internet Relay Chat server for small or private networks. (&lt;a href=&quot;https://github.com/ngircd/ngircd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quassel-irc.org/&quot;&gt;Quassel IRC&lt;/a&gt; - distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. (&lt;a href=&quot;https://github.com/quassel/quassel&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://robustirc.net/&quot;&gt;Robust IRC&lt;/a&gt; - RobustIRC is IRC without netsplits. Distributed IRC server, based on RobustSession protocol. (&lt;a href=&quot;https://github.com/robustirc/robustirc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thelounge.chat/&quot;&gt;The Lounge&lt;/a&gt; - Self-hosted web IRC client. (&lt;a href=&quot;https://demo.thelounge.chat/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/thelounge/thelounge&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tt-rss.org/tt-irc/&quot;&gt;Tiny Tiny IRC&lt;/a&gt; - An open source AJAX-powered chat platform with support for IRC (&lt;a href=&quot;https://git.tt-rss.org/fox/tt-irc&quot;&gt;Source Code&lt;/a&gt;). &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.unrealircd.org/&quot;&gt;UnrealIRCd&lt;/a&gt; - Modular, advanced and highly configurable IRC server written in C for Linux, BSD, Windows, and macOS. (&lt;a href=&quot;https://github.com/unrealircd/unrealircd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weechat.org/&quot;&gt;Weechat&lt;/a&gt; - Fast, light and extensible chat client. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.znc.in/ZNC&quot;&gt;ZNC&lt;/a&gt; - Advanced IRC bouncer. (&lt;a href=&quot;https://github.com/znc/znc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - SIP&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Session_Initiation_Protocol&quot;&gt;SIP&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/IP_PBX&quot;&gt;IPBX&lt;/a&gt; telephony software&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.asterisk.org/&quot;&gt;Asterisk&lt;/a&gt; - Easy to use but advanced IP PBX system, VoIP gateway and conference server. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.astppbilling.org/&quot;&gt;ASTPP&lt;/a&gt; - is an Open Source VoIP Billing Solution for Freeswitch. It supports prepaid and postpaid billing with call rating and credit control. It also provides many other features. (&lt;a href=&quot;https://github.com/iNextrix/ASTPP&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freepbx.org&quot;&gt;Freepbx&lt;/a&gt; - Web-based open source GUI that controls and manages Asterisk. (&lt;a href=&quot;https://git.freepbx.org/projects/FREEPBX&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freeswitch.org/&quot;&gt;FreeSWITCH&lt;/a&gt; - Scalable open source cross-platform telephony platform. (&lt;a href=&quot;https://freeswitch.org/stash/projects/FS/repos/freeswitch/browse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fusionpbx.com/&quot;&gt;FusionPBX&lt;/a&gt; - Open source project that provides a customizable and flexible web interface to the very powerful and highly scalable multi-platform voice switch called FreeSWITCH. (&lt;a href=&quot;https://github.com/fusionpbx/fusionpbx&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-1.1&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamailio.org/w/&quot;&gt;Kamailio&lt;/a&gt; - Modular SIP server (registrar/proxy/router/etc). (&lt;a href=&quot;https://github.com/kamailio/kamailio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://2600hz.org/&quot;&gt;Kazoo&lt;/a&gt; - KAZOO is an open-source, highly scalable software platform designed to provide carrier-grade VoIP switch functions and features. (&lt;a href=&quot;https://github.com/2600hz/KAZOO&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-1.1&lt;/code&gt; &lt;code&gt;Erlang&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.guardianproject.info/projects/ostel/wiki/Server_Documentation&quot;&gt;Ostel&lt;/a&gt; - Secure SIP telephony setup with ZRTP encryption. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://routr.io&quot;&gt;Routr&lt;/a&gt; - A lightweight sip proxy, location server, and registrar for a reliable and scalable SIP infrastructure. (&lt;a href=&quot;https://github.com/fonoster/routr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sip3.io/&quot;&gt;SIP3&lt;/a&gt; - VoIP troubleshooting and monitoring platform. (&lt;a href=&quot;https://demo.sip3.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sip3io/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Kotlin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sipcapture.org/&quot;&gt;SIPCAPTURE Homer&lt;/a&gt; - Troubleshooting and monitoring VoIP calls. (&lt;a href=&quot;https://github.com/sipcapture/homer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Angular/C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sipxcom.org/&quot;&gt;SipXcom&lt;/a&gt; - Open source unified communications system. (&lt;a href=&quot;https://github.com/sipXcom/sipxecs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wazo-platform.org/&quot;&gt;Wazo&lt;/a&gt; - Full-featured IPBX solution built atop Asterisk with integrated Web administration interface and REST-ful API. (&lt;a href=&quot;https://github.com/wazo-platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yeti-switch.org/&quot;&gt;Yeti-Switch&lt;/a&gt; - Transit class4 softswitch(SBC) with integrated billing and routing engine and REST API. (&lt;a href=&quot;https://yeti-switch.org/demo.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/yeti-switch&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++/Ruby&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - Social Networks and Forums&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abilian/abilian-sbe&quot;&gt;Abilian SBE&lt;/a&gt; - Open Source Collaboration and Social Networking framework and platform. &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getanahita.com/&quot;&gt;Anahita&lt;/a&gt; - Open Source Social Networking Framework and Platform. (&lt;a href=&quot;https://github.com/anahitasocial&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://board.asm32.info&quot;&gt;AsmBB&lt;/a&gt; - A fast, SQLite-powered forum engine written in ASM. (&lt;a href=&quot;https://asm32.info/fossil/asmbb/index&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EUPL-1.2&lt;/code&gt; &lt;code&gt;Assembly&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bbpress.org/&quot;&gt;bbPress&lt;/a&gt; - bbPress is forum software with a twist from the creators of WordPress. Easily setup discussion forums inside your WordPress.org powered site. (&lt;a href=&quot;https://bbpress.trac.wordpress.org/browser/trunk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bibliogram.art&quot;&gt;Bibliogram&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - An alternative front-end for Instagram. (&lt;a href=&quot;https://sr.ht/~cadence/bibliogram/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trybootcamp.vitorfs.com&quot;&gt;Bootcamp&lt;/a&gt; - Enterprise social network. (&lt;a href=&quot;https://github.com/vitorfs/bootcamp&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://buddycloud.com/&quot;&gt;Buddycloud&lt;/a&gt; - Tools, libraries, services and a community to build user-to-user, group and social messaging into your app. Saves time. Scales up. Supports you. (&lt;a href=&quot;https://github.com/buddycloud&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buddypress.org/about/&quot;&gt;BuddyPress&lt;/a&gt; - Powerful plugin that takes your WordPress.org powered site beyond the blog with social-network features like user profiles, activity streams, user groups, and more. (&lt;a href=&quot;https://github.com/buddypress/BuddyPress&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cactus.chat/&quot;&gt;Cactus Comments&lt;/a&gt; - Cactus Comments is a federated comment system for the open web built on Matrix. (&lt;a href=&quot;https://cactus.chat/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/cactus-comments/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daveajones/cartulary&quot;&gt;cartulary&lt;/a&gt; - RSS reader, readability tool, article archiver, microblogger, social graph manager and reading list manager. &lt;code&gt;CDDL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/commento/commento&quot;&gt;Commento&lt;/a&gt; - Commento is a discussion platform that you can embed on your blog, news articles, and any place where you want your readers to add comments. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/schn4ck/schnack&quot;&gt;schnack&lt;/a&gt; - Schnack is simple self-hosted node app for Disqus-like drop-in commenting on static websites. &lt;code&gt;Lil licence v1&lt;/code&gt; &lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coralproject.net/&quot;&gt;Coral&lt;/a&gt; - A better commenting experience from Vox Media. (&lt;a href=&quot;https://github.com/coralproject/talk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://diasporafoundation.org/&quot;&gt;diaspora*&lt;/a&gt; - Distributed social networking server. (&lt;a href=&quot;https://podupti.me/go.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/diaspora/diaspora&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.discourse.org/&quot;&gt;Discourse&lt;/a&gt; - Advanced forum / community solution based on Ruby and JS. (&lt;a href=&quot;https://try.discourse.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/discourse/discourse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dyu/comments&quot;&gt;dyu comments&lt;/a&gt; - Real-time, markdown-enabled comment engine powered by leveldb. (&lt;a href=&quot;https://dyu.github.io/comments/real-time/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elgg.org/&quot;&gt;Elgg&lt;/a&gt; - Powerful open source social networking engine. (&lt;a href=&quot;https://github.com/Elgg/Elgg&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/epochtalk/epochtalk&quot;&gt;EpochTalk&lt;/a&gt; - Next Generation Forum Software. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flarum.org&quot;&gt;Flarum&lt;/a&gt; - Delightfully simple forums. Flarum is the next-generation forum software that makes online discussion fun again. (&lt;a href=&quot;https://github.com/flarum/flarum&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flaskbb.org/&quot;&gt;FlaskBB&lt;/a&gt; - FlaskBB is forum software written in Python using the microframework Flask. You can easily create new topics, posts and send other users private messages. It also includes basic administration and moderation tools. (&lt;a href=&quot;https://github.com/flaskbb/flaskbb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluxbb.org/&quot;&gt;FluxBB&lt;/a&gt; - Fast, light, user-friendly forum software for your website. (&lt;a href=&quot;https://github.com/fluxbb/fluxbb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://friendi.ca/&quot;&gt;Friendica&lt;/a&gt; - Social Communication Server. (&lt;a href=&quot;https://github.com/friendica/friendica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glosa/glosa-server&quot;&gt;Glosa&lt;/a&gt; - Open source commentary system easy to integrate with static pages. You can import from Disqus. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gnu.io/social/&quot;&gt;GNU social&lt;/a&gt; - Social communication software for both public and private communications. (&lt;a href=&quot;https://notabug.org/diogo/gnu-social&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gosora-project.com/&quot;&gt;Gosora&lt;/a&gt; - Gosora is an ultra-fast and secure forum software written in Go that balances usability with functionality. (&lt;a href=&quot;https://github.com/Azareal/Gosora&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hubzilla.org&quot;&gt;Hubzilla&lt;/a&gt; - Decentralized identity, privacy, publishing, sharing, cloud storage, and communications/social platform. (&lt;a href=&quot;https://framagit.org/hubzilla/core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.humhub.org/&quot;&gt;HumHub&lt;/a&gt; - Flexible kit for private social networks. (&lt;a href=&quot;https://github.com/humhub/humhub&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://posativ.org/isso/&quot;&gt;Isso&lt;/a&gt; - Lightweight commenting server written in Python and Javascript. It aims to be a drop-in replacement for Disqus. (&lt;a href=&quot;https://github.com/posativ/isso&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://join-lemmy.org/&quot;&gt;Lemmy&lt;/a&gt; - A link aggregator / reddit clone for the fediverse. Reddit alternative built in Rust. (&lt;a href=&quot;https://github.com/LemmyNet/lemmy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://libredd.it/&quot;&gt;Libreddit&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Private front-end for Reddit written in Rust. (&lt;a href=&quot;https://github.com/spikecodes/libreddit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.loomio.org/&quot;&gt;Loomio&lt;/a&gt; - Loomio is a collaborative decision-making tool that makes it easy for anyone to participate in decisions which affect them. (&lt;a href=&quot;https://github.com/loomio/loomio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/&quot;&gt;Mastodon&lt;/a&gt; - Federated microblogging server, an alternative to GNU social. (&lt;a href=&quot;https://github.com/tootsuite/mastodon&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://misago-project.org/&quot;&gt;Misago&lt;/a&gt; - Misago is fully featured modern forum application that is fast, scalable and responsive. (&lt;a href=&quot;https://github.com/rafalp/Misago&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://misskey.io/&quot;&gt;Misskey&lt;/a&gt; - Decentralized app-like microblogging server/SNS for the Fediverse, using the ActivityPub protocol like GNU social and Mastodon. (&lt;a href=&quot;https://github.com/misskey-dev/misskey&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://movim.eu/&quot;&gt;Movim&lt;/a&gt; - Modern, federated social network based on XMPP, with a fully featured group-chat, subscriptions and microblogging. (&lt;a href=&quot;https://github.com/movim/movim&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mybb.com/&quot;&gt;MyBB&lt;/a&gt; - Free, extensible forum software package. (&lt;a href=&quot;https://github.com/mybb/mybb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nitter.net&quot;&gt;Nitter&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - A alternative front end to twitter. (&lt;a href=&quot;https://github.com/zedeus/nitter&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nimble&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodebb.org/&quot;&gt;NodeBB&lt;/a&gt; - Forum software built for the modern web. (&lt;a href=&quot;https://github.com/NodeBB/NodeBB&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.goodoldweb.com/&quot;&gt;Orange Forum&lt;/a&gt; - Orange Forum is an easy to deploy forum that has minimal dependencies and uses very little javascript. (&lt;a href=&quot;https://github.com/s-gv/orangeforum&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opensource-socialnetwork.org/&quot;&gt;OSSN&lt;/a&gt; - Open Source Social Network (OSSN) is a social networking software written in PHP. It allows you to make a social networking website and helps your members build social relationships, with people who share similar professional or personal interests. (&lt;a href=&quot;https://github.com/opensource-socialnetwork/opensource-socialnetwork&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phpbb.com/&quot;&gt;phpBB&lt;/a&gt; - Flat-forum bulletin board software solution that can be used to stay in touch with a group of people or can power your entire website. (&lt;a href=&quot;https://github.com/phpbb/phpbb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixelfed.social&quot;&gt;PixelFed&lt;/a&gt; - Pixelfed is an open-source, federated platform alternate to Instagram. (&lt;a href=&quot;https://github.com/pixelfed/pixelfed&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pleroma.social&quot;&gt;Pleroma&lt;/a&gt; - Federated microblogging server, Mastodon, GNU social, &amp;amp; ActivityPub compatible. (&lt;a href=&quot;https://git.pleroma.social/pleroma/pleroma&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pump.io/&quot;&gt;Pump.io&lt;/a&gt; - Stream server that does most of what people really want from a social network. (&lt;a href=&quot;https://github.com/pump-io/pump.io&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://remark42.com/&quot;&gt;remark42&lt;/a&gt; - A lightweight and simple comment engine, which doesn&#39;t spy on users. It can be embedded into blogs, articles or any other place where readers add comments. (&lt;a href=&quot;https://remark42.com/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/umputun/remark42&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jointwt/rss2twtxt&quot;&gt;rss2twtxt&lt;/a&gt; - An RSS/Atom feed aggregator command-line tool and web service that consumes RSS/Atom and produces twtxt.net feeds for consumption by twtxt clients. (&lt;a href=&quot;https://feeds.twtxt.net&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://satellity.org/&quot;&gt;Satellity&lt;/a&gt; - Yet another open source forum written in Golang, React and PostgreSQL. (&lt;a href=&quot;https://github.com/satellity/satellity&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scoold.com&quot;&gt;Scoold&lt;/a&gt; - Stack Overflow in a JAR. An enterprise-ready Q&amp;amp;A platform with full-text search, SAML, LDAP integration and social login support. (&lt;a href=&quot;https://live.scoold.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Erudika/scoold&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simplemachines.org/&quot;&gt;Simple Machines Forum&lt;/a&gt; - Free, professional grade software package that allows you to set up your own online community within minutes. (&lt;a href=&quot;https://github.com/SimpleMachines/SMF2.1&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://socialhome.network&quot;&gt;Socialhome&lt;/a&gt; - Federated and decentralized profile builder and social network engine. (&lt;a href=&quot;https://socialhome.network/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jaywink/socialhome&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.talkyard.io/&quot;&gt;Talkyard&lt;/a&gt; - Create a community, where your users can suggest ideas and get questions answered. And have friendly open-ended discussions and chat (Slack/StackOverflow/Discourse/Reddit/Disqus hybrid). (&lt;a href=&quot;https://www.talkyard.io/forum/latest&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/debiki/talkyard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://teddit.net&quot;&gt;Teddit&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Alternative Reddit front-end focused on privacy. (&lt;a href=&quot;https://codeberg.org/teddit/teddit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thredded/thredded&quot;&gt;Thredded&lt;/a&gt; - Forums, feature-rich and simple. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tokumei.co/&quot;&gt;Tokumei&lt;/a&gt; - Anonymous microblogging platform. (&lt;a href=&quot;https://gitlab.com/tokumei/tokumei&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;rc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://twister.net.co/&quot;&gt;twister&lt;/a&gt; - Fully decentralized P2P microblogging platform leveraging the free software implementations of Bitcoin and BitTorrent protocols. (&lt;a href=&quot;https://github.com/miguelfreitas/twister-core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twtxt.net&quot;&gt;twtxt.net&lt;/a&gt; - a Self-Hosted, Twitter‚Ñ¢-like Decentralised micro-logging platform. No ads, no tracking, your content, your data. (&lt;a href=&quot;https://git.mills.io/yarnsocial/yarn&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vanillaforums.org/&quot;&gt;Vanilla Forums&lt;/a&gt; - Simple and flexible forum software. (&lt;a href=&quot;https://github.com/vanilla/vanilla&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zusam.org&quot;&gt;Zusam&lt;/a&gt; - Free and open-source way to self-host private forums for groups of friends or family. (&lt;a href=&quot;https://demo.zusam.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/zusam/zusam&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - XMPP&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/XMPP&quot;&gt;Extensible Messaging and Presence Protocol&lt;/a&gt; software&lt;/p&gt; 
&lt;h3&gt;Communication - XMPP - Servers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ejabberd.im/&quot;&gt;ejabberd&lt;/a&gt; - XMPP instant messaging server. (&lt;a href=&quot;https://github.com/processone/ejabberd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Erlang&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ortuman/jackal&quot;&gt;jackal&lt;/a&gt; - XMPP server with focus on stability, simple configuration and low resource consumption. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kontalk.org&quot;&gt;Kontalk&lt;/a&gt; - Kontalk is an Open Source Messenger, similar to WhatsApp (app for android only currently), including end-to-end encryption, server is based on Tigase XMPP Server. (&lt;a href=&quot;https://github.com/kontalk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://metronome.im/&quot;&gt;Metronome IM&lt;/a&gt; - Fork of Prosody IM. (&lt;a href=&quot;https://github.com/maranda/metronome&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.erlang-solutions.com/products/mongooseim.html&quot;&gt;MongooseIM&lt;/a&gt; - Mobile messaging platform with a focus on performance and scalability. (&lt;a href=&quot;https://github.com/esl/MongooseIM&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Erlang&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.igniterealtime.org/projects/openfire/&quot;&gt;Openfire&lt;/a&gt; - Real time collaboration (RTC) server. (&lt;a href=&quot;https://github.com/igniterealtime/Openfire&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://prosody.im/&quot;&gt;Prosody IM&lt;/a&gt; - Feature-rich and easy to configure XMPP server. (&lt;a href=&quot;https://hg.prosody.im/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snikket.org/&quot;&gt;Snikket&lt;/a&gt; - All-in-one Dockerized easy XMPP solution, including web admin and clients. (&lt;a href=&quot;https://github.com/snikket-im/snikket-server&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://snikket.org/app/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Lua/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tigase.net/xmpp-server&quot;&gt;Tigase&lt;/a&gt; - XMPP server implementation in Java. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication - XMPP - Web Clients&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://candy-chat.github.io/candy/&quot;&gt;Candy&lt;/a&gt; - Multi user XMPP client written in Javascript. (&lt;a href=&quot;https://github.com/candy-chat/candy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://conversejs.org/&quot;&gt;Converse.js&lt;/a&gt; - Free and open-source XMPP chat client in your browser. (&lt;a href=&quot;https://github.com/conversejs/converse.js&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsxc.org&quot;&gt;JSXC&lt;/a&gt; - Real-time XMPP web chat application with video calls, file transfer and encrypted communication. There are also versions for Nextcloud/Owncloud and SOGo. (&lt;a href=&quot;https://github.com/jsxc/jsxc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.goffi.org/wiki/Libervia/en&quot;&gt;Libervia&lt;/a&gt; - Web frontend from Salut √† Toi. (&lt;a href=&quot;https://repos.goffi.org/libervia-web&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salut-a-toi.org/&quot;&gt;Salut √† Toi&lt;/a&gt; - Multipurpose, multi frontend, libre and decentralized communication tool. (&lt;a href=&quot;https://repos.goffi.org/libervia-backend&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community-Supported Agriculture (CSA)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Management and administration tools for community supported agriculture and food cooperatives&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#e-commerce&quot;&gt;E-commerce&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://acp-admin.ch/&quot;&gt;ACP Admin&lt;/a&gt; - CSA administration. Manage members, subscriptions, deliveries, drop-off locations, member participation, invoices and emails. (&lt;a href=&quot;https://github.com/acp-admin/acp-admin/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cagette.net/&quot;&gt;Cagette&lt;/a&gt; - Open source web app to help people build a better and sustainable food system. Some people call it a &#39;foodhub&#39; - a mix between a groupware and a marketplace, helping consumers to order food from local farmers and producers. (&lt;a href=&quot;https://github.com/CagetteNet/cagette&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Haxe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.foodcoopshop.com/&quot;&gt;FoodCoopShop&lt;/a&gt; - User-friendly open source software for food-coops. (&lt;a href=&quot;https://github.com/foodcoopshop/foodcoopshop&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://foodcoops.net/&quot;&gt;Foodsoft&lt;/a&gt; - Web-based software to manage a non-profit food coop (product catalog, ordering, accounting, job scheduling). (&lt;a href=&quot;https://github.com/foodcoops/foodsoft&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juntagrico.org/&quot;&gt;juntagrico&lt;/a&gt; - Management platform for community gardens and vegetable cooperatives. (&lt;a href=&quot;https://github.com/juntagrico/juntagrico&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://localfoodnodes.org/&quot;&gt;Local Food Nodes&lt;/a&gt; - Your open source platform for peoples driven local food markets and CSA. (&lt;a href=&quot;https://gitlab.com/localfoodnodes/localfoodnodes&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openfoodnetwork.org/&quot;&gt;Open Food Network&lt;/a&gt; - Online marketplace for local food. It enables a network of independent online food stores that connect farmers and food hubs with individuals and local businesses. (&lt;a href=&quot;https://github.com/openfoodfoundation/openfoodnetwork&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openolitor.org/&quot;&gt;OpenOlitor&lt;/a&gt; - Administration platform for Community Supported Agriculture groups. (&lt;a href=&quot;https://github.com/OpenOlitor&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/teikei/teikei&quot;&gt;teikei&lt;/a&gt; - A web application that maps out community-supported agriculture based on crowdsourced data. (&lt;a href=&quot;https://ernte-teilen.org/karte/#/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Conference Management&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bigbluebutton.org/&quot;&gt;BigBlueButton&lt;/a&gt; - Supports real-time sharing of audio, video, slides (with whiteboard controls), chat, and the screen. Instructors can engage remote students with polling, emojis, and breakout rooms. (&lt;a href=&quot;https://demo.bigbluebutton.org/gl&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/bigbluebutton/bigbluebutton&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://usecod.com/&quot;&gt;Conference Organizing Distribution (COD)&lt;/a&gt; - Create conference and event websites built on top of Drupal. (&lt;a href=&quot;https://git.drupalcode.org/project/cod&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frab.github.io/frab/&quot;&gt;frab&lt;/a&gt; - web-based conference planning and management system. It helps to collect submissions, to manage talks and speakers and to create a schedule. (&lt;a href=&quot;https://github.com/frab/frab&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getindico.io/&quot;&gt;indico&lt;/a&gt; - A feature-rich event management system, made @ CERN, the place where the Web was born. (&lt;a href=&quot;https://sandbox.getindico.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/indico/indico&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pkp.sfu.ca/ocs/&quot;&gt;Open Conference Systems (OCS)&lt;/a&gt; - is a free Web publishing tool that will create a complete Web presence for your scholarly conference. (&lt;a href=&quot;https://pkp.sfu.ca/ocs/ocs_demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/pkp/ocs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/opencfp/opencfp&quot;&gt;OpenCFP&lt;/a&gt; - OpenCFP is a PHP-based conference talk submission system. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://osem.io/&quot;&gt;osem&lt;/a&gt; - Event management tailored to free Software conferences. (&lt;a href=&quot;https://demo.osem.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/openSUSE/osem&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pretalx.org&quot;&gt;pretalx&lt;/a&gt; - Web-based event management, including running a Call for Papers, reviewing submissions, and scheduling talks. Exports and imports for various related tools. (&lt;a href=&quot;https://github.com/pretalx/pretalx&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Content Management Systems (CMS)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;CMS are a practical way to setup a website with many features. CMS often come with third party plugins, themes and functionality that is easy to add and customize to your needs.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#blogging-platforms&quot;&gt;Blogging Platforms&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#static-site-generators&quot;&gt;Static Site Generators&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alfresco.com/products/community/download&quot;&gt;Alfresco Community Edition&lt;/a&gt; - The open source Enterprise Content Management software that handles any type of content, allowing users to easily share and collaborate on content. (&lt;a href=&quot;https://hub.alfresco.com/t5/alfresco-content-services-hub/project-overview-repository/ba-p/290502&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apostrophecms.org/&quot;&gt;Apostrophe&lt;/a&gt; - CMS with a focus on extensible in-context editing tools. (&lt;a href=&quot;https://dashboard.apostrophecmsdemo.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/apostrophecms/apostrophe&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://b2evolution.net/&quot;&gt;b2evolution CMS&lt;/a&gt; - The most integrated CMS ever: b2evolution includes everything you need to build websites for publishing, sharing and interacting with your community. (&lt;a href=&quot;https://github.com/b2evolution/b2evolution&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://backdropcms.org/&quot;&gt;Backdrop CMS&lt;/a&gt; - Comprehensive CMS for small to medium sized businesses and non-profits. (&lt;a href=&quot;https://github.com/backdrop/backdrop&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigtreecms.org/&quot;&gt;BigTree CMS&lt;/a&gt; - Straightforward, well documented, and capable written with PHP and MySQL. (&lt;a href=&quot;https://github.com/bigtreecms/BigTree-CMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bolt.cm/&quot;&gt;Bolt CMS&lt;/a&gt; - Open source Content Management Tool, which strives to be as simple and straightforward as possible. (&lt;a href=&quot;https://try.bolt.cm/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/bolt/bolt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cmsmadesimple.org/&quot;&gt;CMS Made Simple&lt;/a&gt; - Open source content management system, faster and easier management of website contents, scalable for small businesses to large corporations. (&lt;a href=&quot;http://svn.cmsmadesimple.org/svn/cmsmadesimple/trunk/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getcockpit.com&quot;&gt;Cockpit&lt;/a&gt; - Simple Content Platform to manage any structured content. (&lt;a href=&quot;https://github.com/agentejo/cockpit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.concretecms.com&quot;&gt;Concrete 5 CMS&lt;/a&gt; - Open source content management system. (&lt;a href=&quot;https://github.com/concrete5/concrete5&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contao.org/&quot;&gt;Contao&lt;/a&gt; - Contao is a powerful open source CMS that allows you to create professional websites and scalable web applications. (&lt;a href=&quot;https://github.com/contao/contao/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.couchcms.com/&quot;&gt;CouchCMS&lt;/a&gt; - Simple Open-Source CMS for designers. (&lt;a href=&quot;https://github.com/CouchCMS/CouchCMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CPAL-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://directus.io/&quot;&gt;Directus&lt;/a&gt; - An Instant App &amp;amp; API for your SQL Database. Directus wraps your new or existing SQL database with a realtime GraphQL+REST API for developers, and an intuitive admin app for non-technical users. (&lt;a href=&quot;https://github.com/directus/directus&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drupal.org/&quot;&gt;Drupal&lt;/a&gt; - Advanced open source content management platform. (&lt;a href=&quot;https://git.drupalcode.org/project/drupal&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elabftw.net&quot;&gt;eLabFTW&lt;/a&gt; - Online lab notebook for research labs. Store experiments, use a database to find reagents or protocols, use trusted timestamping to legally timestamp an experiment, export as pdf or zip archive, share with collaborators‚Ä¶. (&lt;a href=&quot;https://demo.elabftw.net&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/elabftw/elabftw&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thomas4019/expressa&quot;&gt;Expressa&lt;/a&gt; - Content Management System for powering database driven websites using JSON schemas. Provides permission management and automatic REST APIs. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flextype.org/&quot;&gt;Flextype&lt;/a&gt; - Flextype is an open-source Hybrid Content Management System with the freedom of a headless CMS and with the full functionality of a traditional CMS. (&lt;a href=&quot;https://demo.flextype.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/flextype/flextype&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://get-simple.info/&quot;&gt;GetSimple CMS&lt;/a&gt; - The Simplest Content Management System. Ever. (&lt;a href=&quot;https://github.com/GetSimpleCMS/GetSimpleCMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.joomla.org/&quot;&gt;Joomla!&lt;/a&gt; - Advanced Content Management System (CMS). (&lt;a href=&quot;https://github.com/joomla/joomla-cms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keystonejs.com/&quot;&gt;KeystoneJS&lt;/a&gt; - CMS and Web Application Platform. (&lt;a href=&quot;https://demo.keystonejs.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/keystonejs/keystone&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modx.com/&quot;&gt;MODX&lt;/a&gt; - MODX is an advanced content management and publishing platform. The current version is called &#39;Revolution&#39;. (&lt;a href=&quot;https://github.com/modxcms/revolution&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.neos.io&quot;&gt;Neos&lt;/a&gt; - Neos or TYPO3 Neos (for version 1) is a modern, open source CMS. (&lt;a href=&quot;https://git.typo3.org/Packages/TYPO3.Neos.git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/noosfero/noosfero&quot;&gt;Noosfero&lt;/a&gt; - Noosfero is a web platform for social and solidarity economy networks with blog, e-Portfolios, CMS, RSS, thematic discussion, events agenda and collective intelligence for solidarity economy in the same system. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octobercms.com/&quot;&gt;october&lt;/a&gt; - Free, open-source, self-hosted CMS platform. (&lt;a href=&quot;https://github.com/octobercms/october&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://omeka.org&quot;&gt;Omeka&lt;/a&gt; - Create complex narratives and share rich collections, adhering to Dublin Core standards with Omeka on your server, designed for scholars, museums, libraries, archives, and enthusiasts. (&lt;a href=&quot;https://omeka.org/classic/showcase/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/omeka/Omeka&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagekit.com/&quot;&gt;Pagekit&lt;/a&gt; - New modern CMS to create and share. (&lt;a href=&quot;https://github.com/pagekit/pagekit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://picocms.org/&quot;&gt;Pico&lt;/a&gt; - Stupidly simple, blazing fast, flat file CMS. (&lt;a href=&quot;https://github.com/picocms/Pico&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pimcore.org/&quot;&gt;Pimcore&lt;/a&gt; - Multi-Channel Experience and Engagement Management Platform. (&lt;a href=&quot;https://github.com/pimcore/pimcore&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0-or-later&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://plone.org/&quot;&gt;Plone&lt;/a&gt; - Powerful open-source CMS system. (&lt;a href=&quot;https://github.com/plone&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ZPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://processwire.com/&quot;&gt;ProcessWire&lt;/a&gt; - ProcessWire is an open source content management system (CMS) and web application framework aimed at the needs of designers, developers and their clients. (&lt;a href=&quot;https://github.com/ryancramerdesign/ProcessWire&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://propertywebbuilder.com&quot;&gt;PropertyWebBuilder&lt;/a&gt; - Ultimate Ruby on Rails engine for creating real estate websites. (&lt;a href=&quot;https://propertywebbuilder.herokuapp.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/etewiah/property_web_builder&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://publify.github.io/&quot;&gt;Publify&lt;/a&gt; - Simple but full featured web publishing software. (&lt;a href=&quot;https://github.com/publify/publify&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redaxo.org&quot;&gt;REDAXO&lt;/a&gt; - Simple, flexible and useful content management system (documentation only available in German). (&lt;a href=&quot;https://github.com/redaxo/redaxo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redaxscript.com&quot;&gt;Redaxscript&lt;/a&gt; - Ultra lightweight CMS for MySQL, SQLite and PostgreSQL. (&lt;a href=&quot;https://demo.redaxscript.com/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/redaxscript/redaxscript&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.roadiz.io/&quot;&gt;Roadiz&lt;/a&gt; - Modern CMS based on a node system which can handle many types of services. (&lt;a href=&quot;https://github.com/roadiz/roadiz&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.silverstripe.org&quot;&gt;SilverStripe&lt;/a&gt; - Easy to use CMS with powerful MVC framework underlying. (&lt;a href=&quot;https://demo.silverstripe.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/silverstripe&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spip.net/fr&quot;&gt;SPIP&lt;/a&gt; - Publication system for the Internet aimed at collaborative work, multilingual environments, and simplicity of use for web authors. (&lt;a href=&quot;https://git.spip.net/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squidex.io&quot;&gt;Squidex&lt;/a&gt; - Headless CMS, based on MongoDB, CQRS and Event Sourcing. (&lt;a href=&quot;https://cloud.squidex.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Squidex/squidex&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;.NET&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strapi.io/&quot;&gt;Strapi&lt;/a&gt; - The most advanced open-source Content Management Framework (headless-CMS) to build powerful API with no effort. (&lt;a href=&quot;https://github.com/strapi/strapi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://textpattern.com/&quot;&gt;Textpattern&lt;/a&gt; - Flexible, elegant and easy-to-use CMS. (&lt;a href=&quot;https://textpattern.co/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/textpattern/textpattern&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typemill.net/&quot;&gt;Typemill&lt;/a&gt; - Author-friendly flat-file-cms with a visual markdown editor based on vue.js. (&lt;a href=&quot;https://github.com/typemill/typemill&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typo3.org/&quot;&gt;TYPO3&lt;/a&gt; - Powerful and advanced CMS with a large community. (&lt;a href=&quot;https://github.com/TYPO3/TYPO3.CMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://umbraco.com/&quot;&gt;Umbraco&lt;/a&gt; - The friendly CMS. Free and open source with an amazing community. (&lt;a href=&quot;https://github.com/umbraco/Umbraco-CMS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;.NET&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wagtail.io/&quot;&gt;Wagtail&lt;/a&gt; - Django content management system focused on flexibility and user experience. (&lt;a href=&quot;https://github.com/wagtail/wagtail&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wondercms.com&quot;&gt;WonderCMS&lt;/a&gt; - WonderCMS is the smallest flat file CMS since 2008. (&lt;a href=&quot;https://www.wondercms.com/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/robiso/wondercms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wordpress.org/&quot;&gt;WordPress&lt;/a&gt; - World&#39;s most-used blogging and CMS engine. (&lt;a href=&quot;https://github.com/WordPress/WordPress&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://writefreely.org&quot;&gt;WriteFreely&lt;/a&gt; - Writing software for starting a minimalist, federated blog ‚Äî or an entire community. (&lt;a href=&quot;https://github.com/writefreely/writefreely&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;DNS&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also: &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#dns&quot;&gt;awesome-sysadmin/DNS&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0xERR0R/blocky&quot;&gt;blocky&lt;/a&gt; - Fast and lightweight DNS proxy (like Pi-hole) as ad-blocker for local network with many features. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coredns.io/&quot;&gt;CoreDNS&lt;/a&gt; - Plugin driven DNS Server with support for proxying to Google&#39;s DNS-over-HTTPS. (&lt;a href=&quot;https://github.com/coredns/coredns&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maza-ad-blocking.andros.dev/&quot;&gt;Maza ad blocking&lt;/a&gt; - Local ad blocker. Like Pi-hole but local and using your operating system. (&lt;a href=&quot;https://github.com/tanrax/maza-ad-blocking&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Bash&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nsupdate.info/&quot;&gt;nsupdate.info&lt;/a&gt; - nsupdate.info is a dynamic DNS service. (&lt;a href=&quot;https://www.nsupdate.info/account/register/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nsupdate-info/nsupdate.info&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spftoolbox.com&quot;&gt;SPF Toolbox&lt;/a&gt; - Application to look up DNS records such as SPF, MX, Whois, and more. (&lt;a href=&quot;https://github.com/charlesabarnes/SPFtoolbox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Document Management&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/randombenj/docat&quot;&gt;DOCAT&lt;/a&gt; - Host your docs. Simple. Versioned. Fancy. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docspell.org&quot;&gt;Docspell&lt;/a&gt; - Auto-tagging document organizer and archive. (&lt;a href=&quot;https://github.com/eikek/docspell&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Scala/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonashellmann/everydocs-core/&quot;&gt;EveryDocs&lt;/a&gt; - A simple Document Management System for private use with basic functionality to organize your documents digitally. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://i-librarian.net&quot;&gt;I, Librarian&lt;/a&gt; - I, Librarian can organize PDF papers and office documents. It provides a lot of extra features for students and research groups both in industry and academia. (&lt;a href=&quot;https://i-librarian.net/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/mkucej/i-librarian-free&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mayan-edms.com&quot;&gt;Mayan EDMS&lt;/a&gt; - Free Open Source Electronic Document Management System. An electronic vault for your documents with preview generation, OCR, and automatic categorization among other features. (&lt;a href=&quot;https://gitlab.com/mayan-edms/mayan-edms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonaswinkler/paperless-ng&quot;&gt;Paperless-ng&lt;/a&gt; - A fork of paperless, adding a new interface and many other changes under the hood. Scan, index, and archive all of your paper documents. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.papermerge.com&quot;&gt;Papermerge&lt;/a&gt; - Open Source Document Management System focused on scanned documents (electronic archives). Features file browsing in similar way to dropbox/google drive. OCR, full text search, text overlay/selection. (&lt;a href=&quot;https://github.com/ciur/papermerge&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dedicatedcode.com/projects/&quot;&gt;paper{s}pace&lt;/a&gt; - a small web application to manage all your offline documents. Provides a searchable storage for your documents and reminds you of upcoming tasks. (&lt;a href=&quot;https://gitlab.com/dedicatedcode/paperspace&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://teedy.io/&quot;&gt;Teedy&lt;/a&gt; - (Ex SismicsDocs) Lightweight document management system packed with all the features you can expect from big expensive solutions. (&lt;a href=&quot;https://github.com/sismics/docs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Document Management - E-books&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://projekte.textmulch.de/bicbucstriim/&quot;&gt;BicBucStriim&lt;/a&gt; - Provides web-based access to your Calibre Library&#39;s e-book collection. (&lt;a href=&quot;https://github.com/rvolz/BicBucStriim&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/janeczku/calibre-web&quot;&gt;Calibre Web&lt;/a&gt; - Web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://calibre-ebook.com/&quot;&gt;Calibre&lt;/a&gt; - E-book library manager that can view, convert, and catalog e-books in most of the major e-book formats and provides a built-in Web server for remote clients. (&lt;a href=&quot;https://calibre-ebook.com/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://launchpad.net/calibre&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.slucas.fr/en/oss/calibre-opds-php-server&quot;&gt;COPS&lt;/a&gt; - Lightweight e-book server alternative to Calibre content server or Calibre2OPDS. (&lt;a href=&quot;http://cops-demo.slucas.fr/index.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/seblucas/cops&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kavitareader.com/&quot;&gt;Kavita&lt;/a&gt; - Cross-platform e-book/manga/comic/pdf server and web reader with user management, ratings and reviews, and metatdata support. (&lt;a href=&quot;https://wiki.kavitareader.com/en/kavita-demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Kareadita/Kavita&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;.NET Core/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://komga.org&quot;&gt;Komga&lt;/a&gt; - Media server for comics/mangas/BDs with API and OPDS support, a modern web interface for exploring your libraries, as well as a web reader. (&lt;a href=&quot;https://github.com/gotson/komga&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hkalexling/Mango&quot;&gt;Mango&lt;/a&gt; - Manga server and web reader with a built-in MangaDex downloader. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Crystal&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/th3r00t/pyShelf&quot;&gt;pyShelf&lt;/a&gt; - Lightweight Ebook Server. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/faldez/tanoshi&quot;&gt;Tanoshi&lt;/a&gt; - Selfhosted web manga reader with extensions. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tt-rss.org/the-epube&quot;&gt;The Epube&lt;/a&gt; - Self-hosted web EPUB reader using EPUB.js, Bootstrap, and Calibre. (&lt;a href=&quot;https://git.tt-rss.org/fox/the-epube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Document Management - Institutional Repository and Digital Library Software&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://duraspace.org/dspace/&quot;&gt;DSpace&lt;/a&gt; - Turnkey repository application providing durable access to digital resources. (&lt;a href=&quot;https://github.com/DSpace/DSpace&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.eprints.org/&quot;&gt;EPrints&lt;/a&gt; - Digital document management system with a flexible metadata and workflow model primarily aimed at academic institutions. (&lt;a href=&quot;http://tryme.demo.eprints-hosting.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/eprints/eprints&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fedorarepository.org/&quot;&gt;Fedora Commons Repository&lt;/a&gt; - Robust and modular repository system for the management and dissemination of digital content especially suited for digital libraries and archives, both for access and preservation. (&lt;a href=&quot;https://github.com/fcrepo/fcrepo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://islandora.ca/&quot;&gt;Islandora&lt;/a&gt; - Drupal module for browsing and managing Fedora-based digital repositories. (&lt;a href=&quot;https://github.com/Islandora/islandora&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://samvera.org/&quot;&gt;Samvera Hyrax&lt;/a&gt; - Front-end for the Samvera framework, which itself is a Ruby on Rails application for browsing and managing Fedora-based digital repositories. (&lt;a href=&quot;https://github.com/samvera/hyrax&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Document Management - Integrated Library Systems (ILS)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#content-management-systems-cms&quot;&gt;Content Management Systems (CMS)&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#archiving-and-digital-preservation-dp&quot;&gt;Archiving and Digital Preservation (DP)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://evergreen-ils.org&quot;&gt;Evergreen&lt;/a&gt; - Highly-scalable software for libraries that helps library patrons find library materials, and helps libraries manage, catalog, and circulate those materials. (&lt;a href=&quot;https://github.com/evergreen-library-system/Evergreen&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PL/pgSQL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://koha-community.org/&quot;&gt;Koha&lt;/a&gt; - Enterprise-class ILS with modules for acquisitions, circulation, cataloging, label printing, offline circulation for when Internet access is not available, and much more. (&lt;a href=&quot;https://koha-community.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Koha-Community/Koha&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rero21.ch/&quot;&gt;RERO ILS&lt;/a&gt; - Large-scale ILS that can be run as a service with consortial features, intended primarily for library networks. Includes most standard modules (circulation, acquisitions, cataloging,...) and a web-based public and professional interface. (&lt;a href=&quot;https://ils.test.rero.ch/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/rero/rero-ils&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;E-commerce&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#community-supported-agriculture-csa&quot;&gt;Community-Supported Agriculture (CSA)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aimeos.org/&quot;&gt;Aimeos&lt;/a&gt; - Ultra fast, Open Source e-commerce framework for building custom online shops, market places and complex B2B applications scaling to billions of items with Laravel. (&lt;a href=&quot;https://demo.aimeos.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/aimeos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0/MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.attendize.com/&quot;&gt;Attendize&lt;/a&gt; - Ticket selling and event management platform. (&lt;a href=&quot;https://github.com/attendize/attendize&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AAL&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bagisto.com/en/&quot;&gt;Bagisto&lt;/a&gt; - Leading Laravel open source e-commerce framework with multi-inventory sources, taxation, localization, dropshipping and more exciting features. (&lt;a href=&quot;https://demo.bagisto.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/bagisto/bagisto&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coreshop.org&quot;&gt;CoreShop&lt;/a&gt; - CoreShop is a e-commerce plugin for Pimcore. (&lt;a href=&quot;https://github.com/coreshop/CoreShop&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://drupalcommerce.org&quot;&gt;Drupal Commerce&lt;/a&gt; - Drupal Commerce is a popular e-commerce module for Drupal CMS, with support for dozens of payment, shipping, and shopping related modules. (&lt;a href=&quot;https://github.com/drupalcommerce/commerce&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magento.com/&quot;&gt;Magento&lt;/a&gt; - Leading provider of open omnichannel innovation. (&lt;a href=&quot;https://magento.com/schedule-a-demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/magento/magento2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;OSL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://microweber.com/&quot;&gt;Microweber&lt;/a&gt; - Drag and Drop CMS and online shop. (&lt;a href=&quot;https://demo.microweber.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/microweber/microweber&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opensourcepos.org/&quot;&gt;Open Source POS&lt;/a&gt; - Open Source Point of Sale is a web based point of sale system. (&lt;a href=&quot;https://github.com/opensourcepos/opensourcepos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openbazaar.org&quot;&gt;OpenBazaar&lt;/a&gt; - Decentralized marketplace using cryptocurrency. (&lt;a href=&quot;https://github.com/openbazaar/openbazaar-go&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opencart.com&quot;&gt;OpenCart&lt;/a&gt; - Free open source shopping cart solution. (&lt;a href=&quot;https://github.com/opencart/opencart&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oxidforge.org&quot;&gt;OXID eShop&lt;/a&gt; - OXID eShop is a flexible open source e-commerce software with a wide range of functionalities. (&lt;a href=&quot;https://demoshop.oxid-esales.com/community-edition/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/OXID-eSales/oxideshop_ce&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.prestashop.com/&quot;&gt;PrestaShop&lt;/a&gt; - PrestaShop offers a free, open-source and fully scalable e-commerce solution. (&lt;a href=&quot;https://demo.prestashop.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/PrestaShop/PrestaShop&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;OSL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pretix.eu/&quot;&gt;Pretix&lt;/a&gt; - Django based ticket sales platform for events. (&lt;a href=&quot;https://github.com/pretix&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactioncommerce.com/&quot;&gt;Reaction Commerce&lt;/a&gt; - Customizable, real-time reactive, Javascript commerce platform. (&lt;a href=&quot;https://github.com/reactioncommerce/reaction&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://saleor.io&quot;&gt;Saleor&lt;/a&gt; - Django based open-sourced e-commerce storefront. (&lt;a href=&quot;https://demo.getsaleor.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/mirumee/saleor&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shopware.com/community/&quot;&gt;Shopware Community Edition&lt;/a&gt; - PHP based open source e-commerce software made in Germany. (&lt;a href=&quot;https://www.shopware.com/en/test-demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/shopware/platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shuup.com/&quot;&gt;Shuup&lt;/a&gt; - Django powered fully customizable open source e-commerce framework for small and large sites. (&lt;a href=&quot;https://github.com/shuup/shuup&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://solidus.io/&quot;&gt;Solidus&lt;/a&gt; - A free, open-source ecommerce platform that gives you complete control over your store. (&lt;a href=&quot;http://demo.solidus.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/solidusio/solidus&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spreecommerce.org&quot;&gt;Spree Commerce&lt;/a&gt; - Spree is a complete, modular &amp;amp; API-driven open source e-commerce solution for Ruby on Rails. (&lt;a href=&quot;https://new-ux.spreecommerce.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/spree/spree&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sylius.com&quot;&gt;Sylius&lt;/a&gt; - Symfony2 powered open source full-stack platform for eCommerce. (&lt;a href=&quot;https://sylius.com/try/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sylius/Sylius&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thelia.net/&quot;&gt;Thelia&lt;/a&gt; - Thelia is an open source and flexible e-commerce solution. (&lt;a href=&quot;https://demo.thelia.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/thelia/thelia&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://woocommerce.com/&quot;&gt;WooCommerce&lt;/a&gt; - WordPress based e-commerce solution. (&lt;a href=&quot;https://github.com/woocommerce/woocommerce&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yclas.com/&quot;&gt;Yclas&lt;/a&gt; - Free open-source, self-hosted CMS for classifieds sites. (&lt;a href=&quot;https://github.com/yclas/yclas&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Federated Identity &amp;amp; Authentication&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#identity-management&quot;&gt;awesome-sysadmin/Identity Management&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Feed Readers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/News_aggregator&quot;&gt;news aggregator&lt;/a&gt;, also termed a feed aggregator, feed reader, news reader, &lt;a href=&quot;https://en.wikipedia.org/wiki/RSS&quot;&gt;RSS&lt;/a&gt; reader or simply an aggregator, is client software or a web application that aggregates syndicated web content such as online newspapers, blogs/vlogs, podcasts, and other updates in one location for easy viewing. This also section includes RSS/Atom automation tools.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.commafeed.com/&quot;&gt;CommaFeed&lt;/a&gt; - Google Reader inspired self-hosted RSS reader. (&lt;a href=&quot;https://github.com/Athou/commafeed&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feedhq.org/&quot;&gt;FeedHQ&lt;/a&gt; - FeedHQ is a web-based feed reader. (&lt;a href=&quot;https://github.com/feedhq/feedhq&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ncarlier/feedpushr&quot;&gt;Feedpushr&lt;/a&gt; - Powerful RSS aggregator, able to transform and send articles to many outputs. Single binary, extensible with plugins. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freshrss.org/&quot;&gt;FreshRSS&lt;/a&gt; - Self-hostable RSS feed aggregator. (&lt;a href=&quot;https://demo.freshrss.org/i/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/FreshRSS/FreshRSS&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alkarex/EasyRSS&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fivefilters.org/content-only&quot;&gt;Full-Text RSS&lt;/a&gt; - Extract article content from news sites and blogs and convert RSS feeds that contain only extracts of stories to full-text feeds. Developed by FiveFilters.org. (&lt;a href=&quot;https://bitbucket.org/fivefilters/full-text-rss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/slurdge/goeland&quot;&gt;Goeland&lt;/a&gt; - Reads RSS/Atom feeds and filter/digest them to create beautiful emails. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gritttt-rss.nicolashoening.de/&quot;&gt;gritttt-rss&lt;/a&gt; - More features for Tiny Tiny RSS. (&lt;a href=&quot;https://github.com/nhoening/gritttt-rss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://1pxsolidblack.pl/jarr-en.html&quot;&gt;JARR&lt;/a&gt; - JARR (Just Another RSS Reader) is a web-based news aggregator and reader (fork of Newspipe). (&lt;a href=&quot;https://jarr.info/login?next=%2F&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jaesivsm/JARR&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tontof.net/kriss/feed/&quot;&gt;Kriss Feed&lt;/a&gt; - Simple and smart (or stupid) feed reader. (&lt;a href=&quot;https://tontof.net/feed/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/tontof/kriss_feed&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeedRSS/Leed&quot;&gt;Leed&lt;/a&gt; - Leed (for Light Feed) is a Free and minimalist RSS aggregator. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/toxinu/leselys&quot;&gt;Leselys&lt;/a&gt; - Your very elegant RSS reader. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cubny/lite-reader&quot;&gt;Lite-Reader&lt;/a&gt; - Read your feeds on your own machine with a simple and lite application. (&lt;a href=&quot;http://cubny.com/lite-reader/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://miniflux.app/&quot;&gt;Miniflux&lt;/a&gt; - Miniflux is a minimalist and open source news reader, written in Go and PostgreSQL. (&lt;a href=&quot;https://github.com/miniflux/v2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moonmoon.org/&quot;&gt;Moonmoon&lt;/a&gt; - simple feed aggregator (planet like): it only aggregates feeds and spits them out in one single page. (&lt;a href=&quot;https://github.com/moonmoon/moonmoon&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newsblur.com/&quot;&gt;NewsBlur&lt;/a&gt; - NewsBlur is a personal news reader that brings people together to talk about the world. A new sound of an old instrument. (&lt;a href=&quot;https://github.com/samuelclay/NewsBlur&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/buzz/newsdash&quot;&gt;newsdash&lt;/a&gt; - A news dashboard inspired by iGoogle and Netvibes. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.sr.ht/~cedric/newspipe&quot;&gt;Newspipe&lt;/a&gt; - Newspipe is a web news reader. (&lt;a href=&quot;https://www.newspipe.org/signup&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taroved/pol&quot;&gt;PolitePol&lt;/a&gt; - Online tool for creation of RSS feeds for any web page. (&lt;a href=&quot;https://politepol.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lemon24/reader&quot;&gt;reader&lt;/a&gt; - A Python feed reader web app and library (so you can use it to build your own), with only standard library and pure-Python dependencies. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RSS-Bridge/rss-bridge&quot;&gt;RSS-Bridge&lt;/a&gt; - rss-bridge is a PHP project capable of generating ATOM feeds for websites which don&#39;t have one. &lt;code&gt;Unlicense&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kombustor/rss-fulltext-proxy&quot;&gt;RSS Fulltext Proxy&lt;/a&gt; - Mirrors RSS feeds to return the full content of the items, extracted from the website. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taophp/rss-merger&quot;&gt;RSS Merger&lt;/a&gt; - PHP script which will take multiple RSS / Atom feeds as input and merge them into a single RSS feed. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pietheinstrengholt/rssmonster&quot;&gt;RSS Monster&lt;/a&gt; - RSS Monster is an easy to use web-based RSS aggregator and reader compatible with the Fever API, created as an alternative for Google Reader. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rss2email/rss2email&quot;&gt;RSS2EMail&lt;/a&gt; - Fetches RSS/Atom-feeds and pushes new Content to any email-receiver, supports OPML. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/herrbischoff/screaming-liquid-tiger&quot;&gt;Screaming Liquid Tiger&lt;/a&gt; - Simple script to automatically generate valid RSS and Atom feeds from a list of media files in the same folder. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://selfoss.aditu.de/&quot;&gt;Selfoss&lt;/a&gt; - New multipurpose rss reader, live stream, mashup, aggregation web application. (&lt;a href=&quot;https://github.com/fossar/selfoss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sismics.com/reader/&quot;&gt;Sismics Reader&lt;/a&gt; - Free and open source feeds reader, including all major Google Reader features. (&lt;a href=&quot;https://www.sismics.com/reader/#!/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sismics/reader&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swanson/stringer&quot;&gt;Stringer&lt;/a&gt; - Work-in-progress self-hosted, anti-social RSS reader. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fazalmajid/temboz&quot;&gt;Temboz&lt;/a&gt; - Two-column feed reader emphasizing filtering capabilities to manage information overload. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tt-rss.org&quot;&gt;Tiny Tiny RSS&lt;/a&gt; - Open source web-based news feed (RSS/Atom) reader and aggregator. (&lt;a href=&quot;https://framanews.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://git.tt-rss.org/fox/tt-rss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mboinet/ttrss-mobile&quot;&gt;ttrss-mobile&lt;/a&gt; - Mobile webapp for Tiny Tiny RSS. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kucrut/ttrss-reader&quot;&gt;ttrss-reader&lt;/a&gt; - Light and responsive client for TTRSS. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getstream.io/winds/&quot;&gt;Winds&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Open source and beautiful RSS reader built using React/Redux/Sails/Node and Stream. It showcases personalized feeds powered by the Stream API. (&lt;a href=&quot;https://winds.getstream.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/GetStream/Winds&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;File Transfer &amp;amp; Synchronization&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#groupware&quot;&gt;Groupware&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git-annex.branchable.com/&quot;&gt;Git Annex&lt;/a&gt; - File synchronization between computers, servers, external drives. (&lt;a href=&quot;https://git.joeyh.name/index.cgi/git-annex.git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kinto.readthedocs.org&quot;&gt;Kinto&lt;/a&gt; - Kinto is a minimalist JSON storage service with synchronisation and sharing abilities. (&lt;a href=&quot;https://github.com/Kinto&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/subnub/myDrive&quot;&gt;myDrive&lt;/a&gt; - Fully featured online storage solution, upload/download files, photo/video viewer, and more, all through the web client. (&lt;a href=&quot;https://mydrive-demo.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt; - Access and share your files, calendars, contacts, mail and &lt;a href=&quot;https://apps.nextcloud.com/&quot;&gt;more&lt;/a&gt; from any device, on your terms. (&lt;a href=&quot;https://demo.nextcloud.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nextcloud/server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openssh.com/&quot;&gt;OpenSSH SFTP server&lt;/a&gt; - Secure File Transfer Program. (&lt;a href=&quot;https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://owncloud.org/&quot;&gt;ownCloud&lt;/a&gt; - All-in-one solution for saving, synchronizing, viewing, editing and sharing files, calendars, address books and more. (&lt;a href=&quot;https://github.com/owncloud/core&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/owncloud/core/wiki/Apps&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pydio.com/&quot;&gt;Pydio&lt;/a&gt; - Turn any web server into a powerful file management system and an alternative to mainstream cloud storage providers. (&lt;a href=&quot;https://github.com/pydio/cells&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samba.org/&quot;&gt;Samba&lt;/a&gt; - Samba is the standard Windows interoperability suite of programs for Linux and Unix. It provides secure, stable and fast file and print services for all clients using the SMB/CIFS protocol. (&lt;a href=&quot;https://git.samba.org/samba.git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seafile.com/en/home/&quot;&gt;Seafile&lt;/a&gt; - File hosting and sharing solution primary for teams and organizations. (&lt;a href=&quot;https://github.com/haiwen/seafile&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0/GPL-3.0/AGPL-3.0/Apache-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sparkleshare.org/&quot;&gt;SparkleShare&lt;/a&gt; - Self hosted, instant, secure file sync. (&lt;a href=&quot;https://github.com/hbons/SparkleShare&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.syncany.org/&quot;&gt;Syncany&lt;/a&gt; - Secure file sync software for arbitrary storage backends, an open-source cloud storage and filesharing application. Securely synchronize your files to any kind of storage. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://syncthing.net/&quot;&gt;Syncthing&lt;/a&gt; - Syncthing is an open source peer-to-peer file synchronisation tool. (&lt;a href=&quot;https://github.com/syncthing/syncthing&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cis.upenn.edu/~bcpierce/unison/&quot;&gt;Unison&lt;/a&gt; - Unison is a file-synchronization tool for OSX, Unix, and Windows. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;OCaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://z-push.org/&quot;&gt;Z-Push&lt;/a&gt; - Implementation of Microsoft‚Äôs ActiveSync protocol. (&lt;a href=&quot;https://stash.kopano.io/projects/ZHUB/repos/z-push&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;File Transfer - Distributed Filesystems&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#distributed-filesystems&quot;&gt;awesome-sysadmin/Distributed Filesystems&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;File Transfer - Object Storage &amp;amp; File Servers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://minio.io/&quot;&gt;Minio&lt;/a&gt; - Minio is an open source object storage server compatible with Amazon S3 APIs. (&lt;a href=&quot;https://github.com/minio/minio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chrislusf/seaweedfs&quot;&gt;SeaweedFS&lt;/a&gt; - SeaweedFS is an open source distributed file system supporting WebDAV, S3 API, FUSE mount, HDFS, etc, optimized for lots of small files, and easy to add capacity. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drakkan/sftpgo&quot;&gt;SFTPGo&lt;/a&gt; - Flexible, fully featured and highly configurable SFTP server with optional FTP/S and WebDAV support. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenko.io/cloudserver&quot;&gt;Zenko CloudServer&lt;/a&gt; - Zenko CloudServer, an open-source implementation of a server handling the Amazon S3 protocol. (&lt;a href=&quot;https://github.com/scality/cloudserver&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;File Transfer - Peer-to-peer Filesharing&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webtorrent.io/&quot;&gt;bittorrent-tracker&lt;/a&gt; - Simple, robust, BitTorrent tracker (client and server) implementation. (&lt;a href=&quot;https://github.com/webtorrent/bittorrent-tracker&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jpillora/cloud-torrent&quot;&gt;cloud-torrent&lt;/a&gt; - Torrent Web Client with HTTP retrievable or streamable downloaded files. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datproject.org&quot;&gt;Dat Project&lt;/a&gt; - Powerful decentralized file sharing applications built from a large ecosystem of modules. (&lt;a href=&quot;https://github.com/datproject&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/varbhat/exatorrent&quot;&gt;exatorrent&lt;/a&gt; - BitTorrent client written in Go that can be run locally or hosted on a remote server, and supports streaming via HTTP. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://file.pizza/&quot;&gt;FilePizza&lt;/a&gt; - Peer-to-peer file transfers in your browser. (&lt;a href=&quot;https://github.com/kern/filepizza&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/webtorrent/instant.io&quot;&gt;instant.io&lt;/a&gt; - Streaming file transfer over WebTorrent. (&lt;a href=&quot;https://instant.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boramalper/magnetico&quot;&gt;Magnetico&lt;/a&gt; - Magnetico is the first autonomous (self-hosted) BitTorrent DHT search engine suite that is designed for end-users. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sergiotapia/magnetissimo&quot;&gt;Magnetissimo&lt;/a&gt; - Search engine that indexes all popular torrent sites. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://erdgeist.org/arts/software/opentracker/&quot;&gt;Opentracker&lt;/a&gt; - Open and free bittorrent tracker. It aims for minimal resource usage and is intended to run at your wlan router. (&lt;a href=&quot;https://erdgeist.org/gitweb/opentracker/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Beerware&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/asapach/peerflix-server&quot;&gt;peerflix-server&lt;/a&gt; - Downloads torrent files and provides a direct link download or a direct link stream. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.qbittorrent.org/&quot;&gt;qBittorrent&lt;/a&gt; - Free cross-platform bittorrent client with a feature rich Web UI for remote access. (&lt;a href=&quot;https://github.com/qbittorrent/qBittorrent&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swetorrentking/rartracker&quot;&gt;rartracker&lt;/a&gt; - Complete private bittorrent tracker. &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/timvisee/send&quot;&gt;Send&lt;/a&gt; - Simple, private, end to end encrypted temporary file sharing, originally built by Mozilla. (&lt;a href=&quot;https://github.com/timvisee/send#clients&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeberg.org/heretic/torrents-csv-server&quot;&gt;Torrents.csv&lt;/a&gt; - A self-hostable torrent search engine. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://transmissionbt.com/&quot;&gt;Transmission&lt;/a&gt; - Fast, easy, Free Bittorrent client. (&lt;a href=&quot;https://github.com/transmission/transmission&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;File Transfer - Single-click &amp;amp; Drag-n-drop Upload&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tycrek/ass&quot;&gt;ass&lt;/a&gt; - The superior self-hosted ShareX server. For use with clients such as ShareX (Windows), Flameshot (Linux), &amp;amp; MagicCap (Linux, macOS). &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/broncowdd/BoZoN&quot;&gt;BoZoN&lt;/a&gt; - Minimalist Drag and drop file sharing app. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lolisafe.moe/&quot;&gt;Chibisafe&lt;/a&gt; - Blazing fast file uploader and awesome bunker written in node. (&lt;a href=&quot;https://github.com/weebdev/chibisafe&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coquelicot.potager.org/&quot;&gt;Coquelicot&lt;/a&gt; - Coquelicot is a ‚Äúone-click‚Äù file sharing web application with a focus on protecting users‚Äô privacy. (&lt;a href=&quot;https://coquelicot.potager.org/dist/coquelicot-0.9.6.tar.gz&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elixi.re&quot;&gt;elixire&lt;/a&gt; - Simple yet advanced screenshot uploading and link shortening service. (&lt;a href=&quot;https://gitlab.com/elixire/elixire&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/elixire/elixiremanager&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anderspitman/fibridge-proxy-rs&quot;&gt;fibridge&lt;/a&gt; - Stream huge files out of your browser without having to upload. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/axeloz/filesharing&quot;&gt;Files Sharing&lt;/a&gt; - Open Source and self-hosted files sharing application based on unique and temporary links. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/epoupon/fileshelter&quot;&gt;FileShelter&lt;/a&gt; - FileShelter is a self-hosted software that allows you to easily share files over the Internet. (&lt;a href=&quot;https://fileshelter.demo.poupon.io/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rockmanvnx6/FireShare&quot;&gt;FireShare&lt;/a&gt; - A full-stack, pub-sub, real-time secure file sharing system. (&lt;a href=&quot;https://auspham.dev/FireShare&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Forceu/gokapi&quot;&gt;Gokapi&lt;/a&gt; - Lightweight server to share files, which expire after a set amount of downloads or days. Similar to the discontinued Firefox Send, with the difference that only the admin is allowed to upload files. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Depado/goploader&quot;&gt;goploader&lt;/a&gt; - Easy file sharing with server-side encryption, curl/httpie/wget compliant. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daggy1234/image-uploader&quot;&gt;image-uploader&lt;/a&gt; - A shareX compatible image uploader built for speed with a web interface and REST API. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hauxir/imgpush&quot;&gt;imgpush&lt;/a&gt; - imgpush is a self-hosted file upload service that can easily be integrated into other webapps. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/mojo42/Jirafeau&quot;&gt;Jirafeau&lt;/a&gt; - Jirafeau is a web site permitting to upload a file in a simple way and give an unique link to it. (&lt;a href=&quot;http://jirafeau.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kleeja.net/&quot;&gt;Kleeja&lt;/a&gt; - File Upload/sharing application, used by thousands of webmasters since 2007. (&lt;a href=&quot;https://github.com/kleeja-official/kleeja&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZizzyDizzyMC/linx-server&quot;&gt;linx-server&lt;/a&gt; - Simple file sharing and pastebin with API, auto-expiry, deletion keys, and web seed support. (&lt;a href=&quot;https://put.icu/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://framagit.org/fiat-tux/hat-softwares/lufi&quot;&gt;lufi&lt;/a&gt; - Let&#39;s Upload that FIle, client-side encrypted. (&lt;a href=&quot;https://demo.lufi.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://framagit.org/fiat-tux/hat-softwares/lufi/tree/master&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ldidry/lutim&quot;&gt;lutim&lt;/a&gt; - Let&#39;s Upload That Image. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/micahflee/onionshare&quot;&gt;OnionShare&lt;/a&gt; - Securely and anonymously share a file of any size. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pictshare.net/&quot;&gt;PictShare&lt;/a&gt; - PictShare is a multi lingual, open source image hosting service with a simple resizing and upload API. (&lt;a href=&quot;https://github.com/HaschekSolutions/pictshare&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/root-gg/plik&quot;&gt;Plik&lt;/a&gt; - Plik is a scalable and friendly temporary file upload system. (&lt;a href=&quot;https://plik.root.gg/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Pomf/Pomf&quot;&gt;Pomf&lt;/a&gt; - Simple file uploading and sharing, source for the now shut down site Pomf.se. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.projectsend.org/&quot;&gt;ProjectSend&lt;/a&gt; - Upload files and assign them to specific clients you create. Give access to those files to your clients. (&lt;a href=&quot;https://github.com/projectsend/projectsend&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/psi-4ward/psitransfer&quot;&gt;PsiTransfer&lt;/a&gt; - Simple open source self-hosted file sharing solution with robust up-/download-resume and password protection. &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.pste.pw/&quot;&gt;Pste&lt;/a&gt; - Just a simple file hosting application inspired by the likes of pomf.se and teknik.io. (&lt;a href=&quot;https://github.com/FoxDev/pste&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ihexxa/quickshare&quot;&gt;QuickShare&lt;/a&gt; - Quick and simple file sharing between different devices. (&lt;a href=&quot;https://hexxa-quickshare.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MrDemonWolf/share&quot;&gt;Share&lt;/a&gt; - Simple yet advanced uploader - upload files, images and text with moderation tools for admins. Can be used for friends and family or just for you. Integration with ShareX and more. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eikek/sharry&quot;&gt;Sharry&lt;/a&gt; - Share files easily over the internet between authenticated and anonymous users (both ways) with resumable up- and downloads. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Scala/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://transfer.sh&quot;&gt;transfer.sh&lt;/a&gt; - Easy file sharing from the command line. (&lt;a href=&quot;https://github.com/dutchcoders/transfer.sh&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uguu.se/&quot;&gt;Uguu&lt;/a&gt; - Stores files and deletes after X amount of time. (&lt;a href=&quot;https://github.com/nokonoko/uguu&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Upload/Up1&quot;&gt;Up1&lt;/a&gt; - Client-side Encrypted Image Host. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlphaNecron/Void&quot;&gt;Void&lt;/a&gt; - Lightweight, fast and elegant file hosting service for ShareX with Web UI and REST API. (&lt;a href=&quot;https://github.com/AlphaNecron/Void/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://v2.femto.pw/&quot;&gt;Web-File-Uploader&lt;/a&gt; - A simple tool to let people upload and share images and files. (&lt;a href=&quot;https://github.com/femto-apps/web-file-uploader&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SergiX44/XBackBone&quot;&gt;XBackBone&lt;/a&gt; - A simple, fast and lightweight file manager with instant sharing tools integration, like ShareX (a free and open-source screenshot utility for Windows). &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtransfer.io&quot;&gt;YouTransfer&lt;/a&gt; - YouTransfer is a simple but elegant self-hosted file transfer and sharing solution. (&lt;a href=&quot;https://github.com/YouTransfer/YouTransfer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zipline.diced.me/&quot;&gt;Zipline&lt;/a&gt; - A lightweight, fast and reliable file sharing server that is commonly used with ShareX, offering a react-based Web UI and fast API. (&lt;a href=&quot;https://github.com/diced/zipline&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;File Transfer - Web-based File Managers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oupala.github.io/apaxy/&quot;&gt;Apaxy&lt;/a&gt; - Theme built to enhance the experience of browsing web directories, using the mod_autoindex Apache module and some CSS to override the default style of a directory listing. (&lt;a href=&quot;https://github.com/oupala/apaxy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;HTML&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.directorylister.com/&quot;&gt;DirectoryLister&lt;/a&gt; - Simple PHP based directory lister that lists a directory and all its sub-directories and allows you to navigate there within. (&lt;a href=&quot;https://github.com/DirectoryLister/DirectoryLister&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://soyuka.github.io/explorer/&quot;&gt;explorer&lt;/a&gt; - Highly-configurable directory listing. (&lt;a href=&quot;https://github.com/soyuka/explorer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://filebrowser.org/&quot;&gt;filebrowser&lt;/a&gt; - Web File Browser with a Material Design web interface. (&lt;a href=&quot;https://github.com/filebrowser/filebrowser&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://filegator.io/&quot;&gt;FileGator&lt;/a&gt; - FileGator is a powerful multi-user file manager with a single page front-end. (&lt;a href=&quot;https://demo.filegator.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/filegator/filegator&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.filestash.app/&quot;&gt;Filestash&lt;/a&gt; - A web file manager that lets you manage your data anywhere it is located: FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox, or Google Drive . (&lt;a href=&quot;https://demo.filestash.app/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/mickael-kerjean/filestash&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xataz/gobrowser&quot;&gt;goBrowser&lt;/a&gt; - Simple http file browser. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pldubouilh/gossa&quot;&gt;Gossa&lt;/a&gt; - Gossa is a light and simple webserver for your files. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://larsjung.de/h5ai/&quot;&gt;h5ai&lt;/a&gt; - Modern file indexer for HTTP web servers with focus on your files. Directories are displayed in a appealing way and browsing them is enhanced by different views, a breadcrumb and a tree overview. (&lt;a href=&quot;https://larsjung.de/h5ai/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/lrsjng/h5ai&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/misterunknown/ifm&quot;&gt;IFM&lt;/a&gt; - Single script file manager. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.resourcespace.com&quot;&gt;ResourceSpace&lt;/a&gt; - ResourceSpace open source digital asset management software is the simple, fast, and free way to organise your digital assets. (&lt;a href=&quot;https://www.resourcespace.com/trial&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://www.resourcespace.com/svn&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-4-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jessfraz/s3server&quot;&gt;s3server&lt;/a&gt; - Simple HTTP interface to index and browse files in a public S3 or Google Cloud Storage bucket. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.cloudron.io/cloudron/surfer&quot;&gt;Surfer&lt;/a&gt; - Simple static file server with webui to manage files. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tagspaces.org/&quot;&gt;TagSpaces&lt;/a&gt; - TagSpaces is an offline, cross-platform file manager and organiser that also can function as a note taking app. The WebDAV version of the application can be installed on top of a WebDAV servers such as Nextcloud or ownCloud. (&lt;a href=&quot;https://demo.tagspaces.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/tagspaces/tagspaces&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sc0tfree/updog&quot;&gt;updog&lt;/a&gt; - Updog is a replacement for Python&#39;s SimpleHTTPServer. It allows uploading and downloading via HTTP/S, can set ad hoc SSL certificates and use http basic auth. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Games&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Games, game servers and control panels.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/doublespeakgames/adarkroom&quot;&gt;A Dark Room&lt;/a&gt; - Minimalist text adventure game for your browser. (&lt;a href=&quot;https://adarkroom.doublespeakgames.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://play.elevatorsaga.com/&quot;&gt;elevatorsaga&lt;/a&gt; - The elevator programming game. (&lt;a href=&quot;https://github.com/magwo/elevatorsaga&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://emulinker.org&quot;&gt;EmuLinkerSF&lt;/a&gt; - EmuLinkerSF is an open source Kaillera server. Kaillera is a client/server system that any emulator can implement to enable netplay over the Internet. (&lt;a href=&quot;https://github.com/God-Weapon/EmuLinkerSF&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Hextris/hextris&quot;&gt;Hextris&lt;/a&gt; - Fast paced HTML5 puzzle game inspired by Tetris. (&lt;a href=&quot;https://hextris.github.io/hextris&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lotgd/core&quot;&gt;Legend of the Green Dragon&lt;/a&gt; - Legend of the Green Dragon is a text-based RPG originally developed by Eric Stevens and JT Traub as a remake of and homage to the classic BBS Door game, Legend of the Red Dragon, by Seth Able Robinson. (&lt;a href=&quot;http://lotgd.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lichess.org/&quot;&gt;Lila&lt;/a&gt; - The forever free, adless and open source chess server powering lichess.org, with official iOS and Android client apps. (&lt;a href=&quot;https://github.com/ornicar/lila&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mindustrygame.github.io/&quot;&gt;Mindustry&lt;/a&gt; - Factorio-like tower defense game. Build production chains to gather more resources, and build complex facilities. (&lt;a href=&quot;https://github.com/Anuken/Mindustry&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.minetest.net/&quot;&gt;Minetest&lt;/a&gt; - An open source voxel game engine. Play one of our many games, mod a game to your liking, make your own game, or play on a multiplayer server. (&lt;a href=&quot;https://github.com/minetest/minetest&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1/CC-BY-SA-3.0/Other&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mtasa.com/&quot;&gt;MTA:SA&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Multi Theft Auto (MTA) is a software project that adds network play functionality to Rockstar North&#39;s Grand Theft Auto game series, in which this functionality is not originally found. (&lt;a href=&quot;https://github.com/multitheftauto/mtasa-blue&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://net64-mod.github.io&quot;&gt;Net64+&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Net64 aka SM64O allows playing Super Mario 64 in an online multiplayer mode. Net64+ is the official continuation of the program and features an integrated server list. (&lt;a href=&quot;https://github.com/Tarnadas/net64plus-server/&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/Tarnadas/net64plus/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jehervy/node-virtual-gamepads&quot;&gt;node-virtual-gamepads&lt;/a&gt; - Turn your smartphone into a game controller, keyboard, or touchpad for a remote Linux OS machine. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/CoffeScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piqueserver/piqueserver&quot;&gt;piqueserver&lt;/a&gt; - Server for openspades, the first-person shooter in a destructible voxel world. (&lt;a href=&quot;https://github.com/yvt/openspades&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python/C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abrenaut/posio&quot;&gt;Posio&lt;/a&gt; - Geography multiplayer game. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/begleysm/quakejs&quot;&gt;QuakeJS&lt;/a&gt; - QuakeJS is a port of ioquake3 to Javascript that can be played in a browser. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nymanjens/quizmaster&quot;&gt;Quizmaster&lt;/a&gt; - A web-app for conducting a quiz, including a page for players to enter their answers. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gorcon/rcon-cli&quot;&gt;RconCli&lt;/a&gt; - CLI for executing queries on a remote Valve Source dedicated server using the RCON Protocol. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sbpp.github.io&quot;&gt;SourceBans++&lt;/a&gt; - Admin, ban, and communication management system for games running on the Source engine. (&lt;a href=&quot;https://github.com/sbpp/sourcebans-pp&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC-BY-SA-4.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.teeworlds.com&quot;&gt;Teeworlds&lt;/a&gt; - Open source 2D retro multiplayer shooter. (&lt;a href=&quot;https://github.com/teeworlds/teeworlds&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause/Other&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wesnoth/wesnoth&quot;&gt;The Battle for Wesnoth&lt;/a&gt; - The Battle for Wesnoth is an Open Source, turn-based tactical strategy game with a high fantasy theme, featuring both singleplayer and online/hotseat multiplayer combat. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zero-k.info/&quot;&gt;Zero-K&lt;/a&gt; - Open Source on Springrts engine. Zero-K is a traditional real time strategy game with a focus on player creativity through terrain manipulation, physics, and a large roster of unique units - all while being balanced to support competitive play. (&lt;a href=&quot;https://github.com/ZeroK-RTS/Zero-K&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Gateways and Terminal Sharing&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/asciinema/asciinema-server&quot;&gt;asciinema&lt;/a&gt; - Web app for hosting asciicasts. (&lt;a href=&quot;https://asciinema.org/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Elixir/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://liftoffsoftware.com/Products/GateOne&quot;&gt;GateOne&lt;/a&gt; - Gate One is an HTML5 web-based terminal emulator and SSH client. (&lt;a href=&quot;https://github.com/liftoff/GateOne&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guacamole.apache.org&quot;&gt;Guacamole&lt;/a&gt; - Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP. (&lt;a href=&quot;https://github.com/glyptodon/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java/C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://neko.m1k1o.net&quot;&gt;Neko&lt;/a&gt; - A self hosted virtual browser (rabb.it clone) that runs in Docker. (&lt;a href=&quot;https://github.com/m1k1o/neko&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker/Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oneye-project.org/&quot;&gt;oneye&lt;/a&gt; - Cloud software to access your data from everywhere with any browser. (&lt;a href=&quot;https://wiki.oneye-project.org/0.9:demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/oneye/oneye&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.os-js.org/&quot;&gt;OS.js&lt;/a&gt; - Desktop implementation for your browser with a fully-fledged window manager, Application APIs, GUI toolkits and filesystem abstraction. (&lt;a href=&quot;https://demo.os-js.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/os-js/OS.js&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shellhub.io&quot;&gt;ShellHub&lt;/a&gt; - ShellHub is a modern SSH server for remotely accessing linux devices via command line (using any SSH client) or web-based user interface, designed as an alternative to sshd. Think ShellHub as centralized SSH for the edge and cloud computing. (&lt;a href=&quot;https://github.com/shellhub-io/shellhub&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nirui/sshwifty&quot;&gt;Sshwifty&lt;/a&gt; - Sshwifty is a SSH and Telnet connector made for the Web. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://goteleport.com/&quot;&gt;Teleport&lt;/a&gt; - Certificate authority and access plane for SSH, Kubernetes, web applications, and databases. (&lt;a href=&quot;https://github.com/gravitational/teleport&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tmate.io/&quot;&gt;tmate&lt;/a&gt; - Instant terminal sharing. (&lt;a href=&quot;https://github.com/tmate-io/tmate&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Genealogy&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://genea.app/&quot;&gt;Genea.app&lt;/a&gt; - Genea is a privacy by design and open source tool anyone can use to author or edit their family tree. Data is stored in the GEDCOM format and all processing is done in the browser. (&lt;a href=&quot;https://github.com/genea-app/genea-app&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://geneweb.tuxfamily.org/wiki/GeneWeb&quot;&gt;GeneWeb&lt;/a&gt; - GeneWeb is an open source genealogy software written in OCaml. It comes with a Web interface and can be used off-line or as a Web service. (&lt;a href=&quot;https://demo.geneweb.tuxfamily.org/gw7/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/geneweb/geneweb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;OCaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.webtrees.net&quot;&gt;webtrees&lt;/a&gt; - Webtrees is the web&#39;s leading on-line collaborative genealogy application. (&lt;a href=&quot;https://dev.webtrees.net/demo-stable/index.php?ctype=gedcom&amp;amp;ged=demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/fisharebest/webtrees&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Groupware&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluemind.net/en/&quot;&gt;BlueMind&lt;/a&gt; - Groupware with email, calendar, addressbooks, exchange active sync, exchange MAPI protocol support. (&lt;a href=&quot;https://forge.bluemind.net/stash/projects/BM/repos/bluemind-public/browse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.citadel.org/doku.php&quot;&gt;Citadel&lt;/a&gt; - Groupware including email, calendar/scheduling, address books, forums, mailing lists, IM, wiki and blog engines, RSS aggregation and more. (&lt;a href=&quot;https://www.citadel.org/source.html&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cortezaproject.org&quot;&gt;Corteza&lt;/a&gt; - CRM including a unified workspace, enterprise messaging and a low code environment for rapidly and securely delivering records-based management solutions. (&lt;a href=&quot;https://latest.cortezaproject.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/cortezaproject/corteza-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cozy.io&quot;&gt;Cozy Cloud&lt;/a&gt; - Personal cloud where you can manage and sync your contact, files and calendars, and manage your budget with an app store full of community contributions. (&lt;a href=&quot;https://github.com/cozy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.group-office.com&quot;&gt;Group Office&lt;/a&gt; - Group-Office is an enterprise CRM and groupware tool. Share projects, calendars, files and e-mail online with co-workers and clients. (&lt;a href=&quot;https://github.com/Intermesh/groupoffice/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.egroupware.org/&quot;&gt;egroupware&lt;/a&gt; - Software suite including calendars, address books, notepad, project management tools, client relationship management tools (CRM), knowledge management tools, a wiki and a CMS. (&lt;a href=&quot;https://github.com/EGroupware/egroupware&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.espocrm.com/&quot;&gt;EspoCRM&lt;/a&gt; - CRM with a frontend designed as a single page application, and a REST API. (&lt;a href=&quot;https://demo.espocrm.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/espocrm/espocrm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.horde.org/&quot;&gt;Horde&lt;/a&gt; - The Horde Project is about creating high quality Open Source applications and libraries, based on PHP and the Horde Framework. (&lt;a href=&quot;http://demo.horde.org/login.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/horde/horde&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zelon88/HRCloud2&quot;&gt;HRCloud2&lt;/a&gt; - Full-featured home hosted Cloud Drive, Personal Assistant, App Launcher, File Converter, Streamer, Share Tool and more. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kolab.org/&quot;&gt;Kolab&lt;/a&gt; - Kolab community is a unified communication and collaboration system. (&lt;a href=&quot;https://git.kolab.org/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0/LGPL-2.1/GPL-3.0&lt;/code&gt; &lt;code&gt;C++/Python/PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kopano.com/&quot;&gt;Kopano&lt;/a&gt; - Groupware suite including e-mail, calendars, tasks, todos and notes. Featuring a modern WebApp, DeskApp and mobile access over Z-Push/ActiveSync. (&lt;a href=&quot;https://demo.kopano.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://stash.kopano.io&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;C/Python/PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openmeetings.apache.org/index.html&quot;&gt;Openmeetings&lt;/a&gt; - Openmeetings provides video conferencing, instant messaging, white board, collaborative document editing and other groupware tools using API functions of the Red5 Streaming Server for Remoting and Streaming. (&lt;a href=&quot;https://openmeetings.apache.org/scm.html&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sogo.nu/&quot;&gt;SOGo&lt;/a&gt; - SOGo offers multiple ways to access the calendaring and messaging data. CalDAV, CardDAV, GroupDAV, as well as ActiveSync, including native Outlook compatibility and Web interface. (&lt;a href=&quot;https://demo.sogo.nu/SOGo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/inverse-inc/sogo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;Objective-C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://suitecrm.com&quot;&gt;SuiteCRM&lt;/a&gt; - The award-winning, enterprise-class open source CRM. (&lt;a href=&quot;https://github.com/salesagility/SuiteCRM&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tine20.org&quot;&gt;Tine 2.0&lt;/a&gt; - Contacts, Calendar, Tasks, WebDAV, ActiveSync, VOIP, Mail-Client, CRM, Sales, Projects, Timetracker. (&lt;a href=&quot;https://demo.tine20.net&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://packages.tine20.com/maintenance/source/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0/Other&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tracim/tracim&quot;&gt;Tracim&lt;/a&gt; - Collaborative Platform for team collaboration: file,threads,notes,agenda,etc. &lt;code&gt;AGPL-3.0/LGPL-3.0/MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zimbra.com/&quot;&gt;Zimbra Collaboration&lt;/a&gt; - Email, calendar, collaboration server with Web interface and lots of integrations. (&lt;a href=&quot;https://github.com/zimbra&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0/CPAL-1.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Human Resources Management (HRM)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.admidio.org/&quot;&gt;admidio&lt;/a&gt; - Admidio is a free open source user management system for websites of organizations and groups. The system has a flexible role model so that it‚Äôs possible to reflect the structure and permissions of your organization. (&lt;a href=&quot;https://www.admidio.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Admidio/admidio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icehrm.com/&quot;&gt;IceHrm&lt;/a&gt; - IceHrm employee management system allows companies to centralize confidential employee information. (&lt;a href=&quot;https://icehrm.com/demo.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gamonoid/icehrm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.orangehrm.com/&quot;&gt;OrangeHRM&lt;/a&gt; - OrangeHRM is a comprehensive HRM system that captures all the essential functionalities required for any enterprise. (&lt;a href=&quot;https://sourceforge.net/projects/orangehrm/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sentrifugo.com/&quot;&gt;Sentrifugo&lt;/a&gt; - Sentrifugo is a HRM system that can be easily configured to meet your organizational needs. (&lt;a href=&quot;https://github.com/sapplica/sentrifugo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://timeoff.management&quot;&gt;TimeOff.Management&lt;/a&gt; - Simple yet powerful absence management software for small and medium size business. (&lt;a href=&quot;https://app.timeoff.management&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/timeoff-management/timeoff-management-application&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Internet of Things (IoT)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.devicehive.com/&quot;&gt;DeviceHive&lt;/a&gt; - Open Source IoT Platform with a wide range of integration options. (&lt;a href=&quot;https://playground.devicehive.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/devicehive/devicehive-java-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.domoticz.com/&quot;&gt;Domoticz&lt;/a&gt; - Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. (&lt;a href=&quot;https://github.com/domoticz/domoticz&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/domoticz/domoticz-android&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C/C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fhem.de/fhem.html&quot;&gt;FHEM&lt;/a&gt; - FHEM is used to automate common tasks in the household like switching lamps and heating. It can also be used to log events like temperature or power consumption. You can control it via web or smartphone frontends, telnet or TCP/IP directly. (&lt;a href=&quot;https://svn.fhem.de/trac&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gladysassistant.com/&quot;&gt;Gladys&lt;/a&gt; - Gladys is a privacy-first, open-source home assistant. (&lt;a href=&quot;https://github.com/GladysAssistant/Gladys&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt; - Open-source home automation platform. (&lt;a href=&quot;https://home-assistant.io/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/home-assistant/core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodered.org/&quot;&gt;Node RED&lt;/a&gt; - Browser-based flow editor that helps you wiring hardware devices, APIs and online services to create IoT solutions. (&lt;a href=&quot;https://github.com/node-red/node-red&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openhab.org&quot;&gt;openHAB&lt;/a&gt; - Vendor and technology agnostic open source software for home automation. (&lt;a href=&quot;https://github.com/openhab/openhab-core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openremote.io&quot;&gt;OpenRemote&lt;/a&gt; - 100% Open Source IoT Platform - IoT Asset management, Flow Rules and WHEN-THEN rules, Data visualization, Edge Gateway. (&lt;a href=&quot;https://demo.openremote.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/openremote/openremote&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thingsboard.io/&quot;&gt;Thingsboard&lt;/a&gt; - Open-source IoT Platform - Device management, data collection, processing and visualization. (&lt;a href=&quot;https://demo.thingsboard.io/signup&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/thingsboard/thingsboard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thingspeak.com/&quot;&gt;Thingspeak&lt;/a&gt; - Open source ‚ÄúInternet of Things‚Äù application and API to store and retrieve data from things using HTTP. (&lt;a href=&quot;https://thingspeak.com/channels/public&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/iobridge/thingspeak&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webthings.io/gateway/&quot;&gt;WebThings Gateway&lt;/a&gt; - WebThings is an open source implementation of the Web of Things, including the WebThings Gateway and the WebThings Framework. (&lt;a href=&quot;https://github.com/WebThingsIO/gateway&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Knowledge Management Tools&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drichard/mindmaps&quot;&gt;Mindmaps&lt;/a&gt; - Open source, offline capable, mind mapping application. (&lt;a href=&quot;https://www.mindmaps.app&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ondras/my-mind&quot;&gt;My Mind&lt;/a&gt; - Web application for creating and managing mind maps. (&lt;a href=&quot;https://my-mind.github.io/?url=examples%2Ffeatures.mymind&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/semi-technologies/weaviate&quot;&gt;Weaviate&lt;/a&gt; - A cloud-native, realtime vector search engine integrating scalable machine learning models (GraphQL and RESTful APIs). (&lt;a href=&quot;https://www.semi.technology/documentation/weaviate/current/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Learning and Courses&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.canvaslms.com/&quot;&gt;Canvas LMS&lt;/a&gt; - Canvas is the trusted, open-source learning management system (LMS) that is revolutionizing the way we educate. (&lt;a href=&quot;https://canvas.instructure.com/register&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/instructure/canvas-lms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chamilo.org/&quot;&gt;Chamilo LMS&lt;/a&gt; - Chamilo LMS allows you to create a virtual campus for the provision of online or semi-online training. (&lt;a href=&quot;https://github.com/chamilo/chamilo-lms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.edx.org/&quot;&gt;edX&lt;/a&gt; - The Open edX platform is open-source code that powers edX.org. (&lt;a href=&quot;https://github.com/edx/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gibbonedu.org/&quot;&gt;Gibbon&lt;/a&gt; - The flexible, open source school management platform designed to make life better for teachers, students, parents and leaders. (&lt;a href=&quot;https://github.com/GibbonEdu/core&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ilias.de&quot;&gt;ILIAS&lt;/a&gt; - ILIAS is the Learning Management System that can cope with anything you throw at it. (&lt;a href=&quot;https://demo.ilias.de&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ILIAS-eLearning/ILIAS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mahara.org/&quot;&gt;Mahara&lt;/a&gt; - Open Source fully featured web application to build students electronic portfolio. (&lt;a href=&quot;https://github.com/MaharaProject/mahara&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moodle.org/&quot;&gt;Moodle&lt;/a&gt; - Moodle is a learning and courses platform with one of the largest open source communities worldwide. (&lt;a href=&quot;https://moodle.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://git.moodle.org/gw&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openeclass.org/&quot;&gt;Open eClass&lt;/a&gt; - Open eClass is an advanced e-learning solution that can enhance the teaching and learning process. (&lt;a href=&quot;https://demo.openeclass.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gunet/openeclass&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openolat.com/?lang=en&quot;&gt;OpenOLAT&lt;/a&gt; - OpenOLAT is a web-based learning management system for teaching, education, assessment and communication. (&lt;a href=&quot;https://learn.olat.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/OpenOLAT/OpenOLAT&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documen.tician.de/relate/&quot;&gt;RELATE&lt;/a&gt; - RELATE is a web-based courseware package, includes features such as: flexible rules, statistics, multi-course support, class calendar. (&lt;a href=&quot;https://github.com/inducer/relate&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rosariosis.org/&quot;&gt;RosarioSIS&lt;/a&gt; - RosarioSIS, free Student Information System for school management. (&lt;a href=&quot;https://www.rosariosis.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/francoisjacquet/rosariosis/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sakaiproject.org/&quot;&gt;Sakai&lt;/a&gt; - The Sakai project provides a flexible and feature-rich environment for teaching, learning, research and other collaboration. (&lt;a href=&quot;https://www.sakaiproject.org/try-sakai&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sakaiproject/sakai&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ECL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Maps and Global Positioning System (GPS)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also: &lt;a href=&quot;https://github.com/sshuair/awesome-gis&quot;&gt;awesome-gis&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/noandrea/geo2tz&quot;&gt;Geo2tz&lt;/a&gt; - Get the timezone from geo coordinates (lat, lon). &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graphhopper.com/&quot;&gt;GraphHopper&lt;/a&gt; - Fast routing library and server using OpenStreetMap. (&lt;a href=&quot;https://github.com/graphhopper/graphhopper&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bilde2910/Hauk&quot;&gt;Hauk&lt;/a&gt; - Easy to setup location sharing platform that lets you temporarily share your location with anyone in real-time. (&lt;a href=&quot;https://github.com/bilde2910/Hauk#demo-server&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MapBBCode/share.mapbbcode.org&quot;&gt;MapBBCodeShare&lt;/a&gt; - Tool for sharing custom OSM maps. Support for annotated markers, polygons, lines, multi-format import/export, multiple layers, shortlinks. (&lt;a href=&quot;http://share.mapbbcode.org/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;WTFPL/Other&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nominatim.org/&quot;&gt;Nominatim&lt;/a&gt; - Server application for reverse geocoding (address -&amp;gt; coordinates) on OpenStreetMap data. (&lt;a href=&quot;https://github.com/osm-search/Nominatim&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://project-osrm.org/&quot;&gt;Open Source Routing Machine (OSRM)&lt;/a&gt; - High performance routing engine designed to run on OpenStreetMap data and offering an HTTP API, C++ library interface, and Nodejs wrapper. (&lt;a href=&quot;https://map.project-osrm.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Project-OSRM/osrm-backend&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.opengts.org/&quot;&gt;OpenGTS&lt;/a&gt; - Entry-level fleet tracking system. Supports variety of tracking devices and protocols. Comes with rich web-interface and reporting features. (&lt;a href=&quot;http://track.opengts.org/track/Track&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://sourceforge.net/projects/opengts/files/server-base/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt; - Collaborative project to create a free editable map of the world. (&lt;a href=&quot;https://github.com/openstreetmap/openstreetmap-website&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Software&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opentripplanner.org/&quot;&gt;OpenTripPlanner&lt;/a&gt; - Multimodal trip planning software based on OpenStreetMap data and consuming published GTFS-formatted data to suggest routes using local public transit systems. (&lt;a href=&quot;https://github.com/opentripplanner/OpenTripPlanner&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Java/Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LINKIWI/orion-web&quot;&gt;Orion&lt;/a&gt; - Powerful OwnTracks API-compliant location data visualization frontend for the web. (&lt;a href=&quot;https://linkiwi.github.io/orion-web/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/owntracks/recorder&quot;&gt;OwnTracks Recorder&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Store and access data published by &lt;a href=&quot;https://owntracks.org/&quot;&gt;OwnTracks&lt;/a&gt; location tracking apps. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C/Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tileserver.readthedocs.io/&quot;&gt;TileServer GL&lt;/a&gt; - Vector and raster maps with GL styles. Server side rendering by Mapbox GL Native. Map tile server for Mapbox GL JS, Android, iOS, Leaflet, OpenLayers, GIS via WMTS, etc. (&lt;a href=&quot;https://github.com/maptiler/tileserver-gl&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.maptiler.com/server/&quot;&gt;TileServer PHP&lt;/a&gt; - Serve map tiles from any PHP hosting. (&lt;a href=&quot;https://github.com/maptiler/tileserver-php&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.traccar.org/&quot;&gt;Traccar&lt;/a&gt; - Java application to track GPS positions. Supports loads of tracking devices and protocols, has an Android and iOS App. Has a web interface to view your trips. (&lt;a href=&quot;https://demo.traccar.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/traccar&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://umap.openstreetmap.fr/en/&quot;&gt;uMap&lt;/a&gt; - Create maps with OpenStreetMap layers in a minute and embed them in your site. (&lt;a href=&quot;https://github.com/umap-project/umap&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bfabiszewski/ulogger-server&quot;&gt;Œºlogger&lt;/a&gt; - Collect geolocation from users in real-time and display their GPS tracks on a website. (&lt;a href=&quot;http://ulogger.fabiszewski.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Media Streaming&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#media-streaming---audio-streaming&quot;&gt;Media streaming - Audio Streaming&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#media-streaming---mutimedia-streaming&quot;&gt;Media streaming - Multimedia Streaming&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#media-streaming---video-streaming&quot;&gt;Media streaming - Video Streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also: &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_streaming_media_systems&quot;&gt;List of streaming media systems - Wikipedia&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_streaming_media_systems&quot;&gt;Comparison of streaming media systems - Wikipedia&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Media Streaming - Audio Streaming&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airsonic.github.io/&quot;&gt;Airsonic&lt;/a&gt; - Open-source web-based media streamer and jukebox. A fork of Subsonic&#39;s last open-source release, before it switched licenses. (&lt;a href=&quot;https://github.com/airsonic/airsonic&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://airsonic.github.io/docs/apps/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ampache.org/&quot;&gt;Ampache&lt;/a&gt; - Web based audio/video streaming application. (&lt;a href=&quot;https://play.dogmazic.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ampache/ampache&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/izderadicka/audioserve&quot;&gt;Audioserve&lt;/a&gt; - Simple personal server to serve audio files from directories (audiobooks, music, podcasts...). Focused on simplicity and supports sync of play position between clients. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.azuracast.com/&quot;&gt;AzuraCast&lt;/a&gt; - A modern and accessible self-hosted web radio management suite. (&lt;a href=&quot;https://github.com/AzuraCast/AzuraCast&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beets.io/&quot;&gt;Beets&lt;/a&gt; - Music library manager and MusicBrainz tagger (command-line and Web interface). (&lt;a href=&quot;https://github.com/beetbox/beets&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aidewoode/black_candy&quot;&gt;Black Candy&lt;/a&gt; - Music streaming server built with Rails and Stimulus. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/compactd/compactd&quot;&gt;Compactd&lt;/a&gt; - Remote music player that supports adding content. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listen-to-euterpe.eu&quot;&gt;euterpe&lt;/a&gt; - Self-hosted music streaming server with RESTful API and Web interface. (&lt;a href=&quot;https://listen-to-euterpe.eu/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ironsmile/euterpe&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xouabita/friends-radio&quot;&gt;FriendsRadio&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Share music with your friends from Youtube and Soundcloud. (&lt;a href=&quot;https://friends-radio.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://funkwhale.audio/&quot;&gt;Funkwhale&lt;/a&gt; - Modern, web-based, convivial, multi-user and free music server. (&lt;a href=&quot;https://demo.funkwhale.audio/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://code.eliotberriot.com/funkwhale/funkwhale&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gnu.io/fm/&quot;&gt;GNU FM&lt;/a&gt; - Running music community websites, alternative to last.fm. (&lt;a href=&quot;https://git.savannah.gnu.org/cgit/librefm.git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sentriz/gonic&quot;&gt;gonic&lt;/a&gt; - Lightweight music streaming server. Subsonic compatible. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andrewrk/groovebasin&quot;&gt;Groove Basin&lt;/a&gt; - Music player server with a web-based user interface inspired by Amarok 1.4. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://koel.dev/&quot;&gt;koel&lt;/a&gt; - Personal music streaming server that works. (&lt;a href=&quot;https://github.com/koel/koel&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://koozic.net/&quot;&gt;KooZic&lt;/a&gt; - Music server with powerful playlist features and Subsonic compatibility. (&lt;a href=&quot;https://demo.koozic.net/public&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/DocMarty84/koozic&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0/MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://libretime.org&quot;&gt;LibreTime&lt;/a&gt; - Simple, open source platform that lets you broadcast streaming radio on the web (fork of &lt;a href=&quot;https://github.com/sourcefabric/Airtime&quot;&gt;Airtime&lt;/a&gt;). (&lt;a href=&quot;https://github.com/LibreTime/libretime&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/epoupon/lms&quot;&gt;LMS&lt;/a&gt; - Access your self-hosted music using a web interface. (&lt;a href=&quot;https://lms.demo.poupon.io/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moodeaudio.org/&quot;&gt;moOde Audio&lt;/a&gt; - Audiophile-quality music playback for the wonderful Raspberry Pi family of single board computers. (&lt;a href=&quot;https://github.com/moode-player/moode&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/martijnboland/moped&quot;&gt;Moped&lt;/a&gt; - Responsive HTML5 + Javascript client for the Mopidy music server. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pimusicbox/mopidy-musicbox-webclient&quot;&gt;Mopidy MusicBox&lt;/a&gt; - Web Client for Mopidy Music Server. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Lesterpig/mopidy-party&quot;&gt;Mopidy-Party&lt;/a&gt; - Mopidy web extension designed for party! Let your guests manage the sound. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mopidy.com/&quot;&gt;Mopidy&lt;/a&gt; - Extensible music server. Offers a superset of the mpd API, as well as integration with 3rd party services like Spotify, SoundCloud etc. (&lt;a href=&quot;https://github.com/mopidy/mopidy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.musicpd.org/&quot;&gt;mpd&lt;/a&gt; - Daemon to remotely play music, stream music, handle and organize playlists. Many clients available. (&lt;a href=&quot;https://github.com/MusicPlayerDaemon/MPD&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://www.musicpd.org/clients/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mstream.io/&quot;&gt;mStream&lt;/a&gt; - Music streaming server with GUI management tools. Runs on Mac, Windows, and Linux. (&lt;a href=&quot;https://github.com/IrosTheBeggar/mStream&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://musikcube.com/&quot;&gt;musikcube&lt;/a&gt; - Streaming audio server with Linux/macOS/Windows/Android clients. (&lt;a href=&quot;https://github.com/clangen/musikcube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.navidrome.org&quot;&gt;Navidrome Music Server&lt;/a&gt; - Modern Music Server and Streamer, compatible with Subsonic/Airsonic. (&lt;a href=&quot;https://www.navidrome.org/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/navidrome/navidrome&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://www.navidrome.org/docs/overview/#apps&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go/Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agersant/polaris&quot;&gt;Polaris&lt;/a&gt; - Music browsing and streaming application optimized for large music collections, ease of use and high performance. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raveberry/raveberry&quot;&gt;Raveberry&lt;/a&gt; - A multi-user music server with a focus on participation. (&lt;a href=&quot;https://demo.raveberry.party/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/badaix/snapcast&quot;&gt;Snapcast&lt;/a&gt; - Synchronous multiroom audio server. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benkaiser/stretto&quot;&gt;Stretto&lt;/a&gt; - Music player with Youtube/Soundcloud import and iTunes/Spotify discovery. (&lt;a href=&quot;https://next.kaiserapps.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/benkaiser/stretto-mobile-next&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://volumio.org/&quot;&gt;Volumio&lt;/a&gt; - A free and open source linux distribution, designed and fine-tuned exclusively for music playback. (&lt;a href=&quot;https://github.com/volumio/Volumio2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ympd.org/&quot;&gt;ympd&lt;/a&gt; - Standalone MPD Web GUI written in C, utilizing Websockets and Bootstrap/JS. (&lt;a href=&quot;https://github.com/notandy/ympd&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Media Streaming - Multimedia Streaming&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gerbera.io/&quot;&gt;Gerbera&lt;/a&gt; - Gerbera is an UPnP Media Server. It allows you to stream your digital media throughout your home network and listen to/watch it on a variety of UPnP compatible devices. (&lt;a href=&quot;https://github.com/gerbera/gerbera&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ridhwaans/homehost&quot;&gt;homehost&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Self-hosted React + Redux app that streams your media collection (music, movies, books, podcasts, comics etc). &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icecast.org&quot;&gt;Icecast 2&lt;/a&gt; - streaming audio/video server which can be used to create an Internet radio station or a privately running jukebox and many things in between. (&lt;a href=&quot;https://gitlab.xiph.org/xiph/icecast-server&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://icecast.org/apps/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jellyfin.org&quot;&gt;Jellyfin&lt;/a&gt; - Media server for audio, video, books, comics, and photos with a sleek interface and robust transcoding capabilities. Almost all modern platforms have clients, including Roku, Android TV, iOS, and Kodi. (&lt;a href=&quot;https://demo.jellyfin.org/stable&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jellyfin/jellyfin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.karaoke-forever.com&quot;&gt;Karaoke Forever&lt;/a&gt; - Host awesome karaoke parties where everyone can easily find and queue songs from their phone&#39;s web browser. The player is also browser-based with support for MP3+G, MP4 and WebGL visualizations. (&lt;a href=&quot;https://www.karaoke-forever.com/repo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lbry.com/&quot;&gt;LBRY&lt;/a&gt; - Is a secure, open, and community-run digital marketplace that aims to replace Youtube and Amazon. (&lt;a href=&quot;https://lbry.tv/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/lbryio/lbry.com&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/lbryio/lbry-desktop&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mistserver.org/&quot;&gt;MistServer&lt;/a&gt; - Streaming media server that works well in any streaming environment. (&lt;a href=&quot;https://github.com/DDVTECH/mistserver&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nyanko.ws/nymphcast.php&quot;&gt;NymphCast&lt;/a&gt; - NymphCast is a Chromecast alternative which turns your choice of Linux-capable hardware into an audio and video source for a television or powered speakers. (&lt;a href=&quot;https://github.com/MayaPosch/NymphCast&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.podify.org/&quot;&gt;Podify&lt;/a&gt; - Allows you to download videos and audio from any source supported by youtube-dl and subscribe to and watch these downloads using your favorite podcast app. (&lt;a href=&quot;https://github.com/podify-org/podify/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sourceforge.net/projects/minidlna/&quot;&gt;ReadyMedia&lt;/a&gt; - Simple media server software, with the aim of being fully compliant with DLNA/UPnP-AV clients. Formerly known as MiniDLNA. (&lt;a href=&quot;https://sourceforge.net/p/minidlna/git/ci/master/tree/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.gnome.org/action/show/Projects/Rygel&quot;&gt;Rygel&lt;/a&gt; - Rygel is a UPnP AV MediaServer that allows you to easily share audio, video, and pictures. Media player software may use Rygel to become a MediaRenderer that may be controlled remotely by a UPnP or DLNA Controller. (&lt;a href=&quot;https://gitlab.gnome.org/GNOME/rygel/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sheetable.net&quot;&gt;SheetAble&lt;/a&gt; - Self-hosted music sheet organizing software for all music enthusiasts. Upload and organize your sheets for any kind of instrument. (&lt;a href=&quot;https://github.com/SheetAble/SheetAble&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stashapp.cc&quot;&gt;Stash&lt;/a&gt; - A web-based library organizer and player for your adult media stash, with auto-tagging and metadata scraping support. (&lt;a href=&quot;https://github.com/stashapp/stash&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://u-wave.net/&quot;&gt;√ºWave&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - √ºWave is a self-hosted collaborative listening platform. Users take turns playing media‚Äîsongs, talks, gameplay videos, or anything else‚Äîfrom a variety of media sources like YouTube and SoundCloud. (&lt;a href=&quot;https://wlk.yt/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/u-wave&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Media Streaming - Video Streaming&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluecherrydvr.com/&quot;&gt;Bluecherry&lt;/a&gt; - Closed-circuit television (CCTV) software application which supports IP and Analog cameras. (&lt;a href=&quot;https://github.com/bluecherrydvr/bluecherry-apps&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calzoneman/sync&quot;&gt;CyTube&lt;/a&gt; - CyTube is a web application providing media synchronization, chat, and more for an arbitrary number of channels. (&lt;a href=&quot;https://cytu.be&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Hellowlol/HTPC-Manager&quot;&gt;Hellowlol HTPC Manager fork&lt;/a&gt; - Fully responsive interface to manage all your favorite media on your HTPC. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iv-org/invidious&quot;&gt;Invidious&lt;/a&gt; - &lt;code&gt;‚ö†&lt;/code&gt; Invidious is an alternative front-end to YouTube. (&lt;a href=&quot;https://docs.invidious.io/Invidious-Instances.md&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Crystal&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kerberos.io&quot;&gt;Kerberos.io&lt;/a&gt; - Kerberos.io is a video surveillance solution, which works with any camera and on every Linux based machine (Raspberry Pi, Docker, Kubernetes cluster). (&lt;a href=&quot;https://demo.kerberos.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kerberos-io/kerberos-docker&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediacms.io&quot;&gt;MediaCMS&lt;/a&gt; - MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django/React, featuring a REST API. (&lt;a href=&quot;https://github.com/mediacms-io/mediacms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/farfalleflickan/Myflix&quot;&gt;Myflix&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Self-hosted, super lightweight Netflix alternative. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robinp7720/Oblecto&quot;&gt;Oblecto&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Media server for Movies and TV Shows with a responsive Vue.js frontend. It has robust transcoding support as well as federation capabilities to share your library with your friends. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/oddnetworks/oddworks/core&quot;&gt;Oddworks&lt;/a&gt; - Oddworks is an open source video distribution platform built to destroy the barriers to streaming television with SDKs for Roku, Apple iOS/tvOS, Google Android, and Amazon FireTV. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/olaris/olaris-server&quot;&gt;Olaris&lt;/a&gt; - Olaris is an open-source, community driven, media manager and transcoding server. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openstreamingplatform.com&quot;&gt;Open Streaming Platform&lt;/a&gt; - Self-Hosted alternative to Twitch and Youtube Live for live and on-demand video streaming. (&lt;a href=&quot;https://gitlab.com/Deamos/flask-nginx-rtmp-manager&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ovenmediaengine.com&quot;&gt;OvenMediaEngine&lt;/a&gt; - OvenMediaEngine is a selfhostable Open-Source Streaming Server with Sub-Second Latency. (&lt;a href=&quot;https://demo.ovenplayer.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/AirenSoft/OvenMediaEngine&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/owncast/owncast&quot;&gt;Owncast&lt;/a&gt; - Owncast is an open source, self-hosted, decentralized, single user live video streaming and chat server for running your own live streams similar in style to the large mainstream options. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinpeertube.org/en/&quot;&gt;PeerTube&lt;/a&gt; - Decentralized video streaming platform using P2P (BitTorrent) directly in the web browser. (&lt;a href=&quot;https://github.com/Chocobozzz/PeerTube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zibbp/Radium&quot;&gt;Radium&lt;/a&gt; - Synced stream and video playback with VOD capabilities utilizing HLS. Developed for movie nights but has many use cases. (&lt;a href=&quot;https://radium-demo.herokuapp.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hauxir/rapidbay/&quot;&gt;Rapidbay&lt;/a&gt; - Self-hosted torrent videostreaming service/torrent client that allows searching and playing videos from torrents in the browser or from a Chromecast/AppleTV/Smart TV. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datarhei.github.io/restreamer/&quot;&gt;Restreamer&lt;/a&gt; - Restreamer allows you to do h.264 real-time video streaming on your website without a streaming provider. (&lt;a href=&quot;https://github.com/datarhei/restreamer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/Shinobi-Systems/ShinobiCE&quot;&gt;ShinobiCE&lt;/a&gt; - Open Source CCTV software written in Node with both IP and local camera support. &lt;code&gt;AGPL-3.0/GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/streamaserver/streama&quot;&gt;Streama&lt;/a&gt; - Self hosted streaming media server. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RblSb/SyncTube&quot;&gt;SyncTube&lt;/a&gt; - Lightweight and very simple to setup CyTube alternative to watch videos with friends and chat. (&lt;a href=&quot;https://synctube-example.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Haxe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://prologic.github.io/tube&quot;&gt;Tube&lt;/a&gt; - a Youtube-like (&lt;em&gt;without censorship and features you don&#39;t need!&lt;/em&gt;) Video Sharing App written in Go which also supports automatic transcoding to MP4 H.265 AAC, multiple collections and RSS feed. (&lt;a href=&quot;https://tube.mills.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://git.mills.io/prologic/tube&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.videolan.org/&quot;&gt;VideoLAN Client (VLC)&lt;/a&gt; - Cross-platform multimedia player client and server supporting most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols. (&lt;a href=&quot;https://github.com/videolan/vlc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zoneminder.com/&quot;&gt;Zoneminder&lt;/a&gt; - Closed-circuit television (CCTV) software application which supports IP, USB and Analog cameras. (&lt;a href=&quot;https://github.com/ZoneMinder/ZoneMinder&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bubka/2FAuth&quot;&gt;2FAuth&lt;/a&gt; - A web app to manage your Two-Factor Authentication (2FA) accounts and generate their security codes. (&lt;a href=&quot;https://demo.2fauth.app/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/etsy/411&quot;&gt;411&lt;/a&gt; - Alert Management Web Application. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ardakilic/alerthub&quot;&gt;AlertHub&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - AlertHub is a simple tool to get alerted from GitHub releases. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://anchr.io&quot;&gt;Anchr&lt;/a&gt; - Anchr is a toolbox for tiny tasks on the internet, including bookmark collections, URL shortening and (encrypted) image uploads. (&lt;a href=&quot;https://github.com/muety/anchr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.anuko.com/time_tracker/index.htm&quot;&gt;Anuko&lt;/a&gt; - Anuko provides simple time and project tracking on a selfhosted basis. (&lt;a href=&quot;https://timetracker.anuko.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/anuko/timetracker&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Other&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://asciiflow.com/&quot;&gt;asciiflow&lt;/a&gt; - Flow Diagram Drawing Tool. (&lt;a href=&quot;https://github.com/lewish/asciiflow&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cachethq.io/&quot;&gt;Cachet&lt;/a&gt; - An open source status page system for everyone. (&lt;a href=&quot;https://demo.cachethq.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/CachetHQ/Cachet&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://caprover.com/&quot;&gt;CapRover&lt;/a&gt; - Build your own PaaS in a few minutes. (&lt;a href=&quot;https://captain.server.demo.caprover.com/#/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/caprover/caprover&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dgtlmoon/changedetection.io&quot;&gt;changedetection.io&lt;/a&gt; - Self-hosted tool for staying up-to-date with web-site content changes. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cstate/cstate/&quot;&gt;cState&lt;/a&gt; - Static status page for hyperfast Hugo. Clean design, minimal JS, super light HTML/CSS, high customization, optional admin panel, read-only API, IE8+. Best used with Netlify, Docker. (&lt;a href=&quot;https://cstate.mnts.lt/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cups.org/&quot;&gt;CUPS&lt;/a&gt; - The Common Unix Print System uses Internet Printing Protocol (IPP) to support printing to local and network printers. (&lt;a href=&quot;https://github.com/apple/cups&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gchq/CyberChef&quot;&gt;CyberChef&lt;/a&gt; - Perform all manner of operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. (&lt;a href=&quot;https://gchq.github.io/CyberChef&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PhiTux/DailyTxT&quot;&gt;DailyTxT&lt;/a&gt; - Encrypted Diary Web-App to save your personal memories of each day. Includes a search-function and encrypted file-upload. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://databunker.org/&quot;&gt;Databunker&lt;/a&gt; - Network-based, self-hosted, GDPR compliant, secure database for personal data or PII. (&lt;a href=&quot;https://github.com/securitybunker/databunker&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Icesofty/Digital-Currency&quot;&gt;Digital-Currency&lt;/a&gt; - Create your own Self-Hosted Digital Currency. (&lt;a href=&quot;https://tonken.glitch.me/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://domainmod.org&quot;&gt;DomainMOD&lt;/a&gt; - Application to manage your domains and other internet assets in a central location. DomainMOD includes a Data Warehouse framework that allows you to import your WHM/cPanel web server data so that you can view, export, and report on your data. (&lt;a href=&quot;https://demo.domainmod.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/domainmod/domainmod&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devfake/flox&quot;&gt;Flox&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Self hosted movie, TV series and anime watch list with a 3-point rating system. Uses The Movie Database backend for information. (&lt;a href=&quot;https://flox-demo.pyxl.dev/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://formspree.io/&quot;&gt;formspree&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Just send your form to our URL and we&#39;ll forward it to your email. No PHP, Javascript or sign up required. (&lt;a href=&quot;https://test.formspree.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/formspree/formspree&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/majodev/google-webfonts-helper&quot;&gt;google-webfonts-helper&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Hassle-Free Way to Self-Host Google Fonts. Get eot, ttf, svg, woff and woff2 files + CSS snippets. (&lt;a href=&quot;https://google-webfonts-helper.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/verifid/graph-vl&quot;&gt;graph-vl&lt;/a&gt; - Identity document verification using Machine Learning and GraphQL. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inoda/journal&quot;&gt;Journal&lt;/a&gt; - Simple journaling with encrypted entries and sharing capabilities. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kimai.org/&quot;&gt;Kimai&lt;/a&gt; - Kimai is a free &amp;amp; open source timetracker. It tracks work time and prints out a summary of your activities on demand. (&lt;a href=&quot;https://www.kimai.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kevinpapst/kimai2/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rsmusllp/king-phisher&quot;&gt;King Phisher&lt;/a&gt; - King Phisher is a tool for testing and promoting user awareness by simulating real world phishing attacks. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lancache.net&quot;&gt;Lancache&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - LAN Party game caching made easy. (&lt;a href=&quot;https://github.com/lancachenet/monolithic&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeberg.org/jlelse/MailyGo&quot;&gt;MailyGo&lt;/a&gt; - MailyGo is a small tool written in Go that allows to send HTML forms, for example from static websites without a dynamic backend, via email. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mindsdb/mindsdb&quot;&gt;MindsDB&lt;/a&gt; - MindsDB is an open source self hosted AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.missionkontrol.io&quot;&gt;MissionKontrol&lt;/a&gt; - Configurable admin panel allowing non-technical users to CRUD data on MySQL/PostGRES databases. (&lt;a href=&quot;https://github.com/Mission-Kontrol/MissionKontrol-rails&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monicahq.com/&quot;&gt;Monica&lt;/a&gt; - Personal relationship manager, and a new kind of CRM to organize interactions with your friends and family. (&lt;a href=&quot;https://github.com/monicahq/monica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://musical-artifacts.com/&quot;&gt;Musical Artifacts&lt;/a&gt; - Helping to catalog, preserve and free the artifacts you need to produce music. (&lt;a href=&quot;https://github.com/lfzawacki/musical-artifacts&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mechazawa/nnmm&quot;&gt;nnmm&lt;/a&gt; - Super tiny pastebin/url minifier &lt;em&gt;microservice&lt;/em&gt;. &lt;code&gt;Beerware&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://notica.us&quot;&gt;Notica&lt;/a&gt; - Lets you send browser notifications from your terminal to your desktop or phone. No installation or registration is required. (&lt;a href=&quot;https://github.com/tannercollin/Notica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ombi.io/&quot;&gt;Ombi&lt;/a&gt; - A content request system for Plex/Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. (&lt;a href=&quot;https://app.ombi.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Ombi-app/Ombi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.orchest.io/&quot;&gt;Orchest&lt;/a&gt; - A new kind of IDE for Data Science. (&lt;a href=&quot;https://cloud.orchest.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/orchest/orchest&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oTranscribe/oTranscribe&quot;&gt;oTranscribe&lt;/a&gt; - Free web app to take the pain out of transcribing recorded interviews. (&lt;a href=&quot;https://otranscribe.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apacketofsweets.github.io/PassCheck/&quot;&gt;PassCheck&lt;/a&gt; - A web application featuring some handy password tools, including a password generator, strength checker and HaveIBeenPwned breach checker. (&lt;a href=&quot;https://github.com/apacketofsweets/PassCheck&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rxresu.me/&quot;&gt;Reactive Resume&lt;/a&gt; - A one-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. (&lt;a href=&quot;https://rxresu.me/app/dashboard/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/AmruthPillai/Reactive-Resume&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://releasebell.com/&quot;&gt;ReleaseBell&lt;/a&gt; - Send release notifications for starred Github repos. (&lt;a href=&quot;https://git.cloudron.io/cloudron/releasebell&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revealjs.com&quot;&gt;revealjs&lt;/a&gt; - Framework for easily creating beautiful presentations using HTML. (&lt;a href=&quot;https://revealjs.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/hakimel/reveal.js&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.revive-adserver.com/&quot;&gt;Revive Adserver&lt;/a&gt; - World&#39;s most popular free, open source ad serving system. Formerly known as OpenX Adserver and phpAdsNew. (&lt;a href=&quot;https://github.com/revive-adserver/revive-adserver&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0-or-later&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/scolastico-dev/s.Status&quot;&gt;s.Status&lt;/a&gt; - s.Status is a open source server status page written in java. (&lt;a href=&quot;https://status.scolasti.co/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sane-project.org/&quot;&gt;SANE Network Scanning&lt;/a&gt; - Allow remote clients to access image acquisition devices (scanners) available on the local host. (&lt;a href=&quot;http://www.sane-project.org/cvs.html&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adriankumpf/teslamate&quot;&gt;TeslaMate&lt;/a&gt; - A powerful data logger for Tesla vehicles. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mtricht/trello-burndown&quot;&gt;Trello Burndown&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Easy to use SCRUM burndown chart for Trello boards. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vimbadmin.net/&quot;&gt;ViMbAdmin&lt;/a&gt; - Provides a web based virtual mailbox administration system to allow mail administrators to easily manage domains, mailboxes and aliases. (&lt;a href=&quot;https://www.vimbadmin.net/demo/auth/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/opensolutions/ViMbAdmin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Finesse/web-fonts-repository&quot;&gt;Web fonts repository&lt;/a&gt; - Simple webfont hosting. Google Fonts alternative for your own fonts. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Algram/ytdl-webserver&quot;&gt;ytdl-webserver&lt;/a&gt; - Docker-ready webserver for downloading youtube videos. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Money, Budgeting &amp;amp; Management&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also: &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#it-asset-management&quot;&gt;awesome-sysadmin/IT Asset Management&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://akaunting.com/&quot;&gt;Akaunting&lt;/a&gt; - Akaunting is a free, online and open source accounting software designed for small businesses and freelancers. (&lt;a href=&quot;https://github.com/akaunting/akaunting&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/manuel-uberti/boodle&quot;&gt;Boodle&lt;/a&gt; - Simple accounting single-page application in Clojure and ClojureScript. &lt;code&gt;EPL-1.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://btcpayserver.org/&quot;&gt;BTCPay Server&lt;/a&gt; - A self-hosted Bitcoin and other cryptocurrencies payment processor. (&lt;a href=&quot;https://mainnet.demo.btcpayserver.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/btcpayserver/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paukiatwee/budgetapp&quot;&gt;Budget App&lt;/a&gt; - Budget App is an open source personal budgeting application. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/budgetzero/budgetzero&quot;&gt;budgetzero&lt;/a&gt; - Free, self-hosted, open-source, envelope-budgeting web and desktop app. (&lt;a href=&quot;https://app.budgetzero.io/budget&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bytefury/crater&quot;&gt;Crater&lt;/a&gt; - Free &amp;amp; Open Source Invoice App for Freelancers &amp;amp; Small Businesses. (&lt;a href=&quot;https://demo.craterapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AAL&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dotledger.com/&quot;&gt;Dot Ledger&lt;/a&gt; - Web-based personal finance management tool. (&lt;a href=&quot;https://demo.dotledger.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotledger/dotledger&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/karser/EasyQuickImport&quot;&gt;EasyQuickImport&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - A tool that helps you import transactions, invoices and bills into QuickBooks Desktop from Excel or CSV. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.economizzer.org/&quot;&gt;Economizzer&lt;/a&gt; - An easy and secure system for you to manage your personal money and achieve your goals, and can be accessed by computer, tablet or smartphone. (&lt;a href=&quot;https://github.com/gugoan/economizzer#live-demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gugoan/economizzer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gaynetdinov/ex_money&quot;&gt;ExMoney&lt;/a&gt; - Self-hosted personal finance app. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nymanjens/facto&quot;&gt;Family Accounting Tool&lt;/a&gt; - Web-based finance management tool for partners with partially shared expenses. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beancount.github.io/fava/&quot;&gt;Fava&lt;/a&gt; - Fava is the web frontend of Beancount, a text based double-entry accounting system. (&lt;a href=&quot;https://fava.pythonanywhere.com/example-with-budgets/income_statement/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/beancount/fava&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firefly-iii.org/&quot;&gt;Firefly III&lt;/a&gt; - Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. (&lt;a href=&quot;https://demo.firefly-iii.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/firefly-iii/firefly-iii&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://galette.eu/dc/&quot;&gt;Galette&lt;/a&gt; - Galette is a membership management web application towards non profit organizations. (&lt;a href=&quot;https://git.tuxfamily.org/galette/galette.git/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grr.devome.com/?lang=en&quot;&gt;GRR&lt;/a&gt; - Assets management and booking for small/medium companies. (&lt;a href=&quot;https://github.com/JeromeDevome/GRR&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hospitalrun.io/&quot;&gt;Hospital Run&lt;/a&gt; - Hospital Run is offline enabled hospital management software. (&lt;a href=&quot;https://hospitalrun.io/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/HospitalRun/hospitalrun-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hub20.io/&quot;&gt;Hub20&lt;/a&gt; - A self-hosted payment processor for Ethereum and ERC20 Tokens. (&lt;a href=&quot;https://gitlab.com/mushroomlabs/hub20/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ihatemoney.org/&quot;&gt;IHateMoney&lt;/a&gt; - Manage your shared expenses, easily. (&lt;a href=&quot;https://ihatemoney.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/spiral-project/ihatemoney&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Docker/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bminusl/ihatetobudget&quot;&gt;IHateToBudget&lt;/a&gt; - A simple web app to understand and control your expenses. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inventaire.io/welcome&quot;&gt;Inventaire&lt;/a&gt; - Collaborative resources mapper project, while yet only focused on exploring books mapping with wikidata and ISBNs. (&lt;a href=&quot;https://github.com/inventaire/inventaire&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inventree.readthedocs.io/en/latest/&quot;&gt;Inventree&lt;/a&gt; - InvenTree is an open-source inventory management system which provides intuitive parts management and stock control. (&lt;a href=&quot;https://github.com/inventree/InvenTree&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.invoiceninja.org/&quot;&gt;Invoice Ninja&lt;/a&gt; - Powerful tool to invoice clients online. (&lt;a href=&quot;https://app.invoiceninja.com/invoices/create&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/invoiceninja/invoiceninja&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AAL&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/InvoicePlane/InvoicePlane&quot;&gt;InvoicePlane&lt;/a&gt; - Manage quotes, invoices, payments and customers for your small business. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kresus.org/&quot;&gt;Kresus&lt;/a&gt; - Open source personal finance manager. (&lt;a href=&quot;https://kresus.org/en/demo.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kresusapp/kresus&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inoda/ontrack&quot;&gt;OnTrack&lt;/a&gt; - A simple app to track spend and set goals. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby/React&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.partkeepr.org&quot;&gt;PartKeepr&lt;/a&gt; - PartKeepr is an electronic part inventory management software. It helps you to keep track of your available parts and assist you with re-ordering parts. (&lt;a href=&quot;https://demo.partkeepr.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/partkeepr/PartKeepr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rei3.de/home_en/&quot;&gt;REI3&lt;/a&gt; - Open source, expandable Business Management Software. Manage tasks, time, assets and much more. (&lt;a href=&quot;https://rei3.de/demo_en/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/r3-team/r3&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://silverstrike.org/&quot;&gt;SilverStrike&lt;/a&gt; - Personal finance management made easy. (&lt;a href=&quot;https://demo.silverstrike.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/agstrike/silverstrike&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.sigpipe.me/dashie/StockazNG&quot;&gt;StockazNG&lt;/a&gt; - Asset Management System. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bertvandepoel/tabby&quot;&gt;Tabby&lt;/a&gt; - A tool to manage shared expenses across friends, such as restaurant costs or food delivery, without requiring everyone to create an account. Includes email reminders and tracks who has (re)paid what. &lt;code&gt;AGPL-3.0-only&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monitoring&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#monitoring&quot;&gt;awesome-sysadmin/Monitoring&lt;/a&gt;, &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#metric--metric-collection&quot;&gt;awesome-sysadmin/Metric and Metric Collection&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Note-taking &amp;amp; Editors&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#wikis&quot;&gt;Wikis&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bulletnotes.io/&quot;&gt;BulletNotes&lt;/a&gt; - Workflowy / Dynalist clone with Kanban (Trello) and Calendar functionality. Organize everything. (&lt;a href=&quot;https://gitlab.com/NickBusey/BulletNotes&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m0ngr31/DailyNotes/&quot;&gt;DailyNotes&lt;/a&gt; - App for taking notes and tracking tasks on a daily basis in Markdown. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dillinger.io/&quot;&gt;dillinger&lt;/a&gt; - The last Markdown editor, ever. (&lt;a href=&quot;https://github.com/joemccann/dillinger&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getdnote.com&quot;&gt;Dnote&lt;/a&gt; - A simple command line notebook with multi-device sync and web interface. (&lt;a href=&quot;https://github.com/dnote/dnote&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docpht.org/&quot;&gt;DocPHT&lt;/a&gt; - With DocPHT you can take notes and quickly document anything and without the use of any database. (&lt;a href=&quot;https://demo.docpht.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/docpht/docpht&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draw.io&quot;&gt;draw.io&lt;/a&gt; - Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. (&lt;a href=&quot;https://github.com/jgraph/drawio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://demo.hedgedoc.org/&quot;&gt;HedgeDoc&lt;/a&gt; - Realtime collaborative markdown notes on all platforms, formerly known as CodiMD and HackMD CE. (&lt;a href=&quot;https://github.com/hedgedoc/hedgedoc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;TypeScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joplinapp.org/&quot;&gt;Joplin&lt;/a&gt; - Joplin is a note taking application with Markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through self hosted Nextcloud or similar. Consider it like open source alternative to Evernote. (&lt;a href=&quot;https://github.com/laurent22/joplin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://leanote.org/&quot;&gt;Leanote&lt;/a&gt; - Leanote, Not Just A Notepad! Open source cloud notepad. (&lt;a href=&quot;https://leanote.com/note&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/leanote/leanote&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/georgeOsdDev/markdown-edit/&quot;&gt;Markdown Edit&lt;/a&gt; - Online markdown editor/viewer. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meemo.minimal-space.de/&quot;&gt;Meemo&lt;/a&gt; - Personal notes stream with Markdown support. (&lt;a href=&quot;https://github.com/nebulade/meemo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pereorga/minimalist-web-notepad&quot;&gt;minimalist-web-notepad&lt;/a&gt; - Minimalist notepad.cc clone. (&lt;a href=&quot;https://notes.orga.cat/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muety/mininote&quot;&gt;MiniNote&lt;/a&gt; - Simple Markdown note-taking app with persistence. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cinwell.com/notea/&quot;&gt;Notea&lt;/a&gt; - Self-hosted note-taking app stored on S3-compatible storage. (&lt;a href=&quot;https://github.com/QingWei-Li/notea&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/larspontoppidan/notesntodos&quot;&gt;Notes&#39;n&#39;Todos&lt;/a&gt; - Write notes and todos online in markdown with tag filtering and date sorting. (&lt;a href=&quot;https://lpss.dk/nnt-playground/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oddmuse.org/&quot;&gt;Oddmuse&lt;/a&gt; - A simple wiki engine written in Perl. No database required. (&lt;a href=&quot;https://github.com/kensanata/oddmuse&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FoxUSA/OpenNote&quot;&gt;OpenNote&lt;/a&gt; - OpenNote was built to be an open web-based alternative to Microsoft OneNote (T) and EverNote. (&lt;a href=&quot;https://foxusa.github.io/OpenNote/OpenNote/#/folder&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.overleaf.com/&quot;&gt;Overleaf&lt;/a&gt; - Web-based collaborative LaTeX editor. (&lt;a href=&quot;https://github.com/overleaf/overleaf&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paperwork.cloud&quot;&gt;Paperwork&lt;/a&gt; - OpenSource note-taking and archiving alternative to Evernote, Microsoft OneNote and Google Keep. (&lt;a href=&quot;https://github.com/paperwork/paperwork&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alextselegidis.com/get/plainpad/&quot;&gt;Plainpad&lt;/a&gt; - A modern note taking application for the cloud, utilizing the best features of progressive web apps technology. (&lt;a href=&quot;https://alextselegidis.com/try/plainpad/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/alextselegidis/plainpad&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shelltr/textpad&quot;&gt;savepad&lt;/a&gt; - Minimalist notepad based on notepad.cc. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardnotes.com&quot;&gt;Standard Notes&lt;/a&gt; - Simple and private notes app. Protect your privacy while getting more done. That&#39;s Standard Notes. (&lt;a href=&quot;https://app.standardnotes.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/standardnotes&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zadam/trilium&quot;&gt;Trilium Notes&lt;/a&gt; - Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixmark-io.github.io/turndown/&quot;&gt;turndown&lt;/a&gt; - HTML to Markdown converter written in Javascript. (&lt;a href=&quot;https://github.com/mixmark-io/turndown&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://turtl.it/&quot;&gt;Turtl&lt;/a&gt; - Totally private personal database and note taking app. (&lt;a href=&quot;https://github.com/turtl&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;CommonLisp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wreeto.com&quot;&gt;Wreeto&lt;/a&gt; - Wreeto is an open source note-taking, knowledge management and wiki system built on top of Ruby on Rails framework. (&lt;a href=&quot;https://github.com/chrisvel/wreeto_official&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://josephernest.github.io/writing/&quot;&gt;Writing&lt;/a&gt; - Lightweight distraction-free text editor, in the browser (Markdown and LaTeX supported). No lag when writing. (&lt;a href=&quot;https://github.com/josephernest/writing&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Office Suites&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collaboraoffice.com/code&quot;&gt;Collabora Online Development Edition&lt;/a&gt; - Collabora Online Development Edition (CODE) is a powerful LibreOffice-based online office that supports all major document, spreadsheet and presentation file formats, which you can integrate in your own infrastructure. (&lt;a href=&quot;https://cgit.freedesktop.org/libreoffice/online/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cryptpad.fr/&quot;&gt;CryptPad&lt;/a&gt; - CryptPad is the zero knowledge realtime collaborative editor (rich-text, files, source-code, ...). (&lt;a href=&quot;https://github.com/xwiki-labs/cryptpad&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ethercalc.net/&quot;&gt;EtherCalc&lt;/a&gt; - Web spreadsheet. (&lt;a href=&quot;https://github.com/audreyt/ethercalc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CPAL-1.0/Other&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://etherpad.org/&quot;&gt;Etherpad&lt;/a&gt; - Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time. (&lt;a href=&quot;https://demo.sandstorm.io/appdemo/h37dm17aa89yrd8zuqpdn36p6zntumtv08fjpu8a8zrte7q1cn60&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ether/etherpad-lite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gobby/gobby/wiki/Dedicated%20Server&quot;&gt;Infinoted&lt;/a&gt; - Server for &lt;a href=&quot;https://github.com/gobby/gobby/wiki&quot;&gt;Gobby&lt;/a&gt;, a multi-platform collaborative text editor. (&lt;a href=&quot;https://github.com/gobby/gobby&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helpcenter.onlyoffice.com/faq/server-opensource.aspx&quot;&gt;ONLYOFFICE&lt;/a&gt; - Office suite that enables you to manage documents, projects, team and customer relations in one place. (&lt;a href=&quot;https://github.com/ONLYOFFICE/DocumentServer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PHPOffice&quot;&gt;PHPOffice&lt;/a&gt; - PHPOffice contains libraries which permits to write and read files from most office suites. &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rustpad.io/&quot;&gt;Rustpad&lt;/a&gt; - Efficient and minimal collaborative code editor, self-hosted, no database required. (&lt;a href=&quot;https://github.com/ekzhang/rustpad&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webodf.org/&quot;&gt;WebODF&lt;/a&gt; - Tools and libraries to view and edit Open Document Format (ODF) files. (&lt;a href=&quot;https://github.com/webodf/WebODF&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Password Managers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitwarden.com/&quot;&gt;Bitwarden&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Password manager with webapp, browser extension, and mobile app. (&lt;a href=&quot;https://github.com/bitwarden/server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keeweb.info/&quot;&gt;keeweb&lt;/a&gt; - This webapp is a browser and desktop password manager compatible with KeePass databases. (&lt;a href=&quot;https://github.com/keeweb/keeweb&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://padloc.app/&quot;&gt;Padloc&lt;/a&gt; - A modern, open source password manager for individuals and teams. (&lt;a href=&quot;https://github.com/padloc/padloc&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.passbolt.com/&quot;&gt;Passbolt&lt;/a&gt; - Password manager dedicated for managing passwords in a collaborative way on any Web server, using a MySQL database backend. (&lt;a href=&quot;https://github.com/passbolt/passbolt_api&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passit.io/&quot;&gt;PassIt&lt;/a&gt; - Simple password manage with sharing features by group and user, but no administration interface. (&lt;a href=&quot;https://app.passit.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/passit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passky.org&quot;&gt;Passky&lt;/a&gt; - Simple, modern and open source password manager with website, browser extension, android and desktop application. (&lt;a href=&quot;https://vault.passky.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Rabbit-Company/Passky-Server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/passwall/passwall-server&quot;&gt;PassWall&lt;/a&gt; - Open source password manager. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psono.com/&quot;&gt;Psono&lt;/a&gt; - A promising password managers fully featured for teams. (&lt;a href=&quot;https://www.psono.pw&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/psono&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MarceauKa/shaark&quot;&gt;Shaark&lt;/a&gt; - All in one platform for your links, stories, passwords and albums. Built with Laravel and Vue.js. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.syspass.org/&quot;&gt;sysPass&lt;/a&gt; - Multiuser password management system. (&lt;a href=&quot;https://demo.syspass.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nuxsmin/sysPass&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://teampass.net/&quot;&gt;Teampass&lt;/a&gt; - Password manager dedicated for managing passwords in a collaborative way. One symmetric key is used to encrypt all shared/team passwords and stored server side in a file and the database. works on any server Apache, MySQL and PHP. (&lt;a href=&quot;https://github.com/nilsteampassnet/TeamPass&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MatrixEternal/vaults&quot;&gt;vaults&lt;/a&gt; - Password manager featuring client side AES-256 encryption, PBKDF2 hashing, vaults, password generation &amp;amp; more. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dani-garcia/vaultwarden&quot;&gt;Vaultwarden&lt;/a&gt; - Lightweight Bitwarden server API implementation written in Rust. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Pastebins&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tygs/0bin&quot;&gt;0bin&lt;/a&gt; - Client side encrypted pastebin. (&lt;a href=&quot;https://0bin.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bepasty-server.readthedocs.io/en/latest/&quot;&gt;bepasty&lt;/a&gt; - A pastebin for all kinds of files. (&lt;a href=&quot;https://github.com/bepasty/bepasty-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/w4/bin&quot;&gt;bin&lt;/a&gt; - a paste bin. &lt;code&gt;WTFPL/0BSD&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cryptonote.me/&quot;&gt;cryptonote&lt;/a&gt; - Simple open source web application that lets users encrypt and share messages that can only be read once. (&lt;a href=&quot;https://github.com/alainmeier/cryptonote&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dogbin/dogbin&quot;&gt;dogbin&lt;/a&gt; - The sexiest pastebin and URL shortener ever. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Kotlin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dpaste.org/&quot;&gt;dpaste&lt;/a&gt; - simple pastebin with multiple text and code option, with short url result easy to remember. (&lt;a href=&quot;https://github.com/bartTC/dpaste&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahlys/EdPaste&quot;&gt;EdPaste&lt;/a&gt; - Self-hosted pastebin written in Laravel (PHP Framework). &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m1dnight/exbin&quot;&gt;ExBin&lt;/a&gt; - A pastebin with public/private snippets and netcat server. (&lt;a href=&quot;https://exbin.call-cc.be&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/solusipse/fiche&quot;&gt;fiche&lt;/a&gt; - Command line pastebin, all you need is netcat. (&lt;a href=&quot;https://termbin.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raftario/filite&quot;&gt;filite&lt;/a&gt; - A simple, light and standalone pastebin, URL shortener and file-sharing service. (&lt;a href=&quot;https://filite.raphaeltheriault.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndrewPaglusch/FlashPaper&quot;&gt;FlashPaper&lt;/a&gt; - A one-time encrypted zero-knowledge password/secret sharing application focused on simplicity and security. No database or complicated set-up required. (&lt;a href=&quot;https://flashpaper.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fugacio.us&quot;&gt;Fugacious&lt;/a&gt; - Open source short-term secure messaging (OSSSM). (&lt;a href=&quot;https://github.com/fugacious/fugacious&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://haste.zneix.eu/about.md&quot;&gt;Hastebin&lt;/a&gt; - Open source pastebin. (This is a fork with extended maintenance). (&lt;a href=&quot;https://haste.zneix.eu&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/zneix/haste-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mtlynch/logpaste&quot;&gt;LogPaste&lt;/a&gt; - Minimal pastebin web app that&#39;s easy to self-host and persists data to any S3-compatible backend. (&lt;a href=&quot;https://logpaste.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mkaczanowski/pastebin&quot;&gt;mkaczanowski pastebin&lt;/a&gt; - Simple, fast, feature-rich, standalone pastebin service. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://metacpan.org/dist/App-mojopaste&quot;&gt;mojopaste&lt;/a&gt; - Perl based pastebin. (&lt;a href=&quot;https://p.thorsen.pm/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jhthorsen/app-mojopaste&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Artistic-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nexus-uw/mokintoken&quot;&gt;MokinToken&lt;/a&gt; - Clientside encrypted pastebin using tweetnacl. &lt;code&gt;Unlicense&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chmllr/NoteHub&quot;&gt;NoteHub&lt;/a&gt; - Free and Hassle-free Pastebin for Markdown Pages. Simple, clean, password provided, generated-short link. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://phpaste.sourceforge.io/&quot;&gt;Paste&lt;/a&gt; - Paste is forked from the original source pastebin.com used before it was bought. (&lt;a href=&quot;https://github.com/jordansamuel/PASTE&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lus/pasty&quot;&gt;pasty&lt;/a&gt; - Pasty is a fast and lightweight code pasting server. (&lt;a href=&quot;https://pasty.lus.pm/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ptpb/pb&quot;&gt;pb&lt;/a&gt; - Lightweight pastebin (and url shortener) built using flask. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://privatebin.info/&quot;&gt;PrivateBin&lt;/a&gt; - PrivateBin is a minimalist, opensource online pastebin/discussion board where the server has zero knowledge of hosted data. (&lt;a href=&quot;https://privatebin.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/PrivateBin/PrivateBin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Zlib&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.mills.io/prologic/pastebin&quot;&gt;prologic pastebin&lt;/a&gt; - Simple pastebin service with convenient api and CLI. (&lt;a href=&quot;https://paste.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PurritoBin/PurritoBin&quot;&gt;PurritoBin&lt;/a&gt; - Ultra fast, minimalistic, encrypted command line paste-bin, where the server has no knowledge of the paste data. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orhun/rustypaste&quot;&gt;rustypaste&lt;/a&gt; - A minimal file upload/pastebin service. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phonicmouse/SharpPaste&quot;&gt;SharpPaste&lt;/a&gt; - Cross-platform C# pastebin with client-side AES-256 encryption that just works. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#/NancyFX&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snibox.github.io/&quot;&gt;Snibox&lt;/a&gt; - Code snippets manager with attractive tag-oriented interface. (&lt;a href=&quot;https://snibox-demo.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/snibox/snibox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pawelmalak/snippet-box&quot;&gt;Snippet Box&lt;/a&gt; - Snippet Box is a simple self-hosted app for organizing your code snippets. It allows you to easily create, edit, browse and manage your snippets in various languages. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicksergeant/snipt&quot;&gt;snipt&lt;/a&gt; - Long-term memory for coders. Share and store code snippets. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/magnumdingusedu/socksbin&quot;&gt;SocksBin&lt;/a&gt; - Simple and fast terminal based pastebin, with optional code highlighting. No specific client required, all you need is netcat. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.spaceb.in&quot;&gt;Spacebin&lt;/a&gt; - Text-sharing for the final frontier ‚Äî Reliable Pastebin server in Golang and Fiber. (&lt;a href=&quot;https://spaceb.in&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/spacebin-org/spirit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/claudehohl/Stikked&quot;&gt;Stikked&lt;/a&gt; - Advanced and beautiful pastebin. (&lt;a href=&quot;https://paste.scratchbook.ch/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/algolia/sup3rS3cretMes5age&quot;&gt;Sup3rS3cretMes5age&lt;/a&gt; - Very simple (to deploy and to use) secret message service using Hashicorp Vault as a secrets storage. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pastefy.ga&quot;&gt;Pastefy&lt;/a&gt; - Beautiful, simple and easy to deploy Pastebin with optional Client-Encryption, Multitab-Pastes, an API, a highlighted Editor and more. (&lt;a href=&quot;https://github.com/interaapps/pastefy&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://github.com/topics/pastefy-addon&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Personal Dashboards&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#monitoring&quot;&gt;Monitoring&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/babybuddy/babybuddy&quot;&gt;Baby Buddy&lt;/a&gt; - Helps caregivers track baby sleep, feedings, diaper changes, and tummy time. (&lt;a href=&quot;https://babybuddy.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phntxx/dashboard&quot;&gt;Dashboard&lt;/a&gt; - Minimalist homepage for organizing your web applications and bookmarks using JSON-files. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rmountjoy92/DashMachine&quot;&gt;DashMachine&lt;/a&gt; - Another web application bookmark dashboard, with fun features. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lissy93/dashy&quot;&gt;Dashy&lt;/a&gt; - Feature-rich homepage for your homelab, with easy YAML configuration. (&lt;a href=&quot;https://demo.dashy.to/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pawelmalak/flame&quot;&gt;Flame&lt;/a&gt; - Flame is self-hosted startpage for your server. Easily manage your apps and bookmarks with built-in editors. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://habitica.com/&quot;&gt;Habitica&lt;/a&gt; - Habit tracker app which treats your goals like a Role Playing Game. Previously called HabitRPG. (&lt;a href=&quot;https://github.com/HabitRPG/habitica&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0/CC-BY-NC-SA-3.0/CC-BY-SA-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heimdall.site/&quot;&gt;Heimdall&lt;/a&gt; - Heimdall is an elegant solution to organise all your web applications. (&lt;a href=&quot;https://github.com/linuxserver/Heimdall&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://designedbyashw.in/test/hiccup/&quot;&gt;Hiccup&lt;/a&gt; - A beautiful static homepage to get to your links and services quickly. It has built-in search, editing, PWA support and localstorage caching to easily organize your start page. (&lt;a href=&quot;https://github.com/ashwin-pc/hiccup&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomershvueli/homepage&quot;&gt;Homepage&lt;/a&gt; - Simple, standalone, self-hosted PHP page that is your window to your server and the web. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bastienwirtz/homer&quot;&gt;Homer&lt;/a&gt; - A dead simple static homepage to expose your server services, with an easy yaml configuration and connectivity check. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;HTML5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://links.zrd.sh&quot;&gt;LinkPage&lt;/a&gt; - LinkPage is a FOSS self-hosted alternative to link listing websites such as LinkTree and Campsite.bio. (&lt;a href=&quot;https://github.com/rhnvrm/linkpage&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jmztaylor/homelab_proxy&quot;&gt;Jmz HomeProxy&lt;/a&gt; - A simple and clean dashboard for self hosted services. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/causefx/Organizr&quot;&gt;Organizr&lt;/a&gt; - Organizr aims to be your one stop shop for your Servers Frontend. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Volmarg/personal-management-system&quot;&gt;Personal management system&lt;/a&gt; - Central point for managing personal data (billings, payments, job holidays, notes etc.). (&lt;a href=&quot;http://personal-management-system.pl/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kutyla-philipp/simple-dash&quot;&gt;simple-dash&lt;/a&gt; - A simple, fully responsive Dashboard to forward to the services of your choice. (&lt;a href=&quot;https://kutyla-philipp.github.io/simple-dash/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://smashing.github.io/&quot;&gt;Smashing&lt;/a&gt; - Smashing, the spiritual successor to Dashing, is a Sinatra based framework that lets you build excellent dashboards. It looks especially great on TVs. (&lt;a href=&quot;https://github.com/Smashing/smashing&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wger.de/&quot;&gt;wger&lt;/a&gt; - Web-based personal workout, fitness and weight logger/tracker. It can also be used as a simple gym management utility and offers a full REST API as well. (&lt;a href=&quot;https://wger.de/en/dashboard&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/wger-project/wger&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yooooomi/your_spotify&quot;&gt;Your Spotify&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Allows you to record your Spotify listening activity and have statistics about them served through a Web application. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Photo and Video Galleries&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chevereto.com/free&quot;&gt;Chevereto Free&lt;/a&gt; - Powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. (&lt;a href=&quot;https://github.com/Chevereto/Chevereto-Free&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coppermine-gallery.net/&quot;&gt;Coppermine&lt;/a&gt; - Multilingual photo gallery that integrates with various bulletin boards. Includes upload approval and password protected albums. (&lt;a href=&quot;https://coppermine-gallery.net/demo/cpg15x/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/coppermine-gallery/cpg1.6.x&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://damselfly.info&quot;&gt;Damselfly&lt;/a&gt; - Fast server-based photo management system for large collections of images. Includes face detection, face &amp;amp; object recognition, powerful search, and EXIF Keyword tagging. Runs on Linux, MacOS and Windows. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C#/.NET&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cbenning/fussel&quot;&gt;Fussel&lt;/a&gt; - Fussel is a static photo gallery generator. Easily generate a reactive gallery and host the optimized static folder of assets. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://benschwarz.github.io/gallery-css/&quot;&gt;Gallery CSS&lt;/a&gt; - Gallery.css is all CSS. Think: Simple, maintainable and understandable galleries without the use of Javascript. (&lt;a href=&quot;https://github.com/benschwarz/gallery-css&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;CSS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://home-gallery.org&quot;&gt;HomeGallery&lt;/a&gt; - Self-hosted open-source web gallery to browse personal photos and videos featuring tagging, mobile-friendly, and AI powered image discovery. (&lt;a href=&quot;https://demo.home-gallery.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/xemle/home-gallery&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gregordr/ImageStore&quot;&gt;ImageStore&lt;/a&gt; - Self-hosted Google Photos alternative, with a very similar UI. (&lt;a href=&quot;https://gregordr.github.io/ImageStore/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LibrePhotos/librephotos&quot;&gt;LibrePhotos&lt;/a&gt; - Self hosted wannabe Google Photos clone, with a slight focus on cool graphs. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lycheeorg.github.io/&quot;&gt;Lychee&lt;/a&gt; - Open source grid and album based photo-management-system. (&lt;a href=&quot;https://github.com/LycheeOrg/Lychee&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediagoblin.org&quot;&gt;Mediagoblin&lt;/a&gt; - Free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc. (&lt;a href=&quot;https://savannah.gnu.org/projects/mediagoblin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dmpop/mejiro&quot;&gt;Mejiro&lt;/a&gt; - An easy-to-use PHP web application for instant photo publishing. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trebonius0/Photato&quot;&gt;Photato&lt;/a&gt; - Self-hosted photo gallery, accessible through a responsive WebUI. Directly uses and indexes a specific folder in the filesystem. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/waschinski/photo-stream&quot;&gt;Photo Stream&lt;/a&gt; - Minimalist self-hosted photo stream. (&lt;a href=&quot;https://floremotion.de/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thibaud-rohmer/PhotoLight&quot;&gt;PhotoLight&lt;/a&gt; - The easiest photo gallery there is. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photonix.org/&quot;&gt;Photonix&lt;/a&gt; - A new web-based photo management application with object recognition, location awareness, color analysis and other ML algorithms. (&lt;a href=&quot;https://demo.photonix.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/photonixapp/photonix&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photoprism.org&quot;&gt;PhotoPrism&lt;/a&gt; - Personal photo management powered by Go and Google TensorFlow. Browse, organize, and share your personal photo collection, using the latest technologies to automatically tag and find pictures. (&lt;a href=&quot;https://github.com/photoprism/photoprism&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photoview.github.io/&quot;&gt;Photoview&lt;/a&gt; - A simple and user-friendly Photo Gallery for personal servers. It is made for photographers and aims to provide an easy and fast way to navigate directories, with thousands of high resolution photos. (&lt;a href=&quot;https://photos.qpqp.dk/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/photoview/photoview&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bpatrik.github.io/pigallery2/&quot;&gt;PiGallery 2&lt;/a&gt; - A directory-first photo gallery website, with a rich UI, optimised for running on low resource servers. (&lt;a href=&quot;https://github.com/bpatrik/pigallery2&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://piwigo.org/&quot;&gt;Piwigo&lt;/a&gt; - Photo gallery software for the web, built by an active community of users and developers. (&lt;a href=&quot;https://piwigo.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Piwigo/Piwigo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engagemedia.org/projects/plumi/&quot;&gt;Plumi&lt;/a&gt; - Create your own sophisticated video-sharing site. (&lt;a href=&quot;https://github.com/plumi/plumi.app&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quruimageserver.com/&quot;&gt;Quru Image Server&lt;/a&gt; - High performance dynamically resizing image server offering directory based access control cropping, rotation, color management and other tools. (&lt;a href=&quot;https://quruimageserver.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/quru/qis&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saimn/sigal&quot;&gt;sigal&lt;/a&gt; - Yet another simple static gallery generator. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ubergallery.net&quot;&gt;UberGallery&lt;/a&gt; - UberGallery is an easy to use, simple to manage, web photo gallery. UberGallery does not require a database and supports JPEG, GIF and PNG file types. Simply upload your images and UberGallery will automatically generate thumbnails and output HTML. (&lt;a href=&quot;https://github.com/UberGallery/UberGallery&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenphoto.org/&quot;&gt;Zenphoto&lt;/a&gt; - Open-source gallery and CMS project. (&lt;a href=&quot;https://github.com/zenphoto/zenphoto&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Polls and Events&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#booking-and-scheduling&quot;&gt;Booking and Scheduling&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://calagator.org/&quot;&gt;Calagator&lt;/a&gt; - Event aggregator. (&lt;a href=&quot;https://github.com/calagator/calagator&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clearflask.com&quot;&gt;ClearFlask&lt;/a&gt; - Community-feedback tool for managing incoming feedback and prioritizing a public roadmap. Alternative to Canny, UserVoice, Upvoty. (&lt;a href=&quot;https://product.clearflask.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/clearflask/clearflask&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AppMini/Clerk&quot;&gt;Clerk&lt;/a&gt; - Simple event logger to keep track of periodic events, habits, etc. as they occur. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jelhan/croodle&quot;&gt;Croodle&lt;/a&gt; - Croodle is an end-to-end encrypted web application to schedule a date or to do a poll on any topic. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://primelife.ercim.eu/results/opensource/63-dudle&quot;&gt;dudle&lt;/a&gt; - Online scheduling application. (&lt;a href=&quot;https://dudle.inf.tu-dresden.de/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kellerben/dudle&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drabkirn/feedka&quot;&gt;Feedka&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Open-source web application that can serve as a platform to get authentic, kindful, and constructive feedback from your friends, family, and co-workers. (&lt;a href=&quot;https://feedka.herokuapp.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getfider.com&quot;&gt;Fider&lt;/a&gt; - Open source alternative to UserVoice for customer feedback. (&lt;a href=&quot;https://demo.fider.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/getfider/fider&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://framadate.org/&quot;&gt;Framadate&lt;/a&gt; - Online service for planning an appointment or make a decision quickly and easily: Make a poll, Define dates or subjects to choose, Send the poll link to your friends or colleagues, Discuss and make a decision. (&lt;a href=&quot;https://framadate.org/aqg259dth55iuhwm&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://git.framasoft.org/framasoft/framadate&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;CECILL-B&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gancio.org/&quot;&gt;Gancio&lt;/a&gt; - A shared agenda for local communities. (&lt;a href=&quot;https://demo.gancio.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://framagit.org/les/gancio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hitobito.com/en&quot;&gt;hitobito&lt;/a&gt; - A web application to manage complex group hierarchies with members, events and a lot more. (&lt;a href=&quot;https://demo.hitobito.com/en/users/sign_in&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/hitobito/hitobito&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jdsoft.com/jd-esurvey.html&quot;&gt;JD Esurvey&lt;/a&gt; - Open source enterprise survey web application. (&lt;a href=&quot;https://github.com/JD-Software/JDeSurvey&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kyela.net/&quot;&gt;Ky√©l√†&lt;/a&gt; - Participation polls for group events. (&lt;a href=&quot;https://kyela.net/concert/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/abienvenu/Kyela&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.limesurvey.org&quot;&gt;LimeSurvey&lt;/a&gt; - Feature-rich Open Source web based polling software. Supports extensive survey logic. (&lt;a href=&quot;https://demo.limesurvey.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/LimeSurvey/LimeSurvey&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meetable.org&quot;&gt;Meetable&lt;/a&gt; - Event aggregator. (&lt;a href=&quot;https://events.indieweb.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/aaronpk/Meetable&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobilizon.org&quot;&gt;Mobilizon&lt;/a&gt; - A federated tool that helps you find, create and organise events and groups. (&lt;a href=&quot;https://demo.mobilizon.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://framagit.org/framasoft/mobilizon/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fossasia/open-event-server&quot;&gt;Open Event Server&lt;/a&gt; - Enables organizers to manage events from concerts to conferences and meet-ups. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phpback.org&quot;&gt;PHPBack&lt;/a&gt; - The open source feedback system. (&lt;a href=&quot;https://www.phpback.org/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ivandiazwm/phpback&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Proxy&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://imgproxy.net/&quot;&gt;imgproxy&lt;/a&gt; - Fast and secure standalone server for resizing and converting remote images. It works great when you need to resize multiple images on the fly without preparing a ton of cached resized images or re-doing it every time the design changes. (&lt;a href=&quot;https://github.com/imgproxy/imgproxy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inlets.dev/&quot;&gt;inlets&lt;/a&gt; - Expose your local endpoints to the Internet - with a Kubernetes integration, Docker image and CLI available. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.kryo.se/iodine/&quot;&gt;iodine&lt;/a&gt; - IPv4 over DNS tunnel solution, enabling you to start up a socks5 proxy listener. (&lt;a href=&quot;https://github.com/yarrick/iodine&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thekvs/microproxy&quot;&gt;microproxy&lt;/a&gt; - lightweight non-caching HTTP/HTTPS proxy server. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nginxproxymanager.com/&quot;&gt;Nginx Proxy Manager&lt;/a&gt; - Nginx Proxy Manager is an easy way to accomplish reverse proxying hosts with SSL termination. (&lt;a href=&quot;https://github.com/jc21/nginx-proxy-manager&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.php-proxy.com/&quot;&gt;PHP-Proxy&lt;/a&gt; - Web proxy script built specifically to be fast, easy to modify and to support video sites such as YouTube. (&lt;a href=&quot;https://unblockvideos.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Athlon1600/php-proxy-app&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pomerium.io&quot;&gt;Pomerium&lt;/a&gt; - An identity-aware reverse proxy, successor to now obsolete oauth_proxy. It inserts an OAuth step before proxying your request to the backend, so that you can safely expose your self-hosted websites to public Internet. (&lt;a href=&quot;https://github.com/pomerium/pomerium&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.apsis.ch/pound.html&quot;&gt;Pound&lt;/a&gt; - Light-weight reverse proxy and load balancer for HTTP/HTTPS. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.privoxy.org&quot;&gt;Privoxy&lt;/a&gt; - Non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OptimalBits/redbird&quot;&gt;Redbird&lt;/a&gt; - A modern reverse proxy for node that includes cluster, HTTP2, LetsEncrypt, and Docker support. &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antoniomika/sish&quot;&gt;sish&lt;/a&gt; - Open source serveo/ngrok alternative providing HTTP(S)/WS(S)/TCP tunnels to localhost using only SSH. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nskondratev/socks5-proxy-server&quot;&gt;socks5-proxy-server&lt;/a&gt; - SOCKS5 proxy server with built-in authentication and Telegram-bot for user management and user statistics on data spent (handy when you pay per GB of data). It is dockerised and simple to install. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VeeSecurity/SOCKS5Engine&quot;&gt;SOCKS5Engine&lt;/a&gt; - Lightweight &amp;amp; resource-efficient SOCKS5 proxy server, optimized for high-load. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.squid-cache.org/&quot;&gt;Squid&lt;/a&gt; - Caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages. (&lt;a href=&quot;https://code.launchpad.net/squid&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linuxserver/docker-swag&quot;&gt;SWAG (Secure Web Application Gateway)&lt;/a&gt; - Nginx webserver and reverse proxy with PHP support, built-in Certbot (Let&#39;s Encrypt) client and fail2ban integration. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiperproxy.github.io/&quot;&gt;Swiperproxy&lt;/a&gt; - Lightning-fast, open source web proxy that is easy for you to run and customize. (&lt;a href=&quot;https://github.com/swiperproxy/swiperproxy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tinyproxy.github.io/&quot;&gt;Tinyproxy&lt;/a&gt; - Light-weight HTTP/HTTPS proxy daemon. (&lt;a href=&quot;https://github.com/tinyproxy/tinyproxy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://traefik.io/&quot;&gt;Traefik&lt;/a&gt; - Tr√¶f…™k is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Mesos/Marathon, ‚Ä¶) to manage its configuration automatically and dynamically. (&lt;a href=&quot;https://github.com/traefik/traefik&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Read-it-later Lists&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://readflow.app&quot;&gt;Readflow&lt;/a&gt; - Lightweight news reader with modern interface and features: full-text search, automatic categorization, archiving, offline support, notifications... (&lt;a href=&quot;https://github.com/ncarlier/readflow&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wallabag.org&quot;&gt;Wallabag&lt;/a&gt; - Wallabag, formerly Poche, is a web application allowing you to save articles to read them later with improved readability. (&lt;a href=&quot;https://app.wallabag.it/register/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/wallabag/wallabag&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Recipe Management&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kcal-app/kcal&quot;&gt;kcal&lt;/a&gt; - Track nutritional information about foods and recipes, set goals, and record a food journal to help along the way. Kcal is a personal system that focuses on direct control of inputs and a minimal, easy to use recipe presentation for preparing meals. (&lt;a href=&quot;http://demo.kcal.cooking/login&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hay-kot.github.io/mealie/&quot;&gt;Mealie&lt;/a&gt; - Material design inspired recipe manager with category and tag management, shopping-lists, meal-planner, and site customizations. Mealie is focused on simple user interactions to keep the whole family using the app. (&lt;a href=&quot;https://github.com/hay-kot/mealie&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/open-eats/OpenEats&quot;&gt;OpenEats&lt;/a&gt; - Recipe management site that allows users to create, store, share and rate recipes, create grocery lists, and more. (&lt;a href=&quot;https://open-eats.github.io/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/julianpoy/recipesage&quot;&gt;RecipeSage&lt;/a&gt; - A recipe keeper, meal plan organizer, and shopping list manager that can import recipes directly from any URL. (&lt;a href=&quot;https://recipesage.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tandoor.dev/&quot;&gt;Tandoor Recipes&lt;/a&gt; - Django application to manage, tag and search recipes using either built-in models or external storage providers hosting PDFs, Images or other files. (&lt;a href=&quot;https://app.tandoor.dev/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/vabene1111/recipes/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Resource Planning&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://farmos.org/&quot;&gt;farmOS&lt;/a&gt; - Web-based farm record keeping application. (&lt;a href=&quot;https://github.com/farmOS/farmOS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://grocy.info/&quot;&gt;grocy&lt;/a&gt; - ERP beyond your fridge - grocy is a web-based self-hosted groceries &amp;amp; household management solution for your home. (&lt;a href=&quot;https://en.demo.grocy.info/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/grocy/grocy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tanibox/tania-core&quot;&gt;Tania&lt;/a&gt; - Tania is a free and open source farming management system for everyone. You can manage your areas, reservoirs, farm tasks, inventories, and the crop growing progress. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Resource Planning - Enterprise Resource Planning&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dolibarr.org/&quot;&gt;Dolibarr&lt;/a&gt; - Dolibarr ERP CRM is a modern software package to manage your company or foundation activity (contacts, suppliers, invoices, orders, stocks, agenda, accounting, ...). (&lt;a href=&quot;https://www.dolibarr.org/onlinedemo.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Dolibarr/dolibarr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0-or-later&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://erpnext.com&quot;&gt;ERPNext&lt;/a&gt; - Free open source ERP system. (&lt;a href=&quot;https://github.com/frappe/erpnext&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ledgersmb.org/&quot;&gt;LedgerSMB&lt;/a&gt; - Integrated accounting and ERP system for small and midsize businesses, with double entry accounting, budgeting, invoicing, quotations, projects, orders and inventory management, shipping and more. (&lt;a href=&quot;https://demo.cloud.efficito.com/erp/1.5/login.pl&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/ledgersmb/LedgerSMB&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.odoo.com&quot;&gt;Odoo&lt;/a&gt; - Free open source ERP system. (&lt;a href=&quot;https://demo.odoo.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/odoo/odoo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ofbiz.apache.org/&quot;&gt;OFBiz&lt;/a&gt; - FOSS enterprise resource planning system with a suite of business applications flexible enough to be used across any industry. (&lt;a href=&quot;https://svn.apache.org/viewvc/ofbiz/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tryton.org/&quot;&gt;Tryton&lt;/a&gt; - Free open source business solution. (&lt;a href=&quot;https://www.tryton.org/download.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://hg.tryton.org/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Search Engines&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ambar.cloud&quot;&gt;Ambar&lt;/a&gt; - Document Search Engine (OCR, Store &amp;amp; Search). (&lt;a href=&quot;https://app.ambar.cloud/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/RD17/ambar&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gigablast.com/&quot;&gt;Gigablast&lt;/a&gt; - open source search engine. (&lt;a href=&quot;https://github.com/gigablast/open-source-search-engine&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jina-ai/jina/&quot;&gt;Jina&lt;/a&gt; - Cloud-native neural search framework for any kind of data. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meilisearch.com&quot;&gt;MeiliSearch&lt;/a&gt; - Ultra relevant, instant and typo-tolerant full-text search API. (&lt;a href=&quot;https://github.com/meilisearch/MeiliSearch&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://searx.github.io/searx/&quot;&gt;Searx&lt;/a&gt; - Privacy-respecting, hackable metasearch engine. (&lt;a href=&quot;https://searx.me/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/searx/searx&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/simon987/sist2&quot;&gt;sist2&lt;/a&gt; - Lightning-fast file system indexer and search tool. (&lt;a href=&quot;https://sist2.simon987.net/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typesense.org&quot;&gt;Typesense&lt;/a&gt; - Blazing fast, typo-tolerant open source search engine optimized for developer happiness and ease of use. (&lt;a href=&quot;https://github.com/typesense/typesense&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benbusby/whoogle-search&quot;&gt;Whoogle&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - A self-hosted, ad-free, privacy-respecting metasearch engine. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yacy.net/en/index.html&quot;&gt;Yacy&lt;/a&gt; - Peer based, decentralized search engine server. (&lt;a href=&quot;https://search.yacy.net/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/yacy/yacy_search_server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Self-hosting Solutions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DaveStephens/ansible-nas&quot;&gt;Ansible-NAS&lt;/a&gt; - Build a full-featured home server with this playbook and an Ubuntu box. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;YAML/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/bitsii/Bitsii/-/wikis/home&quot;&gt;Bitsii Bridge&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Easy to install self-hosting platform for Windows, MacOS, and Linux. Depends on a dynamic DNS provider and Let&#39;s Encrypt. (&lt;a href=&quot;https://gitlab.com/edgii/BBridge&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Java/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloudbox.works&quot;&gt;Cloudbox&lt;/a&gt; - Ansible-based solution for rapidly deploying a Docker containerized cloud media server. (&lt;a href=&quot;https://github.com/Cloudbox/Cloudbox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Shell/Ansible&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dietpi.com/&quot;&gt;DietPi&lt;/a&gt; - Minimal Debian OS optimized for single-board computers, which allows you to easily install and manage several services for selfhosting at home. (&lt;a href=&quot;https://github.com/MichaIng/DietPi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dockstarter.com/&quot;&gt;DockSTARTer&lt;/a&gt; - DockSTARTer helps you get started with home server apps running in Docker. (&lt;a href=&quot;https://github.com/GhostWriters/DockSTARTer&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dfabric.github.io/DPlatform-Shell/&quot;&gt;DPlatform&lt;/a&gt; - Deploy self-hosted apps easily: simple, bloat-free, independent installation. (&lt;a href=&quot;https://github.com/DFabric/DPlatform-Shell&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.flap.cloud&quot;&gt;FLAP&lt;/a&gt; - Low maintenance framework to manage self-hosted services. (&lt;a href=&quot;https://gitlab.com/flap-box/flap&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freedombone.net/&quot;&gt;FreedomBone&lt;/a&gt; - Home server configuration based on Debian. (&lt;a href=&quot;https://code.freedombone.net/bashrc/freedombone&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://freedomboxfoundation.org/&quot;&gt;FreedomBox&lt;/a&gt; - Community project to develop, design and promote personal servers running free software for private, personal, communications. (&lt;a href=&quot;https://salsa.debian.org/freedombox-team/freedombox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://homelabos.com&quot;&gt;HomelabOS&lt;/a&gt; - Your very own offline-first privacy-centric open-source data-center. Deploy over 100 services with a few commands. (&lt;a href=&quot;https://gitlab.com/NickBusey/HomelabOS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextcloudpi.com/&quot;&gt;NextCloudPi&lt;/a&gt; - Nextcloud preinstalled and preconfigured, with a text and web management interface and all the tools needed to self host private data. With installation images for Raspberry Pi, Odroid, Rock64, Docker, and a curl installer for Armbian/Debian. (&lt;a href=&quot;https://github.com/nextcloud/nextcloudpi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0-or-later&lt;/code&gt; &lt;code&gt;Bash/PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openmediavault.org/&quot;&gt;OpenMediaVault&lt;/a&gt; - OpenMediaVault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB/CIFS, DAAP media server, RSync, BitTorrent client and many more. (&lt;a href=&quot;https://github.com/openmediavault/openmediavault&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sandstorm.io/&quot;&gt;Sandstorm&lt;/a&gt; - Personal server for running self-hosted apps easily and securely. (&lt;a href=&quot;https://demo.sandstorm.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;C++/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sovereign/sovereign&quot;&gt;sovereign&lt;/a&gt; - Set of Ansible playbooks to build and maintain your own private cloud: email, calendar, contacts, file sync, IRC bouncer, VPN, and more. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;YAML/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://syncloud.org/&quot;&gt;Syncloud&lt;/a&gt; - Your own online file storage, social network or email server. (&lt;a href=&quot;https://github.com/syncloud/platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ubos.net/&quot;&gt;UBOS&lt;/a&gt; - Linux distro that runs on indie boxes (personal servers and IoT devices). Single-command installation and management of apps - Jenkins, Mediawiki, Owncloud, WordPress, etc., and other features. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Perl/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wikisuite.org&quot;&gt;WikiSuite&lt;/a&gt; - The most comprehensive and integrated Free / Libre / Open Source enterprise software suite. (&lt;a href=&quot;https://wikisuite.org/Source-Code&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0/LGPL-2.1/Apache-2.0/MPL-2.0/MPL-1.1/MIT/AGPL-3.0&lt;/code&gt; &lt;code&gt;ClearOS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://xsrv.readthedocs.io/&quot;&gt;xsrv&lt;/a&gt; - Install and manage self-hosted services/applications, on your own server(s). (&lt;a href=&quot;https://github.com/nodiscc/xsrv&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Shell/Ansible&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yunohost.org/&quot;&gt;YunoHost&lt;/a&gt; - Server operating system aiming to make self-hosting accessible to everyone. (&lt;a href=&quot;https://yunohost.org/#/try&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/YunoHost&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Development&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Software Development - API Management&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dreamfactory.com/&quot;&gt;DreamFactory&lt;/a&gt; - Turns any SQL/NoSQL/Structured data into Restful API. (&lt;a href=&quot;https://github.com/dreamfactorysoftware/dreamfactory&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://form.io&quot;&gt;form.io&lt;/a&gt; - A REST API building platform that utilizes a drag &amp;amp; drop form builder, and is application framework agnostic. Contains open source and enterprise version. (&lt;a href=&quot;https://portal.form.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/formio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fusio-project.org/&quot;&gt;Fusio&lt;/a&gt; - Open-source API management platform which helps to build and manage REST APIs. (&lt;a href=&quot;https://fusio-project.org/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/apioo/fusio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jsoendermann/hapttic&quot;&gt;Hapttic&lt;/a&gt; - Simple HTTP server that forwards all requests to a shell script to handle webhooks you receive. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hasura.io&quot;&gt;Hasura&lt;/a&gt; - Fast, instant realtime GraphQL APIs on Postgres with fine grained access control, also trigger webhooks on database events. (&lt;a href=&quot;https://github.com/hasura/graphql-engine&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hoppscotch.io&quot;&gt;Hoppscotch&lt;/a&gt; - A free, fast and beautiful API request builder. (&lt;a href=&quot;https://github.com/hoppscotch/hoppscotch&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Vue/Nuxt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://konghq.com/kong/&quot;&gt;Kong&lt;/a&gt; - The World‚Äôs Most Popular Open Source Microservice API Gateway and Platform. (&lt;a href=&quot;https://github.com/Kong/kong&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://luraproject.org/&quot;&gt;Lura&lt;/a&gt; - Open source High-Performance API Gateway. (&lt;a href=&quot;https://github.com/luraproject/lura&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paraio.org&quot;&gt;Para&lt;/a&gt; - Flexible and modular backend framework/server for object persistence, API development and authentication. (&lt;a href=&quot;https://github.com/erudika/para&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bearer/pizzly&quot;&gt;Pizzly&lt;/a&gt; - Open-source API Integrations Manager that provides everything a developer needs to interact with OAuth based APIs. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tyk.io&quot;&gt;Tyk&lt;/a&gt; - Fast and scalable open source API Gateway. Out of the box, Tyk offers an API Management Platform with an API Gateway, API Analytics, Developer Portal and API Management Dashboard. (&lt;a href=&quot;https://github.com/TykTechnologies/tyk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Development - Bug Trackers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ticketing&quot;&gt;Ticketing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Software Development - Continuous Integration &amp;amp; Deployment&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#continuous-integration--continuous-deployment&quot;&gt;awesome-sysadmin/Continuous Integration &amp;amp; Continuous Deployment&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Software Development - Documentation Generators&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#static-site-generators&quot;&gt;Static site generators&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.haldean.org/docstore/&quot;&gt;Docstore&lt;/a&gt; - Static document hosting without any server-side processing, does not require you to recompile every time you change an article. Clone the repository and add articles in the text/ directory to get started. (&lt;a href=&quot;https://github.com/haldean/docstore&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ricostacruz.com/flatdoc/&quot;&gt;Flatdoc&lt;/a&gt; - Small Javascript file that fetches Markdown files and renders them as full pages. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mil/markdown-tree&quot;&gt;markdown-tree&lt;/a&gt; - Serve a hierarchy / tree directory of markdown files. Use intended for small sites built in markdown. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://readthedocs.org/&quot;&gt;Read the Docs&lt;/a&gt; - Host documentation, making it fully searchable and easy to find; import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. (&lt;a href=&quot;https://readthedocs.org/projects/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/readthedocs/readthedocs.org&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Development - FaaS &amp;amp; Serverless&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Serverless_computing&quot;&gt;Serverless computing - Wikipedia&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appwrite.io&quot;&gt;Appwrite&lt;/a&gt; - End to end backend server for web, native, and mobile developers üöÄ. (&lt;a href=&quot;https://github.com/appwrite/appwrite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metrue/fx&quot;&gt;fx&lt;/a&gt; - fx is a tool to help you do Function as a Service with painless on your own servers. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iron-io/functions&quot;&gt;IronFunctions&lt;/a&gt; - The serverless microservices platform by &lt;a href=&quot;https://www.iron.io/&quot;&gt;iron.io&lt;/a&gt;. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://localstack.cloud/&quot;&gt;LocalStack&lt;/a&gt; - LocalStack is a fully functional local AWS cloud stack. This includes Lambda for serverless computation. (&lt;a href=&quot;https://github.com/localstack/localstack&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python/Other&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openfaas.com/&quot;&gt;OpenFaaS&lt;/a&gt; - Serverless Functions Made Simple for Docker &amp;amp; Kubernetes. (&lt;a href=&quot;https://github.com/openfaas/faas&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reddec/trusted-cgi&quot;&gt;Trusted-CGI&lt;/a&gt; - Lightweight self-hosted lambda/applications/cgi/serverless-functions platform. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Development - IDE &amp;amp; Tools&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.appsmith.com/&quot;&gt;Appsmith&lt;/a&gt; - Cloud or self-hosted open-source platform to build admin panels, CRUD apps and workflows. Build everything you need, 10x faster. (&lt;a href=&quot;https://github.com/appsmithorg/appsmith&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atheos.io&quot;&gt;Atheos&lt;/a&gt; - Web-based IDE framework with a small footprint and minimal requirements, continued from Codiad. (&lt;a href=&quot;https://github.com/Atheos/Atheos&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bblfsh/bblfshd&quot;&gt;Babelfish&lt;/a&gt; - Self-hosted server for source code parsing. It can parse any file, in any supported language, extract an Abstract Syntax Tree from it, and convert it to a Universal Abstract Syntax Tree which can enable further analysis and transformation. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.budibase.com&quot;&gt;Budibase&lt;/a&gt; - Build and automate internal tools, admin panels, dashboards, CRUD apps, and more, in minutes. Budibase is the open source alternative to Outsystems, Retool, Mendix, Appian. (&lt;a href=&quot;https://github.com/Budibase/budibase&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coder.com/&quot;&gt;Code-Server&lt;/a&gt; - Visual Studio Code in the browser, hosted on a remote server. (&lt;a href=&quot;https://github.com/cdr/code-server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt; - Open source workspace server and cloud IDE. (&lt;a href=&quot;https://github.com/eclipse/che&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EPL-1.0&lt;/code&gt; &lt;code&gt;Docker/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitpod.io/&quot;&gt;Gitpod&lt;/a&gt; - Online IDE for GitHub and GitLab. (&lt;a href=&quot;https://gitpod.io/#https://github.com/awesome-selfhosted/awesome-selfhosted&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gitpod-io/self-hosted&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;EPL-2.0&lt;/code&gt; &lt;code&gt;Go/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mujx/hakatime&quot;&gt;Hakatime&lt;/a&gt; - WakaTime server implementation with analytics dashboard. &lt;code&gt;Unlicense&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dukeofharen/httplaceholder&quot;&gt;HttPlaceholder&lt;/a&gt; - Quickly mock away any webservice using HttPlaceholder. HttPlaceholder lets you specify what the request should look like and what response needs to be returned. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://icecoder.net/&quot;&gt;ICEcoder&lt;/a&gt; - ICEcoder is a web IDE / browser based code editor, which allows you to develop websites directly within the web browser. (&lt;a href=&quot;http://demo.icecoder.net/ICEcoder/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/icecoder/ICEcoder&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsbin.com/&quot;&gt;JS Bin&lt;/a&gt; - Open source collaborative web development debugging tool. (&lt;a href=&quot;https://github.com/jsbin/jsbin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://judge0.com&quot;&gt;Judge0 CE&lt;/a&gt; - Open source API to compile and run source code. (&lt;a href=&quot;https://github.com/judge0/judge0&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jupyterlab.github.io/jupyterlab/&quot;&gt;JupyterLab&lt;/a&gt; - Web-based environment for interactive and reproducible computing. (&lt;a href=&quot;https://mybinder.org/v2/gh/jupyterlab/jupyterlab-demo/try.jupyter.org?urlpath=lab&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/jupyterlab/jupyterlab/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lowdefy.com/&quot;&gt;Lowdefy&lt;/a&gt; - Build internal tools, BI dashboards, admin panels, CRUD apps and workflows in minutes using YAML / JSON on an self-hosted, open-source platform. Connect to your data sources, host via Serverless, Netlify or Docker. (&lt;a href=&quot;https://github.com/lowdefy/lowdefy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ml-tooling/ml-workspace&quot;&gt;ML Workspace&lt;/a&gt; - All-in-one web-based IDE for machine learning and data science. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getmotoradmin.com/&quot;&gt;Motor Admin&lt;/a&gt; - No-code admin panel and business intelligence software - search, create, update, and delete data entries, create custom actions, and build reports. (&lt;a href=&quot;https://motor-admin.herokuapp.com/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/motor-admin/motor-admin&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://regexr.com/&quot;&gt;Regexr&lt;/a&gt; - RegExr is a HTML/JS based tool for creating, testing, and learning about Regular Expressions. (&lt;a href=&quot;https://github.com/gskinner/regexr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rstudio.com/products/rstudio/#Server&quot;&gt;RStudio Server&lt;/a&gt; - Web browser based IDE for R. (&lt;a href=&quot;https://github.com/rstudio/rstudio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Java/C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slingcode.net/&quot;&gt;Slingcode&lt;/a&gt; - Web app IDE and computing platform in a single static HTML file. (&lt;a href=&quot;https://slingcode.net/slingcode.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/chr15m/slingcode/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;HTML&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sourcegraph.com&quot;&gt;sourcegraph&lt;/a&gt; - Sourcegraph is a fast, open-source, fully-featured code search and navigation engine written in Go. (&lt;a href=&quot;https://github.com/sourcegraph/sourcegraph&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tooljet.io/&quot;&gt;ToolJet&lt;/a&gt; - ToolJet is the open-source low-code framework alternative to Retool &amp;amp; Mendix to build &amp;amp; deploy internal tools with minimal engineering effort. (&lt;a href=&quot;https://github.com/ToolJet/ToolJet&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wakapi.dev/&quot;&gt;Wakapi&lt;/a&gt; - Tracking tool for coding statistics, compatible with WakaTime. (&lt;a href=&quot;https://github.com/muety/wakapi&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Development - Localization&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accent.reviews/&quot;&gt;Accent&lt;/a&gt; - Open-source, self-hosted, developer-oriented translation tool. (&lt;a href=&quot;https://github.com/mirego/accent&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Elixir&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://localizer.dev&quot;&gt;Localizer&lt;/a&gt; - Free self-hosted open-source crowd-translating service for your product. (&lt;a href=&quot;https://localize.todorant.com&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/backmeupplz/localizer-backend&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs/Docker&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pootle.translatehouse.org&quot;&gt;Pootle&lt;/a&gt; - Online translation and localization tool. (&lt;a href=&quot;https://github.com/translate/pootle&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://traduora.com&quot;&gt;Traduora&lt;/a&gt; - Translation management platform for teams. (&lt;a href=&quot;https://github.com/ever-co/ever-traduora&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Docker/Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weblate.org&quot;&gt;Weblate&lt;/a&gt; - Web-based translation tool with tight version control integration. (&lt;a href=&quot;https://demo.weblate.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/WeblateOrg/weblate&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://zanata.org&quot;&gt;Zanata&lt;/a&gt; - Web-based translation platform for translators, content creators and developers to manage localisation projects. (&lt;a href=&quot;https://github.com/zanata/zanata-platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Development - Project Management&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ticketing&quot;&gt;Ticketing&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#task-management--to-do-lists&quot;&gt;Task management &amp;amp; To-do lists&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also: &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#code-review&quot;&gt;awesome-sysadmin/Code Review&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bonobogitserver.com/&quot;&gt;Bonobo Git Server&lt;/a&gt; - Set up your own self hosted git server on IIS for Windows. Manage users and have full control over your repositories with a nice user friendly graphical interface. (&lt;a href=&quot;https://github.com/jakubgarfield/Bonobo-Git-Server&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fossil-scm.org/index.html/doc/trunk/www/index.wiki&quot;&gt;Fossil&lt;/a&gt; - Distributed version control system featuring wiki and bug tracker. &lt;code&gt;BSD-2-Clause-FreeBSD&lt;/code&gt; &lt;code&gt;C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alberthier/git-webui&quot;&gt;Git WebUI&lt;/a&gt; - Standalone web based user interface for git repositories. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitblit.github.io/gitblit/&quot;&gt;Gitblit&lt;/a&gt; - Pure Java stack for managing, viewing, and serving Git repositories. (&lt;a href=&quot;https://github.com/gitblit/gitblit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitbucket.github.io/gitbucket-news/&quot;&gt;gitbucket&lt;/a&gt; - Easily installable GitHub clone powered by Scala. (&lt;a href=&quot;https://github.com/gitbucket/gitbucket&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Scala/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitea.io&quot;&gt;Gitea&lt;/a&gt; - Community managed fork of Gogs, lightweight code hosting solution. (&lt;a href=&quot;https://try.gitea.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/go-gitea/gitea&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com&quot;&gt;GitLab&lt;/a&gt; - Self Hosted Git repository management, code reviews, issue tracking, activity feeds and wikis. (&lt;a href=&quot;https://gitlab.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab-foss&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlist.org/&quot;&gt;Gitlist&lt;/a&gt; - Web-based git repository browser - GitList allows you to browse repositories using your favorite browser, viewing files under different revisions, commit history and diffs. (&lt;a href=&quot;https://github.com/klaussilveira/gitlist&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitolite.com/gitolite/index.html&quot;&gt;Gitolite&lt;/a&gt; - Gitolite allows you to setup git hosting on a central server, with fine-grained access control and many more powerful features. (&lt;a href=&quot;https://github.com/sitaramc/gitolite&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitprep.yukikimoto.com/&quot;&gt;GitPrep&lt;/a&gt; - Portable Github clone. (&lt;a href=&quot;https://perlcodesample.sakura.ne.jp/gitprep/gitprep.cgi&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/yuki-kimoto/gitprep&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Artistic-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gogs.io/&quot;&gt;Gogs&lt;/a&gt; - Painless self-hosted Git Service written in Go. (&lt;a href=&quot;https://try.gogs.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/gogs/gogs&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://usegood.work/&quot;&gt;Goodwork&lt;/a&gt; - Self hosted project management and collaboration tool powered by Laravel &amp;amp; VueJS. (&lt;a href=&quot;https://github.com/iluminar/goodwork#demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/iluminar/goodwork&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kallithea-scm.org/&quot;&gt;Kallithea&lt;/a&gt; - Source code management system that supports two leading version control systems, Mercurial and Git, with a web interface. (&lt;a href=&quot;https://kallithea-scm.org/repos/kallithea&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonashaag/klaus&quot;&gt;Klaus&lt;/a&gt; - Simple, easy-to-set-up Git web viewer that Just Works. &lt;code&gt;ISC&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lavagna.io&quot;&gt;Lavagna&lt;/a&gt; - Lavagna is an open-source issue/project management tool designed for small teams. Lightweight, pure Java, easy to install, easy to use. (&lt;a href=&quot;https://github.com/digitalfondue/lavagna&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lazylead.org&quot;&gt;Lazylead&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Eliminate the annoying work within ticketing systems (Jira, GitHub, Trello). Allows to automate daily actions like tickets fields verification, email notifications by JQL/GQL, meeting requests to your (or teammates) calendar. (&lt;a href=&quot;https://github.com/dgroup/lazylead&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leantime.io&quot;&gt;Leantime&lt;/a&gt; - Leantime is a lean project management system for small teams and startups helping to manage projects from ideation through delivery. (&lt;a href=&quot;https://github.com/leantime/leantime&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microgit-com/microgit&quot;&gt;Microgit&lt;/a&gt; - Git hosting service made in Crystal and Lucky. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Crystal&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octobox.io/&quot;&gt;Octobox&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Take back control of your GitHub Notifications. (&lt;a href=&quot;https://github.com/octobox/octobox&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onedev.io/&quot;&gt;OneDev&lt;/a&gt; - All-In-One DevOps Platform. With Git Management, Issue Tracking, and CI/CD. Simple yet Powerful. (&lt;a href=&quot;https://code.onedev.io/projects/160&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org&quot;&gt;OpenProject&lt;/a&gt; - OpenProject is a web-based project management system. (&lt;a href=&quot;https://github.com/opf/openproject&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagure.io/pagure&quot;&gt;Pagure&lt;/a&gt; - A lightweight, powerful, and flexible git-centric forge with features laying the foundation for federated and decentralized development. (&lt;a href=&quot;https://pagure.io/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phproject.org/&quot;&gt;Phproject&lt;/a&gt; - High performance full-featured project management system. (&lt;a href=&quot;https://demo.phproject.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alanaktion/phproject&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.projeqtor.org/&quot;&gt;ProjeQtOr&lt;/a&gt; - A complete, mature, multi-user project management system with extensive functionality for all phases of a project. (&lt;a href=&quot;https://demo.projeqtor.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://sourceforge.net/p/projectorria/code/HEAD/tree/branches/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaishuu0123/rebacklogs&quot;&gt;Re:Backlogs&lt;/a&gt; - Project management and collaboration tool powered by Ruby on Rails &amp;amp; VueJS. (&lt;a href=&quot;https://rebacklogs.saino.me/users/sign_up&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redmine.org/&quot;&gt;Redmine&lt;/a&gt; - Redmine is a flexible project management web application. (&lt;a href=&quot;http://demo.redmine.org/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://svn.redmine.org/redmine/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rhodecode.com/&quot;&gt;RhodeCode&lt;/a&gt; - RhodeCode is an open source platform for software development teams. It unifies and simplifies repository management for Git, Subversion, and Mercurial. (&lt;a href=&quot;https://code.rhodecode.com/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.scm-manager.org/&quot;&gt;SCM Manager&lt;/a&gt; - The easiest way to share and manage your Git, Mercurial and Subversion repositories over http. (&lt;a href=&quot;https://github.com/scm-manager/scm-manager&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://taiga.io/&quot;&gt;Taiga&lt;/a&gt; - Agile Project Management Tool based on the Kanban and Scrum methods. (&lt;a href=&quot;https://github.com/taigaio&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://titra.io/en/free-time-tracking-online/&quot;&gt;Titra&lt;/a&gt; - Time-tracking solution for freelancers and small teams. (&lt;a href=&quot;https://app.titra.io/try&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kromitgmbh/titra&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trac.edgewall.org/&quot;&gt;Trac&lt;/a&gt; - Trac is an enhanced wiki and issue tracking system for software development projects. &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tuleap.org/&quot;&gt;Tuleap&lt;/a&gt; - Tuleap is a libre suite to plan, track, code and collaborate on software projects. (&lt;a href=&quot;https://tuleap.net/plugins/git/tuleap/tuleap/stable?p=tuleap%2Fstable.git&amp;amp;a=tree&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uvdesk.com/&quot;&gt;UVDesk&lt;/a&gt; - UVDesk community is a service oriented, event driven extensible opensource helpdesk system that can be used by your organization to provide efficient support to your clients effortlessly whichever way you imagine. (&lt;a href=&quot;https://demo.uvdesk.com/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/uvdesk/community-skeleton&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zentao.pm/&quot;&gt;ZenTao&lt;/a&gt; - An agile(scrum) project management system/tool. (&lt;a href=&quot;https://demo.zentao.pm/user-login.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/easysoft/zentaopms&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;ZPL-1.2&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Development - UX Testing&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xnbox/DeepfakeHTTP&quot;&gt;DeepfakeHTTP&lt;/a&gt; - A web server that uses HTTP dumps as a source for responses. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aerokube.com/selenoid/latest/&quot;&gt;Selenoid&lt;/a&gt; - Lightweight Selenium hub implementation launching browsers within Docker containers. (&lt;a href=&quot;https://github.com/aerokube/selenoid&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sjoerdvanderhoorn/Uier&quot;&gt;Uier&lt;/a&gt; - Codeless or low-code User Experience test editing and management using Selenium to perform testing or UI automation. Uier tends to be a free self hostable alternative to Applitools, Endtest, Ghost Inspector, Usetrace, Screenster and many others. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Static Site Generators&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://staticsitegenerators.net&quot;&gt;staticsitegenerators.net&lt;/a&gt;, &lt;a href=&quot;https://www.staticgen.com&quot;&gt;staticgen.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Task Management &amp;amp; To-do Lists&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---project-management&quot;&gt;Software Development - Project Management&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#ticketing&quot;&gt;Ticketing&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.focalboard.com/&quot;&gt;Focalboard&lt;/a&gt; - An open source, self-hosted alternative to Trello, Notion, and Asana. It helps define, organize, track and manage work across individuals and teams. (&lt;a href=&quot;https://github.com/mattermost/focalboard&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://www.focalboard.com/download/personal-edition/desktop/&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT/AGPL-3.0/Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs/Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SrGMC/kanbana&quot;&gt;Kanbana&lt;/a&gt; - Create boards to track users and projects from flat markdown files. Forked from Crepido. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kanboard.net/&quot;&gt;Kanboard&lt;/a&gt; - Simple and open source visual task board. (&lt;a href=&quot;https://github.com/kanboard/kanboard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mytinytodo.net/&quot;&gt;myTinyTodo&lt;/a&gt; - Simple way to manage your todo list in AJAX style. Uses PHP, jQuery, SQLite/MySQL. GTD compliant. (&lt;a href=&quot;https://www.mytinytodo.net/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/maxpozdeev/mytinytodo/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apankrat/nullboard&quot;&gt;Nullboard&lt;/a&gt; - Single-page minimalist kanban board; compact, highly readable and quick to use. &lt;code&gt;BSD-2-Clause&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://planka.app/&quot;&gt;Planka&lt;/a&gt; - Open source Trello alternative. (&lt;a href=&quot;https://plankanban.github.io/planka/#/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/plankanban/planka&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://restya.com/board/&quot;&gt;Restyaboard&lt;/a&gt; - Open source Trello-like kanban board. (&lt;a href=&quot;https://restya.com/board/demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/RestyaPlatform/board&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;OSL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nymanjens/piga&quot;&gt;Task Keeper&lt;/a&gt; - List editor for power users, backed by a self-hosted server. &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://taskboard.matthewross.me/&quot;&gt;TaskBoard&lt;/a&gt; - Kanban-inspired app for keeping track of things that need to get done. (&lt;a href=&quot;https://taskboard.matthewross.me/demo.html&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/kiswa/TaskBoard&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.taskfreak.com/original&quot;&gt;Taskfreak&lt;/a&gt; - Simple but efficient web based task manager written in PHP. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://taskord.com&quot;&gt;Taskord&lt;/a&gt; - Get things done socially with community of makers. (&lt;a href=&quot;https://gitlab.com/yo/taskord&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgg/tasks.php&quot;&gt;tasks.php&lt;/a&gt; - Simple task/todo list that uses a JSON text file for the tasks. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m1guelpf/tasks&quot;&gt;Tasks&lt;/a&gt; - Simple tasks and notes manager written in PHP, jQuery and Bootstrap using a custom flat file database. &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://taskwarrior.org/&quot;&gt;Taskwarrior&lt;/a&gt; - Taskwarrior is Free and Open Source Software that manages your TODO list from your command line. It is flexible, fast, efficient, and unobtrusive. It does its job then gets out of your way. (&lt;a href=&quot;https://taskwarrior.org/download/#git&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thewhitetulip/Tasks&quot;&gt;thewhitetulip Tasks&lt;/a&gt; - Kanban based to-do list manager written in Go. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.mills.io/prologic/todo&quot;&gt;todo&lt;/a&gt; - Simple todo list manager. (&lt;a href=&quot;https://todo.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.todomini.app/&quot;&gt;todoMini&lt;/a&gt; - Mobile friendly zero-feature TODO list web app. Unix philosophy. (&lt;a href=&quot;https://appmini.github.io/todoMini/?demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/appMini/todoMini&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP/Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getontracks.org/&quot;&gt;Tracks&lt;/a&gt; - Web-based application to help you implement David Allen‚Äôs &lt;a href=&quot;https://en.wikipedia.org/wiki/Getting_Things_Done&quot;&gt;Getting Things Done‚Ñ¢&lt;/a&gt; methodology. (&lt;a href=&quot;https://github.com/TracksApp/tracks&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vikunja.io/&quot;&gt;Vikunja&lt;/a&gt; - The to-do app to organize your life. (&lt;a href=&quot;https://try.vikunja.io/login&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://kolaente.dev/vikunja/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wekan.github.io/&quot;&gt;Wekan&lt;/a&gt; - Open-source Trello-like kanban. (&lt;a href=&quot;https://github.com/wekan/wekan&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ticketing&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#task-management--to-do-lists&quot;&gt;Task management &amp;amp; To-do lists&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---project-management&quot;&gt;Software Development - Project Management&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugzilla.org/&quot;&gt;Bugzilla&lt;/a&gt; - General-purpose bugtracker and testing tool originally developed and used by the Mozilla project. &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bumpy-booby.derivoile.fr/&quot;&gt;Bumpy Booby&lt;/a&gt; - Simple, responsive and highly customizable PHP bug tracking system. (&lt;a href=&quot;https://github.com/piero-la-lune/Bumpy-Booby&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://django-todo.org/&quot;&gt;django-todo&lt;/a&gt; - django-todo is a pluggable, multi-user, multi-group, multi-list todo and ticketing system - a reusable app designed to be dropped into any existing Django project. (&lt;a href=&quot;https://github.com/shacker/django-todo&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://erxes.io/install/&quot;&gt;Erxes&lt;/a&gt; - Marketing, sales, and customer service platform designed to help businesses attract more engaged customers. (&lt;a href=&quot;https://demo.erxes.io/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/erxes/erxes&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Javascript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.flyspray.org/&quot;&gt;Flyspray&lt;/a&gt; - Uncomplicated, web-based bug tracking system. (&lt;a href=&quot;https://github.com/Flyspray/flyspray&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freescout-helpdesk/freescout&quot;&gt;FreeScout&lt;/a&gt; - Open source clone of Help Scout: email-based customer support application, help desk and shared mailbox. &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glitchtip.com&quot;&gt;GlitchTip&lt;/a&gt; - Open source error-tracking app. GlitchTip collects errors reported by your app. (&lt;a href=&quot;https://gitlab.com/glitchtip/glitchtip&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helpy.io&quot;&gt;Helpy&lt;/a&gt; - Helpy is a modern, open source helpdesk customer support application. Features include knowledgebase, community discussions and support tickets integrated with email. (&lt;a href=&quot;https://demo.helpy.io&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/helpyio/helpy&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huboard/huboard&quot;&gt;HuBoard&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Instant project management for your GitHub issues (Connects directly GitHub API). &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mantisbt.org/&quot;&gt;MantisBT&lt;/a&gt; - Self hosted bug tracker, fits best for software development. (&lt;a href=&quot;https://www.mantisbt.org/bugs/my_view_page.php&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/mantisbt/mantisbt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.opensupports.com/&quot;&gt;OpenSupports&lt;/a&gt; - Multi language ticket system with FAQ, role management, metrics and canned response features. (&lt;a href=&quot;https://www.opensupports.com/demo/&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/opensupports/opensupports&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://osticket.com/&quot;&gt;osTicket&lt;/a&gt; - Manage, organize and archive all your support requests and responses in one place. (&lt;a href=&quot;https://github.com/osTicket/osTicket&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pach.no/&quot;&gt;Pachno&lt;/a&gt; - Bring your team together to design, build and deliver your project with a tool that works with you and your team, and adapts when you need to. (&lt;a href=&quot;https://github.com/pachno/pachno&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bestpractical.com/rt/&quot;&gt;Request Tracker&lt;/a&gt; - An enterprise-grade issue tracking system. (&lt;a href=&quot;https://github.com/bestpractical/rt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getsentry/onpremise&quot;&gt;Sentry On-Premise&lt;/a&gt; - A powerful error tracking platform with wide language support and a robust API. (&lt;a href=&quot;https://github.com/getsentry/sentry&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Python/Django&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sit.fyi/&quot;&gt;SIT&lt;/a&gt; - SCM-agnostic, file-based, offline-first, immutable issue tracker. (&lt;a href=&quot;https://github.com/sit-fyi/sit&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trudesk.io/&quot;&gt;Trudesk&lt;/a&gt; - Trudesk is an open-source help desk/ticketing solution. (&lt;a href=&quot;https://github.com/polonel/trudesk&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;Apache-2.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zammad.org/&quot;&gt;Zammad&lt;/a&gt; - Easy to use but powerful open-source support and ticketing system. (&lt;a href=&quot;https://github.com/zammad/zammad&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;URL Shorteners&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Before hosting one, please see &lt;a href=&quot;https://en.wikipedia.org/wiki/URL_shortening#Shortcomings&quot;&gt;shortcomings&lt;/a&gt; of URL shorteners.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.blink.rest&quot;&gt;Blink&lt;/a&gt; - Easy-to-host, SSO-integrated, CDN-powered link shortener (+decoupled analytics) for teams. (&lt;a href=&quot;https://github.com/JaneJeon/blink&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.ucode.space/Phil/goshorly&quot;&gt;goshorly&lt;/a&gt; - An easy self-hosted Link shortener in Golang with Redis &amp;lt;3. (&lt;a href=&quot;https://gly.one&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kutt.it&quot;&gt;Kutt&lt;/a&gt; - A modern URL shortener with support for custom domains. (&lt;a href=&quot;https://github.com/thedevs-network/kutt&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tommyku/link-shortener-front-end&quot;&gt;Link-shortener-bot&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - URL shortener using a Telegram Bot. (&lt;a href=&quot;https://t.me/GiveMeShortLinkBot&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fsh.ee&quot;&gt;Link&lt;/a&gt; - A minimal, SQLite-backed URL shortener. (&lt;a href=&quot;https://demo.fsh.ee&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://git.fsh.ee/i/link&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/132ikl/liteshort&quot;&gt;liteshort&lt;/a&gt; - User-friendly, actually lightweight, and configurable URL shortener. (&lt;a href=&quot;https://ls.ikl.sh&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ldidry/lstu&quot;&gt;Lstu&lt;/a&gt; - &lt;em&gt;Let&#39;s SHorten That Url&lt;/em&gt; - Lightweight URL shortener. &lt;code&gt;WTFPL&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://project.polr.me/&quot;&gt;Polr&lt;/a&gt; - Modern, minimalist, modular, and lightweight URL shortener. (&lt;a href=&quot;https://github.com/Cydrobolt/polr&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ziyasal/reducio&quot;&gt;reduc.io&lt;/a&gt; - URL shortener service written in Scala, using Akka-Http and Redis. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Scala&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/ReducePy&quot;&gt;ReducePy&lt;/a&gt; - URL shortener service using Tornado and Redis runs on Docker and Kubernetes. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sqozz/schort&quot;&gt;schort&lt;/a&gt; - No login, no javascript, just short links. (&lt;a href=&quot;https://s.wx0.de&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;CC0-1.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shlink.io&quot;&gt;Shlink&lt;/a&gt; - URL shortener with REST API and command line interface. Includes official progressive web application and docker images. (&lt;a href=&quot;https://github.com/shlinkio/shlink&quot;&gt;Source Code&lt;/a&gt;, &lt;a href=&quot;https://shlink.io/apps&quot;&gt;Clients&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.mills.io/prologic/shorturl&quot;&gt;shorturl&lt;/a&gt; - Simple URL shortener with very tiny URLs. (&lt;a href=&quot;https://url.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/azlux/Simple-URL-Shortener&quot;&gt;Simple-URL-Shortener&lt;/a&gt; - KISS URL shortener, public or private (with account). Minimalist and lightweight. No dependencies. (&lt;a href=&quot;https://u.azlux.fr&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/draganczukp/simply-shorten&quot;&gt;Simply Shorten&lt;/a&gt; - A simple URL shortener that just shortens links. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cagataycali/url-shortener&quot;&gt;url-shortener&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - Shitty url shortener, emoji and AI powered. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yourls.org/&quot;&gt;YOURLS&lt;/a&gt; - YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener. Features include password protection, URL customization, bookmarklets, statistics, API, plugins, jsonp. (&lt;a href=&quot;https://github.com/YOURLS/YOURLS&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;VPN&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#vpn&quot;&gt;awesome-sysadmin/VPN&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Web Servers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please visit &lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin#web&quot;&gt;awesome-sysadmin/Web&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Wikis&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Related: &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#software-development---documentation-generators&quot;&gt;Software Development - Documentation Generators&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;See also: &lt;a href=&quot;https://www.wikimatrix.org/&quot;&gt;Wikimatrix&lt;/a&gt;, &lt;a href=&quot;https://wikiindex.org/Category:Wiki_Engine&quot;&gt;Wiki Engines - WikiIndex&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_wiki_software&quot;&gt;List of wiki software - Wikipedia&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_wiki_software&quot;&gt;Comparison of wiki software - Wikipedia&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookstackapp.com/&quot;&gt;BookStack&lt;/a&gt; - BookStack is a simple, self-hosted, easy-to-use platform for organizing and storing information. It allows for documentation to be stored in a book like fashion. (&lt;a href=&quot;https://www.bookstackapp.com/#demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/BookStackApp/BookStack&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/schollz/cowyo&quot;&gt;Cowyo&lt;/a&gt; - Cowyo is a feature-rich wiki for minimalists. (&lt;a href=&quot;https://cowyo.com&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/django-wiki/django-wiki&quot;&gt;django-wiki&lt;/a&gt; - Wiki system with complex functionality for simple integration and a superb interface. Store your knowledge with style: Use django models. (&lt;a href=&quot;https://demo.django-wiki.org/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documize.com&quot;&gt;Documize&lt;/a&gt; - Modern Docs + Wiki software with built-in workflow, single binary executable, just bring MySQL/Percona. (&lt;a href=&quot;https://github.com/documize/community&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dokuwiki.org/DokuWiki&quot;&gt;Dokuwiki&lt;/a&gt; - Easy to use, lightweight, standards-compliant wiki engine with a simple syntax allowing reading the data outside the wiki. All data is stored in plain files, therefore no database is required. (&lt;a href=&quot;https://github.com/splitbrain/dokuwiki&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jgm/gitit&quot;&gt;Gitit&lt;/a&gt; - Wiki program that stores pages and uploaded files in a git repository, which can then be modified using the VCS command line tools or the wiki&#39;s web interface. &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Haskell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gollum/gollum&quot;&gt;Gollum&lt;/a&gt; - Simple, Git-powered wiki with a sweet API and local frontend. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/claudioc/jingo&quot;&gt;jingo&lt;/a&gt; - Git based wiki engine written for node.js, with a decent design, a search capability and good typography. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mediawiki.org/wiki/MediaWiki&quot;&gt;Mediawiki&lt;/a&gt; - MediaWiki is a free and open-source wiki software package written in PHP. It serves as the platform for Wikipedia and the other Wikimedia projects, used by hundreds of millions of people each month. (&lt;a href=&quot;https://en.wikipedia.org/wiki/Main_Page&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://phabricator.wikimedia.org/diffusion/MW/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moinmo.in/&quot;&gt;MoinMoin&lt;/a&gt; - Advanced, easy to use and extensible WikiEngine with a large community of users. (&lt;a href=&quot;https://github.com/moinwiki/moin-1.9&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getoutline.com/&quot;&gt;Outline&lt;/a&gt; &lt;code&gt;‚ö†&lt;/code&gt; - An open, extensible, wiki for your team. (&lt;a href=&quot;https://github.com/outline/outline&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sbrl/Pepperminty-Wiki&quot;&gt;Pepperminty Wiki&lt;/a&gt; - Complete markdown-powered wiki contained in a single PHP file. (&lt;a href=&quot;https://starbeamrainbowlabs.com/labs/peppermint/build/&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xy2z/PineDocs&quot;&gt;PineDocs&lt;/a&gt; - Simple, fast, customizable and lightweight site for browsing files. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pmwiki.org&quot;&gt;PmWiki&lt;/a&gt; - Wiki-based system for collaborative creation and maintenance of websites. &lt;code&gt;GPL-3.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://raneto.com/&quot;&gt;Raneto&lt;/a&gt; - Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase. &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tiddlywiki.com/&quot;&gt;TiddlyWiki&lt;/a&gt; - Reusable non-linear personal web notebook. (&lt;a href=&quot;https://github.com/Jermolene/TiddlyWiki5&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tiki.org&quot;&gt;Tiki&lt;/a&gt; - Wiki CMS Groupware with the most built-in features. (&lt;a href=&quot;https://tiki.org/Demo&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://sourceforge.net/p/tikiwiki/code/HEAD/tree/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twiki.org/&quot;&gt;TWiki&lt;/a&gt; - TWiki is a Perl-based structured wiki application, typically used to run a collaboration platform, knowledge or document management system, a knowledge base, or team portal. (&lt;a href=&quot;https://twiki.org/cgi-bin/view/Sandbox/WebHome&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;http://svn.twiki.org/svn/twiki/&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-1.0&lt;/code&gt; &lt;code&gt;Perl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wackowiki.org/&quot;&gt;WackoWiki&lt;/a&gt; - WackoWiki is a light and easy to install multilingual Wiki-engine. (&lt;a href=&quot;https://github.com/WackoWiki/wackowiki&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;BSD-3-Clause&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.js.org/&quot;&gt;Wiki.js&lt;/a&gt; - Modern, lightweight and powerful wiki app using Git and Markdown. (&lt;a href=&quot;https://docs.requarks.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;AGPL-3.0&lt;/code&gt; &lt;code&gt;Nodejs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.mills.io/prologic/wiki&quot;&gt;wiki&lt;/a&gt; - Simple Markdown based wiki engine. (&lt;a href=&quot;https://wiki.mills.io&quot;&gt;Demo&lt;/a&gt;) &lt;code&gt;MIT&lt;/code&gt; &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wikiss.tuxfamily.org/&quot;&gt;WiKiss&lt;/a&gt; - Wiki, simple to use and install. (&lt;a href=&quot;https://svnweb.tuxfamily.org/listing.php?repname=wikiss/svn&amp;amp;path=%2F&amp;amp;sc=0&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xwiki.org&quot;&gt;XWiki&lt;/a&gt; - Second generation wiki that allows the user to extend its functionalities with a powerful extension-based architecture. (&lt;a href=&quot;https://playground.xwiki.org&quot;&gt;Demo&lt;/a&gt;, &lt;a href=&quot;https://github.com/xwiki/xwiki-platform&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;LGPL-2.1&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zim-wiki.org/&quot;&gt;Zim&lt;/a&gt; - Graphical text editor used to maintain a collection of wiki pages. Each page can contain links to other pages, simple formatting and images. (&lt;a href=&quot;https://github.com/zim-desktop-wiki/zim-desktop-wiki&quot;&gt;Source Code&lt;/a&gt;) &lt;code&gt;GPL-2.0&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END SOFTWARE LIST --&gt; 
&lt;hr&gt; 
&lt;h2&gt;List of Licenses&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;‚ö† &lt;/code&gt; - Depends on a proprietary service outside the user&#39;s control&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0BSD&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/0BSD&quot;&gt;BSD Zero-Clause Licence&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AAL&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/AAL&quot;&gt;Attribution Assurance License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGPL-3.0&lt;/code&gt; - &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0&quot;&gt;GNU Affero General Public License 3.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGPL-3.0-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/AGPL-3.0-only.html&quot;&gt;GNU Affero General Public License 3.0 only&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Apache-2.0&lt;/code&gt; - &lt;a href=&quot;https://www.apache.org/licenses/&quot;&gt;Apache, Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;APSL-2.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/APSL-2.0&quot;&gt;Apple Public Source License, Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Artistic-2.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/Artistic-2.0&quot;&gt;Artistic License Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Beerware&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/Beerware.html&quot;&gt;Beerware License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-2-Clause&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/BSD-2-Clause&quot;&gt;BSD 2-clause &quot;Simplified&quot;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-2-Clause-FreeBSD&lt;/code&gt; - &lt;a href=&quot;https://www.freebsd.org/copyright/freebsd-license.html&quot;&gt;BSD 2-Clause FreeBSD License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-3-Clause&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/BSD-3-Clause&quot;&gt;BSD 3-Clause &quot;New&quot; or &quot;Revised&quot;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-3-Clause-Attribution&lt;/code&gt; - &lt;a href=&quot;https://fedoraproject.org/wiki/Licensing/BSD_with_Attribution&quot;&gt;BSD with attribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BSD-4-Clause&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/BSD-4-Clause.html&quot;&gt;BSD 4-clause &quot;Original&quot;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CC-BY-NC-SA-3.0&lt;/code&gt; - &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/&quot;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 International License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CC-BY-SA-3.0&lt;/code&gt; - &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;Creative Commons Attribution-ShareAlike 3.0 International License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CC-BY-SA-4.0&lt;/code&gt; - &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CC0-1.0&lt;/code&gt; - &lt;a href=&quot;https://creativecommons.org/about/cc0/&quot;&gt;Public Domain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CDDL-1.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/CDDL-1.0&quot;&gt;Common Development and Distribution License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CECILL-B&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/CECILL-B.html&quot;&gt;CEA CNRS INRIA Logiciel Libre&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CPAL-1.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/CPAL-1.0&quot;&gt;Common Public Attribution License Version 1.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DPL&lt;/code&gt; - &lt;a href=&quot;https://cerb.ai/license/&quot;&gt;Devblocks Public License 1.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ECL-2.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/ECL-2.0&quot;&gt;Educational Community License, Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EPL-1.0&lt;/code&gt; - &lt;a href=&quot;https://www.eclipse.org/legal/epl-v10.html&quot;&gt;Eclipse Public License, Version 1.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EPL-2.0&lt;/code&gt; - &lt;a href=&quot;https://www.eclipse.org/legal/epl-v20.html&quot;&gt;Eclipse Public License, Version 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EUPL-1.2&lt;/code&gt; - &lt;a href=&quot;https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12&quot;&gt;European Union Public License 1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.1-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.1-only.html&quot;&gt;GNU Free Documentation License v1.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.1-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.1-or-later.html&quot;&gt;GNU Free Documentation License v1.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.2-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.2-only.html&quot;&gt;GNU Free Documentation License v1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.2-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.2-or-later.html&quot;&gt;GNU Free Documentation License v1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.3-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.3-only.html&quot;&gt;GNU Free Documentation License v1.3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GFDL-1.3-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GFDL-1.3-or-later.html&quot;&gt;GNU Free Documentation License v1.3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-1.0&lt;/code&gt; - &lt;a href=&quot;https://www.gnu.org/licenses/gpl-1.0&quot;&gt;GNU General Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-2.0&lt;/code&gt; - &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&quot;&gt;GNU General Public License 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-2.0-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GPL-2.0-or-later.html&quot;&gt;GNU General Public License v2.0 or later&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-3.0-only&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GPL-3.0-only.html&quot;&gt;GNU General Public License v3.0 only&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-3.0-or-later&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/GPL-3.0-or-later.html&quot;&gt;GNU General Public License v3.0 or later&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GPL-3.0&lt;/code&gt; - &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;GNU General Public License 3.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IPL-1.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/IPL-1.0&quot;&gt;IBM Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ISC&lt;/code&gt; - &lt;a href=&quot;https://www.isc.org/downloads/software-support-policy/isc-license/&quot;&gt;Internet Systems Consortium License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Lil Licence v1&lt;/code&gt; - &lt;a href=&quot;https://www.lillicense.org/v1.html&quot;&gt;The Lil License v1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LGPL-2.1&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/LGPL-2.1&quot;&gt;Lesser General Public License 2.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LGPL-3.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/LGPL-3.0&quot;&gt;Lesser General Public License 3.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MIT&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MPL-1.1&lt;/code&gt; - &lt;a href=&quot;https://www.mozilla.org/media/MPL/1.1/index.txt&quot;&gt;Mozilla Public License Version 1.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MPL-2.0&lt;/code&gt; - &lt;a href=&quot;https://www.mozilla.org/MPL/2.0/index.txt&quot;&gt;Mozilla Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OSL-3.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/osl-3.0.php&quot;&gt;Open Software License 3.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Other&lt;/code&gt; - Non-standard license, usually unique to the project itself.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Sendmail&lt;/code&gt; - &lt;a href=&quot;https://www.sendmail.com/pdfs/open_source/sendmail_license.pdf&quot;&gt;Sendmail License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SSPL-1.0&lt;/code&gt; - &lt;a href=&quot;https://spdx.org/licenses/SSPL-1.0.html&quot;&gt;Server Side Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Unlicense&lt;/code&gt; - &lt;a href=&quot;https://unlicense.org/&quot;&gt;The Unlicense&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;WTFPL&lt;/code&gt; - &lt;a href=&quot;http://www.wtfpl.net/about/&quot;&gt;Do What the Fuck You Want to Public License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Zlib&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/Zlib&quot;&gt;Zlib/libpng License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ZPL-1.2&lt;/code&gt; - &lt;a href=&quot;http://zpl.pub/page/zplv12&quot;&gt;Zope Public License 1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ZPL-2.0&lt;/code&gt; - &lt;a href=&quot;https://opensource.org/licenses/ZPL-2.0&quot;&gt;Zope Public License 2.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;External Links&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/#&quot;&gt;&lt;code&gt;^ back to top ^&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0xnr/awesome-bigdata&quot;&gt;Awesome Big Data&lt;/a&gt; - Curated list of awesome big data frameworks, resources and other awesomeness.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awesomedata/awesome-public-datasets&quot;&gt;Awesome Public Datasets&lt;/a&gt; - List of high quality, topic-centric public data sources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awesome-foss/awesome-sysadmin&quot;&gt;Awesome Sysadmin&lt;/a&gt; - Curated list of amazingly awesome open source sysadmin resources.&lt;/li&gt; 
 &lt;li&gt;Lists of software aimed at privacy and decentralization in some form: &lt;a href=&quot;https://prism-break.org/en/&quot;&gt;PRISM Break&lt;/a&gt;, &lt;a href=&quot;https://www.privacytools.io/&quot;&gt;privacytools.io&lt;/a&gt;, &lt;a href=&quot;https://redecentralize.github.io/alternative-internet/&quot;&gt;Alternative Internet&lt;/a&gt;, &lt;a href=&quot;https://libreprojects.net/&quot;&gt;Libre Projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://easyindie.app&quot;&gt;Easy Indie App&lt;/a&gt; - Apps that can be self-hosted in a few clicks.&lt;/li&gt; 
 &lt;li&gt;Dynamic Domain Name services: &lt;a href=&quot;https://freedns.afraid.org/domain/registry/&quot;&gt;Afraid.org&lt;/a&gt;, &lt;a href=&quot;https://pagekite.net/&quot;&gt;Pagekite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Communities/forums: &lt;a href=&quot;https://www.reddit.com/r/selfhosted&quot;&gt;/r/selfhosted&lt;/a&gt;, &lt;a href=&quot;https://indieweb.org/&quot;&gt;IndieWeb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mirrors: &lt;a href=&quot;https://github.com/awesome-selfhosted/awesome-selfhosted&quot;&gt;GitHub.com&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com/awesome-selfhosted/awesome-selfhosted&quot;&gt;Gitlab.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.trackawesomelist.com/awesome-selfhosted/awesome-selfhosted/&quot;&gt;Track Awesome Selfhosted&lt;/a&gt; - Get the latest updates of awesome-selfhosted.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributing guidelines can be found in &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/.github/CONTRIBUTING.md&quot;&gt;.github/CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;The list of authors can be found in &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/AUTHORS.md&quot;&gt;AUTHORS.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This list is under the &lt;a href=&quot;https://raw.githubusercontent.com/awesome-selfhosted/awesome-selfhosted/master/LICENSE&quot;&gt;Creative Commons Attribution-ShareAlike 3.0 Unported&lt;/a&gt; License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>auth0/node-jsonwebtoken</title>
      <link>https://github.com/auth0/node-jsonwebtoken</link>
      <description>&lt;p&gt;JsonWebToken implementation for node.js http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jsonwebtoken&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Dependency&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;http://travis-ci.org/auth0/node-jsonwebtoken&quot;&gt;&lt;img src=&quot;https://secure.travis-ci.org/auth0/node-jsonwebtoken.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://david-dm.org/auth0/node-jsonwebtoken&quot;&gt;&lt;img src=&quot;https://david-dm.org/auth0/node-jsonwebtoken.svg?sanitize=true&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;An implementation of &lt;a href=&quot;https://tools.ietf.org/html/rfc7519&quot;&gt;JSON Web Tokens&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This was developed against &lt;code&gt;draft-ietf-oauth-json-web-token-08&lt;/code&gt;. It makes use of &lt;a href=&quot;https://github.com/brianloveswords/node-jws&quot;&gt;node-jws&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Install&lt;/h1&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install jsonwebtoken
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Migration notes&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/auth0/node-jsonwebtoken/wiki/Migration-Notes:-v7-to-v8&quot;&gt;From v7 to v8&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;h3&gt;jwt.sign(payload, secretOrPrivateKey, [options, callback])&lt;/h3&gt; 
&lt;p&gt;(Asynchronous) If a callback is supplied, the callback is called with the &lt;code&gt;err&lt;/code&gt; or the JWT.&lt;/p&gt; 
&lt;p&gt;(Synchronous) Returns the JsonWebToken as string&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;payload&lt;/code&gt; could be an object literal, buffer or string representing valid JSON.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Please &lt;em&gt;note&lt;/em&gt; that&lt;/strong&gt; &lt;code&gt;exp&lt;/code&gt; or any other claim is only set if the payload is an object literal. Buffer or string payloads are not checked for JSON validity.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If &lt;code&gt;payload&lt;/code&gt; is not a buffer or a string, it will be coerced into a string using &lt;code&gt;JSON.stringify&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;secretOrPrivateKey&lt;/code&gt; is a string, buffer, or object containing either the secret for HMAC algorithms or the PEM encoded private key for RSA and ECDSA. In case of a private key with passphrase an object &lt;code&gt;{ key, passphrase }&lt;/code&gt; can be used (based on &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_sign_sign_private_key_output_format&quot;&gt;crypto documentation&lt;/a&gt;), in this case be sure you pass the &lt;code&gt;algorithm&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;options&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;algorithm&lt;/code&gt; (default: &lt;code&gt;HS256&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;expiresIn&lt;/code&gt;: expressed in seconds or a string describing a time span &lt;a href=&quot;https://github.com/vercel/ms&quot;&gt;vercel/ms&lt;/a&gt;. 
  &lt;blockquote&gt; 
   &lt;p&gt;Eg: &lt;code&gt;60&lt;/code&gt;, &lt;code&gt;&quot;2 days&quot;&lt;/code&gt;, &lt;code&gt;&quot;10h&quot;&lt;/code&gt;, &lt;code&gt;&quot;7d&quot;&lt;/code&gt;. A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default (&lt;code&gt;&quot;120&quot;&lt;/code&gt; is equal to &lt;code&gt;&quot;120ms&quot;&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notBefore&lt;/code&gt;: expressed in seconds or a string describing a time span &lt;a href=&quot;https://github.com/vercel/ms&quot;&gt;vercel/ms&lt;/a&gt;. 
  &lt;blockquote&gt; 
   &lt;p&gt;Eg: &lt;code&gt;60&lt;/code&gt;, &lt;code&gt;&quot;2 days&quot;&lt;/code&gt;, &lt;code&gt;&quot;10h&quot;&lt;/code&gt;, &lt;code&gt;&quot;7d&quot;&lt;/code&gt;. A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default (&lt;code&gt;&quot;120&quot;&lt;/code&gt; is equal to &lt;code&gt;&quot;120ms&quot;&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;audience&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;issuer&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jwtid&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;subject&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;noTimestamp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;header&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keyid&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mutatePayload&lt;/code&gt;: if true, the sign function will modify the payload object directly. This is useful if you need a raw reference to the payload after claims have been applied to it but before it has been encoded into a token.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;There are no default values for &lt;code&gt;expiresIn&lt;/code&gt;, &lt;code&gt;notBefore&lt;/code&gt;, &lt;code&gt;audience&lt;/code&gt;, &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;issuer&lt;/code&gt;. These claims can also be provided in the payload directly with &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;nbf&lt;/code&gt;, &lt;code&gt;aud&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt; and &lt;code&gt;iss&lt;/code&gt; respectively, but you &lt;strong&gt;&lt;em&gt;can&#39;t&lt;/em&gt;&lt;/strong&gt; include in both places.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Remember that &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;nbf&lt;/code&gt; and &lt;code&gt;iat&lt;/code&gt; are &lt;strong&gt;NumericDate&lt;/strong&gt;, see related &lt;a href=&quot;https://raw.githubusercontent.com/auth0/node-jsonwebtoken/master/#token-expiration-exp-claim&quot;&gt;Token Expiration (exp claim)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The header can be customized via the &lt;code&gt;options.header&lt;/code&gt; object.&lt;/p&gt; 
&lt;p&gt;Generated jwts will include an &lt;code&gt;iat&lt;/code&gt; (issued at) claim by default unless &lt;code&gt;noTimestamp&lt;/code&gt; is specified. If &lt;code&gt;iat&lt;/code&gt; is inserted in the payload, it will be used instead of the real timestamp for calculating other things like &lt;code&gt;exp&lt;/code&gt; given a timespan in &lt;code&gt;options.expiresIn&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Synchronous Sign with default (HMAC SHA256)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var jwt = require(&#39;jsonwebtoken&#39;);
var token = jwt.sign({ foo: &#39;bar&#39; }, &#39;shhhhh&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Synchronous Sign with RSA SHA256&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// sign with RSA SHA256
var privateKey = fs.readFileSync(&#39;private.key&#39;);
var token = jwt.sign({ foo: &#39;bar&#39; }, privateKey, { algorithm: &#39;RS256&#39; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Sign asynchronously&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;jwt.sign({ foo: &#39;bar&#39; }, privateKey, { algorithm: &#39;RS256&#39; }, function(err, token) {
  console.log(token);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Backdate a jwt 30 seconds&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var older_token = jwt.sign({ foo: &#39;bar&#39;, iat: Math.floor(Date.now() / 1000) - 30 }, &#39;shhhhh&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Token Expiration (exp claim)&lt;/h4&gt; 
&lt;p&gt;The standard for JWT defines an &lt;code&gt;exp&lt;/code&gt; claim for expiration. The expiration is represented as a &lt;strong&gt;NumericDate&lt;/strong&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A JSON numeric value representing the number of seconds from 1970-01-01T00:00:00Z UTC until the specified UTC date/time, ignoring leap seconds. This is equivalent to the IEEE Std 1003.1, 2013 Edition [POSIX.1] definition &quot;Seconds Since the Epoch&quot;, in which each day is accounted for by exactly 86400 seconds, other than that non-integer values can be represented. See RFC 3339 [RFC3339] for details regarding date/times in general and UTC in particular.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This means that the &lt;code&gt;exp&lt;/code&gt; field should contain the number of seconds since the epoch.&lt;/p&gt; 
&lt;p&gt;Signing a token with 1 hour of expiration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;jwt.sign({
  exp: Math.floor(Date.now() / 1000) + (60 * 60),
  data: &#39;foobar&#39;
}, &#39;secret&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another way to generate a token like this with this library is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;jwt.sign({
  data: &#39;foobar&#39;
}, &#39;secret&#39;, { expiresIn: 60 * 60 });

//or even better:

jwt.sign({
  data: &#39;foobar&#39;
}, &#39;secret&#39;, { expiresIn: &#39;1h&#39; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;jwt.verify(token, secretOrPublicKey, [options, callback])&lt;/h3&gt; 
&lt;p&gt;(Asynchronous) If a callback is supplied, function acts asynchronously. The callback is called with the decoded payload if the signature is valid and optional expiration, audience, or issuer are valid. If not, it will be called with the error.&lt;/p&gt; 
&lt;p&gt;(Synchronous) If a callback is not supplied, function acts synchronously. Returns the payload decoded if the signature is valid and optional expiration, audience, or issuer are valid. If not, it will throw the error.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; When the token comes from an untrusted source (e.g. user input or external requests), the returned decoded payload should be treated like any other user input; please make sure to sanitize and only work with properties that are expected&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;token&lt;/code&gt; is the JsonWebToken string&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;secretOrPublicKey&lt;/code&gt; is a string or buffer containing either the secret for HMAC algorithms, or the PEM encoded public key for RSA and ECDSA. If &lt;code&gt;jwt.verify&lt;/code&gt; is called asynchronous, &lt;code&gt;secretOrPublicKey&lt;/code&gt; can be a function that should fetch the secret or public key. See below for a detailed example&lt;/p&gt; 
&lt;p&gt;As mentioned in &lt;a href=&quot;https://github.com/auth0/node-jsonwebtoken/issues/208#issuecomment-231861138&quot;&gt;this comment&lt;/a&gt;, there are other libraries that expect base64 encoded secrets (random bytes encoded using base64), if that is your case you can pass &lt;code&gt;Buffer.from(secret, &#39;base64&#39;)&lt;/code&gt;, by doing this the secret will be decoded using base64 and the token verification will use the original random bytes.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;options&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;algorithms&lt;/code&gt;: List of strings with the names of the allowed algorithms. For instance, &lt;code&gt;[&quot;HS256&quot;, &quot;HS384&quot;]&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;audience&lt;/code&gt;: if you want to check audience (&lt;code&gt;aud&lt;/code&gt;), provide a value here. The audience can be checked against a string, a regular expression or a list of strings and/or regular expressions. 
  &lt;blockquote&gt; 
   &lt;p&gt;Eg: &lt;code&gt;&quot;urn:foo&quot;&lt;/code&gt;, &lt;code&gt;/urn:f[o]{2}/&lt;/code&gt;, &lt;code&gt;[/urn:f[o]{2}/, &quot;urn:bar&quot;]&lt;/code&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;complete&lt;/code&gt;: return an object with the decoded &lt;code&gt;{ payload, header, signature }&lt;/code&gt; instead of only the usual content of the payload.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;issuer&lt;/code&gt; (optional): string or array of strings of valid values for the &lt;code&gt;iss&lt;/code&gt; field.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jwtid&lt;/code&gt; (optional): if you want to check JWT ID (&lt;code&gt;jti&lt;/code&gt;), provide a string value here.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ignoreExpiration&lt;/code&gt;: if &lt;code&gt;true&lt;/code&gt; do not validate the expiration of the token.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ignoreNotBefore&lt;/code&gt;...&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;subject&lt;/code&gt;: if you want to check subject (&lt;code&gt;sub&lt;/code&gt;), provide a value here&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;clockTolerance&lt;/code&gt;: number of seconds to tolerate when checking the &lt;code&gt;nbf&lt;/code&gt; and &lt;code&gt;exp&lt;/code&gt; claims, to deal with small clock differences among different servers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxAge&lt;/code&gt;: the maximum allowed age for tokens to still be valid. It is expressed in seconds or a string describing a time span &lt;a href=&quot;https://github.com/vercel/ms&quot;&gt;vercel/ms&lt;/a&gt;. 
  &lt;blockquote&gt; 
   &lt;p&gt;Eg: &lt;code&gt;1000&lt;/code&gt;, &lt;code&gt;&quot;2 days&quot;&lt;/code&gt;, &lt;code&gt;&quot;10h&quot;&lt;/code&gt;, &lt;code&gt;&quot;7d&quot;&lt;/code&gt;. A numeric value is interpreted as a seconds count. If you use a string be sure you provide the time units (days, hours, etc), otherwise milliseconds unit is used by default (&lt;code&gt;&quot;120&quot;&lt;/code&gt; is equal to &lt;code&gt;&quot;120ms&quot;&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;clockTimestamp&lt;/code&gt;: the time in seconds that should be used as the current time for all necessary comparisons.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: if you want to check &lt;code&gt;nonce&lt;/code&gt; claim, provide a string value here. It is used on Open ID for the ID Tokens. (&lt;a href=&quot;https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes&quot;&gt;Open ID implementation notes&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// verify a token symmetric - synchronous
var decoded = jwt.verify(token, &#39;shhhhh&#39;);
console.log(decoded.foo) // bar

// verify a token symmetric
jwt.verify(token, &#39;shhhhh&#39;, function(err, decoded) {
  console.log(decoded.foo) // bar
});

// invalid token - synchronous
try {
  var decoded = jwt.verify(token, &#39;wrong-secret&#39;);
} catch(err) {
  // err
}

// invalid token
jwt.verify(token, &#39;wrong-secret&#39;, function(err, decoded) {
  // err
  // decoded undefined
});

// verify a token asymmetric
var cert = fs.readFileSync(&#39;public.pem&#39;);  // get public key
jwt.verify(token, cert, function(err, decoded) {
  console.log(decoded.foo) // bar
});

// verify audience
var cert = fs.readFileSync(&#39;public.pem&#39;);  // get public key
jwt.verify(token, cert, { audience: &#39;urn:foo&#39; }, function(err, decoded) {
  // if audience mismatch, err == invalid audience
});

// verify issuer
var cert = fs.readFileSync(&#39;public.pem&#39;);  // get public key
jwt.verify(token, cert, { audience: &#39;urn:foo&#39;, issuer: &#39;urn:issuer&#39; }, function(err, decoded) {
  // if issuer mismatch, err == invalid issuer
});

// verify jwt id
var cert = fs.readFileSync(&#39;public.pem&#39;);  // get public key
jwt.verify(token, cert, { audience: &#39;urn:foo&#39;, issuer: &#39;urn:issuer&#39;, jwtid: &#39;jwtid&#39; }, function(err, decoded) {
  // if jwt id mismatch, err == invalid jwt id
});

// verify subject
var cert = fs.readFileSync(&#39;public.pem&#39;);  // get public key
jwt.verify(token, cert, { audience: &#39;urn:foo&#39;, issuer: &#39;urn:issuer&#39;, jwtid: &#39;jwtid&#39;, subject: &#39;subject&#39; }, function(err, decoded) {
  // if subject mismatch, err == invalid subject
});

// alg mismatch
var cert = fs.readFileSync(&#39;public.pem&#39;); // get public key
jwt.verify(token, cert, { algorithms: [&#39;RS256&#39;] }, function (err, payload) {
  // if token alg != RS256,  err == invalid signature
});

// Verify using getKey callback
// Example uses https://github.com/auth0/node-jwks-rsa as a way to fetch the keys.
var jwksClient = require(&#39;jwks-rsa&#39;);
var client = jwksClient({
  jwksUri: &#39;https://sandrino.auth0.com/.well-known/jwks.json&#39;
});
function getKey(header, callback){
  client.getSigningKey(header.kid, function(err, key) {
    var signingKey = key.publicKey || key.rsaPublicKey;
    callback(null, signingKey);
  });
}

jwt.verify(token, getKey, options, function(err, decoded) {
  console.log(decoded.foo) // bar
});

&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;em&gt;&lt;/em&gt;Need to peek into a JWT without verifying it? (Click to expand)&lt;/summary&gt; 
 &lt;h3&gt;jwt.decode(token [, options])&lt;/h3&gt; 
 &lt;p&gt;(Synchronous) Returns the decoded payload without verifying if the signature is valid.&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; This will &lt;strong&gt;not&lt;/strong&gt; verify whether the signature is valid. You should &lt;strong&gt;not&lt;/strong&gt; use this for untrusted messages. You most likely want to use &lt;code&gt;jwt.verify&lt;/code&gt; instead.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; When the token comes from an untrusted source (e.g. user input or external request), the returned decoded payload should be treated like any other user input; please make sure to sanitize and only work with properties that are expected&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&lt;code&gt;token&lt;/code&gt; is the JsonWebToken string&lt;/p&gt; 
 &lt;p&gt;&lt;code&gt;options&lt;/code&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;json&lt;/code&gt;: force JSON.parse on the payload even if the header doesn&#39;t contain &lt;code&gt;&quot;typ&quot;:&quot;JWT&quot;&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;complete&lt;/code&gt;: return an object with the decoded payload and header.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Example&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// get the decoded payload ignoring signature, no secretOrPrivateKey needed
var decoded = jwt.decode(token);

// get the decoded payload and header
var decoded = jwt.decode(token, {complete: true});
console.log(decoded.header);
console.log(decoded.payload)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Errors &amp;amp; Codes&lt;/h2&gt; 
&lt;p&gt;Possible thrown errors during verification. Error is the first argument of the verification callback.&lt;/p&gt; 
&lt;h3&gt;TokenExpiredError&lt;/h3&gt; 
&lt;p&gt;Thrown error if the token is expired.&lt;/p&gt; 
&lt;p&gt;Error object:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;name: &#39;TokenExpiredError&#39;&lt;/li&gt; 
 &lt;li&gt;message: &#39;jwt expired&#39;&lt;/li&gt; 
 &lt;li&gt;expiredAt: [ExpDate]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;jwt.verify(token, &#39;shhhhh&#39;, function(err, decoded) {
  if (err) {
    /*
      err = {
        name: &#39;TokenExpiredError&#39;,
        message: &#39;jwt expired&#39;,
        expiredAt: 1408621000
      }
    */
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JsonWebTokenError&lt;/h3&gt; 
&lt;p&gt;Error object:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;name: &#39;JsonWebTokenError&#39;&lt;/li&gt; 
 &lt;li&gt;message: 
  &lt;ul&gt; 
   &lt;li&gt;&#39;invalid token&#39; - the header or payload could not be parsed&lt;/li&gt; 
   &lt;li&gt;&#39;jwt malformed&#39; - the token does not have three components (delimited by a &lt;code&gt;.&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&#39;jwt signature is required&#39;&lt;/li&gt; 
   &lt;li&gt;&#39;invalid signature&#39;&lt;/li&gt; 
   &lt;li&gt;&#39;jwt audience invalid. expected: [OPTIONS AUDIENCE]&#39;&lt;/li&gt; 
   &lt;li&gt;&#39;jwt issuer invalid. expected: [OPTIONS ISSUER]&#39;&lt;/li&gt; 
   &lt;li&gt;&#39;jwt id invalid. expected: [OPTIONS JWT ID]&#39;&lt;/li&gt; 
   &lt;li&gt;&#39;jwt subject invalid. expected: [OPTIONS SUBJECT]&#39;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;jwt.verify(token, &#39;shhhhh&#39;, function(err, decoded) {
  if (err) {
    /*
      err = {
        name: &#39;JsonWebTokenError&#39;,
        message: &#39;jwt malformed&#39;
      }
    */
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NotBeforeError&lt;/h3&gt; 
&lt;p&gt;Thrown if current time is before the nbf claim.&lt;/p&gt; 
&lt;p&gt;Error object:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;name: &#39;NotBeforeError&#39;&lt;/li&gt; 
 &lt;li&gt;message: &#39;jwt not active&#39;&lt;/li&gt; 
 &lt;li&gt;date: 2018-10-04T16:10:44.000Z&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;jwt.verify(token, &#39;shhhhh&#39;, function(err, decoded) {
  if (err) {
    /*
      err = {
        name: &#39;NotBeforeError&#39;,
        message: &#39;jwt not active&#39;,
        date: 2018-10-04T16:10:44.000Z
      }
    */
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Algorithms supported&lt;/h2&gt; 
&lt;p&gt;Array of supported algorithms. The following algorithms are currently supported.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;alg Parameter Value&lt;/th&gt; 
   &lt;th&gt;Digital Signature or MAC Algorithm&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HS256&lt;/td&gt; 
   &lt;td&gt;HMAC using SHA-256 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HS384&lt;/td&gt; 
   &lt;td&gt;HMAC using SHA-384 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HS512&lt;/td&gt; 
   &lt;td&gt;HMAC using SHA-512 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RS256&lt;/td&gt; 
   &lt;td&gt;RSASSA-PKCS1-v1_5 using SHA-256 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RS384&lt;/td&gt; 
   &lt;td&gt;RSASSA-PKCS1-v1_5 using SHA-384 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RS512&lt;/td&gt; 
   &lt;td&gt;RSASSA-PKCS1-v1_5 using SHA-512 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PS256&lt;/td&gt; 
   &lt;td&gt;RSASSA-PSS using SHA-256 hash algorithm (only node ^6.12.0 OR &amp;gt;=8.0.0)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PS384&lt;/td&gt; 
   &lt;td&gt;RSASSA-PSS using SHA-384 hash algorithm (only node ^6.12.0 OR &amp;gt;=8.0.0)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PS512&lt;/td&gt; 
   &lt;td&gt;RSASSA-PSS using SHA-512 hash algorithm (only node ^6.12.0 OR &amp;gt;=8.0.0)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ES256&lt;/td&gt; 
   &lt;td&gt;ECDSA using P-256 curve and SHA-256 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ES384&lt;/td&gt; 
   &lt;td&gt;ECDSA using P-384 curve and SHA-384 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ES512&lt;/td&gt; 
   &lt;td&gt;ECDSA using P-521 curve and SHA-512 hash algorithm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;none&lt;/td&gt; 
   &lt;td&gt;No digital signature or MAC value included&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Refreshing JWTs&lt;/h2&gt; 
&lt;p&gt;First of all, we recommend you to think carefully if auto-refreshing a JWT will not introduce any vulnerability in your system.&lt;/p&gt; 
&lt;p&gt;We are not comfortable including this as part of the library, however, you can take a look at &lt;a href=&quot;https://gist.github.com/ziluvatar/a3feb505c4c0ec37059054537b38fc48&quot;&gt;this example&lt;/a&gt; to show how this could be accomplished. Apart from that example there are &lt;a href=&quot;https://github.com/auth0/node-jsonwebtoken/issues/122&quot;&gt;an issue&lt;/a&gt; and &lt;a href=&quot;https://github.com/auth0/node-jsonwebtoken/pull/172&quot;&gt;a pull request&lt;/a&gt; to get more knowledge about this topic.&lt;/p&gt; 
&lt;h1&gt;TODO&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;X.509 certificate chain is not checked&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Issue Reporting&lt;/h2&gt; 
&lt;p&gt;If you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The &lt;a href=&quot;https://auth0.com/whitehat&quot;&gt;Responsible Disclosure Program&lt;/a&gt; details the procedure for disclosing security issues.&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://auth0.com&quot;&gt;Auth0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT license. See the &lt;a href=&quot;https://raw.githubusercontent.com/auth0/node-jsonwebtoken/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for more info.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;üíØ Curated interview preparation materials for busy engineers&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/website/static/img/logo.svg?sanitize=true&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready to Code&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;em&gt;Credits: &lt;a href=&quot;https://dribbble.com/shots/3831443-Tech-Interview-Handbook&quot;&gt;Illustration&lt;/a&gt; by &lt;a href=&quot;https://dribbble.com/leftaligned&quot;&gt;@leftaligned&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot;&gt;Follow us on Facebook&lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt; &lt;a href=&quot;https://simplify.jobs/?utm_source=github&amp;amp;utm_medium=tech_interview_handbook&quot;&gt; &lt;strong&gt;Applying to jobs or internships?&lt;/strong&gt; &lt;br&gt; Autofill all your applications in a single click. &lt;br&gt; &lt;/a&gt;&lt;/p&gt;
 &lt;div&gt;
  &lt;a href=&quot;https://simplify.jobs/?utm_source=github&amp;amp;utm_medium=tech_interview_handbook&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/dpeo4xcnc/image/upload/v1637058958/simplify_banner.png&quot; width=&quot;450&quot; alt=&quot;Simplify&quot;&gt; &lt;/a&gt;
 &lt;/div&gt;
 &lt;a href=&quot;https://simplify.jobs/?utm_source=github&amp;amp;utm_medium=tech_interview_handbook&quot;&gt; &lt;/a&gt; 
 &lt;sub&gt;&lt;i&gt;Stop manually re-entering your information. Simplify‚Äôs extension helps you autofill job applications on millions of sites.&lt;/i&gt;&lt;/sub&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;No one has time to do a few hundred LeetCode questions. Here are &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by the author of the &lt;a href=&quot;https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU&quot;&gt;Blind 75 List&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/coding-round-overview&quot;&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/cheatsheet&quot;&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/algorithms/introduction&quot;&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/interview-formats&quot;&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/behavioral-questions&quot;&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/questions-to-ask&quot;&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/resume&quot;&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendinterviewhandbook.com&quot;&gt;Front-End Interview preparation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;em&gt;practical&lt;/em&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;üí° Looking for high-quality interview courses? &lt;a href=&quot;https://www.educative.io/explore?search_string=interview&amp;amp;aff=x23W&quot;&gt;Educative&lt;/a&gt; offers a ton of great courses to improve your interview game üí°&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. üòé&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front-end-related content has been moved to a separate website - &lt;a href=&quot;https://frontendinterviewhandbook.com&quot;&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Looking for System Design content?&lt;/h2&gt; 
&lt;p&gt;We&#39;re still working on System Design content. In the meanwhile, check out Educative&#39;s &lt;a href=&quot;https://www.educative.io/courses/grokking-the-system-design-interview?aff=x23W&quot;&gt;Grokking the System Design Interview course&lt;/a&gt;, which in our opinion is one of the most useful resources for getting started on system design interviews preparation.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://github.com/facebook/docusaurus&quot;&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href=&quot;https://techinterviewhandbook.org&quot;&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Online one-click setup for contributing&lt;/h3&gt; 
&lt;p&gt;You can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the tech-interview-handbook repo.&lt;/li&gt; 
 &lt;li&gt;install the dependencies.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So that you can start straight away.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! üôè [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun&quot;&gt;Yangshun Tay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louietyj&quot;&gt;Louie Tan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>parallax/jsPDF</title>
      <link>https://github.com/parallax/jsPDF</link>
      <description>&lt;p&gt;Client-side JavaScript PDF generation for everyone.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://parall.ax/parallax-2016/img/svg/jspdf-logo.svg?sanitize=true&quot; alt=&quot;jsPDF&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/MrRio/jsPDF/actions/workflows/continuous-integration.yml/badge.svg?sanitize=true&quot; alt=&quot;Continous Integration&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/feed&quot;&gt;&lt;img src=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/gpa.svg?sanitize=true&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/coverage&quot;&gt;&lt;img src=&quot;https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/coverage.svg?sanitize=true&quot; alt=&quot;Test Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MrRio/jsPDF/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/MrRio/jsPDF.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/MrRio/jsPDF/alerts/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/g/MrRio/jsPDF.svg?logo=lgtm&amp;amp;logoWidth=18&quot; alt=&quot;Total alerts&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/MrRio/jsPDF/context:javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/grade/javascript/g/MrRio/jsPDF.svg?logo=lgtm&amp;amp;logoWidth=18&quot; alt=&quot;Language grade: JavaScript&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/from-referrer/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot; alt=&quot;Gitpod ready-to-code&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library to generate PDFs in JavaScript.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can &lt;a href=&quot;http://twitter.com/MrRio&quot;&gt;catch me on twitter&lt;/a&gt;: &lt;a href=&quot;http://twitter.com/MrRio&quot;&gt;@MrRio&lt;/a&gt; or head over to &lt;a href=&quot;http://parall.ax&quot;&gt;my company&#39;s website&lt;/a&gt; for consultancy.&lt;/p&gt; 
&lt;p&gt;jsPDF is now co-maintained by &lt;a href=&quot;https://www.yworks.com/&quot;&gt;yWorks - the diagramming experts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;http://raw.githack.com/MrRio/jsPDF/master/&quot;&gt;Live Demo&lt;/a&gt; | &lt;a href=&quot;http://raw.githack.com/MrRio/jsPDF/master/docs/&quot;&gt;Documentation&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Recommended: get jsPDF from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install jspdf --save
# or
yarn add jspdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, load it from a CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.0/jspdf.umd.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or always get latest version via &lt;a href=&quot;https://unpkg.com/browse/jspdf/&quot;&gt;unpkg&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;dist&lt;/code&gt; folder of this package contains different kinds of files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.es.*.js&lt;/strong&gt;: Modern ES2015 module format.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.node.*.js&lt;/strong&gt;: For running in Node. Uses file operations for loading/saving files instead of browser APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;jspdf.umd.*.js&lt;/strong&gt;: UMD module format. For AMD or script-tag loading.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;polyfills*.js&lt;/strong&gt;: Required polyfills for older browsers like Internet Explorer. The es variant simply imports all required polyfills from &lt;code&gt;core-js&lt;/code&gt;, the umd variant is self-contained.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Usually it is not necessary to specify the exact file in the import statement. Build tools or Node automatically figure out the right file, so importing &quot;jspdf&quot; is enough.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Then you&#39;re ready to start making your document:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { jsPDF } from &quot;jspdf&quot;;

// Default export is a4 paper, portrait, using millimeters for units
const doc = new jsPDF();

doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to change the paper size, orientation, or units, you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Landscape export, 2√ó4 inches
const doc = new jsPDF({
  orientation: &quot;landscape&quot;,
  unit: &quot;in&quot;,
  format: [4, 2]
});

doc.text(&quot;Hello world!&quot;, 1, 1);
doc.save(&quot;two-by-four.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running in Node.js&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const { jsPDF } = require(&quot;jspdf&quot;); // will automatically load the node version

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;); // will save the file in the current working directory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other Module Formats&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;AMD&lt;/b&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;require([&quot;jspdf&quot;], ({ jsPDF }) =&amp;gt; {
  const doc = new jsPDF();
  doc.text(&quot;Hello world!&quot;, 10, 10);
  doc.save(&quot;a4.pdf&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Globals&lt;/b&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { jsPDF } = window.jspdf;

const doc = new jsPDF();
doc.text(&quot;Hello world!&quot;, 10, 10);
doc.save(&quot;a4.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Optional dependencies&lt;/h3&gt; 
&lt;p&gt;Some functions of jsPDF require optional dependencies. E.g. the &lt;code&gt;html&lt;/code&gt; method, which depends on &lt;code&gt;html2canvas&lt;/code&gt; and, when supplied with a string HTML document, &lt;code&gt;dompurify&lt;/code&gt;. JsPDF loads them dynamically when required (using the respective module format, e.g. dynamic imports). Build tools like Webpack will automatically create separate chunks for each of the optional dependencies. If your application does not use any of the optional dependencies, you can prevent Webpack from generating the chunks by defining them as external dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// webpack.config.js
module.exports = {
  // ...
  externals: {
    // only define the dependencies you are NOT using as externals!
    canvg: &quot;canvg&quot;,
    html2canvas: &quot;html2canvas&quot;,
    dompurify: &quot;dompurify&quot;
  }
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;strong&gt;Vue CLI&lt;/strong&gt; projects, externals can be defined via the &lt;a href=&quot;https://cli.vuejs.org/config/#configurewebpack&quot;&gt;configureWebpack&lt;/a&gt; or &lt;a href=&quot;https://cli.vuejs.org/config/#chainwebpack&quot;&gt;chainWebpack&lt;/a&gt; properties of the &lt;code&gt;vue.config.js&lt;/code&gt; file (needs to be created, first, in fresh projects).&lt;/p&gt; 
&lt;p&gt;In &lt;strong&gt;Angular&lt;/strong&gt; projects, externals can be defined using &lt;a href=&quot;https://github.com/just-jeb/angular-builders/tree/master/packages/custom-webpack&quot;&gt;custom webpack builders&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In &lt;strong&gt;React&lt;/strong&gt; (&lt;code&gt;create-react-app&lt;/code&gt;) projects, externals can be defined by either using &lt;a href=&quot;https://github.com/timarney/react-app-rewired&quot;&gt;react-app-rewired&lt;/a&gt; or ejecting.&lt;/p&gt; 
&lt;h3&gt;TypeScript/Angular/Webpack/React/etc. Configuration:&lt;/h3&gt; 
&lt;p&gt;jsPDF can be imported just like any other 3rd party library. This works with all major toolkits and frameworks. jsPDF also offers a typings file for TypeScript projects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { jsPDF } from &quot;jspdf&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can add jsPDF to your meteor-project as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;meteor add jspdf:core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Polyfills&lt;/h3&gt; 
&lt;p&gt;jsPDF requires modern browser APIs in order to function. To use jsPDF in older browsers like Internet Explorer, polyfills are required. You can load all required polyfills as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &quot;jspdf/dist/polyfills.es.js&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can load the prebundled polyfill file. This is not recommended, since you might end up loading polyfills multiple times. Might still be nifty for small applications or quick POCs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.0/polyfills.umd.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Use of Unicode Characters / UTF-8:&lt;/h2&gt; 
&lt;p&gt;The 14 standard fonts in PDF are limited to the ASCII-codepage. If you want to use UTF-8 you have to integrate a custom font, which provides the needed glyphs. jsPDF supports .ttf-files. So if you want to have for example Chinese text in your pdf, your font has to have the necessary Chinese glyphs. So, check if your font supports the wanted glyphs or else it will show garbled characters instead of the right text.&lt;/p&gt; 
&lt;p&gt;To add the font to jsPDF use our fontconverter in &lt;a href=&quot;https://rawgit.com/MrRio/jsPDF/master/fontconverter/fontconverter.html&quot;&gt;/fontconverter/fontconverter.html&lt;/a&gt;. The fontconverter will create a js-file with the content of the provided ttf-file as base64 encoded string and additional code for jsPDF. You just have to add this generated js-File to your project. You are then ready to go to use setFont-method in your code and write your UTF-8 encoded text.&lt;/p&gt; 
&lt;p&gt;Alternatively you can just load the content of the *.ttf file as a binary string using &lt;code&gt;fetch&lt;/code&gt; or &lt;code&gt;XMLHttpRequest&lt;/code&gt; and add the font to the PDF file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const doc = new jsPDF();

const myFont = ... // load the *.ttf font file as binary string

// add the font to jsPDF
doc.addFileToVFS(&quot;MyFont.ttf&quot;, myFont);
doc.addFont(&quot;MyFont.ttf&quot;, &quot;MyFont&quot;, &quot;normal&quot;);
doc.setFont(&quot;MyFont&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced Functionality&lt;/h2&gt; 
&lt;p&gt;Since the merge with the &lt;a href=&quot;https://github.com/yWorks/jsPDF&quot;&gt;yWorks fork&lt;/a&gt; there are a lot of new features. However, some of them are API breaking, which is why there is an API-switch between two API modes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In &quot;compat&quot; API mode, jsPDF has the same API as MrRio&#39;s original version, which means full compatibility with plugins. However, some advanced features like transformation matrices and patterns won&#39;t work. This is the default mode.&lt;/li&gt; 
 &lt;li&gt;In &quot;advanced&quot; API mode, jsPDF has the API you&#39;re used from the yWorks-fork version. This means the availability of all advanced features like patterns, FormObjects, and transformation matrices.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can switch between the two modes by calling&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doc.advancedAPI(doc =&amp;gt; {
  // your code
});
// or
doc.compatAPI(doc =&amp;gt; {
  // your code
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JsPDF will automatically switch back to the original API mode after the callback has run.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please check if your question is already handled at Stackoverflow &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jspdf&quot;&gt;https://stackoverflow.com/questions/tagged/jspdf&lt;/a&gt;. Feel free to ask a question there with the tag &lt;code&gt;jspdf&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Feature requests, bug reports, etc. are very welcome as issues. Note that bug reports should follow these guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A bug should be reported as an &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;mcve&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Make sure code is properly indented and &lt;a href=&quot;https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code&quot;&gt;formatted&lt;/a&gt; (Use ``` around code blocks)&lt;/li&gt; 
 &lt;li&gt;Provide a runnable example.&lt;/li&gt; 
 &lt;li&gt;Try to make sure and show in your issue that the issue is actually related to jspdf and not your framework of choice.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;jsPDF cannot live without help from the community! If you think a feature is missing or you found a bug, please consider if you can spare one or two hours and prepare a pull request. If you&#39;re simply interested in this project and want to help, have a look at the open issues, especially those labeled with &quot;bug&quot;.&lt;/p&gt; 
&lt;p&gt;You can find information about building and testing jsPDF in the &lt;a href=&quot;https://github.com/MrRio/jsPDF/raw/master/CONTRIBUTING.md#pull-requests&quot;&gt;contribution guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Big thanks to Daniel Dotsenko from &lt;a href=&quot;https://github.com/willowsystems&quot;&gt;Willow Systems Corporation&lt;/a&gt; for making huge contributions to the codebase.&lt;/li&gt; 
 &lt;li&gt;Thanks to Ajaxian.com for &lt;a href=&quot;http://ajaxian.com/archives/dynamically-generic-pdfs-with-javascript&quot;&gt;featuring us back in 2009&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Our special thanks to GH Lee (&lt;a href=&quot;https://github.com/sphilee&quot;&gt;sphilee&lt;/a&gt;) for programming the ttf-file-support and providing a large and long sought after feature&lt;/li&gt; 
 &lt;li&gt;Everyone else that&#39;s contributed patches or bug reports. You rock.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License (MIT)&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2010-2021 James Hall, &lt;a href=&quot;https://github.com/MrRio/jsPDF&quot;&gt;https://github.com/MrRio/jsPDF&lt;/a&gt; (c) 2015-2021 yWorks GmbH, &lt;a href=&quot;https://www.yworks.com/&quot;&gt;https://www.yworks.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sudheerj/javascript-interview-questions</title>
      <link>https://github.com/sudheerj/javascript-interview-questions</link>
      <description>&lt;p&gt;List of 1000 JavaScript Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Interview Questions &amp;amp; Answers&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click &lt;span&gt;‚≠ê&lt;/span&gt;if you like the project. Pull Requests are highly appreciated. Follow me &lt;a href=&quot;https://twitter.com/SudheerJonna&quot;&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Go to &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#coding-exercise&quot;&gt;Coding Exercise&lt;/a&gt; for coding specific questions&lt;/p&gt; 
&lt;h2&gt;Download PDF/Epub formats&lt;/h2&gt; 
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href=&quot;https://github.com/sudheerj/JavaScript-Interview-Questions/actions&quot;&gt;actions tab&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://zerotomastery.io/?utm_source=github&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=javascript-interview-questions&quot;&gt; &lt;img src=&quot;https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=height:70/https://www.filepicker.io/api/file/AKYtjj5SSGyJuyZrkAB2&quot; alt=&quot;ZTM Logo&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt; &lt;/p&gt;
&lt;ol&gt; 
 &lt;li&gt;Take this &lt;a href=&quot;https://links.zerotomastery.io/jsp_sudheer&quot;&gt;JavaScript Projects&lt;/a&gt; course to go from a JavaScript beginner to confidently building your own projects&lt;/li&gt; 
 &lt;li&gt;Take this &lt;a href=&quot;https://links.zerotomastery.io/mci_sudheer2&quot;&gt;coding interview bootcamp&lt;/a&gt; if you‚Äôre serious about getting hired and don‚Äôt have a CS degree&lt;/li&gt; 
 &lt;li&gt;Take this &lt;a href=&quot;https://links.zerotomastery.io/ajs_sudheer&quot;&gt;Advanced JavaScript Course&lt;/a&gt; to learn advanced JS concepts and become a top JS developer&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;No.&lt;/th&gt; 
   &lt;th&gt;Questions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-possible-ways-to-create-objects-in-javascript&quot;&gt;What are the possible ways to create objects in JavaScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-prototype-chain&quot;&gt;What is prototype chain&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-call-apply-and-bind&quot;&gt;What is the difference between Call, Apply and Bind&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-json-and-its-common-operations&quot;&gt;What is JSON and its common operations&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-array-slice-method&quot;&gt;What is the purpose of the array slice method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-array-splice-method&quot;&gt;What is the purpose of the array splice method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-slice-and-splice&quot;&gt;What is the difference between slice and splice&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-object-and-map&quot;&gt;How do you compare Object and Map&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between--and--operators&quot;&gt;What is the difference between == and === operators&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-lambda-or-arrow-functions&quot;&gt;What are lambda or arrow functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-first-class-function&quot;&gt;What is a first class function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-first-order-function&quot;&gt;What is a first order function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-higher-order-function&quot;&gt;What is a higher order function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-unary-function&quot;&gt;What is a unary function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-currying-function&quot;&gt;What is the currying function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-pure-function&quot;&gt;What is a pure function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-let-keyword&quot;&gt;What is the purpose of the let keyword&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-let-and-var&quot;&gt;What is the difference between let and var&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-reason-to-choose-the-name-let-as-a-keyword&quot;&gt;What is the reason to choose the name let as a keyword&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-redeclare-variables-in-switch-block-without-an-error&quot;&gt;How do you redeclare variables in switch block without an error&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-temporal-dead-zone&quot;&gt;What is the Temporal Dead Zone&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-iifeimmediately-invoked-function-expression&quot;&gt;What is IIFE(Immediately Invoked Function Expression)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-decode-or-encode-a-url-in-javascript&quot;&gt;How do you decode or encode a URL in JavaScript?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-memoization&quot;&gt;What is memoization&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-hoisting&quot;&gt;What is Hoisting&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-classes-in-es6&quot;&gt;What are classes in ES6&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-closures&quot;&gt;What are closures&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-modules&quot;&gt;What are modules&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-modules&quot;&gt;Why do you need modules&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-scope-in-javascript&quot;&gt;What is scope in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;31&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-service-worker&quot;&gt;What is a service worker&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;32&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-manipulate-dom-using-a-service-worker&quot;&gt;How do you manipulate DOM using a service worker&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;33&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-reuse-information-across-service-worker-restarts&quot;&gt;How do you reuse information across service worker restarts&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;34&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-indexeddb&quot;&gt;What is IndexedDB&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;35&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-web-storage&quot;&gt;What is web storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;36&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-post-message&quot;&gt;What is a post message&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;37&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-cookie&quot;&gt;What is a cookie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;38&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-a-cookie&quot;&gt;Why do you need a Cookie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;39&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-options-in-a-cookie&quot;&gt;What are the options in a cookie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;40&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-delete-a-cookie&quot;&gt;How do you delete a cookie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;41&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-are-the-differences-between-cookie-local-storage-and-session-storage&quot;&gt;What are the differences between cookie, local storage and session storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;42&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-main-difference-between-localstorage-and-sessionstorage&quot;&gt;What is the main difference between localStorage and sessionStorage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;43&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-access-web-storage&quot;&gt;How do you access web storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;44&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-methods-available-on-session-storage&quot;&gt;What are the methods available on session storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;45&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-storage-event-and-its-event-handler&quot;&gt;What is a storage event and its event handler&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;46&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-web-storage&quot;&gt;Why do you need web storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;47&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-web-storage-browser-support&quot;&gt;How do you check web storage browser support&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;48&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-web-workers-browser-support&quot;&gt;How do you check web workers browser support&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;49&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-of-web-worker&quot;&gt;Give an example of web worker&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;50&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-restrictions-of-web-workers-on-dom&quot;&gt;What are the restrictions of web workers on DOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;51&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-promise&quot;&gt;What is a promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;52&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-a-promise&quot;&gt;Why do you need a promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;53&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-three-states-of-promise&quot;&gt;What are the three states of promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;54&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-callback-function&quot;&gt;What is a callback function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;55&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-we-need-callbacks&quot;&gt;Why do we need callbacks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;56&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-callback-hell&quot;&gt;What is a callback hell&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;57&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-server-sent-events&quot;&gt;What is server-sent events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;58&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-receive-server-sent-event-notifications&quot;&gt;How do you receive server-sent event notifications&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;59&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-browser-support-for-server-sent-events&quot;&gt;How do you check browser support for server-sent events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;60&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-events-available-for-server-sent-events&quot;&gt;What are the events available for server sent events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;61&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-main-rules-of-promise&quot;&gt;What are the main rules of promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;62&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-callback-in-callback&quot;&gt;What is callback in callback&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;63&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-promise-chaining&quot;&gt;What is promise chaining&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-promise.all&quot;&gt;What is promise.all&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;65&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-race-method-in-promise&quot;&gt;What is the purpose of race method in promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;66&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-strict-mode-in-javascript&quot;&gt;What is a strict mode in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;67&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-strict-mode&quot;&gt;Why do you need strict mode&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;68&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-declare-strict-mode&quot;&gt;How do you declare strict mode&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;69&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-double-exclamation&quot;&gt;What is the purpose of double exclamation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;70&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-delete-operator&quot;&gt;What is the purpose of delete operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;71&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-typeof-operator&quot;&gt;What is typeof operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;72&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-undefined-property&quot;&gt;What is undefined property&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;73&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-null-value&quot;&gt;What is null value&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;74&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-null-and-undefined&quot;&gt;What is the difference between null and undefined&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;75&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-is-eval&quot;&gt;What is eval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;76&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-window-and-document&quot;&gt;What is the difference between window and document&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;77&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-access-history-in-javascript&quot;&gt;How do you access history in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;78&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-caps-lock-key-turned-on-or-not&quot;&gt;How do you detect caps lock key turned on or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;79&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-isnan&quot;&gt;What is isNaN&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;80&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-undeclared-and-undefined-variables&quot;&gt;What are the differences between undeclared and undefined variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;81&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-global-variables&quot;&gt;What are global variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;82&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-problems-with-global-variables&quot;&gt;What are the problems with global variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;83&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-nan-property&quot;&gt;What is NaN property&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;84&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-isfinite-function&quot;&gt;What is the purpose of isFinite function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;85&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-flow&quot;&gt;What is an event flow&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;86&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-event-bubbling&quot;&gt;What is event bubbling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;87&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-event-capturing&quot;&gt;What is event capturing&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;88&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-submit-a-form-using-javascript&quot;&gt;How do you submit a form using JavaScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;89&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-operating-system-details&quot;&gt;How do you find operating system details&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;90&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-document-load-and-domcontentloaded-events&quot;&gt;What is the difference between document load and DOMContentLoaded events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;91&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-native,-host-and-user-objects&quot;&gt;What is the difference between native, host and user objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;92&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-tools-or-techniques-used-for-debugging-javascript-code&quot;&gt;What are the tools or techniques used for debugging JavaScript code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;93&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-pros-and-cons-of-promises-over-callbacks&quot;&gt;What are the pros and cons of promises over callbacks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;94&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-an-attribute-and-a-property&quot;&gt;What is the difference between an attribute and a property&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;95&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-same-origin-policy&quot;&gt;What is same-origin policy&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;96&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-void-0&quot;&gt;What is the purpose of void 0&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;97&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-a-compiled-or-interpreted-language&quot;&gt;Is JavaScript a compiled or interpreted language&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;98&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-a-case-sensitive-language&quot;&gt;Is JavaScript a case-sensitive language&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;99&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-there-any-relation-between-java-and-javascript&quot;&gt;Is there any relation between Java and JavaScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-events&quot;&gt;What are events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;101&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#who-created-javascript&quot;&gt;Who created javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;102&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-preventdefault-method&quot;&gt;What is the use of preventDefault method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;103&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-stoppropagation-method&quot;&gt;What is the use of stopPropagation method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;104&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-steps-involved-in-return-false&quot;&gt;What are the steps involved in return false&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;105&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-bom&quot;&gt;What is BOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;106&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-settimeout&quot;&gt;What is the use of setTimeout&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;107&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-setinterval&quot;&gt;What is the use of setInterval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;108&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-is-javascript-treated-as-single-threaded&quot;&gt;Why is JavaScript treated as Single threaded&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;109&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-delegation&quot;&gt;What is an event delegation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;110&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-ecmascript&quot;&gt;What is ECMAScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;111&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-json&quot;&gt;What is JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;112&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-syntax-rules-of-json&quot;&gt;What are the syntax rules of JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;113&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-json-stringify&quot;&gt;What is the purpose JSON stringify&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;114&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-parse-json-string&quot;&gt;How do you parse JSON string&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;115&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-json&quot;&gt;Why do you need JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;116&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-pwas?&quot;&gt;What are PWAs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;117&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-cleartimeout-method&quot;&gt;What is the purpose of clearTimeout method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;118&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-clearinterval-method&quot;&gt;What is the purpose of clearInterval method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;119&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-redirect-new-page-in-javascript&quot;&gt;How do you redirect new page in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;120&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-a-string-contains-a-substring&quot;&gt;How do you check whether a string contains a substring&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;121&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-validate-an-email-in-javascript&quot;&gt;How do you validate an email in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;122&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-current-url-with-javascript&quot;&gt;How do you get the current url with javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;123&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-various-url-properties-of-location-object&quot;&gt;What are the various url properties of location object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;124&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-get-query-string-values-in-javascript&quot;&gt;How do get query string values in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;125&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-if-a-key-exists-in-an-object&quot;&gt;How do you check if a key exists in an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;126&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-loop-through-or-enumerate-javascript-object&quot;&gt;How do you loop through or enumerate javascript object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;127&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-test-for-an-empty-object&quot;&gt;How do you test for an empty object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;128&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-arguments-object&quot;&gt;What is an arguments object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;129&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-first-letter-of-the-string-in-an-uppercase&quot;&gt;How do you make first letter of the string in an uppercase&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;130&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-pros-and-cons-of-for-loop&quot;&gt;What are the pros and cons of for loop&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;131&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-display-the-current-date-in-javascript&quot;&gt;How do you display the current date in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;132&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-two-date-objects&quot;&gt;How do you compare two date objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;133&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-if-a-string-starts-with-another-string&quot;&gt;How do you check if a string starts with another string&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;134&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-trim-a-string-in-javascript&quot;&gt;How do you trim a string in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;135&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-add-a-key-value-pair-in-javascript&quot;&gt;How do you add a key value pair in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;136&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-the-&#39;!--&#39;-notation-represents-a-special-operator&quot;&gt;Is the &#39;!--&#39; notation represents a special operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;137&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-assign-default-values-to-variables&quot;&gt;How do you assign default values to variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;138&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-multiline-strings&quot;&gt;How do you define multiline strings&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;139&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-app-shell-model&quot;&gt;What is an app shell model&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;140&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-we-define-properties-for-functions&quot;&gt;Can we define properties for functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;141&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-way-to-find-the-number-of-parameters-expected-by-a-function&quot;&gt;What is the way to find the number of parameters expected by a function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;142&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-polyfill&quot;&gt;What is a polyfill&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;143&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-break-and-continue-statements&quot;&gt;What are break and continue statements&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;144&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-js-labels&quot;&gt;What are js labels&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;145&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-benefits-of-keeping-declarations-at-the-top&quot;&gt;What are the benefits of keeping declarations at the top&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;146&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-benefits-of-initializing-variables&quot;&gt;What are the benefits of initializing variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;147&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-recommendations-to-create-new-object&quot;&gt;What are the recommendations to create new object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;148&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-json-arrays&quot;&gt;How do you define JSON arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;149&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-generate-random-integers&quot;&gt;How do you generate random integers&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;150&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-you-write-a-random-integers-function-to-print-integers-with-in-a-range&quot;&gt;Can you write a random integers function to print integers with in a range&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;151&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-tree-shaking&quot;&gt;What is tree shaking&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;152&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-need-of-tree-shaking&quot;&gt;What is the need of tree shaking&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;153&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-recommended-to-use-eval&quot;&gt;Is it recommended to use eval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;154&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-regular-expression&quot;&gt;What is a Regular Expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;155&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-string-methods-available-in-regular-expression&quot;&gt;What are the string methods available in Regular expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;156&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-modifiers-in-regular-expression&quot;&gt;What are modifiers in regular expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;157&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-regular-expression-patterns&quot;&gt;What are regular expression patterns&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;158&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-regexp-object&quot;&gt;What is a RegExp object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;159&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-search-a-string-for-a-pattern&quot;&gt;How do you search a string for a pattern&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;160&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-exec-method&quot;&gt;What is the purpose of exec method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;161&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-change-style-of-a-html-element&quot;&gt;How do you change style of a HTML element&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;162&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-would-be-the-result-of-1+2+&#39;3&#39;&quot;&gt;What would be the result of 1+2+&#39;3&#39;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;163&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-debugger-statement&quot;&gt;What is a debugger statement&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;164&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-breakpoints-indebugging&quot;&gt;What is the purpose of breakpoints in debugging&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;165&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-use-reserved-words-as-identifiers&quot;&gt;Can I use reserved words as identifiers&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;166&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-mobile-browser&quot;&gt;How do you detect a mobile browser&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;167&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-mobile-browser-without-regexp&quot;&gt;How do you detect a mobile browser without regexp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;168&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-image-width-and-height-using-js&quot;&gt;How do you get the image width and height using JS&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;169&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-synchronous-http-request&quot;&gt;How do you make synchronous HTTP request&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;170&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-asynchronous-http-request&quot;&gt;How do you make asynchronous HTTP request&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;171&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-convert-date-to-another-timezone-in-javascript&quot;&gt;How do you convert date to another timezone in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;172&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-properties-used-to-get-size-of-window&quot;&gt;What are the properties used to get size of window&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;173&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-conditional-operator-in-javascript&quot;&gt;What is a conditional operator in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;174&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#Can-you-apply-chaining-on-conditional-operator&quot;&gt;Can you apply chaining on conditional operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;175&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-ways-to-execute-javascript-after-page-load&quot;&gt;What are the ways to execute javascript after page load&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;176&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-proto-and-prototype&quot;&gt;What is the difference between proto and prototype&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;177&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-where-do-you-really-need-semicolon&quot;&gt;Give an example where do you really need semicolon&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;178&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-freeze-method&quot;&gt;What is a freeze method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;179&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-freeze-method&quot;&gt;What is the purpose of freeze method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;180&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-i-need-to-use-freeze-method&quot;&gt;Why do I need to use freeze method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;181&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-browser-language-preference&quot;&gt;How do you detect a browser language preference&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;182&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-convert-string-to-title-case-with-javascript&quot;&gt;How to convert string to title case with javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;183&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-javascript-disabled-in-the-page&quot;&gt;How do you detect javascript disabled in the page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;184&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-various-operators-supported-by-javascript&quot;&gt;What are various operators supported by javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;185&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-rest-parameter&quot;&gt;What is a rest parameter&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;186&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-you-do-not-use-rest-parameter-as-a-last-argument&quot;&gt;What happens if you do not use rest parameter as a last argument&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;187&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-bitwise-operators-available-in-javascript&quot;&gt;What are the bitwise operators available in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;188&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-spread-operator&quot;&gt;What is a spread operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;189&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-whether-object-is-frozen-or-not&quot;&gt;How do you determine whether object is frozen or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;190&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-two-values-same-or-not-using-object&quot;&gt;How do you determine two values same or not using object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;191&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-using-object-is-method&quot;&gt;What is the purpose of using object is method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;192&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-copy-properties-from-one-object-to-other&quot;&gt;How do you copy properties from one object to other&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;193&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-applications-of-assign-method&quot;&gt;What are the applications of assign method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;194&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-proxy-object&quot;&gt;What is a proxy object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;195&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-seal-method&quot;&gt;What is the purpose of seal method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;196&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-applications-of-seal-method&quot;&gt;What are the applications of seal method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;197&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-freeze-and-seal-methods&quot;&gt;What are the differences between freeze and seal methods&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;198&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-if-an-object-is-sealed-or-not&quot;&gt;How do you determine if an object is sealed or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;199&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-enumerable-key-and-value-pairs&quot;&gt;How do you get enumerable key and value pairs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;200&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-main-difference-between-object.values-and-object.entries-method&quot;&gt;What is the main difference between Object.values and Object.entries method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;201&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-can-you-get-the-list-of-keys-of-any-object&quot;&gt;How can you get the list of keys of any object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;202&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-object-with-prototype&quot;&gt;How do you create an object with prototype&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;203&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-weakset&quot;&gt;What is a WeakSet&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;204&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-weakset-and-set&quot;&gt;What are the differences between WeakSet and Set&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;205&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-the-collection-of-methods-available-on-weakset&quot;&gt;List down the collection of methods available on WeakSet&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;206&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-weakmap&quot;&gt;What is a WeakMap&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;207&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-weakmap-and-map&quot;&gt;What are the differences between WeakMap and Map&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;208&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-the-collection-of-methods-available-on-weakmap&quot;&gt;List down the collection of methods available on WeakMap&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;209&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-uneval&quot;&gt;What is the purpose of uneval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;210&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-encode-an-url&quot;&gt;How do you encode an URL&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;211&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-decode-an-url&quot;&gt;How do you decode an URL&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;212&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-print-the-contents-of-web-page&quot;&gt;How do you print the contents of web page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;213&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-uneval-and-eval&quot;&gt;What is the difference between uneval and eval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;214&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-anonymous-function&quot;&gt;What is an anonymous function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;215&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-precedence-order-between-local-and-global-variables&quot;&gt;What is the precedence order between local and global variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;216&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-javascript-accessors&quot;&gt;What are javascript accessors&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;217&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-property-on-object-constructor&quot;&gt;How do you define property on Object constructor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;218&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-get-and-defineproperty&quot;&gt;What is the difference between get and defineProperty&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;219&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-getters-and-setters&quot;&gt;What are the advantages of Getters and Setters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;220&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-add-getters-and-setters-using-defineproperty-method&quot;&gt;Can I add getters and setters using defineProperty method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;221&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-switch-case&quot;&gt;What is the purpose of switch-case&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;222&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-conventions-to-be-followed-for-the-usage-of-swtich-case&quot;&gt;What are the conventions to be followed for the usage of swtich case&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;223&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-primitive-data-types&quot;&gt;What are primitive data types&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;224&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-access-object-properties&quot;&gt;What are the different ways to access object properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;225&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-function-parameter-rules&quot;&gt;What are the function parameter rules&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;226&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-error-object&quot;&gt;What is an error object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;227&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#when-you-get-a-syntax-error&quot;&gt;When you get a syntax error&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;228&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-error-names-from-error-object&quot;&gt;What are the different error names from error object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;229&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-various-statements-in-error-handling&quot;&gt;What are the various statements in error handling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;230&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-two-types-of-loops-in-javascript&quot;&gt;What are the two types of loops in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;231&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-nodejs&quot;&gt;What is nodejs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;232&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-intl-object&quot;&gt;What is an Intl object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;233&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-language-specific-date-and-time-formatting&quot;&gt;How do you perform language specific date and time formatting&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;234&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-iterator&quot;&gt;What is an Iterator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;235&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-does-synchronous-iteration-works&quot;&gt;How does synchronous iteration works&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;236&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-loop&quot;&gt;What is an event loop&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;237&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-call-stack&quot;&gt;What is call stack&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;238&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-queue&quot;&gt;What is an event queue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;239&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-decorator&quot;&gt;What is a decorator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;240&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-properties-of-intl-object&quot;&gt;What are the properties of Intl object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;241&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-unary-operator&quot;&gt;What is an Unary operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;242&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-sort-elements-in-an-array&quot;&gt;How do you sort elements in an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;243&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-comparefunction-while-sorting-arrays&quot;&gt;What is the purpose of compareFunction while sorting arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;244&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-reversing-an-array&quot;&gt;How do you reversing an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;245&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-min-and-max-value-in-an-array&quot;&gt;How do you find min and max value in an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;246&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-min-and-max-values-without--math-functions&quot;&gt;How do you find min and max values without Math functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;247&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-empty-statement-and-purpose-of-it&quot;&gt;What is an empty statement and purpose of it&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;248&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-meta-data-of-a-module&quot;&gt;How do you get meta data of a module&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;249&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-comma-operator&quot;&gt;What is a comma operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;250&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-advantage-of-a-comma-operator&quot;&gt;What is the advantage of a comma operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;251&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-typescript&quot;&gt;What is typescript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;252&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-javascript-and-typescript&quot;&gt;What are the differences between javascript and typescript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;253&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-typescript-over-javascript&quot;&gt;What are the advantages of typescript over javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;254&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-object-initializer&quot;&gt;What is an object initializer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;255&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-constructor-method&quot;&gt;What is a constructor method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;256&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-you-write-constructor-more-than-once-in-a-class&quot;&gt;What happens if you write constructor more than once in a class&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;257&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-call-the-constructor-of-a-parent-class&quot;&gt;How do you call the constructor of a parent class&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;258&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-prototype-of-an-object&quot;&gt;How do you get the prototype of an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;259&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-i-pass-string-type-for-getprototype-method&quot;&gt;What happens If I pass string type for getPrototype method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;260&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-set-prototype-of-one-object-to-another&quot;&gt;How do you set prototype of one object to another&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;261&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-an-object-can-be-extendable-or-not&quot;&gt;How do you check whether an object can be extendable or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;262&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-prevent-an-object-to-extend&quot;&gt;How do you prevent an object to extend&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;263&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-make-an-object-non-extensible&quot;&gt;What are the different ways to make an object non-extensible&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;264&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-multiple-properties-on-an-object&quot;&gt;How do you define multiple properties on an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;265&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-mean-in-javascript&quot;&gt;What is MEAN in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;266&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-obfuscation-in-javascript&quot;&gt;What Is Obfuscation in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;267&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-obfuscation&quot;&gt;Why do you need Obfuscation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;268&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-minification&quot;&gt;What is Minification&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;269&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-minification&quot;&gt;What are the advantages of minification&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;270&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-obfuscation-and-encryption&quot;&gt;What are the differences between Obfuscation and Encryption&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;271&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-common-tools-used-for-minification&quot;&gt;What are the common tools used for minification&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;272&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-form-validation-using-javascript&quot;&gt;How do you perform form validation using javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;273&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-form-validation-without-javascript&quot;&gt;How do you perform form validation without javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;274&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-dom-methods-available-for-constraint-validation&quot;&gt;What are the DOM methods available for constraint validation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;275&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-available-constraint-validation-dom-properties&quot;&gt;What are the available constraint validation DOM properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;276&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-list-of-validity-properties&quot;&gt;What are the list of validity properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;277&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-usage-of-rangeoverflow-property&quot;&gt;Give an example usage of rangeOverflow property&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;278&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-enums-feature-available-in-javascript&quot;&gt;Is enums feature available in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;279&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-is-an-enum&quot;&gt;What is an enum&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;280&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-list-all-properties-of-an-object&quot;&gt;How do you list all properties of an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;281&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-property-descriptors-of-an-object&quot;&gt;How do you get property descriptors of an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;282&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-attributes-provided-by-a-property-descriptor&quot;&gt;What are the attributes provided by a property descriptor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;283&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-extend-classes&quot;&gt;How do you extend classes&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;284&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-i-modify-the-url-without-reloading-the-page&quot;&gt;How do I modify the url without reloading the page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;285&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-an-array-includes-a-particular-value-or-not&quot;&gt;How do you check whether an array includes a particular value or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;286&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-scalar-arrays&quot;&gt;How do you compare scalar arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;287&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-get-the-value-from-get-parameters&quot;&gt;How to get the value from get parameters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;288&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-print-numbers-with-commas-as-thousand-separators&quot;&gt;How do you print numbers with commas as thousand separators&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;289&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-java-and-javascript&quot;&gt;What is the difference between java and javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;290&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#does-javascript-supports-namespace&quot;&gt;Does javascript supports namespace&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;291&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-declare-namespace&quot;&gt;How do you declare namespace&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;292&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-invoke-javascript-code-in-an-iframe-from-parent-page&quot;&gt;How do you invoke javascript code in an iframe from parent page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;293&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-get-the-timezone-offset-from-date&quot;&gt;How do get the timezone offset from date&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;294&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-load-css-and-js-files-dynamically&quot;&gt;How do you load CSS and JS files dynamically&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;295&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-methods-to-find-html-elements-in-dom&quot;&gt;What are the different methods to find HTML elements in DOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;296&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-jquery&quot;&gt;What is jQuery&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;297&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-v8-javascript-engine&quot;&gt;What is V8 JavaScript engine&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;298&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-we-call-javascript-as-dynamic-language&quot;&gt;Why do we call javascript as dynamic language&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;299&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-void-operator&quot;&gt;What is a void operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;300&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-set-the-cursor-to-wait&quot;&gt;How to set the cursor to wait&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;301&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-infinite-loop&quot;&gt;How do you create an infinite loop&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;302&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-to-avoid-with-statement&quot;&gt;Why do you need to avoid with statement&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;303&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-for-loops&quot;&gt;What is the output of below for loops&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;304&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-some-of-the-features-of-es6&quot;&gt;List down some of the features of ES6&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;305&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-es6&quot;&gt;What is ES6&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;306&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-I-redeclare-let-and-const-variables&quot;&gt;Can I redeclare let and const variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;307&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-const-variable-makes-the-value-immutable&quot;&gt;Is const variable makes the value immutable&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;308&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-default-parameters&quot;&gt;What are default parameters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;309&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-template-literals&quot;&gt;What are template literals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;310&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-write-multi-line-strings-in-template-literals&quot;&gt;How do you write multi-line strings in template literals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;311&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-nesting-templates&quot;&gt;What are nesting templates&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;312&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-tagged-templates&quot;&gt;What are tagged templates&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;313&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-raw-strings&quot;&gt;What are raw strings&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;314&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-destructuring-assignment&quot;&gt;What is destructuring assignment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;315&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-default-values-in-destructuring-assignment&quot;&gt;What are default values in destructuring assignment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;316&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-swap-variables-in-destructuring-assignment&quot;&gt;How do you swap variables in destructuring assignment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;317&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-enhanced-object-literals&quot;&gt;What are enhanced object literals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;318&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-dynamic-imports&quot;&gt;What are dynamic imports&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;319&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-use-cases-for-dynamic-imports&quot;&gt;What are the use cases for dynamic imports&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;320&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-typed-arrays&quot;&gt;What are typed arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;321&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-module-loaders&quot;&gt;What are the advantages of module loaders&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;322&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-collation&quot;&gt;What is collation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;323&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-for...of-statement&quot;&gt;What is for...of statement&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;324&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-spread-operator-array&quot;&gt;What is the output of below spread operator array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;325&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-postmessage-secure&quot;&gt;Is PostMessage secure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;326&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-problems-with-postmessage-target-origin-as-wildcard&quot;&gt;What are the problems with postmessage target origin as wildcard&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;327&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-avoid-receiving-postmessages-from-attackers&quot;&gt;How do you avoid receiving postMessages from attackers&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;328&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-avoid-using-postmessages-completely&quot;&gt;Can I avoid using postMessages completely&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;329&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-postmessages-synchronous&quot;&gt;Is postMessages synchronous&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;330&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-paradigm-is-javascript&quot;&gt;What paradigm is Javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;331&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-internal-and-external-javascript&quot;&gt;What is the difference between internal and external javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;332&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-faster-than-server-side-script&quot;&gt;Is JavaScript faster than server side script&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-status-of-a-checkbox&quot;&gt;How do you get the status of a checkbox&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;334&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-double-tilde-operator&quot;&gt;What is the purpose of double tilde operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;335&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-convert-character-to-ascii-code&quot;&gt;How do you convert character to ASCII code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;336&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-arraybuffer&quot;&gt;What is ArrayBuffer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;337&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-string-expression&quot;&gt;What is the output of below string expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;338&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-error-object&quot;&gt;What is the purpose of Error object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;339&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-evalerror-object&quot;&gt;What is the purpose of EvalError object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;340&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-list-of-cases-error-thrown-from-non-strict-mode-to-strict-mode&quot;&gt;What are the list of cases error thrown from non-strict mode to strict mode&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;341&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#do-all-objects-have-prototypes&quot;&gt;Do all objects have prototypes&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;342&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-a-parameter-and-an-argument&quot;&gt;What is the difference between a parameter and an argument&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;343&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-some-method-in-arrays&quot;&gt;What is the purpose of some method in arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;344&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-combine-two-or-more-arrays&quot;&gt;How do you combine two or more arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;345&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-shallow-and-deep-copy&quot;&gt;What is the difference between Shallow and Deep copy&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;346&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-specific-number-of-copies-of-a-string&quot;&gt;How do you create specific number of copies of a string&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;347&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-return-all-matching-strings-against-a-regular-expression&quot;&gt;How do you return all matching strings against a regular expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;348&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-trim-a-string-at-the-beginning-or-ending&quot;&gt;How do you trim a string at the beginning or ending&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;349&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-console-statement-with-unary-operator&quot;&gt;What is the output of below console statement with unary operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;350&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#does-javascript-uses-mixins&quot;&gt;Does javascript uses mixins&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;351&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-thunk-function&quot;&gt;What is a thunk function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;352&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-asynchronous-thunks&quot;&gt;What are asynchronous thunks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;353&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-function-calls&quot;&gt;What is the output of below function calls&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;354&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-remove-all-line-breaks-from-a-string&quot;&gt;How to remove all line breaks from a string&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;355&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-reflow-and-repaint&quot;&gt;What is the difference between reflow and repaint&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;356&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-with-negating-an-array&quot;&gt;What happens with negating an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;357&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-we-add-two-arrays&quot;&gt;What happens if we add two arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;358&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-prepend-additive-operator-on-falsy-values&quot;&gt;What is the output of prepend additive operator on falsy values&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;359&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-self-string-using-special-characters&quot;&gt;How do you create self string using special characters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;360&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-remove-falsy-values-from-an-array&quot;&gt;How do you remove falsy values from an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;361&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-unique-values-of-an-array&quot;&gt;How do you get unique values of an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;362&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-destructuring-aliases&quot;&gt;What is destructuring aliases&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;363&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-map-the-array-values-without-using-map-method&quot;&gt;How do you map the array values without using map method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;364&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-empty-an-array&quot;&gt;How do you empty an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;365&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-rounding-numbers-to-certain-decimals&quot;&gt;How do you rounding numbers to certain decimals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;366&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-convert-an-array-to-an-object&quot;&gt;What is the easiest way to convert an array to an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;367&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-array-with-some-data&quot;&gt;How do you create an array with some data&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;368&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-placeholders-from-console-object&quot;&gt;What are the placeholders from console object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;369&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-possible-to-add-css-to-console-messages&quot;&gt;Is it possible to add CSS to console messages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;370&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-dir-method-of-console-object&quot;&gt;What is the purpose of dir method of console object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;371&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-possible-to-debug-html-elements-in-console&quot;&gt;Is it possible to debug HTML elements in console&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;372&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-display-data-in-a-tabular-format-using-console-object&quot;&gt;How do you display data in a tabular format using console object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;373&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-verify-that-an-argument-is-a-number-or-not&quot;&gt;How do you verify that an argument is a Number or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;374&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-copy-to-clipboard-button&quot;&gt;How do you create copy to clipboard button&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;375&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-shortcut-to-get-timestamp&quot;&gt;What is the shortcut to get timestamp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;376&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-flattening-multi-dimensional-arrays&quot;&gt;How do you flattening multi dimensional arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;377&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-multi-condition-checking&quot;&gt;What is the easiest multi condition checking&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;378&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-capture-browser-back-button&quot;&gt;How do you capture browser back button&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;379&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-disable-right-click-in-the-web-page&quot;&gt;How do you disable right click in the web page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;380&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-wrapper-objects&quot;&gt;What are wrapper objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;381&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-ajax&quot;&gt;What is AJAX&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;382&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-deal-with-asynchronous-code&quot;&gt;What are the different ways to deal with Asynchronous Code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;383&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-cancel-a-fetch-request&quot;&gt;How to cancel a fetch request&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;384&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-web-speech-api&quot;&gt;What is web speech API&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;385&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-minimum-timeout-throttling&quot;&gt;What is minimum timeout throttling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;386&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-implement-zero-timeout-in-modern-browsers&quot;&gt;How do you implement zero timeout in modern browsers&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;387&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-tasks-in-event-loop&quot;&gt;What are tasks in event loop&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;388&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-microtasks&quot;&gt;What are microtasks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;389&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-different-event-loops&quot;&gt;What are different event loops&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;390&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-queuemicrotask&quot;&gt;What is the purpose of queueMicrotask&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;391&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-use-javascript-libraries-in-typescript-file&quot;&gt;How do you use javascript libraries in typescript file&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;392&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-promises-and-observables&quot;&gt;What are the differences between promises and observables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;393&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-heap&quot;&gt;What is heap&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;394&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-table&quot;&gt;What is an event table&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;395&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-microtask-queue&quot;&gt;What is a microTask queue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;396&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-shim-and-polyfill&quot;&gt;What is the difference between shim and polyfill&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;397&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-primitive-or-non-primitive-value-type&quot;&gt;How do you detect primitive or non primitive value type&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;398&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-babel&quot;&gt;What is babel&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;399&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-node.js-completely-single-threaded&quot;&gt;Is Node.js completely single threaded&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;400&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-common-use-cases-of-observables&quot;&gt;What are the common use cases of observables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;401&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-rxjs&quot;&gt;What is RxJS&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;402&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-function-constructor-and-function-declaration&quot;&gt;What is the difference between Function constructor and function declaration&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;403&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-short-circuit-condition&quot;&gt;What is a Short circuit condition&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;404&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-resize-an-array&quot;&gt;What is the easiest way to resize an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;405&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-observable&quot;&gt;What is an observable&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;406&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-function-and-class-declarations&quot;&gt;What is the difference between function and class declarations&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;407&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-async-function&quot;&gt;What is an async function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;408&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-prevent-promises-swallowing-errors&quot;&gt;How do you prevent promises swallowing errors&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;409&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-deno&quot;&gt;What is deno&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;410&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-an-object-iterable-in-javascript&quot;&gt;How do you make an object iterable in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;411&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-proper-tail-call&quot;&gt;What is a Proper Tail Call&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;412&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-an-object-is-a-promise-or-not&quot;&gt;How do you check an object is a promise or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;413&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-detect-if-a-function-is-called-as-constructor&quot;&gt;How to detect if a function is called as constructor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;414&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-arguments-object-and-rest-parameter&quot;&gt;What are the differences between arguments object and rest parameter&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;415&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-spread-operator-and-rest-parameter&quot;&gt;What are the differences between spread operator and rest parameter&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;416&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-kinds-of-generators&quot;&gt;What are the different kinds of generators&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;417&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-built-in-iterables&quot;&gt;What are the built-in iterables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;418&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-for...of-and-for...in-statements&quot;&gt;What are the differences between for...of and for...in statements&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;419&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-instance-and-non-instance-properties&quot;&gt;How do you define instance and non-instance properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;420&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-isnan-and-number.isnan&quot;&gt;What is the difference between isNaN and Number.isNaN?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;421&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-invoke-an-iife-without-any-extra-brackets&quot;&gt;How to invoke an IIFE without any extra brackets?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;422&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-that-possible-to-use-expressions-in-switch-cases&quot;&gt;Is that possible to use expressions in switch cases?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;423&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-ignore-promise-errors&quot;&gt;What is the easiest way to ignore promise errors?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;424&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-style-the-console-output-using-css&quot;&gt;How do style the console output using CSS?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;425&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-nullish-coalescing-operator-(??)&quot;&gt;What is nullish coalescing operator(??)?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;426&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-group-and-nest-console-output&quot;&gt;How do you group and nest console output?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;427&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-dense-and-sparse-arrays&quot;&gt;What is the difference between dense and sparse arrays?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;428&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-create-sparse-arrays&quot;&gt;What are the different ways to create sparse arrays?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible ways to create objects in JavaScript&lt;/h3&gt; &lt;p&gt;There are many ways to create objects in javascript as below&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object constructor:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The simplest way to create an empty object is using the Object constructor. Currently this approach is not recommended.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = new Object();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object&#39;s create method:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The create method of Object creates a new object by passing the prototype object as a parameter&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = Object.create(null);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object literal syntax:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The object literal syntax is equivalent to create method when it passes null as parameter&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function constructor:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create any function and apply the new operator to create object instances,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name){
   this.name=name;
   this.age=21;
}
var object = new Person(&quot;Sudheer&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function constructor with prototype:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This is similar to function constructor but it uses prototype for their properties and methods,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(){}
Person.prototype.name = &quot;Sudheer&quot;;
var object = new Person();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is equivalent to an instance created with an object create method with a function prototype and then call that function with an instance and parameters as arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func {};

new func(x, y, z);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;(OR)&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Create a new instance using function prototype.
var newInstance = Object.create(func.prototype)

// Call the function
var result = func.call(newInstance, x, y, z),

// If the result is a non-null object then use it otherwise just use the new instance.
console.log(result &amp;amp;&amp;amp; typeof result === &#39;object&#39; ? result : newInstance);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ES6 Class syntax:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;ES6 introduces class feature to create the objects&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Person {
   constructor(name) {
      this.name = name;
   }
}

var object = new Person(&quot;Sudheer&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Singleton pattern:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;A Singleton is an object which can only be instantiated one time. Repeated calls to its constructor return the same instance and this way one can ensure that they don&#39;t accidentally create multiple instances.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = new function(){
   this.name = &quot;Sudheer&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a prototype chain&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Prototype chaining&lt;/strong&gt; is used to build new types of objects based on existing ones. It is similar to inheritance in a class based language.&lt;/p&gt; &lt;p&gt;The prototype on object instance is available through &lt;strong&gt;Object.getPrototypeOf(object)&lt;/strong&gt; or &lt;strong&gt;&lt;strong&gt;proto&lt;/strong&gt;&lt;/strong&gt; property whereas prototype on constructors function is available through &lt;strong&gt;Object.prototype&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/prototype_chain.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Call, Apply and Bind&lt;/h3&gt; &lt;p&gt;The difference between Call, Apply and Bind can be explained with below examples,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Call:&lt;/strong&gt; The call() method invokes a function with a given &lt;code&gt;this&lt;/code&gt; value and arguments provided one by one&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

invite.call(employee1, &#39;Hello&#39;, &#39;How are you?&#39;); // Hello John Rodson, How are you?
invite.call(employee2, &#39;Hello&#39;, &#39;How are you?&#39;); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Apply:&lt;/strong&gt; Invokes the function with a given &lt;code&gt;this&lt;/code&gt; value and allows you to pass in arguments as an array&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

invite.apply(employee1, [&#39;Hello&#39;, &#39;How are you?&#39;]); // Hello John Rodson, How are you?
invite.apply(employee2, [&#39;Hello&#39;, &#39;How are you?&#39;]); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;bind:&lt;/strong&gt; returns a new function, allowing you to pass any number of arguments&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

var inviteEmployee1 = invite.bind(employee1);
var inviteEmployee2 = invite.bind(employee2);
inviteEmployee1(&#39;Hello&#39;, &#39;How are you?&#39;); // Hello John Rodson, How are you?
inviteEmployee2(&#39;Hello&#39;, &#39;How are you?&#39;); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Call and apply are pretty interchangeable. Both execute the current function immediately. You need to decide whether it‚Äôs easier to send in an array or a comma separated list of arguments. You can remember by treating Call is for &lt;strong&gt;comma&lt;/strong&gt; (separated list) and Apply is for &lt;strong&gt;Array&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;Whereas Bind creates a new function that will have &lt;code&gt;this&lt;/code&gt; set to the first parameter passed to bind().&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSON and its common operations&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt; is a text-based data format following JavaScript object syntax, which was popularized by &lt;code&gt;Douglas Crockford&lt;/code&gt;. It is useful when you want to transmit data across a network and it is basically just a text file with an extension of .json, and a MIME type of application/json&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Parsing:&lt;/strong&gt; Converting a string to a native object&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;JSON.parse(text)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Stringification:&lt;/strong&gt; converting a native object to a string so it can be transmitted across the network&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;JSON.stringify(object)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the array slice method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;slice()&lt;/strong&gt; method returns the selected elements in an array as a new array object. It selects the elements starting at the given start argument, and ends at the given optional end argument without including the last element. If you omit the second argument then it selects till the end.&lt;/p&gt; &lt;p&gt;Some of the examples of this method are,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIntegers = [1, 2, 3, 4, 5];
let arrayIntegers1 = arrayIntegers.slice(0,2); // returns [1,2]
let arrayIntegers2 = arrayIntegers.slice(2,3); // returns [3]
let arrayIntegers3 = arrayIntegers.slice(4); //returns [5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Slice method won&#39;t mutate the original array but it returns the subset as a new array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the array splice method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;splice()&lt;/strong&gt; method is used either adds/removes items to/from an array, and then returns the removed item. The first argument specifies the array position for insertion or deletion whereas the optional second argument indicates the number of elements to be deleted. Each additional argument is added to the array.&lt;/p&gt; &lt;p&gt;Some of the examples of this method are,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIntegersOriginal1 = [1, 2, 3, 4, 5];
let arrayIntegersOriginal2 = [1, 2, 3, 4, 5];
let arrayIntegersOriginal3 = [1, 2, 3, 4, 5];

let arrayIntegers1 = arrayIntegersOriginal1.splice(0,2); // returns [1, 2]; original array: [3, 4, 5]
let arrayIntegers2 = arrayIntegersOriginal2.splice(3); // returns [4, 5]; original array: [1, 2, 3]
let arrayIntegers3 = arrayIntegersOriginal3.splice(3, 1, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;); //returns [4]; original array: [1, 2, 3, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, 5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Splice method modifies the original array and returns the deleted array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between slice and splice&lt;/h3&gt; &lt;p&gt;Some of the major difference in a tabular form&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Slice&lt;/th&gt; 
     &lt;th&gt;Splice&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Doesn&#39;t modify the original array(immutable)&lt;/td&gt; 
     &lt;td&gt;Modifies the original array(mutable)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Returns the subset of original array&lt;/td&gt; 
     &lt;td&gt;Returns the deleted elements as array&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Used to pick the elements from array&lt;/td&gt; 
     &lt;td&gt;Used to insert or delete elements to/from array&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare Object and Map&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Objects&lt;/strong&gt; are similar to &lt;strong&gt;Maps&lt;/strong&gt; in that both let you set keys to values, retrieve those values, delete keys, and detect whether something is stored at a key. Due to this reason, Objects have been used as Maps historically. But there are important differences that make using a Map preferable in certain cases.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The keys of an Object are Strings and Symbols, whereas they can be any value for a Map, including functions, objects, and any primitive.&lt;/li&gt; 
   &lt;li&gt;The keys in Map are ordered while keys added to Object are not. Thus, when iterating over it, a Map object returns keys in order of insertion.&lt;/li&gt; 
   &lt;li&gt;You can get the size of a Map easily with the size property, while the number of properties in an Object must be determined manually.&lt;/li&gt; 
   &lt;li&gt;A Map is an iterable and can thus be directly iterated, whereas iterating over an Object requires obtaining its keys in some fashion and iterating over them.&lt;/li&gt; 
   &lt;li&gt;An Object has a prototype, so there are default keys in the map that could collide with your keys if you&#39;re not careful. As of ES5 this can be bypassed by using map = Object.create(null), but this is seldom done.&lt;/li&gt; 
   &lt;li&gt;A Map may perform better in scenarios involving frequent addition and removal of key pairs.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between == and === operators&lt;/h3&gt; &lt;p&gt;JavaScript provides both strict(===, !==) and type-converting(==, !=) equality comparison. The strict operators take type of variable in consideration, while non-strict operators make type correction/conversion based upon values of variables. The strict operators follow the below conditions for different types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Two strings are strictly equal when they have the same sequence of characters, same length, and same characters in corresponding positions.&lt;/li&gt; 
   &lt;li&gt;Two numbers are strictly equal when they are numerically equal. i.e, Having the same number value. There are two special cases in this, 
    &lt;ol&gt; 
     &lt;li&gt;NaN is not equal to anything, including NaN.&lt;/li&gt; 
     &lt;li&gt;Positive and negative zeros are equal to one another.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Two Boolean operands are strictly equal if both are true or both are false.&lt;/li&gt; 
   &lt;li&gt;Two objects are strictly equal if they refer to the same Object.&lt;/li&gt; 
   &lt;li&gt;Null and Undefined types are not equal with ===, but equal with ==. i.e, null===undefined --&amp;gt; false but null==undefined --&amp;gt; true&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Some of the example which covers the above cases,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;0 == false   // true
0 === false  // false
1 == &quot;1&quot;     // true
1 === &quot;1&quot;    // false
null == undefined // true
null === undefined // false
&#39;0&#39; == false // true
&#39;0&#39; === false // false
[]==[] or []===[] //false, refer different objects in memory
{}=={} or {}==={} //false, refer different objects in memory
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are lambda or arrow functions&lt;/h3&gt; &lt;p&gt;An arrow function is a shorter syntax for a function expression and does not have its own &lt;strong&gt;this, arguments, super, or new.target&lt;/strong&gt;. These functions are best suited for non-method functions, and they cannot be used as constructors.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a first class function&lt;/h3&gt; &lt;p&gt;In Javascript, functions are first class objects. First-class functions means when functions in that language are treated like any other variable.&lt;/p&gt; &lt;p&gt;For example, in such a language, a function can be passed as an argument to other functions, can be returned by another function and can be assigned as a value to a variable. For example, in the below example, handler functions assigned to a listener&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const handler = () =&amp;gt; console.log (&#39;This is a click handler function&#39;);
document.addEventListener (&#39;click&#39;, handler);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a first order function&lt;/h3&gt; &lt;p&gt;First-order function is a function that doesn‚Äôt accept another function as an argument and doesn‚Äôt return a function as its return value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const firstOrder = () =&amp;gt; console.log (&#39;I am a first order function!&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a higher order function&lt;/h3&gt; &lt;p&gt;Higher-order function is a function that accepts another function as an argument or returns a function as a return value or both.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const firstOrderFunc = () =&amp;gt; console.log (&#39;Hello, I am a First order function&#39;);
const higherOrder = ReturnFirstOrderFunc =&amp;gt; ReturnFirstOrderFunc();
higherOrder(firstOrderFunc);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a unary function&lt;/h3&gt; &lt;p&gt;Unary function (i.e. monadic) is a function that accepts exactly one argument. It stands for a single argument accepted by a function.&lt;/p&gt; &lt;p&gt;Let us take an example of unary function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const unaryFunction = a =&amp;gt; console.log (a + 10); // Add 10 to the given argument and display the value
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the currying function&lt;/h3&gt; &lt;p&gt;Currying is the process of taking a function with multiple arguments and turning it into a sequence of functions each with only a single argument. Currying is named after a mathematician &lt;strong&gt;Haskell Curry&lt;/strong&gt;. By applying currying, a n-ary function turns it into a unary function.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of n-ary function and how it turns into a currying function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const multiArgFunction = (a, b, c) =&amp;gt; a + b + c;
console.log(multiArgFunction(1,2,3));// 6

const curryUnaryFunction = a =&amp;gt; b =&amp;gt; c =&amp;gt; a + b + c;
curryUnaryFunction (1); // returns a function: b =&amp;gt; c =&amp;gt;  1 + b + c
curryUnaryFunction (1) (2); // returns a function: c =&amp;gt; 3 + c
curryUnaryFunction (1) (2) (3); // returns the number 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Curried functions are great to improve &lt;strong&gt;code reusability&lt;/strong&gt; and &lt;strong&gt;functional composition&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a pure function&lt;/h3&gt; &lt;p&gt;A &lt;strong&gt;Pure function&lt;/strong&gt; is a function where the return value is only determined by its arguments without any side effects. i.e, If you call a function with the same arguments &#39;n&#39; number of times and &#39;n&#39; number of places in the application then it will always return the same value.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to see the difference between pure and impure functions,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Impure
let numberArray = [];
const impureAddNumber = number =&amp;gt; numberArray.push(number);
//Pure
const pureAddNumber = number =&amp;gt; argNumberArray =&amp;gt;
  argNumberArray.concat([number]);

//Display the results
console.log (impureAddNumber(6)); // returns 1
console.log (numberArray); // returns [6]
console.log (pureAddNumber(7) (numberArray)); // returns [6, 7]
console.log (numberArray); // returns [6]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per above code snippets, &lt;strong&gt;Push&lt;/strong&gt; function is impure itself by altering the array and returning an push number index which is independent of parameter value. Whereas &lt;strong&gt;Concat&lt;/strong&gt; on the other hand takes the array and concatenates it with the other array producing a whole new array without side effects. Also, the return value is a concatenation of the previous array.&lt;/p&gt; &lt;p&gt;Remember that Pure functions are important as they simplify unit testing without any side effects and no need for dependency injection. They also avoid tight coupling and make it harder to break your application by not having any side effects. These principles are coming together with &lt;strong&gt;Immutability&lt;/strong&gt; concept of ES6 by giving preference to &lt;strong&gt;const&lt;/strong&gt; over &lt;strong&gt;let&lt;/strong&gt; usage.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the let keyword&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;let&lt;/code&gt; statement declares a &lt;strong&gt;block scope local variable&lt;/strong&gt;. Hence the variables defined with let keyword are limited in scope to the block, statement, or expression on which it is used. Whereas variables declared with the &lt;code&gt;var&lt;/code&gt; keyword used to define a variable globally, or locally to an entire function regardless of block scope.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to demonstrate the usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 30;
if (counter === 30) {
  let counter = 31;
  console.log(counter); // 31
}
console.log(counter); // 30 (because the variable in if block won&#39;t exist here)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between let and var&lt;/h3&gt; &lt;p&gt;You can list out the differences in a tabular format&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;var&lt;/th&gt; 
     &lt;th&gt;let&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It is been available from the beginning of JavaScript&lt;/td&gt; 
     &lt;td&gt;Introduced as part of ES6&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It has function scope&lt;/td&gt; 
     &lt;td&gt;It has block scope&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Variables will be hoisted&lt;/td&gt; 
     &lt;td&gt;Hoisted but not initialized&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;Let&#39;s take an example to see the difference,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function userDetails(username) {
   if(username) {
     console.log(salary); // undefined due to hoisting
     console.log(age); // ReferenceError: Cannot access &#39;age&#39; before initialization
     let age = 30;
     var salary = 10000;
   }
   console.log(salary); //10000 (accessible to due function scope)
   console.log(age); //error: age is not defined(due to block scope)
}
userDetails(&#39;John&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the reason to choose the name let as a keyword&lt;/h3&gt; &lt;p&gt;&lt;code&gt;let&lt;/code&gt; is a mathematical statement that was adopted by early programming languages like &lt;strong&gt;Scheme&lt;/strong&gt; and &lt;strong&gt;Basic&lt;/strong&gt;. It has been borrowed from dozens of other languages that use &lt;code&gt;let&lt;/code&gt; already as a traditional keyword as close to &lt;code&gt;var&lt;/code&gt; as possible.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you redeclare variables in switch block without an error&lt;/h3&gt; &lt;p&gt;If you try to redeclare variables in a &lt;code&gt;switch block&lt;/code&gt; then it will cause errors because there is only one block. For example, the below code block throws a syntax error as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 1;
switch(x) {
  case 0:
    let name;
    break;

  case 1:
    let name; // SyntaxError for redeclaration.
    break;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To avoid this error, you can create a nested block inside a case clause and create a new block scoped lexical environment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 1;
    switch(x) {
      case 0: {
        let name;
        break;
      }
      case 1: {
        let name; // No SyntaxError for redeclaration.
        break;
      }
    }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the Temporal Dead Zone&lt;/h3&gt; &lt;p&gt;The Temporal Dead Zone is a behavior in JavaScript that occurs when declaring a variable with the let and const keywords, but not with var. In ECMAScript 6, accessing a &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; variable before its declaration (within its scope) causes a ReferenceError. The time span when that happens, between the creation of a variable‚Äôs binding and its declaration, is called the temporal dead zone.&lt;/p&gt; &lt;p&gt;Let&#39;s see this behavior with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function somemethod() {
  console.log(counter1); // undefined
  console.log(counter2); // ReferenceError
  var counter1 = 1;
  let counter2 = 2;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is IIFE(Immediately Invoked Function Expression)&lt;/h3&gt; &lt;p&gt;IIFE (Immediately Invoked Function Expression) is a JavaScript function that runs as soon as it is defined. The signature of it would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function ()
    {
      // logic here
    }
 )
();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The primary reason to use an IIFE is to obtain data privacy because any variables declared within the IIFE cannot be accessed by the outside world. i.e, If you try to access variables with IIFE then it throws an error as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function ()
        {
          var message = &quot;IIFE&quot;;
          console.log(message);
        }
 )
();
console.log(message); //Error: message is not defined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you decode or encode a URL in JavaScript?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;encodeURL()&lt;/code&gt; function is used to encode an URL. This function requires a URL string as a parameter and return that encoded string. &lt;code&gt;decodeURI()&lt;/code&gt; function is used to deocde an URL. This function requires an encoded URL string as parameter and return that decoded string.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you want to encode characters such as &lt;code&gt;/ ? : @ &amp;amp; = + $ #&lt;/code&gt; then you need to use &lt;code&gt;encodeURLComponent()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let uri = &quot;employeeDetails?name=john&amp;amp;occupation=manager&quot;;
let encoded_uri = encodeURI(uri);
let decoded_uri = decodeURI(encoded_uri);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is memoization&lt;/h3&gt; &lt;p&gt;Memoization is a programming technique which attempts to increase a function‚Äôs performance by caching its previously computed results. Each time a memoized function is called, its parameters are used to index the cache. If the data is present, then it can be returned, without executing the entire function. Otherwise the function is executed and then the result is added to the cache. Let&#39;s take an example of adding function with memoization,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const memoizAddition = () =&amp;gt; {
  let cache = {};
 return (value) =&amp;gt; {
  if (value in cache) {
   console.log(&#39;Fetching from cache&#39;);
   return cache[value]; // Here, cache.value cannot be used as property name starts with the number which is not a valid JavaScript  identifier. Hence, can only be accessed using the square bracket notation.
  }
  else {
   console.log(&#39;Calculating result&#39;);
   let result = value + 20;
   cache[value] = result;
   return result;
  }
 }
}
// returned function from memoizAddition
const addition = memoizAddition();
console.log(addition(20)); //output: 40 calculated
console.log(addition(20)); //output: 40 cached
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is Hoisting&lt;/h3&gt; &lt;p&gt;Hoisting is a JavaScript mechanism where variables and function declarations are moved to the top of their scope before code execution. Remember that JavaScript only hoists declarations, not initialisation. Let&#39;s take a simple example of variable hoisting,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(message); //output : undefined
var message = &#39;The variable Has been hoisted&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code looks like as below to the interpreter,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var message;
console.log(message);
message = &#39;The variable Has been hoisted&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are classes in ES6&lt;/h3&gt; &lt;p&gt;In ES6, Javascript classes are primarily syntactic sugar over JavaScript‚Äôs existing prototype-based inheritance. For example, the prototype based inheritance written in function expression as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Bike(model,color) {
    this.model = model;
    this.color = color;
}

Bike.prototype.getDetails = function() {
    return this.model + &#39; bike has&#39; + this.color + &#39; color&#39;;
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas ES6 classes can be defined as an alternative&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Bike{
  constructor(color, model) {
    this.color= color;
    this.model= model;
  }

  getDetails() {
    return this.model + &#39; bike has&#39; + this.color + &#39; color&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are closures&lt;/h3&gt; &lt;p&gt;A closure is the combination of a function and the lexical environment within which that function was declared. i.e, It is an inner function that has access to the outer or enclosing function‚Äôs variables. The closure has three scope chains&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Own scope where variables defined between its curly brackets&lt;/li&gt; 
   &lt;li&gt;Outer function‚Äôs variables&lt;/li&gt; 
   &lt;li&gt;Global variables&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s take an example of closure concept,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Welcome(name){
  var greetingInfo = function(message){
   console.log(message+&#39; &#39;+name);
  }
return greetingInfo;
}
var myFunction = Welcome(&#39;John&#39;);
myFunction(&#39;Welcome &#39;); //Output: Welcome John
myFunction(&#39;Hello Mr.&#39;); //output: Hello Mr.John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per the above code, the inner function(i.e, greetingInfo) has access to the variables in the outer function scope(i.e, Welcome) even after the outer function has returned.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are modules&lt;/h3&gt; &lt;p&gt;Modules refer to small units of independent, reusable code and also act as the foundation of many JavaScript design patterns. Most of the JavaScript modules export an object literal, a function, or a constructor&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need modules&lt;/h3&gt; &lt;p&gt;Below are the list of benefits using modules in javascript ecosystem&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Maintainability&lt;/li&gt; 
   &lt;li&gt;Reusability&lt;/li&gt; 
   &lt;li&gt;Namespacing&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is scope in javascript&lt;/h3&gt; &lt;p&gt;Scope is the accessibility of variables, functions, and objects in some particular part of your code during runtime. In other words, scope determines the visibility of variables and other resources in areas of your code.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a service worker&lt;/h3&gt; &lt;p&gt;A Service worker is basically a script (JavaScript file) that runs in the background, separate from a web page and provides features that don&#39;t need a web page or user interaction. Some of the major features of service workers are Rich offline experiences(offline first web application development), periodic background syncs, push notifications, intercept and handle network requests and programmatically managing a cache of responses.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you manipulate DOM using a service worker&lt;/h3&gt; &lt;p&gt;Service worker can&#39;t access the DOM directly. But it can communicate with the pages it controls by responding to messages sent via the &lt;code&gt;postMessage&lt;/code&gt; interface, and those pages can manipulate the DOM.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you reuse information across service worker restarts&lt;/h3&gt; &lt;p&gt;The problem with service worker is that it gets terminated when not in use, and restarted when it&#39;s next needed, so you cannot rely on global state within a service worker&#39;s &lt;code&gt;onfetch&lt;/code&gt; and &lt;code&gt;onmessage&lt;/code&gt; handlers. In this case, service workers will have access to IndexedDB API in order to persist and reuse across restarts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is IndexedDB&lt;/h3&gt; &lt;p&gt;IndexedDB is a low-level API for client-side storage of larger amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is web storage&lt;/h3&gt; &lt;p&gt;Web storage is an API that provides a mechanism by which browsers can store key/value pairs locally within the user&#39;s browser, in a much more intuitive fashion than using cookies. The web storage provides two mechanisms for storing data on the client.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Local storage:&lt;/strong&gt; It stores data for current origin with no expiration date.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Session storage:&lt;/strong&gt; It stores data for one session and the data is lost when the browser tab is closed.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a post message&lt;/h3&gt; &lt;p&gt;Post message is a method that enables cross-origin communication between Window objects.(i.e, between a page and a pop-up that it spawned, or between a page and an iframe embedded within it). Generally, scripts on different pages are allowed to access each other if and only if the pages follow same-origin policy(i.e, pages share the same protocol, port number, and host).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Cookie&lt;/h3&gt; &lt;p&gt;A cookie is a piece of data that is stored on your computer to be accessed by your browser. Cookies are saved as key/value pairs. For example, you can create a cookie named username as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/cookie.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need a Cookie&lt;/h3&gt; &lt;p&gt;Cookies are used to remember information about the user profile(such as username). It basically involves two steps,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When a user visits a web page, the user profile can be stored in a cookie.&lt;/li&gt; 
   &lt;li&gt;Next time the user visits the page, the cookie remembers the user profile.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the options in a cookie&lt;/h3&gt; &lt;p&gt;There are few below options available for a cookie,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;By default, the cookie is deleted when the browser is closed but you can change this behavior by setting expiry date (in UTC time).&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John; expires=Sat, 8 Jun 2019 12:00:00 UTC&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;By default, the cookie belongs to a current page. But you can tell the browser what path the cookie belongs to using a path parameter.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John; path=/services&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you delete a cookie&lt;/h3&gt; &lt;p&gt;You can delete a cookie by setting the expiry date as a passed date. You don&#39;t need to specify a cookie value in this case. For example, you can delete a username cookie in the current page as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=; expires=Fri, 07 Jun 2019 00:00:00 UTC; path=/;&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You should define the cookie path option to ensure that you delete the right cookie. Some browsers doesn&#39;t allow to delete a cookie unless you specify a path parameter.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between cookie, local storage and session storage&lt;/h3&gt; &lt;p&gt;Below are some of the differences between cookie, local storage and session storage,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Feature&lt;/th&gt; 
     &lt;th&gt;Cookie&lt;/th&gt; 
     &lt;th&gt;Local storage&lt;/th&gt; 
     &lt;th&gt;Session storage&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Accessed on client or server side&lt;/td&gt; 
     &lt;td&gt;Both server-side &amp;amp; client-side&lt;/td&gt; 
     &lt;td&gt;client-side only&lt;/td&gt; 
     &lt;td&gt;client-side only&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Lifetime&lt;/td&gt; 
     &lt;td&gt;As configured using Expires option&lt;/td&gt; 
     &lt;td&gt;until deleted&lt;/td&gt; 
     &lt;td&gt;until tab is closed&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;SSL support&lt;/td&gt; 
     &lt;td&gt;Supported&lt;/td&gt; 
     &lt;td&gt;Not supported&lt;/td&gt; 
     &lt;td&gt;Not supported&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Maximum data size&lt;/td&gt; 
     &lt;td&gt;4KB&lt;/td&gt; 
     &lt;td&gt;5 MB&lt;/td&gt; 
     &lt;td&gt;5MB&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main difference between localStorage and sessionStorage&lt;/h3&gt; &lt;p&gt;LocalStorage is the same as SessionStorage but it persists the data even when the browser is closed and reopened(i.e it has no expiration time) whereas in sessionStorage data gets cleared when the page session ends.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access web storage&lt;/h3&gt; &lt;p&gt;The Window object implements the &lt;code&gt;WindowLocalStorage&lt;/code&gt; and &lt;code&gt;WindowSessionStorage&lt;/code&gt; objects which has &lt;code&gt;localStorage&lt;/code&gt;(window.localStorage) and &lt;code&gt;sessionStorage&lt;/code&gt;(window.sessionStorage) properties respectively. These properties create an instance of the Storage object, through which data items can be set, retrieved and removed for a specific domain and storage type (session or local). For example, you can read and write on local storage objects as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;localStorage.setItem(&#39;logo&#39;, document.getElementById(&#39;logo&#39;).value);
localStorage.getItem(&#39;logo&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the methods available on session storage&lt;/h3&gt; &lt;p&gt;The session storage provided methods for reading, writing and clearing the session data&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Save data to sessionStorage
sessionStorage.setItem(&#39;key&#39;, &#39;value&#39;);

// Get saved data from sessionStorage
let data = sessionStorage.getItem(&#39;key&#39;);

// Remove saved data from sessionStorage
sessionStorage.removeItem(&#39;key&#39;);

// Remove all saved data from sessionStorage
sessionStorage.clear();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a storage event and its event handler&lt;/h3&gt; &lt;p&gt;The StorageEvent is an event that fires when a storage area has been changed in the context of another document. Whereas onstorage property is an EventHandler for processing storage events. The syntax would be as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; window.onstorage = functionRef;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take the example usage of onstorage event handler which logs the storage key and it&#39;s values&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.onstorage = function(e) {
  console.log(&#39;The &#39; + e.key +
    &#39; key has been changed from &#39; + e.oldValue +
    &#39; to &#39; + e.newValue + &#39;.&#39;);
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need web storage&lt;/h3&gt; &lt;p&gt;Web storage is more secure, and large amounts of data can be stored locally, without affecting website performance. Also, the information is never transferred to the server. Hence this is a more recommended approach than Cookies.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check web storage browser support&lt;/h3&gt; &lt;p&gt;You need to check browser support for localStorage and sessionStorage before using web storage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(Storage) !== &quot;undefined&quot;) {
  // Code for localStorage/sessionStorage.
} else {
  // Sorry! No Web Storage support..
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check web workers browser support&lt;/h3&gt; &lt;p&gt;You need to check browser support for web workers before using it&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(Worker) !== &quot;undefined&quot;) {
  // code for Web worker support.
} else {
  // Sorry! No Web Worker support..
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example of a web worker&lt;/h3&gt; &lt;p&gt;You need to follow below steps to start using web workers for counting example&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create a Web Worker File: You need to write a script to increment the count value. Let&#39;s name it as counter.js&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let i = 0;

function timedCount() {
  i = i + 1;
  postMessage(i);
  setTimeout(&quot;timedCount()&quot;,500);
}

timedCount();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Here postMessage() method is used to post a message back to the HTML page&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create a Web Worker Object: You can create a web worker object by checking for browser support. Let&#39;s name this file as web_worker_example.js&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(w) == &quot;undefined&quot;) {
  w = new Worker(&quot;counter.js&quot;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and we can receive messages from web worker&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w.onmessage = function(event){
  document.getElementById(&quot;message&quot;).innerHTML = event.data;
};
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Terminate a Web Worker: Web workers will continue to listen for messages (even after the external script is finished) until it is terminated. You can use the terminate() method to terminate listening to the messages.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w.terminate();
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Reuse the Web Worker: If you set the worker variable to undefined you can reuse the code&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w = undefined;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the restrictions of web workers on DOM&lt;/h3&gt; &lt;p&gt;WebWorkers don&#39;t have access to below javascript objects since they are defined in an external files&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Window object&lt;/li&gt; 
   &lt;li&gt;Document object&lt;/li&gt; 
   &lt;li&gt;Parent object&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a promise&lt;/h3&gt; &lt;p&gt;A promise is an object that may produce a single value some time in the future with either a resolved value or a reason that it‚Äôs not resolved(for example, network error). It will be in one of the 3 possible states: fulfilled, rejected, or pending.&lt;/p&gt; &lt;p&gt;The syntax of Promise creation looks like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    const promise = new Promise(function(resolve, reject) {
      // promise description
    })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The usage of a promise would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const promise = new Promise(resolve =&amp;gt; {
  setTimeout(() =&amp;gt; {
    resolve(&quot;I&#39;m a Promise!&quot;);
  }, 5000);
}, reject =&amp;gt; {

});

promise.then(value =&amp;gt; console.log(value));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The action flow of a promise will be as below,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/promises.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need a promise&lt;/h3&gt; &lt;p&gt;Promises are used to handle asynchronous operations. They provide an alternative approach for callbacks by reducing the callback hell and writing the cleaner code.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the three states of promise&lt;/h3&gt; &lt;p&gt;Promises have three states:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Pending:&lt;/strong&gt; This is an initial state of the Promise before an operation begins&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Fulfilled:&lt;/strong&gt; This state indicates that the specified operation was completed.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Rejected:&lt;/strong&gt; This state indicates that the operation did not complete. In this case an error value will be thrown.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a callback function&lt;/h3&gt; &lt;p&gt;A callback function is a function passed into another function as an argument. This function is invoked inside the outer function to complete an action. Let&#39;s take a simple example of how to use callback function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function callbackFunction(name) {
  console.log(&#39;Hello &#39; + name);
}

function outerFunction(callback) {
  let name = prompt(&#39;Please enter your name.&#39;);
  callback(name);
}

outerFunction(callbackFunction);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we need callbacks&lt;/h3&gt; &lt;p&gt;The callbacks are needed because javascript is an event driven language. That means instead of waiting for a response javascript will keep executing while listening for other events. Let&#39;s take an example with the first function invoking an API call(simulated by setTimeout) and the next function which logs the message.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function firstFunction(){
  // Simulate a code delay
  setTimeout( function(){
    console.log(&#39;First function called&#39;);
  }, 1000 );
}
function secondFunction(){
  console.log(&#39;Second function called&#39;);
}
firstFunction();
secondFunction();

Output
// Second function called
// First function called
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As observed from the output, javascript didn&#39;t wait for the response of the first function and the remaining code block got executed. So callbacks are used in a way to make sure that certain code doesn‚Äôt execute until the other code finishes execution.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a callback hell&lt;/h3&gt; &lt;p&gt;Callback Hell is an anti-pattern with multiple nested callbacks which makes code hard to read and debug when dealing with asynchronous logic. The callback hell looks like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async1(function(){
    async2(function(){
        async3(function(){
            async4(function(){
                ....
            });
        });
    });
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are server-sent events&lt;/h3&gt; &lt;p&gt;Server-sent events (SSE) is a server push technology enabling a browser to receive automatic updates from a server via HTTP connection without resorting to polling. These are a one way communications channel - events flow from server to client only. This has been used in Facebook/Twitter updates, stock price updates, news feeds etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you receive server-sent event notifications&lt;/h3&gt; &lt;p&gt;The EventSource object is used to receive server-sent event notifications. For example, you can receive messages from server as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(typeof(EventSource) !== &quot;undefined&quot;) {
  var source = new EventSource(&quot;sse_generator.js&quot;);
  source.onmessage = function(event) {
    document.getElementById(&quot;output&quot;).innerHTML += event.data + &quot;&amp;lt;br&amp;gt;&quot;;
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check browser support for server-sent events&lt;/h3&gt; &lt;p&gt;You can perform browser support for server-sent events before using it as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(typeof(EventSource) !== &quot;undefined&quot;) {
  // Server-sent events supported. Let&#39;s have some code here!
} else {
  // No server-sent events supported
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the events available for server sent events&lt;/h3&gt; &lt;p&gt;Below are the list of events available for server sent events&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Event&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;onopen&lt;/td&gt; 
     &lt;td&gt;It is used when a connection to the server is opened&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;onmessage&lt;/td&gt; 
     &lt;td&gt;This event is used when a message is received&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;onerror&lt;/td&gt; 
     &lt;td&gt;It happens when an error occurs&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main rules of promise&lt;/h3&gt; &lt;p&gt;A promise must follow a specific set of rules,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;A promise is an object that supplies a standard-compliant &lt;code&gt;.then()&lt;/code&gt; method&lt;/li&gt; 
   &lt;li&gt;A pending promise may transition into either fulfilled or rejected state&lt;/li&gt; 
   &lt;li&gt;A fulfilled or rejected promise is settled and it must not transition into any other state.&lt;/li&gt; 
   &lt;li&gt;Once a promise is settled, the value must not change.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is callback in callback&lt;/h3&gt; &lt;p&gt;You can nest one callback inside in another callback to execute the actions sequentially one by one. This is known as callbacks in callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;loadScript(&#39;/script1.js&#39;, function(script) {
   console.log(&#39;first script is loaded&#39;);

  loadScript(&#39;/script2.js&#39;, function(script) {

    console.log(&#39;second script is loaded&#39;);

    loadScript(&#39;/script3.js&#39;, function(script) {

        console.log(&#39;third script is loaded&#39;);
      // after all scripts are loaded
    });

  })

});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is promise chaining&lt;/h3&gt; &lt;p&gt;The process of executing a sequence of asynchronous tasks one after another using promises is known as Promise chaining. Let&#39;s take an example of promise chaining for calculating the final result,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new Promise(function(resolve, reject) {

  setTimeout(() =&amp;gt; resolve(1), 1000);

}).then(function(result) {

  console.log(result); // 1
  return result * 2;

}).then(function(result) {

  console.log(result); // 2
  return result * 3;

}).then(function(result) {

  console.log(result); // 6
  return result * 4;

});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above handlers, the result is passed to the chain of .then() handlers with the below work flow,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The initial promise resolves in 1 second,&lt;/li&gt; 
   &lt;li&gt;After that &lt;code&gt;.then&lt;/code&gt; handler is called by logging the result(1) and then return a promise with the value of result * 2.&lt;/li&gt; 
   &lt;li&gt;After that the value passed to the next &lt;code&gt;.then&lt;/code&gt; handler by logging the result(2) and return a promise with result * 3.&lt;/li&gt; 
   &lt;li&gt;Finally the value passed to the last &lt;code&gt;.then&lt;/code&gt; handler by logging the result(6) and return a promise with result * 4.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is promise.all&lt;/h3&gt; &lt;p&gt;Promise.all is a promise that takes an array of promises as an input (an iterable), and it gets resolved when all the promises get resolved or any one of them gets rejected. For example, the syntax of promise.all method is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.all([Promise1, Promise2, Promise3]) .then(result) =&amp;gt; {   console.log(result) }) .catch(error =&amp;gt; console.log(`Error in promises ${error}`))
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember that the order of the promises(output the result) is maintained as per input order.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the race method in promise&lt;/h3&gt; &lt;p&gt;Promise.race() method will return the promise instance which is firstly resolved or rejected. Let&#39;s take an example of race() method where promise2 is resolved first&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var promise1 = new Promise(function(resolve, reject) {
    setTimeout(resolve, 500, &#39;one&#39;);
});
var promise2 = new Promise(function(resolve, reject) {
    setTimeout(resolve, 100, &#39;two&#39;);
});

Promise.race([promise1, promise2]).then(function(value) {
  console.log(value); // &quot;two&quot; // Both promises will resolve, but promise2 is faster
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a strict mode in javascript&lt;/h3&gt; &lt;p&gt;Strict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a ‚Äústrict‚Äù operating context. This way it prevents certain actions from being taken and throws more exceptions. The literal expression &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; instructs the browser to use the javascript code in the Strict mode.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need strict mode&lt;/h3&gt; &lt;p&gt;Strict mode is useful to write &quot;secure&quot; JavaScript by notifying &quot;bad syntax&quot; into real errors. For example, it eliminates accidentally creating a global variable by throwing an error and also throws an error for assignment to a non-writable property, a getter-only property, a non-existing property, a non-existing variable, or a non-existing object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you declare strict mode&lt;/h3&gt; &lt;p&gt;The strict mode is declared by adding &quot;use strict&quot;; to the beginning of a script or a function. If declared at the beginning of a script, it has global scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;use strict&quot;;
x = 3.14; // This will cause an error because x is not declared
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and if you declare inside a function, it has local scope&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;x = 3.14;       // This will not cause an error.
myFunction();

function myFunction() {
  &quot;use strict&quot;;
  y = 3.14;   // This will cause an error
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of double exclamation&lt;/h3&gt; &lt;p&gt;The double exclamation or negation(!!) ensures the resulting type is a boolean. If it was falsey (e.g. 0, null, undefined, etc.), it will be false, otherwise, true. For example, you can test IE version using this expression as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let isIE8 = false;
isIE8 = !! navigator.userAgent.match(/MSIE 8.0/);
console.log(isIE8); // returns true or false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use this expression then it returns the original value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(navigator.userAgent.match(/MSIE 8.0/));  // returns either an Array or null
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The expression !! is not an operator, but it is just twice of ! operator.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the delete operator&lt;/h3&gt; &lt;p&gt;The delete keyword is used to delete the property as well as its value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user= {name: &quot;John&quot;, age:20};
delete user.age;

console.log(user); // {name: &quot;John&quot;}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the typeof operator&lt;/h3&gt; &lt;p&gt;You can use the JavaScript typeof operator to find the type of a JavaScript variable. It returns the type of a variable or an expression.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;typeof &quot;John Abraham&quot;     // Returns &quot;string&quot;
typeof (1 + 2)        // Returns &quot;number&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is undefined property&lt;/h3&gt; &lt;p&gt;The undefined property indicates that a variable has not been assigned a value, or not declared at all. The type of undefined value is undefined too.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user;    // Value is undefined, type is undefined
console.log(typeof(user)) //undefined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Any variable can be emptied by setting the value to undefined.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;user = undefined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is null value&lt;/h3&gt; &lt;p&gt;The value null represents the intentional absence of any object value. It is one of JavaScript&#39;s primitive values. The type of null value is object. You can empty the variable by setting the value to null.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user = null;
console.log(typeof(user)) //object
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between null and undefined&lt;/h3&gt; &lt;p&gt;Below are the main differences between null and undefined,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Null&lt;/th&gt; 
     &lt;th&gt;Undefined&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It is an assignment value which indicates that variable points to no object.&lt;/td&gt; 
     &lt;td&gt;It is not an assignment value where a variable has been declared but has not yet been assigned a value.&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Type of null is object&lt;/td&gt; 
     &lt;td&gt;Type of undefined is undefined&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;The null value is a primitive value that represents the null, empty, or non-existent reference.&lt;/td&gt; 
     &lt;td&gt;The undefined value is a primitive value used when a variable has not been assigned a value.&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Indicates the absence of a value for a variable&lt;/td&gt; 
     &lt;td&gt;Indicates absence of variable itself&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Converted to zero (0) while performing primitive operations&lt;/td&gt; 
     &lt;td&gt;Converted to NaN while performing primitive operations&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is eval&lt;/h3&gt; &lt;p&gt;The eval() function evaluates JavaScript code represented as a string. The string can be a JavaScript expression, variable, statement, or sequence of statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(eval(&#39;1 + 2&#39;)); //  3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between window and document&lt;/h3&gt; &lt;p&gt;Below are the main differences between window and document,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Window&lt;/th&gt; 
     &lt;th&gt;Document&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It is the root level element in any web page&lt;/td&gt; 
     &lt;td&gt;It is the direct child of the window object. This is also known as Document Object Model(DOM)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;By default window object is available implicitly in the page&lt;/td&gt; 
     &lt;td&gt;You can access it via window.document or document.&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It has methods like alert(), confirm() and properties like document, location&lt;/td&gt; 
     &lt;td&gt;It provides methods like getElementById, getElementsByTagName, createElement etc&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access history in javascript&lt;/h3&gt; &lt;p&gt;The window.history object contains the browser&#39;s history. You can load previous and next URLs in the history using back() and next() methods.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function goBack() {
  window.history.back()
}
function goForward() {
  window.history.forward()
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can also access history without window prefix.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect caps lock key turned on or not&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;mouseEvent getModifierState()&lt;/code&gt; is used to return a boolean value that indicates whether the specified modifier key is activated or not. The modifiers such as CapsLock, ScrollLock and NumLock are activated when they are clicked, and deactivated when they are clicked again.&lt;/p&gt; &lt;p&gt;Let&#39;s take an input element to detect the CapsLock on/off behavior with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;    &amp;lt;input type=&quot;password&quot; onmousedown=&quot;enterInput(event)&quot;&amp;gt;
      
    &amp;lt;p id=&quot;feedback&quot;&amp;gt;&amp;lt;/p&amp;gt;
      
    &amp;lt;script&amp;gt;
    function enterInput(e) {
      var flag = e.getModifierState(&quot;CapsLock&quot;);
      if(flag) {
          document.getElementById(&quot;feedback&quot;).innerHTML = &quot;CapsLock activated&quot;;
          
      } else {
          document.getElementById(&quot;feedback&quot;).innerHTML = &quot;CapsLock not activated&quot;;
      }
    }
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is isNaN&lt;/h3&gt; &lt;p&gt;The isNaN() function is used to determine whether a value is an illegal number (Not-a-Number) or not. i.e, This function returns true if the value equates to NaN. Otherwise it returns false.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isNaN(&#39;Hello&#39;) //true
isNaN(&#39;100&#39;) //false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between undeclared and undefined variables&lt;/h3&gt; &lt;p&gt;Below are the major differences between undeclared and undefined variables,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;undeclared&lt;/th&gt; 
     &lt;th&gt;undefined&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;These variables do not exist in a program and are not declared&lt;/td&gt; 
     &lt;td&gt;These variables declared in the program but have not assigned any value&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;If you try to read the value of an undeclared variable, then a runtime error is encountered&lt;/td&gt; 
     &lt;td&gt;If you try to read the value of an undefined variable, an undefined value is returned.&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are global variables&lt;/h3&gt; &lt;p&gt;Global variables are those that are available throughout the length of the code without any scope. The var keyword is used to declare a local variable but if you omit it then it will become global variable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;msg = &quot;Hello&quot; // var is missing, it becomes global variable
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems with global variables&lt;/h3&gt; &lt;p&gt;The problem with global variables is the conflict of variable names of local and global scope. It is also difficult to debug and test the code that relies on global variables.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is NaN property&lt;/h3&gt; &lt;p&gt;The NaN property is a global property that represents &quot;Not-a-Number&quot; value. i.e, It indicates that a value is not a legal number. It is very rare to use NaN in a program but it can be used as return value for few cases&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Math.sqrt(-1)
parseInt(&quot;Hello&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of isFinite function&lt;/h3&gt; &lt;p&gt;The isFinite() function is used to determine whether a number is a finite, legal number. It returns false if the value is +infinity, -infinity, or NaN (Not-a-Number), otherwise it returns true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isFinite(Infinity);  // false
isFinite(NaN);       // false
isFinite(-Infinity); // false

isFinite(100);         // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event flow&lt;/h3&gt; &lt;p&gt;Event flow is the order in which event is received on the web page. When you click an element that is nested in various other elements, before your click actually reaches its destination, or target element, it must trigger the click event for each of its parent elements first, starting at the top with the global window object. There are two ways of event flow&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Top to Bottom(Event Capturing)&lt;/li&gt; 
   &lt;li&gt;Bottom to Top (Event Bubbling)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is event bubbling&lt;/h3&gt; &lt;p&gt;Event bubbling is a type of event propagation where the event first triggers on the innermost target element, and then successively triggers on the ancestors (parents) of the target element in the same nesting hierarchy till it reaches the outermost DOM element.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is event capturing&lt;/h3&gt; &lt;p&gt;Event capturing is a type of event propagation where the event is first captured by the outermost element, and then successively triggers on the descendants (children) of the target element in the same nesting hierarchy till it reaches the innermost DOM element.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you submit a form using JavaScript&lt;/h3&gt; &lt;p&gt;You can submit a form using &lt;code&gt;document.forms[0].submit()&lt;/code&gt;. All the form input&#39;s information is submitted using onsubmit event handler&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function submit() {
    document.forms[0].submit();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find operating system details&lt;/h3&gt; &lt;p&gt;The window.navigator object contains information about the visitor&#39;s browser OS details. Some of the OS properties are available under platform property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(navigator.platform);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between document load and DOMContentLoaded events&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;DOMContentLoaded&lt;/code&gt; event is fired when the initial HTML document has been completely loaded and parsed, without waiting for assets(stylesheets, images, and subframes) to finish loading. Whereas The load event is fired when the whole page has loaded, including all dependent resources(stylesheets, images).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between native, host and user objects&lt;/h3&gt; &lt;p&gt;&lt;code&gt;Native objects&lt;/code&gt; are objects that are part of the JavaScript language defined by the ECMAScript specification. For example, String, Math, RegExp, Object, Function etc core objects defined in the ECMAScript spec. &lt;code&gt;Host objects&lt;/code&gt; are objects provided by the browser or runtime environment (Node). For example, window, XmlHttpRequest, DOM nodes etc are considered as host objects. &lt;code&gt;User objects&lt;/code&gt; are objects defined in the javascript code. For example, User objects created for profile information.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the tools or techniques used for debugging JavaScript code&lt;/h3&gt; &lt;p&gt;You can use below tools or techniques for debugging javascript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Chrome Devtools&lt;/li&gt; 
   &lt;li&gt;debugger statement&lt;/li&gt; 
   &lt;li&gt;Good old console.log statement&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the pros and cons of promises over callbacks&lt;/h3&gt; &lt;p&gt;Below are the list of pros and cons of promises over callbacks,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It avoids callback hell which is unreadable&lt;/li&gt; 
   &lt;li&gt;Easy to write sequential asynchronous code with .then()&lt;/li&gt; 
   &lt;li&gt;Easy to write parallel asynchronous code with Promise.all()&lt;/li&gt; 
   &lt;li&gt;Solves some of the common problems of callbacks(call the callback too late, too early, many times and swallow errors/exceptions)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It makes little complex code&lt;/li&gt; 
   &lt;li&gt;You need to load a polyfill if ES6 is not supported&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between an attribute and a property&lt;/h3&gt; &lt;p&gt;Attributes are defined on the HTML markup whereas properties are defined on the DOM. For example, the below HTML element has 2 attributes type and value,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;input type=&quot;text&quot; value=&quot;Name:&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can retrieve the attribute value as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const input = document.querySelector(&#39;input&#39;);
console.log(input.getAttribute(&#39;value&#39;)); // Good morning
console.log(input.value); // Good morning
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And after you change the value of the text field to &quot;Good evening&quot;, it becomes like&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(input.getAttribute(&#39;value&#39;)); // Good morning
console.log(input.value); // Good evening
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is same-origin policy&lt;/h3&gt; &lt;p&gt;The same-origin policy is a policy that prevents JavaScript from making requests across domain boundaries. An origin is defined as a combination of URI scheme, hostname, and port number. If you enable this policy then it prevents a malicious script on one page from obtaining access to sensitive data on another web page using Document Object Model(DOM).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of void 0&lt;/h3&gt; &lt;p&gt;Void(0) is used to prevent the page from refreshing. This will be helpful to eliminate the unwanted side-effect, because it will return the undefined primitive value. It is commonly used for HTML documents that use href=&quot;JavaScript:Void(0);&quot; within an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element. i.e, when you click a link, the browser loads a new page or refreshes the same page. But this behavior will be prevented using this expression. For example, the below link notify the message without reloading the page&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;a href=&quot;JavaScript:void(0);&quot; onclick=&quot;alert(&#39;Well done!&#39;)&quot;&amp;gt;Click Me!&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript a compiled or interpreted language&lt;/h3&gt; &lt;p&gt;JavaScript is an interpreted language, not a compiled language. An interpreter in the browser reads over the JavaScript code, interprets each line, and runs it. Nowadays modern browsers use a technology known as Just-In-Time (JIT) compilation, which compiles JavaScript to executable bytecode just as it is about to run.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript a case-sensitive language&lt;/h3&gt; &lt;p&gt;Yes, JavaScript is a case sensitive language. The language keywords, variables, function &amp;amp; object names, and any other identifiers must always be typed with a consistent capitalization of letters.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is there any relation between Java and JavaScript&lt;/h3&gt; &lt;p&gt;No, they are entirely two different programming languages and have nothing to do with each other. But both of them are Object Oriented Programming languages and like many other languages, they follow similar syntax for basic features(if, else, for, switch, break, continue etc).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are events&lt;/h3&gt; &lt;p&gt;Events are &quot;things&quot; that happen to HTML elements. When JavaScript is used in HTML pages, JavaScript can &lt;code&gt;react&lt;/code&gt; on these events. Some of the examples of HTML events are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Web page has finished loading&lt;/li&gt; 
   &lt;li&gt;Input field was changed&lt;/li&gt; 
   &lt;li&gt;Button was clicked&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s describe the behavior of click event for button element,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
   &amp;lt;script&amp;gt;
     function greeting() {
       alert(&#39;Hello! Good morning&#39;);
     }
   &amp;lt;/script&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
   &amp;lt;button type=&quot;button&quot; onclick=&quot;greeting()&quot;&amp;gt;Click me&amp;lt;/button&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Who created javascript&lt;/h3&gt; &lt;p&gt;JavaScript was created by Brendan Eich in 1995 during his time at Netscape Communications. Initially it was developed under the name &lt;code&gt;Mocha&lt;/code&gt;, but later the language was officially called &lt;code&gt;LiveScript&lt;/code&gt; when it first shipped in beta releases of Netscape.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of preventDefault method&lt;/h3&gt; &lt;p&gt;The preventDefault() method cancels the event if it is cancelable, meaning that the default action or behaviour that belongs to the event will not occur. For example, prevent form submission when clicking on submit button and prevent opening the page URL when clicking on hyperlink are some common use cases.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&quot;link&quot;).addEventListener(&quot;click&quot;, function(event){
 event.preventDefault();
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember that not all events are cancelable.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of stopPropagation method&lt;/h3&gt; &lt;p&gt;The stopPropagation method is used to stop the event from bubbling up the event chain. For example, the below nested divs with stopPropagation method prevents default event propagation when clicking on nested div(Div1)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;p&amp;gt;Click DIV1 Element&amp;lt;/p&amp;gt;
&amp;lt;div onclick=&quot;secondFunc()&quot;&amp;gt;DIV 2
  &amp;lt;div onclick=&quot;firstFunc(event)&quot;&amp;gt;DIV 1&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
function firstFunc(event) {
  alert(&quot;DIV 1&quot;);
  event.stopPropagation();
}

function secondFunc() {
  alert(&quot;DIV 2&quot;);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the steps involved in return false usage&lt;/h3&gt; &lt;p&gt;The return false statement in event handlers performs the below steps,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;First it stops the browser&#39;s default action or behaviour.&lt;/li&gt; 
   &lt;li&gt;It prevents the event from propagating the DOM&lt;/li&gt; 
   &lt;li&gt;Stops callback execution and returns immediately when called.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is BOM&lt;/h3&gt; &lt;p&gt;The Browser Object Model (BOM) allows JavaScript to &quot;talk to&quot; the browser. It consists of the objects navigator, history, screen, location and document which are children of the window. The Browser Object Model is not standardized and can change based on different browsers.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/bom.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of setTimeout&lt;/h3&gt; &lt;p&gt;The setTimeout() method is used to call a function or evaluate an expression after a specified number of milliseconds. For example, let&#39;s log a message after 2 seconds using setTimeout method,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setTimeout(function(){ console.log(&quot;Good morning&quot;); }, 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of setInterval&lt;/h3&gt; &lt;p&gt;The setInterval() method is used to call a function or evaluate an expression at specified intervals (in milliseconds). For example, let&#39;s log a message after 2 seconds using setInterval method,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setInterval(function(){ console.log(&quot;Good morning&quot;); }, 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why is JavaScript treated as Single threaded&lt;/h3&gt; &lt;p&gt;JavaScript is a single-threaded language. Because the language specification does not allow the programmer to write code so that the interpreter can run parts of it in parallel in multiple threads or processes. Whereas languages like java, go, C++ can make multi-threaded and multi-process programs.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event delegation&lt;/h3&gt; &lt;p&gt;Event delegation is a technique for listening to events where you delegate a parent element as the listener for all of the events that happen inside it.&lt;/p&gt; &lt;p&gt;For example, if you wanted to detect field changes in inside a specific form, you can use event delegation technique,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var form = document.querySelector(&#39;#registration-form&#39;);

// Listen for changes to fields inside the form
form.addEventListener(&#39;input&#39;, function (event) {

// Log the field that was changed
console.log(event.target);

}, false);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ECMAScript&lt;/h3&gt; &lt;p&gt;ECMAScript is the scripting language that forms the basis of JavaScript. ECMAScript standardized by the ECMA International standards organization in the ECMA-262 and ECMA-402 specifications. The first edition of ECMAScript was released in 1997.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSON&lt;/h3&gt; &lt;p&gt;JSON (JavaScript Object Notation) is a lightweight format that is used for data interchanging. It is based on a subset of JavaScript language in the way objects are built in JavaScript.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the syntax rules of JSON&lt;/h3&gt; &lt;p&gt;Below are the list of syntax rules of JSON&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The data is in name/value pairs&lt;/li&gt; 
   &lt;li&gt;The data is separated by commas&lt;/li&gt; 
   &lt;li&gt;Curly braces hold objects&lt;/li&gt; 
   &lt;li&gt;Square brackets hold arrays&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose JSON stringify&lt;/h3&gt; &lt;p&gt;When sending data to a web server, the data has to be in a string format. You can achieve this by converting JSON object into a string using stringify() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var userJSON = {&#39;name&#39;: &#39;John&#39;, age: 31}
var userString = JSON.stringify(user);
console.log(userString); //&quot;{&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:31}&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you parse JSON string&lt;/h3&gt; &lt;p&gt;When receiving the data from a web server, the data is always in a string format. But you can convert this string value to a javascript object using parse() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var userString = &#39;{&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:31}&#39;;
var userJSON = JSON.parse(userString);
console.log(userJSON);// {name: &quot;John&quot;, age: 31}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need JSON&lt;/h3&gt; &lt;p&gt;When exchanging data between a browser and a server, the data can only be text. Since JSON is text only, it can easily be sent to and from a server, and used as a data format by any programming language.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are PWAs&lt;/h3&gt; &lt;p&gt;Progressive web applications (PWAs) are a type of mobile app delivered through the web, built using common web technologies including HTML, CSS and JavaScript. These PWAs are deployed to servers, accessible through URLs, and indexed by search engines.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of clearTimeout method&lt;/h3&gt; &lt;p&gt;The clearTimeout() function is used in javascript to clear the timeout which has been set by setTimeout()function before that. i.e, The return value of setTimeout() function is stored in a variable and it‚Äôs passed into the clearTimeout() function to clear the timer.&lt;/p&gt; &lt;p&gt;For example, the below setTimeout method is used to display the message after 3 seconds. This timeout can be cleared by the clearTimeout() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script&amp;gt;
var msg;
function greeting() {
   alert(&#39;Good morning&#39;);
}
function start() {
  msg =setTimeout(greeting, 3000);

}

function stop() {
    clearTimeout(msg);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of clearInterval method&lt;/h3&gt; &lt;p&gt;The clearInterval() function is used in javascript to clear the interval which has been set by setInterval() function. i.e, The return value returned by setInterval() function is stored in a variable and it‚Äôs passed into the clearInterval() function to clear the interval.&lt;/p&gt; &lt;p&gt;For example, the below setInterval method is used to display the message for every 3 seconds. This interval can be cleared by the clearInterval() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script&amp;gt;
var msg;
function greeting() {
   alert(&#39;Good morning&#39;);
}
function start() {
  msg = setInterval(greeting, 3000);

}

function stop() {
    clearInterval(msg);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you redirect new page in javascript&lt;/h3&gt; &lt;p&gt;In vanilla javascript, you can redirect to a new page using the &lt;code&gt;location&lt;/code&gt; property of window object. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function redirect() {
   window.location.href = &#39;newPage.html&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether a string contains a substring&lt;/h3&gt; &lt;p&gt;There are 3 possible ways to check whether a string contains a substring or not,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using includes:&lt;/strong&gt; ES6 provided &lt;code&gt;String.prototype.includes&lt;/code&gt; method to test a string contains a substring&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, subString = &quot;hell&quot;;
mainString.includes(subString)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using indexOf:&lt;/strong&gt; In an ES5 or older environment, you can use &lt;code&gt;String.prototype.indexOf&lt;/code&gt; which returns the index of a substring. If the index value is not equal to -1 then it means the substring exists in the main string.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, subString = &quot;hell&quot;;
mainString.indexOf(subString) !== -1
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using RegEx:&lt;/strong&gt; The advanced solution is using Regular expression&#39;s test method(&lt;code&gt;RegExp.test&lt;/code&gt;), which allows for testing for against regular expressions&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, regex = /hell/;
regex.test(mainString)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you validate an email in javascript&lt;/h3&gt; &lt;p&gt;You can validate an email in javascript using regular expressions. It is recommended to do validations on the server side instead of the client side. Because the javascript can be disabled on the client side.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function validateEmail(email) {
    var re = /^(([^&amp;lt;&amp;gt;()\[\]\\.,;:\s@&quot;]+(\.[^&amp;lt;&amp;gt;()\[\]\\.,;:\s@&quot;]+)*)|(&quot;.+&quot;))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The above regular expression accepts unicode characters.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the current url with javascript&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;window.location.href&lt;/code&gt; expression to get the current url path and you can use the same expression for updating the URL too. You can also use &lt;code&gt;document.URL&lt;/code&gt; for read-only purposes but this solution has issues in FF.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;location.href&#39;, window.location.href); // Returns full URL
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the various url properties of location object&lt;/h3&gt; &lt;p&gt;The below &lt;code&gt;Location&lt;/code&gt; object properties can be used to access URL components of the page,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;href - The entire URL&lt;/li&gt; 
   &lt;li&gt;protocol - The protocol of the URL&lt;/li&gt; 
   &lt;li&gt;host - The hostname and port of the URL&lt;/li&gt; 
   &lt;li&gt;hostname - The hostname of the URL&lt;/li&gt; 
   &lt;li&gt;port - The port number in the URL&lt;/li&gt; 
   &lt;li&gt;pathname - The path name of the URL&lt;/li&gt; 
   &lt;li&gt;search - The query portion of the URL&lt;/li&gt; 
   &lt;li&gt;hash - The anchor portion of the URL&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do get query string values in javascript&lt;/h3&gt; &lt;p&gt;You can use URLSearchParams to get query string values in javascript. Let&#39;s see an example to get the client code value from URL query string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const urlParams = new URLSearchParams(window.location.search);
const clientCode = urlParams.get(&#39;clientCode&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check if a key exists in an object&lt;/h3&gt; &lt;p&gt;You can check whether a key exists in an object or not using three approaches,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using in operator:&lt;/strong&gt; You can use the in operator whether a key exists in an object or not&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;key&quot; in obj
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and If you want to check if a key doesn&#39;t exist, remember to use parenthesis,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;!(&quot;key&quot; in obj)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using hasOwnProperty method:&lt;/strong&gt; You can use &lt;code&gt;hasOwnProperty&lt;/code&gt; to particularly test for properties of the object instance (and not inherited properties)&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;obj.hasOwnProperty(&quot;key&quot;) // true
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using undefined comparison:&lt;/strong&gt; If you access a non-existing property from an object, the result is undefined. Let‚Äôs compare the properties against undefined to determine the existence of the property.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = {
  name: &#39;John&#39;
};

console.log(user.name !== undefined);     // true
console.log(user.nickName !== undefined); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you loop through or enumerate javascript object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;for-in&lt;/code&gt; loop to loop through javascript object. You can also make sure that the key you get is an actual property of an object, and doesn&#39;t come from the prototype using &lt;code&gt;hasOwnProperty&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {
    &quot;k1&quot;: &quot;value1&quot;,
    &quot;k2&quot;: &quot;value2&quot;,
    &quot;k3&quot;: &quot;value3&quot;
};

for (var key in object) {
    if (object.hasOwnProperty(key)) {
        console.log(key + &quot; -&amp;gt; &quot; + object[key]); // k1 -&amp;gt; value1 ...
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you test for an empty object&lt;/h3&gt; &lt;p&gt;There are different solutions based on ECMAScript versions&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object entries(ECMA 7+):&lt;/strong&gt; You can use object entries length along with constructor type.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.entries(obj).length === 0 &amp;amp;&amp;amp; obj.constructor === Object // Since date object length is 0, you need to check constructor check as well
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object keys(ECMA 5+):&lt;/strong&gt; You can use object keys length along with constructor type.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.keys(obj).length === 0 &amp;amp;&amp;amp; obj.constructor === Object // Since date object length is 0, you need to check constructor check as well
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using for-in with hasOwnProperty(Pre-ECMA 5):&lt;/strong&gt; You can use a for-in loop along with hasOwnProperty.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isEmpty(obj) {
  for(var prop in obj) {
    if(obj.hasOwnProperty(prop)) {
      return false;
    }
  }

  return JSON.stringify(obj) === JSON.stringify({});
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an arguments object&lt;/h3&gt; &lt;p&gt;The arguments object is an Array-like object accessible inside functions that contains the values of the arguments passed to that function. For example, let&#39;s see how to use arguments object inside sum function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function sum() {
    var total = 0;
    for (var i = 0, len = arguments.length; i &amp;lt; len; ++i) {
        total += arguments[i];
    }
    return total;
}

sum(1, 2, 3) // returns 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can&#39;t apply array methods on arguments object. But you can convert into a regular array as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var argsArray = Array.prototype.slice.call(arguments);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make first letter of the string in an uppercase&lt;/h3&gt; &lt;p&gt;You can create a function which uses a chain of string methods such as charAt, toUpperCase and slice methods to generate a string with the first letter in uppercase.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the pros and cons of for loop&lt;/h3&gt; &lt;p&gt;The for-loop is a commonly used iteration syntax in javascript. It has both pros and cons&lt;/p&gt; &lt;h4&gt;Pros&lt;/h4&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Works on every environment&lt;/li&gt; 
   &lt;li&gt;You can use break and continue flow control statements&lt;/li&gt; 
  &lt;/ol&gt; &lt;h4&gt;Cons&lt;/h4&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Too verbose&lt;/li&gt; 
   &lt;li&gt;Imperative&lt;/li&gt; 
   &lt;li&gt;You might face one-by-off errors&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you display the current date in javascript&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new Date()&lt;/code&gt; to generate a new Date object containing the current date and time. For example, let&#39;s display the current date in mm/dd/yyyy&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var today = new Date();
var dd = String(today.getDate()).padStart(2, &#39;0&#39;);
var mm = String(today.getMonth() + 1).padStart(2, &#39;0&#39;); //January is 0!
var yyyy = today.getFullYear();

today = mm + &#39;/&#39; + dd + &#39;/&#39; + yyyy;
document.write(today);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare two date objects&lt;/h3&gt; &lt;p&gt;You need to use date.getTime() method to compare date values instead of comparison operators (==, !=, ===, and !== operators)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var d1 = new Date();
var d2 = new Date(d1);
console.log(d1.getTime() === d2.getTime()); //True
console.log(d1 === d2); // False
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check if a string starts with another string&lt;/h3&gt; &lt;p&gt;You can use ECMAScript 6&#39;s &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; method to check if a string starts with another string or not. But it is not yet supported in all browsers. Let&#39;s see an example to see this usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;Good morning&quot;.startsWith(&quot;Good&quot;); // true
&quot;Good morning&quot;.startsWith(&quot;morning&quot;); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you trim a string in javascript&lt;/h3&gt; &lt;p&gt;JavaScript provided a trim method on string types to trim any whitespaces present at the beginning or ending of the string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;  Hello World   &quot;.trim(); //Hello World
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your browser(&amp;lt;IE9) doesn&#39;t support this method then you can use below polyfill.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (!String.prototype.trim) {
    (function() {
        // Make sure we trim BOM and NBSP
        var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
        String.prototype.trim = function() {
            return this.replace(rtrim, &#39;&#39;);
        };
    })();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you add a key value pair in javascript&lt;/h3&gt; &lt;p&gt;There are two possible solutions to add new properties to an object. Let&#39;s take a simple object to explain these solutions.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {
    key1: value1,
    key2: value2
};
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using dot notation:&lt;/strong&gt; This solution is useful when you know the name of the property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;object.key3 = &quot;value3&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using square bracket notation:&lt;/strong&gt; This solution is useful when the name of the property is dynamically determined.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;obj[&quot;key3&quot;] = &quot;value3&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is the !-- notation represents a special operator&lt;/h3&gt; &lt;p&gt;No,that&#39;s not a special operator. But it is a combination of 2 standard operators one after the other,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;A logical not (!)&lt;/li&gt; 
   &lt;li&gt;A prefix decrement (--)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;At first, the value decremented by one and then tested to see if it is equal to zero or not for determining the truthy/falsy value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you assign default values to variables&lt;/h3&gt; &lt;p&gt;You can use the logical or operator &lt;code&gt;||&lt;/code&gt; in an assignment expression to provide a default value. The syntax looks like as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = b || c;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per the above expression, variable &#39;a &#39;will get the value of &#39;c&#39; only if &#39;b&#39; is falsy (if is null, false, undefined, 0, empty string, or NaN), otherwise &#39;a&#39; will get the value of &#39;b&#39;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define multiline strings&lt;/h3&gt; &lt;p&gt;You can define multiline string literals using the &#39;\&#39; character followed by line terminator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var str = &quot;This is a \
very lengthy \
sentence!&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But if you have a space after the &#39;\&#39; character, the code will look exactly the same, but it will raise a SyntaxError.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an app shell model&lt;/h3&gt; &lt;p&gt;An application shell (or app shell) architecture is one way to build a Progressive Web App that reliably and instantly loads on your users&#39; screens, similar to what you see in native applications. It is useful for getting some initial HTML to the screen fast without a network.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can we define properties for functions&lt;/h3&gt; &lt;p&gt;Yes, We can define properties for functions because functions are also objects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fn = function(x) {
   //Function code goes here
}

fn.name = &quot;John&quot;;

fn.profile = function(y) {
  //Profile code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the way to find the number of parameters expected by a function&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;function.length&lt;/code&gt; syntax to find the number of parameters expected by a function. Let&#39;s take an example of &lt;code&gt;sum&lt;/code&gt; function to calculate the sum of numbers,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function sum(num1, num2, num3, num4){
    return num1 + num2 + num3 + num4;
}
sum.length // 4 is the number of parameters expected.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a polyfill&lt;/h3&gt; &lt;p&gt;A polyfill is a piece of JS code used to provide modern functionality on older browsers that do not natively support it. For example, Silverlight plugin polyfill can be used to mimic the functionality of an HTML Canvas element on Microsoft Internet Explorer 7.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are break and continue statements&lt;/h3&gt; &lt;p&gt;The break statement is used to &quot;jump out&quot; of a loop. i.e, It breaks the loop and continues executing the code after the loop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (i = 0; i &amp;lt; 10; i++) {
  if (i === 5) { break; }
  text += &quot;Number: &quot; + i + &quot;&amp;lt;br&amp;gt;&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The continue statement is used to &quot;jump over&quot; one iteration in the loop. i.e, It breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (i = 0; i &amp;lt; 10; i++) {
    if (i === 5) { continue; }
    text += &quot;Number: &quot; + i + &quot;&amp;lt;br&amp;gt;&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are js labels&lt;/h3&gt; &lt;p&gt;The label statement allows us to name loops and blocks in JavaScript. We can then use these labels to refer back to the code later. For example, the below code with labels avoids printing the numbers when they are same,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var i, j;

loop1:
for (i = 0; i &amp;lt; 3; i++) {
   loop2:
   for (j = 0; j &amp;lt; 3; j++) {
      if (i === j) {
         continue loop1;
      }
      console.log(&#39;i = &#39; + i + &#39;, j = &#39; + j);
   }
}

// Output is:
//   &quot;i = 1, j = 0&quot;
//   &quot;i = 2, j = 0&quot;
//   &quot;i = 2, j = 1&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of keeping declarations at the top&lt;/h3&gt; &lt;p&gt;It is recommended to keep all declarations at the top of each script or function. The benefits of doing this are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Gives cleaner code&lt;/li&gt; 
   &lt;li&gt;It provides a single place to look for local variables&lt;/li&gt; 
   &lt;li&gt;Easy to avoid unwanted global variables&lt;/li&gt; 
   &lt;li&gt;It reduces the possibility of unwanted re-declarations&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of initializing variables&lt;/h3&gt; &lt;p&gt;It is recommended to initialize variables because of the below benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It gives cleaner code&lt;/li&gt; 
   &lt;li&gt;It provides a single place to initialize variables&lt;/li&gt; 
   &lt;li&gt;Avoid undefined values in the code&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the recommendations to create new object&lt;/h3&gt; &lt;p&gt;It is recommended to avoid creating new objects using &lt;code&gt;new Object()&lt;/code&gt;. Instead you can initialize values based on it&#39;s type to create the objects.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Assign {} instead of new Object()&lt;/li&gt; 
   &lt;li&gt;Assign &quot;&quot; instead of new String()&lt;/li&gt; 
   &lt;li&gt;Assign 0 instead of new Number()&lt;/li&gt; 
   &lt;li&gt;Assign false instead of new Boolean()&lt;/li&gt; 
   &lt;li&gt;Assign [] instead of new Array()&lt;/li&gt; 
   &lt;li&gt;Assign /()/ instead of new RegExp()&lt;/li&gt; 
   &lt;li&gt;Assign function (){} instead of new Function()&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;You can define them as an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var v1 = {};
var v2 = &quot;&quot;;
var v3 = 0;
var v4 = false;
var v5 = [];
var v6 = /()/;
var v7 = function(){};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define JSON arrays&lt;/h3&gt; &lt;p&gt;JSON arrays are written inside square brackets and arrays contain javascript objects. For example, the JSON array of users would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;users&quot;:[
  {&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Abrahm&quot;},
  {&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;},
  {&quot;firstName&quot;:&quot;Shane&quot;, &quot;lastName&quot;:&quot;Warn&quot;}
]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you generate random integers&lt;/h3&gt; &lt;p&gt;You can use Math.random() with Math.floor() to return random integers. For example, if you want generate random integers between 1 to 10, the multiplication factor should be 10,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Math.floor(Math.random() * 10) + 1;     // returns a random integer from 1 to 10
Math.floor(Math.random() * 100) + 1;     // returns a random integer from 1 to 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Math.random() returns a random number between 0 (inclusive), and 1 (exclusive)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can you write a random integers function to print integers with in a range&lt;/h3&gt; &lt;p&gt;Yes, you can create a proper random function to return a random number between min and max (both included)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function randomInteger(min, max) {
  return Math.floor(Math.random() * (max - min + 1) ) + min;
}
randomInteger(1, 100); // returns a random integer from 1 to 100
randomInteger(1, 1000); // returns a random integer from 1 to 1000
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is tree shaking&lt;/h3&gt; &lt;p&gt;Tree shaking is a form of dead code elimination. It means that unused modules will not be included in the bundle during the build process and for that it relies on the static structure of ES2015 module syntax,( i.e. import and export). Initially this has been popularized by the ES2015 module bundler &lt;code&gt;rollup&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the need of tree shaking&lt;/h3&gt; &lt;p&gt;Tree Shaking can significantly reduce the code size in any application. i.e, The less code we send over the wire the more performant the application will be. For example, if we just want to create a ‚ÄúHello World‚Äù Application using SPA frameworks then it will take around a few MBs, but by tree shaking it can bring down the size to just a few hundred KBs. Tree shaking is implemented in Rollup and Webpack bundlers.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it recommended to use eval&lt;/h3&gt; &lt;p&gt;No, it allows arbitrary code to be run which causes a security problem. As we know that the eval() function is used to run text as code. In most of the cases, it should not be necessary to use it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Regular Expression&lt;/h3&gt; &lt;p&gt;A regular expression is a sequence of characters that forms a search pattern. You can use this search pattern for searching data in a text. These can be used to perform all types of text search and text replace operations. Let&#39;s see the syntax format now,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/pattern/modifiers;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For example, the regular expression or search pattern with case-insensitive username would be,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/John/i
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the string methods available in Regular expression&lt;/h3&gt; &lt;p&gt;Regular Expressions has two string methods: search() and replace(). The search() method uses an expression to search for a match, and returns the position of the match.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Hello John&quot;;
var n = msg.search(/John/i); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The replace() method is used to return a modified string where the pattern is replaced.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Hello John&quot;;
var n = msg.replace(/John/i, &quot;Buttler&quot;); // Hello Buttler
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are modifiers in regular expression&lt;/h3&gt; &lt;p&gt;Modifiers can be used to perform case-insensitive and global searches. Let&#39;s list down some of the modifiers,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Modifier&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;i&lt;/td&gt; 
     &lt;td&gt;Perform case-insensitive matching&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;g&lt;/td&gt; 
     &lt;td&gt;Perform a global match rather than stops at first match&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;m&lt;/td&gt; 
     &lt;td&gt;Perform multiline matching&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;Let&#39;s take an example of global modifier,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var text = &quot;Learn JS one by one&quot;;
var pattern = /one/g;
var result = text.match(pattern); // one,one
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are regular expression patterns&lt;/h3&gt; &lt;p&gt;Regular Expressions provide a group of patterns in order to match characters. Basically they are categorized into 3 types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Brackets:&lt;/strong&gt; These are used to find a range of characters. For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;[abc]: Used to find any of the characters between the brackets(a,b,c)&lt;/li&gt; 
     &lt;li&gt;[0-9]: Used to find any of the digits between the brackets&lt;/li&gt; 
     &lt;li&gt;(a|b): Used to find any of the alternatives separated with |&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Metacharacters:&lt;/strong&gt; These are characters with a special meaning For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;\d: Used to find a digit&lt;/li&gt; 
     &lt;li&gt;\s: Used to find a whitespace character&lt;/li&gt; 
     &lt;li&gt;\b: Used to find a match at the beginning or ending of a word&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Quantifiers:&lt;/strong&gt; These are useful to define quantities For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;n+: Used to find matches for any string that contains at least one n&lt;/li&gt; 
     &lt;li&gt;n*: Used to find matches for any string that contains zero or more occurrences of n&lt;/li&gt; 
     &lt;li&gt;n?: Used to find matches for any string that contains zero or one occurrences of n&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a RegExp object&lt;/h3&gt; &lt;p&gt;RegExp object is a regular expression object with predefined properties and methods. Let&#39;s see the simple usage of RegExp object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var regexp = new RegExp(&#39;\\w+&#39;);
console.log(regexp);
// expected output: /\w+/
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you search a string for a pattern&lt;/h3&gt; &lt;p&gt;You can use the test() method of regular expression in order to search a string for a pattern, and return true or false depending on the result.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var pattern = /you/;
console.log(pattern.test(&quot;How are you?&quot;)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of exec method&lt;/h3&gt; &lt;p&gt;The purpose of exec method is similar to test method but it executes a search for a match in a specified string and returns a result array, or null instead of returning true/false.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var pattern = /you/;
console.log(pattern.exec(&quot;How are you?&quot;)); //[&quot;you&quot;, index: 8, input: &quot;How are you?&quot;, groups: undefined]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you change the style of a HTML element&lt;/h3&gt; &lt;p&gt;You can change inline style or classname of a HTML element using javascript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using style property:&lt;/strong&gt; You can modify inline style using style property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&quot;title&quot;).style.fontSize = &quot;30px&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using ClassName property:&lt;/strong&gt; It is easy to modify element class using className property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; document.getElementById(&quot;title&quot;).className = &quot;custom-title&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What would be the result of 1+2+&#39;3&#39;&lt;/h3&gt; &lt;p&gt;The output is going to be &lt;code&gt;33&lt;/code&gt;. Since &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; are numeric values, the result of the first two digits is going to be a numeric value &lt;code&gt;3&lt;/code&gt;. The next digit is a string type value because of that the addition of numeric value &lt;code&gt;3&lt;/code&gt; and string type value &lt;code&gt;3&lt;/code&gt; is just going to be a concatenation value &lt;code&gt;33&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a debugger statement&lt;/h3&gt; &lt;p&gt;The debugger statement invokes any available debugging functionality, such as setting a breakpoint. If no debugging functionality is available, this statement has no effect. For example, in the below function a debugger statement has been inserted. So execution is paused at the debugger statement just like a breakpoint in the script source.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function getProfile() {
// code goes here
debugger;
// code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of breakpoints in debugging&lt;/h3&gt; &lt;p&gt;You can set breakpoints in the javascript code once the debugger statement is executed and the debugger window pops up. At each breakpoint, javascript will stop executing, and let you examine the JavaScript values. After examining values, you can resume the execution of code using the play button.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use reserved words as identifiers&lt;/h3&gt; &lt;p&gt;No, you cannot use the reserved words as variables, labels, object or function names. Let&#39;s see one simple example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var else = &quot;hello&quot;; // Uncaught SyntaxError: Unexpected token else
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a mobile browser&lt;/h3&gt; &lt;p&gt;You can use regex which returns a true or false value depending on whether or not the user is browsing with a mobile.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.mobilecheck = function() {
  var mobileCheck = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) mobileCheck = true;})(navigator.userAgent||navigator.vendor||window.opera);
  return mobileCheck;
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a mobile browser without regexp&lt;/h3&gt; &lt;p&gt;You can detect mobile browsers by simply running through a list of devices and checking if the useragent matches anything. This is an alternative solution for RegExp usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function detectmob() {
 if( navigator.userAgent.match(/Android/i)
 || navigator.userAgent.match(/webOS/i)
 || navigator.userAgent.match(/iPhone/i)
 || navigator.userAgent.match(/iPad/i)
 || navigator.userAgent.match(/iPod/i)
 || navigator.userAgent.match(/BlackBerry/i)
 || navigator.userAgent.match(/Windows Phone/i)
 ){
    return true;
  }
 else {
    return false;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the image width and height using JS&lt;/h3&gt; &lt;p&gt;You can programmatically get the image and check the dimensions(width and height) using Javascript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var img = new Image();
img.onload = function() {
  console.log(this.width + &#39;x&#39; + this.height);
}
img.src = &#39;http://www.google.com/intl/en_ALL/images/logo.gif&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make synchronous HTTP request&lt;/h3&gt; &lt;p&gt;Browsers provide an XMLHttpRequest object which can be used to make synchronous HTTP requests from JavaScript&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function httpGet(theUrl)
{
    var xmlHttpReq = new XMLHttpRequest();
    xmlHttpReq.open( &quot;GET&quot;, theUrl, false ); // false for synchronous request
    xmlHttpReq.send( null );
    return xmlHttpReq.responseText;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make asynchronous HTTP request&lt;/h3&gt; &lt;p&gt;Browsers provide an XMLHttpRequest object which can be used to make asynchronous HTTP requests from JavaScript by passing the 3rd parameter as true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function httpGetAsync(theUrl, callback)
{
    var xmlHttpReq = new XMLHttpRequest();
    xmlHttpReq.onreadystatechange = function() {
        if (xmlHttpReq.readyState == 4 &amp;amp;&amp;amp; xmlHttpReq.status == 200)
            callback(xmlHttpReq.responseText);
    }
    xmlHttp.open(&quot;GET&quot;, theUrl, true); // true for asynchronous
    xmlHttp.send(null);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you convert date to another timezone in javascript&lt;/h3&gt; &lt;p&gt;You can use the toLocaleString() method to convert dates in one timezone to another. For example, let&#39;s convert current date to British English timezone as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(event.toLocaleString(&#39;en-GB&#39;, { timeZone: &#39;UTC&#39; })); //29/06/2019, 09:56:00
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the properties used to get size of window&lt;/h3&gt; &lt;p&gt;You can use innerWidth, innerHeight, clientWidth, clientHeight properties of windows, document element and document body objects to find the size of a window. Let&#39;s use them combination of these properties to calculate the size of a window or document,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var width = window.innerWidth
|| document.documentElement.clientWidth
|| document.body.clientWidth;

var height = window.innerHeight
|| document.documentElement.clientHeight
|| document.body.clientHeight;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a conditional operator in javascript&lt;/h3&gt; &lt;p&gt;The conditional (ternary) operator is the only JavaScript operator that takes three operands which acts as a shortcut for if statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var isAuthenticated = false;
console.log(isAuthenticated ? &#39;Hello, welcome&#39; : &#39;Sorry, you are not authenticated&#39;); //Sorry, you are not authenticated
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can you apply chaining on conditional operator&lt;/h3&gt; &lt;p&gt;Yes, you can apply chaining on conditional operators similar to if ‚Ä¶ else if‚Äà‚Ä¶ else if ‚Ä¶ else chain. The syntax is going to be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function traceValue(someParam) {
    return condition1 ? value1
         : condition2 ? value2
         : condition3 ? value3
         : value4;
}

// The above conditional operator is equivalent to:

function traceValue(someParam) {
    if (condition1) { return value1; }
    else if (condition2) { return value2; }
    else if (condition3) { return value3; }
    else { return value4; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the ways to execute javascript after page load&lt;/h3&gt; &lt;p&gt;You can execute javascript after page load in many different ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;window.onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.onload = function ...
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;document.onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.onload = function ...
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;body onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;body onload=&quot;script();&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between proto and prototype&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;__proto__&lt;/code&gt; object is the actual object that is used in the lookup chain to resolve methods, etc. Whereas &lt;code&gt;prototype&lt;/code&gt; is the object that is used to build &lt;code&gt;__proto__&lt;/code&gt; when you create an object with new&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;( new Employee ).__proto__ === Employee.prototype;
( new Employee ).prototype === undefined;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example where do you really need semicolon&lt;/h3&gt; &lt;p&gt;It is recommended to use semicolons after every statement in JavaScript. For example, in the below case it throws an error &quot;.. is not a function&quot; at runtime due to missing semicolon.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// define a function
var fn = function () {
    //...
} // semicolon missing at this line

// then execute some code inside a closure
(function () {
    //...
})();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and it will be interpreted as&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fn = function () {
    //...
}(function () {
    //...
})();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In this case, we are passing the second function as an argument to the first function and then trying to call the result of the first function call as a function. Hence, the second function will fail with a &quot;... is not a function&quot; error at runtime.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a freeze method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;freeze()&lt;/strong&gt; method is used to freeze an object. Freezing an object does not allow adding new properties to an object,prevents from removing and prevents changing the enumerability, configurability, or writability of existing properties. i.e, It returns the passed object and does not create a frozen copy.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {
  prop: 100
};

Object.freeze(obj);
obj.prop = 200; // Throws an error in strict mode

console.log(obj.prop); //100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It causes a TypeError if the argument passed is not an object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of freeze method&lt;/h3&gt; &lt;p&gt;Below are the main benefits of using freeze method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for freezing objects and arrays.&lt;/li&gt; 
   &lt;li&gt;It is used to make an object immutable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do I need to use freeze method&lt;/h3&gt; &lt;p&gt;In the Object-oriented paradigm, an existing API contains certain elements that are not intended to be extended, modified, or re-used outside of their current context. Hence it works as the &lt;code&gt;final&lt;/code&gt; keyword which is used in various languages.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a browser language preference&lt;/h3&gt; &lt;p&gt;You can use navigator object to detect a browser language preference as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var language = navigator.languages &amp;amp;&amp;amp; navigator.languages[0] || // Chrome / Firefox
               navigator.language ||   // All browsers
               navigator.userLanguage; // IE &amp;lt;= 10

console.log(language);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to convert string to title case with javascript&lt;/h3&gt; &lt;p&gt;Title case means that the first letter of each word is capitalized. You can convert a string to title case using the below function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    function toTitleCase(str) {
        return str.replace(
            /\w\S*/g,
            function(txt) {
                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
            }
        );
    }
    toTitleCase(&quot;good morning john&quot;); // Good Morning John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect javascript disabled in the page&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; tag to detect javascript disabled or not. The code block inside &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; gets executed when JavaScript is disabled, and is typically used to display alternative content when the page generated in JavaScript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script type=&quot;javascript&quot;&amp;gt;
    // JS related code goes here
&amp;lt;/script&amp;gt;
&amp;lt;noscript&amp;gt;
    &amp;lt;a href=&quot;next_page.html?noJS=true&quot;&amp;gt;JavaScript is disabled in the page. Please click Next Page&amp;lt;/a&amp;gt;
&amp;lt;/noscript&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are various operators supported by javascript&lt;/h3&gt; &lt;p&gt;An operator is capable of manipulating(mathematical and logical computations) a certain value or operand. There are various operators supported by JavaScript as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Arithmetic Operators:&lt;/strong&gt; Includes + (Addition),‚Äì (Subtraction), * (Multiplication), / (Division), % (Modulus), + + (Increment) and ‚Äì ‚Äì (Decrement)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Comparison Operators:&lt;/strong&gt; Includes = =(Equal),!= (Not Equal), ===(Equal with type), &amp;gt; (Greater than),&amp;gt; = (Greater than or Equal to),&amp;lt; (Less than),&amp;lt;= (Less than or Equal to)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Logical Operators:&lt;/strong&gt; Includes &amp;amp;&amp;amp;(Logical AND),||(Logical OR),!(Logical NOT)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Assignment Operators:&lt;/strong&gt; Includes = (Assignment Operator), += (Add and Assignment Operator), ‚Äì = (Subtract and Assignment Operator), *= (Multiply and Assignment), /= (Divide and Assignment), %= (Modules and Assignment)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Ternary Operators:&lt;/strong&gt; It includes conditional(: ?) Operator&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;typeof Operator:&lt;/strong&gt; It uses to find type of variable. The syntax looks like &lt;code&gt;typeof variable&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a rest parameter&lt;/h3&gt; &lt;p&gt;Rest parameter is an improved way to handle function parameters which allows us to represent an indefinite number of arguments as an array. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function f(a, b, ...theArgs) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For example, let&#39;s take a sum example to calculate on dynamic number of parameters,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function total(‚Ä¶args){
let sum = 0;
for(let i of args){
sum+=i;
}
return sum;
}
console.log(fun(1,2)); //3
console.log(fun(1,2,3)); //6
console.log(fun(1,2,3,4)); //13
console.log(fun(1,2,3,4,5)); //15
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Rest parameter is added in ES2015 or ES6&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if you do not use rest parameter as a last argument&lt;/h3&gt; &lt;p&gt;The rest parameter should be the last argument, as its job is to collect all the remaining arguments into an array. For example, if you define a function like below it doesn‚Äôt make any sense and will throw an error.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function someFunc(a,‚Ä¶b,c){
//You code goes here
return;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the bitwise operators available in javascript&lt;/h3&gt; &lt;p&gt;Below are the list of bitwise logical operators used in JavaScript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Bitwise AND ( &amp;amp; )&lt;/li&gt; 
   &lt;li&gt;Bitwise OR ( | )&lt;/li&gt; 
   &lt;li&gt;Bitwise XOR ( ^ )&lt;/li&gt; 
   &lt;li&gt;Bitwise NOT ( ~ )&lt;/li&gt; 
   &lt;li&gt;Left Shift ( &amp;lt;&amp;lt; )&lt;/li&gt; 
   &lt;li&gt;Sign Propagating Right Shift ( &amp;gt;&amp;gt; )&lt;/li&gt; 
   &lt;li&gt;Zero fill Right Shift ( &amp;gt;&amp;gt;&amp;gt; )&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a spread operator&lt;/h3&gt; &lt;p&gt;Spread operator allows iterables( arrays / objects / strings ) to be expanded into single arguments/elements. Let&#39;s take an example to see this behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function calculateSum(x, y, z) {
  return x + y + z;
}

const numbers = [1, 2, 3];

console.log(calculateSum(...numbers)); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine whether object is frozen or not&lt;/h3&gt; &lt;p&gt;Object.isFrozen() method is used to determine if an object is frozen or not.An object is frozen if all of the below conditions hold true,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If it is not extensible.&lt;/li&gt; 
   &lt;li&gt;If all of its properties are non-configurable.&lt;/li&gt; 
   &lt;li&gt;If all its data properties are non-writable. The usage is going to be as follows,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
   property: &#39;Welcome JS world&#39;
};
Object.freeze(object);
console.log(Object.isFrozen(object));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine two values same or not using object&lt;/h3&gt; &lt;p&gt;The Object.is() method determines whether two values are the same value. For example, the usage with different types of values would be,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.is(&#39;hello&#39;, &#39;hello&#39;);     // true
Object.is(window, window);   // true
Object.is([], []) // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Two values are the same if one of the following holds:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;both undefined&lt;/li&gt; 
   &lt;li&gt;both null&lt;/li&gt; 
   &lt;li&gt;both true or both false&lt;/li&gt; 
   &lt;li&gt;both strings of the same length with the same characters in the same order&lt;/li&gt; 
   &lt;li&gt;both the same object (means both object have same reference)&lt;/li&gt; 
   &lt;li&gt;both numbers and both +0 both -0 both NaN both non-zero and both not NaN and both have the same value.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of using object is method&lt;/h3&gt; &lt;p&gt;Some of the applications of Object&#39;s &lt;code&gt;is&lt;/code&gt; method are follows,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for comparison of two strings.&lt;/li&gt; 
   &lt;li&gt;It is used for comparison of two numbers.&lt;/li&gt; 
   &lt;li&gt;It is used for comparing the polarity of two numbers.&lt;/li&gt; 
   &lt;li&gt;It is used for comparison of two objects.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you copy properties from one object to other&lt;/h3&gt; &lt;p&gt;You can use the Object.assign() method which is used to copy the values and properties from one or more source objects to a target object. It returns the target object which has properties and values copied from the target object. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.assign(target, ...sources)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take example with one source and one target object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const target = { a: 1, b: 2 };
const source = { b: 3, c: 4 };

const returnedTarget = Object.assign(target, source);

console.log(target); // { a: 1, b: 3, c: 4 }

console.log(returnedTarget); // { a: 1, b: 3, c: 4 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As observed in the above code, there is a common property(&lt;code&gt;b&lt;/code&gt;) from source to target so it&#39;s value has been overwritten.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the applications of assign method&lt;/h3&gt; &lt;p&gt;Below are the some of main applications of Object.assign() method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for cloning an object.&lt;/li&gt; 
   &lt;li&gt;It is used to merge objects with the same properties.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a proxy object&lt;/h3&gt; &lt;p&gt;The Proxy object is used to define custom behavior for fundamental operations such as property lookup, assignment, enumeration, function invocation, etc. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var p = new Proxy(target, handler);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of proxy object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var handler = {
    get: function(obj, prop) {
        return prop in obj ?
            obj[prop] :
            100;
    }
};

var p = new Proxy({}, handler);
p.a = 10;
p.b = null;

console.log(p.a, p.b); // 10, null
console.log(&#39;c&#39; in p, p.c); // false, 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, it uses &lt;code&gt;get&lt;/code&gt; handler which define the behavior of the proxy when an operation is performed on it&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of seal method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;Object.seal()&lt;/strong&gt; method is used to seal an object, by preventing new properties from being added to it and marking all existing properties as non-configurable. But values of present properties can still be changed as long as they are writable. Let&#39;s see the below example to understand more about seal() method&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const object = {
    property: &#39;Welcome JS world&#39;
 };
 Object.seal(object);
 object.property = &#39;Welcome to object world&#39;;
 console.log(Object.isSealed(object)); // true
 delete object.property; // You cannot delete when sealed
 console.log(object.property); //Welcome to object world
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the applications of seal method&lt;/h3&gt; &lt;p&gt;Below are the main applications of Object.seal() method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for sealing objects and arrays.&lt;/li&gt; 
   &lt;li&gt;It is used to make an object immutable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between freeze and seal methods&lt;/h3&gt; &lt;p&gt;If an object is frozen using the Object.freeze() method then its properties become immutable and no changes can be made in them whereas if an object is sealed using the Object.seal() method then the changes can be made in the existing properties of the object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine if an object is sealed or not&lt;/h3&gt; &lt;p&gt;The Object.isSealed() method is used to determine if an object is sealed or not. An object is sealed if all of the below conditions hold true&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If it is not extensible.&lt;/li&gt; 
   &lt;li&gt;If all of its properties are non-configurable.&lt;/li&gt; 
   &lt;li&gt;If it is not removable (but not necessarily non-writable). Let&#39;s see it in the action&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
property: &#39;Hello, Good morning&#39;
};

Object.seal(object); // Using seal() method to seal the object

console.log(Object.isSealed(object));      // checking whether the object is sealed or not
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get enumerable key and value pairs&lt;/h3&gt; &lt;p&gt;The Object.entries() method is used to return an array of a given object&#39;s own enumerable string-keyed property [key, value] pairs, in the same order as that provided by a for...in loop. Let&#39;s see the functionality of object.entries() method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
  a: &#39;Good morning&#39;,
  b: 100
};

for (let [key, value] of Object.entries(object)) {
  console.log(`${key}: ${value}`); // a: &#39;Good morning&#39;
                                   // b: 100
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The order is not guaranteed as object defined.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main difference between Object.values and Object.entries method&lt;/h3&gt; &lt;p&gt;The Object.values() method&#39;s behavior is similar to Object.entries() method but it returns an array of values instead [key,value] pairs.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const object = {
   a: &#39;Good morning&#39;,
   b: 100
 };

 for (let value of Object.values(object)) {
   console.log(`${value}`); // &#39;Good morning&#39;
                                100
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How can you get the list of keys of any object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.keys()&lt;/code&gt; method which is used to return an array of a given object&#39;s own property names, in the same order as we get with a normal loop. For example, you can get the keys of a user object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = {
  name: &#39;John&#39;,
  gender: &#39;male&#39;,
  age: 40
};

console.log(Object.keys(user)); //[&#39;name&#39;, &#39;gender&#39;, &#39;age&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an object with prototype&lt;/h3&gt; &lt;p&gt;The Object.create() method is used to create a new object with the specified prototype object and properties. i.e, It uses an existing object as the prototype of the newly created object. It returns a new object with the specified prototype object and properties.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const user = {
   name: &#39;John&#39;,
   printInfo: function () {
     console.log(`My name is ${this.name}.`);
   }
 };

 const admin = Object.create(user);

 admin.name = &quot;Nick&quot;; // Remember that &quot;name&quot; is a property set on &quot;admin&quot; but not on &quot;user&quot; object

 admin.printInfo(); // My name is Nick
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a WeakSet&lt;/h3&gt; &lt;p&gt;WeakSet is used to store a collection of weakly(weak references) held objects. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new WeakSet([iterable]);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the below example to explain it&#39;s behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ws = new WeakSet();
var user = {};
ws.add(user);
ws.has(user);    // true
ws.delete(user); // removes user from the set
ws.has(user);    // false, user has been removed
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between WeakSet and Set&lt;/h3&gt; &lt;p&gt;The main difference is that references to objects in Set are strong while references to objects in WeakSet are weak. i.e, An object in WeakSet can be garbage collected if there is no other reference to it. Other differences are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Sets can store any value Whereas WeakSets can store only collections of objects&lt;/li&gt; 
   &lt;li&gt;WeakSet does not have size property unlike Set&lt;/li&gt; 
   &lt;li&gt;WeakSet does not have methods such as clear, keys, values, entries, forEach.&lt;/li&gt; 
   &lt;li&gt;WeakSet is not iterable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down the collection of methods available on WeakSet&lt;/h3&gt; &lt;p&gt;Below are the list of methods available on WeakSet,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;add(value): A new object is appended with the given value to the weakset&lt;/li&gt; 
   &lt;li&gt;delete(value): Deletes the value from the WeakSet collection.&lt;/li&gt; 
   &lt;li&gt;has(value): It returns true if the value is present in the WeakSet Collection, otherwise it returns false.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s see the functionality of all the above methods in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var weakSetObject = new WeakSet();
var firstObject = {};
var secondObject = {};
// add(value)
weakSetObject.add(firstObject);
weakSetObject.add(secondObject);
console.log(weakSetObject.has(firstObject)); //true
weakSetObject.delete(secondObject);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a WeakMap&lt;/h3&gt; &lt;p&gt;The WeakMap object is a collection of key/value pairs in which the keys are weakly referenced. In this case, keys must be objects and the values can be arbitrary values. The syntax is looking like as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new WeakMap([iterable])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the below example to explain it&#39;s behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var ws = new WeakMap();
 var user = {};
 ws.set(user);
 ws.has(user);    // true
 ws.delete(user); // removes user from the map
 ws.has(user);    // false, user has been removed
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between WeakMap and Map&lt;/h3&gt; &lt;p&gt;The main difference is that references to key objects in Map are strong while references to key objects in WeakMap are weak. i.e, A key object in WeakMap can be garbage collected if there is no other reference to it. Other differences are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Maps can store any key type Whereas WeakMaps can store only collections of key objects&lt;/li&gt; 
   &lt;li&gt;WeakMap does not have size property unlike Map&lt;/li&gt; 
   &lt;li&gt;WeakMap does not have methods such as clear, keys, values, entries, forEach.&lt;/li&gt; 
   &lt;li&gt;WeakMap is not iterable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down the collection of methods available on WeakMap&lt;/h3&gt; &lt;p&gt;Below are the list of methods available on WeakMap,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;set(key, value): Sets the value for the key in the WeakMap object. Returns the WeakMap object.&lt;/li&gt; 
   &lt;li&gt;delete(key): Removes any value associated to the key.&lt;/li&gt; 
   &lt;li&gt;has(key): Returns a Boolean asserting whether a value has been associated to the key in the WeakMap object or not.&lt;/li&gt; 
   &lt;li&gt;get(key): Returns the value associated to the key, or undefined if there is none. Let&#39;s see the functionality of all the above methods in an example,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var weakMapObject = new WeakMap();
var firstObject = {};
var secondObject = {};
// set(key, value)
weakMapObject.set(firstObject, &#39;John&#39;);
weakMapObject.set(secondObject, 100);
console.log(weakMapObject.has(firstObject)); //true
console.log(weakMapObject.get(firstObject)); // John
weakMapObject.delete(secondObject);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of uneval&lt;/h3&gt; &lt;p&gt;The uneval() is an inbuilt function which is used to create a string representation of the source code of an Object. It is a top-level function and is not associated with any object. Let&#39;s see the below example to know more about it&#39;s functionality,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 1;
uneval(a); // returns a String containing 1
uneval(function user() {}); // returns &quot;(function user(){})&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you encode an URL&lt;/h3&gt; &lt;p&gt;The encodeURI() function is used to encode complete URI which has special characters except (, / ? : @ &amp;amp; = + $ #) characters.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var uri = &#39;https://mozilla.org/?x=—à–µ–ª–ª—ã&#39;;
var encoded = encodeURI(uri);
console.log(encoded); // https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you decode an URL&lt;/h3&gt; &lt;p&gt;The decodeURI() function is used to decode a Uniform Resource Identifier (URI) previously created by encodeURI().&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var uri = &#39;https://mozilla.org/?x=—à–µ–ª–ª—ã&#39;;
 var encoded = encodeURI(uri);
 console.log(encoded); // https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B
try {
  console.log(decodeURI(encoded)); // &quot;https://mozilla.org/?x=—à–µ–ª–ª—ã&quot;
} catch(e) { // catches a malformed URI
  console.error(e);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print the contents of web page&lt;/h3&gt; &lt;p&gt;The window object provided a print() method which is used to print the contents of the current window. It opens a Print dialog box which lets you choose between various printing options. Let&#39;s see the usage of print method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;   &amp;lt;input type=&quot;button&quot; value=&quot;Print&quot; onclick=&quot;window.print()&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In most browsers, it will block while the print dialog is open.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between uneval and eval&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;uneval&lt;/code&gt; function returns the source of a given object; whereas the &lt;code&gt;eval&lt;/code&gt; function does the opposite, by evaluating that source code in a different memory area. Let&#39;s see an example to clarify the difference,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = uneval(function greeting() { return &#39;Hello, Good morning&#39;; });
var greeting = eval(msg);
greeting(); // returns &quot;Hello, Good morning&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an anonymous function&lt;/h3&gt; &lt;p&gt;An anonymous function is a function without a name! Anonymous functions are commonly assigned to a variable name or used as a callback function. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function (optionalParameters) {
  //do something
}

const myFunction = function(){ //Anonymous function assigned to a variable
  //do something
};

[1, 2, 3].map(function(element){ //Anonymous function used as a callback function
  //do something
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the above anonymous function in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = function (a, b) {return a * b};
var z = x(5, 10);
console.log(z); // 50
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the precedence order between local and global variables&lt;/h3&gt; &lt;p&gt;A local variable takes precedence over a global variable with the same name. Let&#39;s see this behavior in an example.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Good morning&quot;;
function greeting() {
   msg = &quot;Good Evening&quot;;
   console.log(msg);
}
greeting();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are javascript accessors&lt;/h3&gt; &lt;p&gt;ECMAScript 5 introduced javascript object accessors or computed properties through getters and setters. Getters uses the &lt;code&gt;get&lt;/code&gt; keyword whereas Setters uses the &lt;code&gt;set&lt;/code&gt; keyword.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user = {
  firstName: &quot;John&quot;,
  lastName : &quot;Abraham&quot;,
  language : &quot;en&quot;,
  get lang() {
    return this.language;
  }
  set lang(lang) {
  this.language = lang;
  }
};
console.log(user.lang); // getter access lang as en
user.lang = &#39;fr&#39;;
console.log(user.lang); // setter used to set lang as fr
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define property on Object constructor&lt;/h3&gt; &lt;p&gt;The Object.defineProperty() static method is used to define a new property directly on an object, or modify an existing property on an object, and returns the object. Let&#39;s see an example to know how to define property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};

Object.defineProperty(newObject, &#39;newProperty&#39;, {
  value: 100,
  writable: false
});

console.log(newObject.newProperty); // 100

newObject.newProperty = 200; // It throws an error in strict mode due to writable setting

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between get and defineProperty&lt;/h3&gt; &lt;p&gt;Both have similar results until unless you use classes. If you use &lt;code&gt;get&lt;/code&gt; the property will be defined on the prototype of the object whereas using &lt;code&gt;Object.defineProperty()&lt;/code&gt; the property will be defined on the instance it is applied to.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of Getters and Setters&lt;/h3&gt; &lt;p&gt;Below are the list of benefits of Getters and Setters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;They provide simpler syntax&lt;/li&gt; 
   &lt;li&gt;They are used for defining computed properties, or accessors in JS.&lt;/li&gt; 
   &lt;li&gt;Useful to provide equivalence relation between properties and methods&lt;/li&gt; 
   &lt;li&gt;They can provide better data quality&lt;/li&gt; 
   &lt;li&gt;Useful for doing things behind the scenes with the encapsulated logic.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I add getters and setters using defineProperty method&lt;/h3&gt; &lt;p&gt;Yes, You can use the &lt;code&gt;Object.defineProperty()&lt;/code&gt; method to add Getters and Setters. For example, the below counter object uses increment, decrement, add and subtract properties,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var obj = {counter : 0};

// Define getters
Object.defineProperty(obj, &quot;increment&quot;, {
  get : function () {this.counter++;}
});
Object.defineProperty(obj, &quot;decrement&quot;, {
  get : function () {this.counter--;}
});

// Define setters
Object.defineProperty(obj, &quot;add&quot;, {
  set : function (value) {this.counter += value;}
});
Object.defineProperty(obj, &quot;subtract&quot;, {
  set : function (value) {this.counter -= value;}
});

obj.add = 10;
obj.subtract = 5;
console.log(obj.increment); //6
console.log(obj.decrement); //5
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of switch-case&lt;/h3&gt; &lt;p&gt;The switch case statement in JavaScript is used for decision making purposes. In a few cases, using the switch case statement is going to be more convenient than if-else statements. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;switch (expression)
{
    case value1:
        statement1;
        break;
    case value2:
        statement2;
        break;
    .
    .
    case valueN:
        statementN;
        break;
    default:
        statementDefault;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above multi-way branch statement provides an easy way to dispatch execution to different parts of code based on the value of the expression.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the conventions to be followed for the usage of switch case&lt;/h3&gt; &lt;p&gt;Below are the list of conventions should be taken care,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The expression can be of type either number or string.&lt;/li&gt; 
   &lt;li&gt;Duplicate values are not allowed for the expression.&lt;/li&gt; 
   &lt;li&gt;The default statement is optional. If the expression passed to switch does not match with any case value then the statement within default case will be executed.&lt;/li&gt; 
   &lt;li&gt;The break statement is used inside the switch to terminate a statement sequence.&lt;/li&gt; 
   &lt;li&gt;The break statement is optional. But if it is omitted, the execution will continue on into the next case.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are primitive data types&lt;/h3&gt; &lt;p&gt;A primitive data type is data that has a primitive value (which has no properties or methods). There are 7 types of primitive data types.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;string&lt;/li&gt; 
   &lt;li&gt;number&lt;/li&gt; 
   &lt;li&gt;boolean&lt;/li&gt; 
   &lt;li&gt;null&lt;/li&gt; 
   &lt;li&gt;undefined&lt;/li&gt; 
   &lt;li&gt;bigint&lt;/li&gt; 
   &lt;li&gt;symbol&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to access object properties&lt;/h3&gt; &lt;p&gt;There are 3 possible ways for accessing the property of an object.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Dot notation:&lt;/strong&gt; It uses dot for accessing the properties&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName.property
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Square brackets notation:&lt;/strong&gt; It uses square brackets for property access&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName[&quot;property&quot;]
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Expression notation:&lt;/strong&gt; It uses expression in the square brackets&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName[expression]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the function parameter rules&lt;/h3&gt; &lt;p&gt;JavaScript functions follow below rules for parameters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The function definitions do not specify data types for parameters.&lt;/li&gt; 
   &lt;li&gt;Do not perform type checking on the passed arguments.&lt;/li&gt; 
   &lt;li&gt;Do not check the number of arguments received. i.e, The below function follows the above rules,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function functionName(parameter1, parameter2, parameter3) {
  console.log(parameter1); // 1
}
functionName(1);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an error object&lt;/h3&gt; &lt;p&gt;An error object is a built in error object that provides error information when an error occurs. It has two properties: name and message. For example, the below function logs error details,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  greeting(&quot;Welcome&quot;);
}
catch(err) {
  console.log(err.name + &quot;&amp;lt;br&amp;gt;&quot; + err.message);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;When you get a syntax error&lt;/h3&gt; &lt;p&gt;A SyntaxError is thrown if you try to evaluate code with a syntax error. For example, the below missing quote for the function parameter throws a syntax error&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  eval(&quot;greeting(&#39;welcome)&quot;);   // Missing &#39; will produce an error
}
catch(err) {
  console.log(err.name);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different error names from error object&lt;/h3&gt; &lt;p&gt;There are 6 different types of error names returned from error object,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Error Name&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;EvalError&lt;/td&gt; 
     &lt;td&gt;An error has occurred in the eval() function&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;RangeError&lt;/td&gt; 
     &lt;td&gt;An error has occurred with a number &quot;out of range&quot;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;ReferenceError&lt;/td&gt; 
     &lt;td&gt;An error due to an illegal reference&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;SyntaxError&lt;/td&gt; 
     &lt;td&gt;An error due to a syntax error&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;TypeError&lt;/td&gt; 
     &lt;td&gt;An error due to a type error&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;URIError&lt;/td&gt; 
     &lt;td&gt;An error due to encodeURI()&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the various statements in error handling&lt;/h3&gt; &lt;p&gt;Below are the list of statements used in an error handling,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;try:&lt;/strong&gt; This statement is used to test a block of code for errors&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;catch:&lt;/strong&gt; This statement is used to handle the error&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;throw:&lt;/strong&gt; This statement is used to create custom errors.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;finally:&lt;/strong&gt; This statement is used to execute code after try and catch regardless of the result.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the two types of loops in javascript&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Entry Controlled loops:&lt;/strong&gt; In this kind of loop type, the test condition is tested before entering the loop body. For example, For Loop and While Loop comes under this category.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Exit Controlled Loops:&lt;/strong&gt; In this kind of loop type, the test condition is tested or evaluated at the end of the loop body. i.e, the loop body will execute at least once irrespective of test condition true or false. For example, do-while loop comes under this category.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is nodejs&lt;/h3&gt; &lt;p&gt;Node.js is a server-side platform built on Chrome&#39;s JavaScript runtime for easily building fast and scalable network applications. It is an event-based, non-blocking, asynchronous I/O runtime that uses Google&#39;s V8 JavaScript engine and libuv library.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Intl object&lt;/h3&gt; &lt;p&gt;The Intl object is the namespace for the ECMAScript Internationalization API, which provides language sensitive string comparison, number formatting, and date and time formatting. It provides access to several constructors and language sensitive functions.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform language specific date and time formatting&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; object which is a constructor for objects that enable language-sensitive date and time formatting. Let&#39;s see this behavior with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var date = new Date(Date.UTC(2019, 07, 07, 3, 0, 0));
console.log(new Intl.DateTimeFormat(&#39;en-GB&#39;).format(date)); // 07/08/2019
console.log(new Intl.DateTimeFormat(&#39;en-AU&#39;).format(date)); // 07/08/2019
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Iterator&lt;/h3&gt; &lt;p&gt;An iterator is an object which defines a sequence and a return value upon its termination. It implements the Iterator protocol with a &lt;code&gt;next()&lt;/code&gt; method which returns an object with two properties: &lt;code&gt;value&lt;/code&gt; (the next value in the sequence) and &lt;code&gt;done&lt;/code&gt; (which is true if the last value in the sequence has been consumed).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How does synchronous iteration works&lt;/h3&gt; &lt;p&gt;Synchronous iteration was introduced in ES6 and it works with below set of components,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Iterable:&lt;/strong&gt; It is an object which can be iterated over via a method whose key is Symbol.iterator. &lt;strong&gt;Iterator:&lt;/strong&gt; It is an object returned by invoking &lt;code&gt;[Symbol.iterator]()&lt;/code&gt; on an iterable. This iterator object wraps each iterated element in an object and returns it via &lt;code&gt;next()&lt;/code&gt; method one by one. &lt;strong&gt;IteratorResult:&lt;/strong&gt; It is an object returned by &lt;code&gt;next()&lt;/code&gt; method. The object contains two properties; the &lt;code&gt;value&lt;/code&gt; property contains an iterated element and the &lt;code&gt;done&lt;/code&gt; property determines whether the element is the last element or not.&lt;/p&gt; &lt;p&gt;Let&#39;s demonstrate synchronous iteration with an array as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const iterable = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;];
const iterator = iterable[Symbol.iterator]();
console.log(iterator.next());  // { value: &#39;one&#39;, done: false }
console.log(iterator.next());  // { value: &#39;two&#39;, done: false }
console.log(iterator.next());  // { value: &#39;three&#39;, done: false }
console.log(iterator.next());  // { value: &#39;undefined, done: true }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event loop&lt;/h3&gt; &lt;p&gt;The Event Loop is a queue of callback functions. When an async function executes, the callback function is pushed into the queue. The JavaScript engine doesn&#39;t start processing the event loop until the async function has finished executing the code. &lt;strong&gt;Note:&lt;/strong&gt; It allows Node.js to perform non-blocking I/O operations even though JavaScript is single-threaded.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is call stack&lt;/h3&gt; &lt;p&gt;Call Stack is a data structure for javascript interpreters to keep track of function calls in the program. It has two major actions,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Whenever you call a function for its execution, you are pushing it to the stack.&lt;/li&gt; 
   &lt;li&gt;Whenever the execution is completed, the function is popped out of the stack.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s take an example and it&#39;s state representation in a diagram format&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hungry() {
   eatFruits();
}
function eatFruits() {
   return &quot;I&#39;m eating fruits&quot;;
}

// Invoke the `hungry` function
hungry();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code processed in a call stack as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Add the &lt;code&gt;hungry()&lt;/code&gt; function to the call stack list and execute the code.&lt;/li&gt; 
   &lt;li&gt;Add the &lt;code&gt;eatFruits()&lt;/code&gt; function to the call stack list and execute the code.&lt;/li&gt; 
   &lt;li&gt;Delete the &lt;code&gt;eatFruits()&lt;/code&gt; function from our call stack list.&lt;/li&gt; 
   &lt;li&gt;Delete the &lt;code&gt;hungry()&lt;/code&gt; function from the call stack list since there are no items anymore.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/call-stack.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event queue&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a decorator&lt;/h3&gt; &lt;p&gt;A decorator is an expression that evaluates to a function and that takes the target, name, and decorator descriptor as arguments. Also, it optionally returns a decorator descriptor to install on the target object. Let&#39;s define admin decorator for user class at design time,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function admin(isAdmin) {
   return function(target) {
       target.isAdmin = isAdmin;
   }
}

@admin(true)
class User() {
}
console.log(User.isAdmin); //true

 @admin(false)
 class User() {
 }
 console.log(User.isAdmin); //false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the properties of Intl object&lt;/h3&gt; &lt;p&gt;Below are the list of properties available on Intl object,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Collator:&lt;/strong&gt; These are the objects that enable language-sensitive string comparison.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;DateTimeFormat:&lt;/strong&gt; These are the objects that enable language-sensitive date and time formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;ListFormat:&lt;/strong&gt; These are the objects that enable language-sensitive list formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;NumberFormat:&lt;/strong&gt; Objects that enable language-sensitive number formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;PluralRules:&lt;/strong&gt; Objects that enable plural-sensitive formatting and language-specific rules for plurals.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;RelativeTimeFormat:&lt;/strong&gt; Objects that enable language-sensitive relative time formatting.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Unary operator&lt;/h3&gt; &lt;p&gt;The unary(+) operator is used to convert a variable to a number.If the variable cannot be converted, it will still become a number but with the value NaN. Let&#39;s see this behavior in an action.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = &quot;100&quot;;
var y = + x;
console.log(typeof x, typeof y); // string, number

var a = &quot;Hello&quot;;
var b = + a;
console.log(typeof a, typeof b, b); // string, number, NaN
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you sort elements in an array&lt;/h3&gt; &lt;p&gt;The sort() method is used to sort the elements of an array in place and returns the sorted array. The example usage would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var months = [&quot;Aug&quot;, &quot;Sep&quot;, &quot;Jan&quot;, &quot;June&quot;];
months.sort();
console.log(months); //  [&quot;Aug&quot;, &quot;Jan&quot;, &quot;June&quot;, &quot;Sep&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of compareFunction while sorting arrays&lt;/h3&gt; &lt;p&gt;The compareFunction is used to define the sort order. If omitted, the array elements are converted to strings, then sorted according to each character&#39;s Unicode code point value. Let&#39;s take an example to see the usage of compareFunction,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 5, 3, 4];
numbers.sort((a, b) =&amp;gt; b - a);
console.log(numbers); // [5, 4, 3, 2, 1]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you reversing an array&lt;/h3&gt; &lt;p&gt;You can use the reverse() method to reverse the elements in an array. This method is useful to sort an array in descending order. Let&#39;s see the usage of reverse() method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 5, 3, 4];
numbers.sort((a, b) =&amp;gt; b - a);
numbers.reverse();
console.log(numbers); // [1, 2, 3, 4 ,5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find min and max value in an array&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;Math.min&lt;/code&gt; and &lt;code&gt;Math.max&lt;/code&gt; methods on array variables to find the minimum and maximum elements within an array. Let&#39;s create two functions to find the min and max value with in an array,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var marks = [50, 20, 70, 60, 45, 30];
function findMin(arr) {
  return Math.min.apply(null, arr);
}
function findMax(arr) {
  return Math.max.apply(null, arr);
}

console.log(findMin(marks));
console.log(findMax(marks));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find min and max values without Math functions&lt;/h3&gt; &lt;p&gt;You can write functions which loop through an array comparing each value with the lowest value or highest value to find the min and max values. Let&#39;s create those functions to find min and max values,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var marks = [50, 20, 70, 60, 45, 30];
 function findMin(arr) {
   var length = arr.length
   var min = Infinity;
   while (length--) {
     if (arr[length] &amp;lt; min) {
       min = arr[len];
     }
   }
   return min;
 }

 function findMax(arr) {
   var length = arr.length
   var max = -Infinity;
   while (len--) {
     if (arr[length] &amp;gt; max) {
       max = arr[length];
     }
   }
   return max;
 }

 console.log(findMin(marks));
 console.log(findMax(marks));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an empty statement and purpose of it&lt;/h3&gt; &lt;p&gt;The empty statement is a semicolon (;) indicating that no statement will be executed, even if JavaScript syntax requires one. Since there is no action with an empty statement you might think that it&#39;s usage is quite less, but the empty statement is occasionally useful when you want to create a loop that has an empty body. For example, you can initialize an array with zero values as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Initialize an array a
for(int i=0; i &amp;lt; a.length; a[i++] = 0) ;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get metadata of a module&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;import.meta&lt;/code&gt; object which is a meta-property exposing context-specific meta data to a JavaScript module. It contains information about the current module, such as the module&#39;s URL. In browsers, you might get different meta data than NodeJS.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script type=&quot;module&quot; src=&quot;welcome-module.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
console.log(import.meta); // { url: &quot;file:///home/user/welcome-module.js&quot; }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a comma operator&lt;/h3&gt; &lt;p&gt;The comma operator is used to evaluate each of its operands from left to right and returns the value of the last operand. This is totally different from comma usage within arrays, objects, and function arguments and parameters. For example, the usage for numeric expressions would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 1;
x = (x++, x);

console.log(x); // 2
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the advantage of a comma operator&lt;/h3&gt; &lt;p&gt;It is normally used to include multiple expressions in a location that requires a single expression. One of the common usages of this comma operator is to supply multiple parameters in a &lt;code&gt;for&lt;/code&gt; loop. For example, the below for loop uses multiple expressions in a single location using comma operator,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (var a = 0, b =10; a &amp;lt;= 10; a++, b--)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use the comma operator in a return statement where it processes before returning.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
   var a = 1;
   return (a += 10, a); // 11
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is typescript&lt;/h3&gt; &lt;p&gt;TypeScript is a typed superset of JavaScript created by Microsoft that adds optional types, classes, async/await, and many other features, and compiles to plain JavaScript. Angular built entirely in TypeScript and used as a primary language. You can install it globally as&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g typescript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see a simple example of TypeScript usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;function greeting(name: string): string {
   return &quot;Hello, &quot; + name;
}

let user = &quot;Sudheer&quot;;

console.log(greeting(user));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The greeting method allows only string type as argument.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between javascript and typescript&lt;/h3&gt; &lt;p&gt;Below are the list of differences between javascript and typescript,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;feature&lt;/th&gt; 
     &lt;th&gt;typescript&lt;/th&gt; 
     &lt;th&gt;javascript&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Language paradigm&lt;/td&gt; 
     &lt;td&gt;Object oriented programming language&lt;/td&gt; 
     &lt;td&gt;Scripting language&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Typing support&lt;/td&gt; 
     &lt;td&gt;Supports static typing&lt;/td&gt; 
     &lt;td&gt;It has dynamic typing&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Modules&lt;/td&gt; 
     &lt;td&gt;Supported&lt;/td&gt; 
     &lt;td&gt;Not supported&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Interface&lt;/td&gt; 
     &lt;td&gt;It has interfaces concept&lt;/td&gt; 
     &lt;td&gt;Doesn&#39;t support interfaces&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Optional parameters&lt;/td&gt; 
     &lt;td&gt;Functions support optional parameters&lt;/td&gt; 
     &lt;td&gt;No support of optional parameters for functions&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of typescript over javascript&lt;/h3&gt; &lt;p&gt;Below are some of the advantages of typescript over javascript,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;TypeScript is able to find compile time errors at the development time only and it makes sures less runtime errors. Whereas javascript is an interpreted language.&lt;/li&gt; 
   &lt;li&gt;TypeScript is strongly-typed or supports static typing which allows for checking type correctness at compile time. This is not available in javascript.&lt;/li&gt; 
   &lt;li&gt;TypeScript compiler can compile the .ts files into ES3,ES4 and ES5 unlike ES6 features of javascript which may not be supported in some browsers.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an object initializer&lt;/h3&gt; &lt;p&gt;An object initializer is an expression that describes the initialization of an Object. The syntax for this expression is represented as a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}). This is also known as literal notation. It is one of the ways to create an object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var initObject = {a: &#39;John&#39;, b: 50, c: {}};

console.log(initObject.a); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a constructor method&lt;/h3&gt; &lt;p&gt;The constructor method is a special method for creating and initializing an object created within a class. If you do not specify a constructor method, a default constructor is used. The example usage of constructor would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Employee {
  constructor() {
    this.name = &quot;John&quot;;
  }
}

var employeeObject = new Employee();

console.log(employeeObject.name); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if you write constructor more than once in a class&lt;/h3&gt; &lt;p&gt;The &quot;constructor&quot; in a class is a special method and it should be defined only once in a class. i.e, If you write a constructor method more than once in a class it will throw a &lt;code&gt;SyntaxError&lt;/code&gt; error.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; class Employee {
   constructor() {
     this.name = &quot;John&quot;;
   }
   constructor() {   //  Uncaught SyntaxError: A class may only have one constructor
     this.age = 30;
   }
 }

 var employeeObject = new Employee();

 console.log(employeeObject.name);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you call the constructor of a parent class&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;super&lt;/code&gt; keyword to call the constructor of a parent class. Remember that &lt;code&gt;super()&lt;/code&gt; must be called before using &#39;this&#39; reference. Otherwise it will cause a reference error. Let&#39;s the usage of it,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Square extends Rectangle {
  constructor(length) {
    super(length, length);
    this.name = &#39;Square&#39;;
  }

  get area() {
    return this.width * this.height;
  }

  set area(value) {
    this.area = value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the prototype of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt; method to return the prototype of the specified object. i.e. The value of the internal &lt;code&gt;prototype&lt;/code&gt; property. If there are no inherited properties then &lt;code&gt;null&lt;/code&gt; value is returned.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newPrototype = {};
const newObject = Object.create(newPrototype);

console.log(Object.getPrototypeOf(newObject) === newPrototype); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens If I pass string type for getPrototype method&lt;/h3&gt; &lt;p&gt;In ES5, it will throw a TypeError exception if the obj parameter isn&#39;t an object. Whereas in ES2015, the parameter will be coerced to an &lt;code&gt;Object&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// ES5
Object.getPrototypeOf(&#39;James&#39;); // TypeError: &quot;James&quot; is not an object
// ES2015
Object.getPrototypeOf(&#39;James&#39;); // String.prototype
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you set prototype of one object to another&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; method that sets the prototype (i.e., the internal &lt;code&gt;Prototype&lt;/code&gt; property) of a specified object to another object or null. For example, if you want to set prototype of a square object to rectangle object would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.setPrototypeOf(Square.prototype, Rectangle.prototype);
Object.setPrototypeOf({}, null);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether an object can be extendable or not&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.isExtensible()&lt;/code&gt; method is used to determine if an object is extendable or not. i.e, Whether it can have new properties added to it or not.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};
console.log(Object.isExtensible(newObject)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; By default, all the objects are extendable. i.e, The new properties can be added or modified.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you prevent an object to extend&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.preventExtensions()&lt;/code&gt; method is used to prevent new properties from ever being added to an object. In other words, it prevents future extensions to the object. Let&#39;s see the usage of this property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};
Object.preventExtensions(newObject); // NOT extendable

try {
  Object.defineProperty(newObject, &#39;newProperty&#39;, { // Adding new property
    value: 100
  });
} catch (e) {
  console.log(e); // TypeError: Cannot define property newProperty, object is not extensible
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to make an object non-extensible&lt;/h3&gt; &lt;p&gt;You can mark an object non-extensible in 3 ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Object.preventExtensions&lt;/li&gt; 
   &lt;li&gt;Object.seal&lt;/li&gt; 
   &lt;li&gt;Object.freeze&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var newObject = {};

Object.preventExtensions(newObject); // Prevent objects are non-extensible
Object.isExtensible(newObject); // false

var sealedObject = Object.seal({}); // Sealed objects are non-extensible
Object.isExtensible(sealedObject); // false

var frozenObject = Object.freeze({}); // Frozen objects are non-extensible
Object.isExtensible(frozenObject); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define multiple properties on an object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.defineProperties()&lt;/code&gt; method is used to define new or modify existing properties directly on an object and returning the object. Let&#39;s define multiple properties on an empty object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};

Object.defineProperties(newObject, {
  newProperty1: {
    value: &#39;John&#39;,
    writable: true
  },
  newProperty2: {}
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is MEAN in javascript&lt;/h3&gt; &lt;p&gt;The MEAN (MongoDB, Express, AngularJS, and Node.js) stack is the most popular open-source JavaScript software tech stack available for building dynamic web apps where you can write both the server-side and client-side halves of the web project entirely in JavaScript.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What Is Obfuscation in javascript&lt;/h3&gt; &lt;p&gt;Obfuscation is the deliberate act of creating obfuscated javascript code(i.e, source or machine code) that is difficult for humans to understand. It is something similar to encryption, but a machine can understand the code and execute it. Let&#39;s see the below function before Obfuscation,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function greeting() {
   console.log(&#39;Hello, welcome to JS world&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And after the code Obfuscation, it would be appeared as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;eval(function(p,a,c,k,e,d){e=function(c){return c};if(!&#39;&#39;.replace(/^/,String)){while(c--){d[c]=k[c]||c}k=[function(e){return d[e]}];e=function(){return&#39;\\w+&#39;};c=1};while(c--){if(k[c]){p=p.replace(new RegExp(&#39;\\b&#39;+e(c)+&#39;\\b&#39;,&#39;g&#39;),k[c])}}return p}(&#39;2 1(){0.3(\&#39;4, 7 6 5 8\&#39;)}&#39;,9,9,&#39;console|greeting|function|log|Hello|JS|to|welcome|world&#39;.split(&#39;|&#39;),0,{}))
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need Obfuscation&lt;/h3&gt; &lt;p&gt;Below are the few reasons for Obfuscation,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The Code size will be reduced. So data transfers between server and client will be fast.&lt;/li&gt; 
   &lt;li&gt;It hides the business logic from outside world and protects the code from others&lt;/li&gt; 
   &lt;li&gt;Reverse engineering is highly difficult&lt;/li&gt; 
   &lt;li&gt;The download time will be reduced&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is Minification&lt;/h3&gt; &lt;p&gt;Minification is the process of removing all unnecessary characters(empty spaces are removed) and variables will be renamed without changing it&#39;s functionality. It is also a type of obfuscation .&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of minification&lt;/h3&gt; &lt;p&gt;Normally it is recommended to use minification for heavy traffic and intensive requirements of resources. It reduces file sizes with below benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Decreases loading times of a web page&lt;/li&gt; 
   &lt;li&gt;Saves bandwidth usages&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Obfuscation and Encryption&lt;/h3&gt; &lt;p&gt;Below are the main differences between Obfuscation and Encryption,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Feature&lt;/th&gt; 
     &lt;th&gt;Obfuscation&lt;/th&gt; 
     &lt;th&gt;Encryption&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Definition&lt;/td&gt; 
     &lt;td&gt;Changing the form of any data in any other form&lt;/td&gt; 
     &lt;td&gt;Changing the form of information to an unreadable format by using a key&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;A key to decode&lt;/td&gt; 
     &lt;td&gt;It can be decoded without any key&lt;/td&gt; 
     &lt;td&gt;It is required&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Target data format&lt;/td&gt; 
     &lt;td&gt;It will be converted to a complex form&lt;/td&gt; 
     &lt;td&gt;Converted into an unreadable format&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common tools used for minification&lt;/h3&gt; &lt;p&gt;There are many online/offline tools to minify the javascript files,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Google&#39;s Closure Compiler&lt;/li&gt; 
   &lt;li&gt;UglifyJS2&lt;/li&gt; 
   &lt;li&gt;jsmin&lt;/li&gt; 
   &lt;li&gt;javascript-minifier.com/&lt;/li&gt; 
   &lt;li&gt;prettydiff.com&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform form validation using javascript&lt;/h3&gt; &lt;p&gt;JavaScript can be used to perform HTML form validation. For example, if the form field is empty, the function needs to notify, and return false, to prevent the form being submitted. Lets&#39; perform user login in an html form,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;form name=&quot;myForm&quot; onsubmit=&quot;return validateForm()&quot; method=&quot;post&quot;&amp;gt;
User name: &amp;lt;input type=&quot;text&quot; name=&quot;uname&quot;&amp;gt;
&amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And the validation on user login is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function validateForm() {
  var x = document.forms[&quot;myForm&quot;][&quot;uname&quot;].value;
  if (x == &quot;&quot;) {
    alert(&quot;The username shouldn&#39;t be empty&quot;);
    return false;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform form validation without javascript&lt;/h3&gt; &lt;p&gt;You can perform HTML form validation automatically without using javascript. The validation enabled by applying the &lt;code&gt;required&lt;/code&gt; attribute to prevent form submission when the input is empty.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;form method=&quot;post&quot;&amp;gt;
  &amp;lt;input type=&quot;text&quot; name=&quot;uname&quot; required&amp;gt;
  &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Automatic form validation does not work in Internet Explorer 9 or earlier.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the DOM methods available for constraint validation&lt;/h3&gt; &lt;p&gt;The below DOM methods are available for constraint validation on an invalid input,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;checkValidity(): It returns true if an input element contains valid data.&lt;/li&gt; 
   &lt;li&gt;setCustomValidity(): It is used to set the validationMessage property of an input element. Let&#39;s take an user login form with DOM validations&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
  var userName = document.getElementById(&quot;uname&quot;);
  if (!userName.checkValidity()) {
    document.getElementById(&quot;message&quot;).innerHTML = userName.validationMessage;
  } else {
    document.getElementById(&quot;message&quot;).innerHTML = &quot;Entered a valid username&quot;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the available constraint validation DOM properties&lt;/h3&gt; &lt;p&gt;Below are the list of some of the constraint validation DOM properties available,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;validity: It provides a list of boolean properties related to the validity of an input element.&lt;/li&gt; 
   &lt;li&gt;validationMessage: It displays the message when the validity is false.&lt;/li&gt; 
   &lt;li&gt;willValidate: It indicates if an input element will be validated or not.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the list of validity properties&lt;/h3&gt; &lt;p&gt;The validity property of an input element provides a set of properties related to the validity of data.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;customError: It returns true, if a custom validity message is set.&lt;/li&gt; 
   &lt;li&gt;patternMismatch: It returns true, if an element&#39;s value does not match its pattern attribute.&lt;/li&gt; 
   &lt;li&gt;rangeOverflow: It returns true, if an element&#39;s value is greater than its max attribute.&lt;/li&gt; 
   &lt;li&gt;rangeUnderflow: It returns true, if an element&#39;s value is less than its min attribute.&lt;/li&gt; 
   &lt;li&gt;stepMismatch: It returns true, if an element&#39;s value is invalid according to step attribute.&lt;/li&gt; 
   &lt;li&gt;tooLong: It returns true, if an element&#39;s value exceeds its maxLength attribute.&lt;/li&gt; 
   &lt;li&gt;typeMismatch: It returns true, if an element&#39;s value is invalid according to type attribute.&lt;/li&gt; 
   &lt;li&gt;valueMissing: It returns true, if an element with a required attribute has no value.&lt;/li&gt; 
   &lt;li&gt;valid: It returns true, if an element&#39;s value is valid.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example usage of rangeOverflow property&lt;/h3&gt; &lt;p&gt;If an element&#39;s value is greater than its max attribute then rangeOverflow property returns true. For example, the below form submission throws an error if the value is more than 100,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input id=&quot;age&quot; type=&quot;number&quot; max=&quot;100&quot;&amp;gt;
&amp;lt;button onclick=&quot;myOverflowFunction()&quot;&amp;gt;OK&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myOverflowFunction() {
  if (document.getElementById(&quot;age&quot;).validity.rangeOverflow) {
    alert(&quot;The mentioned age is not allowed&quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is enums feature available in javascript&lt;/h3&gt; &lt;p&gt;No, javascript does not natively support enums. But there are different kinds of solutions to simulate them even though they may not provide exact equivalents. For example, you can use freeze or seal on object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var DaysEnum = Object.freeze({&quot;monday&quot;:1, &quot;tuesday&quot;:2, &quot;wednesday&quot;:3, ...})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an enum&lt;/h3&gt; &lt;p&gt;An enum is a type restricting variables to one value from a predefined set of constants. JavaScript has no enums but typescript provides built-in enum support.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;enum Color {
 RED, GREEN, BLUE
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you list all properties of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; method which returns an array of all properties found directly in a given object. Let&#39;s the usage of it in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {
  a: 1,
  b: 2,
  c: 3
};

console.log(Object.getOwnPropertyNames(newObject));  [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get property descriptors of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getOwnPropertyDescriptors()&lt;/code&gt; method which returns all own property descriptors of a given object. The example usage of this method is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const newObject = {
   a: 1,
   b: 2,
   c: 3
 };
const descriptorsObject = Object.getOwnPropertyDescriptors(newObject);
console.log(descriptorsObject.a.writable); //true
console.log(descriptorsObject.a.configurable); //true
console.log(descriptorsObject.a.enumerable); //true
console.log(descriptorsObject.a.value); // 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the attributes provided by a property descriptor&lt;/h3&gt; &lt;p&gt;A property descriptor is a record which has the following attributes&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;value: The value associated with the property&lt;/li&gt; 
   &lt;li&gt;writable: Determines whether the value associated with the property can be changed or not&lt;/li&gt; 
   &lt;li&gt;configurable: Returns true if the type of this property descriptor can be changed and if the property can be deleted from the corresponding object.&lt;/li&gt; 
   &lt;li&gt;enumerable: Determines whether the property appears during enumeration of the properties on the corresponding object or not.&lt;/li&gt; 
   &lt;li&gt;set: A function which serves as a setter for the property&lt;/li&gt; 
   &lt;li&gt;get: A function which serves as a getter for the property&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you extend classes&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;extends&lt;/code&gt; keyword is used in class declarations/expressions to create a class which is a child of another class. It can be used to subclass custom classes as well as built-in objects. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ChildClass extends ParentClass { ... }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of Square subclass from Polygon parent class,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; class Square extends Rectangle {
   constructor(length) {
     super(length, length);
     this.name = &#39;Square&#39;;
   }

   get area() {
     return this.width * this.height;
   }

   set area(value) {
     this.area = value;
   }
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do I modify the url without reloading the page&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;window.location.url&lt;/code&gt; property will be helpful to modify the url but it reloads the page. HTML5 introduced the &lt;code&gt;history.pushState()&lt;/code&gt; and &lt;code&gt;history.replaceState()&lt;/code&gt; methods, which allow you to add and modify history entries, respectively. For example, you can use pushState as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.history.pushState(&#39;page2&#39;, &#39;Title&#39;, &#39;/page2.html&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether an array includes a particular value or not&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Array#includes()&lt;/code&gt; method is used to determine whether an array includes a particular value among its entries by returning either true or false. Let&#39;s see an example to find an element(numeric and string) within an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var numericArray = [1, 2, 3, 4];
console.log(numericArray.includes(3)); // true

var stringArray = [&#39;green&#39;, &#39;yellow&#39;, &#39;blue&#39;];
console.log(stringArray.includes(&#39;blue&#39;)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare scalar arrays&lt;/h3&gt; &lt;p&gt;You can use length and every method of arrays to compare two scalar(compared directly using ===) arrays. The combination of these expressions can give the expected result,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrayFirst = [1,2,3,4,5];
const arraySecond = [1,2,3,4,5];
console.log(arrayFirst.length === arraySecond.length &amp;amp;&amp;amp; arrayFirst.every((value, index) =&amp;gt; value === arraySecond[index])); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you would like to compare arrays irrespective of order then you should sort them before,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrayFirst = [2,3,1,4,5];
const arraySecond = [1,2,3,4,5];
console.log(arrayFirst.length === arraySecond.length &amp;amp;&amp;amp; arrayFirst.sort().every((value, index) =&amp;gt; value === arraySecond[index])); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to get the value from get parameters&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;new URL()&lt;/code&gt; object accepts the url string and &lt;code&gt;searchParams&lt;/code&gt; property of this object can be used to access the get parameters. Remember that you may need to use polyfill or &lt;code&gt;window.location&lt;/code&gt; to access the URL in older browsers(including IE).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let urlString = &quot;http://www.some-domain.com/about.html?x=1&amp;amp;y=2&amp;amp;z=3&quot;; //window.location.href
let url = new URL(urlString);
let parameterZ = url.searchParams.get(&quot;z&quot;);
console.log(parameterZ); // 3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print numbers with commas as thousand separators&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt; method which returns a string with a language-sensitive representation such as thousand separator,currency etc of this number.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function convertToThousandFormat(x){
  return x.toLocaleString(); // 12,345.679
}

console.log(convertToThousandFormat(12345.6789));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between java and javascript&lt;/h3&gt; &lt;p&gt;Both are totally unrelated programming languages and no relation between them. Java is statically typed, compiled, runs on its own VM. Whereas Javascript is dynamically typed, interpreted, and runs in a browser and nodejs environments. Let&#39;s see the major differences in a tabular format,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Feature&lt;/th&gt; 
     &lt;th&gt;Java&lt;/th&gt; 
     &lt;th&gt;JavaScript&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Typed&lt;/td&gt; 
     &lt;td&gt;It&#39;s a strongly typed language&lt;/td&gt; 
     &lt;td&gt;It&#39;s a dynamic typed language&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Paradigm&lt;/td&gt; 
     &lt;td&gt;Object oriented programming&lt;/td&gt; 
     &lt;td&gt;Prototype based programming&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Scoping&lt;/td&gt; 
     &lt;td&gt;Block scoped&lt;/td&gt; 
     &lt;td&gt;Function-scoped&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Concurrency&lt;/td&gt; 
     &lt;td&gt;Thread based&lt;/td&gt; 
     &lt;td&gt;event based&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Memory&lt;/td&gt; 
     &lt;td&gt;Uses more memory&lt;/td&gt; 
     &lt;td&gt;Uses less memory. Hence it will be used for web pages&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Does JavaScript supports namespace&lt;/h3&gt; &lt;p&gt;JavaScript doesn‚Äôt support namespace by default. So if you create any element(function, method, object, variable) then it becomes global and pollutes the global namespace. Let&#39;s take an example of defining two functions without any namespace,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func1() {
    console.log(&quot;This is a first definition&quot;);

}
function func1() {
    console.log(&quot;This is a second definition&quot;);
}
func1(); // This is a second definition
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It always calls the second function definition. In this case, namespace will solve the name collision problem.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you declare namespace&lt;/h3&gt; &lt;p&gt;Even though JavaScript lacks namespaces, we can use Objects , IIFE to create namespaces.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object Literal Notation:&lt;/strong&gt; Let&#39;s wrap variables and functions inside an Object literal which acts as a namespace. After that you can access them using object notation&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var namespaceOne = {
   function func1() {
       console.log(&quot;This is a first definition&quot;);
   }
}
var namespaceTwo = {
     function func1() {
         console.log(&quot;This is a second definition&quot;);
     }
 }
namespaceOne.func1(); // This is a first definition
namespaceTwo.func1(); // This is a second definition
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using IIFE (Immediately invoked function expression):&lt;/strong&gt; The outer pair of parentheses of IIFE creates a local scope for all the code inside of it and makes the anonymous function a function expression. Due to that, you can create the same function in two different function expressions to act as a namespace.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function() {
 function fun1(){
   console.log(&quot;This is a first definition&quot;);
   } fun1();
}());

(function() {
    function fun1(){
       console.log(&quot;This is a second definition&quot;);
   } fun1();
 }());
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using a block and a let/const declaration:&lt;/strong&gt; In ECMAScript 6, you can simply use a block and a let declaration to restrict the scope of a variable to a block.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; {
  let myFunction= function fun1(){
  console.log(&quot;This is a first definition&quot;);
  }
  myFunction();
 }
  //myFunction(): ReferenceError: myFunction is not defined.

 {
  let myFunction= function fun1(){
  console.log(&quot;This is a second definition&quot;);
  }
  myFunction();
 }
  //myFunction(): ReferenceError: myFunction is not defined.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you invoke javascript code in an iframe from parent page&lt;/h3&gt; &lt;p&gt;Initially iFrame needs to be accessed using either &lt;code&gt;document.getElementBy&lt;/code&gt; or &lt;code&gt;window.frames&lt;/code&gt;. After that &lt;code&gt;contentWindow&lt;/code&gt; property of iFrame gives the access for targetFunction&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&#39;targetFrame&#39;).contentWindow.targetFunction();
window.frames[0].frameElement.contentWindow.targetFunction(); // Accessing iframe this way may not work in latest versions chrome and firefox

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do get the timezone offset from date&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;getTimezoneOffset&lt;/code&gt; method of the date object. This method returns the time zone difference, in minutes, from current locale (host system settings) to UTC&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var offset = new Date().getTimezoneOffset();
console.log(offset); // -480
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you load CSS and JS files dynamically&lt;/h3&gt; &lt;p&gt;You can create both link and script elements in the DOM and append them as child to head tag. Let&#39;s create a function to add script and style resources as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function loadAssets(filename, filetype) {
  if (filetype == &quot;css&quot;) { // External CSS file
       var fileReference = document.createElement(&quot;link&quot;)
       fileReference.setAttribute(&quot;rel&quot;, &quot;stylesheet&quot;);
       fileReference.setAttribute(&quot;type&quot;, &quot;text/css&quot;);
       fileReference.setAttribute(&quot;href&quot;, filename);
  } else if (filetype == &quot;js&quot;) { // External JavaScript file
       var fileReference = document.createElement(&#39;script&#39;);
       fileReference.setAttribute(&quot;type&quot;, &quot;text/javascript&quot;);
       fileReference.setAttribute(&quot;src&quot;, filename);
  }
  if (typeof fileReference != &quot;undefined&quot;)
       document.getElementsByTagName(&quot;head&quot;)[0].appendChild(fileReference)
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different methods to find HTML elements in DOM&lt;/h3&gt; &lt;p&gt;If you want to access any element in an HTML page, you need to start with accessing the document object. Later you can use any of the below methods to find the HTML element,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;document.getElementById(id): It finds an element by Id&lt;/li&gt; 
   &lt;li&gt;document.getElementsByTagName(name): It finds an element by tag name&lt;/li&gt; 
   &lt;li&gt;document.getElementsByClassName(name): It finds an element by class name&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is jQuery&lt;/h3&gt; &lt;p&gt;jQuery is a popular cross-browser JavaScript library that provides Document Object Model (DOM) traversal, event handling, animations and AJAX interactions by minimizing the discrepancies across browsers. It is widely famous with its philosophy of ‚ÄúWrite less, do more‚Äù. For example, you can display welcome message on the page load using jQuery as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){ // It selects the document and apply the function on page load
    alert(&#39;Welcome to jQuery world&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can download it from jquery&#39;s official site or install it from CDNs, like google.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is V8 JavaScript engine&lt;/h3&gt; &lt;p&gt;V8 is an open source high-performance JavaScript engine used by the Google Chrome browser, written in C++. It is also being used in the node.js project. It implements ECMAScript and WebAssembly, and runs on Windows 7 or later, macOS 10.12+, and Linux systems that use x64, IA-32, ARM, or MIPS processors. &lt;strong&gt;Note:&lt;/strong&gt; It can run standalone, or can be embedded into any C++ application.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we call javascript as dynamic language&lt;/h3&gt; &lt;p&gt;JavaScript is a loosely typed or a dynamic language because variables in JavaScript are not directly associated with any particular value type, and any variable can be assigned/reassigned with values of all types.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let age = 50;    // age is a number now
age  = &#39;old&#39;; // age is a string now
age  = true;  // age is a boolean
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a void operator&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;void&lt;/code&gt; operator evaluates the given expression and then returns undefined(i.e, without returning value). The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;void (expression)
void expression
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s display a message without any redirection or reload&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;a href=&quot;javascript:void(alert(&#39;Welcome to JS world&#39;))&quot;&amp;gt;Click here to see a message&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This operator is often used to obtain the undefined primitive value, using &quot;void(0)&quot;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to set the cursor to wait&lt;/h3&gt; &lt;p&gt;The cursor can be set to wait in JavaScript by using the property &quot;cursor&quot;. Let&#39;s perform this behavior on page load using the below function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
window.document.body.style.cursor = &quot;wait&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and this function invoked on page load&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body onload=&quot;myFunction()&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an infinite loop&lt;/h3&gt; &lt;p&gt;You can create infinite loops using for and while loops without using any expressions. The for loop construct or syntax is better approach in terms of ESLint and code optimizer tools,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (;;) {}
while(true) {
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need to avoid with statement&lt;/h3&gt; &lt;p&gt;JavaScript&#39;s with statement was intended to provide a shorthand for writing recurring accesses to objects. So it can help reduce file size by reducing the need to repeat a lengthy object reference without performance penalty. Let&#39;s take an example where it is used to avoid redundancy when accessing an object several times.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;a.b.c.greeting   = &#39;welcome&#39;;
a.b.c.age = 32;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using &lt;code&gt;with&lt;/code&gt; it turns this into:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;with(a.b.c) {
        greeting   = &quot;welcome&quot;;
        age = 32;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But this &lt;code&gt;with&lt;/code&gt; statement creates performance problems since one cannot predict whether an argument will refer to a real variable or to a property inside the with argument.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below for loops&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (var i = 0; i &amp;lt; 4; i++) { // global scope
  setTimeout(() =&amp;gt; console.log(i));
}

for (let i = 0; i &amp;lt; 4; i++) { // block scope
  setTimeout(() =&amp;gt; console.log(i));
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above for loops is 4 4 4 4 and 0 1 2 3&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; Due to the event queue/loop of javascript, the &lt;code&gt;setTimeout&lt;/code&gt; callback function is called after the loop has been executed. Since the variable i is declared with the &lt;code&gt;var&lt;/code&gt; keyword it became a global variable and the value was equal to 4 using iteration when the time &lt;code&gt;setTimeout&lt;/code&gt; function is invoked. Hence, the output of the first loop is &lt;code&gt;4 4 4 4&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Whereas in the second loop, the variable i is declared as the &lt;code&gt;let&lt;/code&gt; keyword it becomes a block scoped variable and it holds a new value(0, 1 ,2 3) for each iteration. Hence, the output of the first loop is &lt;code&gt;0 1 2 3&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down some of the features of ES6&lt;/h3&gt; &lt;p&gt;Below are the list of some new features of ES6,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Support for constants or immutable variables&lt;/li&gt; 
   &lt;li&gt;Block-scope support for variables, constants and functions&lt;/li&gt; 
   &lt;li&gt;Arrow functions&lt;/li&gt; 
   &lt;li&gt;Default parameters&lt;/li&gt; 
   &lt;li&gt;Rest and Spread Parameters&lt;/li&gt; 
   &lt;li&gt;Template Literals&lt;/li&gt; 
   &lt;li&gt;Multi-line Strings&lt;/li&gt; 
   &lt;li&gt;Destructuring Assignment&lt;/li&gt; 
   &lt;li&gt;Enhanced Object Literals&lt;/li&gt; 
   &lt;li&gt;Promises&lt;/li&gt; 
   &lt;li&gt;Classes&lt;/li&gt; 
   &lt;li&gt;Modules&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ES6&lt;/h3&gt; &lt;p&gt;ES6 is the sixth edition of the javascript language and it was released in June 2015. It was initially known as ECMAScript 6 (ES6) and later renamed to ECMAScript 2015. Almost all the modern browsers support ES6 but for the old browsers there are many transpilers, like Babel.js etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I redeclare let and const variables&lt;/h3&gt; &lt;p&gt;No, you cannot redeclare let and const variables. If you do, it throws below error&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Uncaught SyntaxError: Identifier &#39;someVariable&#39; has already been declared
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; The variable declaration with &lt;code&gt;var&lt;/code&gt; keyword refers to a function scope and the variable is treated as if it were declared at the top of the enclosing scope due to hoisting feature. So all the multiple declarations contributing to the same hoisted variable without any error. Let&#39;s take an example of re-declaring variables in the same scope for both var and let/const variables.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var name = &#39;John&#39;;
function myFunc() {
    var name = &#39;Nick&#39;;
    var name = &#39;Abraham&#39;; // Re-assigned in the same function block
    alert(name); // Abraham
}
myFunc();
alert(name); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The block-scoped multi-declaration throws syntax error,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let name = &#39;John&#39;;
function myFunc() {
    let name = &#39;Nick&#39;;
    let name = &#39;Abraham&#39;; // Uncaught SyntaxError: Identifier &#39;name&#39; has already been declared
    alert(name);
}

myFunc();
alert(name);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is const variable makes the value immutable&lt;/h3&gt; &lt;p&gt;No, the const variable doesn&#39;t make the value immutable. But it disallows subsequent assignments(i.e, You can declare with assignment but can&#39;t assign another value later)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const userList = [];
userList.push(&#39;John&#39;); // Can mutate even though it can&#39;t re-assign
console.log(userList); // [&#39;John&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are default parameters&lt;/h3&gt; &lt;p&gt;In E5, we need to depend on logical OR operators to handle default values of function parameters. Whereas in ES6, Default function parameters feature allows parameters to be initialized with default values if no value or undefined is passed. Let&#39;s compare the behavior with an examples,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES5
var calculateArea = function(height, width) {
   height =  height || 50;
   width = width || 60;

   return width * height;
}
console.log(calculateArea()); //300
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The default parameters makes the initialization more simpler,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES6
var calculateArea = function(height = 50, width = 60) {
   return width * height;
}

console.log(calculateArea()); //300
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are template literals&lt;/h3&gt; &lt;p&gt;Template literals or template strings are string literals allowing embedded expressions. These are enclosed by the back-tick (`) character instead of double or single quotes. In E6, this feature enables using dynamic expressions as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = `Welcome to JS World, Mr. ${firstName} ${lastName}.`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In ES5, you need break string like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = &#39;Welcome to JS World, Mr. &#39; + firstName + &#39; &#39; + lastName.`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can use multi-line strings and string interpolation features with template literals.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you write multi-line strings in template literals&lt;/h3&gt; &lt;p&gt;In ES5, you would have to use newline escape characters(&#39;\n&#39;) and concatenation symbols(+) in order to get multi-line strings.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;This is string sentence 1\n&#39; +
&#39;This is string sentence 2&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in ES6, You don&#39;t need to mention any newline sequence character,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(`This is string sentence
&#39;This is string sentence 2`);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are nesting templates&lt;/h3&gt; &lt;p&gt;The nesting template is a feature supported within template literals syntax to allow inner backticks inside a placeholder ${ } within the template. For example, the below nesting template is used to display the icons based on user permissions whereas outer template checks for platform type,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const iconStyles = `icon ${ isMobilePlatform() ? &#39;&#39; :
 `icon-${user.isAuthorized ? &#39;submit&#39; : &#39;disabled&#39;}` }`;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can write the above use case without nesting template features as well. However, the nesting template feature is more compact and readable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Without nesting templates
 const iconStyles = `icon ${ isMobilePlatform() ? &#39;&#39; :
  (user.isAuthorized ? &#39;icon-submit&#39; : &#39;icon-disabled&#39;}`;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are tagged templates&lt;/h3&gt; &lt;p&gt;Tagged templates are the advanced form of templates in which tags allow you to parse template literals with a function. The tag function accepts the first parameter as an array of strings and remaining parameters as expressions. This function can also return manipulated strings based on parameters. Let&#39;s see the usage of this tagged template behavior of an IT professional skill set in an organization,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user1 = &#39;John&#39;;
var skill1 = &#39;JavaScript&#39;;
var experience1 = 15;

var user2 = &#39;Kane&#39;;
var skill2 = &#39;JavaScript&#39;;
var experience2 = 5;

function myInfoTag(strings, userExp, experienceExp, skillExp) {
  var str0 = strings[0]; // &quot;Mr/Ms. &quot;
  var str1 = strings[1]; // &quot; is a/an &quot;
  var str2 = strings[2]; // &quot;in&quot;

  var expertiseStr;
  if (experienceExp &amp;gt; 10){
    expertiseStr = &#39;expert developer&#39;;
  } else if(skillExp &amp;gt; 5 &amp;amp;&amp;amp; skillExp &amp;lt;= 10) {
    expertiseStr = &#39;senior developer&#39;;
  } else {
    expertiseStr = &#39;junior developer&#39;;
  }

  return `${str0}${userExp}${str1}${expertiseStr}${str2}${skillExp}`;
}

var output1 = myInfoTag`Mr/Ms. ${ user1 } is a/an ${ experience1 } in ${skill1}`;
var output2 = myInfoTag`Mr/Ms. ${ user2 } is a/an ${ experience2 } in ${skill2}`;

console.log(output1);// Mr/Ms. John is a/an expert developer in JavaScript
console.log(output2);// Mr/Ms. Kane is a/an junior developer in JavaScript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are raw strings&lt;/h3&gt; &lt;p&gt;ES6 provides a raw strings feature using the &lt;code&gt;String.raw()&lt;/code&gt; method which is used to get the raw string form of template strings. This feature allows you to access the raw strings as they were entered, without processing escape sequences. For example, the usage would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var calculationString = String.raw `The sum of numbers is \n${1+2+3+4}!`;
console.log(calculationString); // The sum of numbers is 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use raw strings, the newline character sequence will be processed by displaying the output in multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var calculationString = `The sum of numbers is \n${1+2+3+4}!`;
console.log(calculationString);
// The sum of numbers is
// 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Also, the raw property is available on the first argument to the tag function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function tag(strings) {
   console.log(strings.raw[0]);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is destructuring assignment&lt;/h3&gt; &lt;p&gt;The destructuring assignment is a JavaScript expression that makes it possible to unpack values from arrays or properties from objects into distinct variables. Let&#39;s get the month values from an array using destructuring assignment&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var [one, two, three] = [&#39;JAN&#39;, &#39;FEB&#39;, &#39;MARCH&#39;];

console.log(one); // &quot;JAN&quot;
console.log(two); // &quot;FEB&quot;
console.log(three); // &quot;MARCH&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and you can get user properties of an object using destructuring assignment,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var {name, age} = {name: &#39;John&#39;, age: 32};

console.log(name); // John
console.log(age); // 32
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are default values in destructuring assignment&lt;/h3&gt; &lt;p&gt;A variable can be assigned a default value when the value unpacked from the array or object is undefined during destructuring assignment. It helps to avoid setting default values separately for each assignment. Let&#39;s take an example for both arrays and object use cases,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Arrays destructuring:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x, y, z;

[x=2, y=4, z=6] = [10];
console.log(x); // 10
console.log(y); // 4
console.log(z); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Objects destructuring:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var {x=2, y=4, z=6} = {x: 10};

console.log(x); // 10
console.log(y); // 4
console.log(z); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you swap variables in destructuring assignment&lt;/h3&gt; &lt;p&gt;If you don&#39;t use destructuring assignment, swapping two values requires a temporary variable. Whereas using a destructuring feature, two variable values can be swapped in one destructuring expression. Let&#39;s swap two number variables in array destructuring assignment,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 10, y = 20;

[x, y] = [y, x];
console.log(x); // 20
console.log(y); // 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are enhanced object literals&lt;/h3&gt; &lt;p&gt;Object literals make it easy to quickly create objects with properties inside the curly braces. For example, it provides shorter syntax for common object property definition as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES6
var x = 10, y = 20
obj = { x, y }
console.log(obj); // {x: 10, y:20}
//ES5
var x = 10, y = 20
obj = { x : x, y : y}
console.log(obj); // {x: 10, y:20}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are dynamic imports&lt;/h3&gt; &lt;p&gt;The dynamic imports using &lt;code&gt;import()&lt;/code&gt; function syntax allows us to load modules on demand by using promises or the async/await syntax. Currently this feature is in &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;stage4 proposal&lt;/a&gt;. The main advantage of dynamic imports is reduction of our bundle&#39;s sizes, the size/payload response of our requests and overall improvements in the user experience. The syntax of dynamic imports would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(&#39;./Module&#39;).then(Module =&amp;gt; Module.method());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the use cases for dynamic imports&lt;/h3&gt; &lt;p&gt;Below are some of the use cases of using dynamic imports over static imports,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Import a module on-demand or conditionally. For example, if you want to load a polyfill on legacy browser&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (isLegacyBrowser()) {
    import(¬∑¬∑¬∑)
    .then(¬∑¬∑¬∑);
}
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Compute the module specifier at runtime. For example, you can use it for internationalization.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(`messages_${getLocale()}.js`).then(¬∑¬∑¬∑);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Import a module from within a regular script instead a module.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are typed arrays&lt;/h3&gt; &lt;p&gt;Typed arrays are array-like objects from ECMAScript 6 API for handling binary data. JavaScript provides 8 Typed array types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Int8Array: An array of 8-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Int16Array: An array of 16-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Int32Array: An array of 32-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Uint8Array: An array of 8-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Uint16Array: An array of 16-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Uint32Array: An array of 32-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Float32Array: An array of 32-bit floating point numbers&lt;/li&gt; 
   &lt;li&gt;Float64Array: An array of 64-bit floating point numbers&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, you can create an array of 8-bit signed integers as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const a = new Int8Array();
// You can pre-allocate n bytes
const bytes = 1024
const a = new Int8Array(bytes)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of module loaders&lt;/h3&gt; &lt;p&gt;The module loaders provides the below features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Dynamic loading&lt;/li&gt; 
   &lt;li&gt;State isolation&lt;/li&gt; 
   &lt;li&gt;Global namespace isolation&lt;/li&gt; 
   &lt;li&gt;Compilation hooks&lt;/li&gt; 
   &lt;li&gt;Nested virtualization&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is collation&lt;/h3&gt; &lt;p&gt;Collation is used for sorting a set of strings and searching within a set of strings. It is parameterized by locale and aware of Unicode. Let&#39;s take comparison and sorting features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Comparison:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var list = [ &quot;√§&quot;, &quot;a&quot;, &quot;z&quot; ]; // In German,  &quot;√§&quot; sorts with &quot;a&quot; Whereas in Swedish, &quot;√§&quot; sorts after &quot;z&quot;
var l10nDE = new Intl.Collator(&quot;de&quot;);
var l10nSV = new Intl.Collator(&quot;sv&quot;);
console.log(l10nDE.compare(&quot;√§&quot;, &quot;z&quot;) === -1); // true
console.log(l10nSV.compare(&quot;√§&quot;, &quot;z&quot;) === +1); // true
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Sorting:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var list = [ &quot;√§&quot;, &quot;a&quot;, &quot;z&quot; ]; // In German,  &quot;√§&quot; sorts with &quot;a&quot; Whereas in Swedish, &quot;√§&quot; sorts after &quot;z&quot;
var l10nDE = new Intl.Collator(&quot;de&quot;);
var l10nSV = new Intl.Collator(&quot;sv&quot;);
console.log(list.sort(l10nDE.compare)) // [ &quot;a&quot;, &quot;√§&quot;, &quot;z&quot; ]
console.log(list.sort(l10nSV.compare)) // [ &quot;a&quot;, &quot;z&quot;, &quot;√§&quot; ]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is for...of statement&lt;/h3&gt; &lt;p&gt;The for...of statement creates a loop iterating over iterable objects or elements such as built-in String, Array, Array-like objects (like arguments or NodeList), TypedArray, Map, Set, and user-defined iterables. The basic usage of for...of statement on arrays would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIterable = [10, 20, 30, 40, 50];

for (let value of arrayIterable) {
  value ++;
  console.log(value); // 11 21 31 41 51
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below spread operator array&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;[...&#39;John Resig&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the array is [&#39;J&#39;, &#39;o&#39;, &#39;h&#39;, &#39;n&#39;, &#39;&#39;, &#39;R&#39;, &#39;e&#39;, &#39;s&#39;, &#39;i&#39;, &#39;g&#39;] &lt;strong&gt;Explanation:&lt;/strong&gt; The string is an iterable type and the spread operator within an array maps every character of an iterable to one element. Hence, each character of a string becomes an element within an Array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is PostMessage secure&lt;/h3&gt; &lt;p&gt;Yes, postMessages can be considered very secure as long as the programmer/developer is careful about checking the origin and source of an arriving message. But if you try to send/receive a message without verifying its source will create cross-site scripting attacks.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems with postmessage target origin as wildcard&lt;/h3&gt; &lt;p&gt;The second argument of postMessage method specifies which origin is allowed to receive the message. If you use the wildcard ‚Äú*‚Äù as an argument then any origin is allowed to receive the message. In this case, there is no way for the sender window to know if the target window is at the target origin when sending the message. If the target window has been navigated to another origin, the other origin would receive the data. Hence, this may lead to XSS vulnerabilities.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;targetWindow.postMessage(message, &#39;*&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you avoid receiving postMessages from attackers&lt;/h3&gt; &lt;p&gt;Since the listener listens for any message, an attacker can trick the application by sending a message from the attacker‚Äôs origin, which gives an impression that the receiver received the message from the actual sender‚Äôs window. You can avoid this issue by validating the origin of the message on the receiver&#39;s end using the ‚Äúmessage.origin‚Äù attribute. For examples, let&#39;s check the sender&#39;s origin &lt;a href=&quot;http://www.some-sender.com&quot;&gt;http://www.some-sender.com&lt;/a&gt; on receiver side &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/www.some-receiver.com&quot;&gt;www.some-receiver.com&lt;/a&gt;,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Listener on http://www.some-receiver.com/
window.addEventListener(&quot;message&quot;, function(message){
    if(/^http://www\.some-sender\.com$/.test(message.origin)){
         console.log(&#39;You received the data from valid sender&#39;, message.data);
   }
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I avoid using postMessages completely&lt;/h3&gt; &lt;p&gt;You cannot avoid using postMessages completely(or 100%). Even though your application doesn‚Äôt use postMessage considering the risks, a lot of third party scripts use postMessage to communicate with the third party service. So your application might be using postMessage without your knowledge.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is postMessages synchronous&lt;/h3&gt; &lt;p&gt;The postMessages are synchronous in IE8 browser but they are asynchronous in IE9 and all other modern browsers (i.e, IE9+, Firefox, Chrome, Safari).Due to this asynchronous behaviour, we use a callback mechanism when the postMessage is returned.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What paradigm is Javascript&lt;/h3&gt; &lt;p&gt;JavaScript is a multi-paradigm language, supporting imperative/procedural programming, Object-Oriented Programming and functional programming. JavaScript supports Object-Oriented Programming with prototypical inheritance.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between internal and external javascript&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Internal JavaScript:&lt;/strong&gt; It is the source code within the script tag. &lt;strong&gt;External JavaScript:&lt;/strong&gt; The source code is stored in an external file(stored with .js extension) and referred with in the tag.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript faster than server side script&lt;/h3&gt; &lt;p&gt;Yes, JavaScript is faster than server side script. Because JavaScript is a client-side script it does not require any web server‚Äôs help for its computation or calculation. So JavaScript is always faster than any server-side script like ASP, PHP, etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the status of a checkbox&lt;/h3&gt; &lt;p&gt;You can apply the &lt;code&gt;checked&lt;/code&gt; property on the selected checkbox in the DOM. If the value is &lt;code&gt;True&lt;/code&gt; means the checkbox is checked otherwise it is unchecked. For example, the below HTML checkbox element can be access using javascript as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;  &amp;lt;input type=&quot;checkbox&quot; name=&quot;checkboxname&quot; value=&quot;Agree&quot;&amp;gt; Agree the conditions&amp;lt;br&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(document.getElementById(‚Äòcheckboxname‚Äô).checked); // true or false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of double tilde operator&lt;/h3&gt; &lt;p&gt;The double tilde operator(~~) is known as double NOT bitwise operator. This operator is going to be a quicker substitute for Math.floor().&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you convert character to ASCII code&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;String.prototype.charCodeAt()&lt;/code&gt; method to convert string characters to ASCII numbers. For example, let&#39;s find ASCII code for the first letter of &#39;ABC&#39; string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;ABC&quot;.charCodeAt(0) // returns 65
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas &lt;code&gt;String.fromCharCode()&lt;/code&gt; method converts numbers to equal ASCII characters.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;String.fromCharCode(65,66,67); // returns &#39;ABC&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ArrayBuffer&lt;/h3&gt; &lt;p&gt;An ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer. You can create it as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let buffer = new ArrayBuffer(16); // create a buffer of length 16
alert(buffer.byteLength); // 16
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To manipulate an ArrayBuffer, we need to use a ‚Äúview‚Äù object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Create a DataView referring to the buffer
 let view = new DataView(buffer);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below string expression&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&quot;Welcome to JS world&quot;[0])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above expression is &quot;W&quot;. &lt;strong&gt;Explanation:&lt;/strong&gt; The bracket notation with specific index on a string returns the character at a specific location. Hence, it returns the character &quot;W&quot; of the string. Since this is not supported in IE7 and below versions, you may need to use the .charAt() method to get the desired result.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of Error object&lt;/h3&gt; &lt;p&gt;The Error constructor creates an error object and the instances of error objects are thrown when runtime errors occur. The Error object can also be used as a base object for user-defined exceptions. The syntax of error object would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new Error([message[, fileName[, lineNumber]]])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can throw user defined exceptions or errors using Error object in try...catch block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  if(withdraw &amp;gt; balance)
  throw new Error(&quot;Oops! You don&#39;t have enough balance&quot;);
} catch (e) {
  console.log(e.name + &#39;: &#39; + e.message);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of EvalError object&lt;/h3&gt; &lt;p&gt;The EvalError object indicates an error regarding the global &lt;code&gt;eval()&lt;/code&gt; function. Even though this exception is not thrown by JavaScript anymore, the EvalError object remains for compatibility. The syntax of this expression would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new EvalError([message[, fileName[, lineNumber]]])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can throw EvalError with in try...catch block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  throw new EvalError(&#39;Eval function error&#39;, &#39;someFile.js&#39;, 100);
} catch (e) {
  console.log(e.message, e.name, e.fileName);              // &quot;Eval function error&quot;, &quot;EvalError&quot;, &quot;someFile.js&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the list of cases error thrown from non-strict mode to strict mode&lt;/h3&gt; &lt;p&gt;When you apply &#39;use strict&#39;; syntax, some of the below cases will throw a SyntaxError before executing the script&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When you use Octal syntax&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var n = 022;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using &lt;code&gt;with&lt;/code&gt; statement&lt;/li&gt; 
   &lt;li&gt;When you use delete operator on a variable name&lt;/li&gt; 
   &lt;li&gt;Using eval or arguments as variable or function argument name&lt;/li&gt; 
   &lt;li&gt;When you use newly reserved keywords&lt;/li&gt; 
   &lt;li&gt;When you declare a function in a block&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (someCondition) { function f() {} }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Hence, the errors from above cases are helpful to avoid errors in development/production environments.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Do all objects have prototypes&lt;/h3&gt; &lt;p&gt;No. All objects have prototypes except for the base object which is created by the user, or an object that is created using the new keyword.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between a parameter and an argument&lt;/h3&gt; &lt;p&gt;Parameter is the variable name of a function definition whereas an argument represents the value given to a function when it is invoked. Let&#39;s explain this with a simple function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction(parameter1, parameter2, parameter3) {
  console.log(arguments[0]) // &quot;argument1&quot;
  console.log(arguments[1]) // &quot;argument2&quot;
  console.log(arguments[2]) // &quot;argument3&quot;
}
myFunction(&quot;argument1&quot;, &quot;argument2&quot;, &quot;argument3&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of some method in arrays&lt;/h3&gt; &lt;p&gt;The some() method is used to test whether at least one element in the array passes the test implemented by the provided function. The method returns a boolean value. Let&#39;s take an example to test for any odd elements,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5, 6 ,7, 8, 9, 10];

var odd = element ==&amp;gt; element % 2 !== 0;

console.log(array.some(odd)); // true (the odd element exists)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you combine two or more arrays&lt;/h3&gt; &lt;p&gt;The concat() method is used to join two or more arrays by returning a new array containing all the elements. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;array1.concat(array2, array3, ..., arrayX)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of array&#39;s concatenation with veggies and fruits arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  var veggies = [&quot;Tomato&quot;, &quot;Carrot&quot;, &quot;Cabbage&quot;];
  var fruits = [&quot;Apple&quot;, &quot;Orange&quot;, &quot;Pears&quot;];
  var veggiesAndFruits = veggies.concat(fruits);
  console.log(veggiesAndFruits); // Tomato, Carrot, Cabbage, Apple, Orange, Pears
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Shallow and Deep copy&lt;/h3&gt; &lt;p&gt;There are two ways to copy an object,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Shallow Copy:&lt;/strong&gt; Shallow copy is a bitwise copy of an object. A new object is created that has an exact copy of the values in the original object. If any of the fields of the object are references to other objects, just the reference addresses are copied i.e., only the memory address is copied.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetails = {
  name: &quot;John&quot;, age: 25, expertise: &quot;Software Developer&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;to create a duplicate&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetailsShallowCopy = empDetails    //Shallow copying!
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;if we change some property value in the duplicate one like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;empDetailsShallowCopy.name = &quot;Johnson&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above statement will also change the name of &lt;code&gt;empDetails&lt;/code&gt;, since we have a shallow copy. That means we&#39;re losing the original data as well.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Deep copy:&lt;/strong&gt; A deep copy copies all fields, and makes copies of dynamically allocated memory pointed to by the fields. A deep copy occurs when an object is copied along with the objects to which it refers.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetails = {
  name: &quot;John&quot;, age: 25, expertise: &quot;Software Developer&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Create a deep copy by using the properties from the original object into new variable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetailsDeepCopy = {
  name: empDetails.name,
  age: empDetails.age,
  expertise: empDetails.expertise
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now if you change &lt;code&gt;empDetailsDeepCopy.name&lt;/code&gt;, it will only affect &lt;code&gt;empDetailsDeepCopy&lt;/code&gt; &amp;amp; not &lt;code&gt;empDetails&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create specific number of copies of a string&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;repeat()&lt;/code&gt; method is used to construct and return a new string which contains the specified number of copies of the string on which it was called, concatenated together. Remember that this method has been added to the ECMAScript 2015 specification. Let&#39;s take an example of Hello string to repeat it 4 times,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&#39;Hello&#39;.repeat(4);  // &#39;HelloHelloHelloHello&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you return all matching strings against a regular expression&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;matchAll()&lt;/code&gt; method can be used to return an iterator of all results matching a string against a regular expression. For example, the below example returns an array of matching string results against a regular expression,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let regexp = /Hello(\d?))/g;
let greeting = &#39;Hello1Hello2Hello3&#39;;

let greetingList = [...greeting.matchAll(regexp)];

console.log(greetingList[0]); //Hello1
console.log(greetingList[1]); //Hello2
console.log(greetingList[2]); //Hello3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you trim a string at the beginning or ending&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;trim&lt;/code&gt; method of string prototype is used to trim on both sides of a string. But if you want to trim especially at the beginning or ending of the string then you can use &lt;code&gt;trimStart/trimLeft&lt;/code&gt; and &lt;code&gt;trimEnd/trimRight&lt;/code&gt; methods. Let&#39;s see an example of these methods on a greeting message,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = &#39;   Hello, Goodmorning!   &#39;;

console.log(greeting); // &quot;   Hello, Goodmorning!   &quot;
console.log(greeting.trimStart()); // &quot;Hello, Goodmorning!   &quot;
console.log(greeting.trimLeft()); // &quot;Hello, Goodmorning!   &quot;

console.log(greeting.trimEnd()); // &quot;   Hello, Goodmorning!&quot;
console.log(greeting.trimRight()); // &quot;   Hello, Goodmorning!&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below console statement with unary operator&lt;/h3&gt; &lt;p&gt;Let&#39;s take console statement with unary operator as given below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+ &#39;Hello&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above console log statement returns NaN. Because the element is prefixed by the unary operator and the JavaScript interpreter will try to convert that element into a number type. Since the conversion fails, the value of the statement results in NaN value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Does javascript uses mixins&lt;/h3&gt; &lt;p&gt;Mixin is a generic object-oriented programming term - is a class containing methods that can be used by other classes without a need to inherit from it. In JavaScript we can only inherit from a single object. ie. There can be only one &lt;code&gt;[[prototype]]&lt;/code&gt; for an object.&lt;/p&gt; &lt;p&gt;But sometimes we require to extend more than one, to overcome this we can use Mixin which helps to copy methods to the prototype of another class.&lt;/p&gt; &lt;p&gt;Say for instance, we&#39;ve two classes &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;CleanRoom&lt;/code&gt;. Suppose we need to add &lt;code&gt;CleanRoom&lt;/code&gt; functionality to &lt;code&gt;User&lt;/code&gt;, so that user can clean the room at demand. Here&#39;s where concept called mixins comes into picture.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// mixin
let cleanRoomMixin = {
     cleanRoom() {
     alert(`Hello ${this.name}, your room is clean now`);
},
sayBye() {
     alert(`Bye ${this.name}`);
}
};

// usage:
class User {
     constructor(name) {
          this.name = name;
     }
}

// copy the methods
Object.assign(User.prototype, cleanRoomMixin);

// now User can clean the room
new User(&quot;Dude&quot;).cleanRoom(); // Hello Dude, your room is clean now!
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a thunk function&lt;/h3&gt; &lt;p&gt;A thunk is just a function which delays the evaluation of the value. It doesn‚Äôt take any arguments but gives the value whenever you invoke the thunk. i.e, It is used not to execute now but it will be sometime in the future. Let&#39;s take a synchronous example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const add = (x,y) =&amp;gt; x + y;

const thunk = () =&amp;gt; add(2,3);

thunk() // 5
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are asynchronous thunks&lt;/h3&gt; &lt;p&gt;The asynchronous thunks are useful to make network requests. Let&#39;s see an example of network requests,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function fetchData(fn){
  fetch(&#39;https://jsonplaceholder.typicode.com/todos/1&#39;)
  .then(response =&amp;gt; response.json())
  .then(json =&amp;gt; fn(json))
}

const asyncThunk = function (){
   return fetchData(function getData(data){
      console.log(data)
  })
}

asyncThunk()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;getData&lt;/code&gt; function won&#39;t be called immediately but it will be invoked only when the data is available from API endpoint. The setTimeout function is also used to make our code asynchronous. The best real time example is redux state management library which uses the asynchronous thunks to delay the actions to dispatch.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below function calls&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Code snippet:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const circle = {
  radius: 20,
  diameter() {
    return this.radius * 2;
  },
  perimeter: () =&amp;gt; 2 * Math.PI * this.radius
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;console.log(circle.diameter()); console.log(circle.perimeter());&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The output is 40 and NaN. Remember that diameter is a regular function, whereas the value of perimeter is an arrow function. The &lt;code&gt;this&lt;/code&gt; keyword of a regular function(i.e, diameter) refers to the surrounding scope which is a class(i.e, Shape object). Whereas this keyword of perimeter function refers to the surrounding scope which is a window object. Since there is no radius property on window objects it returns an undefined value and the multiple of number value returns NaN value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to remove all line breaks from a string&lt;/h3&gt; &lt;p&gt;The easiest approach is using regular expressions to detect and replace newlines in the string. In this case, we use replace function along with string to replace with, which in our case is an empty string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function remove_linebreaks( var message ) {
    return message.replace( /[\r\n]+/gm, &quot;&quot; );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above expression, g and m are for global and multiline flags.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between reflow and repaint&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;repaint&lt;/em&gt; occurs when changes are made which affect the visibility of an element, but not its layout. Examples of this include outline, visibility, or background color. A &lt;em&gt;reflow&lt;/em&gt; involves changes that affect the layout of a portion of the page (or the whole page). Resizing the browser window, changing the font, content changing (such as user typing text), using JavaScript methods involving computed styles, adding or removing elements from the DOM, and changing an element&#39;s classes are a few of the things that can trigger reflow. Reflow of an element causes the subsequent reflow of all child and ancestor elements as well as any elements following it in the DOM.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens with negating an array&lt;/h3&gt; &lt;p&gt;Negating an array with &lt;code&gt;!&lt;/code&gt; character will coerce the array into a boolean. Since Arrays are considered to be truthy So negating it will return &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(![]); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if we add two arrays&lt;/h3&gt; &lt;p&gt;If you add two arrays together, it will convert them both to strings and concatenate them. For example, the result of adding arrays would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([&#39;a&#39;] + [&#39;b&#39;]);  // &quot;ab&quot;
console.log([] + []); // &quot;&quot;
console.log(![] + []); // &quot;false&quot;, because ![] returns false.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of prepend additive operator on falsy values&lt;/h3&gt; &lt;p&gt;If you prepend the additive(+) operator on falsy values(null, undefined, NaN, false, &quot;&quot;), the falsy value converts to a number value zero. Let&#39;s display them on browser console as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+null); // 0
console.log(+undefined);// NaN
console.log(+false); // 0
console.log(+NaN); // NaN
console.log(+&quot;&quot;); // 0
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create self string using special characters&lt;/h3&gt; &lt;p&gt;The self string can be formed with the combination of &lt;code&gt;[]()!+&lt;/code&gt; characters. You need to remember the below conventions to achieve this pattern.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Since Arrays are truthful values, negating the arrays will produce false: ![] === false&lt;/li&gt; 
   &lt;li&gt;As per JavaScript coercion rules, the addition of arrays together will toString them: [] + [] === &quot;&quot;&lt;/li&gt; 
   &lt;li&gt;Prepend an array with + operator will convert an array to false, the negation will make it true and finally converting the result will produce value &#39;1&#39;: +(!(+[])) === 1&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;By applying the above rules, we can derive below conditions&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;![] + [] === &quot;false&quot;
+!+[] === 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now the character pattern would be created as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;      s               e               l               f
 ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^

 (![] + [])[3] + (![] + [])[4] + (![] + [])[2] + (![] + [])[0]
 ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^
(![] + [])[+!+[]+!+[]+!+[]] +
(![] + [])[+!+[]+!+[]+!+[]+!+[]] +
(![] + [])[+!+[]+!+[]] +
(![] + [])[+[]]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(![]+[])[+!+[]+!+[]+!+[]]+(![]+[])[+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]+!+[]]+(![]+[])[+[]]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you remove falsy values from an array&lt;/h3&gt; &lt;p&gt;You can apply the filter method on the array by passing Boolean as a parameter. This way it removes all falsy values(0, undefined, null, false and &quot;&quot;) from the array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myArray = [false, null, 1,5, undefined]
myArray.filter(Boolean); // [1, 5] // is same as myArray.filter(x =&amp;gt; x);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get unique values of an array&lt;/h3&gt; &lt;p&gt;You can get unique values of an array with the combination of &lt;code&gt;Set&lt;/code&gt; and rest expression/spread(...) syntax.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([...new Set([1, 2, 4, 4, 3])]); // [1, 2, 4, 3]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is destructuring aliases&lt;/h3&gt; &lt;p&gt;Sometimes you would like to have a destructured variable with a different name than the property name. In that case, you&#39;ll use a &lt;code&gt;: newName&lt;/code&gt; to specify a name for the variable. This process is called destructuring aliases.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = { x: 1 };
// Grabs obj.x as as { otherName }
const { x: otherName } = obj;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you map the array values without using map method&lt;/h3&gt; &lt;p&gt;You can map the array values without using the &lt;code&gt;map&lt;/code&gt; method by just using the &lt;code&gt;from&lt;/code&gt; method of Array. Let&#39;s map city names from Countries array,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const countries = [
    { name: &#39;India&#39;, capital: &#39;Delhi&#39; },
    { name: &#39;US&#39;, capital: &#39;Washington&#39; },
    { name: &#39;Russia&#39;, capital: &#39;Moscow&#39; },
    { name: &#39;Singapore&#39;, capital: &#39;Singapore&#39; },
    { name: &#39;China&#39;, capital: &#39;Beijing&#39; },
    { name: &#39;France&#39;, capital: &#39;Paris&#39; },
];

const cityNames = Array.from(countries, ({ capital}) =&amp;gt; capital);
console.log(cityNames); // [&#39;Delhi, &#39;Washington&#39;, &#39;Moscow&#39;, &#39;Singapore&#39;, &#39;Beijing&#39;, &#39;Paris&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you empty an array&lt;/h3&gt; &lt;p&gt;You can empty an array quickly by setting the array length to zero.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let cities = [&#39;Singapore&#39;, &#39;Delhi&#39;, &#39;London&#39;];
cities.length = 0; // cities becomes []
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you rounding numbers to certain decimals&lt;/h3&gt; &lt;p&gt;You can round numbers to a certain number of decimals using &lt;code&gt;toFixed&lt;/code&gt; method from native javascript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let pie = 3.141592653;
pie = pie.toFixed(3); // 3.142
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to convert an array to an object&lt;/h3&gt; &lt;p&gt;You can convert an array to an object with the same data using spread(...) operator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fruits = [&quot;banana&quot;, &quot;apple&quot;, &quot;orange&quot;, &quot;watermelon&quot;];
var fruitsObject = {...fruits};
console.log(fruitsObject); // {0: &quot;banana&quot;, 1: &quot;apple&quot;, 2: &quot;orange&quot;, 3: &quot;watermelon&quot;}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an array with some data&lt;/h3&gt; &lt;p&gt;You can create an array with some data or an array with the same values using &lt;code&gt;fill&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var newArray = new Array(5).fill(&quot;0&quot;);
console.log(newArray); // [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;, &quot;0&quot;, &quot;0&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the placeholders from console object&lt;/h3&gt; &lt;p&gt;Below are the list of placeholders available from console object,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;%o ‚Äî It takes an object,&lt;/li&gt; 
   &lt;li&gt;%s ‚Äî It takes a string,&lt;/li&gt; 
   &lt;li&gt;%d ‚Äî It is used for a decimal or integer These placeholders can be represented in the console.log as below&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;};
console.log(&quot;Hello %s, your details %o are available in the object form&quot;, &quot;John&quot;, user); // Hello John, your details {name: &quot;John&quot;, id: 1, city: &quot;Delhi&quot;} are available in object
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to add CSS to console messages&lt;/h3&gt; &lt;p&gt;Yes, you can apply CSS styles to console messages similar to html text on the web page.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;%c The text has blue color, with large font and red background&#39;, &#39;color: blue; font-size: x-large; background: red&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The text will be displayed as below, &lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-css.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All CSS styles can be applied to console messages.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of dir method of console object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;console.dir()&lt;/code&gt; is used to display an interactive list of the properties of the specified JavaScript object as JSON.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;};
console.dir(user);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The user object displayed in JSON representation &lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-dir.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to debug HTML elements in console&lt;/h3&gt; &lt;p&gt;Yes, it is possible to get and debug HTML elements in the console just like inspecting elements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const element = document.getElementsByTagName(&quot;body&quot;)[0];
console.log(element);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It prints the HTML element in the console,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-html.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you display data in a tabular format using console object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;console.table()&lt;/code&gt; is used to display data in the console in a tabular format to visualize complex arrays or objects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const users = [{ &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;}, { &quot;name&quot;:&quot;Max&quot;, &quot;id&quot;: 2, &quot;city&quot;: &quot;London&quot;}, { &quot;name&quot;:&quot;Rod&quot;, &quot;id&quot;: 3, &quot;city&quot;: &quot;Paris&quot;} ];
console.table(users);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The data visualized in a table format,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-table.png&quot; alt=&quot;Screenshot&quot;&gt; &lt;strong&gt;Not:&lt;/strong&gt; Remember that &lt;code&gt;console.table()&lt;/code&gt; is not supported in IE.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you verify that an argument is a Number or not&lt;/h3&gt; &lt;p&gt;The combination of IsNaN and isFinite methods are used to confirm whether an argument is a number or not.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isNumber(n){
    return !isNaN(parseFloat(n)) &amp;amp;&amp;amp; isFinite(n);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create copy to clipboard button&lt;/h3&gt; &lt;p&gt;You need to select the content(using .select() method) of the input element and execute the copy command with execCommand (i.e, execCommand(&#39;copy&#39;)). You can also execute other system commands like cut and paste.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.querySelector(&quot;#copy-button&quot;).onclick = function() {
  // Select the content
  document.querySelector(&quot;#copy-input&quot;).select();
  // Copy to the clipboard
  document.execCommand(&#39;copy&#39;);
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the shortcut to get timestamp&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new Date().getTime()&lt;/code&gt; to get the current timestamp. There is an alternative shortcut to get the value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+new Date());
console.log(Date.now());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you flattening multi dimensional arrays&lt;/h3&gt; &lt;p&gt;Flattening bi-dimensional arrays is trivial with Spread operator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const biDimensionalArr = [11, [22, 33], [44, 55], [66, 77], 88, 99];
const flattenArr = [].concat(...biDimensionalArr); // [11, 22, 33, 44, 55, 66, 77, 88, 99]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can make it work with multi-dimensional arrays by recursive calls,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function flattenMultiArray(arr) {
    const flattened = [].concat(...arr);
    return flattened.some(item =&amp;gt; Array.isArray(item)) ? flattenMultiArray(flattened) : flattened;
 }
const multiDimensionalArr = [11, [22, 33], [44, [55, 66, [77, [88]], 99]]];
const flatArr = flattenMultiArray(multiDimensionalArr); // [11, 22, 33, 44, 55, 66, 77, 88, 99]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest multi condition checking&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;indexOf&lt;/code&gt; to compare input with multiple values instead of checking each value as one condition.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Verbose approach
if (input === &#39;first&#39; || input === 1 || input === &#39;second&#39; || input === 2) {
  someFunction();
}
// Shortcut
if ([&#39;first&#39;, 1, &#39;second&#39;, 2].indexOf(input) !== -1) {
  someFunction();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you capture browser back button&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;window.onbeforeunload&lt;/code&gt; method is used to capture browser back button events. This is helpful to warn users about losing the current data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; window.onbeforeunload = function() {
    alert(&quot;You work will be lost&quot;);
 };
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you disable right click in the web page&lt;/h3&gt; &lt;p&gt;The right click on the page can be disabled by returning false from the &lt;code&gt;oncontextmenu&lt;/code&gt; attribute on the body element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body oncontextmenu=&quot;return false;&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are wrapper objects&lt;/h3&gt; &lt;p&gt;Primitive Values like string,number and boolean don&#39;t have properties and methods but they are temporarily converted or coerced to an object(Wrapper object) when you try to perform actions on them. For example, if you apply toUpperCase() method on a primitive string value, it does not throw an error but returns uppercase of the string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let name = &quot;john&quot;;

console.log(name.toUpperCase());  // Behind the scenes treated as console.log(new String(name).toUpperCase());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;i.e, Every primitive except null and undefined have Wrapper Objects and the list of wrapper objects are String,Number,Boolean,Symbol and BigInt.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is AJAX&lt;/h3&gt; &lt;p&gt;AJAX stands for Asynchronous JavaScript and XML and it is a group of related technologies(HTML, CSS, JavaScript, XMLHttpRequest API etc) used to display data asynchronously. i.e. We can send data to the server and get data from the server without reloading the web page.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to deal with Asynchronous Code&lt;/h3&gt; &lt;p&gt;Below are the list of different ways to deal with Asynchronous code.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Callbacks&lt;/li&gt; 
   &lt;li&gt;Promises&lt;/li&gt; 
   &lt;li&gt;Async/await&lt;/li&gt; 
   &lt;li&gt;Third-party libraries such as async.js,bluebird etc&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to cancel a fetch request&lt;/h3&gt; &lt;p&gt;Until a few days back, One shortcoming of native promises is no direct way to cancel a fetch request. But the new &lt;code&gt;AbortController&lt;/code&gt; from js specification allows you to use a signal to abort one or multiple fetch calls. The basic flow of cancelling a fetch request would be as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create an &lt;code&gt;AbortController&lt;/code&gt; instance&lt;/li&gt; 
   &lt;li&gt;Get the signal property of an instance and pass the signal as a fetch option for signal&lt;/li&gt; 
   &lt;li&gt;Call the AbortController&#39;s abort property to cancel all fetches that use that signal For example, let&#39;s pass the same signal to multiple fetch calls will cancel all requests with that signal,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const controller = new AbortController();
const { signal } = controller;

fetch(&quot;http://localhost:8000&quot;, { signal }).then(response =&amp;gt; {
    console.log(`Request 1 is complete!`);
}).catch(e =&amp;gt; {
    if(e.name === &quot;AbortError&quot;) {
        // We know it&#39;s been canceled!
    }
});

fetch(&quot;http://localhost:8000&quot;, { signal }).then(response =&amp;gt; {
    console.log(`Request 2 is complete!`);
}).catch(e =&amp;gt; {
     if(e.name === &quot;AbortError&quot;) {
         // We know it&#39;s been canceled!
      }
});

// Wait 2 seconds to abort both requests
setTimeout(() =&amp;gt; controller.abort(), 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is web speech API&lt;/h3&gt; &lt;p&gt;Web speech API is used to enable modern browsers recognize and synthesize speech(i.e, voice data into web apps). This API has been introduced by W3C Community in the year 2012. It has two main parts,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;SpeechRecognition (Asynchronous Speech Recognition or Speech-to-Text):&lt;/strong&gt; It provides the ability to recognize voice context from an audio input and respond accordingly. This is accessed by the &lt;code&gt;SpeechRecognition&lt;/code&gt; interface. The below example shows on how to use this API to get text from speech,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;  // webkitSpeechRecognition for Chrome and SpeechRecognition for FF
const recognition = new window.SpeechRecognition();
recognition.onresult = (event) =&amp;gt; { // SpeechRecognitionEvent type
  const speechToText = event.results[0][0].transcript;
  console.log(speechToText);
}
recognition.start();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In this API, browser is going to ask you for permission to use your microphone&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;SpeechSynthesis (Text-to-Speech):&lt;/strong&gt; It provides the ability to recognize voice context from an audio input and respond. This is accessed by the &lt;code&gt;SpeechSynthesis&lt;/code&gt; interface. For example, the below code is used to get voice/speech from text,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(&#39;speechSynthesis&#39; in window){
    var speech = new SpeechSynthesisUtterance(&#39;Hello World!&#39;);
    speech.lang = &#39;en-US&#39;;
    window.speechSynthesis.speak(speech);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above examples can be tested on chrome(33+) browser&#39;s developer console. &lt;strong&gt;Note:&lt;/strong&gt; This API is still a working draft and only available in Chrome and Firefox browsers(ofcourse Chrome only implemented the specification)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is minimum timeout throttling&lt;/h3&gt; &lt;p&gt;Both browser and NodeJS javascript environments throttles with a minimum delay that is greater than 0ms. That means even though setting a delay of 0ms will not happen instantaneously. &lt;strong&gt;Browsers:&lt;/strong&gt; They have a minimum delay of 4ms. This throttle occurs when successive calls are triggered due to callback nesting(certain depth) or after a certain number of successive intervals. Note: The older browsers have a minimum delay of 10ms. &lt;strong&gt;Nodejs:&lt;/strong&gt; They have a minimum delay of 1ms. This throttle happens when the delay is larger than 2147483647 or less than 1. The best example to explain this timeout throttling behavior is the order of below code snippet.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function runMeFirst() {
    console.log(&#39;My script is initialized&#39;);
}
setTimeout(runMeFirst, 0);
console.log(&#39;Script loaded&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the output would be in&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;Script loaded
My script is initialized
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use &lt;code&gt;setTimeout&lt;/code&gt;, the order of logs will be sequential.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function runMeFirst() {
   console.log(&#39;My script is initialized&#39;);
}
runMeFirst();
console.log(&#39;Script loaded&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the output is,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;My script is initialized
Script loaded
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you implement zero timeout in modern browsers&lt;/h3&gt; &lt;p&gt;You can&#39;t use setTimeout(fn, 0) to execute the code immediately due to minimum delay of greater than 0ms. But you can use window.postMessage() to achieve this behavior.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are tasks in event loop&lt;/h3&gt; &lt;p&gt;A task is any javascript code/program which is scheduled to be run by the standard mechanisms such as initially starting to run a program, run an event callback, or an interval or timeout being fired. All these tasks are scheduled on a task queue. Below are the list of use cases to add tasks to the task queue,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When a new javascript program is executed directly from console or running by the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element, the task will be added to the task queue.&lt;/li&gt; 
   &lt;li&gt;When an event fires, the event callback added to task queue&lt;/li&gt; 
   &lt;li&gt;When a setTimeout or setInterval is reached, the corresponding callback added to task queue&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is microtask&lt;/h3&gt; &lt;p&gt;Microtask is the javascript code which needs to be executed immediately after the currently executing task/microtask is completed. They are kind of blocking in nature. i.e, The main thread will be blocked until the microtask queue is empty. The main sources of microtasks are Promise.resolve, Promise.reject, MutationObservers, IntersectionObservers etc&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All of these microtasks are processed in the same turn of the event loop. &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are different event loops&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of queueMicrotask&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you use javascript libraries in typescript file&lt;/h3&gt; &lt;p&gt;It is known that not all JavaScript libraries or frameworks have TypeScript declaration files. But if you still want to use libraries or frameworks in our TypeScript files without getting compilation errors, the only solution is &lt;code&gt;declare&lt;/code&gt; keyword along with a variable declaration. For example, let&#39;s imagine you have a library called &lt;code&gt;customLibrary&lt;/code&gt; that doesn‚Äôt have a TypeScript declaration and have a namespace called &lt;code&gt;customLibrary&lt;/code&gt; in the global namespace. You can use this library in typescript code as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;declare var customLibrary;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the runtime, typescript will provide the type to the &lt;code&gt;customLibrary&lt;/code&gt; variable as &lt;code&gt;any&lt;/code&gt; type. The another alternative without using declare keyword is below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var customLibrary: any;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between promises and observables&lt;/h3&gt; &lt;p&gt;Some of the major difference in a tabular form&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Promises&lt;/th&gt; 
     &lt;th&gt;Observables&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Emits only a single value at a time&lt;/td&gt; 
     &lt;td&gt;Emits multiple values over a period of time(stream of values ranging from 0 to multiple)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Eager in nature; they are going to be called immediately&lt;/td&gt; 
     &lt;td&gt;Lazy in nature; they require subscription to be invoked&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Promise is always asynchronous even though it resolved immediately&lt;/td&gt; 
     &lt;td&gt;Observable can be either synchronous or asynchronous&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Doesn&#39;t provide any operators&lt;/td&gt; 
     &lt;td&gt;Provides operators such as map, forEach, filter, reduce, retry, and retryWhen etc&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Cannot be canceled&lt;/td&gt; 
     &lt;td&gt;Canceled by using unsubscribe() method&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is heap&lt;/h3&gt; &lt;p&gt;Heap(Or memory heap) is the memory location where objects are stored when we define variables. i.e, This is the place where all the memory allocations and de-allocation take place. Both heap and call-stack are two containers of JS runtime. Whenever runtime comes across variables and function declarations in the code it stores them in the Heap.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/heap.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event table&lt;/h3&gt; &lt;p&gt;Event Table is a data structure that stores and keeps track of all the events which will be executed asynchronously like after some time interval or after the resolution of some API requests. i.e Whenever you call a setTimeout function or invoke async operation, it is added to the Event Table. It doesn&#39;t not execute functions on it‚Äôs own. The main purpose of the event table is to keep track of events and send them to the Event Queue as shown in the below diagram.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/event-table.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a microTask queue&lt;/h3&gt; &lt;p&gt;Microtask Queue is the new queue where all the tasks initiated by promise objects get processed before the callback queue. The microtasks queue are processed before the next rendering and painting jobs. But if these microtasks are running for a long time then it leads to visual degradation.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between shim and polyfill&lt;/h3&gt; &lt;p&gt;A shim is a library that brings a new API to an older environment, using only the means of that environment. It isn&#39;t necessarily restricted to a web application. For example, es5-shim.js is used to emulate ES5 features on older browsers (mainly pre IE9). Whereas polyfill is a piece of code (or plugin) that provides the technology that you, the developer, expect the browser to provide natively. In a simple sentence, A polyfill is a shim for a browser API.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect primitive or non primitive value type&lt;/h3&gt; &lt;p&gt;In JavaScript, primitive types include boolean, string, number, BigInt, null, Symbol and undefined. Whereas non-primitive types include the Objects. But you can easily identify them with the below function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var myPrimitive = 30;
var myNonPrimitive = {};
function isPrimitive(val) {
    return Object(val) !== val;
}

isPrimitive(myPrimitive);
isPrimitive(myNonPrimitive);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the value is a primitive data type, the Object constructor creates a new wrapper object for the value. But If the value is a non-primitive data type (an object), the Object constructor will give the same object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is babel&lt;/h3&gt; &lt;p&gt;Babel is a JavaScript transpiler to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments. Some of the main features are listed below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Transform syntax&lt;/li&gt; 
   &lt;li&gt;Polyfill features that are missing in your target environment (using @babel/polyfill)&lt;/li&gt; 
   &lt;li&gt;Source code transformations (or codemods)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is Node.js completely single threaded&lt;/h3&gt; &lt;p&gt;Node is a single thread, but some of the functions included in the Node.js standard library(e.g, fs module functions) are not single threaded. i.e, Their logic runs outside of the Node.js single thread to improve the speed and performance of a program.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common use cases of observables&lt;/h3&gt; &lt;p&gt;Some of the most common use cases of observables are web sockets with push notifications, user input changes, repeating intervals, etc&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is RxJS&lt;/h3&gt; &lt;p&gt;RxJS (Reactive Extensions for JavaScript) is a library for implementing reactive programming using observables that makes it easier to compose asynchronous or callback-based code. It also provides utility functions for creating and working with observables.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Function constructor and function declaration&lt;/h3&gt; &lt;p&gt;The functions which are created with &lt;code&gt;Function constructor&lt;/code&gt; do not create closures to their creation contexts but they are always created in the global scope. i.e, the function can access its own local variables and global scope variables only. Whereas function declarations can access outer function variables(closures) too.&lt;/p&gt; &lt;p&gt;Let&#39;s see this difference with an example,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Function Constructor:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 100;
function createFunction() {
    var a = 200;
    return new Function(&#39;return a;&#39;);
}
console.log(createFunction()()); // 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Function declaration:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 100;
function createFunction() {
    var a = 200;
    return function func() {
        return a;
    }
}
console.log(createFunction()()); // 200
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Short circuit condition&lt;/h3&gt; &lt;p&gt;Short circuit conditions are meant for condensed way of writing simple if statements. Let&#39;s demonstrate the scenario using an example. If you would like to login to a portal with an authentication condition, the expression would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (authenticate) {
   loginToPorta();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since the javascript logical operators evaluated from left to right, the above expression can be simplified using &amp;amp;&amp;amp; logical operator&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;authenticate &amp;amp;&amp;amp; loginToPorta();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to resize an array&lt;/h3&gt; &lt;p&gt;The length property of an array is useful to resize or empty an array quickly. Let&#39;s apply length property on number array to resize the number of elements from 5 to 2,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5];
console.log(array.length); // 5

array.length = 2;
console.log(array.length); // 2
console.log(array); // [1,2]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the array can be emptied too&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5];
array.length = 0;
console.log(array.length); // 0
console.log(array); // []
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an observable&lt;/h3&gt; &lt;p&gt;An Observable is basically a function that can return a stream of values either synchronously or asynchronously to an observer over time. The consumer can get the value by calling &lt;code&gt;subscribe()&lt;/code&gt; method. Let&#39;s look at a simple example of an Observable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { Observable } from &#39;rxjs&#39;;

const observable = new Observable(observer =&amp;gt; {
  setTimeout(() =&amp;gt; {
    observer.next(&#39;Message from a Observable!&#39;);
  }, 3000);
});

observable.subscribe(value =&amp;gt; console.log(value));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/observables.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Observables are not part of the JavaScript language yet but they are being proposed to be added to the language&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between function and class declarations&lt;/h3&gt; &lt;p&gt;The main difference between function declarations and class declarations is &lt;code&gt;hoisting&lt;/code&gt;. The function declarations are hoisted but not class declarations.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Classes:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = new User(); // ReferenceError

class User {}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Constructor Function:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const user = new User(); // No error

 function User() {
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an async function&lt;/h3&gt; &lt;p&gt;An async function is a function declared with the &lt;code&gt;async&lt;/code&gt; keyword which enables asynchronous, promise-based behavior to be written in a cleaner style by avoiding promise chains. These functions can contain zero or more &lt;code&gt;await&lt;/code&gt; expressions.&lt;/p&gt; &lt;p&gt;Let&#39;s take a below async function example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function logger() {

  let data = await fetch(&#39;http://someapi.com/users&#39;); // pause until fetch returns
  console.log(data)
}
logger();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is basically syntax sugar over ES2015 promises and generators.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you prevent promises swallowing errors&lt;/h3&gt; &lt;p&gt;While using asynchronous code, JavaScript‚Äôs ES6 promises can make your life a lot easier without having callback pyramids and error handling on every second line. But Promises have some pitfalls and the biggest one is swallowing errors by default.&lt;/p&gt; &lt;p&gt;Let&#39;s say you expect to print an error to the console for all the below cases,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).then(function() {
      throw new Error(&#39;error&#39;);
});

Promise.reject(&#39;error value&#39;).catch(function() {
      throw new Error(&#39;error&#39;);
});

new Promise(function(resolve, reject) {
      throw new Error(&#39;error&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But there are many modern JavaScript environments that won&#39;t print any errors. You can fix this problem in different ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add catch block at the end of each chain:&lt;/strong&gt; You can add catch block to the end of each of your promise chains&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).then(function() {
    throw new Error(&#39;error&#39;);
}).catch(function(error) {
  console.error(error.stack);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But it is quite difficult to type for each promise chain and verbose too.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add done method:&lt;/strong&gt; You can replace first solution&#39;s then and catch blocks with done method&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).done(function() {
    throw new Error(&#39;error&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s say you want to fetch data using HTTP and later perform processing on the resulting data asynchronously. You can write &lt;code&gt;done&lt;/code&gt; block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getDataFromHttp()
  .then(function(result) {
    return processDataAsync(result);
  })
  .done(function(processed) {
    displayData(processed);
  });
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In future, if the processing library API changed to synchronous then you can remove &lt;code&gt;done&lt;/code&gt; block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; getDataFromHttp()
   .then(function(result) {
     return displayData(processDataAsync(result));
   })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and then you forgot to add &lt;code&gt;done&lt;/code&gt; block to &lt;code&gt;then&lt;/code&gt; block leads to silent errors.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extend ES6 Promises by Bluebird:&lt;/strong&gt; Bluebird extends the ES6 Promises API to avoid the issue in the second solution. This library has a ‚Äúdefault‚Äù onRejection handler which will print all errors from rejected Promises to stderr. After installation, you can process unhandled rejections&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.onPossiblyUnhandledRejection(function(error){
    throw error;
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and discard a rejection, just handle it with an empty catch&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.reject(&#39;error value&#39;).catch(function() {});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is deno&lt;/h3&gt; &lt;p&gt;Deno is a simple, modern and secure runtime for JavaScript and TypeScript that uses V8 JavaScript engine and the Rust programming language.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make an object iterable in javascript&lt;/h3&gt; &lt;p&gt;By default, plain objects are not iterable. But you can make the object iterable by defining a &lt;code&gt;Symbol.iterator&lt;/code&gt; property on it.&lt;/p&gt; &lt;p&gt;Let&#39;s demonstrate this with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const collection = {
  one: 1,
  two: 2,
  three: 3,
  [Symbol.iterator]() {
    const values = Object.keys(this);
    let i = 0;
    return {
      next: () =&amp;gt; {
        return {
          value: this[values[i++]],
          done: i &amp;gt; values.length
        }
      }
    };
  }
};

const iterator = collection[Symbol.iterator]();

console.log(iterator.next());    // ‚Üí {value: 1, done: false}
console.log(iterator.next());    // ‚Üí {value: 2, done: false}
console.log(iterator.next());    // ‚Üí {value: 3, done: false}
console.log(iterator.next());    // ‚Üí {value: undefined, done: true}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above process can be simplified using a generator function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const collection = {
   one: 1,
   two: 2,
   three: 3,
   [Symbol.iterator]: function * () {
     for (let key in this) {
       yield this[key];
     }
   }
 };
 const iterator = collection[Symbol.iterator]();
 console.log(iterator.next());    // {value: 1, done: false}
 console.log(iterator.next());    // {value: 2, done: false}
 console.log(iterator.next());    // {value: 3, done: false}
 console.log(iterator.next());    // {value: undefined, done: true}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Proper Tail Call&lt;/h3&gt; &lt;p&gt;First, we should know about tail call before talking about &quot;Proper Tail Call&quot;. A tail call is a subroutine or function call performed as the final action of a calling function. Whereas &lt;strong&gt;Proper tail call(PTC)&lt;/strong&gt; is a technique where the program or code will not create additional stack frames for a recursion when the function call is a tail call.&lt;/p&gt; &lt;p&gt;For example, the below classic or head recursion of factorial function relies on stack for each step. Each step need to be processed upto &lt;code&gt;n * factorial(n - 1)&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function factorial(n) {
  if (n === 0) {
    return 1
  }
  return n * factorial(n - 1)
}
console.log(factorial(5)); //120
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But if you use Tail recursion functions, they keep passing all the necessary data it needs down the recursion without relying on the stack.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function factorial(n, acc = 1) {
  if (n === 0) {
    return acc
  }
  return factorial(n - 1, n * acc)
}
console.log(factorial(5)); //120
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above pattern returns the same output as the first one. But the accumulator keeps track of total as an argument without using stack memory on recursive calls.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check an object is a promise or not&lt;/h3&gt; &lt;p&gt;If you don&#39;t know if a value is a promise or not, wrapping the value as &lt;code&gt;Promise.resolve(value)&lt;/code&gt; which returns a promise&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;   function isPromise(object){
      if(Promise &amp;amp;&amp;amp; Promise.resolve){
      return Promise.resolve(object) == object;
      }else{
      throw &quot;Promise not supported in your environment&quot;
      }
   }

   var i = 1;
   var promise = new Promise(function(resolve,reject){
      resolve()
   });

   console.log(isPromise(i)); // false
   console.log(isPromise(promise)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way is to check for &lt;code&gt;.then()&lt;/code&gt; handler type&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isPromise(value) {
   return Boolean(value &amp;amp;&amp;amp; typeof value.then === &#39;function&#39;);
}
var i = 1;
var promise = new Promise(function(resolve,reject){
   resolve()
});

console.log(isPromise(i)) // false
console.log(isPromise(promise)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to detect if a function is called as constructor&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new.target&lt;/code&gt; pseudo-property to detect whether a function was called as a constructor(using the new operator) or as a regular function call.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If a constructor or function invoked using the new operator, new.target returns a reference to the constructor or function.&lt;/li&gt; 
   &lt;li&gt;For function calls, new.target is undefined.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Myfunc() {
   if (new.target) {
      console.log(&#39;called with new&#39;);
   } else {
      console.log(&#39;not called with new&#39;);
   }
}

new Myfunc(); // called with new
Myfunc(); // not called with new
Myfunc.call({}); not called with new
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between arguments object and rest parameter&lt;/h3&gt; &lt;p&gt;There are three main differences between arguments object and rest parameters&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The arguments object is an array-like but not an array. Whereas the rest parameters are array instances.&lt;/li&gt; 
   &lt;li&gt;The arguments object does not support methods such as sort, map, forEach, or pop. Whereas these methods can be used in rest parameters.&lt;/li&gt; 
   &lt;li&gt;The rest parameters are only the ones that haven‚Äôt been given a separate name, while the arguments object contains all arguments passed to the function&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between spread operator and rest parameter&lt;/h3&gt; &lt;p&gt;Rest parameter collects all remaining elements into an array. Whereas Spread operator allows iterables( arrays / objects / strings ) to be expanded into single arguments/elements. i.e, Rest parameter is opposite to the spread operator.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different kinds of generators&lt;/h3&gt; &lt;p&gt;There are five kinds of generators,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator function declaration:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; function* myGenFunc() {
      yield 1;
      yield 2;
      yield 3;
 }
 const genObj = myGenFunc();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator function expressions:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myGenFunc = function* () {
       yield 1;
       yield 2;
       yield 3;
};
const genObj = myGenFunc();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator method definitions in object literals:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const myObj = {
     * myGeneratorMethod() {
        yield 1;
        yield 2;
        yield 3;
     }
 };
 const genObj = myObj.myGeneratorMethod();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator method definitions in class:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  class MyClass {
     * myGeneratorMethod() {
        yield 1;
        yield 2;
        yield 3;
     }
  }
  const myObject = new MyClass();
  const genObj = myObject.myGeneratorMethod();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator as a computed property:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const SomeObj = {
  *[Symbol.iterator] () {
    yield 1;
    yield 2;
    yield 3;
  }
}

console.log(Array.from(SomeObj)); // [ 1, 2, 3 ]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the built-in iterables&lt;/h3&gt; &lt;p&gt;Below are the list of built-in iterables in javascript,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Arrays and TypedArrays&lt;/li&gt; 
   &lt;li&gt;Strings: Iterate over each character or Unicode code-points&lt;/li&gt; 
   &lt;li&gt;Maps: iterate over its key-value pairs&lt;/li&gt; 
   &lt;li&gt;Sets: iterates over their elements&lt;/li&gt; 
   &lt;li&gt;arguments: An array-like special variable in functions&lt;/li&gt; 
   &lt;li&gt;DOM collection such as NodeList&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between for...of and for...in statements&lt;/h3&gt; &lt;p&gt;Both for...in and for...of statements iterate over js data structures. The only difference is over what they iterate:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;for..in iterates over all enumerable property keys of an object&lt;/li&gt; 
   &lt;li&gt;for..of iterates over the values of an iterable object.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s explain this difference with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arr = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;];

arr.newProp = &#39;newVlue&#39;;

// key are the property keys
for (let key in arr) {
  console.log(key);
}

// value are the property values
for (let value of arr) {
  console.log(value);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since for..in loop iterates over the keys of the object, the first loop logs 0, 1, 2 and newProp while iterating over the array object. The for..of loop iterates over the values of a arr data structure and logs a, b, c in the console.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define instance and non-instance properties&lt;/h3&gt; &lt;p&gt;The Instance properties must be defined inside of class methods. For example, name and age properties defined insider constructor as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Person {
  constructor(name, age) {
    this.name = name;
    this.age = age;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But Static(class) and prototype data properties must be defined outside of the ClassBody declaration. Let&#39;s assign the age value for Person class as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Person.staticAge = 30;
Person.prototype.prototypeAge = 40;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between isNaN and Number.isNaN?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;isNaN&lt;/strong&gt;: The global function &lt;code&gt;isNaN&lt;/code&gt; converts the argument to a Number and returns true if the resulting value is NaN.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Number.isNaN&lt;/strong&gt;: This method does not convert the argument. But it returns true when the type is a Number and value is NaN.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s see the difference with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isNaN(‚Äòhello‚Äô);   // true
Number.isNaN(&#39;hello&#39;); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to invoke an IIFE without any extra brackets?&lt;/h3&gt; &lt;p&gt;Immediately Invoked Function Expressions(IIFE) requires a pair of parenthesis to wrap the function which contains set of statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function(dt) { 
   console.log(dt.toLocaleTimeString()); 
 })(new Date()); 
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since both IIFE and void operator discard the result of an expression, you can avoid the extra brackets using &lt;code&gt;void operator&lt;/code&gt; for IIFE as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; void function(dt) { 
   console.log(dt.toLocaleTimeString()); 
 }(new Date()); 
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is that possible to use expressions in switch cases?&lt;/h3&gt; &lt;p&gt;You might have seen expressions used in switch condition but it is also possible to use for switch cases by assigning true value for the switch condition. Let&#39;s see the weather condition based on temparature as an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const weather = function getWeather(temp) {
   switch(true) {
       case temp &amp;lt; 0: return &#39;freezing&#39;;
       case temp &amp;lt; 10: return &#39;cold&#39;;
       case temp &amp;lt; 24: return &#39;cool&#39;;
       default: return &#39;unknown&#39;;
   }
   }(10);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to ignore promise errors?&lt;/h3&gt; &lt;p&gt;The easiest and safest way to ignore promise errors is void that error. This approach is ESLint friendly too.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await promise.catch(e =&amp;gt; void e);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do style the console output using CSS?&lt;/h3&gt; &lt;p&gt;You can add CSS styling to the console output using the CSS format content specifier %c. The console string message can be appended after the specifier and CSS style in another argument. Let&#39;s print the red the color text using console.log and CSS specifier as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;%cThis is a red text&quot;, &quot;color:red&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is also possible to add more styles for the content. For example, the font-size can be modified for the above text&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;%cThis is a red text with bigger font&quot;, &quot;color:red; font-size:20px&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is nullish coalescing operator (??)?&lt;/h3&gt; &lt;p&gt;It is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, and otherwise returns its left-hand side operand. This can be contrasted with the logical OR (||) operator, which returns the right-hand side operand if the left operand is any falsy value, not only null or undefined.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(null ?? true); // true
console.log(false ?? true); // false
console.log(undefined ?? true); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you group and nest console output?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;console.group()&lt;/code&gt; can be used to group related log messages to be able to easily read the logs and use console.groupEnd()to close the group. Along with this, you can also nest groups which allows to output message in hierarchical manner.&lt;/p&gt; &lt;p&gt;For example, if you‚Äôre logging a user‚Äôs details:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.group(&#39;User Details&#39;);
console.log(&#39;name: Sudheer Jonna&#39;);
console.log(&#39;job: Software Developer&#39;);

// Nested Group
console.group(&#39;Address&#39;);
console.log(&#39;Street: Commonwealth&#39;);
console.log(&#39;City: Los Angeles&#39;);
console.log(&#39;State: California&#39;);

console.groupEnd();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use &lt;code&gt;console.groupCollapsed()&lt;/code&gt; instead of &lt;code&gt;console.group()&lt;/code&gt; if you want the groups to be collapsed by default.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between dense and sparse arrays?&lt;/h3&gt; &lt;p&gt;An array contians items at each index starting from first(0) to last(array.length - 1) is called as Dense array. Whereas if at least one item is missing at any index, the array is called as sparse.&lt;/p&gt; &lt;p&gt;Let&#39;s see the below two kind of arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const avengers = [&#39;Ironman&#39;, &#39;Hulk&#39;, &#39;CaptainAmerica&#39;];
console.log(avengers[0]); // &#39;Ironman&#39;
console.log(avengers[1]); // &#39;Hulk&#39;
console.log(avengers[2]); // &#39;CaptainAmerica&#39;
console.log(avengers.length); // 3

const justiceLeague = [&#39;Superman&#39;, &#39;Aquaman&#39;, ,&#39;Batman&#39;];
console.log(justiceLeague[0]); // &#39;Superman&#39;
console.log(justiceLeague[1]); // &#39;Aquaman&#39;
console.log(justiceLeague[2]); // undefined
console.log(justiceLeague[3]); // &#39;Batman&#39;
console.log(justiceLeague.length); // 4
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to create sparse arrays?&lt;/h3&gt; &lt;p&gt;There are 4 different ways to create sparse arrays in JavaScript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Array literal:&lt;/strong&gt; Omit a value when using the array literal &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const justiceLeague = [&#39;Superman&#39;, &#39;Aquaman&#39;, ,&#39;Batman&#39;];
console.log(justiceLeague); // [&#39;Superman&#39;, &#39;Aquaman&#39;, empty ,&#39;Batman&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Array() constructor:&lt;/strong&gt; Invoking Array(length) or new Array(length) &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const array = Array(3);
console.log(array); // [empty, empty ,empty]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Delete operator:&lt;/strong&gt; Using delete array[index] operator on the array &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const justiceLeague = [&#39;Superman&#39;, &#39;Aquaman&#39;, &#39;Batman&#39;];
delete justiceLeague[1];
console.log(justiceLeague); // [&#39;Superman&#39;, empty, ,&#39;Batman&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Increase length property:&lt;/strong&gt; Increasing length property of an array &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const justiceLeague = [&#39;Superman&#39;, &#39;Aquaman&#39;, &#39;Batman&#39;];
justiceLeague.length = 5;
console.log(justiceLeague); // [&#39;Superman&#39;, &#39;Aquaman&#39;, &#39;Batman&#39;, empty, empty]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Coding Exercise&lt;/h3&gt; 
&lt;h4&gt;1. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var car = new Vehicle(&quot;Honda&quot;, &quot;white&quot;, &quot;2010&quot;, &quot;UK&quot;);
console.log(car);

function Vehicle(model, color, year, country) {
    this.model = model;
    this.color = color;
    this.year = year;
    this.country = country;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Undefined&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError&lt;/li&gt; 
 &lt;li&gt;3: null&lt;/li&gt; 
 &lt;li&gt;4: {model: &quot;Honda&quot;, color: &quot;white&quot;, year: &quot;2010&quot;, country: &quot;UK&quot;}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The function declarations are hoisted similar to any variables. So the placement for &lt;code&gt;Vehicle&lt;/code&gt; function declaration doesn&#39;t make any difference.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;2. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
    let x = y = 0;
    x++;
    y++;
    return x;
}

console.log(foo(), typeof x, typeof y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, undefined and undefined&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError: X is not defined&lt;/li&gt; 
 &lt;li&gt;3: 1, undefined and number&lt;/li&gt; 
 &lt;li&gt;4: 1, number and number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;Of course the return value of &lt;code&gt;foo()&lt;/code&gt; is 1 due to the increment operator. But the statement &lt;code&gt;let x = y = 0&lt;/code&gt; declares a local variable x. Whereas y declared as a global variable accidentally. This statement is equivalent to,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; let x;
 window.y = 0;
 x = window.y;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Since the block scoped variable x is undefined outside of the function, the type will be undefined too. Whereas the global variable &lt;code&gt;y&lt;/code&gt; is available outside the function, the value is 0 and type is number.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;3. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function main(){
   console.log(&#39;A&#39;);
   setTimeout(
      function print(){ console.log(&#39;B&#39;); }
   ,0);
   console.log(&#39;C&#39;);
}
main();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: A, B and C&lt;/li&gt; 
 &lt;li&gt;2: B, A and C&lt;/li&gt; 
 &lt;li&gt;3: A and C&lt;/li&gt; 
 &lt;li&gt;4: A, C and B&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The statements order is based on the event loop mechanism. The order of statements follows the below order,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;At first, the main function is pushed to the stack.&lt;/li&gt; 
  &lt;li&gt;Then the browser pushes the fist statement of the main function( i.e, A&#39;s console.log) to the stack, executing and popping out immediately.&lt;/li&gt; 
  &lt;li&gt;But &lt;code&gt;setTimeout&lt;/code&gt; statement moved to Browser API to apply the delay for callback.&lt;/li&gt; 
  &lt;li&gt;In the meantime, C&#39;s console.log added to stack, executed and popped out.&lt;/li&gt; 
  &lt;li&gt;The callback of &lt;code&gt;setTimeout&lt;/code&gt; moved from Browser API to message queue.&lt;/li&gt; 
  &lt;li&gt;The &lt;code&gt;main&lt;/code&gt; function popped out from stack because there are no statements to execute&lt;/li&gt; 
  &lt;li&gt;The callback moved from message queue to the stack since the stack is empty.&lt;/li&gt; 
  &lt;li&gt;The console.log for B is added to the stack and display on the console.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;4. What is the output of below equality check&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(0.1 + 0.2 === 0.3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: false&lt;/li&gt; 
 &lt;li&gt;2: true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;This is due to the float point math problem. Since the floating point numbers are encoded in binary format, the addition operations on them lead to rounding errors. Hence, the comparison of floating points doesn&#39;t give expected results. You can find more details about the explanation here &lt;a href=&quot;https://0.30000000000000004.com/&quot;&gt;0.30000000000000004.com/&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;5. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var y = 1;
  if (function f(){}) {
    y += typeof f;
  }
  console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1function&lt;/li&gt; 
 &lt;li&gt;2: 1object&lt;/li&gt; 
 &lt;li&gt;3: ReferenceError&lt;/li&gt; 
 &lt;li&gt;4: 1undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The main points in the above code snippets are,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;You can see function expression instead function declaration inside if statement. So it always returns true.&lt;/li&gt; 
  &lt;li&gt;Since it is not declared(or assigned) anywhere, f is undefined and typeof f is undefined too.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;In other words, it is same as&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var y = 1;
  if (&#39;foo&#39;) {
    y += typeof f;
  }
  console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It returns 1object for MS Edge browser&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;6. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return
  {
    message: &quot;Hello World&quot;
  };
}
console.log(foo());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Hello World&lt;/li&gt; 
 &lt;li&gt;2: Object {message: &quot;Hello World&quot;}&lt;/li&gt; 
 &lt;li&gt;3: Undefined&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;This is a semicolon issue. Normally semicolons are optional in JavaScript. So if there are any statements(in this case, return) missing semicolon, it is automatically inserted immediately. Hence, the function returned as undefined.&lt;/p&gt; 
 &lt;p&gt;Whereas if the opening curly brace is along with the return keyword then the function is going to be returned as expected.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return {
    message: &quot;Hello World&quot;
  };
}
console.log(foo()); // {message: &quot;Hello World&quot;}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;7. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var myChars = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]
delete myChars[0];
console.log(myChars);
console.log(myChars[0]);
console.log(myChars.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [empty, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], empty, 3&lt;/li&gt; 
 &lt;li&gt;2: [null, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], empty, 3&lt;/li&gt; 
 &lt;li&gt;3: [empty, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], undefined, 4&lt;/li&gt; 
 &lt;li&gt;4: [null, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], undefined, 4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;The &lt;code&gt;delete&lt;/code&gt; operator will delete the object property but it will not reindex the array or change its length. So the number or elements or length of the array won&#39;t be changed. If you try to print myChars then you can observe that it doesn&#39;t set an undefined value, rather the property is removed from the array. The newer versions of Chrome use &lt;code&gt;empty&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt; to make the difference a bit clearer.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;8. What is the output of below code in latest Chrome&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array1 = new Array(3);
console.log(array1);

var array2 = [];
array2[2] = 100;
console.log(array2);

var array3 = [,,,];
console.log(array3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [undefined √ó 3], [undefined √ó 2, 100], [undefined √ó 3]&lt;/li&gt; 
 &lt;li&gt;2: [empty √ó 3], [empty √ó 2, 100], [empty √ó 3]&lt;/li&gt; 
 &lt;li&gt;3: [null √ó 3], [null √ó 2, 100], [null √ó 3]&lt;/li&gt; 
 &lt;li&gt;4: [], [100], []&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;The latest chrome versions display &lt;code&gt;sparse array&lt;/code&gt;(they are filled with holes) using this empty x n notation. Whereas the older versions have undefined x n notation. &lt;strong&gt;Note:&lt;/strong&gt; The latest version of FF displays &lt;code&gt;n empty slots&lt;/code&gt; notation.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;9. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {
  prop1: function() { return 0 },
  prop2() { return 1 },
  [&#39;prop&#39; + 3]() { return 2 }
}

console.log(obj.prop1());
console.log(obj.prop2());
console.log(obj.prop3());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 0, 1, 2&lt;/li&gt; 
 &lt;li&gt;2: 0, { return 1 }, 2&lt;/li&gt; 
 &lt;li&gt;3: 0, { return 1 }, { return 2 }&lt;/li&gt; 
 &lt;li&gt;4: 0, 1, undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;ES6 provides method definitions and property shorthands for objects. So both prop2 and prop3 are treated as regular function values.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;10. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(1 &amp;lt; 2 &amp;lt; 3);
console.log(3 &amp;gt; 2 &amp;gt; 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: true, true&lt;/li&gt; 
 &lt;li&gt;2: true, false&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError, SyntaxError,&lt;/li&gt; 
 &lt;li&gt;4: false, false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;The important point is that if the statement contains the same operators(e.g, &amp;lt; or &amp;gt;) then it can be evaluated from left to right. The first statement follows the below order,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;console.log(1 &amp;lt; 2 &amp;lt; 3);&lt;/li&gt; 
  &lt;li&gt;console.log(true &amp;lt; 3);&lt;/li&gt; 
  &lt;li&gt;console.log(1 &amp;lt; 3); // True converted as &lt;code&gt;1&lt;/code&gt; during comparison&lt;/li&gt; 
  &lt;li&gt;True&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Whereas the second statement follows the below order,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;console.log(3 &amp;gt; 2 &amp;gt; 1);&lt;/li&gt; 
  &lt;li&gt;console.log(true &amp;gt; 1);&lt;/li&gt; 
  &lt;li&gt;console.log(1 &amp;gt; 1); // False converted as &lt;code&gt;0&lt;/code&gt; during comparison&lt;/li&gt; 
  &lt;li&gt;False&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;11. What is the output of below code in non-strict mode&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function printNumbers(first, second, first) {
  console.log(first, second, first);
}
printNumbers(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, 2, 3&lt;/li&gt; 
 &lt;li&gt;2: 3, 2, 3&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError: Duplicate parameter name not allowed in this context&lt;/li&gt; 
 &lt;li&gt;4: 1, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;In non-strict mode, the regular JavaScript functions allow duplicate named parameters. The above code snippet has duplicate parameters on 1st and 3rd parameters. The value of the first parameter is mapped to the third argument which is passed to the function. Hence, the 3rd argument overrides the first parameter.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In strict mode, duplicate parameters will throw a Syntax Error.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;12. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const printNumbersArrow = (first, second, first) =&amp;gt; {
  console.log(first, second, first);
}
printNumbersArrow(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, 2, 3&lt;/li&gt; 
 &lt;li&gt;2: 3, 2, 3&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError: Duplicate parameter name not allowed in this context&lt;/li&gt; 
 &lt;li&gt;4: 1, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;Unlike regular functions, the arrow functions doesn&#39;t not allow duplicate parameters in either strict or non-strict mode. So you can see &lt;code&gt;SyntaxError&lt;/code&gt; in the console.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;13. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrowFunc = () =&amp;gt; arguments.length;
console.log(arrowFunc(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: ReferenceError: arguments is not defined&lt;/li&gt; 
 &lt;li&gt;2: 3&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: null&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Arrow functions do not have an &lt;code&gt;arguments, super, this, or new.target&lt;/code&gt; bindings. So any reference to &lt;code&gt;arguments&lt;/code&gt; variable tries to resolve to a binding in a lexically enclosing environment. In this case, the arguments variable is not defined outside of the arrow function. Hence, you will receive a reference error.&lt;/p&gt; 
 &lt;p&gt;Where as the normal function provides the number of arguments passed to the function&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const func = function () {
                    return arguments.length;
                    }
console.log(func(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;But If you still want to use an arrow function then rest operator on arguments provides the expected arguments&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrowFunc = (...args) =&amp;gt; args.length;
console.log(arrowFunc(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;14. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log( String.prototype.trimLeft.name === &#39;trimLeft&#39; );
console.log( String.prototype.trimLeft.name === &#39;trimStart&#39; );
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, False&lt;/li&gt; 
 &lt;li&gt;2: False, True&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;In order to be consistent with functions like &lt;code&gt;String.prototype.padStart&lt;/code&gt;, the standard method name for trimming the whitespaces is considered as &lt;code&gt;trimStart&lt;/code&gt;. Due to web web compatibility reasons, the old method name &#39;trimLeft&#39; still acts as an alias for &#39;trimStart&#39;. Hence, the prototype for &#39;trimLeft&#39; is always &#39;trimStart&#39;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;15. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(Math.max());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: undefined&lt;/li&gt; 
 &lt;li&gt;2: Infinity&lt;/li&gt; 
 &lt;li&gt;3: 0&lt;/li&gt; 
 &lt;li&gt;4: -Infinity&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;-Infinity is the initial comparant because almost every other value is bigger. So when no arguments are provided, -Infinity is going to be returned. &lt;strong&gt;Note:&lt;/strong&gt; Zero number of arguments is a valid case.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;16. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(10 == [10]);
console.log(10 == [[[[[[[10]]]]]]]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, True&lt;/li&gt; 
 &lt;li&gt;2: True, False&lt;/li&gt; 
 &lt;li&gt;3: False, False&lt;/li&gt; 
 &lt;li&gt;4: False, True&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;As per the comparison algorithm in the ECMAScript specification(ECMA-262), the above expression converted into JS as below&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;10 === Number([10].valueOf().toString()) // 10
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;So it doesn&#39;t matter about number brackets([]) around the number, it is always converted to a number in the expression.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;17. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(10 + &#39;10&#39;);
console.log(10 - &#39;10&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 20, 0&lt;/li&gt; 
 &lt;li&gt;2: 1010, 0&lt;/li&gt; 
 &lt;li&gt;3: 1010, 10-10&lt;/li&gt; 
 &lt;li&gt;4: NaN, NaN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;The concatenation operator(+) is applicable for both number and string types. So if any operand is string type then both operands concatenated as strings. Whereas subtract(-) operator tries to convert the operands as number type.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;18. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([0] == false);
if([0]) {
console.log(&quot;I&#39;m True&quot;);
} else {
console.log(&quot;I&#39;m False&quot;);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, I&#39;m True&lt;/li&gt; 
 &lt;li&gt;2: True, I&#39;m False&lt;/li&gt; 
 &lt;li&gt;3: False, I&#39;m True&lt;/li&gt; 
 &lt;li&gt;4: False, I&#39;m False&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;In comparison operators, the expression &lt;code&gt;[0]&lt;/code&gt; converted to Number([0].valueOf().toString()) which is resolved to false. Whereas &lt;code&gt;[0]&lt;/code&gt; just becomes a truthy value without any conversion because there is no comparison operator.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;19. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([1, 2] + [3, 4]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [1,2,3,4]&lt;/li&gt; 
 &lt;li&gt;2: [1,2][3,4]&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: 1,23,4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The + operator is not meant or defined for arrays. So it converts arrays into strings and concatenates them.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;20. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = new Set([1, 1, 2, 3, 4]);
console.log(numbers);

const browser = new Set(&#39;Firefox&#39;);
console.log(browser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: {1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;f&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
 &lt;li&gt;2: {1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
 &lt;li&gt;3: [1, 2, 3, 4], [&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;o&quot;, &quot;x&quot;]&lt;/li&gt; 
 &lt;li&gt;4: {1, 1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;f&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Since &lt;code&gt;Set&lt;/code&gt; object is a collection of unique values, it won&#39;t allow duplicate values in the collection. At the same time, it is case sensitive data structure.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;21. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(NaN === NaN);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True&lt;/li&gt; 
 &lt;li&gt;2: False&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;JavaScript follows IEEE 754 spec standards. As per this spec, NaNs are never equal for floating-point numbers.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;22. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 3, 4, NaN];
console.log(numbers.indexOf(NaN));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 4&lt;/li&gt; 
 &lt;li&gt;2: NaN&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: -1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The &lt;code&gt;indexOf&lt;/code&gt; uses strict equality operator(===) internally and &lt;code&gt;NaN === NaN&lt;/code&gt; evaluates to false. Since indexOf won&#39;t be able to find NaN inside an array, it returns -1 always. But you can use &lt;code&gt;Array.prototype.findIndex&lt;/code&gt; method to find out the index of NaN in an array or You can use &lt;code&gt;Array.prototype.includes&lt;/code&gt; to check if NaN is present in an array or not.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 3, 4, NaN];
console.log(numbers.findIndex(Number.isNaN)); // 4

console.log(numbers.includes(NaN)); // true
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;23. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let [a, ...b,] = [1, 2, 3, 4, 5];
console.log(a, b);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, [2, 3, 4, 5]&lt;/li&gt; 
 &lt;li&gt;2: 1, {2, 3, 4, 5}&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: 1, [2, 3, 4]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;When using rest parameters, trailing commas are not allowed and will throw a SyntaxError. If you remove the trailing comma then it displays 1st answer&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let [a, ...b] = [1, 2, 3, 4, 5];
console.log(a, b); // 1, [2, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;25. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function func() {
   return 10;
}
console.log(func());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Promise {&amp;lt;fulfilled&amp;gt;: 10}&lt;/li&gt; 
 &lt;li&gt;2: 10&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Promise {&amp;lt;rejected&amp;gt;: 10}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Async functions always return a promise. But even if the return value of an async function is not explicitly a promise, it will be implicitly wrapped in a promise. The above async function is equivalent to below expression,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func() {
   return Promise.resolve(10)
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;26. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function func() {
   await 10;
}
console.log(func());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Promise {&amp;lt;fulfilled&amp;gt;: 10}&lt;/li&gt; 
 &lt;li&gt;2: 10&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Promise {&amp;lt;resolved&amp;gt;: undefined}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The await expression returns value 10 with promise resolution and the code after each await expression can be treated as existing in a &lt;code&gt;.then&lt;/code&gt; callback. In this case, there is no return expression at the end of the function. Hence, the default return value of &lt;code&gt;undefined&lt;/code&gt; is returned as the resolution of the promise. The above async function is equivalent to below expression,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func() {
   return Promise.resolve(10).then(() =&amp;gt; undefined)
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;27. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function delay() {
  return new Promise(resolve =&amp;gt; setTimeout(resolve, 2000));
}

async function delayedLog(item) {
  await delay();
  console.log(item);
}

async function processArray(array) {
  array.forEach(item =&amp;gt; {
    await delayedLog(item);
  })
}

processArray([1, 2, 3, 4]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: 1, 2, 3, 4&lt;/li&gt; 
 &lt;li&gt;3: 4, 4, 4, 4&lt;/li&gt; 
 &lt;li&gt;4: 4, 3, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Even though ‚ÄúprocessArray‚Äù is an async function, the anonymous function that we use for &lt;code&gt;forEach&lt;/code&gt; is synchronous. If you use await inside a synchronous function then it throws a syntax error.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;28. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function delay() {
  return new Promise(resolve =&amp;gt; setTimeout(resolve, 2000));
}

async function delayedLog(item) {
  await delay();
  console.log(item);
}

async function process(array) {
  array.forEach(async (item) =&amp;gt; {
    await delayedLog(item);
  });
  console.log(&#39;Process completed!&#39;);
}
process([1, 2, 3, 5]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1 2 3 5 and Process completed!&lt;/li&gt; 
 &lt;li&gt;2: 5 5 5 5 and Process completed!&lt;/li&gt; 
 &lt;li&gt;3: Process completed! and 5 5 5 5&lt;/li&gt; 
 &lt;li&gt;4: Process completed! and 1 2 3 5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The forEach method will not wait until all items are finished but it just runs the tasks and goes next. Hence, the last statement is displayed first followed by a sequence of promise resolutions.&lt;/p&gt; 
 &lt;p&gt;But you control the array sequence using for..of loop,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function processArray(array) {
  for (const item of array) {
    await delayedLog(item);
  }
  console.log(&#39;Process completed!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;29. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var set = new Set();
set.add(&quot;+0&quot;).add(&quot;-0&quot;).add(NaN).add(undefined).add(NaN);;
console.log(set);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Set(4) {&quot;+0&quot;, &quot;-0&quot;, NaN, undefined}&lt;/li&gt; 
 &lt;li&gt;2: Set(3) {&quot;+0&quot;, NaN, undefined}&lt;/li&gt; 
 &lt;li&gt;3: Set(5) {&quot;+0&quot;, &quot;-0&quot;, NaN, undefined, NaN}&lt;/li&gt; 
 &lt;li&gt;4: Set(4) {&quot;+0&quot;, NaN, undefined, NaN}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Set has few exceptions from equality check,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;All NaN values are equal&lt;/li&gt; 
  &lt;li&gt;Both +0 and -0 considered as different values&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;30. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sym1 = Symbol(&#39;one&#39;);
const sym2 = Symbol(&#39;one&#39;);

const sym3 = Symbol.for(&#39;two&#39;);
const sym4 = Symbol.for(&#39;two&#39;);

cnsooe.log(sym1 === sym2, sym3 === sym4);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: true, true&lt;/li&gt; 
 &lt;li&gt;2: true, false&lt;/li&gt; 
 &lt;li&gt;3: false, true&lt;/li&gt; 
 &lt;li&gt;4: false, false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;Symbol follows below conventions,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Every symbol value returned from Symbol() is unique irrespective of the optional string.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Symbol.for()&lt;/code&gt; function creates a symbol in a global symbol registry list. But it doesn&#39;t necessarily create a new symbol on every call, it checks first if a symbol with the given key is already present in the registry and returns the symbol if it is found. Otherwise a new symbol created in the registry.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The symbol description is just useful for debugging purposes.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;31. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sym1 = new Symbol(&#39;one&#39;);
console.log(sym1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: one&lt;/li&gt; 
 &lt;li&gt;3: Symbol(&#39;one&#39;)&lt;/li&gt; 
 &lt;li&gt;4: Symbol&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;&lt;code&gt;Symbol&lt;/code&gt; is a just a standard function and not an object constructor(unlike other primitives new Boolean, new String and new Number). So if you try to call it with the new operator will result in a TypeError&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;32. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let myNumber = 100;
let myString = &#39;100&#39;;

if (!typeof myNumber === &quot;string&quot;) {
   console.log(&quot;It is not a string!&quot;);
} else {
    console.log(&quot;It is a string!&quot;);
}

if (!typeof myString === &quot;number&quot;){
   console.log(&quot;It is not a number!&quot;)
} else {
   console.log(&quot;It is a number!&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: It is not a string!, It is not a number!&lt;/li&gt; 
 &lt;li&gt;3: It is not a string!, It is a number!&lt;/li&gt; 
 &lt;li&gt;4: It is a string!, It is a number!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The return value of &lt;code&gt;typeof myNumber (OR) typeof myString&lt;/code&gt; is always the truthy value (either &quot;number&quot; or &quot;string&quot;). Since ! operator converts the value to a boolean value, the value of both &lt;code&gt;!typeof myNumber or !typeof myString&lt;/code&gt; is always false. Hence the if condition fails and control goes to else block.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;33. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(JSON.stringify({ myArray: [&#39;one&#39;, undefined, function(){}, Symbol(&#39;&#39;)] }));
console.log(JSON.stringify({ [Symbol.for(&#39;one&#39;)]: &#39;one&#39; }, [Symbol.for(&#39;one&#39;)]));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: {&quot;myArray&quot;:[&#39;one&#39;, undefined, {}, Symbol]}, {}&lt;/li&gt; 
 &lt;li&gt;2: {&quot;myArray&quot;:[&#39;one&#39;, null,null,null]}, {}&lt;/li&gt; 
 &lt;li&gt;3: {&quot;myArray&quot;:[&#39;one&#39;, null,null,null]}, &quot;{ [Symbol.for(&#39;one&#39;)]: &#39;one&#39; }, [Symbol.for(&#39;one&#39;)]&quot;&lt;/li&gt; 
 &lt;li&gt;4: {&quot;myArray&quot;:[&#39;one&#39;, undefined, function(){}, Symbol(&#39;&#39;)]}, {}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;The symbols has below constraints,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;The undefined, Functions, and Symbols are not valid JSON values. So those values are either omitted (in an object) or changed to null (in an array). Hence, it returns null values for the value array.&lt;/li&gt; 
  &lt;li&gt;All Symbol-keyed properties will be completely ignored. Hence it returns an empty object({}).&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;34. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class A {
  constructor() {
    console.log(new.target.name)
  }
}

class B extends A { constructor() { super() } }

new A();
new B();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: A, A&lt;/li&gt; 
 &lt;li&gt;2: A, B&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Using constructors, &lt;code&gt;new.target&lt;/code&gt; refers to the constructor (points to the class definition of class which is initialized) that was directly invoked by new. This also applies to the case if the constructor is in a parent class and was delegated from a child constructor.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;35. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const [x, ...y,] = [1, 2, 3, 4];
console.log(x, y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, [2, 3, 4]&lt;/li&gt; 
 &lt;li&gt;2: 1, [2, 3]&lt;/li&gt; 
 &lt;li&gt;3: 1, [2]&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;It throws a syntax error because the rest element should not have a trailing comma. You should always consider using a rest operator as the last element.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;36. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const {a: x = 10, b: y = 20} = {a: 30};

console.log(x);
console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 30, 20&lt;/li&gt; 
 &lt;li&gt;2: 10, 20&lt;/li&gt; 
 &lt;li&gt;3: 10, undefined&lt;/li&gt; 
 &lt;li&gt;4: 30, undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;The object property follows below rules,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;The object properties can be retrieved and assigned to a variable with a different name&lt;/li&gt; 
  &lt;li&gt;The property assigned a default value when the retrieved value is &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;37. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20}) {
  console.log(length*width);
}

area();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 200&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: 0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;If you leave out the right-hand side assignment for the destructuring object, the function will look for at least one argument to be supplied when invoked. Otherwise you will receive an error &lt;code&gt;Error: Cannot read property &#39;length&#39; of undefined&lt;/code&gt; as mentioned above.&lt;/p&gt; 
 &lt;p&gt;You can avoid the error with either of the below changes,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;Pass at least an empty object:&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20}) {
  console.log(length*width);
}

area({});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start=&quot;2&quot;&gt; 
  &lt;li&gt;&lt;strong&gt;Assign default empty object:&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20} = {}) {
  console.log(length*width);
}

area();
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;38. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const props = [
  { id: 1, name: &#39;John&#39;},
  { id: 2, name: &#39;Jack&#39;},
  { id: 3, name: &#39;Tom&#39;}
];

const [,, { name }] = props;
console.log(name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Tom&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: John&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;It is possible to combine Array and Object destructuring. In this case, the third element in the array props accessed first followed by name property in the object.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;39. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function checkType(num = 1) {
  console.log(typeof num);
}

checkType();
checkType(undefined);
checkType(&#39;&#39;);
checkType(null);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: number, undefined, string, object&lt;/li&gt; 
 &lt;li&gt;2: undefined, undefined, string, object&lt;/li&gt; 
 &lt;li&gt;3: number, number, string, object&lt;/li&gt; 
 &lt;li&gt;4: number, number, number, number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;If the function argument is set implicitly(not passing argument) or explicitly to undefined, the value of the argument is the default parameter. Whereas for other falsy values(&#39;&#39; or null), the value of the argument is passed as a parameter.&lt;/p&gt; 
 &lt;p&gt;Hence, the result of function calls categorized as below,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;The first two function calls logs number type since the type of default value is number&lt;/li&gt; 
  &lt;li&gt;The type of &#39;&#39; and null values are string and object type respectively.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;40. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function add(item, items = []) {
  items.push(item);
  return items;
}

console.log(add(&#39;Orange&#39;));
console.log(add(&#39;Apple&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [&#39;Orange&#39;], [&#39;Orange&#39;, &#39;Apple&#39;]&lt;/li&gt; 
 &lt;li&gt;2: [&#39;Orange&#39;], [&#39;Apple&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Since the default argument is evaluated at call time, a new object is created each time the function is called. So in this case, the new array is created and an element pushed to the default empty array.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;41. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function greet(greeting, name, message = greeting + &#39; &#39; + name) {
  console.log([greeting, name, message]);
}

greet(&#39;Hello&#39;, &#39;John&#39;);
greet(&#39;Hello&#39;, &#39;John&#39;, &#39;Good morning!&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: [&#39;Hello&#39;, &#39;John&#39;, &#39;Hello John&#39;], [&#39;Hello&#39;, &#39;John&#39;, &#39;Good morning!&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Since parameters defined earlier are available to later default parameters, this code snippet doesn&#39;t throw any error.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;42. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function outer(f = inner()) {
  function inner() { return &#39;Inner&#39; }
}
outer();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: ReferenceError&lt;/li&gt; 
 &lt;li&gt;2: Inner&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;The functions and variables declared in the function body cannot be referred from default value parameter initializers. If you still try to access, it throws a run-time ReferenceError(i.e, &lt;code&gt;inner&lt;/code&gt; is not defined).&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;43. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFun(x, y, ...manyMoreArgs) {
  console.log(manyMoreArgs)
}

myFun(1, 2, 3, 4, 5);
myFun(1, 2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [3, 4, 5], undefined&lt;/li&gt; 
 &lt;li&gt;2: SyntaxError&lt;/li&gt; 
 &lt;li&gt;3: [3, 4, 5], []&lt;/li&gt; 
 &lt;li&gt;4: [3, 4, 5], [undefined]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;The rest parameter is used to hold the remaining parameters of a function and it becomes an empty array if the argument is not provided.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;44. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {&#39;key&#39;: &#39;value&#39;};
const array = [...obj];
console.log(array);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [&#39;key&#39;, &#39;value&#39;]&lt;/li&gt; 
 &lt;li&gt;2: TypeError&lt;/li&gt; 
 &lt;li&gt;3: []&lt;/li&gt; 
 &lt;li&gt;4: [&#39;key&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Spread syntax can be applied only to iterable objects. By default, Objects are not iterable, but they become iterable when used in an Array, or with iterating functions such as &lt;code&gt;map(), reduce(), and assign()&lt;/code&gt;. If you still try to do it, it still throws &lt;code&gt;TypeError: obj is not iterable&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;45. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* myGenFunc() {
    yield 1;
    yield 2;
    yield 3;
}
var myGenObj = new myGenFunc;
console.log(myGenObj.next().value);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1&lt;/li&gt; 
 &lt;li&gt;2: undefined&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: TypeError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;Generators are not constructible type. But if you still proceed to do, there will be an error saying &quot;TypeError: myGenFunc is not a constructor&quot;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;46. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function* yieldAndReturn() {
  yield 1;
  return 2;
  yield 3;
}

var myGenObj = yieldAndReturn()
console.log(myGenObj.next());
console.log(myGenObj.next());
console.log(myGenObj.next());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: { value: 1, done: false }, { value: 2, done: true }, { value: undefined, done: true }&lt;/li&gt; 
 &lt;li&gt;2: { value: 1, done: false }, { value: 2, done: false }, { value: undefined, done: true }&lt;/li&gt; 
 &lt;li&gt;3: { value: 1, done: false }, { value: 2, done: true }, { value: 3, done: true }&lt;/li&gt; 
 &lt;li&gt;4: { value: 1, done: false }, { value: 2, done: false }, { value: 3, done: true }&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;A return statement in a generator function will make the generator finish. If a value is returned, it will be set as the value property of the object and done property to true. When a generator is finished, subsequent next() calls return an object of this form: &lt;code&gt;{value: undefined, done: true}&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;47. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myGenerator = (function *(){
  yield 1;
  yield 2;
  yield 3;
})();
for (const value of myGenerator) {
  console.log(value);
  break;
}

for (const value of myGenerator) {
  console.log(value);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1,2,3 and 1,2,3&lt;/li&gt; 
 &lt;li&gt;2: 1,2,3 and 4,5,6&lt;/li&gt; 
 &lt;li&gt;3: 1 and 1&lt;/li&gt; 
 &lt;li&gt;4: 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The generator should not be re-used once the iterator is closed. i.e, Upon exiting a loop(on completion or using break &amp;amp; return), the generator is closed and trying to iterate over it again does not yield any more results. Hence, the second loop doesn&#39;t print any value.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;48. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const num = 0o38;
console.log(num);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: 38&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;If you use an invalid number(outside of 0-7 range) in the octal literal, JavaScript will throw a SyntaxError. In ES5, it treats the octal literal as a decimal number.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;49. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const squareObj = new Square(10);
console.log(squareObj.area);

class Square {
  constructor(length) {
    this.length = length;
  }

  get area() {
    return this.length * this.length;
  }

  set area(value) {
    this.area = value;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 100&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Unlike function declarations, class declarations are not hoisted. i.e, First You need to declare your class and then access it, otherwise it will throw a ReferenceError &quot;Uncaught ReferenceError: Square is not defined&quot;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Class expressions also applies to the same hoisting restrictions of class declarations.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;50. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person() { }

Person.prototype.walk = function() {
  return this;
}

Person.run = function() {
  return this;
}

let user = new Person();
let walk = user.walk;
console.log(walk());

let run = Person.run;
console.log(run());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: undefined, undefined&lt;/li&gt; 
 &lt;li&gt;2: Person, Person&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Window, Window&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;When a regular or prototype method is called without a value for &lt;strong&gt;this&lt;/strong&gt;, the methods return an initial this value if the value is not undefined. Otherwise global window object will be returned. In our case, the initial &lt;code&gt;this&lt;/code&gt; value is undefined so both methods return window objects.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;51. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Vehicle {
  constructor(name) {
    this.name = name;
  }

  start() {
    console.log(`${this.name} vehicle started`);
  }
}

class Car extends Vehicle {
  start() {
    console.log(`${this.name} car started`);
    super.start();
  }
}

const car = new Car(&#39;BMW&#39;);
console.log(car.start());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: BMW vehicle started, BMW car started&lt;/li&gt; 
 &lt;li&gt;3: BMW car started, BMW vehicle started&lt;/li&gt; 
 &lt;li&gt;4: BMW car started, BMW car started&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;The super keyword is used to call methods of a superclass. Unlike other languages the super invocation doesn&#39;t need to be a first statement. i.e, The statements will be executed in the same order of code.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;52. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const USER = {&#39;age&#39;: 30};
USER.age = 25;
console.log(USER.age);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 30&lt;/li&gt; 
 &lt;li&gt;2: 25&lt;/li&gt; 
 &lt;li&gt;3: Uncaught TypeError&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Even though we used constant variables, the content of it is an object and the object&#39;s contents (e.g properties) can be altered. Hence, the change is going to be valid in this case.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;53. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;üôÇ&#39; === &#39;üôÇ&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: false&lt;/li&gt; 
 &lt;li&gt;2: true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Emojis are unicodes and the unicode for smile symbol is &quot;U+1F642&quot;. The unicode comparision of same emojies is equivalent to string comparison. Hence, the output is always true.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;54. What is the output of below code?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(typeof typeof typeof true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: string&lt;/li&gt; 
 &lt;li&gt;2: boolean&lt;/li&gt; 
 &lt;li&gt;3: NaN&lt;/li&gt; 
 &lt;li&gt;4: number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;The typeof operator on any primitive returns a string value. So even if you apply the chain of typeof operators on the return value, it is always string.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;55. What is the output of below code?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let zero = new Number(0);

if (zero) {
  console.log(&quot;If&quot;);
} else {
  console.log(&quot;Else&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: If&lt;/li&gt; 
 &lt;li&gt;2: Else&lt;/li&gt; 
 &lt;li&gt;3: NaN&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;ol&gt; 
  &lt;li&gt;The type of operator on new Number always returns object. i.e, typeof new Number(0) --&amp;gt; object.&lt;/li&gt; 
  &lt;li&gt;Objects are always truthy in if block&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Hence the above code block always goes to if section.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;55. What is the output of below code in non strict mode?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let msg = &quot;Good morning!!&quot;;

msg.name = &quot;John&quot;; 

console.log(msg.name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: &quot;&quot;&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: John&lt;/li&gt; 
 &lt;li&gt;4: Undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;It returns undefined for non-strict mode and returns Error for strict mode. In non-strict mode, the wrapper object is going to be created and get the mentioned property. But the object get disappeared after accessing the property in next line.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;56. What is the output of below code?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let count = 10;

(function innerFunc() {
    if (count === 10) {
        let count = 11;
        console.log(count);
    }
    console.log(count);
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 11, 10&lt;/li&gt; 
 &lt;li&gt;2: 11, 11&lt;/li&gt; 
 &lt;li&gt;3: 10, 11&lt;/li&gt; 
 &lt;li&gt;4: 10, 10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;11 and 10 is logged to the console.&lt;/p&gt; 
 &lt;p&gt;The innerFunc is a closure which captures the count variable from the outerscope. i.e, 10. But the conditional has another local variable &lt;code&gt;count&lt;/code&gt; which overwrites the ourter &lt;code&gt;count&lt;/code&gt; variable. So the first console.log displays value 11. Whereas the second console.log logs 10 by capturing the count variable from outerscope.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;57. What is the output of below code ?&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: console.log(true &amp;amp;&amp;amp; &#39;hi&#39;);&lt;/li&gt; 
 &lt;li&gt;2: console.log(true &amp;amp;&amp;amp; &#39;hi&#39; &amp;amp;&amp;amp; 1);&lt;/li&gt; 
 &lt;li&gt;3: console.log(true &amp;amp;&amp;amp; &#39;&#39; &amp;amp;&amp;amp; 0);&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;1: hi&lt;/li&gt; 
  &lt;li&gt;2: 1&lt;/li&gt; 
  &lt;li&gt;3: NULL&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Reason : Becauase by default if not an empty string is take it as truthy ,default value is 1 take it as truthy Accepted truthy and Falsy value JavaScript&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;1: 0&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;2: &#39;&#39;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;3: null&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;4: undefined&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;5: NAN&lt;/p&gt; &lt;p&gt;Other than these value all are consider as truthy value&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;The questions provided in this repository are the summary of frequently asked questions across numerous companies. We cannot guarantee that these questions will actually be asked during your interview process, nor should you focus on memorizing all of them. The primary purpose is for you to get a sense of what some companies might ask ‚Äî do not get discouraged if you don&#39;t know the answer to all of them ‚Å†‚Äî that is ok!&lt;/p&gt; 
&lt;p&gt;Good luck with your interview üòä&lt;/p&gt; 
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>goldbergyoni/nodebestpractices</title>
      <link>https://github.com/goldbergyoni/nodebestpractices</link>
      <description>&lt;p&gt;‚úÖ The Node.js best practices list (December 2021)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js Best Practices&lt;/h1&gt; 
&lt;h1 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/banner-2.jpg&quot; alt=&quot;Node.js Best Practices&quot;&gt; &lt;/h1&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/‚öô%20Item%20count%20-%20102%20Best%20Practices-blue.svg&quot; alt=&quot;102 items&quot;&gt; 
 &lt;img id=&quot;last-update-badge&quot; src=&quot;https://img.shields.io/badge/%F0%9F%93%85%20Last%20update%20-%20November%2030%2C%202021-green.svg?sanitize=true&quot; alt=&quot;Last update: November 30, 2021&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/ %E2%9C%94%20Updated%20For%20Version%20-%20Node%2014.0.0-brightgreen.svg&quot; alt=&quot;Updated for Node 14.0.0&quot;&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; alt=&quot;nodepractices&quot;&gt;&lt;/a&gt; &lt;strong&gt;Follow us on Twitter!&lt;/strong&gt; &lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;strong&gt;@nodepractices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;Read in a different language: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt;&lt;strong&gt;CN&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.french.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt;&lt;strong&gt;FR&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt;&lt;strong&gt;BR&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt;&lt;strong&gt;RU&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt;&lt;strong&gt;PL&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.japanese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/JA.png&quot; alt=&quot;JA&quot;&gt;&lt;strong&gt;JA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.basque.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt;&lt;strong&gt;EU&lt;/strong&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translations&quot;&gt;(&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt;&lt;strong&gt;ES&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt;&lt;strong&gt;HE&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt;&lt;strong&gt;KR&lt;/strong&gt; and &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt;&lt;strong&gt;TR&lt;/strong&gt; in progress! )&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h6&gt;Built and maintained by our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#steering-committee&quot;&gt;Steering Committee&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#collaborators&quot;&gt;Collaborators&lt;/a&gt;&lt;/h6&gt; 
&lt;h1&gt;Latest Best Practices and News&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;üîñ New menu and tags&lt;/strong&gt;: Our menu is collapsible now and include &lt;code&gt;#tags&lt;/code&gt;. New visitors can read &lt;code&gt;#strategic&lt;/code&gt; items first. Returning visitors can focus on &lt;code&gt;#new&lt;/code&gt; content. Seniors can filter for &lt;code&gt;#advanced&lt;/code&gt; items. Courtesy of the one and only &lt;a href=&quot;https://github.com/rubek-joshi@rubek-joshi&quot;&gt;Rubek Joshi&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;üë®‚Äçüë©‚Äçüëß‚Äçüë¶ New family member!&lt;/strong&gt;: A new repository joins our family - &lt;a href=&quot;https://github.com/testjavascript/nodejs-integration-tests-best-practices&quot;&gt;Node.js Integration Tests Best Practices ‚ú®&lt;/a&gt;. It includes 40+ best practices for writing awesome and performant Node.js component tests&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt; French translation!1! :&lt;/strong&gt; The latest translation that joins our international guide is French. Bienvenue&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome! 3 Things You Ought To Know First&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;1. You are reading dozens of the best Node.js articles -&lt;/strong&gt; this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. It is the largest compilation, and it is growing every week -&lt;/strong&gt; currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We&#39;d love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/writing-guidelines.md&quot;&gt;writing guidelines here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Best practices have additional info -&lt;/strong&gt; most bullets include a &lt;strong&gt;üîóRead More&lt;/strong&gt; link that expands on the practice with code examples, quotes from selected blogs, and more information&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#1-project-structure-practices&quot;&gt;1. Project Structure Practices (5)&lt;/a&gt; &lt;/summary&gt; 
 &lt;p&gt;‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-11-structure-your-solution-by-components&quot;&gt;1.1 Structure your solution by components &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-12-layer-your-components-keep-the-web-layer-within-its-boundaries&quot;&gt;1.2 Layer your components, keep the web layer within its boundaries &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-13-wrap-common-utilities-as-npm-packages&quot;&gt;1.3 Wrap common utilities as npm packages&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-14-separate-express-app-and-server&quot;&gt;1.4 Separate Express &#39;app&#39; and &#39;server&#39;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-15-use-environment-aware-secure-and-hierarchical-config&quot;&gt;1.5 Use environment aware, secure and hierarchical config &lt;code&gt;#modified-recently&lt;/code&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#2-error-handling-practices&quot;&gt;2. Error Handling Practices (12)&lt;/a&gt; &lt;/summary&gt; 
 &lt;p&gt;‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-21-use-async-await-or-promises-for-async-error-handling&quot;&gt;2.1 Use Async-Await or promises for async error handling&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-22-use-only-the-built-in-error-object&quot;&gt;2.2 Use only the built-in Error object &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-23-distinguish-operational-vs-programmer-errors&quot;&gt;2.3 Distinguish operational vs programmer errors &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-24-handle-errors-centrally-not-within-a-middleware&quot;&gt;2.4 Handle errors centrally, not within a middleware &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-25-document-api-errors-using-swagger-or-graphql&quot;&gt;2.5 Document API errors using Swagger or GraphQL &lt;code&gt;#modified-recently&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-26-exit-the-process-gracefully-when-a-stranger-comes-to-town&quot;&gt;2.6 Exit the process gracefully when a stranger comes to town &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-27-use-a-mature-logger-to-increase-error-visibility&quot;&gt;2.7 Use a mature logger to increase error visibility&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-28-test-error-flows-using-your-favorite-test-framework&quot;&gt;2.8 Test error flows using your favorite test framework&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-29-discover-errors-and-downtime-using-apm-products&quot;&gt;2.9 Discover errors and downtime using APM products&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-210-catch-unhandled-promise-rejections&quot;&gt;2.10 Catch unhandled promise rejections &lt;code&gt;#modified-recently&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-211-fail-fast-validate-arguments-using-a-dedicated-library&quot;&gt;2.11 Fail fast, validate arguments using a dedicated library&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-212-always-await-promises-before-returning-to-avoid-a-partial-stacktrace&quot;&gt;2.12 Always await promises before returning to avoid a partial stacktrace &lt;code&gt;#new&lt;/code&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;3. Code Style Practices (12)&lt;/a&gt; &lt;/summary&gt; 
 &lt;p&gt;‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-31-use-eslint&quot;&gt;3.1 Use ESLint &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-32-nodejs-specific-plugins&quot;&gt;3.2 Node.js specific plugins&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-33-start-a-codeblocks-curly-braces-on-the-same-line&quot;&gt;3.3 Start a Codeblock&#39;s Curly Braces on the Same Line&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-34-separate-your-statements-properly&quot;&gt;3.4 Separate your statements properly&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-35-name-your-functions&quot;&gt;3.5 Name your functions&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-36-use-naming-conventions-for-variables-constants-functions-and-classes&quot;&gt;3.6 Use naming conventions for variables, constants, functions and classes&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-37-prefer-const-over-let-ditch-the-var&quot;&gt;3.7 Prefer const over let. Ditch the var&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-38-require-modules-first-not-inside-functions&quot;&gt;3.8 Require modules first, not inside functions&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-39-require-modules-by-folders-as-opposed-to-the-files-directly&quot;&gt;3.9 Require modules by folders, as opposed to the files directly&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-310-use-the--operator&quot;&gt;3.10 Use the === operator&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-311-use-async-await-avoid-callbacks&quot;&gt;3.11 Use Async Await, avoid callbacks &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-312-use-arrow-function-expressions-&quot;&gt;3.12 Use arrow function expressions (=&amp;gt;)&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#4-testing-and-overall-quality-practices&quot;&gt;4. Testing And Overall Quality Practices (13)&lt;/a&gt; &lt;/summary&gt; 
 &lt;p&gt;‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-41-at-the-very-least-write-api-component-testing&quot;&gt;4.1 At the very least, write API (component) testing &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-42-include-3-parts-in-each-test-name&quot;&gt;4.2 Include 3 parts in each test name &lt;code&gt;#new&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-43-structure-tests-by-the-aaa-pattern&quot;&gt;4.3 Structure tests by the AAA pattern &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-44-detect-code-issues-with-a-linter&quot;&gt;4.4 Detect code issues with a linter&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-45-avoid-global-test-fixtures-and-seeds-add-data-per-test&quot;&gt;4.5 Avoid global test fixtures and seeds, add data per-test &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-46-constantly-inspect-for-vulnerable-dependencies&quot;&gt;4.6 Constantly inspect for vulnerable dependencies&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-47-tag-your-tests&quot;&gt;4.7 Tag your tests &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-48-check-your-test-coverage-it-helps-to-identify-wrong-test-patterns&quot;&gt;4.8 Check your test coverage, it helps to identify wrong test patterns&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-49-inspect-for-outdated-packages&quot;&gt;4.9 Inspect for outdated packages&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-410-use-production-like-environment-for-e2e-testing&quot;&gt;4.10 Use production-like environment for e2e testing&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-411-refactor-regularly-using-static-analysis-tools&quot;&gt;4.11 Refactor regularly using static analysis tools&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-412-carefully-choose-your-ci-platform-jenkins-vs-circleci-vs-travis-vs-rest-of-the-world&quot;&gt;4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-413-test-your-middlewares-in-isolation&quot;&gt;4.13 Test your middlewares in isolation&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#5-going-to-production-practices&quot;&gt;5. Going To Production Practices (19)&lt;/a&gt; &lt;/summary&gt; 
 &lt;p&gt;‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-51-monitoring&quot;&gt;5.1. Monitoring &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-52-increase-transparency-using-smart-logging&quot;&gt;5.2. Increase transparency using smart logging &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-53-delegate-anything-possible-eg-gzip-ssl-to-a-reverse-proxy&quot;&gt;5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-54-lock-dependencies&quot;&gt;5.4. Lock dependencies&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-55-guard-process-uptime-using-the-right-tool&quot;&gt;5.5. Guard process uptime using the right tool&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-56-utilize-all-cpu-cores&quot;&gt;5.6. Utilize all CPU cores&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-57-create-a-maintenance-endpoint&quot;&gt;5.7. Create a ‚Äòmaintenance endpoint‚Äô&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-58-discover-errors-and-downtime-using-apm-products&quot;&gt;5.8. Discover errors and downtime using APM products &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-59-make-your-code-production-ready&quot;&gt;5.9. Make your code production-ready&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-510-measure-and-guard-the-memory-usage&quot;&gt;5.10. Measure and guard the memory usage &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-511-get-your-frontend-assets-out-of-node&quot;&gt;5.11. Get your frontend assets out of Node&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-512-be-stateless-kill-your-servers-almost-every-day&quot;&gt;5.12. Be stateless, kill your servers almost every day&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-513-use-tools-that-automatically-detect-vulnerabilities&quot;&gt;5.13. Use tools that automatically detect vulnerabilities&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-514-assign-a-transaction-id-to-each-log-statement&quot;&gt;5.14. Assign a transaction id to each log statement &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-515-set-node_envproduction&quot;&gt;5.15. Set NODE_ENV=production&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-516-design-automated-atomic-and-zero-downtime-deployments&quot;&gt;5.16. Design automated, atomic and zero-downtime deployments &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-517-use-an-lts-release-of-nodejs&quot;&gt;5.17. Use an LTS release of Node.js&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-518-dont-route-logs-within-the-app&quot;&gt;5.18. Don&#39;t route logs within the app&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-519-install-your-packages-with-npm-ci&quot;&gt;5.19. Install your packages with npm ci &lt;code&gt;#new&lt;/code&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#6-security-best-practices&quot;&gt;6. Security Practices (25)&lt;/a&gt; &lt;/summary&gt; 
 &lt;p&gt;‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-61-embrace-linter-security-rules&quot;&gt;6.1. Embrace linter security rules&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-62-limit-concurrent-requests-using-a-middleware&quot;&gt;6.2. Limit concurrent requests using a middleware&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-63-extract-secrets-from-config-files-or-use-packages-to-encrypt-them&quot;&gt;6.3 Extract secrets from config files or use packages to encrypt them &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-64-prevent-query-injection-vulnerabilities-with-ormodm-libraries&quot;&gt;6.4. Prevent query injection vulnerabilities with ORM/ODM libraries &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-65-collection-of-generic-security-best-practices&quot;&gt;6.5. Collection of generic security best practices&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-66-adjust-the-http-response-headers-for-enhanced-security&quot;&gt;6.6. Adjust the HTTP response headers for enhanced security&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-67-constantly-and-automatically-inspect-for-vulnerable-dependencies&quot;&gt;6.7. Constantly and automatically inspect for vulnerable dependencies &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-68-protect-users-passwordssecrets-using-bcrypt-or-scrypt&quot;&gt;6.8. Protect Users&#39; Passwords/Secrets using bcrypt or scrypt &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-69-escape-html-js-and-css-output&quot;&gt;6.9. Escape HTML, JS and CSS output&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-610-validate-incoming-json-schemas&quot;&gt;6.10. Validate incoming JSON schemas &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-611-support-blocklisting-jwts&quot;&gt;6.11. Support blocklisting JWTs&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-612-prevent-brute-force-attacks-against-authorization&quot;&gt;6.12. Prevent brute-force attacks against authorization &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-613-run-nodejs-as-non-root-user&quot;&gt;6.13. Run Node.js as non-root user&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-614-limit-payload-size-using-a-reverse-proxy-or-a-middleware&quot;&gt;6.14. Limit payload size using a reverse-proxy or a middleware&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-615-avoid-javascript-eval-statements&quot;&gt;6.15. Avoid JavaScript eval statements&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-616-prevent-evil-regex-from-overloading-your-single-thread-execution&quot;&gt;6.16. Prevent evil RegEx from overloading your single thread execution&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-617-avoid-module-loading-using-a-variable&quot;&gt;6.17. Avoid module loading using a variable&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-618-run-unsafe-code-in-a-sandbox&quot;&gt;6.18. Run unsafe code in a sandbox&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-619-take-extra-care-when-working-with-child-processes&quot;&gt;6.19. Take extra care when working with child processes &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-620-hide-error-details-from-clients&quot;&gt;6.20. Hide error details from clients&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-621-configure-2fa-for-npm-or-yarn&quot;&gt;6.21. Configure 2FA for npm or Yarn &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-622-modify-session-middleware-settings&quot;&gt;6.22. Modify session middleware settings&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-623-avoid-dos-attacks-by-explicitly-setting-when-a-process-should-crash&quot;&gt;6.23. Avoid DOS attacks by explicitly setting when a process should crash &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-624-prevent-unsafe-redirects&quot;&gt;6.24. Prevent unsafe redirects&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-625-avoid-publishing-secrets-to-the-npm-registry&quot;&gt;6.25. Avoid publishing secrets to the npm registry&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#7-draft-performance-best-practices&quot;&gt;7. Performance Practices (2) (Work In ProgressÔ∏è ‚úçÔ∏è)&lt;/a&gt; &lt;/summary&gt; 
 &lt;p&gt;‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-71-dont-block-the-event-loop&quot;&gt;7.1. Don&#39;t block the event loop&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-72-prefer-native-js-methods-over-user-land-utils-like-lodash&quot;&gt;7.2. Prefer native JS methods over user-land utils like Lodash&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#8-docker-best-practices&quot;&gt;8. Docker Practices (15)&lt;/a&gt; &lt;/summary&gt; 
 &lt;p&gt;‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-81-use-multi-stage-builds-for-leaner-and-more-secure-docker-images&quot;&gt;8.1 Use multi-stage builds for leaner and more secure Docker images &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-82-bootstrap-using-node-command-avoid-npm-start&quot;&gt;8.2. Bootstrap using node command, avoid npm start&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-83-let-the-docker-runtime-handle-replication-and-uptime&quot;&gt;8.3. Let the Docker runtime handle replication and uptime &lt;code&gt;#strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-84-use-dockerignore-to-prevent-leaking-secrets&quot;&gt;8.4. Use .dockerignore to prevent leaking secrets&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-85-clean-up-dependencies-before-production&quot;&gt;8.5. Clean-up dependencies before production&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-86-shutdown-smartly-and-gracefully&quot;&gt;8.6. Shutdown smartly and gracefully &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-87-set-memory-limits-using-both-docker-and-v8&quot;&gt;8.7. Set memory limits using both Docker and v8 &lt;code&gt;#advanced #strategic&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-88-plan-for-efficient-caching&quot;&gt;8.8. Plan for efficient caching&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-89-use-explicit-image-reference-avoid-latest-tag&quot;&gt;8.9. Use explicit image reference, avoid latest tag&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-810-prefer-smaller-docker-base-images&quot;&gt;8.10. Prefer smaller Docker base images&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-811-clean-out-build-time-secrets-avoid-secrets-in-args&quot;&gt;8.11. Clean-out build-time secrets, avoid secrets in args &lt;code&gt;#strategic #new&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-812-scan-images-for-multi-layers-of-vulnerabilities&quot;&gt;8.12. Scan images for multi layers of vulnerabilities &lt;code&gt;#advanced&lt;/code&gt;&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-813-clean-node_module-cache&quot;&gt;8.13 Clean NODE_MODULE cache&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-814-generic-docker-practices&quot;&gt;8.14. Generic Docker practices&lt;/a&gt;&lt;br&gt; ‚ÄÉ‚ÄÉ&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#-815-lint-your-dockerfile&quot;&gt;8.15. Lint your Dockerfile &lt;code&gt;#new&lt;/code&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;1. Project Structure Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.1 Structure your solution by components&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit &#39;Read More&#39; below to see examples of correct project structure&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It&#39;s also considered harder to scale-out when all the business units are not separated&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/breakintcomponents.md&quot;&gt;&lt;strong&gt;Read More: structure by components&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.2 Layer your components, keep the web layer within its boundaries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each component should contain &#39;layers&#39; - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (e.g. Express req, res) to business logic and data layers - this makes your application dependent on and accessible only by specific web frameworks&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, triggers from message queues, etc&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/createlayers.md&quot;&gt;&lt;strong&gt;Read More: layer your app&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.3 Wrap common utilities as npm packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In a large app that constitutes a large codebase, cross-cutting-concern utilities like a logger, encryption and alike, should be wrapped by your code and exposed as private npm packages. This allows sharing them among multiple codebases and projects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You&#39;ll have to invent your deployment and the dependency wheel&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/wraputilities.md&quot;&gt;&lt;strong&gt;Read More: Structure by feature&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.4 Separate Express &#39;app&#39; and &#39;server&#39;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid the nasty habit of defining the entire &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; app in a single huge file - separate your &#39;Express&#39; definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won&#39;t be a big pleasure to maintain hundreds of lines of code in a single file&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/separateexpress.md&quot;&gt;&lt;strong&gt;Read More: separate Express &#39;app&#39; and &#39;server&#39;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.5 Use environment aware, secure and hierarchical config&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like &lt;a href=&quot;https://www.npmjs.com/package/rc&quot;&gt;rc&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/nconf&quot;&gt;nconf&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/config&quot;&gt;config&lt;/a&gt;, and &lt;a href=&quot;https://www.npmjs.com/package/convict&quot;&gt;convict&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failing to satisfy any of the config requirements will simply bog down the development or DevOps team. Probably both&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/configguide.md&quot;&gt;&lt;strong&gt;Read More: configuration best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;2. Error Handling Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.1 Use Async-Await or promises for async error handling&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/asyncerrorhandling.md&quot;&gt;&lt;strong&gt;Read More: avoiding callbacks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.2 Use only the built-in Error object&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Many throw errors as a string or as some custom type ‚Äì this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error ‚Äì using only the built-in Error object (or an object that extends the built-in Error object) will increase uniformity and prevent loss of information. There is &lt;code&gt;no-throw-literal&lt;/code&gt; ESLint rule that strictly checks that (although it have some &lt;a href=&quot;https://eslint.org/docs/rules/no-throw-literal&quot;&gt;limitations&lt;/a&gt; which can be solved when using TypeScript and setting the &lt;code&gt;@typescript-eslint/no-throw-literal&lt;/code&gt; rule)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When invoking some component, being uncertain which type of errors come in return ‚Äì it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/useonlythebuiltinerror.md&quot;&gt;&lt;strong&gt;Read More: using the built-in error object&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.3 Distinguish operational vs programmer errors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read an undefined variable) refers to unknown code failures that dictate to gracefully restart the application&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal ‚Äì keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/operationalvsprogrammererror.md&quot;&gt;&lt;strong&gt;Read More: operational vs programmer error&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.4 Handle errors centrally, not within a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not handling errors within a single place will lead to code duplication and probably to improperly handled errors&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/centralizedhandling.md&quot;&gt;&lt;strong&gt;Read More: handling errors in a centralized place&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.5 Document API errors using Swagger or GraphQL&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you&#39;re using GraphQL, you can utilize your schema and comments as well.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An API client might decide to crash and restart only because it received back an error it couldn‚Äôt understand. Note: the caller of your API might be you (very typical in a microservice environment)&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/documentingusingswagger.md&quot;&gt;&lt;strong&gt;Read More: documenting API errors in Swagger or GraphQL&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.6 Exit the process gracefully when a stranger comes to town&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. Common practice suggests restarting the process carefully using a process management tool like &lt;a href=&quot;https://www.npmjs.com/package/forever&quot;&gt;Forever&lt;/a&gt; or &lt;a href=&quot;http://pm2.keymetrics.io/&quot;&gt;PM2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/shuttingtheprocess.md&quot;&gt;&lt;strong&gt;Read More: shutting the process&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.7 Use a mature logger to increase error visibility&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A set of mature logging tools like &lt;a href=&quot;https://github.com/pinojs/pino&quot;&gt;Pino&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/log4js&quot;&gt;Log4js&lt;/a&gt;, will speed-up error discovery and understanding. So forget about console.log&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/usematurelogger.md&quot;&gt;&lt;strong&gt;Read More: using a mature logger&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.8 Test error flows using your favorite test framework&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Whether professional automated QA or plain manual developer testing ‚Äì Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha &amp;amp; Chai can handle this easily (see code examples within the &quot;Gist popup&quot;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without testing, whether automatically or manually, you can‚Äôt rely on your code to return the right errors. Without meaningful errors ‚Äì there‚Äôs no error handling&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/testingerrorflows.md&quot;&gt;&lt;strong&gt;Read More: testing error flows&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.9 Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes, and slow parts that you were missing&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you‚Äôll never be aware which are your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.10 Catch unhandled promise rejections&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any exception thrown within a promise will get swallowed and discarded unless a developer didn‚Äôt forget to explicitly handle it. Even if your code is subscribed to &lt;code&gt;process.uncaughtException&lt;/code&gt;! Overcome this by registering to the event &lt;code&gt;process.unhandledRejection&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your errors will get swallowed and leave no trace. Nothing to worry about&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/catchunhandledpromiserejection.md&quot;&gt;&lt;strong&gt;Read More: catching unhandled promise rejection&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.11 Fail fast, validate arguments using a dedicated library&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like &lt;a href=&quot;https://www.npmjs.com/package/ajv&quot;&gt;ajv&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;Joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider this ‚Äì your function expects a numeric argument ‚ÄúDiscount‚Äù which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/failfast.md&quot;&gt;&lt;strong&gt;Read More: failing fast&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.12 Always await promises before returning to avoid a partial stacktrace&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always do &lt;code&gt;return await&lt;/code&gt; when returning a promise to benefit full error stacktrace. If a function returns a promise, that function must be declared as &lt;code&gt;async&lt;/code&gt; function and explicitly &lt;code&gt;await&lt;/code&gt; the promise before returning it&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The function that returns a promise without awaiting won&#39;t appear in the stacktrace. Such missing frames would probably complicate the understanding of the flow that leads to the error, especially if the cause of the abnormal behavior is inside of the missing function&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/returningpromises.md&quot;&gt;&lt;strong&gt;Read More: returning promises&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;3. Code Style Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.1 Use ESLint&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;a href=&quot;https://eslint.org&quot;&gt;ESLint&lt;/a&gt; is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;prettier&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/js-beautify&quot;&gt;beautify&lt;/a&gt; are more powerful in formatting the fix and work in conjunction with ESLint&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project&#39;s code style&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/codestylepractices/eslint_prettier.md&quot;&gt;&lt;strong&gt;Read More: Using ESLint and Prettier&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.2 Node.js specific plugins&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-node&quot;&gt;eslint-plugin-node&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;eslint-plugin-node-security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as a path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.3 Start a Codeblock&#39;s Curly Braces on the Same Line&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The opening curly braces of a code block should be on the same line as the opening statement&lt;/p&gt; 
&lt;h3&gt;Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function someFunction() {
  // code block
}

// Avoid
function someFunction() 
{
  // code block
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://stackoverflow.com/questions/3641519/why-does-a-results-vary-based-on-curly-brace-placement&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;Why do results vary based on curly brace placement?&quot; (StackOverflow)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.4 Separate your statements properly&lt;/h2&gt; 
&lt;p&gt;No matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use ESLint to gain awareness about separation concerns. &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; or &lt;a href=&quot;https://standardjs.com/&quot;&gt;Standardjs&lt;/a&gt; can automatically resolve these issues.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As seen in the previous section, JavaScript&#39;s interpreter automatically adds a semicolon at the end of a statement if there isn&#39;t one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediately invoked function expressions to prevent most of the unexpected errors.&lt;/p&gt; 
&lt;h3&gt;Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function doThing() {
    // ...
}

doThing()

// Do

const items = [1, 2, 3]
items.forEach(console.log)

// Avoid ‚Äî throws exception
const m = new Map()
const a = [1,2,3]
[...m.values()].forEach(console.log)
&amp;gt; [...m.values()].forEach(console.log)
&amp;gt;  ^^^
&amp;gt; SyntaxError: Unexpected token ...

// Avoid ‚Äî throws exception
const count = 2 // it tries to run 2(), but 2 is not a function
(function doSomething() {
  // do something amazing
}())
// put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs altogether
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://eslint.org/docs/rules/semi&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;Semi ESLint rule&quot;&lt;/a&gt; üîó &lt;a href=&quot;https://eslint.org/docs/rules/no-unexpected-multiline&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;No unexpected multiline ESLint rule&quot;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.5 Name your functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you&#39;re looking at when checking a memory snapshot&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.6 Use naming conventions for variables, constants, functions and classes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use &lt;strong&gt;&lt;em&gt;lowerCamelCase&lt;/em&gt;&lt;/strong&gt; when naming constants, variables and functions, &lt;strong&gt;&lt;em&gt;UpperCamelCase&lt;/em&gt;&lt;/strong&gt; (capital first letter as well) when naming classes and &lt;strong&gt;&lt;em&gt;UPPER_SNAKE_CASE&lt;/em&gt;&lt;/strong&gt; when naming global or static variables. This will help you to easily distinguish between plain variables, functions, classes that require instantiation and variables declared at global module scope. Use descriptive names, but try to keep them short&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; JavaScript is the only language in the world that allows invoking a constructor (&quot;Class&quot;) directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase&lt;/p&gt; 
&lt;h3&gt;3.6 Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// for global variables names we use the const/let keyword and UPPER_SNAKE_CASE
let MUTABLE_GLOBAL = &quot;mutable value&quot;
const GLOBAL_CONSTANT = &quot;immutable value&quot;;
const CONFIG = {
  key: &quot;value&quot;,
};

// examples of UPPER_SNAKE_CASE convetion in nodejs/javascript ecosystem
// in javascript Math.PI module
const PI = 3.141592653589793;

// https://github.com/nodejs/node/blob/b9f36062d7b5c5039498e98d2f2c180dca2a7065/lib/internal/http2/core.js#L303
// in nodejs http2 module
const HTTP_STATUS_OK = 200;
const HTTP_STATUS_CREATED = 201;

// for class name we use UpperCamelCase
class SomeClassExample {
  // for static class properties we use UPPER_SNAKE_CASE
  static STATIC_PROPERTY = &quot;value&quot;;
}

// for functions names we use lowerCamelCase
function doSomething() {
  // for scoped variable names we use the const/let keyword and lowerCamelCase
  const someConstExample = &quot;immutable value&quot;;
  let someMutableExample = &quot;mutable value&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.7 Prefer const over let. Ditch the var&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using &lt;code&gt;const&lt;/code&gt; means that once a variable is assigned, it cannot be reassigned. Preferring &lt;code&gt;const&lt;/code&gt; will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use &lt;code&gt;let&lt;/code&gt; to declare it. Another important aspect of &lt;code&gt;let&lt;/code&gt; is that a variable declared using it is only available in the block scope in which it was defined. &lt;code&gt;var&lt;/code&gt; is function scoped, not block-scoped, and &lt;a href=&quot;https://hackernoon.com/why-you-shouldnt-use-var-anymore-f109a58b9b70&quot;&gt;shouldn&#39;t be used in ES6&lt;/a&gt; now that you have &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; at your disposal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging becomes way more cumbersome when following a variable that frequently changes&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75&quot;&gt;&lt;strong&gt;Read more: JavaScript ES6+: var, let, or const?&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.8 Require modules first, not inside functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.9 Require modules by folders, as opposed to the files directly&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When developing a module/library in a folder, place an index.js file that exposes the module&#39;s internals so every consumer will pass through it. This serves as an &#39;interface&#39; to your module and eases future changes without breaking the contract&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Changing the internal structure of files or the signature may break the interface with clients&lt;/p&gt; 
&lt;h3&gt;3.9 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
module.exports.SMSProvider = require(&quot;./SMSProvider&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver&quot;);

// Avoid
module.exports.SMSProvider = require(&quot;./SMSProvider/SMSProvider.js&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver/SMSNumberResolver.js&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.10 Use the &lt;code&gt;===&lt;/code&gt; operator&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Prefer the strict equality operator &lt;code&gt;===&lt;/code&gt; over the weaker abstract equality operator &lt;code&gt;==&lt;/code&gt;. &lt;code&gt;==&lt;/code&gt; will compare two variables after converting them to a common type. There is no type conversion in &lt;code&gt;===&lt;/code&gt;, and both variables must be of the same type to be equal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unequal variables might return true when compared with the &lt;code&gt;==&lt;/code&gt; operator&lt;/p&gt; 
&lt;h3&gt;3.10 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;&quot; == &quot;0&quot;; // false
0 == &quot;&quot;; // true
0 == &quot;0&quot;; // true

false == &quot;false&quot;; // false
false == &quot;0&quot;; // true

false == undefined; // false
false == null; // false
null == undefined; // true

&quot; \t\r\n &quot; == 0; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All statements above will return false if used with &lt;code&gt;===&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.11 Use Async Await, avoid callbacks&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Handling async errors in callback style are probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting, and makes it difficult to reason about the code flow&lt;/p&gt; 
&lt;p&gt;üîó&lt;a href=&quot;https://github.com/yortus/asyncawait&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; Guide to async-await 1.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.12 Use arrow function expressions (=&amp;gt;)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Though it&#39;s recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. &lt;code&gt;this&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Longer code (in ES5 functions) is more prone to bugs and cumbersome to read&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75&quot;&gt;&lt;strong&gt;Read more: It‚Äôs Time to Embrace Arrow Functions&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;4. Testing And Overall Quality Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.1 At the very least, write API (component) testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Most projects just don&#39;t have any automated testing due to short timetables or often the &#39;testing project&#39; ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like &lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;). Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.2 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make the test speak at the requirements level so it&#39;s self-explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances, and what is the expected result&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named ‚ÄúAdd product‚Äù failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/3-parts-in-name.md&quot;&gt;&lt;strong&gt;Read More: Include 3 parts in each test name&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.3 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Structure your tests with 3 well-separated sections: Arrange, Act &amp;amp; Assert (AAA). The first part includes the test setup, then the execution of the unit under test, and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not only you spend long daily hours on understanding the main code, but now also what should have been the simple part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/aaa.md&quot;&gt;&lt;strong&gt;Read More: Structure tests by the AAA pattern&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.4 Detect code issues with a linter&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use a code linter to check the basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Section 3&lt;/a&gt; on Code Style Practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may let pass some anti-pattern and possible vulnerable code to your production environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.5 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent test coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/avoid-global-test-fixture.md&quot;&gt;&lt;strong&gt;Read More: Avoid global test fixtures&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as üîó &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; and üîó &lt;a href=&quot;https://snyk.io&quot;&gt;snyk.io&lt;/a&gt; that can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.7 Tag your tests&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;: mocha --grep &#39;sanity&#39;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.8 Check your test coverage, it helps to identify wrong test patterns&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code coverage tools like &lt;a href=&quot;https://github.com/istanbuljs/istanbuljs&quot;&gt;Istanbul&lt;/a&gt;/&lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;NYC&lt;/a&gt; are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; There won&#39;t be any automated metric telling you when a large portion of your code is not covered by testing&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.9 Inspect for outdated packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use your preferred tool (e.g. &lt;code&gt;npm outdated&lt;/code&gt; or &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;npm-check-updates&lt;/a&gt;) to detect installed outdated packages, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.10 Use production-like environment for e2e testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as close to your real production environment as possible like a-continue (Missed -continue here, needs content. Judging by the &lt;strong&gt;Otherwise&lt;/strong&gt; clause, this should mention docker-compose)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without docker-compose, teams must maintain a testing DB for each testing environment including developers&#39; machines, keep all those DBs in sync so test results won&#39;t vary across environments&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.11 Refactor regularly using static analysis tools&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity), and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;Sonarqube&lt;/a&gt; (2,600+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (1,500+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/refactoring.md&quot;&gt;&lt;strong&gt;Read More: Refactoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your continuous integration platform (CICD) will host all the quality tools (e.g. test, lint) so it should come with a vibrant ecosystem of plugins. &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of a complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like &lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it&#39;s a trade-off between robustness and speed - choose your side carefully&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/citools.md&quot;&gt;&lt;strong&gt;Read More: Choosing CI platform&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.13 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When a middleware holds some immense logic that spans many requests, it is worth testing it in isolation without waking up the entire web framework. This can be easily achieved by stubbing and spying on the {req, res, next} objects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/test-middlewares.md&quot;&gt;&lt;strong&gt;Read More: Test middlewares in isolation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;5. Going To Production Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.1. Monitoring&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring is a game of finding out issues before customers do ‚Äì obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click ‚ÄòThe Gist‚Äô below for an overview of the solutions&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure === disappointed customers. Simple&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/monitoring.md&quot;&gt;&lt;strong&gt;Read More: Monitoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.2. Increase transparency using smart logging&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/smartlogging.md&quot;&gt;&lt;strong&gt;Read More: Increase transparency using smart logging&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use ‚Äòreal‚Äô middleware services like nginx, HAproxy or cloud vendor services instead&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/delegatetoproxy.md&quot;&gt;&lt;strong&gt;Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.4. Lock dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default ‚Äì when you install packages at various environments it tries to fetch packages‚Äô latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use &lt;code&gt;npm shrinkwrap&lt;/code&gt;. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/lockdependencies.md&quot;&gt;&lt;strong&gt;Read More: Lock dependencies&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.5. Guard process uptime using the right tool&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today&#39;s ‚Äòdockerized‚Äô world, cluster management tools should be considered as well&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/guardprocess.md&quot;&gt;&lt;strong&gt;Read More: Guard process uptime using the right tool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.6. Utilize all CPU cores&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; At its basic form, a Node app runs on a single CPU core while all others are left idling. It‚Äôs your duty to replicate the Node process and utilize all CPUs ‚Äì For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/utilizecpu.md&quot;&gt;&lt;strong&gt;Read More: Utilize all CPU cores&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.7. Create a ‚Äòmaintenance endpoint‚Äô&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it‚Äôs highly recommended to rely on standard and battle-tested tools, some valuable information and operations are easier done using code&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äôll find that you‚Äôre performing many ‚Äúdiagnostic deploys‚Äù ‚Äì shipping code to production only to extract some information for diagnostic purposes&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/createmaintenanceendpoint.md&quot;&gt;&lt;strong&gt;Read More: Create a ‚Äòmaintenance endpoint‚Äô&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.8. Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Application monitoring and performance products (a.k.a. APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-user&#39;s side while suggesting the root cause&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you‚Äôll never be aware which is your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: Discover errors and downtime using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.9. Make your code production-ready&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code with the end in mind, plan for production from day 1. This sounds a bit vague so I‚Äôve compiled a few development tips that are closely related to production maintenance (click Gist below)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A world champion IT/DevOps guy won‚Äôt save a system that is badly written&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/productioncode.md&quot;&gt;&lt;strong&gt;Read More: Make your code production-ready&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.10. Measure and guard the memory usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node‚Äôs code ‚Äì thus watching Node‚Äôs process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your process memory might leak a hundred megabytes a day like how it happened at &lt;a href=&quot;https://www.joyent.com/blog/walmart-node-js-memory-leak&quot;&gt;Walmart&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/measurememory.md&quot;&gt;&lt;strong&gt;Read More: Measure and guard the memory usage&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.11. Get your frontend assets out of Node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your single Node thread will be busy streaming hundreds of html/images/angular/react files instead of allocating all its resources for the task it was born for ‚Äì serving dynamic content&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/frontendout.md&quot;&gt;&lt;strong&gt;Read More: Get your frontend assets out of Node&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.12. Be stateless, kill your servers almost every day&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider ‚Äòkilling‚Äô your servers periodically or use ‚Äòserverless‚Äô platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/bestateless.md&quot;&gt;&lt;strong&gt;Read More: Be stateless, kill your Servers almost every day&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.13. Use tools that automatically detect vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/detectvulnerabilities.md&quot;&gt;&lt;strong&gt;Read More: Use tools that automatically detect vulnerabilities&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.14. Assign a transaction id to each log statement&lt;/h2&gt; 
&lt;p&gt;Also known as correlation id / transit id / tracing id / request id / request context / etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Until version 14 of Node, this was not easy to achieve due to Node&#39;s async nature, but since AsyncLocalStorage came to town, this became possible and easy than ever. see code examples inside&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Looking at a production error log without the context ‚Äì what happened before ‚Äì makes it much harder and slower to reason about the issue&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/assigntransactionid.md&quot;&gt;&lt;strong&gt;Read More: Assign ‚ÄòTransactionId‚Äô to each log statement&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.15. Set &lt;code&gt;NODE_ENV=production&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Set the environment variable &lt;code&gt;NODE_ENV&lt;/code&gt; to ‚Äòproduction‚Äô or ‚Äòdevelopment‚Äô to flag whether production optimizations should get activated ‚Äì many npm packages determine the current environment and optimize their code for production&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting &lt;code&gt;NODE_ENV&lt;/code&gt; makes it slower by a factor of three!&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/setnodeenv.md&quot;&gt;&lt;strong&gt;Read More: Set NODE_ENV=production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.16. Design automated, atomic and zero-downtime deployments&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don‚Äôt require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Long deployments -&amp;gt; production downtime &amp;amp; human-related error -&amp;gt; team unconfident in making deployment -&amp;gt; fewer deployments and features&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.17. Use an LTS release of Node.js&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/LTSrelease.md&quot;&gt;&lt;strong&gt;Read More: Use an LTS release of Node.js&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.18. Don&#39;t route logs within the app&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to &lt;code&gt;stdout&lt;/code&gt; using a logger utility and then let the execution environment (container, server, etc.) pipe the &lt;code&gt;stdout&lt;/code&gt; stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Application handling log routing === hard to scale, loss of logs, poor separation of concerns&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/logrouting.md&quot;&gt;&lt;strong&gt;Read More: Log Routing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.19. Install your packages with &lt;code&gt;npm ci&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; You have to be sure that production code uses the exact version of the packages you have tested it with. Run &lt;code&gt;npm ci&lt;/code&gt; to strictly do a clean install of your dependencies matching package.json and package-lock.json. Using this command is recommended in automated environments such as continuous integration pipelines.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/installpackageswithnpmci.md&quot;&gt;&lt;strong&gt;Read More: Use npm ci&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;6. Security Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/OWASP%20Threats-Top%2010-green.svg?sanitize=true&quot; alt=&quot;54 items&quot;&gt; 
&lt;/div&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.1. Embrace linter security rules&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make use of security-related linter plugins such as &lt;a href=&quot;https://github.com/nodesecurity/eslint-plugin-security&quot;&gt;eslint-plugin-security&lt;/a&gt; to catch security vulnerabilities and issues as early as possible, preferably while they&#39;re being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click &#39;Read more&#39; below to see code examples that will get caught by a security linter&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/lintrules.md&quot;&gt;&lt;strong&gt;Read More: Lint rules&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.2. Limit concurrent requests using a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, &lt;a href=&quot;https://www.npmjs.com/package/rate-limiter-flexible&quot;&gt;rate-limiter-flexible&lt;/a&gt; package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. &lt;a href=&quot;https://www.npmjs.com/package/express-rate-limit&quot;&gt;express-rate-limit&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/limitrequests.md&quot;&gt;&lt;strong&gt;Read More: Implement rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.3 Extract secrets from config files or use packages to encrypt them&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A3:Sensitive%20Data%20Exposure%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit/push hooks to prevent committing secrets accidentally&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secretmanagement.md&quot;&gt;&lt;strong&gt;Read More: Secret management&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.4. Prevent query injection vulnerabilities with ORM/ODM libraries&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent SQL/NoSQL injection and other malicious attacks, always make use of an ORM/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. &lt;a href=&quot;https://github.com/sequelize/sequelize&quot;&gt;Sequelize&lt;/a&gt;, &lt;a href=&quot;https://github.com/tgriesser/knex&quot;&gt;Knex&lt;/a&gt;, &lt;a href=&quot;https://github.com/Automattic/mongoose&quot;&gt;mongoose&lt;/a&gt;) have built-in protection against injection attacks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/ormodmusage.md&quot;&gt;&lt;strong&gt;Read More: Query injection prevention using ORM/ODM libraries&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.5. Collection of generic security best practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/commonsecuritybestpractices.md&quot;&gt;&lt;strong&gt;Read More: Common security best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.6. Adjust the HTTP response headers for enhanced security&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like &lt;a href=&quot;https://www.npmjs.com/package/helmet&quot;&gt;helmet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Attackers could perform direct attacks on your application&#39;s users, leading to huge security vulnerabilities&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secureheaders.md&quot;&gt;&lt;strong&gt;Read More: Using secure headers in your application&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.7. Constantly and automatically inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Known%20Vulnerabilities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; or &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker could detect your web framework and attack all its known vulnerabilities.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/dependencysecurity.md&quot;&gt;&lt;strong&gt;Read More: Dependency security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.8. Protect Users&#39; Passwords/Secrets using bcrypt or scrypt&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Passwords or secrets (e.g. API keys) should be stored using a secure hash + salt function like &lt;code&gt;bcrypt&lt;/code&gt;,&lt;code&gt;scrypt&lt;/code&gt;, or worst case &lt;code&gt;pbkdf2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Passwords and secrets that are stored without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/userpasswords.md&quot;&gt;&lt;strong&gt;Read More: User Passwords&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.9. Escape HTML, JS and CSS output&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/escape-output.md&quot;&gt;&lt;strong&gt;Read More: Escape output&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.10. Validate incoming JSON schemas&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7: XSS%20-green.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Validate the incoming requests&#39; body payload and ensure it meets expectations, fail fast if it doesn&#39;t. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as &lt;a href=&quot;https://www.npmjs.com/package/jsonschema&quot;&gt;jsonschema&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/validation.md&quot;&gt;&lt;strong&gt;Read More: Validate incoming JSON schemas&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.11. Support blocklisting JWTs&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using JSON Web Tokens (for example, with &lt;a href=&quot;https://github.com/jaredhanson/passport&quot;&gt;Passport.js&lt;/a&gt;), by default there&#39;s no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there&#39;s no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blocklist of untrusted tokens that are validated on each request.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/expirejwt.md&quot;&gt;&lt;strong&gt;Read More: Blocklist JSON Web Tokens&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.12. Prevent brute-force attacks against authorization&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A simple and powerful technique is to limit authorization attempts using two metrics:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first is number of consecutive failed attempts by the same user unique ID/name and IP address.&lt;/li&gt; 
 &lt;li&gt;The second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/login-rate-limit.md&quot;&gt;&lt;strong&gt;Read More: Login rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.13. Run Node.js as non-root user&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A5-Broken_Access_Control&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A5:Broken%20Access%20Access%20Control-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It&#39;s recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user&#39;s behalf by invoking the container with the flag &quot;-u username&quot;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to their server)&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/non-root-user.md&quot;&gt;&lt;strong&gt;Read More: Run Node.js as non-root user&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.14. Limit payload size using a reverse-proxy or a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring &lt;a href=&quot;https://github.com/expressjs/body-parser&quot;&gt;express body parser&lt;/a&gt; to accept only small-size payloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/requestpayloadsizelimit.md&quot;&gt;&lt;strong&gt;Read More: Limit payload size&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.15. Avoid JavaScript eval statements&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;code&gt;eval&lt;/code&gt; is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is &lt;code&gt;new Function&lt;/code&gt; constructor. &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; should never be passed dynamic JavaScript code either.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious JavaScript code finds a way into text passed into &lt;code&gt;eval&lt;/code&gt; or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoideval.md&quot;&gt;&lt;strong&gt;Read More: Avoid JavaScript eval statements&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.16. Prevent evil RegEx from overloading your single thread execution&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on üî•. For that reason, prefer third-party validation packages like &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt; instead of writing your own Regex patterns, or make use of &lt;a href=&quot;https://github.com/substack/safe-regex&quot;&gt;safe-regex&lt;/a&gt; to detect vulnerable regex patterns&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular &lt;code&gt;moment&lt;/code&gt; package was found vulnerable with malicious RegEx usage in November of 2017&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/regex.md&quot;&gt;&lt;strong&gt;Read More: Prevent malicious RegEx&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.17. Avoid module loading using a variable&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid requiring/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. &lt;code&gt;fs.readFile()&lt;/code&gt;) or other sensitive resource access with dynamic variables originating from user input. &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;Eslint-plugin-security&lt;/a&gt; linter can catch such patterns and warn early enough&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the file system, or access already existing system files.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/safemoduleloading.md&quot;&gt;&lt;strong&gt;Read More: Safe module loading&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.18. Run unsafe code in a sandbox&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When tasked to run external code that is given at run-time (e.g. plugin), use any sort of &#39;sandbox&#39; execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. &lt;code&gt;cluster.fork()&lt;/code&gt;), serverless environment or dedicated npm packages that act as a sandbox&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sandbox.md&quot;&gt;&lt;strong&gt;Read More: Run unsafe code in a sandbox&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.19. Take extra care when working with child processes&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using &lt;code&gt;child_process.execFile&lt;/code&gt; which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/childprocesses.md&quot;&gt;&lt;strong&gt;Read More: Be cautious when working with child processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.20. Hide error details from clients&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/hideerrors.md&quot;&gt;&lt;strong&gt;Read More: Hide error details from client&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.21. Configure 2FA for npm or Yarn&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any step in the development chain should be protected with MFA (multi-factor authentication), npm/Yarn are a sweet opportunity for attackers who can get their hands on some developer&#39;s password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; &lt;a href=&quot;https://medium.com/@oprearocks/eslint-backdoor-what-it-is-and-how-to-fix-the-issue-221f58f1a8c8&quot;&gt;Have you heard about the eslint developer whose password was hijacked?&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.22. Modify session middleware settings&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each web framework and technology has its known weaknesses‚Ää-‚Äätelling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the &lt;code&gt;X-Powered-By&lt;/code&gt; header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sessions.md&quot;&gt;&lt;strong&gt;Read More: Cookie and session security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.23. Avoid DOS attacks by explicitly setting when a process should crash&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error‚Ää-‚Ääunless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There&#39;s no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests‚Ää-‚Ääa handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.24. Prevent unsafe redirects&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/saferedirects.md&quot;&gt;&lt;strong&gt;Read More: Prevent unsafe redirects&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.25. Avoid publishing secrets to the npm registry&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An &lt;code&gt;.npmignore&lt;/code&gt; file can be used to ignore specific files or folders, or the &lt;code&gt;files&lt;/code&gt; array in &lt;code&gt;package.json&lt;/code&gt; can act as an allow list.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your project&#39;s API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoid_publishing_secrets.md&quot;&gt;&lt;strong&gt;Read More: Avoid publishing secrets&lt;/strong&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;7. Draft: Performance Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;Our contributors are working on this section. &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/256&quot;&gt;Would you like to join?&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 7.1. Don&#39;t block the event loop&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. &lt;strong&gt;3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/block-loop.md&quot;&gt;&lt;strong&gt;Read More: Do not block the event loop&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 7.2. Prefer native JS methods over user-land utils like Lodash&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; It&#39;s often more penalising to use utility libraries like &lt;code&gt;lodash&lt;/code&gt; and &lt;code&gt;underscore&lt;/code&gt; over native methods as it leads to unneeded dependencies and slower performance. Bear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it&#39;s now about 50% more performant than utility libraries.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You&#39;ll have to maintain less performant projects where you could have simply used what was &lt;strong&gt;already&lt;/strong&gt; available or dealt with a few more lines in exchange of a few more files.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/nativeoverutil.md&quot;&gt;&lt;strong&gt;Read More: Native over user land utils&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;8. Docker Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;üèÖ Many thanks to &lt;a href=&quot;https://github.com/BretFisher&quot;&gt;Bret Fisher&lt;/a&gt; from whom we learned many of the following practices&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.1 Use multi-stage builds for leaner and more secure Docker images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use multi-stage build to copy only necessary production artifacts. A lot of build-time dependencies and files are not needed for running your application. With multi-stage builds these resources can be used during build while the runtime environment contains only what&#39;s necessary. Multi-stage builds are an easy way to get rid of overweight and security threats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Larger images will take longer to build and ship, build-only tools might contain vulnerabilities and secrets only meant for the build phase might be leaked.&lt;/p&gt; 
&lt;h3&gt;Example Dockerfile for multi-stage builds&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;FROM node:14.4.0 AS build

COPY . .
RUN npm ci &amp;amp;&amp;amp; npm run build


FROM node:slim-14.4.0

USER node
EXPOSE 8080

COPY --from=build /home/node/app/dist /home/node/app/package.json /home/node/app/package-lock.json ./
RUN npm ci --production

CMD [ &quot;node&quot;, &quot;dist/app.js&quot; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/multi_stage_builds.md&quot;&gt;&lt;strong&gt;Read More: Use multi-stage builds&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.2. Bootstrap using &lt;code&gt;node&lt;/code&gt; command, avoid &lt;code&gt;npm start&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; use &lt;code&gt;CMD [&#39;node&#39;,&#39;server.js&#39;]&lt;/code&gt; to start your app, avoid using npm scripts which don&#39;t pass OS signals to the code. This prevents problems with child-processes, signal handling, graceful shutdown and having zombie processes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When no signals are passed, your code will never be notified about shutdowns. Without this, it will lose its chance to close properly possibly losing current requests and/or data.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/bootstrap-using-node.md&quot;&gt;&lt;strong&gt;Read More: Bootstrap container using node command, avoid npm start&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.3. Let the Docker runtime handle replication and uptime&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using a Docker run time orchestrator (e.g., Kubernetes), invoke the Node.js process directly without intermediate process managers or custom code that replicate the process (e.g. PM2, Cluster module). The runtime platform has the highest amount of data and visibility for making placement decision - It knows best how many processes are needed, how to spread them and what to do in case of crashes&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Container keeps crashing due to lack of resources will get restarted indefinitely by the process manager. Should Kubernetes be aware of that, it could relocate it to a different roomy instance&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/restart-and-replicate-processes.md&quot;&gt;&lt;strong&gt;Read More: Let the Docker orchestrator restart and replicate processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.4. Use .dockerignore to prevent leaking secrets&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Include a &lt;code&gt;.dockerignore&lt;/code&gt; file that filters out common secret files and development artifacts. By doing so, you might prevent secrets from leaking into the image. As a bonus the build time will significantly decrease. Also, ensure not to copy all files recursively rather explicitly choose what should be copied to Docker&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise&lt;/strong&gt;: Common personal secret files like &lt;code&gt;.env&lt;/code&gt;, &lt;code&gt;.aws&lt;/code&gt; and &lt;code&gt;.npmrc&lt;/code&gt; will be shared with anybody with access to the image (e.g. Docker repository)&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/docker-ignore.md&quot;&gt;&lt;strong&gt;Read More: Use .dockerignore&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.5. Clean-up dependencies before production&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Although Dev-Dependencies are sometimes needed during the build and test life-cycle, eventually the image that is shipped to production should be minimal and clean from development dependencies. Doing so guarantees that only necessary code is shipped and the amount of potential attacks (i.e. attack surface) is minimized. When using multi-stage build (see dedicated bullet) this can be achieved by installing all dependencies first and finally running &lt;code&gt;npm ci --production&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many of the infamous npm security breaches were found within development packages (e.g. &lt;a href=&quot;https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&quot;&gt;eslint-scope&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;üîó Read More: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/install-for-production.md&quot;&gt;Remove development dependencies&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.6. Shutdown smartly and gracefully&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handle the process SIGTERM event and clean-up all existing connection and resources. This should be done while responding to ongoing requests. In Dockerized runtimes shutting down containers is not a rare event, rather a frequent occurrence that happen as part of routine work. Achieving this demands some thoughtful code to orchestrate several moving parts: The load balancer, keep-alive connections, the HTTP server and other resources&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Dying immediately means not responding to thousands of disappointed users&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/graceful-shutdown.md&quot;&gt;&lt;strong&gt;Read More: Graceful shutdown&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.7. Set memory limits using both Docker and v8&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always configure a memory limit using both Docker and the JavaScript runtime flags. The Docker limit is needed to make thoughtful container placement decision, the --v8&#39;s flag max-old-space is needed to kick off the GC on time and prevent under utilization of memory. Practically, set the v8&#39;s old space memory to be a just bit less than the container limit&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The docker definition is needed to perform thoughtful scaling decision and prevent starving other citizens. Without also defining the v8&#39;s limits, it will under utilize the container resources - Without explicit instructions it crashes when utilizing ~50-60% of its host resources&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/memory-limit.md&quot;&gt;&lt;strong&gt;Read More: Set memory limits using Docker only&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.8. Plan for efficient caching&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Rebuilding a whole docker image from cache can be nearly instantaneous if done correctly. The less updated instructions should be at the top of your Dockerfile and the ones constantly changing (like app code) should be at the bottom.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Docker build will be very long and consume lot of resources even when making tiny changes&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/use-cache-for-shorter-build-time.md&quot;&gt;&lt;strong&gt;Read More: Leverage caching to reduce build times&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.9. Use explicit image reference, avoid &lt;code&gt;latest&lt;/code&gt; tag&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Specify an explicit image digest or versioned label, never refer to &lt;code&gt;latest&lt;/code&gt;. Developers are often led to believe that specifying the &lt;code&gt;latest&lt;/code&gt; tag will provide them with the most recent image in the repository however this is not the case. Using a digest guarantees that every instance of the service is running exactly the same code.&lt;/p&gt; 
&lt;p&gt;In addition, referring to an image tag means that the base image is subject to change, as image tags cannot be relied upon for a deterministic install. Instead, if a deterministic install is expected, a SHA256 digest can be used to reference an exact image.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A new version of a base image could be deployed into production with breaking changes, causing unintended application behaviour.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/image-tags.md&quot;&gt;&lt;strong&gt;Read More: Understand image tags and use the &quot;latest&quot; tag with caution&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.10. Prefer smaller Docker base images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Large images lead to higher exposure to vulnerabilities and increased resource consumption. Using leaner Docker images, such as Slim and Alpine Linux variants, mitigates this issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Building, pushing, and pulling images will take longer, unknown attack vectors can be used by malicious actors and more resources are consumed.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/smaller_base_images.md&quot;&gt;&lt;strong&gt;Read More: Prefer smaller images&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.11. Clean-out build-time secrets, avoid secrets in args&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid secrets leaking from the Docker build environment. A Docker image is typically shared in multiple environment like CI and a registry that are not as sanitized as production. A typical example is an npm token which is usually passed to a dockerfile as argument. This token stays within the image long after it is needed and allows the attacker indefinite access to a private npm registry. This can be avoided by coping a secret file like &lt;code&gt;.npmrc&lt;/code&gt; and then removing it using multi-stage build (beware, build history should be deleted as well) or by using Docker build-kit secret feature which leaves zero traces&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Everyone with access to the CI and docker registry will also get access to some precious organization secrets as a bonus&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/avoid-build-time-secrets.md&quot;&gt;&lt;strong&gt;Read More: Clean-out build-time secrets&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.12. Scan images for multi layers of vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Besides checking code dependencies vulnerabilities also scan the final image that is shipped to production. Docker image scanners check the code dependencies but also the OS binaries. This E2E security scan covers more ground and verifies that no bad guy injected bad things during the build. Consequently, it is recommended running this as the last step before deployment. There are a handful of free and commercial scanners that also provide CI/CD plugins&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your code might be entirely free from vulnerabilities. However it might still get hacked due to vulnerable version of OS-level binaries (e.g. OpenSSL, TarBall) that are commonly being used by applications&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/scan-images.md&quot;&gt;&lt;strong&gt;Read More: Scan the entire image before production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.13 Clean NODE_MODULE cache&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; After installing dependencies in a container remove the local cache. It doesn&#39;t make any sense to duplicate the dependencies for faster future installs since there won&#39;t be any further installs - A Docker image is immutable. Using a single line of code tens of MB (typically 10-50% of the image size) are shaved off&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The image that will get shipped to production will weigh 30% more due to files that will never get used&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/clean-cache.md&quot;&gt;&lt;strong&gt;Read More: Clean NODE_MODULE cache&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.14. Generic Docker practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of Docker advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/generic-tips.md&quot;&gt;&lt;strong&gt;Read More: Generic Docker practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.15. Lint your Dockerfile&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Linting your Dockerfile is an important step to identify issues in your Dockerfile which differ from best practices. By checking for potential flaws using a specialised Docker linter, performance and security improvements can be easily identified, saving countless hours of wasted time or security issues in production code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Mistakenly the Dockerfile creator left Root as the production user, and also used an image from unknown source repository. This could be avoided with with just a simple linter.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/lint-dockerfile.md&quot;&gt;&lt;strong&gt;Read More: Lint your Dockerfile&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Milestones&lt;/h1&gt; 
&lt;p&gt;To maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/milestones&quot;&gt;milestones&lt;/a&gt; and join the working groups if you want to contribute to this project&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;All translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!&lt;/p&gt; 
&lt;h3&gt;Completed translations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;Brazilian Portuguese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/marcelosdm&quot;&gt;Marcelo Melo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mattjin&quot;&gt;Matt Jin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;Russian&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/contributorpw&quot;&gt;Alex Ivanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/JA.png&quot; alt=&quot;JA&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.japanese.md&quot;&gt;Japanese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/YukiOta&quot;&gt;Yuki Ota&lt;/a&gt;, &lt;a href=&quot;https://github.com/YA21&quot;&gt;Yuta Azumi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.basque.md&quot;&gt;Basque&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/anediaz&quot;&gt;Ane Diaz de Tuesta&lt;/a&gt; &amp;amp; Joxefe Diaz de Tuesta&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Translations in progress&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.french.md&quot;&gt;French&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/129&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt; Hebrew (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/156&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.korean.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/uronly14me&quot;&gt;Sangbeom Han&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/94&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt; &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/raw/spanish-translation/README.spanish.md&quot;&gt;Spanish&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/95&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt; Turkish (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/139&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Steering Committee&lt;/h2&gt; 
&lt;p&gt;Meet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/projects&quot;&gt;GitHub projects&lt;/a&gt;.&lt;/p&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/yoni.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;Yoni Goldberg&lt;/a&gt; &lt;a href=&quot;https://twitter.com/goldbergyoni&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goldbergyoni.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Independent Node.js consultant who works with customers in the USA, Europe, and Israel on building large-scale Node.js applications. Many of the best practices above were first published at &lt;a href=&quot;https://goldbergyoni.com&quot;&gt;goldbergyoni.com&lt;/a&gt;. Reach Yoni at &lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;@goldbergyoni&lt;/a&gt; or &lt;a href=&quot;mailto:me@goldbergyoni.com&quot;&gt;me@goldbergyoni.com&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/bruno.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt; &lt;a href=&quot;https://brunoscheufler.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;üíª full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/kyle.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt; &lt;a href=&quot;https://twitter.com/kylemartin_93&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/in/kylemartinnz&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Full Stack Developer &amp;amp; Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/kevyn.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/kevynb&quot;&gt;Kevyn Bruyere&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/in/kevynbruyere/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Independent full-stack developer with a taste for Ops and automation.&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Steering Committee Emeriti&lt;/h3&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/sagir.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sagirk&quot;&gt;Sagir Khan&lt;/a&gt; &lt;a href=&quot;https://twitter.com/sagir_k&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://linkedin.com/in/sagirk&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sagirk.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Deep specialist in JavaScript and its ecosystem ‚Äî React, Node.js, TypeScript, GraphQL, MongoDB, pretty much anything that involves JS/JSON in any layer of the system ‚Äî building products using the web platform for the world‚Äôs most recognized brands. Individual Member of the Node.js Foundation.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Collaborators&lt;/h2&gt; 
&lt;p&gt;Thank you to all our collaborators! üôè&lt;/p&gt; 
&lt;p&gt;Our collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributor guidelines&lt;/a&gt; üéâ&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/idori&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/ido.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/keith.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rluvaton&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/raz-luvaton.jpg&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Raz Luvaton&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/josh-hemphill&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/jhemphill.jpg&quot; width=&quot;75&quot; height=&quot;75&quot; alt=&quot;Josh Hemphill&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter (Founder)&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rluvaton&quot;&gt;Raz Luvaton&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/josh-hemphill&quot;&gt;Josh Hemphill&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Collaborator Emeriti&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/refack&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/refael.png&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/refack&quot;&gt;Refael Ackermann&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you&#39;ve ever wanted to contribute to open source, now is your chance! See the &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributing docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kevinrambaud&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7501477?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Rambaud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kevinrambaud&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mfine15&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1286554?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Fine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mfine15&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://squgeim.github.io&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4996818?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shreya Dahal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-squgeim&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://matheusrocha89.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3718366?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matheus Cruz Rocha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-matheusrocha89&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bityog.github.io/Portfolio/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/28219178?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yog Mehta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-BitYog&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kudapara.co.zw&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13519184?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kudakwashe Paradzayi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kudapara&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.t1st3.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1469638?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;t1st3&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-t1st3&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mulijordan1976&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/33382022?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mulijordan1976&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mulijordan1976&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/matchai&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4658208?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matan Kushner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-matchai&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://fabiothiroki.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/670057?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabio Hiroki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-fabiothiroki&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://james.sumners.info/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/321201?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Sumners&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jsumners&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/_DanGamble&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7152041?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan Gamble&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dan-gamble&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/trainorpj&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13276704?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;PJ Trainor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-trainorpj&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/reod&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3164299?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Remek Ambroziak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-reod&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ca.non.co.il&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1829789?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yoni Jah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-yonjah&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hazolsky&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1270790?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Misha Khokhlov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hazolsky&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://plus.google.com/+–ï–≤–≥–µ–Ω–∏–π–û—Ä–µ—Ö–æ–≤/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8045060?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evgeny Orekhov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-EvgenyOrekhov&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gediminasml&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19854105?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;-&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-gediminasml&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://hisaac.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/923876?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Isaac Halvorson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hisaac&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.vedrankaracic.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2808092?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vedran Karaƒçiƒá&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vkaracic&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lallenlowe&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10761165?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lallenlowe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-lallenlowe&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nwwells&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1039473?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nathan Wells&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nwwells&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/paulovitin&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/125503?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paulo Reis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-paulovitin&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://snap.simpego.ch&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1989646?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;syzer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-syzer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://sancho.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3763599?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Sancho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-davesnx&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://apiforge.it&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4929965?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Robert Manolea&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-pupix&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jumptoglide.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/708395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Xavier Ho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-spaxe&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.ocular-rhythm.io&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2738518?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ocularrhythm&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://septa97.me&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/13742634?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan Charles Maghirang Adona&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-septa97&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.cakeresume.com/allenfang&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5351390?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Allen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AllenFang&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leonardovillela&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8650543?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leonardo Villela&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-leonardovillela&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://michalzalecki.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3136577?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Micha≈Ç Za≈Çƒôcki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MichalZalecki&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.wealthbar.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/156449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Nicola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-chrisnicola&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/aecorredor&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9114987?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Corredor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-aecorredor&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cwar&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/272843?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cwar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-cwar&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/keyfoxth&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10647132?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yuwei&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-keyfoxth&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bigcodenerd.org&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10895594?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Utkarsh Bhatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-utkarshbhatt12&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/duartemendes&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12852058?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Duarte Mendes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-duartemendes&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jasonkim.ca&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/103456?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-serv&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Max101&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2124249?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mitja O.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Max101&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://sandromiguel.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6423157?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sandro Miguel Marques&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SandroMiguel&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/GabeKuslansky&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9855482?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-GabeKuslansky&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ripper234.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/172282?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ron Gross&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ripper234&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.thecodebarbarian.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1620265?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Valeri Karpov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vkarpov15&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://sergiobernal.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20087388?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergio Bernal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-imsergiobernal&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ntelkedzhiev&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7332371?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikola Telkedzhiev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ntelkedzhiev&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vitordagamagodoy&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26370059?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vitor Godoy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vitordagamagodoy&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.manishsaraan.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/19797340?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manish Saraan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-manishsaraan&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/uronly14me&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5186814?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sangbeom Han&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-uronly14me&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blackmatch.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/12443954?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;blackmatch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-blackmatch&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://simmsreeve.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5173131?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Reeve&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ISNIT0&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BusbyActual&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/14985016?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Busby&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-BusbyActual&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jsdecorator.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4482199?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Iman Mohamadi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ImanMh&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/HeeL&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/287769?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergii Paryzhskyi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-HeeL&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kapilepatel&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/25738473?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kapil Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kapilepatel&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/justjavac&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/359395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ëø∑Ê∏°&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-justjavac&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hozefaj&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2084833?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hozefa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hozefaj&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/el-ethan&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10249884?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ethan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-el-ethan&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/milkdeliver&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3108407?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-milkdeliver&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ArlindXh&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19508764?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arlind&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ArlindXh&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ttous&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19815440?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Teddy Toussaint&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ttous&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ardern.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2419690?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lewis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-LewisArdern&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://gabriellidenor.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/765963?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabriel Lidenor &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-GabrielLidenor&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/animir&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4623196?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-animir&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Francozeira&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/47419763?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Francozeira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Francozeira&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/invvard&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7305493?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Invvard&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Invvard&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://romulogarofalo.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/18492592?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;R√¥mulo Garofalo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-romulogarofalo&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://thoqbk.github.io/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1491103?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tho Q Luong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-thoqbk&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Qeneke&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/20271568?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Burak Shen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Qeneke&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.happy-css.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2950505?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin Muzatko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MartinMuzatko&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/autoboxer&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2757601?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jared Collier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-autoboxer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://hiltonmeyer.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4545860?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hilton Meyer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bikingbadger&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kr.vuejs.org&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1451365?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ChangJoo Park(Î∞ïÏ∞ΩÏ£º)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ChangJoo-Park&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MasahiroSakaguchi&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/16427431?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Masahiro Sakaguchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MasahiroSakaguchi&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1253400?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Keith Holliday&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-TheHollidayInn&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.coreycleary.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1485356?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;coreyc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-coreyc&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://maxcubing.wordpress.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8260834?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maximilian Berkmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Berkmann18&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DouglasMV&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/32845487?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Douglas Mariano Valero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-DouglasMV&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marcelosdm&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18266600?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcelo Melo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-marcelosdm&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mperk_&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3465794?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mehmet Perk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mperk&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ryanouyang&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/360426?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ryan ouyang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ryanouyang&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shabeer-mdy&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26842535?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shabeer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-shabeer-mdy&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/halfzebra&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3983879?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eduard Kyvenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-halfzebra&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://deyvisonrocha.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/686067?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Deyvison Rocha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-deyvisonrocha&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://twitter.com/georgemamer&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/20108934?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;George Mamer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-georgem3&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leimonio&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1969742?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Konstantinos Leimonis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-leimonio&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Zybax&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22094453?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oliver Lluberes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-Zybax&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/story/tiendq&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/815910?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tien Do&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-tiendq&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://singh1114.github.io/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/11356398?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ranvir Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-singh1114&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/collierrgbsitisfise&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13496126?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vadim Nicolaev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-collierrgbsitisfise&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-collierrgbsitisfise&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/germangamboa95&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/28633849?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;German Gamboa Gonzalez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-germangamboa95&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AbdelrahmanHafez&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19984935?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AbdelrahmanHafez&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/chandiran-dmc&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/42678579?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chandiran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-chandiran-dmc&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/VinayaSathyanarayana&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/16976677?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;VinayaSathyanarayana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-VinayaSathyanarayana&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.kimkern.de&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2671139?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kim Kern&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kiwikern&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://kennethfreitas.github.io/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/55669043?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kenneth Freitas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kennethfreitas&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/songe&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1531561?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;songe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-songe&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ksed.dev&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30693707?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kirill Shekhovtsov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Ksedline&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SerzN1&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2534649?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Serge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SerzN1&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/keyrwinz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/21241761?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;keyrwinz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-keyrwinz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nDmitry&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2134568?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitry Nikitenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nDmitry&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bushuai.cc&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1875256?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bushuai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/pulls?q=is%3Apr+reviewed-by%3Abushuai&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bushuai&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/users/1348195/benjamin-gruenbaum&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1315533?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin Gruenbaum&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-benjamingr&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/byeze&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7424138?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ezequiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-byeze&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/juaoose&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/994594?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Juan Jos√© Rodr√≠guez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-juaoose&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/OrBin&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6897234?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Or Bin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-OrBin&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/andreoav07&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/508827?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andreo Vieira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-andreoav&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mikicho&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11459632?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Solomon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mikicho&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jimmycallin&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2225828?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jimmy Callin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jimmycallin&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/siddharthofficial/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/26025955?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Siddharth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-w01fS&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ryansmith.tech/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1578766?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ryan3E0&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://de.linkedin.com/in/tom-boettger&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/49961674?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Boettger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bttger&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jormaechea&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5612500?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joaqu√≠n Ormaechea&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-jormaechea&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dfrzuz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/71859096?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dfrzuz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-dfrzuz&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/victor-homyakov&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/121449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Victor Homyakov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-victor-homyakov&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://joshuahemphill.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/46608115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-josh-hemphill&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#security-josh-hemphill&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alec-francis&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32949882?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alec Francis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-alec-francis&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/arjun6610&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/61268891?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;arjun6610&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-arjun6610&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jan-osch&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/11651780?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan Osch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jan-osch&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/thiagotrs&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32005779?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thiago Rotondo Sampaio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-thiagotrs&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Alexsey&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6392013?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexsey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Alexsey&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/13luismb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/32210483?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luis A. Acurero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-13luismb&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lromano97.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/22394847?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Romano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-lromano97&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/denisecase&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/13016516?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Denise Case&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-denisecase&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/story/elektronik&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1078554?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Ribal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-elektronik2k5&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/pulls?q=is%3Apr+reviewed-by%3Aelektronik2k5&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/0xflotus&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/26602940?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;0xflotus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-0xflotus&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.dijonkitchen.org/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11434205?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Chen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dijonkitchen&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dilansri&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5089728?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dilan Srilal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dilansri&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vectree.ru&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4215285?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vladthelittleone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-vladthelittleone&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nikolaso.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/60047271?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nik Osvalds&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nosvalds&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kdaniel21&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/39854385?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Kiss&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/commits?author=kdaniel21&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/forresst17&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/163352?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Forresst&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-forresst&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/svenheden&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/76098?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Svenheden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-svenheden&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AustrisC&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12381652?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AustrisC&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AustrisC&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cisco0808&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/60251188?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kyeongtae kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-cisco0808&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://keybase.io/651z9pz968v2accj&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/65741741?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;007&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-6gx7iycn53ioq2e8apk1j1ypwov4giui&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.anediaz.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17216937?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ane Diaz de Tuesta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-anediaz&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-anediaz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://yukioh.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23182489?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;YukiOta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-YukiOta&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.yeovilhospital.co.uk/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43814140?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frazer Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Fdawgs&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rluvaton&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16746759?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Raz Luvaton&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-rluvaton&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/YA21&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37298463?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yuta Azumi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-YA21&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andrewjbarbour&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/77080074?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;andrewjbarbour&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-andrewjbarbour&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://MasujimaRyohei.jp&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17163541?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MasujimaRyohei&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kubanac95&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16191931?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aleksandar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kubanac95&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://vincentjonathan.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32597776?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Owl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SuspiciousLookingOwl&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yedidyas&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36074789?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yedidya Schwartz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-yedidyas&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#example-yedidyas&quot; title=&quot;Examples&quot;&gt;üí°&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ariel-diaz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20423540?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ariel-diaz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.koenigthomas.de/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7080389?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas K√∂nig&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Vispercept&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/coocos&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1397804?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kalle L√§ms√§&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-coocos&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://math.cat&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10328430?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wyatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ZhyMC&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://libkhadir.fr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45130488?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;KHADIR Tayeb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-tkhadir&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shankarregmi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7703345?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shankar Regmi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-shankarregmi&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/codebyshubham&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10389723?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shubham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-codebyshubham&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://lucalves.me/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17712401?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Alves&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-lucalves&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/benjaminudoh10&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9018331?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-benjaminudoh10&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.yjoer.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/47742486?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yeoh Joer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-yjoer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blog.miigon.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16161991?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miigon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Miigon&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://brainstorage.me/Egregor2011&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3630318?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rostislav Bogorad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Egregor2011&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Flouse&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1297478?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Flouse&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Flouse&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://taranttini.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6922125?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tarantini Pereira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-taranttini&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kzmat&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34614358?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kazuki Matsuo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kzmat&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/burkybang&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/927886?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adam Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-burkybang&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://codekodo.tistory.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33795856?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dohyeon Ko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-k906506&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vlad99902&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/67615003?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vladislav Legkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vlad99902&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kerolloz.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36763164?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kerollos Magdy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kerolloz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/erez-lieberman-b90b7219/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3277260?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erez Lieberman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-erezLieberman&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/breno-macedo-ernani-de-s%C3%A1-110223158/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/48841329?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Breno Macedo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-breno404&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JFernando122&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/40414805?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fernando Flores&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-JFernando122&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/rafaelconcept/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43880669?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rafael Brito&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-rafaelconcept&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://emiliano-peralta-portfolio.vercel.app/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/63617637?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Emiliano Peralta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-emiperalta&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lannex.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7369541?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shin, SJ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-lannex&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.benjaminforster.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12589522?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin Forster&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-e-e-e&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DanieleFedeli&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37077048?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniele Fedeli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-DanieleFedeli&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/djob195&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17146669?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;djob195&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-djob195&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/antspk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78955792?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;antspk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-antspk&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jjy0821.tistory.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/88075341?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ï†ïÏßÑÏòÅ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jjy821&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kkk-cashwalk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/91455122?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kkk-cashwalk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kkk-cashwalk&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/apainintheneck&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42982186?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;apainintheneck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-apainintheneck&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>YMFE/yapi</title>
      <link>https://github.com/YMFE/yapi</link>
      <description>&lt;p&gt;YApi ÊòØ‰∏Ä‰∏™ÂèØÊú¨Âú∞ÈÉ®ÁΩ≤ÁöÑ„ÄÅÊâìÈÄöÂâçÂêéÁ´ØÂèäQAÁöÑ„ÄÅÂèØËßÜÂåñÁöÑÊé•Âè£ÁÆ°ÁêÜÂπ≥Âè∞&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;YApi ÂèØËßÜÂåñÊé•Âè£ÁÆ°ÁêÜÂπ≥Âè∞&lt;/h2&gt; 
&lt;p&gt;‰ΩìÈ™åÂú∞ÂùÄÔºö&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://yapi.smart-xwork.cn/&quot;&gt;http://yapi.smart-xwork.cn/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ÊñáÊ°£Ôºö&lt;/p&gt; 
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://hellosean1025.github.io/yapi&quot;&gt;hellosean1025.github.io/yapi&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Âπ≥Âè∞‰ªãÁªç&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YMFE/yapi/master/yapi-base-flow.jpg&quot; alt=&quot;avatar&quot;&gt;&lt;/p&gt; 
&lt;p&gt;YApi ÊòØ&lt;strong&gt;È´òÊïà&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÊòìÁî®&lt;/strong&gt;„ÄÅ&lt;strong&gt;ÂäüËÉΩÂº∫Â§ß&lt;/strong&gt;ÁöÑ api ÁÆ°ÁêÜÂπ≥Âè∞ÔºåÊó®Âú®‰∏∫ÂºÄÂèë„ÄÅ‰∫ßÂìÅ„ÄÅÊµãËØï‰∫∫ÂëòÊèê‰æõÊõ¥‰ºòÈõÖÁöÑÊé•Âè£ÁÆ°ÁêÜÊúçÂä°„ÄÇÂèØ‰ª•Â∏ÆÂä©ÂºÄÂèëËÄÖËΩªÊùæÂàõÂª∫„ÄÅÂèëÂ∏É„ÄÅÁª¥Êä§ APIÔºåYApi Ëøò‰∏∫Áî®Êà∑Êèê‰æõ‰∫Ü‰ºòÁßÄÁöÑ‰∫§‰∫í‰ΩìÈ™åÔºåÂºÄÂèë‰∫∫ÂëòÂè™ÈúÄÂà©Áî®Âπ≥Âè∞Êèê‰æõÁöÑÊé•Âè£Êï∞ÊçÆÂÜôÂÖ•Â∑•ÂÖ∑‰ª•ÂèäÁÆÄÂçïÁöÑÁÇπÂáªÊìç‰ΩúÂ∞±ÂèØ‰ª•ÂÆûÁé∞Êé•Âè£ÁöÑÁÆ°ÁêÜ„ÄÇ&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;QQ‰∫§ÊµÅÁæ§&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;644642474 &lt;strong&gt;‰∏ªÁæ§ÂèØËÉΩÂ∑≤Êª°&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;941802405 &lt;strong&gt;Áæ§2Ê¨¢ËøéÂä†ÂÖ•&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;ÁâπÊÄß&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Âü∫‰∫é Json5 Âíå Mockjs ÂÆö‰πâÊé•Âè£ËøîÂõûÊï∞ÊçÆÁöÑÁªìÊûÑÂíåÊñáÊ°£ÔºåÊïàÁéáÊèêÂçáÂ§öÂÄç&lt;/li&gt; 
 &lt;li&gt;ÊâÅÂπ≥ÂåñÊùÉÈôêËÆæËÆ°ÔºåÂç≥‰øùËØÅ‰∫ÜÂ§ßÂûã‰ºÅ‰∏öÁ∫ßÈ°πÁõÆÁöÑÁÆ°ÁêÜÔºåÂèà‰øùËØÅ‰∫ÜÊòìÁî®ÊÄß&lt;/li&gt; 
 &lt;li&gt;Á±ª‰ºº postman ÁöÑÊé•Âè£Ë∞ÉËØï&lt;/li&gt; 
 &lt;li&gt;Ëá™Âä®ÂåñÊµãËØï, ÊîØÊåÅÂØπ Response Êñ≠Ë®Ä&lt;/li&gt; 
 &lt;li&gt;MockServer Èô§ÊîØÊåÅÊôÆÈÄöÁöÑÈöèÊú∫ mock Â§ñÔºåËøòÂ¢ûÂä†‰∫Ü Mock ÊúüÊúõÂäüËÉΩÔºåÊ†πÊçÆËÆæÁΩÆÁöÑËØ∑Ê±ÇËøáÊª§ËßÑÂàôÔºåËøîÂõûÊúüÊúõÊï∞ÊçÆ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ postman, har, swagger Êï∞ÊçÆÂØºÂÖ•&lt;/li&gt; 
 &lt;li&gt;ÂÖçË¥πÂºÄÊ∫êÔºåÂÜÖÁΩëÈÉ®ÁΩ≤Ôºå‰ø°ÊÅØÂÜç‰πü‰∏çÊÄïÊ≥ÑÈú≤‰∫Ü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂÜÖÁΩëÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;h4&gt;ÁéØÂ¢ÉË¶ÅÊ±Ç&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;nodejsÔºà7.6+)&lt;/li&gt; 
 &lt;li&gt;mongodbÔºà2.6+Ôºâ&lt;/li&gt; 
 &lt;li&gt;git&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;ÂÆâË£Ö&lt;/h4&gt; 
&lt;p&gt;‰ΩøÁî®Êàë‰ª¨Êèê‰æõÁöÑ yapi-cli Â∑•ÂÖ∑ÔºåÈÉ®ÁΩ≤ YApi Âπ≥Âè∞ÊòØÈùûÂ∏∏ÂÆπÊòìÁöÑ„ÄÇÊâßË°å yapi server ÂêØÂä®ÂèØËßÜÂåñÈÉ®ÁΩ≤Á®ãÂ∫èÔºåËæìÂÖ•Áõ∏Â∫îÁöÑÈÖçÁΩÆÂíåÁÇπÂáªÂºÄÂßãÈÉ®ÁΩ≤ÔºåÂ∞±ËÉΩÂÆåÊàêÊï¥‰∏™ÁΩëÁ´ôÁöÑÈÉ®ÁΩ≤„ÄÇÈÉ®ÁΩ≤ÂÆåÊàê‰πãÂêéÔºåÂèØÊåâÁÖßÊèêÁ§∫‰ø°ÊÅØÔºåÊâßË°å node/{ÁΩëÁ´ôË∑ØÂæÑ/server/app.js} ÂêØÂä®ÊúçÂä°Âô®„ÄÇÂú®ÊµèËßàÂô®ÊâìÂºÄÊåáÂÆöurl, ÁÇπÂáªÁôªÂΩïËæìÂÖ•ÊÇ®ÂàöÊâçËÆæÁΩÆÁöÑÁÆ°ÁêÜÂëòÈÇÆÁÆ±ÔºåÈªòËÆ§ÂØÜÁ†Å‰∏∫ ymfe.org ÁôªÂΩïÁ≥ªÁªüÔºàÈªòËÆ§ÂØÜÁ†ÅÂèØÂú®‰∏™‰∫∫‰∏≠ÂøÉ‰øÆÊîπÔºâ„ÄÇ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install -g yapi-cli --registry https://registry.npm.taobao.org
yapi server 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ÊúçÂä°ÁÆ°ÁêÜ&lt;/h4&gt; 
&lt;p&gt;Âà©Áî®pm2Êñπ‰æøÊúçÂä°ÁÆ°ÁêÜÁª¥Êä§„ÄÇ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install pm2 -g  //ÂÆâË£Öpm2
cd  {È°πÁõÆÁõÆÂΩï}
pm2 start &quot;vendors/server/app.js&quot; --name yapi //pm2ÁÆ°ÁêÜyapiÊúçÂä°
pm2 info yapi //Êü•ÁúãÊúçÂä°‰ø°ÊÅØ
pm2 stop yapi //ÂÅúÊ≠¢ÊúçÂä°
pm2 restart yapi //ÈáçÂêØÊúçÂä°
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ÂçáÁ∫ß&lt;/h4&gt; 
&lt;p&gt;ÂçáÁ∫ßÈ°πÁõÆÁâàÊú¨ÊòØÈùûÂ∏∏ÂÆπÊòìÁöÑÔºåÂπ∂‰∏î‰∏ç‰ºöÂΩ±ÂìçÂ∑≤ÊúâÁöÑÈ°πÁõÆÊï∞ÊçÆÔºåÂè™‰ºöÂêåÊ≠• vendors ÁõÆÂΩï‰∏ãÁöÑÊ∫êÁ†ÅÊñá‰ª∂„ÄÇ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd  {È°πÁõÆÁõÆÂΩï}
yapi ls //Êü•ÁúãÁâàÊú¨Âè∑ÂàóË°®
yapi update //Êõ¥Êñ∞Âà∞ÊúÄÊñ∞ÁâàÊú¨
yapi update -v {Version} //Êõ¥Êñ∞Âà∞ÊåáÂÆöÁâàÊú¨
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ÊïôÁ®ã&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5acc879f6fb9a028c42e8822&quot;&gt;‰ΩøÁî® YApi ÁÆ°ÁêÜ API ÊñáÊ°£ÔºåÊµãËØïÔºå mock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5af500e251882567096140dd&quot;&gt;Ëá™Âä®Êõ¥Êñ∞ Swagger Êé•Âè£Êï∞ÊçÆÂà∞ YApi Âπ≥Âè∞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5a388892f265da430e4f4681&quot;&gt;Ëá™Âä®ÂåñÊµãËØï&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/z66f7bRX8aAOppAtBIB7Uw&quot;&gt;GTest(Âü∫‰∫éYApi)Êé•Âè£Á†îÂèëÊïàËÉΩÊèêÂçá10ÂÄç ÂÆûÊàò&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;YApi Êèí‰ª∂&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YMFE/yapi-plugin-qsso&quot;&gt;yapi sso ÁôªÂΩïÊèí‰ª∂&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wsfe/yapi-plugin-cas&quot;&gt;yapi cas ÁôªÂΩïÊèí‰ª∂&lt;/a&gt; By wsfe&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cyj0122/yapi-plugin-gitlab&quot;&gt;yapi gitlabÈõÜÊàêÊèí‰ª∂&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xwxsee2014/yapi-plugin-oauth2&quot;&gt;oauth2.0ÁôªÂΩï&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wxxcarl/yapi-plugin-import-rap&quot;&gt;rapÂπ≥Âè∞Êï∞ÊçÆÂØºÂÖ•&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zgs225/yapi-plugin-dding&quot;&gt;dingding&lt;/a&gt; ÈíâÈíâÊú∫Âô®‰∫∫Êé®ÈÄÅÊèí‰ª∂&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inceptiongt/Yapi-plugin-export-docx-data&quot;&gt;export-docx-data&lt;/a&gt; Êï∞ÊçÆÂØºÂá∫docxÊñáÊ°£&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shouldnotappearcalm/yapi-plugin-interface-oauth2-token&quot;&gt;interface-oauth-token&lt;/a&gt; ÂÆöÊó∂Ëá™Âä®Ëé∑ÂèñÈâ¥ÊùÉtokenÁöÑÊèí‰ª∂&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/follow-my-heart/yapi-plugin-import-swagger-customize&quot;&gt;import-swagger-customize&lt;/a&gt; ÂØºÂÖ•ÊåáÂÆöswaggerÊé•Âè£&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‰ª£Á†ÅÁîüÊàê&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fjc0k/yapi-to-typescript&quot;&gt;yapi-to-typescriptÔºöÊ†πÊçÆ YApi ÁöÑÊé•Âè£ÂÆö‰πâÁîüÊàê TypeScript ÁöÑËØ∑Ê±ÇÂáΩÊï∞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellosean1025/yapi-gen-js-code&quot;&gt;yapi-gen-js-code: Ê†πÊçÆ YApi ÁöÑÊé•Âè£ÂÆö‰πâÁîüÊàê javascript ÁöÑËØ∑Ê±ÇÂáΩÊï∞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CodeOcenS/SwiftJSONModeler&quot;&gt;SwiftJSONModeler:Ê†πÊçÆ YApi ÁöÑÊé•Âè£ÁîüÊàê Swift Ê®°Âûã‰ª£Á†Å&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;YApi dockerÈÉ®ÁΩ≤ÔºàÈùûÂÆòÊñπÔºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/a97d2efb23c5&quot;&gt;‰ΩøÁî® alpine Áâà docker ÈïúÂÉèÂø´ÈÄüÈÉ®ÁΩ≤ yapi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ryan-Miao/docker-yapi&quot;&gt;docker-yapi: Âü∫‰∫éÂÆòÊñπyapi-cliÁöÑdocker-composeÊñπÊ°à&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jinfeijie/yapi&quot;&gt;docker-compose‰∏ÄÈîÆÈÉ®ÁΩ≤yapi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fjc0k/docker-YApi&quot;&gt;docker-YApi: Êõ¥ÊòìÁî®ÁöÑ YApi ÈïúÂÉè&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MyHerux/daily-code/raw/master/Program/%E5%B7%A5%E5%85%B7%E7%AF%87/Yapi/%E4%BD%BF%E7%94%A8DockerCompose%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2Yapi.md&quot;&gt;‰ΩøÁî®DockerComposeÊûÑÂª∫ÈÉ®ÁΩ≤Yapi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/williamlsh/yapi-docker&quot;&gt;yapi-docker: dockerized yapi deployment all in one&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;YApi ‰∏Ä‰∫õÂ∑•ÂÖ∑&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Forgus/api-generator&quot;&gt;Api Generator&lt;/a&gt; Êé•Âè£ÊñáÊ°£Ëá™Âä®ÁîüÊàêÊèí‰ª∂ÔºàÈõ∂ÂÖ•‰æµÔºâ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellosean1025/http-mysql-server&quot;&gt;mysqlÊúçÂä°httpÂ∑•ÂÖ∑,ÂèØÈÖçÂêàÂÅöËá™Âä®ÂåñÊµãËØï&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/diwand/YapiIdeaUploadPlugin&quot;&gt;idea ‰∏ÄÈîÆ‰∏ä‰º†Êé•Âè£Âà∞yapiÊèí‰ª∂&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://easyyapi.com/&quot;&gt;idea Êé•Âè£‰∏ä‰º†Ë∞ÉËØïÊèí‰ª∂ easy-yapi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shouldnotappearcalm/http-postgres-server&quot;&gt;ÊâßË°å postgres sql ÁöÑÊúçÂä°&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NoBugBoy/YDoc&quot;&gt;SpringBoot‰æùËµñËá™Âä®ÁîüÊàêYApi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jetplugins/yapix&quot;&gt;Yapi X ‰∏ÄÈîÆÁîüÊàêÊé•Âè£ÊñáÊ°£, ‰∏ä‰º†Âà∞yapi, rap2, eolinkerÁ≠âÔºàIDEAÊèí‰ª∂Ôºâ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;YApi ÁöÑ‰∏Ä‰∫õÂÆ¢Êà∑&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÂéªÂì™ÂÑø&lt;/li&gt; 
 &lt;li&gt;Êê∫Á®ã&lt;/li&gt; 
 &lt;li&gt;Ëâ∫Èæô&lt;/li&gt; 
 &lt;li&gt;ÁæéÂõ¢&lt;/li&gt; 
 &lt;li&gt;ÁôæÂ∫¶&lt;/li&gt; 
 &lt;li&gt;ËÖæËÆØ&lt;/li&gt; 
 &lt;li&gt;ÈòøÈáåÂ∑¥Â∑¥&lt;/li&gt; 
 &lt;li&gt;‰∫¨‰∏ú&lt;/li&gt; 
 &lt;li&gt;‰ªäÊó•Â§¥Êù°&lt;/li&gt; 
 &lt;li&gt;ÂîØÂìÅÊîØ‰ªò&lt;/li&gt; 
 &lt;li&gt;ÈìæÂÆ∂ÁΩë&lt;/li&gt; 
 &lt;li&gt;Âø´Êâã&lt;/li&gt; 
 &lt;li&gt;‰æøÂà©ËúÇ&lt;/li&gt; 
 &lt;li&gt;‰∏≠ÂïÜÊÉ†Ê∞ë&lt;/li&gt; 
 &lt;li&gt;Êñ∞Êµ™&lt;/li&gt; 
 &lt;li&gt;VIPKID&lt;/li&gt; 
 &lt;li&gt;È©¨ËúÇÁ™ù&lt;/li&gt; 
 &lt;li&gt;‰º¥È±º&lt;/li&gt; 
 &lt;li&gt;Êó∑ËßÜÁßëÊäÄ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authors&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellosean1025&quot;&gt;hellosean1025&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gaoxiaomumu&quot;&gt;gaoxiaomumu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amnsss&quot;&gt;zwjamnsss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dwb1994&quot;&gt;dwb1994&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fungezi&quot;&gt;fungezi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ariesly15&quot;&gt;ariesly15&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Apache License 2.0&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
