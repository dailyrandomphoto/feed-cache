<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Wed, 03 Feb 2021 01:42:22 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>handshake-org/hs-airdrop</title>
      <link>https://github.com/handshake-org/hs-airdrop</link>
      <description>&lt;p&gt;Decentralized airdrop to open source developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Handshake Airdrop&lt;/h1&gt; 
&lt;p&gt;Redemption tool for the Handshake network&#39;s decentralized airdrop to open source developers.&lt;/p&gt; 
&lt;h2&gt;A word of warning&lt;/h2&gt; 
&lt;p&gt;In past weeks, it&#39;s become apparent that there are now various scams and phishing attempts targeting GitHub users. Handshake contributors will &lt;em&gt;never&lt;/em&gt; ask you for your private keys, and revealing your private key to &lt;em&gt;anyone&lt;/em&gt; is not necessary to redeem the airdrop.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;hs-airdrop&lt;/code&gt; is the only tool recommended for airdrop redemption. Use anything else at your own risk.&lt;/p&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;The Handshake airdrop is a &lt;a href=&quot;https://github.com/handshake-org/hs-tree-data&quot;&gt;merkle tree&lt;/a&gt; whose root is added to the consensus rules of the Handshake protocol. This allows the owner of an eligible private key to publish a signed merkle proof on chain in order to redeem their airdrop. If your private key is not found by this tool in the merkle tree, you are not eligible to claim HNS coins. A blinding factor (or &lt;a href=&quot;https://github.com/handshake-org/hs-tree-data/tree/master/nonces&quot;&gt;nonce&lt;/a&gt;) was generated for each recipient to allow recipients to clam their coins anonymously. For a detailed description of the airdrop tree construction process, read &lt;a href=&quot;https://github.com/handshake-org/hs-airdrop/issues/35#issuecomment-586699876&quot;&gt;this comment&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Public keys from open source developers were collected in the following ways. If you are an open source developer that meets the requirements listed below you may be able to claim &lt;strong&gt;4,246.994314 HNS&lt;/strong&gt; from this airdrop:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;~250,000 GitHub users with 15 or more followers during the week of &lt;strong&gt;2019-02-04&lt;/strong&gt; were identified and their PGP and SSH keys were downloaded. Out of those ~250,000 users, ~175,000 of them had valid SSH and/or PGP keys at the time of the merkle tree creation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Roughly 30,000 keys from the PGP web-of-trust strong set have also been included in the tree.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Hacker News accounts which are linked with Keybase accounts are included in the tree provided they were ~1.5 years old during the crawl.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are a few gotchas:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you signed up for the HNS faucet at handshake.org, your GitHub key was removed from the airdrop. The faucet payouts are recorded in &lt;a href=&quot;https://github.com/handshake-org/hs-tree-data/blob/master/proof.json&quot;&gt;proof.json&lt;/a&gt; and were included in early mainnet blocks already. Restore your seed phrase for the address you registered on the website and you should have your HNS coins waiting for you. You can use wallets like &lt;a href=&quot;https://github.com/handshake-org/hsd&quot;&gt;hsd&lt;/a&gt; or &lt;a href=&quot;https://bobwallet.io&quot;&gt;Bob&lt;/a&gt; for this.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you met the criteria for a Github airdrop but did not have either a SSH or PGP key on your Github account at the time of snapshot/tree creation, you do not have coins allocated to you in the merkle tree.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We do not allow standard PGP signatures on the consensus layer. This is done for simplicity and safety. This means that a regular call to &lt;code&gt;$ gpg --sign&lt;/code&gt; will not work for handshake airdrop proofs. As far as SSH keys go, people typically do not sign arbitrary messages with them. Because of this, we require a special tool to do both the signing and merkle proof creation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The Handshake airdrop tree was constructed ONE time and can not be changed without a hard fork. If you are not in the airdrop tree, you can not be added to it retroactively.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;An airdrop to GitHub and PGP users presents an obvious privacy concern: GitHub and PGP keys are generally tied to a person&#39;s real identity. While impractical, a determined analyst could link an on-chain airdrop redemption to a person&#39;s identity.&lt;/p&gt; 
&lt;p&gt;To solve the privacy issue in a non-interactive way, a 32 byte nonce has been &lt;a href=&quot;https://github.com/handshake-org/hs-tree-data/tree/master/nonces&quot;&gt;encrypted to&lt;/a&gt; your public key (you will have to grind a file full of many ciphertexts to find it). For EC keys, this nonce is treated as a scalar and is used to derive a new key from your old one. For RSA keys, a much more &lt;a href=&quot;https://github.com/handshake-org/goosig&quot;&gt;complicated setup&lt;/a&gt; is necessary. In either case, once your &lt;em&gt;new&lt;/em&gt; key is derived using this nonce, you will be able to find its corresponding leaf in the merkle tree published above.&lt;/p&gt; 
&lt;p&gt;Publishing a signed airdrop proof using this method &lt;em&gt;does not&lt;/em&gt; leak any information about your actual identity.&lt;/p&gt; 
&lt;p&gt;The full list of keys will be destroyed upon mainnet launch. Plaintext nonces are not saved at all during the generation phase. The ephemeral keys used for the ECIES key exchanges are also not saved.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you&#39;re uncomfortable having third party software access your PGP and SSH keys, you are always able to generate this proof on an air-gapped machine. QR code generation will be added to this tool for convenience (eventually).&lt;/p&gt; 
&lt;p&gt;A community member created instructions for &lt;a href=&quot;https://github.com/handshake-org/hs-airdrop/issues/106&quot;&gt;how to use Docker as a pseudo-airgap&lt;/a&gt; when claiming. These instructions may be helpful for you but have not been verified by project maintainers.&lt;/p&gt; 
&lt;h2&gt;Fallback for HSMs&lt;/h2&gt; 
&lt;p&gt;Not everyone keeps their SSH and PGP keys on their laptop. In the event that your key is not accessible by the signing tool, the signing tool can present you with the raw data needed to be signed. Your regular key is &lt;em&gt;also&lt;/em&gt; included in the merkle tree (concatenated with a random nonce, seeded by the encrypted scalar to preserve privacy). Unfortunately, this will forgo the privacy preservation mechanism described above.&lt;/p&gt; 
&lt;h2&gt;Accepted Key Algorithms&lt;/h2&gt; 
&lt;p&gt;To simplify consensus implementation, we only allow the top 3 most popular key algorithms used on github:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RSA&lt;/strong&gt; (1024 to 4096 bit modulus, e &amp;lt;= 33 bits) - See the Handshake paper as to why 1024 bit moduli are considered acceptable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ed25519&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;P256&lt;/strong&gt; (NIST curve)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Faucet Participants and Sponsors&lt;/h2&gt; 
&lt;p&gt;This tool also allows for the creation of proofs for faucet recipients and sponsors. See the usage below for details.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;If you are unfamiliar with sending blockchain transactions, you can learn what &quot;transactions&quot; are and what &quot;fees&quot; mean on &lt;a href=&quot;https://developer.bitcoin.org/devguide/transactions.html&quot;&gt;bitcoin.org&lt;/a&gt;. The &lt;code&gt;--fee&lt;/code&gt; argument sends an exact amount of HNS coins (default 0.1 HNS) to the Handshake network to include your claim into the blockchain. You will receive 4,246.994314 HNS coins (minus fee amount) to your address.&lt;/p&gt; 
&lt;p&gt;The passphrase requested during the claiming process is for decrypting your SSH/PGP key.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ hs-airdrop -h

  hs-airdrop (v0.7.0)

  This tool will create the proof necessary to
  collect your faucet reward, airdrop reward, or
  sponsor reward on the Handshake blockchain.

  Usage: $ hs-airdrop [key-file] [id] [addr] [options]
         $ hs-airdrop [key-file] [addr] [options]
         $ hs-airdrop [addr]

  Options:

    -v, --version         output the version number
    -b, --bare            redeem airdrop publicly (i.e. without goosig)
    -f, --fee &amp;lt;amount&amp;gt;    set fee for redemption (default: 0.1)
    -d, --data &amp;lt;path&amp;gt;     data directory for cache (default: ~/.hs-tree-data)
    -h, --help            output usage information

  [key-file] can be:

    - An SSH private key file.
    - An exported PGP armor keyring (.asc).
    - An exported PGP raw keyring (.pgp/.gpg).

  [id] is only necessary for PGP keys.

  [addr] must be a Handshake bech32 address.

  The --bare flag will use your existing public key.
  This is not recommended as it makes you identifiable
  on-chain.

  This tool will provide a JSON representation of
  your airdrop proof as well as a base64 string.

  The base64 string must be passed to:
    $ hsd-rpc sendrawairdrop &quot;base64-string&quot;

  Examples:

    $ hs-airdrop ~/.gnupg/secring.gpg 0x12345678 hs1q5z7yyk8xrh4quqg3kw498ngy7hnd4sruqyxnxd -f 0.5
    $ hs-airdrop ~/.ssh/id_rsa hs1q5z7yyk8xrh4quqg3kw498ngy7hnd4sruqyxnxd -f 0.5
    $ hs-airdrop ~/.ssh/id_rsa hs1q5z7yyk8xrh4quqg3kw498ngy7hnd4sruqyxnxd -f 0.5 --bare
    $ hs-airdrop hs1q5z7yyk8xrh4quqg3kw498ngy7hnd4sruqyxnxd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Notes&lt;/h3&gt; 
&lt;p&gt;Note that if you ran &lt;code&gt;hs-airdrop&lt;/code&gt; before mainnet, you will need to upgrade to the latest version of hs-airdrop and clear the cache (&lt;code&gt;rm -rf ~/.hs-tree-data&lt;/code&gt;). The usual error thrown in this case is &lt;code&gt;Invalid checksum: tree.bin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The JSON returned by this tool will include your HNS address encoded as separate hash and version values. These values can be &lt;a href=&quot;https://github.com/handshake-org/hs-airdrop/issues/36&quot;&gt;encoded back into an HNS address&lt;/a&gt; for verification before broadcast.&lt;/p&gt; 
&lt;p&gt;Users have occasionally reported issues downloading the tree data from GitHub. If you get an error like the following, you may just need to wait a few minutes and try again:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Attempting to create proof.
This may take a bit.
Decrypting nonce...
Downloading: https://github.com/handshake-org/hs-tree-data/raw/master/nonces/111.bin...
Error: Client network socket disconnected before secure TLS connection was established
at TLSSocket.onConnectEnd (_tls_wrap.js:1084:19)
at Object.onceWrapper (events.js:273:13)
at TLSSocket.emit (events.js:187:15)
at endReadableNT (_stream_readable.js:1085:12)
at process._tickCallback (internal/process/next_tick.js:63:19)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copyright (c) 2018-2020, Christopher Jeffrey (https://github.com/chjj)&lt;/li&gt; 
 &lt;li&gt;Copyright (c) 2018-2020, Handshake Contributors (https://github.com/handshake-org)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See LICENSE for more info.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bigbluebutton/bigbluebutton</title>
      <link>https://github.com/bigbluebutton/bigbluebutton</link>
      <description>&lt;p&gt;Complete open source web conferencing system.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BigBlueButton&lt;/h1&gt; 
&lt;p&gt;BigBlueButton is an open source web conferencing system.&lt;/p&gt; 
&lt;p&gt;BigBlueButton supports real-time sharing of audio, video, slides (with whiteboard controls), chat, and the screen. Instructors can engage remote students with polling, emojis, multi-user whiteboard, and breakout rooms.&lt;/p&gt; 
&lt;p&gt;Presenters can record and playback content for later sharing with others.&lt;/p&gt; 
&lt;p&gt;We designed BigBlueButton for online learning (though it can be used for many &lt;a href=&quot;http://www.c4isrnet.com/story/military-tech/disa/2015/02/11/disa-to-save-12m-defense-collaboration-services/23238997/&quot;&gt;other applications&lt;/a&gt;). The educational use cases for BigBlueButton are&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Online tutoring (one-to-one)&lt;/li&gt; 
 &lt;li&gt;Flipped classrooms (recording content ahead of your session)&lt;/li&gt; 
 &lt;li&gt;Group collaboration (many-to-many)&lt;/li&gt; 
 &lt;li&gt;Online classes (one-to-many)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can install on a Ubuntu 16.04 64-bit server. We provide &lt;a href=&quot;https://github.com/bigbluebutton/bbb-install&quot;&gt;bbb-install.sh&lt;/a&gt; to let you have a server up and running within 30 minutes (or your money back 😉).&lt;/p&gt; 
&lt;p&gt;For full technical documentation BigBlueButton -- including architecture, features, API, and GreenLight (the default front-end) -- see &lt;a href=&quot;https://docs.bigbluebutton.org/&quot;&gt;https://docs.bigbluebutton.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;BigBlueButton and the BigBlueButton Logo are trademarks of &lt;a href=&quot;https://bigbluebutton.org&quot;&gt;BigBlueButton Inc&lt;/a&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sannaha/sannaha.github.io</title>
      <link>https://github.com/sannaha/sannaha.github.io</link>
      <description>&lt;p&gt;合成大西瓜（P家版）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;合成大欧派（P家）&lt;/h1&gt; 
&lt;p&gt;合成大西瓜的P家版本。合成顺序为：暗妃鲁咪蕾-&amp;gt;古守血游-&amp;gt;真白花音-&amp;gt;铃宫铃-&amp;gt;椎名菜羽-&amp;gt;有栖Mana-&amp;gt;乙女音-&amp;gt;绯赤艾莉欧-&amp;gt;花园Serena-&amp;gt;梦乃栞-&amp;gt;紫桃爱音。如对合成顺序有异议，请提交申请与我们一同迫害。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/chat_application</title>
      <link>https://github.com/adrianhajdin/chat_application</link>
      <description>&lt;p&gt;This is a code repository for the corresponding YouTube video. In this tutorial, we are going to build and deploy a real-time chat application. Covered topics: React.js, Socket.io.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Realtime Chat Application&lt;/h1&gt; 
&lt;h3&gt;&lt;a href=&quot;https://chat-app-jsmastery.netlify.app&quot;&gt;Live Site&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/vDhx8Md/Whats-App-Image-2021-01-26-at-02-01-43.jpg&quot; alt=&quot;Chat Application&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial. In this video, we will create a full Realtime Chat Application&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>inertiajs/inertia</title>
      <link>https://github.com/inertiajs/inertia</link>
      <description>&lt;p&gt;Inertia.js lets you quickly build modern single-page React, Vue and Svelte apps using classic server-side routing and controllers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://inertiajs.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/inertiajs/inertia/master/.github/LOGO.png&quot; alt=&quot;Inertia.js&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Inertia.js lets you quickly build modern single-page React, Vue and Svelte apps using classic server-side routing and controllers. Find full documentation at &lt;a href=&quot;https://inertiajs.com/&quot;&gt;inertiajs.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you&#39;re interested in contributing to Inertia.js, please read our &lt;a href=&quot;https://github.com/inertiajs/inertia/blob/master/.github/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;A huge thanks to all &lt;a href=&quot;https://inertiajs.com/sponsors&quot;&gt;our sponsors&lt;/a&gt; who help push Inertia.js development forward! In particular, we&#39;d like to say a special thank you to our gold sponsors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brook.io/&quot;&gt;Brook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ploi.io/&quot;&gt;Ploi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forge.laravel.com/&quot;&gt;Forge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.activitysource.com/&quot;&gt;ActivitySource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aryeo.com/&quot;&gt;Aryeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.indigit.pt/en&quot;&gt;Indigit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scoutapm.com/?utm_campaign=community_inertisjs_2021_q1&amp;amp;utm_medium=github-sponsorship&amp;amp;utm_source=inertisjs&quot;&gt;Scout APM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contestkit.com/&quot;&gt;ContestKit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;d like to become a sponsor, please &lt;a href=&quot;https://inertiajs.com/sponsors&quot;&gt;see here&lt;/a&gt; for more information. 💜&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>axios/axios</title>
      <link>https://github.com/axios/axios</link>
      <description>&lt;p&gt;Promise based HTTP client for the browser and node.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;axios&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.org/package/axios&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/axios.svg?style=flat-square&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cdnjs.com/libraries/axios&quot;&gt;&lt;img src=&quot;https://img.shields.io/cdnjs/v/axios.svg?style=flat-square&quot; alt=&quot;CDNJS&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/axios/axios&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/axios/axios/master.svg?style=flat-square&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/mzabriskie/axios&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square&quot; alt=&quot;code coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagephobia.now.sh/result?p=axios&quot;&gt;&lt;img src=&quot;https://packagephobia.now.sh/badge?p=axios&quot; alt=&quot;install size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://npm-stat.com/charts.html?package=axios&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/axios.svg?style=flat-square&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/mzabriskie/axios&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square&quot; alt=&quot;gitter chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codetriage.com/axios/axios&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/axios/axios/badges/users.svg&quot; alt=&quot;code helpers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Promise based HTTP client for the browser and node.js&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#browser-support&quot;&gt;Browser Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#installing&quot;&gt;Installing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#example&quot;&gt;Example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#axios-api&quot;&gt;Axios API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#request-method-aliases&quot;&gt;Request method aliases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#concurrency-deprecated&quot;&gt;Concurrency (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#creating-an-instance&quot;&gt;Creating an instance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#instance-methods&quot;&gt;Instance methods&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#request-config&quot;&gt;Request Config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#response-schema&quot;&gt;Response Schema&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#config-defaults&quot;&gt;Config Defaults&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#global-axios-defaults&quot;&gt;Global axios defaults&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#custom-instance-defaults&quot;&gt;Custom instance defaults&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#config-order-of-precedence&quot;&gt;Config order of precedence&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#interceptors&quot;&gt;Interceptors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#handling-errors&quot;&gt;Handling Errors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#cancellation&quot;&gt;Cancellation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#using-applicationx-www-form-urlencoded-format&quot;&gt;Using application/x-www-form-urlencoded format&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#browser&quot;&gt;Browser&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#nodejs&quot;&gt;Node.js&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#query-string&quot;&gt;Query string&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#form-data&quot;&gt;Form data&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#semver&quot;&gt;Semver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#promises&quot;&gt;Promises&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#typescript&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;XMLHttpRequests&lt;/a&gt; from the browser&lt;/li&gt; 
 &lt;li&gt;Make &lt;a href=&quot;http://nodejs.org/api/http.html&quot;&gt;http&lt;/a&gt; requests from node.js&lt;/li&gt; 
 &lt;li&gt;Supports the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt; API&lt;/li&gt; 
 &lt;li&gt;Intercept request and response&lt;/li&gt; 
 &lt;li&gt;Transform request and response data&lt;/li&gt; 
 &lt;li&gt;Cancel requests&lt;/li&gt; 
 &lt;li&gt;Automatic transforms for JSON data&lt;/li&gt; 
 &lt;li&gt;Client side support for protecting against &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;XSRF&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Browser Support&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png&quot; alt=&quot;Chrome&quot;&gt; | &lt;img src=&quot;https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png&quot; alt=&quot;Firefox&quot;&gt; | &lt;img src=&quot;https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png&quot; alt=&quot;Safari&quot;&gt; | &lt;img src=&quot;https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png&quot; alt=&quot;Opera&quot;&gt; | &lt;img src=&quot;https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png&quot; alt=&quot;Edge&quot;&gt; | &lt;img src=&quot;https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png&quot; alt=&quot;IE&quot;&gt; | --- | --- | --- | --- | --- | --- | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 11 ✔ |&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://saucelabs.com/u/axios&quot;&gt;&lt;img src=&quot;https://saucelabs.com/open_sauce/build_matrix/axios.svg&quot; alt=&quot;Browser Matrix&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;Using npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install axios
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using bower:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bower install axios
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using yarn:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ yarn add axios
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using jsDelivr CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using unpkg CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;h3&gt;note: CommonJS usage&lt;/h3&gt; 
&lt;p&gt;In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with &lt;code&gt;require()&lt;/code&gt; use the following approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const axios = require(&#39;axios&#39;).default;

// axios.&amp;lt;method&amp;gt; will now provide autocomplete and parameter typings
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Performing a &lt;code&gt;GET&lt;/code&gt; request&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const axios = require(&#39;axios&#39;);

// Make a request for a user with a given ID
axios.get(&#39;/user?ID=12345&#39;)
  .then(function (response) {
    // handle success
    console.log(response);
  })
  .catch(function (error) {
    // handle error
    console.log(error);
  })
  .then(function () {
    // always executed
  });

// Optionally the request above could also be done as
axios.get(&#39;/user&#39;, {
    params: {
      ID: 12345
    }
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  })
  .then(function () {
    // always executed
  });  

// Want to use async/await? Add the `async` keyword to your outer function/method.
async function getUser() {
  try {
    const response = await axios.get(&#39;/user?ID=12345&#39;);
    console.log(response);
  } catch (error) {
    console.error(error);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;async/await&lt;/code&gt; is part of ECMAScript 2017 and is not supported in Internet Explorer and older browsers, so use with caution.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Performing a &lt;code&gt;POST&lt;/code&gt; request&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axios.post(&#39;/user&#39;, {
    firstName: &#39;Fred&#39;,
    lastName: &#39;Flintstone&#39;
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Performing multiple concurrent requests&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function getUserAccount() {
  return axios.get(&#39;/user/12345&#39;);
}

function getUserPermissions() {
  return axios.get(&#39;/user/12345/permissions&#39;);
}

Promise.all([getUserAccount(), getUserPermissions()])
  .then(function (results) {
    const acct = results[0];
    const perm = results[1];
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;axios API&lt;/h2&gt; 
&lt;p&gt;Requests can be made by passing the relevant config to &lt;code&gt;axios&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;axios(config)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Send a POST request
axios({
  method: &#39;post&#39;,
  url: &#39;/user/12345&#39;,
  data: {
    firstName: &#39;Fred&#39;,
    lastName: &#39;Flintstone&#39;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// GET request for remote image in node.js
axios({
  method: &#39;get&#39;,
  url: &#39;http://bit.ly/2mTM3nY&#39;,
  responseType: &#39;stream&#39;
})
  .then(function (response) {
    response.data.pipe(fs.createWriteStream(&#39;ada_lovelace.jpg&#39;))
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;axios(url[, config])&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Send a GET request (default method)
axios(&#39;/user/12345&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Request method aliases&lt;/h3&gt; 
&lt;p&gt;For convenience aliases have been provided for all supported request methods.&lt;/p&gt; 
&lt;h5&gt;axios.request(config)&lt;/h5&gt; 
&lt;h5&gt;axios.get(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios.delete(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios.head(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios.options(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios.post(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios.put(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios.patch(url[, data[, config]])&lt;/h5&gt; 
&lt;h6&gt;NOTE&lt;/h6&gt; 
&lt;p&gt;When using the alias methods &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, and &lt;code&gt;data&lt;/code&gt; properties don&#39;t need to be specified in config.&lt;/p&gt; 
&lt;h3&gt;Concurrency (Deprecated)&lt;/h3&gt; 
&lt;p&gt;Please use &lt;code&gt;Promise.all&lt;/code&gt; to replace the below functions.&lt;/p&gt; 
&lt;p&gt;Helper functions for dealing with concurrent requests.&lt;/p&gt; 
&lt;p&gt;axios.all(iterable) axios.spread(callback)&lt;/p&gt; 
&lt;h3&gt;Creating an instance&lt;/h3&gt; 
&lt;p&gt;You can create a new instance of axios with a custom config.&lt;/p&gt; 
&lt;h5&gt;axios.create([config])&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const instance = axios.create({
  baseURL: &#39;https://some-domain.com/api/&#39;,
  timeout: 1000,
  headers: {&#39;X-Custom-Header&#39;: &#39;foobar&#39;}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Instance methods&lt;/h3&gt; 
&lt;p&gt;The available instance methods are listed below. The specified config will be merged with the instance config.&lt;/p&gt; 
&lt;h5&gt;axios#request(config)&lt;/h5&gt; 
&lt;h5&gt;axios#get(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios#delete(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios#head(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios#options(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios#post(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios#put(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios#patch(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios#getUri([config])&lt;/h5&gt; 
&lt;h2&gt;Request Config&lt;/h2&gt; 
&lt;p&gt;These are the available config options for making requests. Only the &lt;code&gt;url&lt;/code&gt; is required. Requests will default to &lt;code&gt;GET&lt;/code&gt; if &lt;code&gt;method&lt;/code&gt; is not specified.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  // `url` is the server URL that will be used for the request
  url: &#39;/user&#39;,

  // `method` is the request method to be used when making the request
  method: &#39;get&#39;, // default

  // `baseURL` will be prepended to `url` unless `url` is absolute.
  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs
  // to methods of that instance.
  baseURL: &#39;https://some-domain.com/api/&#39;,

  // `transformRequest` allows changes to the request data before it is sent to the server
  // This is only applicable for request methods &#39;PUT&#39;, &#39;POST&#39;, &#39;PATCH&#39; and &#39;DELETE&#39;
  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,
  // FormData or Stream
  // You may modify the headers object.
  transformRequest: [function (data, headers) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `transformResponse` allows changes to the response data to be made before
  // it is passed to then/catch
  transformResponse: [function (data) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `headers` are custom headers to be sent
  headers: {&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;},

  // `params` are the URL parameters to be sent with the request
  // Must be a plain object or a URLSearchParams object
  params: {
    ID: 12345
  },

  // `paramsSerializer` is an optional function in charge of serializing `params`
  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)
  paramsSerializer: function (params) {
    return Qs.stringify(params, {arrayFormat: &#39;brackets&#39;})
  },

  // `data` is the data to be sent as the request body
  // Only applicable for request methods &#39;PUT&#39;, &#39;POST&#39;, &#39;DELETE , and &#39;PATCH&#39;
  // When no `transformRequest` is set, must be of one of the following types:
  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams
  // - Browser only: FormData, File, Blob
  // - Node only: Stream, Buffer
  data: {
    firstName: &#39;Fred&#39;
  },
  
  // syntax alternative to send data into the body
  // method post
  // only the value is sent, not the key
  data: &#39;Country=Brasil&amp;amp;City=Belo Horizonte&#39;,

  // `timeout` specifies the number of milliseconds before the request times out.
  // If the request takes longer than `timeout`, the request will be aborted.
  timeout: 1000, // default is `0` (no timeout)

  // `withCredentials` indicates whether or not cross-site Access-Control requests
  // should be made using credentials
  withCredentials: false, // default

  // `adapter` allows custom handling of requests which makes testing easier.
  // Return a promise and supply a valid response (see lib/adapters/README.md).
  adapter: function (config) {
    /* ... */
  },

  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.
  // This will set an `Authorization` header, overwriting any existing
  // `Authorization` custom headers you have set using `headers`.
  // Please note that only HTTP Basic auth is configurable through this parameter.
  // For Bearer tokens and such, use `Authorization` custom headers instead.
  auth: {
    username: &#39;janedoe&#39;,
    password: &#39;s00pers3cret&#39;
  },

  // `responseType` indicates the type of data that the server will respond with
  // options are: &#39;arraybuffer&#39;, &#39;document&#39;, &#39;json&#39;, &#39;text&#39;, &#39;stream&#39;
  //   browser only: &#39;blob&#39;
  responseType: &#39;json&#39;, // default

  // `responseEncoding` indicates encoding to use for decoding responses (Node.js only)
  // Note: Ignored for `responseType` of &#39;stream&#39; or client-side requests
  responseEncoding: &#39;utf8&#39;, // default

  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token
  xsrfCookieName: &#39;XSRF-TOKEN&#39;, // default

  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value
  xsrfHeaderName: &#39;X-XSRF-TOKEN&#39;, // default

  // `onUploadProgress` allows handling of progress events for uploads
  // browser only
  onUploadProgress: function (progressEvent) {
    // Do whatever you want with the native progress event
  },

  // `onDownloadProgress` allows handling of progress events for downloads
  // browser only
  onDownloadProgress: function (progressEvent) {
    // Do whatever you want with the native progress event
  },

  // `maxContentLength` defines the max size of the http response content in bytes allowed in node.js
  maxContentLength: 2000,

  // `maxBodyLength` (Node only option) defines the max size of the http request content in bytes allowed
  maxBodyLength: 2000,

  // `validateStatus` defines whether to resolve or reject the promise for a given
  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`
  // or `undefined`), the promise will be resolved; otherwise, the promise will be
  // rejected.
  validateStatus: function (status) {
    return status &amp;gt;= 200 &amp;amp;&amp;amp; status &amp;lt; 300; // default
  },

  // `maxRedirects` defines the maximum number of redirects to follow in node.js.
  // If set to 0, no redirects will be followed.
  maxRedirects: 5, // default

  // `socketPath` defines a UNIX Socket to be used in node.js.
  // e.g. &#39;/var/run/docker.sock&#39; to send requests to the docker daemon.
  // Only either `socketPath` or `proxy` can be specified.
  // If both are specified, `socketPath` is used.
  socketPath: null, // default

  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http
  // and https requests, respectively, in node.js. This allows options to be added like
  // `keepAlive` that are not enabled by default.
  httpAgent: new http.Agent({ keepAlive: true }),
  httpsAgent: new https.Agent({ keepAlive: true }),

  // `proxy` defines the hostname, port, and protocol of the proxy server.
  // You can also define your proxy using the conventional `http_proxy` and
  // `https_proxy` environment variables. If you are using environment variables
  // for your proxy configuration, you can also define a `no_proxy` environment
  // variable as a comma-separated list of domains that should not be proxied.
  // Use `false` to disable proxies, ignoring environment variables.
  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and
  // supplies credentials.
  // This will set an `Proxy-Authorization` header, overwriting any existing
  // `Proxy-Authorization` custom headers you have set using `headers`.
  // If the proxy server uses HTTPS, then you must set the protocol to `https`. 
  proxy: {
    protocol: &#39;https&#39;,
    host: &#39;127.0.0.1&#39;,
    port: 9000,
    auth: {
      username: &#39;mikeymike&#39;,
      password: &#39;rapunz3l&#39;
    }
  },

  // `cancelToken` specifies a cancel token that can be used to cancel the request
  // (see Cancellation section below for details)
  cancelToken: new CancelToken(function (cancel) {
  }),

  // `decompress` indicates whether or not the response body should be decompressed 
  // automatically. If set to `true` will also remove the &#39;content-encoding&#39; header 
  // from the responses objects of all decompressed responses
  // - Node only (XHR cannot turn off decompression)
  decompress: true // default

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Response Schema&lt;/h2&gt; 
&lt;p&gt;The response for a request contains the following information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  // `data` is the response that was provided by the server
  data: {},

  // `status` is the HTTP status code from the server response
  status: 200,

  // `statusText` is the HTTP status message from the server response
  statusText: &#39;OK&#39;,

  // `headers` the HTTP headers that the server responded with
  // All header names are lower cased and can be accessed using the bracket notation.
  // Example: `response.headers[&#39;content-type&#39;]`
  headers: {},

  // `config` is the config that was provided to `axios` for the request
  config: {},

  // `request` is the request that generated this response
  // It is the last ClientRequest instance in node.js (in redirects)
  // and an XMLHttpRequest instance in the browser
  request: {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using &lt;code&gt;then&lt;/code&gt;, you will receive the response as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axios.get(&#39;/user/12345&#39;)
  .then(function (response) {
    console.log(response.data);
    console.log(response.status);
    console.log(response.statusText);
    console.log(response.headers);
    console.log(response.config);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using &lt;code&gt;catch&lt;/code&gt;, or passing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then&quot;&gt;rejection callback&lt;/a&gt; as second parameter of &lt;code&gt;then&lt;/code&gt;, the response will be available through the &lt;code&gt;error&lt;/code&gt; object as explained in the &lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/#handling-errors&quot;&gt;Handling Errors&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;Config Defaults&lt;/h2&gt; 
&lt;p&gt;You can specify config defaults that will be applied to every request.&lt;/p&gt; 
&lt;h3&gt;Global axios defaults&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axios.defaults.baseURL = &#39;https://api.example.com&#39;;

// Important: If axios is used with multiple domains, the AUTH_TOKEN will be sent to all of them.
// See below for an example using Custom instance defaults instead.
axios.defaults.headers.common[&#39;Authorization&#39;] = AUTH_TOKEN;

axios.defaults.headers.post[&#39;Content-Type&#39;] = &#39;application/x-www-form-urlencoded&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom instance defaults&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Set config defaults when creating the instance
const instance = axios.create({
  baseURL: &#39;https://api.example.com&#39;
});

// Alter defaults after instance has been created
instance.defaults.headers.common[&#39;Authorization&#39;] = AUTH_TOKEN;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Config order of precedence&lt;/h3&gt; 
&lt;p&gt;Config will be merged with an order of precedence. The order is library defaults found in &lt;a href=&quot;https://github.com/axios/axios/blob/master/lib/defaults.js#L28&quot;&gt;lib/defaults.js&lt;/a&gt;, then &lt;code&gt;defaults&lt;/code&gt; property of the instance, and finally &lt;code&gt;config&lt;/code&gt; argument for the request. The latter will take precedence over the former. Here&#39;s an example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Create an instance using the config defaults provided by the library
// At this point the timeout config value is `0` as is the default for the library
const instance = axios.create();

// Override timeout default for the library
// Now all requests using this instance will wait 2.5 seconds before timing out
instance.defaults.timeout = 2500;

// Override timeout for this request as it&#39;s known to take a long time
instance.get(&#39;/longRequest&#39;, {
  timeout: 5000
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Interceptors&lt;/h2&gt; 
&lt;p&gt;You can intercept requests or responses before they are handled by &lt;code&gt;then&lt;/code&gt; or &lt;code&gt;catch&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Add a request interceptor
axios.interceptors.request.use(function (config) {
    // Do something before request is sent
    return config;
  }, function (error) {
    // Do something with request error
    return Promise.reject(error);
  });

// Add a response interceptor
axios.interceptors.response.use(function (response) {
    // Any status code that lie within the range of 2xx cause this function to trigger
    // Do something with response data
    return response;
  }, function (error) {
    // Any status codes that falls outside the range of 2xx cause this function to trigger
    // Do something with response error
    return Promise.reject(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need to remove an interceptor later you can.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const myInterceptor = axios.interceptors.request.use(function () {/*...*/});
axios.interceptors.request.eject(myInterceptor);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can add interceptors to a custom instance of axios.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const instance = axios.create();
instance.interceptors.request.use(function () {/*...*/});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Handling Errors&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axios.get(&#39;/user/12345&#39;)
  .catch(function (error) {
    if (error.response) {
      // The request was made and the server responded with a status code
      // that falls out of the range of 2xx
      console.log(error.response.data);
      console.log(error.response.status);
      console.log(error.response.headers);
    } else if (error.request) {
      // The request was made but no response was received
      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
      // http.ClientRequest in node.js
      console.log(error.request);
    } else {
      // Something happened in setting up the request that triggered an Error
      console.log(&#39;Error&#39;, error.message);
    }
    console.log(error.config);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using the &lt;code&gt;validateStatus&lt;/code&gt; config option, you can define HTTP code(s) that should throw an error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axios.get(&#39;/user/12345&#39;, {
  validateStatus: function (status) {
    return status &amp;lt; 500; // Resolve only if the status code is less than 500
  }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;toJSON&lt;/code&gt; you get an object with more information about the HTTP error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axios.get(&#39;/user/12345&#39;)
  .catch(function (error) {
    console.log(error.toJSON());
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Cancellation&lt;/h2&gt; 
&lt;p&gt;You can cancel a request using a &lt;em&gt;cancel token&lt;/em&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The axios cancel token API is based on the withdrawn &lt;a href=&quot;https://github.com/tc39/proposal-cancelable-promises&quot;&gt;cancelable promises proposal&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can create a cancel token using the &lt;code&gt;CancelToken.source&lt;/code&gt; factory as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const CancelToken = axios.CancelToken;
const source = CancelToken.source();

axios.get(&#39;/user/12345&#39;, {
  cancelToken: source.token
}).catch(function (thrown) {
  if (axios.isCancel(thrown)) {
    console.log(&#39;Request canceled&#39;, thrown.message);
  } else {
    // handle error
  }
});

axios.post(&#39;/user/12345&#39;, {
  name: &#39;new name&#39;
}, {
  cancelToken: source.token
})

// cancel the request (the message parameter is optional)
source.cancel(&#39;Operation canceled by the user.&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also create a cancel token by passing an executor function to the &lt;code&gt;CancelToken&lt;/code&gt; constructor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const CancelToken = axios.CancelToken;
let cancel;

axios.get(&#39;/user/12345&#39;, {
  cancelToken: new CancelToken(function executor(c) {
    // An executor function receives a cancel function as a parameter
    cancel = c;
  })
});

// cancel the request
cancel();
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: you can cancel several requests with the same cancel token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Using application/x-www-form-urlencoded format&lt;/h2&gt; 
&lt;p&gt;By default, axios serializes JavaScript objects to &lt;code&gt;JSON&lt;/code&gt;. To send data in the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format instead, you can use one of the following options.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;In a browser, you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; API as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const params = new URLSearchParams();
params.append(&#39;param1&#39;, &#39;value1&#39;);
params.append(&#39;param2&#39;, &#39;value2&#39;);
axios.post(&#39;/foo&#39;, params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that &lt;code&gt;URLSearchParams&lt;/code&gt; is not supported by all browsers (see &lt;a href=&quot;http://www.caniuse.com/#feat=urlsearchparams&quot;&gt;caniuse.com&lt;/a&gt;), but there is a &lt;a href=&quot;https://github.com/WebReflection/url-search-params&quot;&gt;polyfill&lt;/a&gt; available (make sure to polyfill the global environment).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Alternatively, you can encode data using the &lt;a href=&quot;https://github.com/ljharb/qs&quot;&gt;&lt;code&gt;qs&lt;/code&gt;&lt;/a&gt; library:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const qs = require(&#39;qs&#39;);
axios.post(&#39;/foo&#39;, qs.stringify({ &#39;bar&#39;: 123 }));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in another way (ES6),&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import qs from &#39;qs&#39;;
const data = { &#39;bar&#39;: 123 };
const options = {
  method: &#39;POST&#39;,
  headers: { &#39;content-type&#39;: &#39;application/x-www-form-urlencoded&#39; },
  data: qs.stringify(data),
  url,
};
axios(options);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Node.js&lt;/h3&gt; 
&lt;h4&gt;Query string&lt;/h4&gt; 
&lt;p&gt;In node.js, you can use the &lt;a href=&quot;https://nodejs.org/api/querystring.html&quot;&gt;&lt;code&gt;querystring&lt;/code&gt;&lt;/a&gt; module as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const querystring = require(&#39;querystring&#39;);
axios.post(&#39;http://something.com/&#39;, querystring.stringify({ foo: &#39;bar&#39; }));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or &lt;a href=&quot;https://nodejs.org/api/url.html#url_class_urlsearchparams&quot;&gt;&#39;URLSearchParams&#39;&lt;/a&gt; from &lt;a href=&quot;https://nodejs.org/api/url.html&quot;&gt;&#39;url module&#39;&lt;/a&gt; as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const url = require(&#39;url&#39;);
const params = new url.URLSearchParams({ foo: &#39;bar&#39; });
axios.post(&#39;http://something.com/&#39;, params.toString());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;a href=&quot;https://github.com/ljharb/qs&quot;&gt;&lt;code&gt;qs&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt; 
&lt;h6&gt;NOTE&lt;/h6&gt; 
&lt;p&gt;The &lt;code&gt;qs&lt;/code&gt; library is preferable if you need to stringify nested objects, as the &lt;code&gt;querystring&lt;/code&gt; method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).&lt;/p&gt; 
&lt;h4&gt;Form data&lt;/h4&gt; 
&lt;p&gt;In node.js, you can use the &lt;a href=&quot;https://github.com/form-data/form-data&quot;&gt;&lt;code&gt;form-data&lt;/code&gt;&lt;/a&gt; library as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const FormData = require(&#39;form-data&#39;);
 
const form = new FormData();
form.append(&#39;my_field&#39;, &#39;my value&#39;);
form.append(&#39;my_buffer&#39;, new Buffer(10));
form.append(&#39;my_file&#39;, fs.createReadStream(&#39;/foo/bar.jpg&#39;));

axios.post(&#39;https://example.com&#39;, form, { headers: form.getHeaders() })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, use an interceptor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axios.interceptors.request.use(config =&amp;gt; {
  if (config.data instanceof FormData) {
    Object.assign(config.headers, config.data.getHeaders());
  }
  return config;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Semver&lt;/h2&gt; 
&lt;p&gt;Until axios reaches a &lt;code&gt;1.0&lt;/code&gt; release, breaking changes will be released with a new minor version. For example &lt;code&gt;0.5.1&lt;/code&gt;, and &lt;code&gt;0.5.4&lt;/code&gt; will have the same API, but &lt;code&gt;0.6.0&lt;/code&gt; will have breaking changes.&lt;/p&gt; 
&lt;h2&gt;Promises&lt;/h2&gt; 
&lt;p&gt;axios depends on a native ES6 Promise implementation to be &lt;a href=&quot;http://caniuse.com/promises&quot;&gt;supported&lt;/a&gt;. If your environment doesn&#39;t support ES6 Promises, you can &lt;a href=&quot;https://github.com/jakearchibald/es6-promise&quot;&gt;polyfill&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;TypeScript&lt;/h2&gt; 
&lt;p&gt;axios includes &lt;a href=&quot;http://typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; definitions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;import axios from &#39;axios&#39;;
axios.get(&#39;/user?ID=12345&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios/blob/master/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md&quot;&gt;Upgrade Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios/blob/master/ECOSYSTEM.md&quot;&gt;Ecosystem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios/blob/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;axios is heavily inspired by the &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$http&quot;&gt;$http service&lt;/a&gt; provided in &lt;a href=&quot;https://angularjs.org/&quot;&gt;Angular&lt;/a&gt;. Ultimately axios is an effort to provide a standalone &lt;code&gt;$http&lt;/code&gt;-like service for use outside of Angular.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/axios/axios/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lutzroeder/netron</title>
      <link>https://github.com/lutzroeder/netron</link>
      <description>&lt;p&gt;Visualizer for neural network, deep learning, and machine learning models&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Netron is a viewer for neural network, deep learning and machine learning models.&lt;/p&gt; 
&lt;p&gt;Netron supports &lt;strong&gt;ONNX&lt;/strong&gt; (&lt;code&gt;.onnx&lt;/code&gt;, &lt;code&gt;.pb&lt;/code&gt;, &lt;code&gt;.pbtxt&lt;/code&gt;), &lt;strong&gt;Keras&lt;/strong&gt; (&lt;code&gt;.h5&lt;/code&gt;, &lt;code&gt;.keras&lt;/code&gt;), &lt;strong&gt;TensorFlow Lite&lt;/strong&gt; (&lt;code&gt;.tflite&lt;/code&gt;), &lt;strong&gt;Caffe&lt;/strong&gt; (&lt;code&gt;.caffemodel&lt;/code&gt;, &lt;code&gt;.prototxt&lt;/code&gt;), &lt;strong&gt;Darknet&lt;/strong&gt; (&lt;code&gt;.cfg&lt;/code&gt;), &lt;strong&gt;Core ML&lt;/strong&gt; (&lt;code&gt;.mlmodel&lt;/code&gt;), &lt;strong&gt;MNN&lt;/strong&gt; (&lt;code&gt;.mnn&lt;/code&gt;), &lt;strong&gt;MXNet&lt;/strong&gt; (&lt;code&gt;.model&lt;/code&gt;, &lt;code&gt;-symbol.json&lt;/code&gt;), &lt;strong&gt;ncnn&lt;/strong&gt; (&lt;code&gt;.param&lt;/code&gt;), &lt;strong&gt;PaddlePaddle&lt;/strong&gt; (&lt;code&gt;.zip&lt;/code&gt;, &lt;code&gt;__model__&lt;/code&gt;), &lt;strong&gt;Caffe2&lt;/strong&gt; (&lt;code&gt;predict_net.pb&lt;/code&gt;), &lt;strong&gt;Barracuda&lt;/strong&gt; (&lt;code&gt;.nn&lt;/code&gt;), &lt;strong&gt;Tengine&lt;/strong&gt; (&lt;code&gt;.tmfile&lt;/code&gt;), &lt;strong&gt;TNN&lt;/strong&gt; (&lt;code&gt;.tnnproto&lt;/code&gt;), &lt;strong&gt;RKNN&lt;/strong&gt; (&lt;code&gt;.rknn&lt;/code&gt;), &lt;strong&gt;MindSpore Lite&lt;/strong&gt; (&lt;code&gt;.ms&lt;/code&gt;), &lt;strong&gt;UFF&lt;/strong&gt; (&lt;code&gt;.uff&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Netron has experimental support for &lt;strong&gt;TensorFlow&lt;/strong&gt; (&lt;code&gt;.pb&lt;/code&gt;, &lt;code&gt;.meta&lt;/code&gt;, &lt;code&gt;.pbtxt&lt;/code&gt;, &lt;code&gt;.ckpt&lt;/code&gt;, &lt;code&gt;.index&lt;/code&gt;), &lt;strong&gt;PyTorch&lt;/strong&gt; (&lt;code&gt;.pt&lt;/code&gt;, &lt;code&gt;.pth&lt;/code&gt;), &lt;strong&gt;TorchScript&lt;/strong&gt; (&lt;code&gt;.pt&lt;/code&gt;, &lt;code&gt;.pth&lt;/code&gt;), &lt;strong&gt;OpenVINO&lt;/strong&gt; (&lt;code&gt;.xml&lt;/code&gt;), &lt;strong&gt;Torch&lt;/strong&gt; (&lt;code&gt;.t7&lt;/code&gt;), &lt;strong&gt;Arm NN&lt;/strong&gt; (&lt;code&gt;.armnn&lt;/code&gt;), &lt;strong&gt;BigDL&lt;/strong&gt; (&lt;code&gt;.bigdl&lt;/code&gt;, &lt;code&gt;.model&lt;/code&gt;), &lt;strong&gt;Chainer&lt;/strong&gt; (&lt;code&gt;.npz&lt;/code&gt;, &lt;code&gt;.h5&lt;/code&gt;), &lt;strong&gt;CNTK&lt;/strong&gt; (&lt;code&gt;.model&lt;/code&gt;, &lt;code&gt;.cntk&lt;/code&gt;), &lt;strong&gt;Deeplearning4j&lt;/strong&gt; (&lt;code&gt;.zip&lt;/code&gt;), &lt;strong&gt;MediaPipe&lt;/strong&gt; (&lt;code&gt;.pbtxt&lt;/code&gt;), &lt;strong&gt;ML.NET&lt;/strong&gt; (&lt;code&gt;.zip&lt;/code&gt;), &lt;strong&gt;scikit-learn&lt;/strong&gt; (&lt;code&gt;.pkl&lt;/code&gt;), &lt;strong&gt;TensorFlow.js&lt;/strong&gt; (&lt;code&gt;model.json&lt;/code&gt;, &lt;code&gt;.pb&lt;/code&gt;).&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lutzroeder/netron/releases/latest&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt; the &lt;code&gt;.dmg&lt;/code&gt; file or run &lt;code&gt;brew install netron&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lutzroeder/netron/releases/latest&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt; the &lt;code&gt;.AppImage&lt;/code&gt; file or run &lt;code&gt;snap install netron&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lutzroeder/netron/releases/latest&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt; the &lt;code&gt;.exe&lt;/code&gt; installer or run &lt;code&gt;winget install netron&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;: &lt;a href=&quot;https://netron.app&quot;&gt;&lt;strong&gt;Start&lt;/strong&gt;&lt;/a&gt; the browser version.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Python Server&lt;/strong&gt;: Run &lt;code&gt;pip install netron&lt;/code&gt; and &lt;code&gt;netron [FILE]&lt;/code&gt; or &lt;code&gt;netron.start(&#39;[FILE]&#39;)&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Models&lt;/h2&gt; 
&lt;p&gt;Sample model files to download or open using the browser version:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ONNX&lt;/strong&gt;: &lt;a href=&quot;https://media.githubusercontent.com/media/onnx/models/master/vision/classification/squeezenet/model/squeezenet1.0-3.onnx&quot;&gt;squeezenet&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://media.githubusercontent.com/media/onnx/models/master/vision/classification/squeezenet/model/squeezenet1.0-3.onnx&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CoreML&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/Lausbert/Exermote/master/ExermoteInference/ExermoteCoreML/ExermoteCoreML/Model/Exermote.mlmodel&quot;&gt;exermote&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/Lausbert/Exermote/master/ExermoteInference/ExermoteCoreML/ExermoteCoreML/Model/Exermote.mlmodel&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Darknet&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolo.cfg&quot;&gt;yolo&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolo.cfg&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keras&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/aio-libs/aiohttp-demos/master/demos/imagetagger/tests/data/mobilenet.h5&quot;&gt;mobilenet&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/aio-libs/aiohttp-demos/master/demos/imagetagger/tests/data/mobilenet.h5&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MXNet&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/soeaver/mxnet-model/master/cls/inception/inception_v3-symbol.json&quot;&gt;inception_v3&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/soeaver/mxnet-model/master/cls/inception/inception_v3-symbol.json&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/srom/chessbot/master/model/chessbot.pb&quot;&gt;chessbot&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/srom/chessbot/master/model/chessbot.pb&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TensorFlow Lite&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/models/hair_segmentation.tflite&quot;&gt;hair_segmentation&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/models/hair_segmentation.tflite&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TorchScript&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/ApolloAuto/apollo/master/modules/prediction/data/traced_online_pred_layer.pt&quot;&gt;traced_online_pred_layer&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/ApolloAuto/apollo/master/modules/prediction/data/traced_online_pred_layer.pt&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Caffe&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/shicai/MobileNet-Caffe/master/mobilenet_v2.caffemodel&quot;&gt;mobilenet_v2&lt;/a&gt; [&lt;a href=&quot;https://netron.app?url=https://raw.githubusercontent.com/shicai/MobileNet-Caffe/master/mobilenet_v2.caffemodel&quot;&gt;open&lt;/a&gt;]&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>module-federation/module-federation-examples</title>
      <link>https://github.com/module-federation/module-federation-examples</link>
      <description>&lt;p&gt;Implementation examples of module federation , by the creators of module federation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Module Federation Examples&lt;/h1&gt; 
&lt;p&gt;This repository is to showcase examples on Webpack 5&#39;s new Module Federation can be used.&lt;/p&gt; 
&lt;p&gt;| If you need &lt;strong&gt;support&lt;/strong&gt;, consider looking at my sponsor profile &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_medium=https://github.com/sponsors/ScriptedAlchemy&amp;amp;utm_campaign=sponsor_link&quot;&gt;https://github.com/sponsors/ScriptedAlchemy&lt;/a&gt; | For companies that require consultations, contact me on twitter or email (on github profile) | |----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | &lt;strong&gt;Youtube Screencasts&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_medium=https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPLWSiF9YHHK-DqsFHGYbeAMwbd9xcZbEWJ&amp;amp;utm_campaign=youtube_playlist&quot;&gt;https://www.youtube.com/playlist?list=PLWSiF9YHHK-DqsFHGYbeAMwbd9xcZbEWJ&lt;/a&gt; | | &lt;strong&gt;Info site&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=github_pages&amp;amp;utm_medium=https://module-federation.github.io/&quot;&gt;https://module-federation.github.io/&lt;/a&gt; | | &lt;strong&gt;Official Docs&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=webpack_docs&amp;amp;utm_medium=https://webpack.js.org/concepts/module-federation&quot;&gt;https://webpack.js.org/concepts/module-federation&lt;/a&gt; | | &lt;strong&gt;Original Webpack Issue&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=merge_proposal_issue&amp;amp;utm_medium=https://github.com/webpack/webpack/issues/10352&quot;&gt;https://github.com/webpack/webpack/issues/10352&lt;/a&gt; | | &lt;strong&gt;Medium post&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=game_changer_medium_post&amp;amp;utm_medium=https://link.medium.com/xzFgBBtAx6&quot;&gt;https://link.medium.com/xzFgBBtAx6&lt;/a&gt; | | &lt;strong&gt;JSNation Presentation&lt;/strong&gt; | https://github.com/sokra/slides/blob/master/content/ModuleFederationWebpack5.md |&lt;/p&gt; 
&lt;h1&gt;Check out our book&lt;/h1&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;We will be actively updating this book over the next year as we learn more about best practices and what issues people are running into with Module Federation, as well as with every release of Webpack as it moves towards a release candidate and release. So with your one purchase you are buying a whole year of updates.
 &lt;!-- raw HTML omitted --&gt; | | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |&lt;/p&gt; 
&lt;h1&gt;Consultations&lt;/h1&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;1 Hour group consultation
 &lt;!-- raw HTML omitted --&gt; | $100 | |------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | 
 &lt;!-- raw HTML omitted --&gt;30 Min 1:1 consultation
 &lt;!-- raw HTML omitted --&gt; | $60 | | 
 &lt;!-- raw HTML omitted --&gt;15 Min 1:1 consultation
 &lt;!-- raw HTML omitted --&gt; | $30 | | Bespoke API modifications and hands on code | $300-%500 | | &lt;strong&gt;Original Webpack Issue&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=merge_proposal_issue&amp;amp;utm_medium=https://github.com/webpack/webpack/issues/10352&quot;&gt;https://github.com/webpack/webpack/issues/10352&lt;/a&gt; | | &lt;strong&gt;Medium post&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=game_changer_medium_post&amp;amp;utm_medium=https://link.medium.com/xzFgBBtAx6&quot;&gt;https://link.medium.com/xzFgBBtAx6&lt;/a&gt; | | &lt;strong&gt;JSNation Presentation&lt;/strong&gt; | |&lt;/p&gt; 
&lt;h1&gt;Examples&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Legend:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;⚠️: In Progress/Incomplete&lt;/li&gt; 
  &lt;li&gt;🔒: Depends on proprietary code that isn&#39;t free.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/advanced-api&quot;&gt;Advanced API&lt;/a&gt; — showcasing advanced API use, also seen in other examples&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/basic-host-remote/README.md&quot;&gt;Basic Host-Remote&lt;/a&gt; — App 1 consumes remote components from App2.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/startup-code/README.md&quot;&gt;Startup Code&lt;/a&gt; — Advanced implementation that attaches initialization code to the remote container itself. Useful for dynamically setting publicPath in the remote.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/bi-directional/README.md&quot;&gt;Bi-Directional Hosts&lt;/a&gt; — App1 consumes App2 components; App2 consumes App1 components.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/self-healing/README.md&quot;&gt;Self-Healing&lt;/a&gt; — Fallback to remote apps vendors if a dependency fails to load.&lt;/li&gt; 
 &lt;li&gt;[x] ⚠️ &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/server-side-rendering/README.md&quot;&gt;Server-Side Rendering&lt;/a&gt; — App1 and App2 with SSR (Broken because of @loadable/component - check readme in demo.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/server-side-render-only/README.md&quot;&gt;Server-Side Rendering (simplified)&lt;/a&gt; — Less complex boilerplate.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/comprehensive-demo/README.md&quot;&gt;Multi UI Framework Federation&lt;/a&gt; — Multiple Apps in different technologies federated.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/dynamic-system-host/README.md&quot;&gt;Dynamic System Host&lt;/a&gt; — Swap between remotes at runtime.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/redux-reducer-injection/README.md&quot;&gt;Redux Reducer Injection&lt;/a&gt; — Dynamically inject reducers to host store at runtime.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/shared-routes2&quot;&gt;Shared Routes&lt;/a&gt; — Compose federated routes for a seamless user experience.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/nested/README.md&quot;&gt;Nested Components&lt;/a&gt; — Nested remote components.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/shared-context/README.md&quot;&gt;Share Context Provider&lt;/a&gt; — App1 and App2 with shared Context Provider.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/dashboard-example/README.md&quot;&gt;Federation Dashboard Example&lt;/a&gt; — Single example implementing &lt;a href=&quot;https://www.npmjs.com/package/@module-federation/dashboard-plugin&quot;&gt;Module Federation Dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] 🔒 &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/streamed-federation/README.md&quot;&gt;Streaming Federated Code&lt;/a&gt; — App1 and federated-middleware deploy to s3. App1 then stream&#39;s federated code directly from S3&lt;/li&gt; 
 &lt;li&gt;[x] Non-UI Module&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/shared-routing/README.md&quot;&gt;Routing&lt;/a&gt; — An example of sharing router context. Also worth looking at - &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/shared-routes2/README.md&quot;&gt;Routing 2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/version-discrepancy/README.md&quot;&gt;Version Discrepancy&lt;/a&gt; — Federated apps depending on different versions of a dependency without side-effects.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/typescript/README.md&quot;&gt;TypeScript&lt;/a&gt; — Simple host/remote example using TypeScript.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/angular-universal-ssr/README.md&quot;&gt;Angular Universal&lt;/a&gt; — Remote and Host app with SSR, lazy modules and components.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/nextjs-sidecar/README.md&quot;&gt;NextJS Sidecar Build&lt;/a&gt; — Sidecar build to enable module-federation alongside Next codebases&lt;/li&gt; 
 &lt;li&gt;[x] ⚠️ &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/nextjs/README.md&quot;&gt;NextJS&lt;/a&gt; — Operation, with workarounds. v10 will support async&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://github.com/manfredsteyer/module-federation-with-angular-dynamic-workflow-designer&quot;&gt;Building A Plugin-based Workflow Designer With Angular and Module Federation&lt;/a&gt; — External Example&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/vue3-demo/README.md&quot;&gt;Vue.js&lt;/a&gt; — Simple host/remote (render function / sfc) example using Vue 3.0.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Notes&lt;/h1&gt; 
&lt;p&gt;To run from a git checkout locally, remove all of the proprietary example directories and then run &lt;code&gt;yarn&lt;/code&gt; at the repo root. You can then run &lt;code&gt;yarn &amp;amp;&amp;amp; yarn start&lt;/code&gt; from any of the non-proprietary examples.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Module federation will work with any type of file that youre able to import, that webpack underestands how to process. It is not a JS only, or react only feature. Images, CSS, JSON, WASM, and anything else can be federated.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>r4j0x00/exploits</title>
      <link>https://github.com/r4j0x00/exploits</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;exploits&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/r4j0x00/exploits/blob/master/CVE-2021-3156/exploit.c&quot;&gt;CVE-2021-3156&lt;/a&gt;: Linux local privilege escalation through heap overflow in sudo&lt;br&gt; &lt;a href=&quot;https://github.com/r4j0x00/exploits/blob/master/chrome-exploit/exploit.js&quot;&gt;CVE-2020-6507&lt;/a&gt;: Out of bounds write in V8. Chrome versions &amp;lt;= 83.0.4103.97&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/mrdoob/three.js#info=devDependencies&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/dev/mrdoob/three.js&quot; alt=&quot;Dev Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; — &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; — &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; — &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; — &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/enQtMzYxMzczODM2OTgxLTQ1YmY4YTQxOTFjNDAzYmQ4NjU2YzRhNzliY2RiNDEyYjU2MjhhODgyYWQ5Y2MyZTU3MWNkOGVmOGRhOTQzYTk&quot;&gt;Slack&lt;/a&gt; — &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/zdjankqw/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don&#39;t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/uf2</title>
      <link>https://github.com/microsoft/uf2</link>
      <description>&lt;p&gt;UF2 file format specification&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;USB Flashing Format (UF2)&lt;/h1&gt; 
&lt;p&gt;UF2 is a file format, developed by Microsoft for &lt;a href=&quot;https://github.com/Microsoft/pxt&quot;&gt;PXT&lt;/a&gt; (also known as &lt;a href=&quot;https://makecode.com&quot;&gt;Microsoft MakeCode&lt;/a&gt;), that is particularly suitable for flashing microcontrollers over MSC (Mass Storage Class; aka removable flash drive).&lt;/p&gt; 
&lt;p&gt;For a more friendly explanation, check out &lt;a href=&quot;https://makecode.com/blog/one-chip-to-flash-them-all&quot;&gt;this blog post&lt;/a&gt;. Also, take a look at the list of implementations at the bottom of this document.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;The UF2 file consists of 512 byte blocks, each of which is self-contained and independent of others. Each 512 byte block consists of (see below for details):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;magic numbers at the beginning and at the end&lt;/li&gt; 
 &lt;li&gt;address where the data should be flashed&lt;/li&gt; 
 &lt;li&gt;up to 476 bytes of data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The data transfers over MSC always arrive in multiples of 512 bytes. Together with the FAT file system structure, this means that blocks of the UF2 file are always aligned with the MSC writes - the microcontroller never gets a partial file.&lt;/p&gt; 
&lt;p&gt;The magic numbers let the microcontroller distinguish an UF2 file block from other data (eg., FAT table entry, or various book-keeping files stored by some operating systems). When a UF2 block is recognized, it can be flashed immediately (unless flash page size is more than 256 bytes; in that case a buffer is needed). The actual handling of file format during writing is very simple (~10 lines of C code in simplest version).&lt;/p&gt; 
&lt;h2&gt;File format&lt;/h2&gt; 
&lt;p&gt;A UF2 file consists of 512 byte blocks. Each block starts with a 32 byte header, followed by data, and a final magic number. All fields, except for data, are 32 bit unsigned little endian integers.&lt;/p&gt; 
&lt;p&gt;| Offset | Size | Value | |--------|------|---------------------------------------------------| | 0 | 4 | First magic number, &lt;code&gt;0x0A324655&lt;/code&gt; (&lt;code&gt;&quot;UF2\n&quot;&lt;/code&gt;) | | 4 | 4 | Second magic number, &lt;code&gt;0x9E5D5157&lt;/code&gt; | | 8 | 4 | Flags | | 12 | 4 | Address in flash where the data should be written | | 16 | 4 | Number of bytes used in data (often 256) | | 20 | 4 | Sequential block number; starts at 0 | | 24 | 4 | Total number of blocks in file | | 28 | 4 | File size or board family ID or zero | | 32 | 476 | Data, padded with zeros | | 508 | 4 | Final magic number, &lt;code&gt;0x0AB16F30&lt;/code&gt; |&lt;/p&gt; 
&lt;p&gt;The following C struct can be used:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;struct UF2_Block {
    // 32 byte header
    uint32_t magicStart0;
    uint32_t magicStart1;
    uint32_t flags;
    uint32_t targetAddr;
    uint32_t payloadSize;
    uint32_t blockNo;
    uint32_t numBlocks;
    uint32_t fileSize; // or familyID;
    uint8_t data[476];
    uint32_t magicEnd;
} UF2_Block;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Flags&lt;/h3&gt; 
&lt;p&gt;Currently, there are five flags defined:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;0x00000001&lt;/code&gt; - &lt;strong&gt;not main flash&lt;/strong&gt; - this block should be skipped when writing the device flash; it can be used to store &quot;comments&quot; in the file, typically embedded source code or debug info that does not fit on the device flash&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0x00001000&lt;/code&gt; - &lt;strong&gt;file container&lt;/strong&gt; - see below&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0x00002000&lt;/code&gt; - &lt;strong&gt;familyID present&lt;/strong&gt; - when set, the &lt;code&gt;fileSize/familyID&lt;/code&gt; holds a value identifying the board family (usually corresponds to an MCU)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0x00004000&lt;/code&gt; - &lt;strong&gt;MD5 checksum present&lt;/strong&gt; - see below&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0x00008000&lt;/code&gt; - &lt;strong&gt;extension tags present&lt;/strong&gt; - see below&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Family ID&lt;/h3&gt; 
&lt;p&gt;This field is optional, and should be set only when the corresponding flag is set. It is recommended that new bootloaders require the field to be set appropriately, and refuse to flash UF2 files without it. If you&#39;re developing your own bootloader, and your board family isn&#39;t listed here, pick a new family ID at random. It&#39;s good to also send a PR here, so your family can be listed.&lt;/p&gt; 
&lt;p&gt;If the &lt;code&gt;familyID&lt;/code&gt; doesn&#39;t match, the bootloader should disregard the entire block, including &lt;code&gt;blockNo&lt;/code&gt; and &lt;code&gt;numBlocks&lt;/code&gt; fields. In particular, writing a full UF2 file with non-matching &lt;code&gt;familyID&lt;/code&gt; should not reset the board. This also allows for several files with different &lt;code&gt;familyID&lt;/code&gt; to be simply concatenated together, and the whole resulting file to be copied to the device with only one actually being written to flash.&lt;/p&gt; 
&lt;h4&gt;Picking numbers at random&lt;/h4&gt; 
&lt;p&gt;The reason to pick numbers at random is to minimize risk of collisions in the wild. Do not pick random numbers by banging on keyboard, or by using &lt;code&gt;0xdeadf00d&lt;/code&gt;, &lt;code&gt;0x42424242&lt;/code&gt; etc. A good way is to use the following shell command: &lt;code&gt;printf &quot;0x%04x%04x\n&quot; $RANDOM $RANDOM&lt;/code&gt; Another good way is the link at the bottom of https://microsoft.github.io/uf2/patcher/ This procedure was unfortunately not used for the SAMD51 and NRF52840 below.&lt;/p&gt; 
&lt;h4&gt;Family list&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Microchip (Atmel) SAMD21 - 0x68ed2b88&lt;/li&gt; 
 &lt;li&gt;Microchip (Atmel) SAML21 - 0x1851780a&lt;/li&gt; 
 &lt;li&gt;Microchip (Atmel) SAMD51 - 0x55114460&lt;/li&gt; 
 &lt;li&gt;Nordic NRF52840 - 0xada52840&lt;/li&gt; 
 &lt;li&gt;ST STM32F0xx - 0x647824b6&lt;/li&gt; 
 &lt;li&gt;ST STM32F103 - 0x5ee21072&lt;/li&gt; 
 &lt;li&gt;ST STM32F2xx - 0x5d1a0a2e&lt;/li&gt; 
 &lt;li&gt;ST STM32F3xx - 0x6b846188&lt;/li&gt; 
 &lt;li&gt;ST STM32F401 - 0x57755a57&lt;/li&gt; 
 &lt;li&gt;ST STM32F407 - 0x6d0922fa&lt;/li&gt; 
 &lt;li&gt;ST STM32F407VG - 0x8fb060fe&lt;/li&gt; 
 &lt;li&gt;ST STM32F7xx - 0x53b80f00&lt;/li&gt; 
 &lt;li&gt;ST STM32G0xx - 0x300f5633&lt;/li&gt; 
 &lt;li&gt;ST STM32G4xx - 0x4c71240a&lt;/li&gt; 
 &lt;li&gt;ST STM32H7xx - 0x6db66082&lt;/li&gt; 
 &lt;li&gt;ST STM32L0xx - 0x202e3a91&lt;/li&gt; 
 &lt;li&gt;ST STM32L1xx - 0x1e1f432d&lt;/li&gt; 
 &lt;li&gt;ST STM32L4xx - 0x00ff6919&lt;/li&gt; 
 &lt;li&gt;ST STM32L5xx - 0x04240bdf&lt;/li&gt; 
 &lt;li&gt;ST STM32WBxx - 0x70d16653&lt;/li&gt; 
 &lt;li&gt;ST STM32WLxx - 0x21460ff0&lt;/li&gt; 
 &lt;li&gt;Microchip (Atmel) ATmega32 - 0x16573617&lt;/li&gt; 
 &lt;li&gt;Cypress FX2 - 0x5a18069b&lt;/li&gt; 
 &lt;li&gt;ESP8266 - 0x7eab61ed&lt;/li&gt; 
 &lt;li&gt;ESP32 - 0x1c5f21b0&lt;/li&gt; 
 &lt;li&gt;ESP32-S2 - 0xbfdd4eee&lt;/li&gt; 
 &lt;li&gt;ESP32-C3 - 0xd42ba06c&lt;/li&gt; 
 &lt;li&gt;ESP32-S3 - 0xc47e5767&lt;/li&gt; 
 &lt;li&gt;NXP i.MX RT10XX - 0x4fb2d5bd&lt;/li&gt; 
 &lt;li&gt;NXP LPC55xx - 0x2abc77ec&lt;/li&gt; 
 &lt;li&gt;GD32F350 - 0x31d228c6&lt;/li&gt; 
 &lt;li&gt;Raspberry Pi RP2040 - 0xe48bff56&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Rationale&lt;/h3&gt; 
&lt;p&gt;The magic number at the end is meant to mitigate partial block writes.&lt;/p&gt; 
&lt;p&gt;Second and final magic numbers were randomly selected, except for the last byte of final magic number, which was forced to be &lt;code&gt;&#39;\n&#39;&lt;/code&gt; (&lt;code&gt;0xA&lt;/code&gt;). Together with the first magic number being &lt;code&gt;&quot;UF2\n&quot;&lt;/code&gt; this makes it easy to identify UF2 blocks in a text editor.&lt;/p&gt; 
&lt;p&gt;The header is padded to 32 bytes, as hex editors commonly use 16 or 32 bytes as line length. This way, the data payload is aligned to line start.&lt;/p&gt; 
&lt;p&gt;32 bit integers are used for all fields so that large flash sizes can be supported in future, as well as for simplicity. Little endian is used, as most microcontrollers are little endian. 8 bit microcontrollers can choose to just use the first 16 bits of various header fields.&lt;/p&gt; 
&lt;p&gt;The total number of blocks in the file and the sequential block number make it easy for the bootloader to detect that all blocks have been transferred. It requires one bit of memory per block (eg., on SAMD21G18A it&#39;s 128 bytes). Alternatively, the bootloader might ignore that and just implement a reset after say 1 second break in incoming UF2 blocks.&lt;/p&gt; 
&lt;h3&gt;Payload sizes&lt;/h3&gt; 
&lt;p&gt;The number of data bytes is configurable and depends on the size of the flash page (that is the smallest size that can be erased) on the microcontroller.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;if the page size is more than &lt;code&gt;476&lt;/code&gt; bytes, the bootloader should support any payload size, as it needs to buffer the entire page in memory anyway&lt;/li&gt; 
 &lt;li&gt;if the page size is less than &lt;code&gt;476&lt;/code&gt; bytes, the payload should be a multiple of page size, so it can be written without buffering; the target address should also be a multiple of page size&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In any event, payload size and target address should always be 4-byte aligned.&lt;/p&gt; 
&lt;p&gt;Note that payload size of &lt;code&gt;256&lt;/code&gt; is always correct, and makes it easy to convert between flash addresses and UF2 file offsets.&lt;/p&gt; 
&lt;p&gt;For example, on Atmel&#39;s SAMD21 chips the page size is &lt;code&gt;256&lt;/code&gt; bytes, and this also is the payload size. If the page size was &lt;code&gt;128&lt;/code&gt; bytes, one could use payload of &lt;code&gt;128*3&lt;/code&gt;. Nordic nRF51 has page size of &lt;code&gt;1024&lt;/code&gt; bytes, and thus any payload size should be allowed.&lt;/p&gt; 
&lt;h3&gt;Embedding sources&lt;/h3&gt; 
&lt;p&gt;Some IDEs will embed program sources in the UF2 file. This allows a UF2 files to be loaded by the IDE and serve as a natural backup and transfer format. This can be done in two ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;using the &quot;not main flash&quot; flag&lt;/li&gt; 
 &lt;li&gt;using normal blocks that are flashed to the device&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the bootloader can expose &lt;code&gt;CURRENT.UF2&lt;/code&gt; file (see below) and there is enough flash available, than the second option is more desirable, as it allows sharing programs directly from the board.&lt;/p&gt; 
&lt;p&gt;See https://makecode.com/source-embedding for more info.&lt;/p&gt; 
&lt;h3&gt;Robustness&lt;/h3&gt; 
&lt;p&gt;The file format is designed specifically to deal with the following problems:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;operating system (OS) writing blocks in different order than occurs in a file&lt;/li&gt; 
 &lt;li&gt;OS writing blocks multiple times&lt;/li&gt; 
 &lt;li&gt;OS writing data that is not UF2 blocks&lt;/li&gt; 
 &lt;li&gt;OS writing first/final part of a block, possibly for metadata detection or search indexing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The only file system assumption we make is that blocks of file are aligned with blocks on the hard drive. It&#39;s likely true of many file systems besides FAT.&lt;/p&gt; 
&lt;p&gt;We also assume that USB MSC device reports its block size to be a multiple of &lt;code&gt;512&lt;/code&gt; bytes. In the wild these devices always almost report exactly &lt;code&gt;512&lt;/code&gt;, and some operating systems do not support other values.&lt;/p&gt; 
&lt;h2&gt;Files exposed by bootloaders&lt;/h2&gt; 
&lt;p&gt;Bootloaders may expose virtual files in their MSC devices. These are standardized here, so that flashing tools can automatically detect the bootloaders.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;INFO_UF2.TXT&lt;/code&gt; - contains information about the bootloader build and the board on which it is running&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;INDEX.HTM&lt;/code&gt; - redirects to a page that contains an IDE or other information&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CURRENT.UF2&lt;/code&gt; - the contents of the entire flash of the device, starting at &lt;code&gt;0x00000000&lt;/code&gt;, with &lt;code&gt;256&lt;/code&gt; payload size; thus, the size of this file will report as twice the size of flash&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Flashing tools can use the presence of &lt;code&gt;INFO_UF2.TXT&lt;/code&gt; (in upper or lower case, as FAT is case-insensitive) file as an indication that a given directory is actually a connected UF2 board. The other files should not be used for detection.&lt;/p&gt; 
&lt;p&gt;Typical &lt;code&gt;INFO_UF2.TXT&lt;/code&gt; file looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;UF2 Bootloader v1.1.3 SFA
Model: Arduino Zero
Board-ID: SAMD21G18A-Zero-v0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;Board-ID&lt;/code&gt; field is machine-readable and consists of a number of dash-separated tokens. The first token is the CPU type, second is the board type, and third is the board revision. More tokens can be also added.&lt;/p&gt; 
&lt;p&gt;The bootloader should contain its info file as a static string somewhere in its code. If possible, the last word of the bootloader code should point to this string. This way, the info file can be found in the initial section of the &lt;code&gt;CURRENT.UF2&lt;/code&gt; file as well. Thus, a board type can be determined from the contents of &lt;code&gt;CURRENT.UF2&lt;/code&gt;. This is particularly useful with the source embedding (see above).&lt;/p&gt; 
&lt;h2&gt;File containers&lt;/h2&gt; 
&lt;p&gt;It is also possible to use the UF2 format as a container for one or more regular files (akin to a TAR file, or ZIP archive without compression). This is useful when the embedded device being flashed sports a file system.&lt;/p&gt; 
&lt;p&gt;The program to run may reside in one of the files, or in the main flash memory.&lt;/p&gt; 
&lt;p&gt;In such a usage the &lt;code&gt;file container&lt;/code&gt; flag is set on blocks, the field &lt;code&gt;fileSize&lt;/code&gt; holds the file size of the current file, and the field &lt;code&gt;targetAddr&lt;/code&gt; holds the offset in current file.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;not main flash&lt;/code&gt; flag on blocks should be ignored when the &lt;code&gt;file container&lt;/code&gt; is set.&lt;/p&gt; 
&lt;p&gt;The file name is stored at &lt;code&gt;&amp;amp;data[payloadSize]&lt;/code&gt; (ie., right after the actual payload) and terminated with a &lt;code&gt;0x00&lt;/code&gt; byte. The format of filename is dependent on the bootloader (usually implemented as some sort of file system daemon).&lt;/p&gt; 
&lt;p&gt;The bootloader will usually allow any size of the payload.&lt;/p&gt; 
&lt;p&gt;The current files on device might be exposed as multiple UF2 files, instead of a single &lt;code&gt;CURRENT.UF2&lt;/code&gt;. They may reside in directories, however, due to UF2 general design, it doesn&#39;t matter which directory the UF2 file is written to.&lt;/p&gt; 
&lt;p&gt;Typical writing procedure is as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;validate UF2 magic numbers&lt;/li&gt; 
 &lt;li&gt;make sure that &lt;code&gt;targetAddr &amp;lt; fileSize&lt;/code&gt; and that &lt;code&gt;fileSize&lt;/code&gt; isn&#39;t out of reasonable range&lt;/li&gt; 
 &lt;li&gt;write &lt;code&gt;0x00&lt;/code&gt; at &lt;code&gt;data[475]&lt;/code&gt; to ensure NUL termination of file name&lt;/li&gt; 
 &lt;li&gt;read file name from &lt;code&gt;&amp;amp;data[payloadSize]&lt;/code&gt;; perform any mapping on the file name&lt;/li&gt; 
 &lt;li&gt;create a directory where the file is to be written if doesn&#39;t exists&lt;/li&gt; 
 &lt;li&gt;open the file for writing&lt;/li&gt; 
 &lt;li&gt;truncate the file to &lt;code&gt;fileSize&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;seek &lt;code&gt;targetAddr&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;write the payload (ie., &lt;code&gt;data[0 ... payloadSize - 1]&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;close the file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The fields &lt;code&gt;blockNo&lt;/code&gt; and &lt;code&gt;numBlocks&lt;/code&gt; refer to the entire UF2 file, not the current file.&lt;/p&gt; 
&lt;h2&gt;MD5 checksum&lt;/h2&gt; 
&lt;p&gt;When the &lt;code&gt;0x4000&lt;/code&gt; flag is set, the last 24 bytes of &lt;code&gt;data[]&lt;/code&gt; hold the following structure:&lt;/p&gt; 
&lt;p&gt;| Offset | Size | Value | |--------|------|---------------------------------------------------| | 0 | 4 | Start address of region | | 4 | 4 | Length of region in bytes | | 8 | 16 | MD5 checksum in binary format |&lt;/p&gt; 
&lt;p&gt;The flashing program should compute the MD5 sum of the specified region. If the region checksum matches, flashing of the current block can be skipped. Typically, many blocks in sequence will have the same region specified, and can all be skipped, if the matching succeeded. The position of the current block will typically be inside of the region. The position and size of the region should be multiple of page erase size (4k or 64k on typical SPI flash).&lt;/p&gt; 
&lt;p&gt;This is currently only used on ESP32, which is also why MD5 checksum is used.&lt;/p&gt; 
&lt;h2&gt;Extension tags&lt;/h2&gt; 
&lt;p&gt;When the &lt;code&gt;0x8000&lt;/code&gt; flag is set, additional information can be appended right after payload data (i.e., it starts at &lt;code&gt;32 + payloadSize&lt;/code&gt;). Every tag starts at 4 byte boundary. The first byte of tag contains its total size in bytes (including the size byte and type designation). The next three bytes designate the type of tag (if you want to define custom tags, pick them at random). The last tag has size of &lt;code&gt;0&lt;/code&gt; and type of &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Standard tag designations follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;0x9fc7bc&lt;/code&gt; - version of firmware file - UTF8 semver string&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0x650d9d&lt;/code&gt; - description of device for which the firmware file is destined (UTF8)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0x0be9f7&lt;/code&gt; - page size of target device (32 bit unsigned number)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0xb46db0&lt;/code&gt; - SHA-2 checksum of firmware (can be of various size)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;0xc8a729&lt;/code&gt; - device type identifier - a refinement of &lt;code&gt;familyID&lt;/code&gt; meant to identify a kind of device (eg., a toaster with specific pinout and heating unit), not only MCU; 32 or 64 bit number; can be hash of &lt;code&gt;0x650d9d&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, the following bytes encode firmware version &lt;code&gt;0.1.2&lt;/code&gt; for device named &lt;code&gt;ACME Toaster mk3&lt;/code&gt; (line breaks added for clarity):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;09 bc c7 9f 30 2e 31 2e 32 00 00 00
14 9d 9d 65 41 43 4d 45 20 54 6f 61 73 74 65 72 20 6d 6b 33
00 00 00 00
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Extension tags can, but don&#39;t have to, be repeated in all blocks.&lt;/p&gt; 
&lt;h2&gt;Implementations&lt;/h2&gt; 
&lt;h3&gt;Bootloaders&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/uf2-samdx1&quot;&gt;Microchip ATSAMD21 and ATSAMD51&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmoskal/uf2-uno&quot;&gt;Arduino UNO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmoskal/uf2-stm32&quot;&gt;STM32F103&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmoskal/uf2-stm32f&quot;&gt;STM32F4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adafruit/Adafruit_nRF52840_Bootloader&quot;&gt;Nordic NRF52840&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/uf2-linux&quot;&gt;Linux (RPi Zero)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/whitequark/libfx2/tree/master/firmware/boot-uf2&quot;&gt;Cypress FX2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adafruit/tinyuf2&quot;&gt;Tiny UF2&lt;/a&gt; - Support ESP32-S2, iMXRT10xx, STM32F4&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-pico/&quot;&gt;RP2040 chip&lt;/a&gt; - native support in silicon&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There&#39;s an ongoing effort to implement UF2 in &lt;a href=&quot;https://github.com/lancaster-university/codal-core&quot;&gt;Codal&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Editors&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://arcade.makecode.com&lt;/li&gt; 
 &lt;li&gt;https://makecode.adafruit.com&lt;/li&gt; 
 &lt;li&gt;https://makecode.seeedstudio.com&lt;/li&gt; 
 &lt;li&gt;https://maker.makecode.com&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can’t reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread operator over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ಠ_ಠ
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It’s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it’s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function’s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it’s time to extract it to its own module! Don’t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error’s call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn’t mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn’t have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread operator &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s cleaner, you don’t need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It’s okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires to use specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let’s start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// … some other imports … //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don’t use iterators. Prefer JavaScript’s higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don’t use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don’t transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don’t chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It’s important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn’t work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer’s intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you’re using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block’s closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it’s on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you’re pointing out a problem that needs to be revisited, or if you’re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn’t use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
∙∙∙∙let name;
}

// bad
function bar() {
∙let name;
}

// good
function baz() {
∙∙let name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/blob/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
↵
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/blob/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That’s impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That’s impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn’t guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you’re doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean “private”, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won’t count as breaking, or that tests aren’t needed. tl;dr: if you want something to be “private”, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don’t save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function’s name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It’s okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &quot;hash&quot;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;http://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;’s ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it’s not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/blob/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/blob/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mobæk, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don’t Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/blob/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury’s Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team’s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Ebazhanov/linkedin-skill-assessments-quizzes</title>
      <link>https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes</link>
      <description>&lt;p&gt;Full reference of linkedin answers for skill assessments, linkedin test, questions and answers (aws-lambda, rest-api, javascript, react, git, html, jquery, mongodb, java, css, python, machine-learning, power-poin, excel ...) ответы на квиз, LinkedIn quiz lösungen, linkedin quiz las respuestas&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Linkedin Quiz Answers, Skill Assessments Test&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#contributors-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/all_contributors-244-orange.svg?style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This repository is for those looking for answers to the LinkedIn assessment quiz questions or willing to help others by contributing to the tests. Or possibly you would like to create your first pull request and be added as a contributor. Whatever is your goal - you are always welcome here!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| Linkedin-quiz-questions | | Status | | ---------------------------------------------------------------------------- | --------------- | ------------------------------ | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-illustrator/adobe-illustrator-quiz.md&quot;&gt;Adobe-Illustrator&lt;/a&gt; | =&amp;gt; 51 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-photoshop/adobe-photoshop-quiz.md&quot;&gt;Adobe-Photoshop&lt;/a&gt; | =&amp;gt; 36 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/agile-methodologies/agile-methodologies-quiz.md&quot;&gt;Agile Methodologies&lt;/a&gt; | =&amp;gt; 76 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/android/android-quiz.md&quot;&gt;Android&lt;/a&gt; | =&amp;gt; 44 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/angularjs/angularjs-quiz.md&quot;&gt;AngularJs&lt;/a&gt; | =&amp;gt; 15 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/aws/aws-quiz.md&quot;&gt;AWS&lt;/a&gt; | =&amp;gt; 28 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/aws-lambda/aws-lambda-quiz.md&quot;&gt;AWS-Lambda&lt;/a&gt; :fire: | =&amp;gt; 44 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/bash/bash-quiz.md&quot;&gt;Bash&lt;/a&gt; | =&amp;gt; 53 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c%23/c-sharp-quiz.md&quot;&gt;C#&lt;/a&gt; | =&amp;gt; 48 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c%2B%2B/c%2B%2Bquiz.md&quot;&gt;C++&lt;/a&gt; | =&amp;gt; 33 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c-(programming-language)/c-quiz.md&quot;&gt;C (Programming Language)&lt;/a&gt; | =&amp;gt; 25 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/css/css-quiz.md&quot;&gt;CSS&lt;/a&gt; | =&amp;gt; 54 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/django/django-quiz.md&quot;&gt;Django&lt;/a&gt; | =&amp;gt; 48 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/dotnet-framework/dotnet-framework-quiz.md&quot;&gt;.NET Framework&lt;/a&gt; | =&amp;gt; 37 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/git/git-quiz.md&quot;&gt;Git&lt;/a&gt; :star: | =&amp;gt; 90 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/google-analytics/google-analytics-quiz.md&quot;&gt;Google Analytics&lt;/a&gt; | =&amp;gt; 65 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/google-cloud-platform/gcp-quiz.md&quot;&gt;Google Cloud Platform (GCP)&lt;/a&gt; | =&amp;gt; 27 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/hadoop/hadoop-quiz.md&quot;&gt;Hadoop&lt;/a&gt; | =&amp;gt; 18 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/html/html-quiz.md&quot;&gt;HTML&lt;/a&gt; | =&amp;gt; 61 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/java/java-quiz.md&quot;&gt;Java&lt;/a&gt; | =&amp;gt; 64 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/javascript/javascript-quiz.md&quot;&gt;Javascript&lt;/a&gt; | =&amp;gt; 69 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/jquery/jquery-quiz.md&quot;&gt;jQuery&lt;/a&gt; :open_mouth: | =&amp;gt; 50 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/json/json-quiz.md&quot;&gt;JSON&lt;/a&gt; | =&amp;gt; 51 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/machine-learning/machine-learning-quiz.md&quot;&gt;Machine Learning&lt;/a&gt; | =&amp;gt; 67 questions | answers required | | Kotlin | =&amp;gt; 0 questions | NO question and NO answers yet | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/matlab/matlab-quiz.md&quot;&gt;MATLAB&lt;/a&gt; | =&amp;gt; 45 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/maven/maven-quiz.md&quot;&gt;Maven&lt;/a&gt; :fire: | =&amp;gt; 34 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-azure/microsoft-azure-quiz.md&quot;&gt;Microsoft Azure&lt;/a&gt; | =&amp;gt; 44 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-excel/microsoft-excel-quiz.md&quot;&gt;Microsoft Excel&lt;/a&gt; | =&amp;gt; 48 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-outlook/microsoft-outlook-quiz.md&quot;&gt;Microsoft Outlook&lt;/a&gt; | =&amp;gt; 12 questions | no answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-power-bi/microsoft-power-bi-quiz.md&quot;&gt;Microsoft Power BI&lt;/a&gt; | =&amp;gt; 26 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-power-point/microsoft-power-point-quiz.md&quot;&gt;Microsoft Power Point&lt;/a&gt; | =&amp;gt; 21 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-project/microsoft-project-quiz.md&quot;&gt;Microsoft Project&lt;/a&gt; | =&amp;gt; 41 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-word/microsoft-word-quiz.md&quot;&gt;Microsoft Word&lt;/a&gt; | =&amp;gt; 42 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/mongodb/mongodb-quiz.md&quot;&gt;MongoDB&lt;/a&gt; | =&amp;gt; 46 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/mysql/mysql-quiz.md&quot;&gt;MySQL&lt;/a&gt; | =&amp;gt; 64 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/node.js/node.js-quiz.md&quot;&gt;node.js&lt;/a&gt; | =&amp;gt; 40 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/nosql/nosql-quiz.md&quot;&gt;NoSQL&lt;/a&gt; | =&amp;gt; 43 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/objective-c/objective-c-quiz.md&quot;&gt;objective-c&lt;/a&gt; | =&amp;gt; 33 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/oop/object-oriented-programming-quiz.md&quot;&gt;OOP&lt;/a&gt; | =&amp;gt; 50 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/php/php-quiz.md&quot;&gt;PHP&lt;/a&gt; | =&amp;gt; 29 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/python/python-quiz.md&quot;&gt;Python&lt;/a&gt; | =&amp;gt; 67 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/r/r-quiz.md&quot;&gt;R&lt;/a&gt; | =&amp;gt; 29 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/react/reactjs-quiz.md&quot;&gt;React.js&lt;/a&gt; :rose: | =&amp;gt; 51 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/rest-api/rest-api-quiz.md&quot;&gt;REST API&lt;/a&gt; :+1: | =&amp;gt; 34 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/scala/scala-quiz.md&quot;&gt;Scala&lt;/a&gt; | =&amp;gt; 25 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/seo/search-engine-optimization-quiz.md&quot;&gt;Search Engine Optimization (SEO)&lt;/a&gt; | =&amp;gt; 30 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/sharepoint/sharepoint-quiz.md&quot;&gt;SharePoint&lt;/a&gt; | =&amp;gt; 29 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/swift/swift-quiz.md&quot;&gt;Swift&lt;/a&gt; | =&amp;gt; 48 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/t-sql/t-sql-quiz.md&quot;&gt;Transact-SQL (T-SQL)&lt;/a&gt; | =&amp;gt; 28 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/vba/vba-quiz.md&quot;&gt;Visual Basic for Applications (VBA)&lt;/a&gt; | =&amp;gt; 11 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/windows-server/windows-server-quiz.md&quot;&gt;Windows Server&lt;/a&gt; | =&amp;gt; 46 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/wordpress/wordpress-quiz.md&quot;&gt;WordPress&lt;/a&gt; | =&amp;gt; 42 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/xml/xml-quiz.md&quot;&gt;XML&lt;/a&gt; | =&amp;gt; 21 questions | answers required |&lt;/p&gt; 
&lt;p&gt;:point_right: If you want to improve your skills on another test platform &lt;a href=&quot;https://www.pluralsight.com/product/skill-iq&quot;&gt;&lt;strong&gt;Pluralsight IQ Skill&lt;/strong&gt;&lt;/a&gt; find &lt;strong&gt;questions and answers&lt;/strong&gt; in &lt;strong&gt;@Timo Körner&lt;/strong&gt; &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-test&quot;&gt;repository&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;| Pluralsight IQ Skill quiz | Status | | ----------------------------------------------------------------------------------------------------------------------------------- | ---------- | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/angular.md&quot;&gt;Angular&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/angularjs.md&quot;&gt;AngularJs&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/aws_big_data.md&quot;&gt;Aws Big Data&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/aws_machine_learning.md&quot;&gt;Aws Machine Learning&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/building_websites.md&quot;&gt;Building Websites&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/building_web_apps_with_react.md&quot;&gt;Building Web Apps with React&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/java.md&quot;&gt;Java&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/javascript.md&quot;&gt;Javascript&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/mysql.md&quot;&gt;Mysql&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/powershell.md&quot;&gt;Powershell&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_core.md&quot;&gt;Python Core&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_data_analysis.md&quot;&gt;Python Data Analysis&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_applied_data_mining.md&quot;&gt;Python applied Data Mining&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_web_scraping.md&quot;&gt;Python Web Scraping&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_exploratory_data_analysis.md&quot;&gt;Python Exploratory Data Analysis&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_clean_data.md&quot;&gt;Python Clean Data&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_data_visualization.md&quot;&gt;Python Data Visualization&lt;/a&gt; | 18 answers |&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Format&lt;/h2&gt; 
&lt;p&gt;We recommend formatting files using &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; code formatter. Prettier comes installed with the IDE &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/code.visualstudio.com&quot;&gt;Vscode&lt;/a&gt; which we recommend for preparing the md files. It works on all OS. If you want to run it independently, get &lt;strong&gt;npm&lt;/strong&gt; and:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run format
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/Ebazhanov/linkedin-quiz-assessments&quot;&gt;&lt;img src=&quot;https://starchart.cc/Ebazhanov/linkedin-quiz-assessments.svg&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Haehnchen/crypto-trading-bot</title>
      <link>https://github.com/Haehnchen/crypto-trading-bot</link>
      <description>&lt;p&gt;Cryptocurrency trading bot in javascript for Bitfinex, Bitmex, Binance, FTX, Bybit ... (public edition)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Crypto Trading Bot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/Haehnchen/crypto-trading-bot&quot;&gt;&lt;img src=&quot;https://travis-ci.org/Haehnchen/crypto-trading-bot.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A &lt;strong&gt;work in progress&lt;/strong&gt; Cryptocurrency for common exchanges like Bitfinex, Bitmex and Binance. As most trading bots just provide basic buy and sell signals they provide many stuff to get profitable eg exchange orders like stop-losses or stop-limits are not supported by main bots. Also the limitation of fixed timeframe and technical indicators must be broken&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Not production ready&lt;/strong&gt; only basic functionality&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully use Websocket for exchange communication to react as fast as possible on market&lt;/li&gt; 
 &lt;li&gt;Multi pair support in one instance&lt;/li&gt; 
 &lt;li&gt;sqlite3 storage for candles, tickers, ...&lt;/li&gt; 
 &lt;li&gt;Webserver UI&lt;/li&gt; 
 &lt;li&gt;Support for going &quot;Short&quot; and &quot;Long&quot;&lt;/li&gt; 
 &lt;li&gt;Signal browser dashboard for pairs&lt;/li&gt; 
 &lt;li&gt;Slack and email notification&lt;/li&gt; 
 &lt;li&gt;Join foreign exchange candles (eg. Trade on Bitmex with the faster moving Binance trades / candles)&lt;/li&gt; 
 &lt;li&gt;TODO: Show possible arbitrage trades&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Exchanges&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitmex.com/register/jS4mLN&quot;&gt;Bitmex&lt;/a&gt; with leverage configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitmex.com/register/jS4mLN&quot;&gt;Bitmex Testnet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/?ref=17569916&quot;&gt;Binance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/?ref=17569916&quot;&gt;Binance Margin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/en/futures/ref/302644&quot;&gt;Binance Futures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coinbase.com/join/5a2ae60e76531100d3af2ee5&quot;&gt;Coinbase Pro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitfinex.com/?refcode=kDLceRHa&quot;&gt;Bitfinex&lt;/a&gt; (margin wallet)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybit.com/app/register?ref=46AK7&quot;&gt;Bybit&lt;/a&gt; with leverage configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ftx.com/#a=1494781&quot;&gt;FTX&lt;/a&gt; (Perpetual Futures only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;TODOS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hbg.com/&quot;&gt;Huobi Global&lt;/a&gt; (margin)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical stuff and packages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;node.js&lt;/li&gt; 
 &lt;li&gt;sqlite3&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anandanand84/technicalindicators&quot;&gt;technicalindicators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tulipindicators.org/list&quot;&gt;tulipindicators - tulind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mrjbq7.github.io/ta-lib/&quot;&gt;TA-Lib&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;twig&lt;/li&gt; 
 &lt;li&gt;express&lt;/li&gt; 
 &lt;li&gt;Bootstrap v4&lt;/li&gt; 
 &lt;li&gt;Tradingview widgets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;h3&gt;[optional] Preinstall&lt;/h3&gt; 
&lt;p&gt;The tulip library is used for indicators; which sometimes is having some issues on &lt;code&gt;npm install&lt;/code&gt; because of code compiling:&lt;/p&gt; 
&lt;p&gt;Install build tools&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The nodejs wrapper for tulipindicators is called &lt;a href=&quot;https://www.npmjs.com/package/tulind&quot;&gt;Tulip Node (tuind)&lt;/a&gt;, check out installation instructions there.&lt;/p&gt; 
&lt;p&gt;Also the build from source is not supporting all nodejs version. It looks like versions &amp;lt;= 10 are working. You can use nodejs 12 if you compiled it once via older version.&lt;/p&gt; 
&lt;h3&gt;Install packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;➜ npm install --production
➜ npm run postinstall
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create instance file for pairs and changes&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cp instance.js.dist instance.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Provide a configuration with your exchange credentials&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cp conf.json.dist conf.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a new sqlite database use bot.sql scheme to create the tables&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sqlite3 bot.db &amp;lt; bot.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lets start it&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use: Docker&lt;/h2&gt; 
&lt;p&gt;For initialize the configuration once&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;➜ cp instance.js.dist instance.js &amp;amp;&amp;amp; cp conf.json.dist conf.json &amp;amp;&amp;amp; sqlite3 bot.db &amp;lt; bot.sql
➜ docker-compose build
➜ docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After this you can use &lt;code&gt;docker-compose&lt;/code&gt; which will give you a running bot via &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setting Up Telegram Bot&lt;/h2&gt; 
&lt;p&gt;First, you&#39;ll need to create a bot for Telegram. Just talk to &lt;a href=&quot;https://telegram.me/botfather&quot;&gt;BotFather&lt;/a&gt; and follow simple steps until it gives you a token for it. You&#39;ll also need to create a Telegram group, the place where you and crypto-trading-bot will communicate. After creating it, add the bot as administrator (make sure to uncheck &quot;All Members Are Admins&quot;).&lt;/p&gt; 
&lt;h3&gt;Retrieving Chat IDs&lt;/h3&gt; 
&lt;p&gt;Invite &lt;code&gt;@RawDataBot&lt;/code&gt; to your group and get your group id in sended chat id field&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Message
 ├ message_id: 338
 ├ from
 ┊  ├ id: *****
 ┊  ├ is_bot: false
 ┊  ├ first_name: 사이드
 ┊  ├ username: ******
 ┊  └ language_code: en
 ├ chat
 ┊  ├ id: -1001118554477
 ┊  ├ title: Test Group
 ┊  └ type: supergroup
 ├ date: 1544948900
 └ text: A
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Look for id: -1001118554477 is your chat id (with the negative sign).&lt;/p&gt; 
&lt;h2&gt;Webserver&lt;/h2&gt; 
&lt;p&gt;Some browser links&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UI: http://127.0.0.1:8080&lt;/li&gt; 
 &lt;li&gt;Signals: http://127.0.0.1:8080/signals&lt;/li&gt; 
 &lt;li&gt;Tradingview: http://127.0.0.1:8080/tradingview/BTCUSD&lt;/li&gt; 
 &lt;li&gt;Backtesting: http://127.0.0.1:8080/backtest&lt;/li&gt; 
 &lt;li&gt;Order &amp;amp; Pair Management: http://127.0.0.1:8080/pairs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security / Authentication&lt;/h3&gt; 
&lt;p&gt;As the webserver provides just basic auth for access you should combine some with eh a https for public server. Here s simple &lt;code&gt;proxy_pass&lt;/code&gt; for nginx.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# /etc/nginx/sites-available/YOURHOST
server {
    server_name YOURHOST;

    location / {
        proxy_pass http://127.0.0.1:8080;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/YOURHOST/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/YOURHOST/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should also set the listen ip to a local one&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# config.json
webserver.ip: 127.0.0.1

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;h3&gt;Dashboard&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/cryptobot.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Webserver UI&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Trades / Positions / Orders&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/trades.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Trades / Positions / Orders&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Backtesting&lt;/h3&gt; 
&lt;p&gt;Currently there is a the UI for backtesting&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/backtest_result.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Backtest Result&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Manual Orders&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/manual_order.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Manual Orders&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Build In Strategies&lt;/h2&gt; 
&lt;p&gt;Common strategy with indicators are inside, which most of the time are not profitable. See some more advanced strategy in the list below&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies/dip_catcher/README.md&quot;&gt;dip_catcher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies/dca_dipper/README.md&quot;&gt;dca_dipper&lt;/a&gt; - &lt;strong&gt;Long term invest&lt;/strong&gt; Dollar-Cost Averaging (DCA) Dip Investor Strategy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Find some example strategies inside &lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies&quot;&gt;src/modules/strategy/strategies&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Custom Strategies&lt;/h2&gt; 
&lt;p&gt;For custom strategies use &lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/var/strategies&quot;&gt;var/strategies&lt;/a&gt; folder.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# simple file structure
var/strategies/your_strategy.js

# or wrap strategy into any sub folder depth
var/strategies/my_strategy/my_strategy.js
var/strategies/subfolder1/our_strategy/our_strategy.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools / Watchdog&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;order_adjust&lt;/code&gt; Keep open orders in bid / ask of the orderbook in first position&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Watchdog&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;stoploss&lt;/code&gt; provide general stoploss order in percent of entry price (Exchange Order)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;risk_reward_ratio&lt;/code&gt; Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stoploss_watch&lt;/code&gt; Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trailing_stop&lt;/code&gt; Use native exchange trailing stop; if supported by exchange eg &lt;code&gt;Bitfinex&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;    &#39;watchdogs&#39;: [
        {
            &#39;name&#39;: &#39;stoploss&#39;,
            &#39;percent&#39;: 3,
        },
        {
            &#39;name&#39;: &#39;risk_reward_ratio&#39;,
            &#39;target_percent&#39;: 6,
            &#39;stop_percent&#39;: 3,
        },
        {
            &#39;name&#39;: &#39;stoploss_watch&#39;,
            &#39;stop&#39;: 1.2,
        },
        {
            &#39;name&#39;: &#39;trailing_stop&#39;,
            &#39;target_percent&#39;: 1.2,
            &#39;stop_percent&#39;: 0.5
        }
    ],
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Tick Interval&lt;/h3&gt; 
&lt;p&gt;Per default every strategy is &quot;ticked&quot; every full minute with a ~10sec time window. If you want to tick every 15 minutes or less see possible examples below.&lt;/p&gt; 
&lt;p&gt;Supported units are &quot;m&quot; (minute) and &quot;s&quot; (seconds)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
   &quot;strategies&quot;:[
      {
         &quot;strategy&quot;:&quot;cci&quot;,
         &quot;interval&quot;:&quot;15m&quot;
      },
      {
         &quot;strategy&quot;:&quot;cci2&quot;,
         &quot;interval&quot;:&quot;30s&quot;
      },
      {
         &quot;strategy&quot;:&quot;cci3&quot;,
         &quot;interval&quot;:&quot;60m&quot;
      }
   ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trading&lt;/h2&gt; 
&lt;h3&gt;Capital&lt;/h3&gt; 
&lt;p&gt;To allow the bot to trade you need to give some &quot;playing capital&quot;. You can allow to by via asset or currency amount, see examples below. You should only provide one of them, first wins.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    c.symbols.push({
        &#39;symbol&#39;: &#39;BTC-EUR&#39;,
        &#39;exchange&#39;: &#39;coinbase_pro&#39;,
        &#39;trade&#39;: {
            &#39;capital&#39;: 0.015, // this will buy 0.015 BTC
            &#39;currency_capital&#39;: 50,  // this will use 50 EUR and buys the equal amount of BTC (example: BTC price 3000 use 50 EUR. will result in 0.016 BTC)
            &#39;balance_percent&#39;: 75,  // this will use 75 % of your exchange margin tradable balance. Currently implemented only on Bitfinex exchange.
        },
    })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Live Strategy&lt;/h3&gt; 
&lt;p&gt;Every strategy stat should be live must be places inside &lt;code&gt;trade&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  {
    &quot;trade&quot;: {
      &quot;strategies&quot;: [
        {
          &quot;strategy&quot;: &quot;dip_catcher&quot;,
          &quot;interval&quot;: &quot;15m&quot;,
          &quot;options&quot;: {
            &quot;period&quot;: &quot;15m&quot;
          }
        }
      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Inside logs, visible via browser ui, you can double check the strategies init process after the application started.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[info] Starting strategy intervals
[info] &quot;binance_futures&quot; - &quot;ETHUSDT&quot; - &quot;trade&quot; - init strategy &quot;dip_catcher&quot; (15m) in 11.628 minutes
[info] &quot;binance_futures&quot; - &quot;BTCUSDT&quot; - &quot;trade&quot; first strategy run &quot;dip_catcher&quot; now every 15.00 minutes
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Full Trade Example&lt;/h3&gt; 
&lt;p&gt;An example &lt;code&gt;instance.js&lt;/code&gt; which trades can be found inside &lt;code&gt;instance.js.dist_trade&lt;/code&gt;. Rename it or move the content to you file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const c = (module.exports = {});

c.symbols = [
  {
    symbol: &#39;ETHUSDT&#39;,
    exchange: &#39;binance_futures&#39;,
    periods: [&#39;1m&#39;, &#39;15m&#39;, &#39;1h&#39;],
    trade: {
      currency_capital: 10,
      strategies: [
        {
          strategy: &#39;dip_catcher&#39;,
          interval: &#39;15m&#39;,
          options: {
            period: &#39;15m&#39;
          }
        }
      ]
    },
    watchdogs: [
      {
        name: &#39;risk_reward_ratio&#39;,
        target_percent: 3.1,
        stop_percent: 2.1
      }
    ]
  }
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Margin / Leverage&lt;/h3&gt; 
&lt;p&gt;Per pair you can set used margin before orders are created; depending on exchange&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    c.symbols.push({
        &#39;symbol&#39;: &#39;BTCUSD&#39;,
        &#39;exchange&#39;: &#39;bitmex&#39;,
        &#39;extra&#39;: {
            &#39;bitmex_leverage&#39;: 5,
        },
    })

    c.symbols.push({
        &#39;symbol&#39;: &#39;EOSUSD&#39;,
        &#39;exchange&#39;: &#39;bybit&#39;,
        &#39;extra&#39;: {
            &#39;bybit_leverage&#39;: 5,
        },
    })    
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;h3&gt;Fill data&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;outdated&lt;/em&gt;, but there as an automatic filling on startup ~1000 candles from the past (depending on exchange) and continuously fetched when running&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node index.js backfill -e bitmex -p 1m -s XRPZ18
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Signals&lt;/h2&gt; 
&lt;h3&gt;Slack&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/slack_signals.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Slack signals&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Related Links&lt;/h2&gt; 
&lt;h3&gt;Trading Bots Inspiration&lt;/h3&gt; 
&lt;p&gt;Other bots with possible design pattern&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/DeviaVir/zenbot&lt;/li&gt; 
 &lt;li&gt;https://github.com/magic8bot/magic8bot&lt;/li&gt; 
 &lt;li&gt;https://github.com/askmike/gekko&lt;/li&gt; 
 &lt;li&gt;https://github.com/freqtrade/freqtrade&lt;/li&gt; 
 &lt;li&gt;https://github.com/Ekliptor/WolfBot&lt;/li&gt; 
 &lt;li&gt;https://github.com/andresilvasantos/bitprophet&lt;/li&gt; 
 &lt;li&gt;https://github.com/kavehs87/PHPTradingBot&lt;/li&gt; 
 &lt;li&gt;https://github.com/Superalgos/Superalgos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strategies&lt;/h3&gt; 
&lt;p&gt;Some strategies based on technical indicators for collection some ideas&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/freqtrade/freqtrade-strategies&lt;/li&gt; 
 &lt;li&gt;https://github.com/freqtrade/freqtrade-strategies/tree/master/user_data/strategies/berlinguyinca&lt;/li&gt; 
 &lt;li&gt;https://github.com/xFFFFF/Gekko-Strategies&lt;/li&gt; 
 &lt;li&gt;https://github.com/sthewissen/Mynt/tree/master/src/Mynt.Core/Strategies&lt;/li&gt; 
 &lt;li&gt;https://github.com/Ekliptor/WolfBot/tree/master/src/Strategies&lt;/li&gt; 
 &lt;li&gt;https://github.com/Superalgos/Strategy-BTC-WeakHandsBuster&lt;/li&gt; 
 &lt;li&gt;https://github.com/Superalgos/Strategy-BTC-BB-Top-Bounce&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>liyupi/daxigua</title>
      <link>https://github.com/liyupi/daxigua</link>
      <description>&lt;p&gt;最简单的魔改发布『 合成大西瓜 』，配套改图工具，不用改代码，修改配置即可！&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;合成大西瓜&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;声明，本项目仅帮助大家学习技术及娱乐，切勿将修改后的网站大规模传播及商用，以避免侵权！&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;最简单的魔改发布『 合成大西瓜 』，配套改图工具，不用改代码，修改配置即可！&lt;/p&gt; 
 &lt;p&gt;有帮助的话，求个大大的 star，有疑问请联系微信：liyupi66&lt;/p&gt; 
 &lt;p&gt;作者编程技术公众号&lt;a href=&quot;https://mp.weixin.qq.com/s/H9VR1MWn-9bKSC_1l_MkJw&quot;&gt;『 程序员鱼皮 』&lt;/a&gt;，欢迎关注 ❤️&lt;/p&gt; 
 &lt;p&gt;遇到问题可以先阅读本文档最后&lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3&quot;&gt; 问题及解决 &lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;详细教程：&lt;a href=&quot;https://mp.weixin.qq.com/s/H9VR1MWn-9bKSC_1l_MkJw&quot;&gt;魔改和上线你的合成大西瓜，最全教程！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;视频教程：&lt;a href=&quot;https://www.bilibili.com/video/BV1Vy4y1n7KW/&quot;&gt;全网最贴心的魔改合成大西瓜教程，从修改到发布！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未修改版在线玩：&lt;a href=&quot;https://daxigua.liyupi.com&quot;&gt;https://daxigua.liyupi.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;魔改版在线玩：&lt;a href=&quot;https://dadaxigua.liyupi.com&quot;&gt;https://dadaxigua.liyupi.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未修改版源码：&lt;a href=&quot;https://github.com/liyupi/daxigua/releases/tag/1.0.0&quot;&gt;https://github.com/liyupi/daxigua/releases/tag/1.0.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🔥 &lt;a href=&quot;https://daxigua-tools.liyupi.com&quot;&gt;新上线大西瓜改图工具，改图效率翻倍！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/assets/dadaxigua.png&quot; alt=&quot;秀爆朋友圈&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;目录&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E6%9C%AC%E5%9C%B0%E5%90%AF%E5%8A%A8&quot;&gt;本地启动&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E5%BF%AB%E9%80%9F%E9%AD%94%E6%94%B9&quot;&gt;快速魔改&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E4%B8%8A%E7%BA%BF%E5%8F%91%E5%B8%83&quot;&gt;上线发布&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E9%AD%94%E6%94%B9%E5%8E%9F%E7%90%86&quot;&gt;魔改原理&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3&quot;&gt;问题及解决&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;本地启动&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;提供两种本地启动方式，serve 和 Docker，小白建议使用第一种。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;小白适用&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;安装 serve 工具：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进入 daxigua 目录，运行 serve：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;打开浏览器访问 localhost:5000 即可！&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;已安装 Docker&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;感谢 &lt;a href=&quot;https://github.com/buchenglei&quot;&gt;buchenglei&lt;/a&gt; 的贡献&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;构建镜像&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build -t daxigua-server .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;启动容器&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -d --name play-daxigua -p5000:5000 daxigua-server
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;快速魔改&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;按照下列说明修改即可，持续补充&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;改分数：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改图片：替换 res/raw-assets 目录下指定目录的图片，必须同文件名、后缀、尺寸，成功覆盖可生效，&lt;a href=&quot;https://docs.qq.com/sheet/DS0d2VVVJYmpvZ0pZ&quot;&gt;可替换素材文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;无敌模式：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;指定第一个水果：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;指定下次出现的水果：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;大水果合成小水果：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;让水果更 Q 弹：改 extraSettings.js 文件，&lt;a href=&quot;https://docs.cocos.com/creator/api/zh/classes/PhysicsCircleCollider.html?h=circlecollider&quot;&gt;原理参考&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;水果下落速度减缓：改 extraSettings.js 文件，&lt;a href=&quot;https://docs.cocos.com/creator/manual/zh/physics/physics/rigid-body.html?h=%E5%88%9A%E4%BD%93&quot;&gt;原理参考&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;替换音乐：，覆盖 res/raw-assets 目录下相同的音乐，&lt;a href=&quot;https://docs.qq.com/sheet/DS0d2VVVJYmpvZ0pZ&quot;&gt;可替换素材文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;替换背景：和改图片原理相同，&lt;a href=&quot;https://docs.qq.com/sheet/DS0d2VVVJYmpvZ0pZ&quot;&gt;可替换素材文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;去广告：将广告图片替换为&lt;a href=&quot;https://636f-codenav-8grj8px727565176-1256524210.tcb.qcloud.la/0.png&quot;&gt;同背景色底图&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;替换广告链接：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改网站标题：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;开启选分弹窗：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击右上方图标更换水果: 改 extraSettings.js 文件（暂未支持）&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;上线发布&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;提供了多种上线发布方式，腾讯云一键部署、Vercel、腾讯云静态网站托管、GitHub Pages 等，小白建议使用 Vercel。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;腾讯云一键部署&lt;/h4&gt; 
&lt;p&gt;适用于会 fork 仓库、提交代码的同学。&lt;/p&gt; 
&lt;p&gt;点击下方按钮，无需任何操作，即可部署我的仓库到腾讯云 ⬇️&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果要替换为一键部署自己的仓库，要先 fork 我的仓库，本地修改后再提交到自己 fork 的仓库，最后把一键部署按钮仓库地址改为自己的仓库即可！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://console.cloud.tencent.com/tcb/env/index?action=CreateAndDeployCloudBaseProject&amp;amp;appUrl=https://github.com/liyupi/daxigua&amp;amp;branch=master&quot;&gt;&lt;img src=&quot;https://main.qcloudimg.com/raw/67f5a389f1ac6f3b4d04c7256438e44f.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Vercel&lt;/h4&gt; 
&lt;p&gt;适用于零基础的小白。操作简单、域名简短，但国外的服务器，比较慢。&lt;/p&gt; 
&lt;p&gt;Vercel 是免费网站托管平台，可以帮我们部署网站，并生成可访问的简短网址，还能够和自己购买的域名进行绑定。&lt;/p&gt; 
&lt;p&gt;先在命令行通过 npm 命令安装 Vercel：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install -g vercel
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;安装完成后，进入 &lt;code&gt;index.html&lt;/code&gt; 所在目录（我的是 daxigua），使用 &lt;code&gt;vercel&lt;/code&gt; 命令发布网站：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd daxigua
vercel --prod
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;然后会让你输入一些选项，比如项目名称、是否和已有项目关联、是否保存当前配置等。如果要创建多个项目，千万不要和已有项目关联！&lt;/p&gt; 
&lt;p&gt;发布成功，会得到一个网址，打开就可以看到游戏啦，还可以把网址分享给别人！&lt;/p&gt; 
&lt;h4&gt;腾讯云静态网站托管&lt;/h4&gt; 
&lt;p&gt;国内服务器，访问速度更快，且链接未被微信封杀。&lt;/p&gt; 
&lt;p&gt;地址：https://cloud.tencent.com/product/wh&lt;/p&gt; 
&lt;p&gt;可以参照这篇文章的内容尝试发布，&lt;a href=&quot;https://mp.weixin.qq.com/s/H9VR1MWn-9bKSC_1l_MkJw&quot;&gt;魔改和上线你的合成大西瓜，最全教程！&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;魔改原理&lt;/h3&gt; 
&lt;p&gt;请先阅读：&lt;a href=&quot;https://mp.weixin.qq.com/s/H9VR1MWn-9bKSC_1l_MkJw&quot;&gt;魔改和上线你的合成大西瓜，最全教程！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;我给 &lt;code&gt;project.js&lt;/code&gt; 文件补充了注释，大家可以搜索关键字，如 &quot;改分&quot; 来快速定位，学习修改原理。&lt;/p&gt; 
&lt;h3&gt;问题及解决&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;无法安装 serve 或者 Vercel？&lt;/p&gt; &lt;p&gt;答：如果报找不到 npm，请先安装 npm。&lt;/p&gt; &lt;p&gt;如果安装中卡住，试着按下键盘（可能假死），还不行的话先用 npm 安装 cnpm（国内镜像，比较快）：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cnpm -g --registry=https://registry.npm.taobao.org 
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;再用 cnpm 安装： &lt;code&gt;cnpm i -g serve&lt;/code&gt; 或 &lt;code&gt;cnpm i -g vercel&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Vercel 网址被微信拦截怎么办？&lt;/p&gt; &lt;p&gt;答：可以把网址复制到浏览器打开，也可以申请一个域名，在 Vercel 和服务提供商配置域名解析。 Vercel 基本是海外的服务器，无需备案。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;怎么在电脑上浏览网页游戏？&lt;/p&gt; &lt;p&gt;答：在浏览器中，按 F12 打开开发者工具，点击像手机一样的图标即可。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为什么 serve 后，打开网页一片空白？&lt;/p&gt; &lt;p&gt;答：大概率是你在错误的目录下执行了 serve，请务必在 index.html 所在的文件夹下执行 serve。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;执行 vercel 命令显示 signUp？&lt;/p&gt; &lt;p&gt;答：要先去 &lt;a href=&quot;https://vercel.com/&quot;&gt;Vercel 官网&lt;/a&gt; 注册。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;vercel 邮箱验证失败？&lt;/p&gt; &lt;p&gt;答：先确认邮箱是否正确，如果验证失败，大概率是网络原因，请尝试 4G 等网络。或者在其他浏览器中，打开邮箱，点击验证按钮。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;怎么使用 vercel 同时上线多个版本？&lt;/p&gt; &lt;p&gt;答：在输入 vercel 后，选择不和已有项目关联（link），并且使用一个新的项目名（project name）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;想在修改文件后重新搞个新版本，但输入 vercel prod 后，直接覆盖了，而没有让我选择是否和现有项目关联（link），怎么办？&lt;/p&gt; &lt;p&gt;答：执行 vercel 后，会在本地生成 &lt;code&gt;.vercel&lt;/code&gt; 隐藏目录保存之前的发布信息，删掉该目录即可。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;导出网址后，我修改了图片，然后游戏中还是原来的图片？&lt;/p&gt; &lt;p&gt;答：网址读取的是远程的文件，只改了本地当然没用！再次执行 vercel 或腾讯云命令，把最新文件传上去。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Mac 能否使用这个教程呢？&lt;/p&gt; &lt;p&gt;答：当然可以！所有命令和 windows 完全一致！只是 cmd 命令行工具改为用 terminal 终端（按 command + 空格，搜索 terminal）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为什么打开网站白屏了？&lt;/p&gt; &lt;p&gt;答：大概率是你修改错误，导致一些文件缺失。。可以试试重新下载代码，再修改，请先确保本地可以运行，再发布！&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>carbon-design-system/carbon</title>
      <link>https://github.com/carbon-design-system/carbon</link>
      <description>&lt;p&gt;A design system built by IBM&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;Carbon is an open-source design system built by IBM. With the IBM Design Language as its foundation, the system consists of working code, design tools and resources, human interface guidelines, and a vibrant community of contributors.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;If you&#39;re just getting started, check out &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/components&quot;&gt;&lt;code&gt;carbon-components&lt;/code&gt;&lt;/a&gt;. If you&#39;re looking for React components, take a look at &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/react&quot;&gt;&lt;code&gt;carbon-components-react&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We also have community-contributed components for the following technologies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBM/carbon-components-angular&quot;&gt;Angular&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon-components-vue&quot;&gt;Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBM/carbon-components-svelte&quot;&gt;Svelte&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;re trying to find something specific, here&#39;s a full list of packages that we support!&lt;/p&gt; 
&lt;p&gt;| Package name | Description | | --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/components&quot;&gt;&lt;code&gt;carbon-components&lt;/code&gt;&lt;/a&gt; | Component styles and Vanilla JavaScript | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/react&quot;&gt;&lt;code&gt;carbon-components-react&lt;/code&gt;&lt;/a&gt; | React components | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/elements&quot;&gt;&lt;code&gt;@carbon/elements&lt;/code&gt;&lt;/a&gt; | IBM Design Language elements like colors, type, iconography, and more | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/colors&quot;&gt;&lt;code&gt;@carbon/colors&lt;/code&gt;&lt;/a&gt; | Work with IBM Design Language colors | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/grid&quot;&gt;&lt;code&gt;@carbon/grid&lt;/code&gt;&lt;/a&gt; | Build layouts using the new 16 column grid system | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/icons&quot;&gt;&lt;code&gt;@carbon/icons&lt;/code&gt;&lt;/a&gt; | Iconography assets. We also offer support in: &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/icons-react&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/carbon-design-system/carbon-icons-angular&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/icons-vue&quot;&gt;Vue&lt;/a&gt;, and &lt;a href=&quot;https://github.com/IBM/carbon-icons-svelte&quot;&gt;Svelte&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/pictograms&quot;&gt;&lt;code&gt;@carbon/pictograms&lt;/code&gt;&lt;/a&gt; | Pictogram assets. We also offer support in: &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/pictograms-react&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;https://github.com/IBM/carbon-pictograms-svelte&quot;&gt;Svelte&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/layout&quot;&gt;&lt;code&gt;@carbon/layout&lt;/code&gt;&lt;/a&gt; | Layout-based units and spacing scale | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/motion&quot;&gt;&lt;code&gt;@carbon/motion&lt;/code&gt;&lt;/a&gt; | Productive and expressive motion curves | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/themes&quot;&gt;&lt;code&gt;@carbon/themes&lt;/code&gt;&lt;/a&gt; | Color tokens available in the Carbon Design System, like &lt;code&gt;$interactive-01&lt;/code&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/type&quot;&gt;&lt;code&gt;@carbon/type&lt;/code&gt;&lt;/a&gt; | New type tokens used alongside IBM Plex |&lt;/p&gt; 
&lt;h2&gt;:books: Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See our documentation site &lt;a href=&quot;https://www.carbondesignsystem.com/get-started/develop/react&quot;&gt;here&lt;/a&gt; for full how-to docs and guidelines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;: Guidelines for making contributions to this repo.&lt;/li&gt; 
 &lt;li&gt;🏃‍♀️ Migration Guides 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/components/docs/migration/migrate-to-10.x.md&quot;&gt;v9 to v10 (vanilla)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/react/docs/migration/migrate-to-7.x.md&quot;&gt;v9 to v10 (v6 to v7 React)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙌 Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;re always looking for contributors to help us fix bugs, build new features, or help us improve the project documentation. If you&#39;re interested, definitely check out our &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; and our &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/docs/developer-handbook.md&quot;&gt;Developer Guide&lt;/a&gt;! 👀&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/kentcdodds/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/LICENSE&quot;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jhu-ep-coursera/fullstack-course4</title>
      <link>https://github.com/jhu-ep-coursera/fullstack-course4</link>
      <description>&lt;p&gt;Example code for HTML, CSS, and Javascript for Web Developers Coursera Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coursera: HTML, CSS and Javascript for Web Developers&lt;/h1&gt; 
&lt;h2&gt;Example Source Code&lt;/h2&gt; 
&lt;p&gt;This repository contains all of the example source code used in the Coursera.org course called &lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;HTML, CSS and Javascript for Web Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;Enroll now! It&#39;s free!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please check our FAQ to see if a question you want to ask on the forums has been answered already. Here is the link to the FAQ:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jhu-ep-coursera/fullstack-course4/master/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Customer Website Launched&lt;/h2&gt; 
&lt;p&gt;As part of this course we developed a &lt;em&gt;real&lt;/em&gt; website for a &lt;em&gt;real&lt;/em&gt; client. Below is a link to the final product. (&lt;em&gt;Note&lt;/em&gt;, the site is left without speed optimization to keep it exactly as it was in the course. Site optimization wasn&#39;t part of the course).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.davidchuschinabistro.com/&quot;&gt;David Chu&#39;s China Bistro Restaurant in Baltimore, MD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>getferdi/ferdi</title>
      <link>https://github.com/getferdi/ferdi</link>
      <description>&lt;p&gt;🧔🏽 Ferdi helps you organize how you use your favourite apps by combining them into one application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ferdi&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;🤴🏽 Hard-fork of &lt;a href=&quot;https://github.com/meetfranz/franz&quot;&gt;Franz&lt;/a&gt;, adding awesome features and removing unwanted ones.&lt;/p&gt; 
&lt;h3&gt;Table of contents&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#ferdi&quot;&gt;Ferdi&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#what-is-ferdi&quot;&gt;What is Ferdi?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#what-does-ferdi-look-like&quot;&gt;What does Ferdi look like?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#download-ferdi&quot;&gt;Download Ferdi&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#or-use-homebrew-macos-only&quot;&gt;Or use homebrew (macOS only)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#or-use-aur-arch-linux&quot;&gt;Or use AUR (Arch Linux)&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#what-makes-ferdi-different-from-franz&quot;&gt;What makes Ferdi different from Franz?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#development&quot;&gt;Development&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#install-os-dependencies&quot;&gt;Install OS dependencies&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#clone-repository-with-submodule&quot;&gt;Clone repository with submodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#install-dependencies&quot;&gt;Install dependencies&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#fix-native-modules-to-match-current-electron-node-version&quot;&gt;Fix native modules to match current electron node version&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#start-development-app&quot;&gt;Start development app&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#packaging&quot;&gt;Packaging&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#release&quot;&gt;Release&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#contributors-&quot;&gt;Contributors ✨&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#backers-via-opencollective&quot;&gt;Backers via OpenCollective&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#sponsors-via-opencollective&quot;&gt;Sponsors via OpenCollective&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#other-sponsors&quot;&gt;Other Sponsors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;What is Ferdi?&lt;/h3&gt; 
&lt;p&gt;Ferdi is a destkop app that helps you organize how you use your favourite apps by combining them into one application. It is based on Franz - a software already used by thousands of people - with the difference that Ferdi gives you many additional features and doesn&#39;t restrict its usage! Ferdi is compatible with your existing Franz account so you can continue right where you left off. Find out more about Ferdi and its features on &lt;a href=&quot;https://getferdi.com&quot;&gt;getferdi.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Ferdi puts all your web apps into one place&lt;/li&gt; 
 &lt;li&gt;[x] Native support for 100+ services&lt;/li&gt; 
 &lt;li&gt;[x] Workspaces to keep your personal and work life separated&lt;/li&gt; 
 &lt;li&gt;[x] Support for multiple accounts on any service&lt;/li&gt; 
 &lt;li&gt;[x] Dark Mode support for all of your services&lt;/li&gt; 
 &lt;li&gt;[x] Optional cloud sync to keep your services synchronized between devices&lt;/li&gt; 
 &lt;li&gt;[x] Better control over when you get which notifications&lt;/li&gt; 
 &lt;li&gt;[x] Cross-platform so you can view your services on all your computers&lt;/li&gt; 
 &lt;li&gt;[x] Full proxy support to work in every network environment&lt;/li&gt; 
 &lt;li&gt;[x] Ferdi speaks your language: Support for 20+ languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;...and best of all:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Its completely free! There are no restrictions on features, no paywalls&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;What does Ferdi look like?&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Download Ferdi&lt;/h2&gt; 
&lt;p&gt;You can download Ferdi for Windows, Mac and Linux on &lt;a href=&quot;https://getferdi.com/download&quot;&gt;Ferdi&#39;s download page&lt;/a&gt; or you can find all variants in the &lt;a href=&quot;https://github.com/getferdi/ferdi/releases/latest&quot;&gt;latest stable release&lt;/a&gt; assets and &lt;a href=&quot;https://github.com/getferdi/ferdi/releases&quot;&gt;all the other release here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Or use Chocolatey (Windows only)&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;$ choco install ferdi&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;(Don&#39;t know Chocolatey? &lt;a href=&quot;https://chocolatey.org/&quot;&gt;chocolatey.org&lt;/a&gt;)&lt;/p&gt; 
&lt;h3&gt;Or use homebrew (macOS only)&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;$ brew install --cask ferdi&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;(Don&#39;t know homebrew? &lt;a href=&quot;https://brew.sh/&quot;&gt;brew.sh&lt;/a&gt;)&lt;/p&gt; 
&lt;h3&gt;Or use AUR (Arch Linux)&lt;/h3&gt; 
&lt;p&gt;Ferdi has three separate AUR packages you can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://aur.archlinux.org/packages/ferdi/&quot;&gt;ferdi&lt;/a&gt;&lt;/strong&gt;: Uses your system electron version to run the latest release - this version will work best on most systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://aur.archlinux.org/packages/ferdi-bin/&quot;&gt;ferdi-bin&lt;/a&gt;&lt;/strong&gt;: Uses the latest Fedora release and extracts it to Arch. Use this version if you are having trouble with the &lt;code&gt;ferdi&lt;/code&gt; package.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://aur.archlinux.org/packages/ferdi-git/&quot;&gt;ferdi-git&lt;/a&gt;&lt;/strong&gt;: Uses your system electron version to run the latest commit from the develop branch and may be unstable but may also give you features that are not yet available in other versions. Please only use &lt;code&gt;ferdi-git&lt;/code&gt; if you accept these risks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you use an AUR Helper e.g. yay, simply install it via &lt;code&gt;yay -S ferdi&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;What makes Ferdi different from Franz?&lt;/h2&gt; 
&lt;h3&gt;Removes unproductive paywalls and other other interruptions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Removes the counter-productive fullscreen app delay inviting users to upgrade&lt;/li&gt; 
 &lt;li&gt;[x] Removes pages begging you to donate after registration&lt;/li&gt; 
 &lt;li&gt;[x] Removes &quot;Franz is better together&quot; popup&lt;/li&gt; 
 &lt;li&gt;[x] Makes all users Premium by default (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/15&quot;&gt;#15&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adds features to increase your productivity&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Adds 30+ new services&lt;/li&gt; 
 &lt;li&gt;[x] Adds &quot;Find in Page&quot; feature (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/67&quot;&gt;#67&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds an option to keep individual workspaces always loaded (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/37&quot;&gt;#37&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds &quot;Quick Switch&quot; feature to help you navigate a long list of services (similar to Rambox&#39;s &lt;a href=&quot;https://rambox.pro/#feature-details/quick_switcher&quot;&gt;Quick Switcher&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds &quot;Service Hibernation&quot; that will automatically unload services when they are unused to keep your computer running fast&lt;/li&gt; 
 &lt;li&gt;[x] Adds a setting to keep service in hibernation after startup (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/577&quot;&gt;#577&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/584&quot;&gt;#584&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://github.com/getferdi/ferdi/wiki/Using-user.css-and-user.js&quot;&gt;Add &lt;code&gt;user.css&lt;/code&gt; and &lt;code&gt;user.js&lt;/code&gt; that allows users to inject custom code into services&lt;/a&gt; (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/83&quot;&gt;#83&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds Process Manager to find services using a lot of resources&lt;/li&gt; 
 &lt;li&gt;[x] Adds CTRL+← and CTRL+→ shortcuts and menu options to go back and forward in the service browsing history(&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/39&quot;&gt;#39&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds &quot;Scheduled Do-not-Disturb&quot; feature in which you won&#39;t get notifications (similar to Rambox&#39;s &lt;a href=&quot;https://rambox.pro/#feature-details/work_hours&quot;&gt;Work Hours&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Allows you to &lt;a href=&quot;https://github.com/getferdi/ferdi/wiki/Custom-Todo&quot;&gt;use any Todo service inside &quot;Franz Todo&quot; panel&lt;/a&gt; (e.g. Todoist via https://todoist.com/app) instead of being limited to using Franz Todo&lt;/li&gt; 
 &lt;li&gt;[x] Adds a dropdown list to choose your Todo service (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/418&quot;&gt;#418&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/477&quot;&gt;#477&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/yourcontact&quot;&gt;@yourcontact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Differentiates between indirect and direct notifications (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/590&quot;&gt;#590&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/Room4O4&quot;&gt;@Room4O4&lt;/a&gt; &lt;a href=&quot;https://github.com/mahadevans87&quot;&gt;@mahadevans87&lt;/a&gt; &lt;a href=&quot;https://github.com/FeikoJoosten&quot;&gt;@FeikoJoosten&lt;/a&gt; &lt;a href=&quot;https://github.com/sampathBlam&quot;&gt;@sampathBlam&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adds features to improve your privacy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://github.com/getferdi/ferdi/wiki/Custom-Server&quot;&gt;Adds option to change server to a custom&lt;/a&gt; &lt;a href=&quot;https://github.com/getferdi/server&quot;&gt;ferdi-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Adds option to use Ferdi without an account (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/5&quot;&gt;#5&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Uses the Ferdi API instead of Franz&#39;s servers&lt;/li&gt; 
 &lt;li&gt;[x] Adds &quot;Private Notification&quot;-Mode, that hides message content from notifications (&lt;a href=&quot;https://github.com/meetfranz/franz/issues/879&quot;&gt;franz#879&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds Password Lock feature to keep your messages protected (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/41&quot;&gt;#41&lt;/a&gt;, &lt;a href=&quot;https://github.com/meetfranz/franz/issues/810&quot;&gt;franz#810&lt;/a&gt;, &lt;a href=&quot;https://github.com/meetfranz/franz/issues/950&quot;&gt;franz#950&lt;/a&gt;, &lt;a href=&quot;https://github.com/meetfranz/franz/issues/1430&quot;&gt;franz#1430&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds support for unlocking with Touch ID (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/367&quot;&gt;#367&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds inactivity lock that automatically locks Ferdi after a specified amount of time (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/179&quot;&gt;#179&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds local &lt;a href=&quot;https://github.com/getferdi/recipes&quot;&gt;recipe repository&lt;/a&gt; that removes the need of downloading recipes from a remote server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adds features to improve your experience using Ferdi&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Adds Universal Dark Mode via the &lt;a href=&quot;https://github.com/darkreader/darkreader&quot;&gt;DarkReader extension&lt;/a&gt; (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/71&quot;&gt;#71&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds Dark Reader settings (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/531&quot;&gt;#531&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/568&quot;&gt;#568&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/Room4O4&quot;&gt;@Room4O4&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/mahadevans87&quot;&gt;@mahadevans87&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Adds adaptable Dark Mode that will respect the system&#39;s Dark Mode setting (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/173&quot;&gt;#173&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/548&quot;&gt;#548&lt;/a&gt; (💖 &lt;a href=&quot;https://github.com/Room4O4&quot;&gt;@Room4O4&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/mahadevans87&quot;&gt;@mahadevans87&lt;/a&gt;))&lt;/li&gt; 
 &lt;li&gt;[x] Adds a hotkey to quickly toggle darkmode (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/530&quot;&gt;#530&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/537&quot;&gt;#537&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/Room4O4&quot;&gt;@Room4O4&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/mahadevans87&quot;&gt;@mahadevans87&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Adds an option to start Ferdi minimized (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/490&quot;&gt;#490&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/534&quot;&gt;#534&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds ability to change the services icons size and sidebar width (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/153&quot;&gt;#153&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds an option to auto-hide the menubar (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/7&quot;&gt;#7&lt;/a&gt;, &lt;a href=&quot;https://github.com/meetfranz/franz/issues/833&quot;&gt;franz#833&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Enhances system tray icon behaviour (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/307&quot;&gt;#307&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds option to show draggable window area on macOS (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/304&quot;&gt;#304&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/532&quot;&gt;#532&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds a notification &amp;amp; audio toggle action to the tray context menu (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/542&quot;&gt;#542&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/Room4O4&quot;&gt;@Room4O4&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/mahadevans87&quot;&gt;@mahadevans87&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Adds option to show a browser-like navigation bar on all services&lt;/li&gt; 
 &lt;li&gt;[x] Adds option to change accent color&lt;/li&gt; 
 &lt;li&gt;[x] Reflects your currently opened service name to the window title to improve support for Password Managers (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/213&quot;&gt;#213&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/gmarec&quot;&gt;@gmarec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Allows using SVGs for service custom icon&lt;/li&gt; 
 &lt;li&gt;[x] Adds button to open darkmode.css for a service&lt;/li&gt; 
 &lt;li&gt;[x] Improves &quot;About Ferdi&quot; screen to better display versions&lt;/li&gt; 
 &lt;li&gt;[x] Improves user onboarding (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/493&quot;&gt;#493&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Improves &quot;Updates&quot; section in settings (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/506&quot;&gt;#506&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/yourcontact&quot;&gt;@yourcontact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Improves draggable window area height for macOS (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/304&quot;&gt;#304&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/479&quot;&gt;#479&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds option to start Ferdi in system tray (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/331&quot;&gt;#331&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/jereksel&quot;&gt;@jereksel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Fixes and enhances context menu (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/357&quot;&gt;#357&lt;/a&gt; &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/413&quot;&gt;#413&lt;/a&gt; &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/452&quot;&gt;#452&lt;/a&gt; &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/354&quot;&gt;#354&lt;/a&gt; &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/227&quot;&gt;#227&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Adds better support for macOS dark mode&lt;/li&gt; 
 &lt;li&gt;[x] Adds option to disable reload of services after resuming Ferdi (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/442&quot;&gt;#442&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/n0emis&quot;&gt;@n0emis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Comes with a custom branding proper to Ferdi&lt;/li&gt; 
 &lt;li&gt;[x] Adds better separation in settings&lt;/li&gt; 
 &lt;li&gt;[x] Adds various other UI improvements&lt;/li&gt; 
 &lt;li&gt;[x] Improves documentation of development so more developers can help making Ferdi even better&lt;/li&gt; 
 &lt;li&gt;[x] Updates Microsoft Teams to allow Desktop Sharing (&lt;a href=&quot;https://github.com/getferdi/recipes/issues/116&quot;&gt;getferdi/recipes#116&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/Gautasmi&quot;&gt;@Gautasmi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Removes automatic reloading from WhatsApp&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Removed bugs&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Fixes bug that would incorrectly display unread messages count on some services (more info in &lt;a href=&quot;https://github.com/getferdi/ferdi/commit/7566ccd&quot;&gt;7566ccd&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Fixes zooming&lt;/li&gt; 
 &lt;li&gt;[x] Fixes login problems in Google services&lt;/li&gt; 
 &lt;li&gt;[x] Fixes missing Slack services custom icons (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/290&quot;&gt;#290&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Fixes bug that marked valid domains as invalid (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/276&quot;&gt;#276&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Fixes microphone/camera access on some versions of macOS (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/193&quot;&gt;#193&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Fixes cache clearing not working in Windows 10 (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/541&quot;&gt;#541&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/544&quot;&gt;#544&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/Room4O4&quot;&gt;@Room4O4&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/mahadevans87&quot;&gt;@mahadevans87&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Fixes Home button in navigation bar not correctly navigating (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/571&quot;&gt;#571&lt;/a&gt;, &lt;a href=&quot;https://github.com/getferdi/ferdi/issues/573&quot;&gt;#573&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/Room4O4&quot;&gt;@Room4O4&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/mahadevans87&quot;&gt;@mahadevans87&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Fixes notifications for various services, 💖 &lt;a href=&quot;https://github.com/FeikoJoosten&quot;&gt;@FeikoJoosten&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Refocuses Webview only for active service (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/610&quot;&gt;#610&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/Room4O4&quot;&gt;@Room4O4&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/mahadevans87&quot;&gt;@mahadevans87&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adds new platforms&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Adds portable version for Windows so you can use Ferdi without even installing it, 💖 &lt;a href=&quot;https://github.com/Makazzz&quot;&gt;@Makazzz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Adds Arch Linux AUR packages, 💖 &lt;a href=&quot;https://github.com/AGCaesar&quot;&gt;@AGCaesar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Adds Ferdi as a Flatpak on Flathub (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/323&quot;&gt;#323&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/lhw&quot;&gt;@lhw&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adds internal changes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Upgrades to Electron 8.1.1&lt;/li&gt; 
 &lt;li&gt;[x] Switches to &lt;a href=&quot;https://github.com/electron-userland/electron-spellchecker&quot;&gt;&lt;code&gt;electron-spellchecker&lt;/code&gt;&lt;/a&gt; to improve application size&lt;/li&gt; 
 &lt;li&gt;[x] Minifies build files to improve app size&lt;/li&gt; 
 &lt;li&gt;[x] Adds &quot;npm run prepare-code&quot; command for development to lint and beautify code&lt;/li&gt; 
 &lt;li&gt;[x] Adds &quot;npm run link-readme&quot; command to automatically add links to issues and users inside README.md&lt;/li&gt; 
 &lt;li&gt;[x] Fixes incorrect body closing tag (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/330&quot;&gt;#330&lt;/a&gt;), 💖 &lt;a href=&quot;https://github.com/jereksel&quot;&gt;@jereksel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Uses CrowdIn to improve i18n&lt;/li&gt; 
 &lt;li&gt;[x] Adds retry commands to flaky build steps (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/498&quot;&gt;#498&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] Runs utility scripts pre-commit instead of pre-push (&lt;a href=&quot;https://github.com/getferdi/ferdi/issues/515&quot;&gt;#515&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Thanks to all our &lt;a href=&quot;https://raw.githubusercontent.com/getferdi/ferdi/develop/#contributors-&quot;&gt;contributors&lt;/a&gt; who helped realize all these amazing features! 💖&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Install OS dependencies&lt;/h3&gt; 
&lt;h4&gt;Node.js&lt;/h4&gt; 
&lt;p&gt;Please make sure you are running NodeJS v10 or above.&lt;/p&gt; 
&lt;h4&gt;Git&lt;/h4&gt; 
&lt;p&gt;The version &lt;a href=&quot;https://github.com/git-for-windows/git/releases/tag/v2.23.0.windows.1&quot;&gt;2.23.0&lt;/a&gt; for Git is working fine for development. You can then use the console from Git to do the development procedure.&lt;/p&gt; 
&lt;h4&gt;Debian/Ubuntu&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ apt install libx11-dev libxext-dev libxss-dev libxkbfile-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Fedora&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ dnf install libX11-devel libXext-devel libXScrnSaver-devel libxkbfile-devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;p&gt;Please make sure you run this command as an administrator:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install --global windows-build-tools --vs2015
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Clone repository with submodule&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone https://github.com/getferdi/ferdi.git
$ cd ferdi
$ git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is important you execute the last command to get the required submodules (recipes, server).&lt;/p&gt; 
&lt;h3&gt;Install dependencies&lt;/h3&gt; 
&lt;p&gt;Run the following command to install all dependencies, and link sibling modules with Ferdi.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npx lerna bootstrap
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you previously ran &lt;code&gt;npm install&lt;/code&gt; it sometimes is necessary to delete your &lt;code&gt;node_modules&lt;/code&gt; folder before running &lt;code&gt;npx lerna bootstrap&lt;/code&gt;. If you encounter the &lt;code&gt;gyp: No Xcode or CLT version&lt;/code&gt; error on macOS at this step, please have a look &lt;a href=&quot;https://medium.com/flawless-app-stories/gyp-no-xcode-or-clt-version-detected-macos-catalina-anansewaa-38b536389e8d&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Fix native modules to match current electron node version&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm run rebuild
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Package recipe repository&lt;/h3&gt; 
&lt;p&gt;Ferdi requires its recipes to be packaged before it can use it. When running Ferdi as a development instance, you&#39;ll need to package the local recipes before you can create any services inside Ferdi.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cd recipes
$ npm install &amp;amp;&amp;amp; npm run package
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start development app&lt;/h3&gt; 
&lt;p&gt;Run these two commands &lt;strong&gt;simultaneously&lt;/strong&gt; in different terminals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm run dev
$ DEBUG=Ferdi:* npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optionally, you can run both commands in one terminal with &lt;a href=&quot;https://github.com/adlk/misty&quot;&gt;misty&lt;/a&gt; (see &lt;a href=&quot;https://github.com/getferdi/ferdi/blob/develop/misty.yml&quot;&gt;misty.yml&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ DEBUG=Ferdi:* npx misty
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: please prefer &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; over &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Packaging&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Assets will be available in the &lt;code&gt;out&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Release&lt;/h3&gt; 
&lt;p&gt;Create a new &lt;a href=&quot;https://github.com/getferdi/ferdi/releases/new&quot;&gt;draft release&lt;/a&gt; that targets the &lt;code&gt;release&lt;/code&gt; branch, then:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git checkout develop &amp;amp;&amp;amp; git pull
$ git checkout release
$ git submodule update --remote --force
$ git add .
$ git commit -m &quot;Update submodules&quot;
$ git merge --no-ff develop
$ git push
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the draft release assets are uploaded (13 assets), publish the release. The last commit of the &lt;code&gt;release&lt;/code&gt; branch will be tagged. You can then merge &lt;code&gt;release&lt;/code&gt; into &lt;code&gt;master&lt;/code&gt; and back into &lt;code&gt;develop&lt;/code&gt; if needed.&lt;/p&gt; 
&lt;h4&gt;Nightly releases&lt;/h4&gt; 
&lt;p&gt;Nightly releases are automaticly triggered every day (&lt;a href=&quot;https://github.com/getferdi/ferdi/pull/990&quot;&gt;details&lt;/a&gt;) and available in &lt;a href=&quot;https://github.com/getferdi/nightlies/releases&quot;&gt;getferdi/nightlies&lt;/a&gt;. Maintainers still need to manually publish the draft releases as pre-releases for now.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;Backers via OpenCollective&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Mention to the individuals backing us via &lt;a href=&quot;https://github.com/sponsors/getferdi&quot;&gt;GitHub Sponsors&lt;/a&gt; as well.&lt;/p&gt; 
&lt;h2&gt;Sponsors via OpenCollective&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Other Sponsors&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>yeungon/In-JavaScript-we-trust</title>
      <link>https://github.com/yeungon/In-JavaScript-we-trust</link>
      <description>&lt;p&gt;Embrace JavaScript naturally and confidently with coding challenges crafted not for beginners, but JavaScript lovers no matter what.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;In JS we trust - The best way to learn is by building/coding and teaching. I create the challenges to help my friends learn JavaScript and in return it helps me embrace the language in much deeper level. Feel free to clone, fork and pull.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h6&gt;1. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function a(x) {
  x++;
  return function () {
    console.log(++x);
  };
}

a(1)();
a(1)();
a(1)();

let x = a(1);
x();
x();
x();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &lt;code&gt;1, 2, 3&lt;/code&gt; and &lt;code&gt;1, 2, 3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;B: &lt;code&gt;3, 3, 3&lt;/code&gt; and &lt;code&gt;3, 4, 5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;C: &lt;code&gt;3, 3, 3&lt;/code&gt; and &lt;code&gt;1, 2, 3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;D: &lt;code&gt;1, 2, 3&lt;/code&gt; and &lt;code&gt;3, 3, 3&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;This question reminds us about Closure in JS. Closure allows us to create a &lt;code&gt;stateful function&lt;/code&gt; and such function can access to variable outside of its scope. In a nutshell, a closure can have access to &lt;code&gt;global&lt;/code&gt; variable (scope), &lt;code&gt;father function&lt;/code&gt; scope and &lt;code&gt;its&lt;/code&gt; own scope.&lt;/p&gt; 
&lt;p&gt;We have here 3, 3, 3 and 3, 4, 5 because first we simply call the function &lt;code&gt;a()&lt;/code&gt;. It works like a normal function and we do not see something &lt;code&gt;stateful&lt;/code&gt; here. In later case, we declare a variable &lt;code&gt;x&lt;/code&gt; and it stores the value of function &lt;code&gt;a(1)&lt;/code&gt;, that is why we get 3. 4. 5 rather than 3, 3, 3.&lt;/p&gt; 
&lt;p&gt;This kind of gotcha gives me the feeling of &lt;code&gt;static&lt;/code&gt; variable in PHP world.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;2. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Name(a, b) {
  this.a = a;
  this.b = b;
}

const me = Name(&quot;Vuong&quot;, &quot;Nguyen&quot;);

console.log(!(a.length - window.a.length));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;B: &lt;code&gt;NaN&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;C: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;D: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We get true in the console. The tricky part is when we create an object from the constructor function Name but we DO NOT USE &lt;code&gt;new&lt;/code&gt; keywork. That makes the variable &lt;code&gt;a&lt;/code&gt; global one and get the value &quot;Vuong&quot;. Remember that it is actually a property of the global object &lt;code&gt;window&lt;/code&gt; (in the browser) or &lt;code&gt;global&lt;/code&gt; in the nodejs.&lt;/p&gt; 
&lt;p&gt;We then get &lt;code&gt;a.length&lt;/code&gt; ~ 5 and &lt;code&gt;window.a.length&lt;/code&gt; ~ 5 which return 0. !0 returns true.&lt;/p&gt; 
&lt;p&gt;Imagine what would happen when we create the instance &lt;code&gt;me&lt;/code&gt; with the &lt;code&gt;new&lt;/code&gt; keywork. That is an interesting inquire!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;3. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const x = function (...x) {
  let k = (typeof x).length;
  let y = () =&amp;gt; &quot;freetut&quot;.length;
  let z = { y: y };

  return k - z.y();
};

console.log(Boolean(x()));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;B: 1&lt;/li&gt; 
 &lt;li&gt;C: -1&lt;/li&gt; 
 &lt;li&gt;D: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;The spread operator &lt;code&gt;...x&lt;/code&gt; might help us obtain the parameter in the function in the form of array. Yet, in Javascript the typeof array return &quot;object&quot; rather than &quot;array&quot;. It is totally odd if you are coming from PHP.&lt;/p&gt; 
&lt;p&gt;That is said, we now have the length of the string &lt;code&gt;object&lt;/code&gt; which returns 6. z.y() simply returns the length of the string &#39;freetut&#39; (7).&lt;/p&gt; 
&lt;p&gt;Be aware that the function x() (in the form of &lt;code&gt;function express&lt;/code&gt; or &lt;code&gt;anonymous function&lt;/code&gt; (if you are coming from PHP) return -1 when being called and when converted to bool with &lt;code&gt;Boolean(-1)&lt;/code&gt; return true instead of false. Noted that &lt;code&gt;Boolean(0)&lt;/code&gt; return false.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;4. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function js(x) {
  const y = (j) =&amp;gt; j * x;

  console.log(y(s()));

  function s() {
    return j();
  }

  function j() {
    return x ** x;
  }
})(3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;B: 18&lt;/li&gt; 
 &lt;li&gt;C: 81&lt;/li&gt; 
 &lt;li&gt;D: 12&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;The function &lt;code&gt;js()&lt;/code&gt; can be automatically executed without calling it and known as IIFE (Immediately Invoked Function Expression). Noted the parameter &lt;code&gt;x&lt;/code&gt; of the function &lt;code&gt;js&lt;/code&gt; is actuallly passed with the value 3.&lt;/p&gt; 
&lt;p&gt;The value return of the function is y(s())), meaning calling three other functions &lt;code&gt;y()&lt;/code&gt;, &lt;code&gt;s()&lt;/code&gt; and &lt;code&gt;j()&lt;/code&gt; because the function &lt;code&gt;s()&lt;/code&gt; returns &lt;code&gt;j()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;j() returns 3^3 = 27 so that s() returns 27.&lt;/p&gt; 
&lt;p&gt;y(s()) means y(27) which returns 27*3 = 81.&lt;/p&gt; 
&lt;p&gt;Note that we can call &lt;code&gt;declare function&lt;/code&gt; BEFORE the function is actually declared but not with &lt;code&gt;expression function&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;5. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var tip = 100;

(function () {
  console.log(&quot;I have $&quot; + husband());

  function wife() {
    return tip * 2;
  }

  function husband() {
    return wife() / 2;
  }

  var tip = 10;
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;I have $10&quot;;&lt;/li&gt; 
 &lt;li&gt;B: &quot;I have $100&quot;;&lt;/li&gt; 
 &lt;li&gt;C: &quot;I have $50&quot;;&lt;/li&gt; 
 &lt;li&gt;D: &quot;I have $NaN&quot;;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;We have here an IIFE (Immediately Invoked Function Expression). It means we do not have to call it but it will be excuted automatically when declared. The flow is as: husband() returns wife()/2 and wife() returns tip*2.&lt;/p&gt; 
&lt;p&gt;We might think that tip = 100 because it is a global variable when declaring with &lt;code&gt;var&lt;/code&gt; keyword. However, it is actually &lt;code&gt;undefined&lt;/code&gt; because we also have &lt;code&gt;var tip = 10&lt;/code&gt; INSIDE the function. As the variable &lt;code&gt;tip&lt;/code&gt; is hoisted with default value &lt;code&gt;undefined&lt;/code&gt;, the final result would be D. We know that &lt;code&gt;undefined&lt;/code&gt; returns NaN when we try to divide to 2 or multiple with 2.&lt;/p&gt; 
&lt;p&gt;If we do not re-declare &lt;code&gt;var tip = 10;&lt;/code&gt; at the end of the function, we will definately get B.&lt;/p&gt; 
&lt;p&gt;JS is fun, right?&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;6. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const js = { language: &quot;loosely type&quot;, label: &quot;difficult&quot; };

const edu = { ...js, level: &quot;PhD&quot; };

const newbie = edu;

delete edu.language;

console.log(Object.keys(newbie).length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 2;&lt;/li&gt; 
 &lt;li&gt;B: 3;&lt;/li&gt; 
 &lt;li&gt;C: 4;&lt;/li&gt; 
 &lt;li&gt;D: 5;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;This challenge revises the ES6&#39;s feature regarding &lt;code&gt;spread operator ...&lt;/code&gt; Spread operator is quite useful for retrieving parameter in function, to &lt;code&gt;unite&lt;/code&gt; or &lt;code&gt;combine&lt;/code&gt; object and array in JavaScript. PHP also has this feature.&lt;/p&gt; 
&lt;p&gt;In the variable &lt;code&gt;edu&lt;/code&gt;, we use &lt;code&gt;...js&lt;/code&gt; (spread operator here) to combine both objects into one. It works in the same way with array.&lt;/p&gt; 
&lt;p&gt;Then we declare another variable named &lt;code&gt;newbie&lt;/code&gt;. IMPORTANT note: By declaring the variable like that, both variables point to the SAME POSITION in the memory. We may have known something like &lt;code&gt;$a = &amp;amp;$b&lt;/code&gt; in PHP, which let both varibles work in the same way. We might have known about &lt;code&gt;pass by reference&lt;/code&gt; in the case.&lt;/p&gt; 
&lt;p&gt;Then we have 2 as &lt;code&gt;edu.language&lt;/code&gt; is deleted. Both objects now have only two elements.&lt;/p&gt; 
&lt;p&gt;Now is time to think about coping an object in JS either shallow or deep one.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;7. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var candidate = {
  name: &quot;Vuong&quot;,
  age: 30,
};

var job = {
  frontend: &quot;Vuejs or Reactjs&quot;,
  backend: &quot;PHP and Laravel&quot;,
  city: &quot;Auckland&quot;,
};

class Combine {
  static get() {
    return Object.assign(candidate, job);
  }

  static count() {
    return Object.keys(this.get()).length;
  }
}

console.log(Combine.count());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 5;&lt;/li&gt; 
 &lt;li&gt;B: 6;&lt;/li&gt; 
 &lt;li&gt;C: 7;&lt;/li&gt; 
 &lt;li&gt;D: 8;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;The buit-in method &lt;code&gt;Object.assign(candidate, job)&lt;/code&gt; merges the two objects &lt;code&gt;candidate&lt;/code&gt; and &lt;code&gt;job&lt;/code&gt; into one object. Then the method &lt;code&gt;Object.keys&lt;/code&gt; counts the number of &lt;code&gt;key&lt;/code&gt; in the object.&lt;/p&gt; 
&lt;p&gt;Note that two methods &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;count()&lt;/code&gt; are defined as &lt;code&gt;static&lt;/code&gt;, so they need to be called statically using &lt;code&gt;Class.staticmethod()&lt;/code&gt; syntax. Then the final object get 5 elements.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;8. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 1;

(() =&amp;gt; {
  x += 1;
  ++x;
})();
((y) =&amp;gt; {
  x += y;
  x = x % y;
})(2);
(() =&amp;gt; (x += x))();
(() =&amp;gt; (x *= x))();

console.log(x);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 4;&lt;/li&gt; 
 &lt;li&gt;B: 50;&lt;/li&gt; 
 &lt;li&gt;C: 2;&lt;/li&gt; 
 &lt;li&gt;D: 10;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;Initially &lt;code&gt;x&lt;/code&gt; is declared with the value 1. In the first IIFE function, there are two operations. First &lt;code&gt;x&lt;/code&gt; becomes 2 and then 3.&lt;/p&gt; 
&lt;p&gt;In the second IIFE function, &lt;code&gt;x = x + y&lt;/code&gt; then the current value is 5. In the second operation, it returns only 1 as it undergoes &lt;code&gt;5%2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the third and fouth IIFE functions, we get 2 &lt;code&gt;x = x + x&lt;/code&gt; and then 4 &lt;code&gt;x = x * x&lt;/code&gt;. It is more than simple.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;9. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;$var = 10;

$f = function($let) use ($var) {
    return ++$let + $var;
};

$var = 15;
echo $f(10);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 10;

const f = (l) =&amp;gt; ++l + x;

x = 15;
console.log(f(10));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 26 and 26;&lt;/li&gt; 
 &lt;li&gt;B: 21 and 21;&lt;/li&gt; 
 &lt;li&gt;C: 21 and 26;&lt;/li&gt; 
 &lt;li&gt;D: 26 and 21;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;This question illustrates the diffences between PHP and JavaScript when handling closure. In the first snippet, we declare a closure with the keyword &lt;code&gt;use&lt;/code&gt;. Closure in PHP is simply an anonymous function and the data is passed to the function using the keyword &lt;code&gt;use&lt;/code&gt;. Otherwise, it is called as &lt;code&gt;lambda&lt;/code&gt; when we do not use the keyword &lt;code&gt;use&lt;/code&gt;. You can check the result of the snippet here https://3v4l.org/PSeMY. PHP &lt;code&gt;closure&lt;/code&gt; only accepts the value of the variable BEFORE the closure is defined, no matter where it is called. As such, &lt;code&gt;$var&lt;/code&gt; is 10 rather than 15.&lt;/p&gt; 
&lt;p&gt;On the contrary, JavaScript treats the variable a bit different when it is passed to anonymous function. We do not have to use the keyword &lt;code&gt;use&lt;/code&gt; here to pass variable to the closure. The variable &lt;code&gt;x&lt;/code&gt; in the second snippet is updated before the closure is called, then we get 26.&lt;/p&gt; 
&lt;p&gt;Note that in PHP 7.4, we have arrow function and we then do not have to use the keyword &lt;code&gt;use&lt;/code&gt; to pass the variable to function. Another way to call a &lt;code&gt;global&lt;/code&gt; ariable inside a function in PHP is to use the keyword &lt;code&gt;global&lt;/code&gt; or employ the built-in GLOBAL variable $GLOBALS.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;10. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let x = {};
let y = {};
let z = x;

console.log(x == y);
console.log(x === y);
console.log(x == z);
console.log(x === z);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: true true true true;&lt;/li&gt; 
 &lt;li&gt;B: false false false false;&lt;/li&gt; 
 &lt;li&gt;C: true true false false;&lt;/li&gt; 
 &lt;li&gt;D: false false true true;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;Technically, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; have the same value. Both are empty objects. However, we do not use the value to compare objects.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;z&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; are two objects referring to the same memory position. In JavaScript, array and object are passed by &lt;code&gt;reference&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; therefore return true when being compared.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;11. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&quot;hello&quot;);

setTimeout(() =&amp;gt; console.log(&quot;world&quot;), 0);

console.log(&quot;hi&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;hello&quot; -&amp;gt; &quot;world&quot; -&amp;gt; &quot;hi&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;hello&quot; -&amp;gt; &quot;hi&quot; -&amp;gt; &quot;world&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;hi&quot; -&amp;gt; &quot;world&quot; -&amp;gt; &quot;hello&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;hi&quot; -&amp;gt; &quot;hello&quot; -&amp;gt; &quot;world&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;Given that the function setTimeout() will be kept in the &lt;code&gt;task queue&lt;/code&gt; before jumping back to &lt;code&gt;stack,&lt;/code&gt; &quot;hello&quot; and &quot;hi&quot; will be printed first, then A is incorrect. That is also the case of the answers C and D.&lt;/p&gt; 
&lt;p&gt;No matter how many seconds you set to the &lt;code&gt;setTimeout()&lt;/code&gt; function, it will run after synchronous code. So we will get &quot;hello&quot; first as it is put into the call stack first. Though the &lt;code&gt;setTimeout()&lt;/code&gt; is then being put into the call stack, it will subsequently offload to web API (or Node API) and then being called when other synchronous codes are cleared. It means we then get &quot;hi&quot; and finally &quot;world&quot;.&lt;/p&gt; 
&lt;p&gt;So B is the correct answer.&lt;/p&gt; 
&lt;p&gt;Credit: @kaitoubg (voz) for your suggestion regarding the &lt;code&gt; timeout throttled&lt;/code&gt; by which I have decided to alter the question slightly. It will ensure that readers will not get confused as the previous code might bring out different results when tested on other browsers or environments. The main point of the question is about the discrepancy between the synchronous code and asynchronous code when using &lt;code&gt;setTimeout.&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;12. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;String.prototype.lengthy = () =&amp;gt; {
  console.log(&quot;hello&quot;);
};

let x = { name: &quot;Vuong&quot; };

delete x;

x.name.lengthy();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;Vuong&quot;;&lt;/li&gt; 
 &lt;li&gt;B: &quot;hello&quot;;&lt;/li&gt; 
 &lt;li&gt;C: &quot;undefined&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;ReferenceError&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;String.prototype.someThing = function () {}&lt;/code&gt; is the common way to define a new built-in method for &lt;code&gt;String&lt;/code&gt;. We can do the same thing with &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt; or &lt;code&gt;FunctionName&lt;/code&gt; where FunctionName is the function designed by ourself.&lt;/p&gt; 
&lt;p&gt;That is not challenging to realise that &lt;code&gt;&quot;string&quot;.lengthy()&lt;/code&gt; always returns &lt;code&gt;hello&lt;/code&gt;. Yet, the tricky part lies in the &lt;code&gt;delete object&lt;/code&gt; where we might think that this expression will entirely delete the object. That is not the case as &lt;code&gt;delete&lt;/code&gt; is used to delete the property of the object only. It does not delete the object. Then we get &lt;code&gt;hello&lt;/code&gt; rather than &lt;code&gt;ReferenceError&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that if we declare object without &lt;code&gt;let, const&lt;/code&gt; or &lt;code&gt;var&lt;/code&gt;, we then have a global object. &lt;code&gt;delete objectName&lt;/code&gt; then return &lt;code&gt;true&lt;/code&gt;. Otherwise, it always returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;13. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let x = {};

x.__proto__.hi = 10;

Object.prototype.hi = ++x.hi;

console.log(x.hi + Object.keys(x).length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10&lt;/li&gt; 
 &lt;li&gt;B: 11&lt;/li&gt; 
 &lt;li&gt;C: 12&lt;/li&gt; 
 &lt;li&gt;D: NaN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;First we have an empty object &lt;code&gt;x&lt;/code&gt;, then we add another property &lt;code&gt;hi&lt;/code&gt; for x with &lt;code&gt;x.__proto__.hi&lt;/code&gt;. Note this is equivalent to &lt;code&gt;Object.prototype.hi = 10&lt;/code&gt; and we are adding to the &lt;code&gt;father&lt;/code&gt; object &lt;code&gt;Object&lt;/code&gt; the property &lt;code&gt;hi&lt;/code&gt;. It means every single object will inherit this propety. The property &lt;code&gt;hi&lt;/code&gt; becomes a shared one. Say now we declare a new object such as &lt;code&gt;let y = {}&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; now has a propery &lt;code&gt;hi&lt;/code&gt; inherited from the &lt;code&gt;father&lt;/code&gt; &lt;code&gt;Object&lt;/code&gt;. Put it simply &lt;code&gt;x.__proto__ === Object.prototype&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then we overwrite the property &lt;code&gt;hi&lt;/code&gt; with a new value 11. Last we have 11 + 1 = 12. &lt;code&gt;x&lt;/code&gt; has one property and &lt;code&gt;x.hi&lt;/code&gt; returns 11.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;14. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const array = (a) =&amp;gt; {
  let length = a.length;
  delete a[length - 1];
  return a.length;
};

console.log(array([1, 2, 3, 4]));

const object = (obj) =&amp;gt; {
  let key = Object.keys(obj);
  let length = key.length;
  delete obj[key[length - 1]];

  return Object.keys(obj).length;
};

console.log(object({ 1: 2, 2: 3, 3: 4, 4: 5 }));

const setPropNull = (obj) =&amp;gt; {
  let key = Object.keys(obj);
  let length = key.length;
  obj[key[length - 1]] = null;

  return Object.keys(obj).length;
};

console.log(setPropNull({ 1: 2, 2: 3, 3: 4, 4: 5 }));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 333&lt;/li&gt; 
 &lt;li&gt;B: 444&lt;/li&gt; 
 &lt;li&gt;C: 434&lt;/li&gt; 
 &lt;li&gt;D: 343&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;This question examines how the &lt;code&gt;delete&lt;/code&gt; operator works in JavaScript. In short, it does nothing when we write &lt;code&gt;delete someObject&lt;/code&gt; or &lt;code&gt;delete someArray&lt;/code&gt;. It nonetheless completely deletes and removes a property of an object when writing something like &lt;code&gt;delete someObject.someProperty&lt;/code&gt;. In the case of array, when we write &lt;code&gt;delete someArray[keyNumber]&lt;/code&gt;, it only removes the &lt;code&gt;value&lt;/code&gt; of the &lt;code&gt;index&lt;/code&gt;, keep the &lt;code&gt;index&lt;/code&gt; intact and the new &lt;code&gt;value&lt;/code&gt; is now set to &lt;code&gt;undefined&lt;/code&gt;. For that reason, in the code first snippet, we get (the length) 4 elements as in the original array but only 3 properties left in the object passed when the function object() is called, as in the second snippet.&lt;/p&gt; 
&lt;p&gt;The third snippet gives us 4 as declaring an object&#39;s propery to either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; does not completely remove the property. The key is intact. So the length of the object is immutable.&lt;/p&gt; 
&lt;p&gt;For those who are familiar with PHP, we have &lt;code&gt;unset($someArray[index])&lt;/code&gt; that remove the array element, both key and value. When &lt;code&gt;print_r&lt;/code&gt; the array, we might not see the key and value that have been unset. However, when we push (using &lt;code&gt;array_push($someArray, $someValue)&lt;/code&gt;) a new element in that array, we might see that the previous key is still kept, but no value and not being displayed. That is something you should be aware of. Have a look at https://3v4l.org/7C3Nf&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;15. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = [1, 2, 3];
var b = [1, 2, 3];

var c = [1, 2, 3];
var d = c;

var e = [1, 2, 3];
var f = e.slice();

console.log(a === b);
console.log(c === d);
console.log(e === f);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: true true true&lt;/li&gt; 
 &lt;li&gt;B: false false true&lt;/li&gt; 
 &lt;li&gt;C: true true false&lt;/li&gt; 
 &lt;li&gt;D: false true false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; returns false because they point to different memory location even though the values are the same. If you are coming from PHP world, then it will return true obviously when we compare either value or value + type. Check it out: https://3v4l.org/IjaOs.&lt;/p&gt; 
&lt;p&gt;In JavaScript, value is passed by reference in case of &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;. Hence in the second case, &lt;code&gt;d&lt;/code&gt; is the copy of &lt;code&gt;c&lt;/code&gt; but they both point to the same memory position. Everything changes in &lt;code&gt;c&lt;/code&gt; will result in the change in &lt;code&gt;d&lt;/code&gt;. In PHP, we might have &lt;code&gt;$a = &amp;amp;$b;&lt;/code&gt;, working in the similar way.&lt;/p&gt; 
&lt;p&gt;The third one gives us a hint to copy an array in JavaScript using &lt;code&gt;slice()&lt;/code&gt; method. Now we have &lt;code&gt;f&lt;/code&gt;, which is the copy of &lt;code&gt;e&lt;/code&gt; but they point to different memory locations, thus they have different &quot;life&quot;. We get &lt;code&gt;false&lt;/code&gt; accordingly when they are being compared.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;16. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var languages = {
  name: [&quot;elixir&quot;, &quot;golang&quot;, &quot;js&quot;, &quot;php&quot;, { name: &quot;feature&quot; }],
  feature: &quot;awesome&quot;,
};

let flag = languages.hasOwnProperty(Object.values(languages)[0][4].name);

(() =&amp;gt; {
  if (flag !== false) {
    console.log(
      Object.getOwnPropertyNames(languages)[0].length &amp;lt;&amp;lt;
        Object.keys(languages)[0].length
    );
  } else {
    console.log(
      Object.getOwnPropertyNames(languages)[1].length &amp;lt;&amp;lt;
        Object.keys(languages)[1].length
    );
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 8&lt;/li&gt; 
 &lt;li&gt;B: NaN&lt;/li&gt; 
 &lt;li&gt;C: 64&lt;/li&gt; 
 &lt;li&gt;D: 12&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: 64&lt;/h4&gt; 
&lt;p&gt;The code snippet is quite tricky as it has a couple of different built-in methods handling object in &lt;code&gt;JavaScript&lt;/code&gt;. For example, both &lt;code&gt;Object.keys&lt;/code&gt; and &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; are used even thought they are quite similar except that the latter can return non-enumerable properties. You might want to have a look at this thoroughly written reference https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Object.values&lt;/code&gt; and &lt;code&gt;Object.keys&lt;/code&gt; return the property value and property name of the object, respectively. That is nothing new. &lt;code&gt;object.hasOwnProperty(&#39;propertyName&#39;)&lt;/code&gt; returns a &lt;code&gt;boolean&lt;/code&gt; confirming whether a property exists or not.&lt;/p&gt; 
&lt;p&gt;We have &lt;code&gt;flag&lt;/code&gt; true because &lt;code&gt;Object.values(languages)[0][4].name&lt;/code&gt; returns &lt;code&gt;feature&lt;/code&gt;, which is also the name of the property.&lt;/p&gt; 
&lt;p&gt;Then we have 4 &amp;lt;&amp;lt; 4 in the &lt;code&gt;if-else&lt;/code&gt; flow that returns the bitwise value, equivalent to &lt;code&gt;4*2^4&lt;/code&gt; ~ &lt;code&gt;4*16&lt;/code&gt; ~ 64.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;17. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var player = {
  name: &quot;Ronaldo&quot;,
  age: 34,
  getAge: function () {
    return ++this.age - this.name.length;
  },
};

function score(greeting, year) {
  console.log(
    greeting + &quot; &quot; + this.name + `! You were born in  ${year - this.getAge()}`
  );
}

window.window.window.score.call(window.window.window.player, &quot;Kiora&quot;, 2019);

score.apply(player, [&quot;Kiora&quot;, 2009]);

const helloRonaldo = window.score.bind(window.player, &quot;Kiora&quot;, 2029);

helloRonaldo();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;Kiora Ronaldo! You were born in 1985&quot;, &quot;Kiora Ronaldo! You were born in 1985&quot;, &quot;Kiora Ronaldo! You were born in 1985&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;Kiora Ronaldo! You were born in 1991&quot;, &quot;Kiora Ronaldo! You were born in 1991&quot;, &quot;Kiora Ronaldo! You were born in 1999&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;Kiora Ronaldo! You were born in 1991&quot;, NaN, &quot;Kiora Ronaldo! You were born in 1980&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;Kiora Ronaldo! You were born in 1991&quot;, &quot;Kiora Ronaldo! You were born in 1980&quot;, &quot;Kiora Ronaldo! You were born in 1999&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;We can use &lt;code&gt;call()&lt;/code&gt;, &lt;code&gt;apply()&lt;/code&gt; and &lt;code&gt;bind()&lt;/code&gt; to appy a function to any object. At first sight, it seems that three functions do the same thing. Yet there are some situations where they are differently employed to handle respective contexts or solve particular problems.&lt;/p&gt; 
&lt;p&gt;Of the three, only &lt;code&gt;bind()&lt;/code&gt; can be executed after binding. We can create a variable to store the result as &lt;code&gt;helloRonaldo()&lt;/code&gt; in the code snippet above. &lt;code&gt;apply()&lt;/code&gt; and &lt;code&gt;call()&lt;/code&gt; will bind and execute the function at the same time. &lt;code&gt;apply()&lt;/code&gt; hints us &lt;code&gt;a&lt;/code&gt; ~ array where we need to pass an array as parameter. &lt;code&gt;call()&lt;/code&gt; hints us &lt;code&gt;c&lt;/code&gt; or comma where we pass parameters with a comma. You might want to have a look at this post https://stackoverflow.com/questions/15455009/javascript-call-apply-vs-bind&lt;/p&gt; 
&lt;p&gt;Note that &lt;code&gt;window.window.window.score&lt;/code&gt; or &lt;code&gt;window.score&lt;/code&gt; or simply &lt;code&gt;score&lt;/code&gt; do the same thing. It points to the &lt;code&gt;score()&lt;/code&gt; function in the global scope.&lt;/p&gt; 
&lt;p&gt;The correct anwser is D. The &lt;code&gt;score()&lt;/code&gt; and &lt;code&gt;getAge()&lt;/code&gt; functions are nothing special.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;18. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ronaldo = { age: 34 };

var messi = { age: 32 };

function score(year, tr, t) {
  if (typeof tr === &quot;function&quot; &amp;amp;&amp;amp; typeof t === &quot;function&quot;) {
    console.log(`You score ${tr(year, t(this.age))} times`);
  }
}

const transform = (x, y) =&amp;gt; x - y;

const title = (x) =&amp;gt; ++x + x++;

const helloRonaldo = score.bind(ronaldo, 2029, transform, title);

helloRonaldo();

const helloMessi = score.bind(messi, 2029, transform, title);

helloMessi();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;You score 1989 times&quot; and &quot;You score 1963 times&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;You score 1959 times&quot; and &quot;You score 1989 times&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;You score 1989 times&quot; and &quot;You score 1953 times&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;You score 1959 times&quot; and &quot;You score 1963 times&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;bind()&lt;/code&gt; allows us to bind a function declared with any object. Here we bind &lt;code&gt;score()&lt;/code&gt; and both &lt;code&gt;ronaldo&lt;/code&gt; and &lt;code&gt;messi&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;score()&lt;/code&gt; we pass three parameters &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;tr&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; in which both &lt;code&gt;tr&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; are function. They handle simple things as defined afterwards.&lt;/p&gt; 
&lt;p&gt;When we bind &lt;code&gt;score()&lt;/code&gt; with &lt;code&gt;ronaldo&lt;/code&gt; and &lt;code&gt;messi&lt;/code&gt;, we pass three parameters as declared in the &lt;code&gt;score()&lt;/code&gt; function wherein &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; are functions.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;19. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var person = {};

Object.defineProperties(person, {
  name: {
    value: &quot;Vuong&quot;,
    enumerable: true,
  },
  job: {
    value: &quot;developer&quot;,
    enumerable: true,
  },
  studying: {
    value: &quot;PhD&quot;,
    enumerable: true,
  },
  money: {
    value: &quot;NZD&quot;,
    enumerable: false,
  },
});

class Evaluate {
  static checkFlag(obj) {
    return Object.getOwnPropertyNames(obj) &amp;gt; Object.keys(obj)
      ? Object.getOwnPropertyNames(obj)
      : Object.keys(obj);
  }
}

const flag = Evaluate.checkFlag(person);

console.log(flag.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 1&lt;/li&gt; 
 &lt;li&gt;B: 2&lt;/li&gt; 
 &lt;li&gt;C: 3&lt;/li&gt; 
 &lt;li&gt;D: 4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Object.keys(obj)&lt;/code&gt; is almost identical to &lt;code&gt;Object.getOwnPropertyNames(obj)&lt;/code&gt; except the fact that the latter returns any type of object&#39;s property regardless of &lt;code&gt;enumerable&lt;/code&gt;. By default &lt;code&gt;enumerable&lt;/code&gt; is true when creating object. Using &lt;code&gt;Object.defineProperties&lt;/code&gt; or &lt;code&gt;Object.defineProperty&lt;/code&gt; we can manually set this option to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;As such the object &lt;code&gt;person&lt;/code&gt; will get 3 using&lt;code&gt;Object.keys(obj)&lt;/code&gt;but 4 with &lt;code&gt;Object.getOwnPropertyNames(obj)&lt;/code&gt;. &lt;code&gt;In short Object.keys(obj)&lt;/code&gt; only returns the property setting the enumerable as &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;20. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const id = 10;

const getID = (...id) =&amp;gt; {
  id(id);

  function id(id) {
    console.log(typeof id);
  }
};

getID(id);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: ReferenceError&lt;/li&gt; 
 &lt;li&gt;B: 10&lt;/li&gt; 
 &lt;li&gt;C: undefined&lt;/li&gt; 
 &lt;li&gt;D: &#39;function&#39;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;When declaring a function inside another function, we are working with Closure in JavaScript. Note that if a function is declared as normal (rather than function expression), it is hoisted. We might see several &lt;code&gt;id&lt;/code&gt; in the code snippet above but in fact, some of them does nothing.&lt;/p&gt; 
&lt;p&gt;The result of the code depending on the operator &lt;code&gt;typeof id&lt;/code&gt;, which is &lt;code&gt;function&lt;/code&gt;. So &lt;code&gt;id&lt;/code&gt; in this operation is the &lt;code&gt;id()&lt;/code&gt; function.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;21. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var book1 = {
  name: &quot;Name of the rose&quot;,
  getName: function () {
    console.log(this.name);
  },
};

var book2 = {
  name: { value: &quot;Harry Potter&quot; },
};

var bookCollection = Object.create(book1, book2);

bookCollection.getName();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &#39;Harry Potter&#39;&lt;/li&gt; 
 &lt;li&gt;B: &#39;Name of the rose&#39;&lt;/li&gt; 
 &lt;li&gt;C: ReferenceError&lt;/li&gt; 
 &lt;li&gt;D: Object object&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Object.create&lt;/code&gt; allows us to create an object which is based on another object. If we do not pass the second parameter - &lt;code&gt;book2&lt;/code&gt; in this case - the &lt;code&gt;name&lt;/code&gt; property of the object &lt;code&gt;bookCollection&lt;/code&gt; will be &lt;code&gt;Name of the rose&lt;/code&gt; inherited from the &lt;code&gt;book1&lt;/code&gt;. It means we can provide additional properties when declaring object with &lt;code&gt;Object.create&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bookCollection&lt;/code&gt; has its own property &lt;code&gt;name&lt;/code&gt; and another one inherited from &lt;code&gt;book1&lt;/code&gt;. In this case its own property &lt;code&gt;name&lt;/code&gt; will show up as it has higher priority. That is why we get &#39;Harry Potter&#39;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;22. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(() =&amp;gt; {
  const a = Object.create({});

  const b = Object.create(null);

  let f1 = a.hasOwnProperty(&quot;toString&quot;);

  let f2 = &quot;toString&quot; in b;

  let result =
    f1 === false &amp;amp;&amp;amp; f2 === false
      ? console.log((typeof a.toString()).length)
      : console.log(b.toString());
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: ReferenceError&lt;/li&gt; 
 &lt;li&gt;B: undefined&lt;/li&gt; 
 &lt;li&gt;C: 0&lt;/li&gt; 
 &lt;li&gt;D: 6&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The two objects &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are created using &lt;code&gt;Object.create()&lt;/code&gt; operator. There is a bit of difference between them as &lt;code&gt;a&lt;/code&gt; inherits from Object prototype but &lt;code&gt;b&lt;/code&gt; is totally empty when we pass the &lt;code&gt;null&lt;/code&gt; paramater. Yet &lt;code&gt;hasOwnProperty(&#39;toString&#39;)&lt;/code&gt; always returns &lt;code&gt;false&lt;/code&gt; neither &lt;code&gt;a&lt;/code&gt; nor &lt;code&gt;b&lt;/code&gt; given that &lt;code&gt;toString()&lt;/code&gt; is not defined inside these objects. The method however is still available as it is inherited from Object prototype.&lt;/p&gt; 
&lt;p&gt;Both &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt; return &lt;code&gt;false&lt;/code&gt;. Note that we use &lt;code&gt;object.hasOwnProperty(&#39;key&#39;)&lt;/code&gt; and &lt;code&gt;(&#39;key&#39; in object)&lt;/code&gt; to check the availability of a key in an object. There is a bit difference between the two as the latter also returns the key inherited. You might want to have a look here: https://stackoverflow.com/questions/455338/how-do-i-check-if-an-object-has-a-key-in-javascript&lt;/p&gt; 
&lt;p&gt;Then &lt;code&gt;typeof a.toString()&lt;/code&gt; returns &lt;code&gt;string&lt;/code&gt;, which gives us 6 with the &lt;code&gt;.length&lt;/code&gt; property.&lt;/p&gt; 
&lt;p&gt;If the syntax is odd to you, you might look for &#39;self-invoking function&#39; and &#39;arrow function&#39; in JavaScript.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;23. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let promise = new Promise((rs, rj) =&amp;gt; {
  setTimeout(() =&amp;gt; rs(4), 0);

  Promise.resolve(console.log(3));

  console.log(2);
});

promise
  .then((rs) =&amp;gt; {
    console.log(rs ? rs ** rs : rs);
    return rs;
  })
  .then((rs) =&amp;gt; console.log(rs == 256 ? rs : rs * rs));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 3, 2, 256, 256&lt;/li&gt; 
 &lt;li&gt;B: 3, 2, 256, 16&lt;/li&gt; 
 &lt;li&gt;C: 256, 16, 3, 2&lt;/li&gt; 
 &lt;li&gt;D: 16, 256, 3, 2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We first declare a promise-based code with &lt;code&gt;let&lt;/code&gt; and then call it. Given that &lt;code&gt;setTimeout()&lt;/code&gt; is an asynchronous action, it will run last even the time is set to 0 in &lt;code&gt;setTimeout(() =&amp;gt; rs(4), 0);&lt;/code&gt;. Although &lt;code&gt;Promise.resolve(console.log(3))&lt;/code&gt; also returns a promise but it is a Microtasks, then it has a higher priority than Tasks as set by &lt;code&gt;setTimeout()&lt;/code&gt;. You might want to have a look at this post https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;.then()&lt;/code&gt; we chain the result so that we have &lt;code&gt;4^4&lt;/code&gt; in the first then() and &lt;code&gt;4*4&lt;/code&gt; in the second &lt;code&gt;then()&lt;/code&gt;. Note that &lt;code&gt;return rs&lt;/code&gt; returns the original value.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;24. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function f() {
  let promise = new Promise((resolve, reject) =&amp;gt; {
    setTimeout(() =&amp;gt; resolve(&quot;done!&quot;), 0);
  });

  setTimeout(() =&amp;gt; console.log(&quot;world&quot;), 0);

  console.log(await promise);

  console.log(&quot;hello&quot;);
}

f(setTimeout(() =&amp;gt; console.log(&quot;kiora&quot;), 0));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: ReferenceError&lt;/li&gt; 
 &lt;li&gt;B: done, hello, world&lt;/li&gt; 
 &lt;li&gt;C: hello, done, world&lt;/li&gt; 
 &lt;li&gt;D: kiora, done, hello, world&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;Though we do not declare any paramater for the function &lt;code&gt;f()&lt;/code&gt;, we pass &lt;code&gt;setTimeout(()=&amp;gt;console.log(&quot;kiora&quot;),0)&lt;/code&gt; when call it. We therefore get &#39;kiora&#39; first.&lt;/p&gt; 
&lt;p&gt;Given that the variable &lt;code&gt;promise&lt;/code&gt; returns a solved promise and it is called with the keyword &lt;code&gt;await&lt;/code&gt;, JavaScript will &#39;pause&#39; at this line &lt;code&gt;console.log(await promise);&lt;/code&gt; till the result is resolved. That is why we get &quot;done&quot; at the next result.&lt;/p&gt; 
&lt;p&gt;Why we do not get &quot;world&quot; or &quot;hello&quot; at the second ? As JavaScript &quot;pauses&quot; at the line with &lt;code&gt;await&lt;/code&gt; keyword, we cannot get &quot;hello&quot; as usual (note that whenever we call setTimeout(), this function will run last because it is an asynchronous task operator), whereas &lt;code&gt;setTimeout(()=&amp;gt; console.log(&quot;world&quot;), 0);&lt;/code&gt; should always run last.&lt;/p&gt; 
&lt;p&gt;Here we might see a bit of difference when employing &lt;code&gt;await&lt;/code&gt; keyword before asynchronous operator (in this case, we use &lt;code&gt;setTimeout()&lt;/code&gt; as an example) or when call the function/operator without it.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;25. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function name() {
  return new Promise((resolve) =&amp;gt; {
    setTimeout(() =&amp;gt; {
      resolve(&quot;New Zealand&quot;);
    }, 10);
  });
}

function fruit() {
  return new Promise((resolve) =&amp;gt; {
    setTimeout(() =&amp;gt; {
      resolve(&quot;Kiwi&quot;);
    }, 20);
  });
}

(async function countryandfruit() {
  const getName = await name();
  const getFruit = await fruit();

  console.log(`Kiora: ${getName} ${getFruit}`);
})();

(async function fruitandcountry() {
  const [getName, getFruit] = await Promise.all([name(), fruit()]);

  console.log(`Hello: ${getName} ${getFruit}`);
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: Null&lt;/li&gt; 
 &lt;li&gt;B: Kiora&lt;/li&gt; 
 &lt;li&gt;C: &quot;Hello: New Zealand Kiwi&quot; -&amp;gt; &quot;Kiora: New Zealand Kiwi&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;Kiora: New Zealand Kiwi&quot; -&amp;gt; &quot;Hello: New Zealand Kiwi&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;Both &lt;code&gt;countryandfruit&lt;/code&gt; and &lt;code&gt;fruitandcountry&lt;/code&gt; are self invoking functions. Both are declared with the keyword &lt;code&gt;async&lt;/code&gt;, it means the code inside will run step by step. It helps us control the flow of data much more concise as compared to Promise-based operator or callback way.&lt;/p&gt; 
&lt;p&gt;The first function returns &lt;code&gt;&quot;Kiora: New Zealand Kiwi&quot;&lt;/code&gt; and the second one ouputs &lt;code&gt;&quot;Hello: New Zealand Kiwi&quot;&lt;/code&gt;. We might think that the order will be the same but actually the order of the result is reversed because the function with &lt;code&gt;await&lt;/code&gt; keyword will run step by step rather than in in parallel as Promise.all. It means &lt;code&gt;fruitandcountry&lt;/code&gt; will run faster than &lt;code&gt;countryandfruit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You might want to have a look at the difference between the two at https://alligator.io/js/async-functions/&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;26. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MySort {
  constructor(object) {
    this.object = object;
  }

  getSort() {
    return Object.entries(this.object)[0][1].sort()[
      Object.values(this.object).length
    ];
  }
}

const object = {
  month: [&quot;July&quot;, &quot;September&quot;, &quot;January&quot;, &quot;December&quot;],
};

const sortMe = new MySort(object);

console.log(sortMe.getSort());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: July&lt;/li&gt; 
 &lt;li&gt;B: September&lt;/li&gt; 
 &lt;li&gt;C: January&lt;/li&gt; 
 &lt;li&gt;D: December&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Object.entries&lt;/code&gt; returns an array consisting of both key and value from an object while &lt;code&gt;Object.values&lt;/code&gt; retuns an array of the values of object and &lt;code&gt;Object.keys&lt;/code&gt; gives us an array of keys of the object. As such, &lt;code&gt;Object.entries(object)&lt;/code&gt; in the code snippet above gives us a nested array with just one element in which the values are put in another nested array like that &lt;code&gt;[[&quot;month&quot;, [&quot;July&quot;, &quot;September&quot;, &quot;January&quot;, &quot;December&quot;]]]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For that reason, &lt;code&gt;Object.entries(this.object)[0][1].sort()&lt;/code&gt; will actually sort the value array and return a new order as &quot;December&quot; -&amp;gt; &quot;January&quot; -&amp;gt; &quot;July&quot; -&amp;gt; &quot;September&quot;. Hence, when we get the element with the index given by &lt;code&gt;[Object.values(this.object).length]&lt;/code&gt; we get &lt;code&gt;January&lt;/code&gt; because &lt;code&gt;[Object.values(this.object).length]&lt;/code&gt; give us 1 (the length of the array given by Object.values);&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;27. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const flag = [] !== !!!!![];

let f = () =&amp;gt; {};

console.log((typeof f()).length + flag.toString().length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: 12&lt;/li&gt; 
 &lt;li&gt;C: 13&lt;/li&gt; 
 &lt;li&gt;D: 14&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;Comparing two arrays or two objects in JavaScript always return &lt;code&gt;false&lt;/code&gt; because both are passed by reference, unlike primitive types such as string, number or boolean. That is why comparing [] and [] using either == or === returns &lt;code&gt;false&lt;/code&gt;. The weird part is the &lt;code&gt;!==!!!!!&lt;/code&gt; which is equivalent to &lt;code&gt;!==&lt;/code&gt;, nothing special. So the &lt;code&gt;flag&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the expression function &lt;code&gt;f()&lt;/code&gt;, we use arrow function here but and &lt;code&gt;{}&lt;/code&gt; is a part of the function rather than an object. In case you want to return an object, you have to write as &lt;code&gt;let f = () =&amp;gt; ({})&lt;/code&gt; or simply using normal way to define function. With the keyword &lt;code&gt;return&lt;/code&gt;, we can easily catch the content of the function when using normal way to define function.&lt;/p&gt; 
&lt;p&gt;Thus, the &lt;code&gt;typeof f()&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; rathern &lt;code&gt;object&lt;/code&gt;. We then get the length 9 and the flag (true) becomes &#39;true&#39; (a string, by using toString() function), which returns 3 with the property &lt;code&gt;length&lt;/code&gt;. We finally get 13.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;28. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function (a, b, c) {
  arguments[2] = (typeof arguments).length;
  c &amp;gt; 10 ? console.log(c) : console.log(++c);
})(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 4&lt;/li&gt; 
 &lt;li&gt;B: 5&lt;/li&gt; 
 &lt;li&gt;C: 6&lt;/li&gt; 
 &lt;li&gt;D: 7&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;We have a self-invoking function with three parameters declared. Note that &lt;code&gt;arguments&lt;/code&gt; inside a function returns an object consisting of the parameters of the function.&lt;/p&gt; 
&lt;p&gt;The key part here is that when we assign a value to that array (it is array-like, as mentioned above) (or any element), the function will use that value rather than the value from the parameter we pass to it when calling the function. Hence, &lt;code&gt;c&lt;/code&gt; will be &lt;code&gt;(typeof arguments).length;&lt;/code&gt; (6) rather than 3.&lt;/p&gt; 
&lt;p&gt;As &lt;code&gt;c&lt;/code&gt; has a new value of 6, it is definitely less than 10, so we get the final result &lt;code&gt;console.log(++c)&lt;/code&gt;, which returns 7.&lt;/p&gt; 
&lt;p&gt;Note that &lt;code&gt;arguments&lt;/code&gt; is not available on arrow functions. See more detailed here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments&lt;/p&gt; 
&lt;p&gt;From ES6 onwards, it is recommended to use ...restParameter given that it is a true array. It means you can manipulate the parameter with native JavaScript functions such as map, reduce or filter.&lt;/p&gt; 
&lt;p&gt;For PHP developer, we have &lt;code&gt;func_get_args()&lt;/code&gt; in PHP that does the same thing, but it will not override the value passed. Check it by yourself at https://3v4l.org/dMfhW&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;29. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator {
  constructor(a, b) {
    this.a = a;
    this.b = b;
  }
  static getFlag() {
    return new Array(this.a).length == new Array(this.b).toString().length;
  }

  getValue() {
    return Calculator.getFlag() ? typeof this.a : typeof new Number(this.b);
  }
}

const me = new Calculator(5, 5);

console.log(me.getValue());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: &quot;string&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;object&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;number&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We have a class named Calculator. When declaring a new instance of the object, we pass two parameters &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. These two parameters have the same value but &lt;code&gt;new Array(this.a).length&lt;/code&gt; is totally different from &lt;code&gt;new Array(this.b).toString().length&lt;/code&gt; because the latter returns a string &lt;code&gt;&quot;,,,,&quot;&lt;/code&gt; meaning the length 4 while the former returns the length of an array and we therefore get 5.&lt;/p&gt; 
&lt;p&gt;For that reason &lt;code&gt;getFlag()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. In &lt;code&gt;getValue()&lt;/code&gt; we get &lt;code&gt;typeof new Number(this.b);&lt;/code&gt; which returns &lt;code&gt;object&lt;/code&gt;. That is a bit different from &lt;code&gt;typeof b&lt;/code&gt;, which returns &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;30. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var name = &quot;Auckland&quot;;

const nz = {
  name: &quot;Kiwi&quot;,

  callMe: function () {
    return this.name;
  },
};

let me = nz.callMe;

let she = nz.callMe.bind(nz);

let result = me() === nz.callMe() ? she() : `${me()} ${she()}`;

console.log(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: undefined&lt;/li&gt; 
 &lt;li&gt;B: &quot;Auckland&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;Kiwi&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;Auckland Kiwi&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The key point in this question involves the keyword &lt;code&gt;this&lt;/code&gt; in JavaScript. We have a simple object that contains one method and one string property &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;First, it is important to write down is that &lt;code&gt;let me = nz.callMe;&lt;/code&gt; and then call &lt;code&gt;me()&lt;/code&gt; is totally different from directly calling &lt;code&gt;nz.callMe()&lt;/code&gt;. If we assign a variable to a method delared inside an object, &lt;code&gt;this&lt;/code&gt; in that method will behave differently (when we call the variable as a method and when dirrectly call that method). In particular, in the first case, &lt;code&gt;this&lt;/code&gt; is the &lt;code&gt;window&lt;/code&gt; object while in the second one, &lt;code&gt;this&lt;/code&gt; inside the function still points to property &lt;code&gt;name&lt;/code&gt; in the object &lt;code&gt;nz&lt;/code&gt;. It means &lt;code&gt;me()&lt;/code&gt; returns &quot;Auckland&quot; while &lt;code&gt;nz.callMe&lt;/code&gt; returns &quot;Kiwi&quot;.&lt;/p&gt; 
&lt;p&gt;Then &lt;code&gt;result&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; and we get the final output value &lt;code&gt;${me()} ${she()}&lt;/code&gt;. Why &lt;code&gt;she()&lt;/code&gt; is different from &lt;code&gt;me()&lt;/code&gt;? You might easily guess that &lt;code&gt;she&lt;/code&gt; still &lt;code&gt;bind&lt;/code&gt; to the object &lt;code&gt;nz&lt;/code&gt; rather than &lt;code&gt;window&lt;/code&gt; object as in &lt;code&gt;me()&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;31. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const club = {
  name: &quot;Juventus&quot;,
  player: [&quot;Ronaldo&quot;],
  showMePlayer: function () {
    this.player.map(function (thename) {
      console.log(this.name.length);
    }, this);
  },
  showMe: function () {
    this.player.forEach(
      function (thename) {
        console.log(this.name.length);
      }.bind(this)
    );
  },
  show: function () {
    const self = this;
    this.player.map(function (thename) {
      console.log(self.name.length);
    });
  },
  Me: function () {
    this.player.map(function (thename) {
      console.log(this.name.length);
    });
  },
};

club.showMePlayer();
club.showMe();
club.show();
club.Me();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 8 - 8 - 8 - 8&lt;/li&gt; 
 &lt;li&gt;B: &quot;Juventus&quot; - &quot;Juventus&quot; - &quot;Juventus&quot; - &quot;Juventus&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;Ronaldo&quot; - &quot;Ronaldo&quot; - &quot;Ronaldo&quot; - &quot;Ronaldo&quot;&lt;/li&gt; 
 &lt;li&gt;D: 8 - 8 - 8 - 0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The code snippet above is not a big challenge for you I guess. It simply gives you an example of &lt;code&gt;this&lt;/code&gt; in different contexts when we declare an anonymous function inside a method of an object. The three first methods are common ways to handle &lt;code&gt;this&lt;/code&gt; using &lt;code&gt;this&lt;/code&gt; as second parameter in &lt;code&gt;map()&lt;/code&gt;, by using &lt;code&gt;bind(this)&lt;/code&gt; in &lt;code&gt;forEach&lt;/code&gt; (or map()) or by &lt;code&gt;that = this&lt;/code&gt;technique (we did use &lt;code&gt;seft&lt;/code&gt; rathern &lt;code&gt;that&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;The last method &lt;code&gt;Me()&lt;/code&gt; will cause unexpected result because &lt;code&gt;this.name&lt;/code&gt; does not bind to the object &lt;code&gt;club&lt;/code&gt;. Note that you might get another result when testing the code on jsbin.com. On Chrome and Firefox, we get 0.&lt;/p&gt; 
&lt;p&gt;For further information, kindly have a look at http://speakingjs.com/es5/ch17.html#_pitfall_losing_this_when_extracting_a_method&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;32. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;((...a) =&amp;gt; {
  const b = [&quot;javascript&quot;, &quot;new zealand&quot;];

  const c = [...a, typeof a, ...b, &quot;kiwi&quot;];

  console.log(c.length + c[0].length);
})(new Array(10));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 5&lt;/li&gt; 
 &lt;li&gt;B: 10&lt;/li&gt; 
 &lt;li&gt;C: 15&lt;/li&gt; 
 &lt;li&gt;D: 20&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;...&lt;/code&gt; can be used in two ways in JavaScript (and PHP) as either &lt;code&gt;spread operator&lt;/code&gt; or &lt;code&gt;rest parameter&lt;/code&gt;. You might have to check the following article about the two. They are the same as three dots, but the way they are employed vary considerably between the two. https://javascript.info/rest-parameters-spread-operator&lt;/p&gt; 
&lt;p&gt;We see both &lt;code&gt;spread operator&lt;/code&gt; and &lt;code&gt;rest parameter&lt;/code&gt; in the code snippet above. First the parameter &lt;code&gt;(...a)&lt;/code&gt; in the self-invoking function is of course a &lt;code&gt;rest parameter&lt;/code&gt; while the constant &lt;code&gt;c&lt;/code&gt; we see the &lt;code&gt;spread operator&lt;/code&gt;. In the former case, it simply means that you can pass to the function as many parameter as you want. Note that the &lt;code&gt;typeof a&lt;/code&gt; in this case is &lt;code&gt;object&lt;/code&gt; even though it is a native array in JavaScript. (I means native array because you might think about array-like if we use arguments. Please have a look at the question 28 or this link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments).&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Spread operator&lt;/code&gt; as in the constant &lt;code&gt;c&lt;/code&gt; allows us to combine array. So &lt;code&gt;...a&lt;/code&gt; in the code above is &lt;code&gt;rest parameter&lt;/code&gt; when it is used as function parameter but in this case it is the syntax of &lt;code&gt;spread operator&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, we get &lt;code&gt;c&lt;/code&gt; with 5 elements (&lt;code&gt;...a&lt;/code&gt; is a nested array, so the &lt;code&gt;length&lt;/code&gt; is 1) but the first element has 10 child elements (when we pass to the function &lt;code&gt;new Array(10)&lt;/code&gt;). The length of both then returns 15.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;33. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Kiora(name, ...career) {
  this.name = name;

  return Array.isArray(career) === true &amp;amp;&amp;amp; typeof career === &quot;object&quot; ? {} : &quot;&quot;;
}

var student = new Kiora(&quot;Vuong&quot;);

console.log(student.name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;Vuong&quot;&lt;/li&gt; 
 &lt;li&gt;B: undefined&lt;/li&gt; 
 &lt;li&gt;C: ErrorReference&lt;/li&gt; 
 &lt;li&gt;D: false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We have a function constructor &lt;code&gt;Kiora&lt;/code&gt; (written with a capital letter, but that is optional) that can be used to create object, as the &lt;code&gt;student&lt;/code&gt; object in the code above. In the function, we have two parameters with the second one is actually a &lt;code&gt;rest parameter&lt;/code&gt;. The typeof operator is &lt;code&gt;object&lt;/code&gt; but if we check with &lt;code&gt;Array.isArray(array)&lt;/code&gt; it also returns true.&lt;/p&gt; 
&lt;p&gt;For that reason, &lt;code&gt;Array.isArray(career) === true &amp;amp;&amp;amp; typeof career === &quot;object&quot;&lt;/code&gt; returns true. Hence the &lt;code&gt;return&lt;/code&gt; operator finally returns an object &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You might be surprised when &lt;code&gt;console.log(student.name);&lt;/code&gt; outputs &lt;code&gt;undefined&lt;/code&gt; given that the constructor function &lt;code&gt;Kiora&lt;/code&gt; returns an object. Otherwise, we might simply get the value &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;34. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Filter {
  constructor(element) {
    this.element = element;
  }
  filter() {
    return this.type() === &quot;object&quot; ? this.element[0].name : &quot;hello&quot;;
  }

  type() {
    return typeof this.element;
  }
}

let countries = [
  { name: &quot;New Zealand&quot;, isdeveloped: true },
  { name: &quot;Vietnam&quot;, isdeveloped: false },
];

let x = new Filter(countries);

const filter = countries.filter((item) =&amp;gt; {
  return !item.isdeveloped;
});

console.log(x.filter().length + filter[0].name.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 15&lt;/li&gt; 
 &lt;li&gt;B: 16&lt;/li&gt; 
 &lt;li&gt;C: 17&lt;/li&gt; 
 &lt;li&gt;D: 18&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;Apologize that the code snippet is a bit longer than usual. But actually it is not really challenging as you might think. You can easily get the correct result after spending a little of time to debug.&lt;/p&gt; 
&lt;p&gt;First we declare a class that has two methods. The first method &lt;code&gt;filter()&lt;/code&gt; will returns the first element of the array (of the propterty &lt;code&gt;element&lt;/code&gt;) or simply returns &lt;code&gt;hello&lt;/code&gt; depending on the &lt;code&gt;type()&lt;/code&gt; method. We know that &lt;code&gt;typeof of array&lt;/code&gt; will return &lt;code&gt;object&lt;/code&gt; so the &lt;code&gt;filter()&lt;/code&gt; method return &lt;code&gt;this.element[0].name&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Try to make you feel confused, we then call the built-in &lt;code&gt;filter()&lt;/code&gt; method. This native method returns a new array depending on the condition we pass to the call-back function. Note that &lt;code&gt;!item.isdeveloped&lt;/code&gt; means &lt;code&gt;false&lt;/code&gt;. It means we get &lt;code&gt;Vietnam&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Finally we get &lt;code&gt;New Zealand&lt;/code&gt;.length and &lt;code&gt;Vietnam&lt;/code&gt;.length, which in total returns 18.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;35. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function abc() {
  console.log(8);

  await Promise.resolve(2).then(console.log);

  console.log(3);
}

setTimeout(() =&amp;gt; {
  console.log(1);
}, 0);

abc();

queueMicrotask(() =&amp;gt; {
  console.log(0);
});

Promise.resolve(4).then(console.log);

console.log(6);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 6 - 8 - 3 - 0 - 4 - 2 - 1&lt;/li&gt; 
 &lt;li&gt;B: 8 - 2 - 3 - 0 - 4 - 6 - 1&lt;/li&gt; 
 &lt;li&gt;C: 6 - 8 - 2 - 0 - 4 - 3 - 1&lt;/li&gt; 
 &lt;li&gt;D: 8 - 6 - 2 - 0 - 4 - 3 - 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;D is correct anwser. The order of the asynchronous code&#39;s output depends on the MicroTask or MacroTask. MicroTask has a higher priority. Note that the synchronous code always be executed before asynchronous code. So in essense, we have the order as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;  1) synchronous code
  2) microtask code (promise, queueMicrotask)
  3) macrotask code (setTimeout, setInterval)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be awared that in Nodejs environment, we also have &lt;code&gt;process.nextTick(callback)&lt;/code&gt; which has the highest priority but we dont have it in this code.&lt;/p&gt; 
&lt;p&gt;So, first callback in the &lt;code&gt;setTimeout()&lt;/code&gt; will be executed last given that this is a MacroTask. That is why we got 1 last.&lt;/p&gt; 
&lt;p&gt;Second, the function &lt;code&gt;abc()&lt;/code&gt; is called next. Then we have 8 printed out in the console first. As the next line of code inside that function is an asynchrnous code with the keyword &quot;await&quot;, we then &lt;code&gt;console.log(6)&lt;/code&gt; as &lt;code&gt;Promise.resolve(4).then(console.log)&lt;/code&gt; is an asynchrnous code. That is why we got 6.&lt;/p&gt; 
&lt;p&gt;Now is the time for &lt;code&gt;Promise.resolve(2)&lt;/code&gt;, so we get 2. At this point, you might have some sort of confusion. What will happend if we do not pass the keyword &quot;await&quot; before &lt;code&gt;Promise.resolve(2)&lt;/code&gt; ?&lt;/p&gt; 
&lt;p&gt;As we have &lt;code&gt;await&lt;/code&gt;, the code will be blocked here. Then what? We get 0 and 4 not 3. &lt;code&gt;Promise&lt;/code&gt; and &lt;code&gt;queueMicrotask&lt;/code&gt; are both microtask and they are already to run before &lt;code&gt;console.log(3)&lt;/code&gt;. The reason is that microtask queue need to be emptied before any other codes can be called in the callstack.&lt;/p&gt; 
&lt;p&gt;In the next step, we get 3 and the last one is 1.&lt;/p&gt; 
&lt;p&gt;What would happend if we do not have the &lt;code&gt;await&lt;/code&gt; keyword? Then the order of the output will be 8 - 3 - 6 - 2 - 0 - 4 -1.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;36. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myAccount(money) {
  let myMoney = money;

  return {
    status: function () {
      return `You have $ ${myMoney} in your account`;
    },
    dePoSit: function (amount) {
      myMoney = myMoney + amount;
    },
    withDraw: function (amount) {
      if (amount &amp;gt; myMoney) {
        return `You cannot withdraw money now`;
      }
      myMoney = myMoney - amount;
    },
  };
}

const vuong = myAccount(1000);

vuong.withDraw(500);

vuong.withDraw(200);

vuong.dePoSit(100);

vuong.withDraw(50);

console.log(vuong.status());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;You have $ 950 in your account&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;You have $ 1000 in your account&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;You have $ 550 in your account&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;You have $ 350 in your account&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;As the &quot;state&quot; of the data is preserved each time we call &lt;code&gt;dePoSit()&lt;/code&gt; or &lt;code&gt;withDraw()&lt;/code&gt;, hence we get $350 after all.&lt;/p&gt; 
&lt;p&gt;Noted that that is a kind of &quot;factory&quot; function with &quot;preload&quot; data. You might think about another object when pass to &lt;code&gt;myAccount(somedata);&lt;/code&gt; some other data. That is a really helpful way to create multiple objects from a factory function.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;37. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const hoccoban = {
  x: &quot;youtube.com/hoccoban&quot;.length,
  getMe() {
    const inner = function () {
      console.log(++this.x);
    };
    inner.bind(this)();
  },
};

hoccoban.getMe();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 20&lt;/li&gt; 
 &lt;li&gt;B: 21&lt;/li&gt; 
 &lt;li&gt;C: 22&lt;/li&gt; 
 &lt;li&gt;D: 23&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We get 21. First &quot;youtube.com/hoccoban&quot; returns 20 as we are using the property length of the string. Then it is being added one more value in &lt;code&gt;++this.x&lt;/code&gt;. The question here seems trivial but it is actually not. There is a crucial note we should keep in mind is that &lt;code&gt;console.log(++this.x)&lt;/code&gt; will not work as &lt;code&gt;x&lt;/code&gt; is undefined when it is called outside of the object.&lt;/p&gt; 
&lt;p&gt;We can solve the problem with &lt;code&gt;this&lt;/code&gt; in this case by using arrow function in the inner so that is can become something like &lt;code&gt;const inner = () =&amp;gt; {}&lt;/code&gt; as the arrow function does not actually have &lt;code&gt;this&lt;/code&gt;. It will automatically look around and call the available object when the function is executed.&lt;/p&gt; 
&lt;p&gt;The second solution is that we can somehow &quot;bypass&quot; the tricky &lt;code&gt;this&lt;/code&gt; by using that/this solution. We just need to declare a new variable &lt;code&gt;const that = this&lt;/code&gt; inside getMe() and before declaring inner function. That is a quite common practice.&lt;/p&gt; 
&lt;p&gt;The third solution is to take advantage of call(), bind() and apply() which are native methods of function (yes, function is also an object in JavaScript). In this case, we implement &lt;code&gt;bind(this)&lt;/code&gt; to &quot;bind&quot; the function and the object so that &lt;code&gt;this&lt;/code&gt; can actually point to the object when the function is executed. Note that bind() cannot be instantlly executed so that we need to add () after we bridge the function and the object. If we replace bind() with call(), then we do not need to pass () as in the above example. So &lt;code&gt;inner.bind(this)();&lt;/code&gt; will become &lt;code&gt;inner.call(this);&lt;/code&gt;. They are technically equal. In practice, we tend to create a new variable to get the result from the binding of the function and the object.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;38. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* hocCoBan() {
  yield &quot;js.edu.vn&quot;;
  yield &quot;youtube.com/hoccoban&quot;;
  yield &quot;Vuong Nguyen&quot;;
}

let data = hocCoBan();

console.log((typeof data).length + data.next().value.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: 10&lt;/li&gt; 
 &lt;li&gt;C: Error&lt;/li&gt; 
 &lt;li&gt;D: 15&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;First, take a closer look at the function. It has a asterisk (*) next to the keyword &quot;function&quot;. We do not have &lt;code&gt;return&lt;/code&gt; keyword inside the function itself. What is going on here?&lt;/p&gt; 
&lt;p&gt;It you have already known about generator, then this code snippet is not a big deal at all. We do not use generator very often, but this native JavaScript feature is the basis for async/await function, which is supported in ES7 that allows us to handle the flow of asynchronous code much easily.&lt;/p&gt; 
&lt;p&gt;The operator &lt;code&gt;typeof data&lt;/code&gt; will return &lt;code&gt;object&lt;/code&gt; rather than &lt;code&gt;function&lt;/code&gt;, which is the same case with &lt;code&gt;typeof hocCoBan()&lt;/code&gt;. Of course, &lt;code&gt;typeof hocCoBan&lt;/code&gt; still returns &lt;code&gt;function&lt;/code&gt;. But it is actually a normal function. Basically, we get 6 in the operator &lt;code&gt;(typeof data).length&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then &lt;code&gt;data.next()&lt;/code&gt; calls the the built-in method &lt;code&gt;next()&lt;/code&gt; which will output the value in the first &lt;code&gt;yield&lt;/code&gt;, which is declared in the function. Then we get the length 9 with the string &lt;code&gt;js.edu.vn&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;After all, we get 15. Not that understanding generator is quite important if you really want to understand &lt;code&gt;async/await&lt;/code&gt; function.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;39. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const a = [1, 2, &quot;chó&quot;, 3, 1, &quot;chó&quot;, &quot;mèo&quot;, 3];

const b = [...new Set(a)];

b.length = &quot;chó&quot;.length;

console.log(b);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 4&lt;/li&gt; 
 &lt;li&gt;B: [1, 2, &quot;chó&quot;, 3, &quot;mèo&quot;]&lt;/li&gt; 
 &lt;li&gt;C: [1, 2, &quot;chó&quot;, &quot;mèo&quot;]&lt;/li&gt; 
 &lt;li&gt;D: [1, 2, &quot;chó&quot;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;When using ... in array, it is called spread operator in JavaScript which, technically, is similar to rest parameter (using in the context of function). It provides a more elegant way to concat (combine) or copy array. In the code above, b is a copy of a. However, as we pass a in to a &lt;code&gt;Set&lt;/code&gt;, it will return the unique value only in a. It means, now we have `[1, 2, &quot;chó&quot;, 3, &quot;mèo&quot;] in b.&lt;/p&gt; 
&lt;p&gt;However, we then set the length for b as 3. Note that &quot;chó&quot;.length returns 3 but in PHP, strlen(&quot;chó&quot;) returns 4, just in case you are coming from PHP world.&lt;/p&gt; 
&lt;p&gt;As we set the length for the array b, we also cut down the array itselt. That is the reason why we get [1, 2, &quot;chó&quot;] printing out in the console.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;40. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mot = function (m) {
  return arguments[0];
};

const hai = function (...m) {
  return arguments[arguments[0]];
};

const a = [mot(123), hai(1, 2, 3)];

console.log(typeof a !== &quot;object&quot; ? a[0] : a[1]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 1&lt;/li&gt; 
 &lt;li&gt;B: 2&lt;/li&gt; 
 &lt;li&gt;C: 3&lt;/li&gt; 
 &lt;li&gt;D: 123&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;First, it should be noted that &lt;code&gt;arguments&lt;/code&gt; cannot be used in an arrow function, so in order to take advantage of this feature, we have to write the function in the casual form. &lt;code&gt;arguments&lt;/code&gt; returns an array-like object that contains any parameter we pass into the function when executing it.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;...&lt;/code&gt; is a &lt;code&gt;rest operator&lt;/code&gt;. We use this feature in function and array. Noted that in the context of array, it is called &lt;code&gt;spread operator&lt;/code&gt; and it behaves differently. When declaring a function with ..., we can pass as many parameters into the function itselt when executing it as we want.&lt;/p&gt; 
&lt;p&gt;Note that in the function &lt;code&gt;hai&lt;/code&gt;, we return &lt;code&gt;arguments[arguments[0]]&lt;/code&gt; which means &lt;code&gt;hai(1, 2, 3)&lt;/code&gt; will return 2 rathern than 1 because &lt;code&gt;arguments[0]&lt;/code&gt; return 1 and then &lt;code&gt;arguments[1]&lt;/code&gt; returns 2.&lt;/p&gt; 
&lt;p&gt;The last thing we have to take note is that the typeof operator of an array will return &lt;code&gt;object&lt;/code&gt;, here the trick seems more daunting. The final anwser is 2 as we got it in &lt;code&gt;a[1]&lt;/code&gt;, or &lt;code&gt;hai(1, 2, 3)&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;41. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component {
  constructor(age) {
    this.age = age + `${typeof Coder}`.length;
  }

  getAge() {
    return ++this.age;
  }
}

class Coder extends Component {
  constructor(age) {
    super(age);
    this.age = age - `${typeof Coder}`.length;
  }
}

const a = new Coder(16);

console.log(a.getAge());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 7&lt;/li&gt; 
 &lt;li&gt;B: 8&lt;/li&gt; 
 &lt;li&gt;C: 9&lt;/li&gt; 
 &lt;li&gt;D: 10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We have two simple classes in which Coder extends Component. Nothing fancy. As &lt;code&gt;typeof ClassName&lt;/code&gt; returns &lt;code&gt;function&lt;/code&gt; rather than &lt;code&gt;class&lt;/code&gt;, we then get 8 in the operator &lt;code&gt;&quot;function&quot;.length&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Though we implement &lt;code&gt;super(age)&lt;/code&gt; in the Coder class, we actually overwrite the contructor of the parent class Component in the child class Coder. Therefore, when initiating the object &lt;code&gt;a&lt;/code&gt;, the following code is automatically triggered &lt;code&gt;this.age = age -&lt;/code&gt;${typeof Coder}&lt;code&gt;.length;&lt;/code&gt;. The difference between the child and parent &#39;s constructor is minus (-) and plus (+) in the above code.&lt;/p&gt; 
&lt;p&gt;As such, we have 16 - 8 rather than 16 + 8, which returns 8. The function &lt;code&gt;getAge()&lt;/code&gt; returns 9, so the corrent answer is C.&lt;/p&gt; 
&lt;p&gt;Bear in mind that JavaSCript is not a &quot;real&quot; OOP programming language even though we can now implement &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; as in other languages.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;42. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class RemoveFalse {
  constructor(element) {
    this.element = element;

    this.length = this.removeFalse().length;
  }

  removeFalse() {
    this.element = this.element.filter(Boolean);

    return this.element;
  }
}

const theArray = [true, false, 1, 0, NaN, undefined, &quot;&quot;, null, &quot;js.edu.vn&quot;];

const a = new RemoveFalse(theArray);

console.log(a.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: false&lt;/li&gt; 
 &lt;li&gt;B: true&lt;/li&gt; 
 &lt;li&gt;C: 2&lt;/li&gt; 
 &lt;li&gt;D: 3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The key message that can be taken away in the code snippet above is &lt;code&gt;filer(Boolean)&lt;/code&gt; which can be taken into consideration in case you want to eliminate &lt;code&gt;falsy values&lt;/code&gt; in an array. We can use &lt;code&gt;filter(callback)&lt;/code&gt; or &lt;code&gt;filter(Boolean)&lt;/code&gt; in particular in this case to do that. Note that we have to pass into the filter function a callback and in this case Boolean is actually a function. You can check &lt;code&gt;typeof Boolean&lt;/code&gt; to see it.&lt;/p&gt; 
&lt;p&gt;Similar to &lt;code&gt;map&lt;/code&gt; or &lt;code&gt;reduce&lt;/code&gt; function, &lt;code&gt;filter&lt;/code&gt; always returns a new array from the exisiting one. &lt;code&gt;[true, false, 1, 0, NaN, undefined, &quot;&quot;, null, &quot;js.edu.vn&quot;].filter(Boolean);&lt;/code&gt; will return &lt;code&gt;[true, 1, &quot;js.edu.vn&quot;];&lt;/code&gt;, hence calling the function &lt;code&gt;removeFalse()&lt;/code&gt; gives us 3. So the correct answer is 3.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;43. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const coderfarm = [1, [], {}, [], 2, 3];

const converted = Number(coderfarm instanceof Array);

const result = coderfarm.indexOf(converted + true);

console.log(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: []&lt;/li&gt; 
 &lt;li&gt;B: {}&lt;/li&gt; 
 &lt;li&gt;C: 2&lt;/li&gt; 
 &lt;li&gt;D: 4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;We have a simple array in the code snippet above that includes some digits, two other arrays and one object. Using the built-in function &lt;code&gt;Number&lt;/code&gt;, we can convert any value passing to the function into &lt;code&gt;digit&lt;/code&gt;. As &lt;code&gt;coderfarm instanceof Array&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;converted&lt;/code&gt; get 1. Noted that you can use another way to check the type of an array is &lt;code&gt;Array.isArrray(arrayToBeChecked)&lt;/code&gt; which return a &lt;code&gt;boolean&lt;/code&gt; value. Suprisingly, the operator &lt;code&gt;typeof []&lt;/code&gt; returns &lt;code&gt;object&lt;/code&gt; rather than &lt;code&gt;array&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The built-in function &lt;code&gt;indexOf&lt;/code&gt; will return the index of the element that is being checked. So as &lt;code&gt;converted + true&lt;/code&gt; return 2, we are going to check the index of the element with the value 2 in the array &lt;code&gt;coderfarm&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We get 4 in the &lt;code&gt;console.log&lt;/code&gt; and the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;44. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const converter = (arrayInput) =&amp;gt; {
  return { ...arrayInput };
};

const content = [&quot;function&quot;, &quot;object&quot;, &quot;decorator&quot;];

const checking = content[Number(false)];

const result = typeof converter(content) === content[1];

console.log(checking ? (result ? (typeof converter).length : false) : false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 6&lt;/li&gt; 
 &lt;li&gt;B: NaN&lt;/li&gt; 
 &lt;li&gt;C: true&lt;/li&gt; 
 &lt;li&gt;D: 8&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The operator &lt;code&gt;...&lt;/code&gt; in JavaScript is very handy. The function &lt;code&gt;converter&lt;/code&gt; is quite trivial, it takes advantege of &lt;code&gt;...&lt;/code&gt; (rest operator || spread operator) to turn an array into an object.&lt;/p&gt; 
&lt;p&gt;First we have the constant &lt;code&gt;checking&lt;/code&gt; with the value &lt;code&gt;function&lt;/code&gt; given that &lt;code&gt;Number(false)&lt;/code&gt; gives us 0 and that is the first index in the array &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Second, the constant &lt;code&gt;result&lt;/code&gt; gives us the value &lt;code&gt;true&lt;/code&gt; as the &lt;code&gt;typeof converter(content)&lt;/code&gt; is &lt;code&gt;function&lt;/code&gt;, which is also the value of &lt;code&gt;content[1]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then in the final code, we have &lt;code&gt;checking = true&lt;/code&gt;, and then &lt;code&gt;result = true&lt;/code&gt; as well, so the final result is &lt;code&gt;(typeof converter).length&lt;/code&gt; which is equivalent to &lt;code&gt;&quot;function&quot;.length&lt;/code&gt; because the &lt;code&gt;typeof of converter&lt;/code&gt; is simply &lt;code&gt;function&lt;/code&gt;. We get 8 after all and the correct answer is D.&lt;/p&gt; 
&lt;p&gt;So the key message here is that we can take advantate of the &lt;code&gt;spread operator&lt;/code&gt; (or &lt;code&gt;...&lt;/code&gt;) to turn an array to an object. For example: &lt;code&gt;const a = [&quot;hello&quot;, 2]&lt;/code&gt;, then we can have a go with &lt;code&gt;const b = {...a}&lt;/code&gt; and b is now an object with the following value: &lt;code&gt;{0: &quot;hello&quot;, 1: 2}&lt;/code&gt;. The key of the object is actually the index of the original array.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;45. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* js(length) {
  for (let i = length.length; i &amp;gt; 0; --i) {
    yield i;
  }
}

let getJS = js(typeof js);

let result = getJS.next().value;

console.log(result + getJS.next().value);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10&lt;/li&gt; 
 &lt;li&gt;B: 14&lt;/li&gt; 
 &lt;li&gt;C: 15&lt;/li&gt; 
 &lt;li&gt;D: 16&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We have a generator function in the code snippet above, which is defined with the *. Noted that we can &quot;store&quot; as many result as we want in a generator thanks to the keyword &lt;code&gt;yield&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;As the &lt;code&gt;typeof js&lt;/code&gt; is &lt;code&gt;function&lt;/code&gt;, so the length of the string &lt;code&gt;function&lt;/code&gt; is 8. So when calling &lt;code&gt;getJS.next().value;&lt;/code&gt;, we get 8. However, in the next calling, it returns 7, and in the following calling after that, we get 6. That is why generator can &quot;store&quot; and &quot;release&quot; (or return) as many value as we want.&lt;/p&gt; 
&lt;p&gt;So the answer is C, which is 8 (first execution of the generator) + 7 (second execution of the generator).&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;46. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ages = [10, 15, 20, 25];

let response = [];

ages.some(function (currentValue, index, ages) {
  if (currentValue &amp;gt; ages[ages.length - index])
    response.push(currentValue + ages.length);
});

console.log(response);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: [20]&lt;/li&gt; 
 &lt;li&gt;B: [20, 25]&lt;/li&gt; 
 &lt;li&gt;C: [25, 29]&lt;/li&gt; 
 &lt;li&gt;D: [29]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt; is a built-in function facilitating us to iterate the array using a callback. As in the code snippet above, there are three parameters in the callback, namely &lt;code&gt;currentValue&lt;/code&gt; (the value of the current element that is being checked), &lt;code&gt;index&lt;/code&gt; (the index of the element in the array that is being checked/evaluated) and &lt;code&gt;ages&lt;/code&gt; (the array itself).&lt;/p&gt; 
&lt;p&gt;The function &lt;code&gt;some()&lt;/code&gt; returns a &lt;code&gt;boolean&lt;/code&gt; value. The code &lt;code&gt;currentValue &amp;gt; ages[ages.length - index]&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; only one time, which is the last element. Let &#39;s examine the code when it runs through each element:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;10 &amp;gt; ages[4 - 0]. As ages[4] returns &lt;code&gt;undefined&lt;/code&gt;, and &lt;code&gt;10 &amp;gt; undefined&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, it stops.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;15 &amp;gt; ages[4 - 1]. As ages[3] returns 25, it breaks as the operator returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;20 &amp;gt; ages[4 - 2]. As ages[2] returns 20, it breaks as the operator returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;25 &amp;gt; ages[4 - 3]. As ages[1] returns 10, it returns &lt;code&gt;true&lt;/code&gt;. Only this value is being pushed to the array &lt;code&gt;response&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;So &lt;code&gt;response.push(currentValue + ages.length)&lt;/code&gt; will add the value 25 + 4 to the array &lt;code&gt;response&lt;/code&gt;, D is the correct answer.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;47. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const getSTring = (string, method = false) =&amp;gt; {
  if (method === true) {
    return string.slice(1, 4).length;
  }

  return string.substr(1, 4).length;
};

console.log(getSTring(&quot;hello&quot;, true) + getSTring(&quot;hello&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 6&lt;/li&gt; 
 &lt;li&gt;B: 7&lt;/li&gt; 
 &lt;li&gt;C: 8&lt;/li&gt; 
 &lt;li&gt;D: 9&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;getString()&lt;/code&gt; is an arrow function with two parameters. As you can see that the parameter &lt;code&gt;method&lt;/code&gt; has the default value &lt;code&gt;false&lt;/code&gt;, then if you do not pass any value to it when executing the function, the default value will be used.&lt;/p&gt; 
&lt;p&gt;The key thing to take note from the code above is the difference betweet &lt;code&gt;slice(1, 4)&lt;/code&gt; (which returns 3 characters) and &lt;code&gt;substr(1, 4)&lt;/code&gt; (which returns 4 ones).&lt;/p&gt; 
&lt;p&gt;Finally &lt;code&gt;console.log(getSTring(&quot;hello&quot;, true) + getSTring(&quot;hello&quot;))&lt;/code&gt; returns 7 because &lt;code&gt;slice&lt;/code&gt; and &lt;code&gt;substr&lt;/code&gt; are both used.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;48. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function (a, b, c) {
  console.log(Boolean([...arguments].slice(2, 3)[0].slice(3, 4)));
})(&quot;hello&quot;, &quot;world&quot;, &quot;new zealand&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;new&quot;&lt;/li&gt; 
 &lt;li&gt;B: true&lt;/li&gt; 
 &lt;li&gt;C: &quot;land&quot;&lt;/li&gt; 
 &lt;li&gt;D: false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;The code above is a self-executing function. It runs when it is being declared. We have three parameters and three arguments passed are &lt;code&gt;&quot;hello&quot;, &quot;world&quot;&lt;/code&gt; and &lt;code&gt;&quot;new zealand&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;First, &lt;code&gt;arguments&lt;/code&gt; returns an object consisting of arguments passed to the function when executing it. However, using spread operator &lt;code&gt;...&lt;/code&gt;, we then convert the object to an array. We can also do it by using &lt;code&gt;Array.from(object)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Second, &lt;code&gt;slice(2, 3)&lt;/code&gt; extracts the element from the index 2 to the index 3, which returns &lt;code&gt;&quot;new zealand&quot;&lt;/code&gt;. It is still an array. We then extract the element with the index &lt;code&gt;[0]&lt;/code&gt; and we get the string &lt;code&gt;&quot;new zealand&quot;&lt;/code&gt; rather than an array.&lt;/p&gt; 
&lt;p&gt;Third, &lt;code&gt;&quot;new zealand&quot;.slice(3, 4)&lt;/code&gt; gives us an empty string (with a space between) &lt;code&gt;&quot; &quot;&lt;/code&gt;. The &lt;code&gt;Boolean(&quot; &quot;)&lt;/code&gt; gives us &lt;code&gt;true&lt;/code&gt;. Noted that if there is no space in the empty string, we get &lt;code&gt;false&lt;/code&gt; instead.&lt;/p&gt; 
&lt;p&gt;So the correct answer is B.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;49. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class HocCoBan {
  name = &quot;hello world&quot;;

  getSlice(slice) {
    return this.getName(slice).slice(true, this.name.length);
  }

  getName(space) {
    return this.name.split(space);
  }
}

HocCoBan.prototype.split = function (argument) {
  return this.getSlice(argument);
};

const a = new HocCoBan();

console.log(a.split(&quot;&quot;).length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: true&lt;/li&gt; 
 &lt;li&gt;C: 10&lt;/li&gt; 
 &lt;li&gt;D: 11&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;The code above is nothing much special. However it is written in a complicated way on purpose. First, we have a class named &quot;HocCoBan&quot; with two methods and one property. Then we add another method &lt;code&gt;split&lt;/code&gt; using the tradional way (via &lt;code&gt;prototype&lt;/code&gt;). Note that &lt;code&gt;class&lt;/code&gt; in JavaScript is simply a syntactic sugar of &lt;code&gt;function&lt;/code&gt; given that &lt;code&gt;typeof ClassName&lt;/code&gt; return &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When we call the method &lt;code&gt;split&lt;/code&gt;, we pass the an empty string to it. This method then call other methods. The flow is as follows:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;split(&quot;&quot;)&lt;/code&gt; ==&amp;gt; &lt;code&gt;this.getSlice(&quot;&quot;)&lt;/code&gt; ==&amp;gt; &lt;code&gt;this.getName(&quot;&quot;)&lt;/code&gt; ==&amp;gt; &lt;code&gt;this.name.split(&quot;&quot;)&lt;/code&gt;. Here &lt;code&gt;split&lt;/code&gt; is a built-in function that convert a string to an array.&lt;/p&gt; 
&lt;p&gt;Noted that in &lt;code&gt;getSlice()&lt;/code&gt;, we also use &lt;code&gt;.slice(true, this.name.length)&lt;/code&gt; to &lt;code&gt;slice&lt;/code&gt; (cut) the array from the index 1 to 11. So the length is 10.&lt;/p&gt; 
&lt;p&gt;So the final answer is C.&lt;/p&gt; 
&lt;p&gt;This code might help us master the concept function &lt;code&gt;prototype&lt;/code&gt; in JavaScript and the understand the difference between the built in function &lt;code&gt;String.prototype.split&lt;/code&gt; and the function we declare by ourself &lt;code&gt;HocCoBan.prototype.split&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;50. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function javaScript(node) {
  let mot = node.includes(&quot;I&quot;) ? &quot;love&quot; : &quot;you&quot;;

  return function (deno = mot) {
    let hai = node.replace(deno, &quot;done&quot;);

    return function (done = hai) {
      return (node + deno + done).length;
    };
  };
}

console.log(javaScript(&quot;I love you&quot;)()());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 18&lt;/li&gt; 
 &lt;li&gt;B: 24&lt;/li&gt; 
 &lt;li&gt;C: 20&lt;/li&gt; 
 &lt;li&gt;D: 25&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;Apart from learning some built-in functions to handle string such as &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;inclues&lt;/code&gt;, we are reviving the concept of &lt;code&gt;currying function&lt;/code&gt; in JavaScript. Say you want to declare a function with three parameters, you may consider refactoring the code by declaring 3 nested functions, each with one parameter you wish to pass to. Basically, both of them work in the same way. However, noted that only the outerest (the main) function has the name as &lt;code&gt;javaScript&lt;/code&gt; in the code above. Both nested (inner) functions are declared without the name. We also use three &lt;code&gt;return&lt;/code&gt; keywords in the code.&lt;/p&gt; 
&lt;p&gt;When executing the function, you then have three &lt;code&gt;()&lt;/code&gt; as in the &lt;code&gt;javaScript(&quot;I love you&quot;)()()&lt;/code&gt;. We do not pass any argument into the second and third functions (both are inner/nested functions without the name) and these functions will take the default value we have alreaded declared when being executing.&lt;/p&gt; 
&lt;p&gt;All in all, we have the final operator &lt;code&gt;return (node + deno + done).length;&lt;/code&gt; in which &lt;code&gt;node&lt;/code&gt; is &quot;I love you&quot;, &lt;code&gt;deno&lt;/code&gt; is &quot;love&quot; and &lt;code&gt;done&lt;/code&gt; is &quot;I done you&quot;. The length of these strings is 24, which you can calculate by yourself the concatenated string &lt;code&gt;I love youyou I done you&lt;/code&gt;. Be aware of the &lt;code&gt;empty space&lt;/code&gt;, which is also taken into account.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;51. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const www = [&quot;hello&quot;, &quot;coranovirus&quot;, &quot;kiora&quot;, &quot;world&quot;, &quot;new zealand&quot;];

const found = www.find(function (world) {
  return world &amp;gt; &quot;victory&quot;;
});

const result = found[1] &amp;lt; www[0][0] ? www[false ? 1 : 0] : www[true ? 0 : 1];

console.log(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;hello&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;world&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;victory&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;w&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;The key information in the question above is about the method &lt;code&gt;Array.prototype.find()&lt;/code&gt;. It returns the first element in the array that meets the condition declared in the callback function, which is passed to the function. The array is being iterated to check every single element. In the code above, we might easily see that the element &lt;code&gt;world&lt;/code&gt; is the first element in the array that has a larger value than &lt;code&gt;victory&lt;/code&gt;. Remember that &quot;w&quot; &amp;gt; &quot;v&quot; return trues if the two letters are compared. When two words are being compared, only the first letter in each word is being utilised to compare.&lt;/p&gt; 
&lt;p&gt;As the result, &lt;code&gt;found&lt;/code&gt; is now &lt;code&gt;world&lt;/code&gt; and thus &lt;code&gt;found[1]&lt;/code&gt; returns the letter &lt;code&gt;w&lt;/code&gt; whereas &lt;code&gt;www[0][0]&lt;/code&gt; gives us the letter &lt;code&gt;h&lt;/code&gt; in the element &lt;code&gt;hello&lt;/code&gt;. It means &lt;code&gt;found[1] &amp;lt; www[0][0]&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So the final result is &lt;code&gt;www[true ? 0: 1]&lt;/code&gt; or &lt;code&gt;www[0]&lt;/code&gt;, which is &lt;code&gt;hello&lt;/code&gt;. And the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;52. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function (flag) {
  let age = Boolean(NaN === NaN ? false : flag);

  console.log(age.toString()[Number(flag)]);
})([]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;f&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;t&quot;&lt;/li&gt; 
 &lt;li&gt;C: true&lt;/li&gt; 
 &lt;li&gt;D: false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We have a self-executing function with the parameter/argument is an empty array. Noted that &lt;code&gt;NaN === NaN&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, then &lt;code&gt;age&lt;/code&gt; gets the value &lt;code&gt;flag&lt;/code&gt;, which is an empty array. However, the boolean value is &lt;code&gt;true&lt;/code&gt; when we call &lt;code&gt;Boolean([])&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The function &lt;code&gt;toString()&lt;/code&gt; returns the string &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;Number([])&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;. Then we get &quot;t&quot; in the console.log. The correct answer is B.&lt;/p&gt; 
&lt;p&gt;Keep in mind that &lt;code&gt;Boolean([])&lt;/code&gt; ==&amp;gt; &lt;code&gt;true&lt;/code&gt; but &lt;code&gt;Number([])&lt;/code&gt; ==&amp;gt; &lt;code&gt;0&lt;/code&gt;. And sadly &lt;code&gt;NaN === NaN&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;53. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
1) console.log(Boolean([]));
2) console.log(Number([]));
3) console.log(Number(Boolean([])));
4) console.log(Boolean(Number([])));

5) console.log(Boolean({}));
6) console.log(Number({}));
7) console.log(Number(Boolean({})));
8) console.log(Boolean(Number({})));

9) console.log(Boolean(new Boolean(false)));

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: true - 0 - 1 - false - true - 1 - 1 - false - false&lt;/li&gt; 
 &lt;li&gt;B: true - 0 - 1 - false - false - NaN - 1 - false - true&lt;/li&gt; 
 &lt;li&gt;C: true - 0 - 1 - false - false - false - 1 - false - false&lt;/li&gt; 
 &lt;li&gt;D: true - 0 - 1 - false - true - NaN - 1 - false - true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;JavaScript is sometimes tedious to deal with given that it is a loosely type language. The data type of a variable can be changed depending on the value. An unexpected behaviour might unfortunately occur when you change/convert the original value to another one.&lt;/p&gt; 
&lt;p&gt;For example, the code 2 &lt;code&gt;Number([])&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt; and 6 &lt;code&gt;(Number({}))&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt;, although both &lt;code&gt;(Boolean([]))&lt;/code&gt; and &lt;code&gt;(Boolean({}))&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the code 9 &lt;code&gt;Boolean(new Boolean(false))&lt;/code&gt;, we get &lt;code&gt;true&lt;/code&gt; even though we pass into the function constructor &lt;code&gt;Boolean()&lt;/code&gt; a &lt;code&gt;false&lt;/code&gt; (as the) parameter. However, if we do not use the keyword &lt;code&gt;new&lt;/code&gt;, then &lt;code&gt;false&lt;/code&gt; will return. It seems that in &lt;code&gt;Boolean(new Boolean(false))&lt;/code&gt;, we have a valid opreration, so it is &lt;code&gt;true&lt;/code&gt;. However, in the &lt;code&gt;Boolean(Boolean(false)))&lt;/code&gt; where we do not use the keyword &lt;code&gt;new&lt;/code&gt;, we then get &lt;code&gt;false&lt;/code&gt; because now a &lt;code&gt;false&lt;/code&gt; value is being evaluated rather than an operation.&lt;/p&gt; 
&lt;p&gt;So, the correct answer is D.&lt;/p&gt; 
&lt;p&gt;Credit: @tiepphan, Vietnamese Angular Facebook group.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;54. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myYoutube = {
  name: &quot;hoccoban&quot;,
  address: &quot;youtube.com/hoccoban&quot;,
  getInfo() {
    return this;
  },
  content: () =&amp;gt; (this === window ? myYoutube.getInfo() : this),
};

console.log(myYoutube.content().name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;hoccoban&quot;&lt;/li&gt; 
 &lt;li&gt;B: window (object)&lt;/li&gt; 
 &lt;li&gt;C: NaN&lt;/li&gt; 
 &lt;li&gt;D: undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;To answer the tricky question above, you might want to have a look at the concept of &lt;code&gt;this&lt;/code&gt; in JavaScript (on browser environment). By default, &lt;code&gt;this&lt;/code&gt; refers to &lt;code&gt;window&lt;/code&gt; object. Note that &lt;code&gt;Window&lt;/code&gt; (written in capital) is the Function constructor of the &lt;code&gt;window&lt;/code&gt; object. In this regard, &lt;code&gt;console.log(this === window)&lt;/code&gt; return true but &lt;code&gt;console.log(this === Window)&lt;/code&gt; returns false.&lt;/p&gt; 
&lt;p&gt;As &lt;code&gt;getInfo()&lt;/code&gt; is an arrow function, &lt;code&gt;this&lt;/code&gt; declared inside this function points to &lt;code&gt;window&lt;/code&gt;, so &lt;code&gt;myYoutube.content()&lt;/code&gt; returns &lt;code&gt;myYoutube.getInfo()&lt;/code&gt;. Noted that we have to explicitly write &lt;code&gt;myYoutube.getInfo()&lt;/code&gt; to make sure the code will run correctly as &lt;code&gt;this&lt;/code&gt; in this case does not work as it does not refer to the currect object. In the function &lt;code&gt;getInfo()&lt;/code&gt;, however, &lt;code&gt;this&lt;/code&gt; actually refers to the currect object instead of &lt;code&gt;window&lt;/code&gt; object because we use a normal function here.&lt;/p&gt; 
&lt;p&gt;Then we have the property &lt;code&gt;name&lt;/code&gt; with the value &quot;hoccoban&quot;. So the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;55. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myArray = [1, 2, 3];

myArray.someProperty = this;

Array.prototype.someOtherProperty = &quot;hello&quot;;

let result = [];

for (let key in myArray) {
  result.push(key);
}

for (let key in myArray) {
  if (myArray.hasOwnProperty(key)) {
    result.push(key);
  }
}

console.log(result.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10&lt;/li&gt; 
 &lt;li&gt;B: NaN&lt;/li&gt; 
 &lt;li&gt;C: 9&lt;/li&gt; 
 &lt;li&gt;D: 7&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We have a simple array that consists of 3 elements. If checking the type of the array with the operator &lt;code&gt;typeof&lt;/code&gt;, we will have &lt;code&gt;object&lt;/code&gt;. (Hint, you can make use of &lt;code&gt;Array.isArray(array))&lt;/code&gt; or &lt;code&gt;array instanceof Array&lt;/code&gt; to check its type).&lt;/p&gt; 
&lt;p&gt;When declaring &lt;code&gt;myArray.someProperty&lt;/code&gt;, we now add a new property to that array and when declaring &lt;code&gt;Array.prototype.someOtherProperty = &quot;hello&quot;&lt;/code&gt;, we add a new property to every single array.&lt;/p&gt; 
&lt;p&gt;As a result, the &lt;code&gt;for... in&lt;/code&gt; loop will iterate through the array in question and return its key/property and the inherited property as well. However, in the second iteration, we take advantage of the method &lt;code&gt;hasOwnProperty(key)&lt;/code&gt; to check whether a particular key/property actually belongs to the array in question rather than the inherited one.&lt;/p&gt; 
&lt;p&gt;In short, in the first iteration, we get 5 (3 original ones, 1 property that is directly added to the array, 1 inherited from the Array.prototype. In the second one, we only get 4 as the inherited property is not taken into consideration.&lt;/p&gt; 
&lt;p&gt;Keep in mind that, we use &lt;code&gt;for... of&lt;/code&gt; to loop through an array or the traditional &lt;code&gt;for&lt;/code&gt; loop. It is not a good practice to use &lt;code&gt;for ... in&lt;/code&gt; to loop through an array. It is often used to loop through an object.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;56. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const coderfarm = [1, 2, 3, 4, 5];

const [top, ...bottom] = (function (a) {
  let result = a;

  a.unshift(new Array(3));

  return result;
})(coderfarm);

console.log(top.length + bottom.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 8&lt;/li&gt; 
 &lt;li&gt;B: 9&lt;/li&gt; 
 &lt;li&gt;C: 10&lt;/li&gt; 
 &lt;li&gt;D: 11&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;We are using destructure array (or object) technique to extract element of an array (or object). We also take advantage of &lt;code&gt;...&lt;/code&gt; (spread parameter) here.&lt;/p&gt; 
&lt;p&gt;The array we are destructuring is returned from a self-executing function. First we pass the parameter &lt;code&gt;coderfarm&lt;/code&gt;, which is the parameter &lt;code&gt;a&lt;/code&gt; when declaring the function. Then we update this array with some additional value (an array with three &lt;code&gt;undefined&lt;/code&gt; elements using &lt;code&gt;new Array(3)&lt;/code&gt;) on the top of the array (using &lt;code&gt;unshift&lt;/code&gt;). The array is updated now as &lt;code&gt;[[undefined, undefined, undefined], 1, 2, 3, 4, 5]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So &lt;code&gt;top&lt;/code&gt; is the first element of the array or &lt;code&gt;[undefined, undefined, undefined]&lt;/code&gt;, which returns 3 when we check the length.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;bottom&lt;/code&gt; returns the rest of the array in question, which is 5 when using &lt;code&gt;length&lt;/code&gt; property.&lt;/p&gt; 
&lt;p&gt;The final number is 8 and thus the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;57. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let age = { number: 10 };

const getAge = (flag) =&amp;gt; {
  flag ? delete age.number : delete age;
  return age.number++;
};

console.log(getAge(false));

console.log(age.number);

console.log(getAge(true));

console.log(age.number);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10 - 10 - NaN - NaN&lt;/li&gt; 
 &lt;li&gt;B: 10 - 10 - undefined - undefined&lt;/li&gt; 
 &lt;li&gt;C: 10 - 11 - undefined - undefined&lt;/li&gt; 
 &lt;li&gt;D: 10 - 11 - NaN - NaN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The operator &lt;code&gt;delete&lt;/code&gt; only works on the property of an object, not the object itself. In the code snippet above, we have a simple function &lt;code&gt;getAge&lt;/code&gt; with the parameter &lt;code&gt;flag&lt;/code&gt;. When the &lt;code&gt;flag&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, we trigger &lt;code&gt;delete age.number&lt;/code&gt; and if it is &lt;code&gt;false&lt;/code&gt;, we will use the operator &lt;code&gt;delete&lt;/code&gt; upon the whole object.&lt;/p&gt; 
&lt;p&gt;As this operator does not work on an object, if we can say that, it turns out that &lt;code&gt;delete age&lt;/code&gt; actually does nothing. As such, &lt;code&gt;console.log(getAge(false))&lt;/code&gt; returns 10 and simultanously increases the value of &lt;code&gt;age.number&lt;/code&gt; to 11. The value is now being kept in the memory. As such, &lt;code&gt;console.log(age.number)&lt;/code&gt; will return 11.&lt;/p&gt; 
&lt;p&gt;When we pass the argument &lt;code&gt;flag&lt;/code&gt; as &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;console.log(getAge(true))&lt;/code&gt;, we will trigger &lt;code&gt;delete age.number&lt;/code&gt; which removes the value and the property &lt;code&gt;age.number&lt;/code&gt; itself. It means &lt;code&gt;age.number&lt;/code&gt; is now &lt;code&gt;undefined&lt;/code&gt;. However, because we also attempt to increase the value of this &lt;code&gt;undefined&lt;/code&gt; property using &lt;code&gt;++&lt;/code&gt; operator, it returns &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;console.log(age.number)&lt;/code&gt; also returns &lt;code&gt;NaN&lt;/code&gt; as well. So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;58. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const youtube = { name: &quot;hoccoban&quot; };

const copy = Object.create(youtube);

const cloneA = Object.assign({}, copy);

const cloneB = Object.assign({}, youtube);

console.log(cloneA.name);

console.log(cloneB.name);

console.log(copy.name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: undefined - &quot;hoccoban&quot; - &quot;hoccoban&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;hoccoban&quot; - &quot;hoccoban&quot; - &quot;hoccoban&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;hoccoban&quot; - &quot;hoccoban&quot; - &quot;undefined&quot;&lt;/li&gt; 
 &lt;li&gt;D: undefined - &quot;undefined&quot; - &quot;hoccoban&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;We have three outputs in the code snippet above.&lt;/p&gt; 
&lt;p&gt;First &lt;code&gt;console.log(cloneA.name);&lt;/code&gt; will return &lt;code&gt;undefined&lt;/code&gt; but why? We use &lt;code&gt;Object.assign&lt;/code&gt; to clone a new object from an empty and from the object &lt;code&gt;copy&lt;/code&gt;. The object &lt;code&gt;copy&lt;/code&gt; itself is actually created from the original object &lt;code&gt;youtube&lt;/code&gt; using &lt;code&gt;Object.create&lt;/code&gt;. Noted that because we use &lt;code&gt;Object.create&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt; will inherit the data from the original one but it is still an empty object itself.&lt;/p&gt; 
&lt;p&gt;Second, both &lt;code&gt;console.log(cloneB.name)&lt;/code&gt; and &lt;code&gt;console.log(copy.name)&lt;/code&gt; return &quot;hoccoban&quot; because &lt;code&gt;cloneB.name&lt;/code&gt; will have the actual property &lt;code&gt;name&lt;/code&gt;. On the contrary, &lt;code&gt;copy.name&lt;/code&gt; outputs the property &lt;code&gt;name&lt;/code&gt; inherited from the &lt;code&gt;youtube&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;59. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;((x) =&amp;gt; {
  const data = !Array.isArray(x) ? x : x.entries();

  console.log(data.next().value[1]);
})([&quot;hello&quot;, &quot;world&quot;, &quot;vuong&quot;]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: &quot;hello&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;world&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;vuong&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We have a self-invoking function here and we pass an array to it when the function is executed. Note that &lt;code&gt;Array.isArray(x)&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt; but actually we use &lt;code&gt;!&lt;/code&gt; before &lt;code&gt;Array.isArray(x)&lt;/code&gt;. It means &lt;code&gt;data&lt;/code&gt; will return &lt;code&gt;x.entries()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The method &lt;code&gt;array.entries()&lt;/code&gt;, as you might have already known, returns a &lt;code&gt;gererator&lt;/code&gt;. Here we will call &lt;code&gt;next()&lt;/code&gt; to iterate through each element. Note that if you only call &lt;code&gt;next()&lt;/code&gt; once, it will only return the first element instead of the whole iterator.&lt;/p&gt; 
&lt;p&gt;Then when we call &lt;code&gt;value&lt;/code&gt;, it returns an array with the index and the value of the iterator. So what will we get if we call &lt;code&gt; console.log(data.next().value[0])&lt;/code&gt;. Sure, it returns &lt;code&gt;0&lt;/code&gt; as &lt;code&gt;0&lt;/code&gt; is the index.&lt;/p&gt; 
&lt;p&gt;So the correct answer is B.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;60. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let x = Symbol();

let y = Symbol();

console.log(x === y ? `${typeof x}`[1] : `${typeof x}`[2]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: &quot;object&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;y&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;m&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;As &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are both instances of &lt;code&gt;symbol&lt;/code&gt;, they are unique in our codebase; therefore, the &lt;code&gt;===&lt;/code&gt; comparison will return &lt;code&gt;false&lt;/code&gt; as expected. In the simple code snippet above, we get the &lt;code&gt;else&lt;/code&gt; operation.&lt;/p&gt; 
&lt;p&gt;It should be noted that the &lt;code&gt;typeof x&lt;/code&gt; operation gives us &lt;code&gt;symbol&lt;/code&gt;, and since a string in JavaScript is iterable, we get &lt;code&gt;m&lt;/code&gt; as we pass in the index 2.&lt;/p&gt; 
&lt;p&gt;So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;61. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const frameworks = [&quot;react&quot;, &quot;angular&quot;, &quot;vue&quot;];

const iterator = frameworks[Symbol.iterator]();
const i = frameworks.entries();

iterator.next();
i.next();

console.log(iterator.next().value[1]);
console.log(i.next().value[1]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;react&quot; - &quot;angular&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;react&quot; - &quot;react&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;angular&quot; - &quot;angular&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;n&quot; - &quot;angular&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;As &lt;code&gt;frameworks&lt;/code&gt; is an array, it has a built-in method named &lt;code&gt;Symbol.iterator&lt;/code&gt;. You can hence iterate through the whole array using commonly used methods such as &lt;code&gt;for... of&lt;/code&gt;, normal &lt;code&gt;for loop&lt;/code&gt;, &lt;code&gt;forEach&lt;/code&gt; or &lt;code&gt;map&lt;/code&gt;, among others. That is relatively trivial, I suppose.&lt;/p&gt; 
&lt;p&gt;This code challenge above is written to help us understand the concept of iteration better. First, we use the built-in method called &lt;code&gt;entries()&lt;/code&gt; to create a new iteration. So does &lt;a href=&quot;&quot;&gt;Symbol.iterator&lt;/a&gt;. Both seem to do the same thing.&lt;/p&gt; 
&lt;p&gt;Each time we call &lt;code&gt;next()&lt;/code&gt; method, the iteration will output one element. We then can call &lt;code&gt;value()&lt;/code&gt; to get the value. The difference between &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;i&lt;/code&gt; is that the former shows the value itself while the latter outputs an array consisting of the index and the value. It means that in the code above, &lt;code&gt;iterator.next().value&lt;/code&gt; returns &lt;code&gt;angular&lt;/code&gt; and &lt;code&gt;i.next().value&lt;/code&gt; gives us &lt;code&gt;[1, angular]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;62. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class React {
  theName = &quot;Not React&quot;;
}

class Author extends React {
  static theName = &quot;Real React&quot;;

  render() {
    return this.theName;
  }

  static render() {
    return this.theName;
  }
}

const me = new Author();

console.log(me.render());

console.log(Author.render());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;Not React&quot; - &quot;Real React&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;Not React&quot; - Error&lt;/li&gt; 
 &lt;li&gt;C: Error - Error&lt;/li&gt; 
 &lt;li&gt;D: Error - &quot;Real React&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;We have two classes in the code snippet above. It sounds we are imitating React. The &lt;code&gt;React&lt;/code&gt; class has only one property named &lt;code&gt;theName,&lt;/code&gt; and no method is declared here. Providing that &lt;code&gt;Author&lt;/code&gt; extends the &lt;code&gt;React&lt;/code&gt; class, it inherits that property, surely. However, we have also declared another property with the same name in the &lt;code&gt;Author&lt;/code&gt; classs. The difference is that the property declared in the child class is given the keyword &lt;code&gt;static.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;Author&lt;/code&gt; class also has two methods with the same name &lt;code&gt;render()&lt;/code&gt;, one as regular methods and another with &lt;code&gt;static&lt;/code&gt; keyword. Will that work in JavaScript?&lt;/p&gt; 
&lt;p&gt;It turns out that JavaScript is quite flexible. It supports both property and method if they are declared with the same name as long as they are either regular property (or method) or static property (or method).&lt;/p&gt; 
&lt;p&gt;The last thing you should be aware of is that the method &lt;code&gt;static render()&lt;/code&gt; only calls the static property, here is &lt;code&gt;static theName = &quot;Real React&quot;;&lt;/code&gt; So does the regular method &lt;code&gt;render().&lt;/code&gt; As such, the code does not run into any issues.&lt;/p&gt; 
&lt;p&gt;So the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;63. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class js {
  say = &quot;hello&quot;;
}

js.prototype.say = &quot;goodbye&quot;;
console.log(new js().say);

js.prototype.thename = &quot;google&quot;;
console.log(new js().thename);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: Error - Error&lt;/li&gt; 
 &lt;li&gt;B: &quot;hello&quot; - &quot;google&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;goodbye&quot; - &quot;google&quot;&lt;/li&gt; 
 &lt;li&gt;D: Error - &quot;google&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;js&lt;/code&gt; is a standard class declared in the code snippet above that has only one property with the name &lt;code&gt;say.&lt;/code&gt; Then we again declare another property with the same name &lt;code&gt;say&lt;/code&gt; for it. You might think that the property &lt;code&gt;say&lt;/code&gt; has been overwritten with a new value &lt;code&gt;goodbye.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;That is not the case as we will get &lt;code&gt;hello&lt;/code&gt; when we run &lt;code&gt;console.log(new js().say);&lt;/code&gt;. It is clear that the JavaScript engine prioritizes the property declared inside the class more than the property declared later using the prototype mechanism.&lt;/p&gt; 
&lt;p&gt;If the property has not been declared inside the class itself, we can then add a new one with the help of &lt;code&gt;prototype&lt;/code&gt; as in &lt;code&gt;thename&lt;/code&gt;. Without the doubt, the code &lt;code&gt;console.log(new js().thename);&lt;/code&gt; gives us &lt;code&gt;google&lt;/code&gt; as expected.&lt;/p&gt; 
&lt;p&gt;So the correct answer is B.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;64. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
const App = ([y, x, z]) =&amp;gt; {			
	return ()=&amp;gt;{
			++x
		return ()=&amp;gt;{
			return x++;
		}
	}	
}

console.log(App([10, 20, 30, 40])()())

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10&lt;/li&gt; 
 &lt;li&gt;B: 32&lt;/li&gt; 
 &lt;li&gt;C: 21&lt;/li&gt; 
 &lt;li&gt;D: 22&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;To answer the question raised on the above code snippet, you might want to revisit two concepts, &lt;code&gt;currying function&lt;/code&gt; and &lt;code&gt;destructing array or object.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;First, &lt;code&gt;currying function&lt;/code&gt; means we convert a function with multiple parameters into multiple functions with a SINGLE parameter. Then you can easily manipulate the flow of the data. Noted that &lt;code&gt;currying function&lt;/code&gt; is relevant to &lt;code&gt;higher-order function&lt;/code&gt;, you might want to have a look.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;destructing array or object&lt;/code&gt; means we attempt to extract a complex array or object more conveniently. For example, &lt;code&gt;[y, x, z] = [10, 20, 30, 40]&lt;/code&gt; will extract y, x and z with the value 10, 20 and 30 respectively.&lt;/p&gt; 
&lt;p&gt;The last thing is incremental operator here &lt;code&gt;++x&lt;/code&gt; returns 21 but &lt;code&gt;x++&lt;/code&gt; does not as it still returns 21.&lt;/p&gt; 
&lt;p&gt;So the correct answer is C.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;65. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
const numbers = [5, 6, 7];

function callback(accumulator, currentValue){
	return accumulator + currentValue;
}

const theCallBack = (accumulator, currentValue) =&amp;gt; accumulator + currentValue;

const sum = numbers.reduce(callback, numbers.reduce(theCallBack, numbers.reduce(theCallBack, 7)));

console.log(sum); 

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 54&lt;/li&gt; 
 &lt;li&gt;B: 55&lt;/li&gt; 
 &lt;li&gt;C: 60&lt;/li&gt; 
 &lt;li&gt;D: 61&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt; is a bit perplexed built-in method that allows you to manipulate data in an array. It returns a single value from the array predefined as in the case with &lt;code&gt;map&lt;/code&gt; or &lt;code&gt;filter&lt;/code&gt;. The syntaxt of the function is &lt;code&gt;arr.reduce(callback( accumulator, currentValue, [, index[, array]] )[, initialValue])&lt;/code&gt;, so it accepts a callback function with four arguments including &lt;code&gt;accumulator&lt;/code&gt;, &lt;code&gt;currentValue&lt;/code&gt;, &lt;code&gt;currentIndex&lt;/code&gt; (optional) and &lt;code&gt;array&lt;/code&gt; (optional).&lt;/p&gt; 
&lt;p&gt;The second argument of the &lt;code&gt;reduce&lt;/code&gt; method, which is optional, is called &lt;code&gt;initialValue&lt;/code&gt; that will be counted as the first element with the index 0 when &lt;code&gt;reduce&lt;/code&gt; is executing. If &lt;code&gt;initialValue&lt;/code&gt; is not provided, then &lt;code&gt;reduce&lt;/code&gt; will run with the index 1 instead. &lt;code&gt;reduce()&lt;/code&gt; sounds complicated, but truly it is not. In case you want to revise the function, kindly take a look at MDN here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&lt;/p&gt; 
&lt;p&gt;The above code has two callback functions named &lt;code&gt;callback&lt;/code&gt; and &lt;code&gt;thecallback&lt;/code&gt;, which do the same thing. The seemingly creepy code is the variable &lt;code&gt;sum&lt;/code&gt;, which is returned by a couple of nested &lt;code&gt;reduce&lt;/code&gt; functions. It turns out that there is only one &quot;real&quot; &lt;code&gt;reduce&lt;/code&gt; function and the other ones give us &lt;code&gt;initialValue&lt;/code&gt; only.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The first &lt;code&gt;initialValue&lt;/code&gt; is 7;&lt;/li&gt; 
 &lt;li&gt;The first nested &lt;code&gt;reduce&lt;/code&gt; function gives us 7 (initialValue) + 5 + 6 + 7 = 25.&lt;/li&gt; 
 &lt;li&gt;The second nested &lt;code&gt;reduce&lt;/code&gt; has 25 as the initialValue, which we get from the above. Then it returns 25 + 5 + 6 + 7 = 43;&lt;/li&gt; 
 &lt;li&gt;The &quot;real&quot; &lt;code&gt;reduce&lt;/code&gt; function now has 43 as the initialValue, the we get the final result: 43 + 5+ 6 + 7 = 61.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;66. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
const a = {name: &quot;hoccoban.com&quot;};
const b = {name: &quot;youtube.com/hoccoban&quot;};

const first = {...a}.name.length;
const second = {...a, ...b}.name.length;
const third = {...a, ...b, name: &quot;hello&quot;}.name.length;

console.log(first + second + third)

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 12&lt;/li&gt; 
 &lt;li&gt;B: 37&lt;/li&gt; 
 &lt;li&gt;C: 5&lt;/li&gt; 
 &lt;li&gt;D: 20&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;The code snippet above is relatively trivial. What we can learn from it is all about the &lt;code&gt;spread operator&lt;/code&gt; (three-dot ...). Sometimes it is also used as a &lt;code&gt;rest operator&lt;/code&gt; to extract data from an object or array.&lt;/p&gt; 
&lt;p&gt;We have two simple objects which both have the same key &lt;code&gt;name&lt;/code&gt; but different values. The constant &lt;code&gt;first&lt;/code&gt; gives us the length of the string value of the keyword &lt;code&gt;name&lt;/code&gt; that is copied from &lt;code&gt;a&lt;/code&gt;. So, &lt;code&gt;first&lt;/code&gt; is now 12.&lt;/p&gt; 
&lt;p&gt;The constant &lt;code&gt;second&lt;/code&gt; merges &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; into one object. However, as &lt;code&gt;b&lt;/code&gt; has the same key &lt;code&gt;name&lt;/code&gt; with &lt;code&gt;a&lt;/code&gt;, the object created by merging two objects will have the value of &lt;code&gt;b&lt;/code&gt;. It means the constant &lt;code&gt;second&lt;/code&gt; gives us the length of &lt;code&gt;youtube.com/hoccoban&lt;/code&gt;, which is 20.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;third&lt;/code&gt; does the same thing with &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt; as it merges two objects into one. However, it also adds another key-value to the object. Coincidently, the key now is &lt;code&gt;name&lt;/code&gt;, which is the same with the key attained from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. Hence, this key and value will take over the merged object. That means &lt;code&gt;third&lt;/code&gt; is the length of the string &lt;code&gt;hello&lt;/code&gt;, which is 5.&lt;/p&gt; 
&lt;p&gt;In total, we have 12 + 20 + 5, and the final result is 37.&lt;/p&gt; 
&lt;p&gt;So the correct answer is B.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;67. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
const hocCoBan = {};

Object.defineProperty(hocCoBan, &quot;domain&quot;, {
    value: &quot;hoccoban.com&quot;,    
})

async function App({year, age}){	
	return year - age + hocCoBan.domain.length;
}

App({year: 2021, age: 30}).then(r =&amp;gt; console.log(r));

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 2051&lt;/li&gt; 
 &lt;li&gt;B: 2001&lt;/li&gt; 
 &lt;li&gt;C: 30&lt;/li&gt; 
 &lt;li&gt;D: 2003&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The code snippet above seems complicated regarding how we take advantage of &lt;code&gt;Object.defineProperty&lt;/code&gt; to add key and value to the object &lt;code&gt;hocCoBan&lt;/code&gt;. In fact, &lt;code&gt;Object.defineProperty&lt;/code&gt; has a couple of handy features that allow us to control the behavior of the object in some situations where we want to make sure that the object created is mutable or not, whether it is iterable (using &lt;code&gt;for..in&lt;/code&gt;) and so for. For example, if we set &lt;code&gt;configurable: false&lt;/code&gt; when we declare an object with &lt;code&gt;Object.defineProperty&lt;/code&gt;, we cannot use &lt;code&gt;delete&lt;/code&gt; operator to delete the object&#39;s property. We cannot change the value of that property as well.&lt;/p&gt; 
&lt;p&gt;The second &quot;take away&quot; message when reading the code above is the unpacking object technique, or a more frequent term is the destructing object. Say you have an object with two keys called &lt;code&gt;year&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;, then you can get them by using the destructing object technique as follows: &lt;code&gt;{year, age} = theOBject;&lt;/code&gt;. In the code above, when declaring the function &lt;code&gt;App&lt;/code&gt;, we also use destructing object technique to get the key from the object and use them as the parameters.&lt;/p&gt; 
&lt;p&gt;If you are familiar with asynchronous code in JavaScript when using the keyword &lt;code&gt;async,&lt;/code&gt; it is not a big deal to understand why we need to use &lt;code&gt;then&lt;/code&gt; to get the function &lt;code&gt;App&lt;/code&gt; being called. It fact, &lt;code&gt;async&lt;/code&gt; always returns a promise, so we need to use &lt;code&gt;then&lt;/code&gt; method to get the data we want.&lt;/p&gt; 
&lt;p&gt;The flow of the code is: 2021 - 30 + &lt;code&gt;&quot;hoccoban.com&quot;.length&lt;/code&gt; (which is 12).&lt;/p&gt; 
&lt;p&gt;The final result is 2003. So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;68. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
class hoccoban {
  #thisyear = 2021;
  constructor(covidTheFirstYear) {
    this.covidTheFirstYear = covidTheFirstYear;
  }

  getThisYear() {
    return this.#thisyear;
  }

	getCovidFirstYear() {
    return this.covidTheFirstYear;
  }
}

const message = new hoccoban(2019);

const result = hoccoban.hello ?? message.getThisYear() - message.getCovidFirstYear();

console.log(result)

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: 2019&lt;/li&gt; 
 &lt;li&gt;C: undefined&lt;/li&gt; 
 &lt;li&gt;D: 2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;This challenge partly illustrates the newest features of JavaScript detailed in ECMAScript 2020 or ES11.&lt;/p&gt; 
&lt;p&gt;Now you can declare a private property in a class thanks to the symbol &lt;code&gt;#&lt;/code&gt;. Like other languages, a private property in JavaScript can only be accessed from inside the class. It will trigger an error when you attempt to call it outside the class, surely.&lt;/p&gt; 
&lt;p&gt;The second feature you might see on the code snippet above is the &lt;code&gt;nullish coalescing operator&lt;/code&gt; or &lt;code&gt;??&lt;/code&gt;. When declaring some variable such as &lt;code&gt;let myVariable = number ?? 7&lt;/code&gt;, if the variable &lt;code&gt;number&lt;/code&gt; is either &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;, the variable &lt;code&gt;myVariable&lt;/code&gt; will be assigned the value &lt;code&gt;7&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So &lt;code&gt;hoccoban.hello&lt;/code&gt; means &lt;code&gt;undefined&lt;/code&gt; because we have not added any value yet. Then by using &lt;code&gt;nullish coalescing operator&lt;/code&gt; with &lt;code&gt;??&lt;/code&gt; the variable &lt;code&gt;result&lt;/code&gt; simply returns 2 as &lt;code&gt;message.getThisYear()&lt;/code&gt; gives us 2020 and &lt;code&gt;message.getCovidFirstYear()&lt;/code&gt; gives us 2019. Note that we can access the private property outside of the class via a method, as in the method &lt;code&gt;getThisYear()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>freeCodeCamp/freeCodeCamp</title>
      <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
      <description>&lt;p&gt;freeCodeCamp.org&#39;s open source codebase and curriculum. Learn to code at home.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/freecodecamp/wide-social-banner.png&quot; alt=&quot;freeCodeCamp.org Social Banner&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;Pull Requests Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.firsttimersonly.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/first--timers--only-friendly-blue.svg&quot; alt=&quot;first-timers-only Friendly&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codetriage.com/freecodecamp/freecodecamp&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg&quot; alt=&quot;Open Source Helpers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/from-referrer/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/setup-automated-blue?logo=gitpod&quot; alt=&quot;Setup Automated&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;freeCodeCamp.org&#39;s open-source codebase and curriculum&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt; is a friendly community where you can learn to code for free. It is run by a &lt;a href=&quot;https://donate.freecodecamp.org&quot;&gt;donor-supported 501(c)(3) nonprofit&lt;/a&gt; to help millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.&lt;/p&gt; 
&lt;p&gt;Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#certifications&quot;&gt;Certifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#the-learning-platform&quot;&gt;The Learning Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-bugs-and-issues&quot;&gt;Reporting Bugs and Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-security-issues-and-responsible-disclosure&quot;&gt;Reporting Security Issues and Responsible Disclosure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#platform-build-and-deployment-status&quot;&gt;Platform, Build and Deployment Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Certifications&lt;/h3&gt; 
&lt;p&gt;freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.&lt;/p&gt; 
&lt;p&gt;Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you&#39;ve fulfilled all the user stories before you submit it.&lt;/p&gt; 
&lt;p&gt;You can pull in these test suites through &lt;a href=&quot;https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js&quot;&gt;freeCodeCamp&#39;s CDN&lt;/a&gt;. This means you can build these projects on websites like CodePen and Glitch - or even on your local computer&#39;s development environment.&lt;/p&gt; 
&lt;p&gt;Once you’ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or résumé. And when your prospective employers or freelance clients click that link, they’ll see a verified certification specific to you.&lt;/p&gt; 
&lt;p&gt;The one exception to this is if we discover violations of our &lt;a href=&quot;https://www.freecodecamp.org/academic-honesty&quot;&gt;Academic Honesty Policy&lt;/a&gt;. When we catch people unambiguously plagiarizing (submitting other people&#39;s code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.&lt;/p&gt; 
&lt;p&gt;Here are our ten core certifications:&lt;/p&gt; 
&lt;h4&gt;1. Responsive Web Design Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/responsive-web-design/basic-html-and-html5&quot;&gt;Basic HTML and HTML5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/responsive-web-design/basic-css&quot;&gt;Basic CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/responsive-web-design/applied-visual-design&quot;&gt;Applied Visual Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/responsive-web-design/applied-accessibility&quot;&gt;Applied Accessibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/responsive-web-design/responsive-web-design-principles&quot;&gt;Responsive Web Design Principles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/responsive-web-design/css-flexbox&quot;&gt;CSS Flexbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/responsive-web-design/css-grid&quot;&gt;CSS Grid&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-tribute-page&quot;&gt;Tribute Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-survey-form&quot;&gt;Survey Form&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-product-landing-page&quot;&gt;Product Landing Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-technical-documentation-page&quot;&gt;Technical Documentation Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-personal-portfolio-webpage&quot;&gt;Personal Portfolio Webpage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. JavaScript Algorithms and Data Structures Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/basic-javascript&quot;&gt;Basic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/es6&quot;&gt;ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/regular-expressions&quot;&gt;Regular Expressions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/debugging&quot;&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/basic-data-structures&quot;&gt;Basic Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/basic-algorithm-scripting&quot;&gt;Algorithm Scripting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/object-oriented-programming&quot;&gt;Object-Oriented Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/functional-programming&quot;&gt;Functional Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting&quot;&gt;Intermediate Algorithm Scripting&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/palindrome-checker&quot;&gt;Palindrome Checker&lt;/a&gt;,&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/roman-numeral-converter&quot;&gt; Roman Numeral Converter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/caesars-cipher&quot;&gt;Caesar&#39;s Cipher&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/telephone-number-validator&quot;&gt;Telephone Number Validator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/cash-register&quot;&gt;Cash Register&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. Front End Libraries Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/front-end-libraries/bootstrap&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/front-end-libraries/jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/front-end-libraries/sass&quot;&gt;Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/front-end-libraries/react&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/front-end-libraries/redux&quot;&gt;Redux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/front-end-libraries/react-and-redux&quot;&gt;React and Redux&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-random-quote-machine&quot;&gt;Random Quote Machine&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-markdown-previewer&quot;&gt;Markdown Previewer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-drum-machine&quot;&gt;Drum Machine&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-javascript-calculator&quot;&gt;JavaScript Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-25--5-clock&quot;&gt;25 + 5 Clock&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. Data Visualization Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/data-visualization/data-visualization-with-d3&quot;&gt;Data Visualization with D3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/data-visualization/json-apis-and-ajax&quot;&gt;JSON APIs and Ajax&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart&quot;&gt;Bar Chart&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph&quot;&gt;Scatterplot Graph&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map&quot;&gt;Heat Map&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map&quot;&gt;Choropleth Map&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram&quot;&gt;Treemap Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5. APIs and Microservices Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/apis-and-microservices/managing-packages-with-npm&quot;&gt;Managing Packages with Npm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/apis-and-microservices/basic-node-and-express&quot;&gt;Basic Node and Express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/apis-and-microservices/mongodb-and-mongoose&quot;&gt;MongoDB and Mongoose&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/apis-and-microservices/apis-and-microservices-projects/timestamp-microservice&quot;&gt;Timestamp Microservice&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/apis-and-microservices/apis-and-microservices-projects/request-header-parser-microservice&quot;&gt;Request Header Parser&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/apis-and-microservices/apis-and-microservices-projects/url-shortener-microservice&quot;&gt;URL Shortener&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/apis-and-microservices/apis-and-microservices-projects/exercise-tracker&quot;&gt;Exercise Tracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/apis-and-microservices/apis-and-microservices-projects/file-metadata-microservice&quot;&gt;File Metadata Microservice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. Quality Assurance Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-and-testing-with-chai/&quot;&gt;Quality Assurance and Testing with Chai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/advanced-node-and-express/&quot;&gt;Advanced Node and Express&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter&quot;&gt;Metric-Imperial Converter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker&quot;&gt;Issue Tracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library&quot;&gt;Personal Library&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver&quot;&gt;Sudoku Solver&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator&quot;&gt;American British Translator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;7. Scientific Computing with Python Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/scientific-computing-with-python/python-for-everybody&quot;&gt;Introduction to Python for Everybody&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/arithmetic-formatter&quot;&gt;Arithmetic Formatter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/time-calculator&quot;&gt;Time Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/budget-app&quot;&gt;Budget App&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/polygon-area-calculator&quot;&gt;Polygon Area Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/probability-calculator&quot;&gt;Probability Calculator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;8. Data Analysis with Python Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/data-analysis-with-python/data-analysis-with-python-course&quot;&gt;Data Analysis with Python Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/data-analysis-with-python/numpy&quot;&gt;NumPy&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator&quot;&gt;Mean-Variance-Standard Deviation Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer&quot;&gt;Demographic Data Analyzer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/medical-data-visualizer&quot;&gt;Medical Data Visualizer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/page-view-time-series-visualizer&quot;&gt;Page View Time Series Visualizer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/sea-level-predictor&quot;&gt;Sea Level Predictor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;9. Information Security Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/information-security/information-security-with-helmetjs&quot;&gt;Information Security with HelmetJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/information-security/python-for-penetration-testing&quot;&gt;Python for Penetration Testing&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/stock-price-checker&quot;&gt;Stock Price Checker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/anonymous-message-board&quot;&gt;Anonymous Message Board&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/port-scanner&quot;&gt;Port Scanner&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/sha-1-password-cracker&quot;&gt;SHA-1 Password Cracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/secure-real-time-multiplayer-game&quot;&gt;Secure Real Time Multiplayer Game &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;10. Machine Learning with Python Certification&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/machine-learning-with-python/tensorflow&quot;&gt;TensorFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.freecodecamp.org/machine-learning-with-python/how-neural-networks-work&quot;&gt;How Neural Networks Work&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/rock-paper-scissors&quot;&gt;Rock Paper Scissors&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/cat-and-dog-image-classifier&quot;&gt;Cat and Dog Image Classifier&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/book-recommendation-engine-using-knn&quot;&gt;Book Recommendation Engine using KNN&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/linear-regression-health-costs-calculator&quot;&gt;Linear Regression Health Costs Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/neural-network-sms-text-classifier&quot;&gt;Neural Network SMS Text Classifier&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Legacy Full Stack Development Certification&lt;/h4&gt; 
&lt;p&gt;Once you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Libraries, Data Visualization, APIs and Microservices, and Legacy Information Security and Quality Assurance certifications, you&#39;ll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you&#39;ve completed around 1,800 hours of coding with a wide range of web development tools.&lt;/p&gt; 
&lt;h4&gt;Legacy Certifications&lt;/h4&gt; 
&lt;p&gt;We also have 4 legacy certifications dating back to our 2015 curriculum, which is still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Legacy Front End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Data Visualization Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Back End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Information Security and Quality Assurance Certification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Learning Platform&lt;/h3&gt; 
&lt;p&gt;This code is running live at &lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our community also has:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://forum.freecodecamp.org&quot;&gt;forum&lt;/a&gt; where you can usually get programming help or project feedback within hours.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://youtube.com/freecodecamp&quot;&gt;YouTube channel&lt;/a&gt; with free courses on Python, SQL, Android, and a wide variety of other technologies.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://www.freecodecamp.org/news&quot;&gt;technical publication&lt;/a&gt; with thousands of programming tutorials and articles about math and computer science.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://chat.freecodecamp.org/home&quot;&gt;chat server&lt;/a&gt; where you can hang out and talk with developers and people who are learning to code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.freecodecamp.org/signin&quot;&gt;Join the community here&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Reporting Bugs and Issues&lt;/h3&gt; 
&lt;p&gt;If you think you&#39;ve found a bug, first read the &lt;a href=&quot;https://forum.freecodecamp.org/t/how-to-report-a-bug/19543&quot;&gt;how to report a bug&lt;/a&gt; article and follow its instructions.&lt;/p&gt; 
&lt;p&gt;If you&#39;re confident it&#39;s a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Issues and Responsible Disclosure&lt;/h3&gt; 
&lt;p&gt;If you think you have found a vulnerability, &lt;em&gt;please report responsibly&lt;/em&gt;. Don&#39;t create GitHub issues for security issues. Instead, please send an email to &lt;code&gt;security@freecodecamp.org&lt;/code&gt; and we&#39;ll look into it immediately.&lt;/p&gt; 
&lt;p&gt;We appreciate any responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users. While we do not offer any bounties or swags at the moment, we&#39;ll be happy to list your name in our &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/HoF.md&quot;&gt;Hall of Fame&lt;/a&gt; for security researchers.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;The freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome all contributions to the community and are excited to welcome you aboard.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://contribute.freecodecamp.org&quot;&gt;Please follow these steps to contribute&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Platform, Build, and Deployment Status&lt;/h3&gt; 
&lt;p&gt;The general platform status for all our applications is available at &lt;a href=&quot;https://status.freecodecamp.org&quot;&gt;&lt;code&gt;status.freecodecamp.org&lt;/code&gt;&lt;/a&gt;. The build and deployment status for the code is available in &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/docs/devops.md&quot;&gt;our DevOps Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Copyright © 2021 freeCodeCamp.org&lt;/p&gt; 
&lt;p&gt;The content of this repository is bound by the following licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The computer software is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/LICENSE.md&quot;&gt;BSD-3-Clause&lt;/a&gt; license.&lt;/li&gt; 
 &lt;li&gt;The learning resources in the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum&quot;&gt;&lt;code&gt;/curriculum&lt;/code&gt;&lt;/a&gt; directory including their subdirectories thereon are licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum/LICENSE.md&quot;&gt;CC-BY-SA-4.0&lt;/a&gt; license.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>OAI/OpenAPI-Specification</title>
      <link>https://github.com/OAI/OpenAPI-Specification</link>
      <description>&lt;p&gt;The OpenAPI Specification Repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The OpenAPI Specification&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/OAI/OpenAPI-Specification/workflows/validate-markdown/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/16343502?v=3&amp;amp;s=200&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification is a community-driven open specification within the &lt;a href=&quot;https://www.openapis.org/&quot;&gt;OpenAPI Initiative&lt;/a&gt;, a Linux Foundation Collaborative Project.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification (OAS) defines a standard, programming language-agnostic interface description for HTTP APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what interface descriptions have done for lower-level programming, the OpenAPI Specification removes guesswork in calling a service.&lt;/p&gt; 
&lt;p&gt;Use cases for machine-readable API definition documents include, but are not limited to: interactive documentation; code generation for documentation, clients, and servers; and automation of test cases. OpenAPI documents describe an APIs services and are represented in either YAML or JSON formats. These documents may either be produced and served statically or be generated dynamically from an application.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification does not require rewriting existing APIs. It does not require binding any software to a service — the service being described may not even be owned by the creator of its description. It does, however, require the capabilities of the service be described in the structure of the OpenAPI Specification. Not all services can be described by OpenAPI — this specification is not intended to cover every possible style of HTTP APIs, but does include support for &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST APIs&lt;/a&gt;. The OpenAPI Specification does not mandate a specific development process such as design-first or code-first. It does facilitate either technique by establishing clear interactions with a HTTP API.&lt;/p&gt; 
&lt;p&gt;This GitHub project is the starting point for OpenAPI. Here you will find the information you need about the OpenAPI Specification, simple examples of what it looks like, and some general information regarding the project.&lt;/p&gt; 
&lt;h2&gt;Current Version - 3.0.3&lt;/h2&gt; 
&lt;p&gt;The current version of the OpenAPI specification is &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/versions/3.0.3.md&quot;&gt;OpenAPI Specification 3.0.3&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Current Release Candidate Version - 3.1.0-RC1&lt;/h2&gt; 
&lt;p&gt;We invite the community to review and provide feedback for the current release candidate (&lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/versions/3.1.0.md&quot;&gt;OpenAPI Specification 3.1.0-RC1&lt;/a&gt;. Changes related to the upcoming 3.1.0 release should be submitted at &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/tree/v3.1.0-dev&quot;&gt;the development branch&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Previous Versions&lt;/h3&gt; 
&lt;p&gt;This repository also contains the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/versions/2.0.md&quot;&gt;OpenAPI Specification 2.0&lt;/a&gt;, which is identical to the Swagger 2.0 specification before it was renamed to &quot;OpenAPI Specification&quot;, as well as the Swagger 1.2 and Swagger 2.0 specifications.&lt;/p&gt; 
&lt;p&gt;Each folder in this repository, such as &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples&quot;&gt;examples&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas&quot;&gt;schemas&lt;/a&gt;, should contain folders pertaining to the current and previous versions of the specification.&lt;/p&gt; 
&lt;h2&gt;See It in Action&lt;/h2&gt; 
&lt;p&gt;If you just want to see it work, check out the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v3.0&quot;&gt;list of current examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tools and Libraries&lt;/h2&gt; 
&lt;p&gt;Looking to see how you can create your own OpenAPI definition, present it, or otherwise use it? Check out the growing &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/IMPLEMENTATIONS.md&quot;&gt;list of 3.0 implementations&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Participation&lt;/h2&gt; 
&lt;p&gt;The current process for development of the OpenAPI Specification is described in &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/DEVELOPMENT.md&quot;&gt;Development Guidelines&lt;/a&gt;. Development of the next version of the OpenAPI Specification is guided by the &lt;a href=&quot;https://www.openapis.org/participate/how-to-contribute/governance#TDC&quot;&gt;Technical Steering Committee (TSC)&lt;/a&gt;. This group of committers bring their API expertise, incorporate feedback from the community, and expand the group of committers as appropriate. All development activity on the future specification will be performed as features and merged into this branch. Upon release of the future specification, this branch will be merged to master.&lt;/p&gt; 
&lt;p&gt;The TSC holds weekly web conferences to review open pull requests and discuss open issues related to the evolving OpenAPI Specification. Participation in weekly calls and scheduled working sessions is open to the community. You can view the &lt;a href=&quot;https://openapi.groups.io/g/tsc/calendar&quot;&gt;TSC calendar online&lt;/a&gt;, and import it to your calendar using the &lt;a href=&quot;https://openapi.groups.io/g/tsc/ics/1105671/1995679554/feed.ics&quot;&gt;iCal link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Initiative encourages participation from individuals and companies alike. If you want to participate in the evolution of the OpenAPI Specification, consider taking the following actions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/versions/3.0.3.md&quot;&gt;current specification&lt;/a&gt;. The human-readable markdown file &lt;em&gt;is the source of truth&lt;/em&gt; for the specification.&lt;/li&gt; 
 &lt;li&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/DEVELOPMENT.md&quot;&gt;development&lt;/a&gt; process so you understand how the spec is evolving.&lt;/li&gt; 
 &lt;li&gt;Check the &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/issues&quot;&gt;issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/pulls&quot;&gt;pull requests&lt;/a&gt; to see if someone has already documented your idea or feedback on the specification. You can follow an existing conversation by subscribing to the existing issue or PR.&lt;/li&gt; 
 &lt;li&gt;Create an issue to describe a new concern. If possible, propose a solution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Not all feedback can be accommodated and there may be solid arguments for or against a change being appropriate for the specification.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/LICENSE&quot;&gt;License (Apache-2.0)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://ga-beacon.appspot.com/UA-831873-42/readme.md?pixel&quot; alt=&quot;Analytics&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jaggedsoft/node-binance-api</title>
      <link>https://github.com/jaggedsoft/node-binance-api</link>
      <description>&lt;p&gt;Node Binance API is an asynchronous node.js library for the Binance API designed to be easy to use.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://dev.binance.vision/&quot;&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/569865969120575519/718166995354255370/binance-api-black.png&quot; alt=&quot;Binance Community API&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npm-stat.com/charts.html?package=node-binance-api&amp;amp;from=2017-07-01&amp;amp;to=2020-07-01&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/dy/node-binance-api?labelColor=29B6F6&amp;amp;color=3D5AFE&amp;amp;scale=2&amp;amp;label=Downloads&amp;amp;icon=bitcoin-lightning&amp;amp;cache=2400&quot; alt=&quot;Yearly Downloads&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://badgen.net/github/last-commit/jaggedsoft/node-binance-api?scale=2&amp;amp;label=%F0%9F%9F%A3%20Updated&amp;amp;labelColor=black&amp;amp;color=448AFF&amp;amp;cache=9999&quot; alt=&quot;Last Commit&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/jaggedsoft/node-binance-api.svg?style=flat-square&amp;amp;labelColor=blueviolet&amp;amp;label=release&quot; alt=&quot;Latest Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jaggedsoft/node-binance-api/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/jaggedsoft/node-binance-api.svg?maxAge=2400&amp;amp;labelColor=333&amp;amp;label=%F0%9F%9F%A3%20updated&quot; alt=&quot;GitHub last commit&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npm-stat.com/charts.html?package=node-binance-api&amp;amp;from=2017-07-01&amp;amp;to=2020-07-01&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/node-binance-api.svg?labelColor=29B6F6&amp;amp;color=3D5AFE&amp;amp;label=downloads&amp;amp;logo=bitcoin-lightning&quot; alt=&quot;Monthly Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/jaggedsoft&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/jaggedsoft.svg?style=social&quot; alt=&quot;jaggedsoft on Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/node-binance-api&quot;&gt;&lt;img src=&quot;https://nodei.co/npm/node-binance-api.png?compact=true&quot; alt=&quot;NPM&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Node Binance API&lt;/h1&gt; 
&lt;p&gt;This project is designed to help you make your own projects that interact with the &lt;a href=&quot;https://github.com/binance-exchange/binance-official-api-docs&quot;&gt;Binance API&lt;/a&gt;. You can stream candlestick chart data, market depth, or use other advanced features such as setting stop losses and iceberg orders. This project seeks to have complete API coverage including WebSockets.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;Futures API
 &lt;!-- raw HTML omitted --&gt; &amp;amp; 
 &lt;!-- raw HTML omitted --&gt;Streams
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Spot Trading API
 &lt;!-- raw HTML omitted --&gt; &amp;amp; 
 &lt;!-- raw HTML omitted --&gt;Streams
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Margin API
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Lending API
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;Examples
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Troubleshooting
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Changelog
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Support
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Installation: &lt;strong&gt;&lt;code&gt;npm install -s node-binance-api&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/node-binance-api&quot;&gt;&lt;img src=&quot;https://nodei.co/npm/node-binance-api.png?mini=true&quot; alt=&quot;npm install node-binance-api&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Getting started&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Binance = require(&#39;node-binance-api&#39;);
const binance = new Binance().options({
  APIKEY: &#39;&amp;lt;key&amp;gt;&#39;,
  APISECRET: &#39;&amp;lt;secret&amp;gt;&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Binance Futures API&lt;/h1&gt; 
&lt;h4&gt;Futures Prices&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresPrices() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Account Balances &amp;amp; Positions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresAccount() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Balances&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresBalance() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Limit Buy&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresBuy( &#39;BTCUSDT&#39;, 0.1, 8222 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Limit Sell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresSell( &#39;BTCUSDT&#39;, 0.5, 11111 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Market Buy&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresMarketBuy( &#39;BNBUSDT&#39;, 5 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Market Sell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresMarketSell( &#39;TRXUSDT&#39;, 1 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Market Orders: Get the fill price using newOrderRespType&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresMarketBuy( &#39;BNBUSDT&#39;, amount, { newOrderRespType: &#39;RESULT&#39; } ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures reduceOnly Order Example&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if ( side == &#39;LONG&#39; ) order = await binance.futuresMarketSell( obj.symbol, amount, {reduceOnly: true} )
else order = await binance.futuresMarketBuy( obj.symbol, amount, {reduceOnly: true} )
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Futures Positions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresPositionRisk() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let position_data = await binance.futuresPositionRisk(), markets = Object.keys( position_data );
for ( let market of markets ) {
  let obj = position_data[market], size = Number( obj.positionAmt );
  if ( size == 0 ) continue;
  console.info( `${leverage}x\t${market}\t${obj.unRealizedProfit}` );
  //console.info( obj ); //positionAmt entryPrice markPrice unRealizedProfit liquidationPrice leverage marginType isolatedMargin isAutoAddMargin maxNotionalValue
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Adjust Leverage (1-125x)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresLeverage( &#39;ETHUSDT&#39;, 50 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Adjust Margin Type (ISOLATED, CROSSED)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresMarginType( &#39;BTCUSDT&#39;, &#39;ISOLATED&#39; ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Adjust Position Margin&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Type: 1: Add postion margin，2: Reduce postion margin
console.info( await binance.futuresPositionMargin( &quot;TRXUSDT&quot;, amount, type ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresTime() );
console.info( await binance.futuresExchangeInfo() );
console.info( await binance.futuresCandles( &quot;TRXUSDT&quot;, &quot;1m&quot; ) );
console.info( await binance.futuresDepth( &quot;ADAUSDT&quot; ) );
console.info( await binance.futuresQuote() );
console.info( await binance.futuresQuote( &quot;BCHUSDT&quot; ) );
console.info( await binance.futuresDaily() );
console.info( await binance.futuresOpenInterest( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresMarkPrice() );
console.info( await binance.futuresMarkPrice( &quot;ETHUSDT&quot; ) );
console.info( await binance.futuresTrades( &quot;LTCUSDT&quot; ) );
console.info( await binance.futuresAggTrades( &quot;XTZUSDT&quot; ) );
console.info( await binance.futuresLiquidationOrders() );
console.info( await binance.futuresFundingRate() );
console.info( await binance.futuresHistoricalTrades( &quot;XMRUSDT&quot; ) );
console.info( await binance.futuresLeverageBracket( &quot;LINKUSDT&quot; ) );
console.info( await binance.futuresIncome() );
console.info( await binance.futuresCancelAll( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresCancel( &quot;BTCUSDT&quot;, {orderId: &quot;1025137386&quot;} ) );
console.info( await binance.futuresCountdownCancelAll( &quot;BTCUSDT&quot;, 45000 ) );
console.info( await binance.futuresOrderStatus( &quot;BTCUSDT&quot;, {orderId: &quot;1025137386&quot;} ) );
console.info( await binance.futuresOpenOrders() );
console.info( await binance.futuresOpenOrders( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresAllOrders() );
console.info( await binance.futuresAllOrders( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresUserTrades( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresGetDataStream() );
console.info( await binance.futuresPositionMarginHistory( &quot;TRXUSDT&quot; ) );
console.info( await binance.promiseRequest( &#39;v1/time&#39; ) );
// Batch orders, remaining WebSocket streams, and better documentation will be come later
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Historical Bulk Data Download API&lt;/h4&gt; 
&lt;h5&gt;Get Download ID&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresHistDataId(
  &quot;BTCUSDT&quot;, {
    startTime: new Date().getTime() - 24 * 60 * 60 * 1000,
    endTime: new Date().getTime(),
    dataType: &#39;T_TRADE&#39;
  } )
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Get Download Link&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresDownloadLink(7343)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Futures WebSocket Streams&lt;/h1&gt; 
&lt;h4&gt;Futures miniTicker stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresMiniTickerStream( miniTicker =&amp;gt; {
    console.info( miniTicker );
} );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures miniTicker stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresMiniTickerStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures bookTicker stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresBookTickerStream( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures bookTicker stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresBookTickerStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures prevDay ticker stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresTickerStream( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures prevDay ticker stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresTickerStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures mark price stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresMarkPriceStream( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures mark price stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresMarkPriceStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures aggregate trade stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresAggTradeStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures complete chart cache&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresChart( &#39;BTCUSDT&#39;, &#39;1m&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Liquidation Stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresLiquidationStream( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Liquidation Stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresLiquidationStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connect to a custom endpoint. Easier shortcut functions will come later&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresSubscribe( &#39;btcusdt@kline_4h&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Terminate an existing socket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresTerminate( &#39;btcusdt@kline_4h&#39; );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Return active sockets and subscriptions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log( binance.futuresSubscriptions() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Delivery API (Futures w/Expiration Date)&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;deliveryBuy
deliverySell
deliveryMarketBuy
deliveryMarketSell
deliveryPrices
deliveryDaily
deliveryOpenInterest
deliveryExchangeInfo
deliveryOpenOrders
deliveryAllOrders
deliveryCandles
deliveryIndexKlines
deliveryContinuousKlines
deliveryMarkPriceKlines
deliveryMarkPrice
deliveryHistoricalTrades
deliveryTrades
deliveryAggTrades
deliveryUserTrades
deliveryLiquidationOrders
deliveryPositionRisk
deliveryLeverage
deliveryMarginType
deliveryPositionMargin
deliveryPositionMarginHistory
deliveryIncome
deliveryBalance
deliveryAccount
deliveryDepth
deliveryQuote
deliveryLeverageBracket
deliveryOrderStatus
deliveryCancel
deliveryCancelAll
deliveryCountdownCancelAll
deliveryOrder
deliveryGetDataStream
deliveryCloseDataStream
deliveryKeepDataStream
deliveryPing
deliveryTime
deliveryOrder
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Binance API (Spot Trading)&lt;/h1&gt; 
&lt;h4&gt;Getting latest price of all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let ticker = await binance.prices();
console.info(`Price of BNB: ${ticker.BNBUSDT}`);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Getting latest price of a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.prices(&#39;BNBBTC&#39;, (error, ticker) =&amp;gt; {
  console.info(&quot;Price of BNB: &quot;, ticker.BNBBTC);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ ETHBTC: &#39;0.07003500&#39;,
  LTCBTC: &#39;0.01176700&#39;,
  BNBBTC: &#39;0.00035735&#39;,
  NEOBTC: &#39;0.00809500&#39;,
  QTUMETH: &#39;0.03851200&#39;,
  EOSETH: &#39;0.00189600&#39;,
  SNTETH: &#39;0.00008595&#39;,
  BNTETH: &#39;0.00738800&#39;,
  BCCBTC: &#39;0.08104000&#39;,
  GASBTC: &#39;0.00629800&#39;,
  BNBETH: &#39;0.00509495&#39;,
  BTMETH: &#39;0.00018900&#39;,
  HCCBTC: &#39;0.00000180&#39;,
  BTCUSDT: &#39;4464.44000000&#39;,
  ETHUSDT: &#39;312.89000000&#39;,
  HSRBTC: &#39;0.00289000&#39;,
  OAXETH: &#39;0.00180000&#39;,
  DNTETH: &#39;0.00014190&#39;,
  MCOETH: &#39;0.02358300&#39;,
  ICNETH: &#39;0.00557000&#39;,
  ELCBTC: &#39;0.00000053&#39;,
  MCOBTC: &#39;0.00166900&#39;,
  WTCBTC: &#39;0.00184138&#39;,
  WTCETH: &#39;0.02601700&#39;,
  LLTBTC: &#39;0.00001669&#39;,
  LRCBTC: &#39;0.00001100&#39;,
  LRCETH: &#39;0.00016311&#39;,
  QTUMBTC: &#39;0.00271600&#39;,
  YOYOBTC: &#39;0.00000481&#39;,
  OMGBTC: &#39;0.00187800&#39;,
  OMGETH: &#39;0.02677400&#39;,
  ZRXBTC: &#39;0.00004319&#39;,
  ZRXETH: &#39;0.00060800&#39;,
  STRATBTC: &#39;0.00087800&#39;,
  STRATETH: &#39;0.01218800&#39;,
  SNGLSBTC: &#39;0.00003649&#39;,
  SNGLSETH: &#39;0.00051280&#39;,
  BQXBTC: &#39;0.00013150&#39;,
  BQXETH: &#39;0.00184240&#39;,
  KNCBTC: &#39;0.00038969&#39;,
  KNCETH: &#39;0.00550320&#39;,
  FUNBTC: &#39;0.00000573&#39;,
  FUNETH: &#39;0.00008433&#39;,
  SNMBTC: &#39;0.00003176&#39;,
  SNMETH: &#39;0.00047119&#39;,
  NEOETH: &#39;0.11500200&#39;,
  IOTABTC: &#39;0.00012136&#39;,
  IOTAETH: &#39;0.00171001&#39;,
  LINKBTC: &#39;0.00010646&#39;,
  LINKETH: &#39;0.00150999&#39;,
  XVGBTC: &#39;0.00000145&#39;,
  XVGETH: &#39;0.00002059&#39;,
  CTRBTC: &#39;0.00025532&#39;,
  CTRETH: &#39;0.00375180&#39;,
  SALTBTC: &#39;0.00080100&#39;,
  SALTETH: &#39;0.01140000&#39;,
  MDABTC: &#39;0.00057002&#39;,
  MDAETH: &#39;0.00819490&#39; }
//Price of BNB: 0.00035735
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Getting list of current balances&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.balance((error, balances) =&amp;gt; {
  if ( error ) return console.error(error);
  console.info(&quot;balances()&quot;, balances);
  console.info(&quot;ETH balance: &quot;, balances.ETH.available);
});
// If you have problems with this function,
// see Troubleshooting at the bottom of this page.
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ BTC: { available: &#39;0.77206464&#39;, onOrder: &#39;0.00177975&#39; },
  LTC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ETH: { available: &#39;1.14109900&#39;, onOrder: &#39;0.00000000&#39; },
  BNC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ICO: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  NEO: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BNB: { available: &#39;41.33761879&#39;, onOrder: &#39;0.00000000&#39; },
  QTUM: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  EOS: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  SNT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BNT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  GAS: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BCC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BTM: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  USDT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  HCC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  HSR: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  OAX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  DNT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  MCO: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ICN: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ELC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  PAY: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ZRX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  OMG: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  WTC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  LRX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  YOYO: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  LRC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  LLT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  TRX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  FID: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  SNGLS: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  STRAT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BQX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  FUN: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  KNC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  CDT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  XVG: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  IOTA: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  SNM: { available: &#39;0.76352833&#39;, onOrder: &#39;0.00000000&#39; },
  LINK: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  CVC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  TNT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  REP: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  CTR: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  MDA: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  MTL: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  SALT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  NULS: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; } }
//ETH balance:  1.14109900
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Getting bid/ask prices for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.bookTickers(&#39;BNBBTC&#39;, (error, ticker) =&amp;gt; {
  console.info(&quot;bookTickers&quot;, ticker);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &quot;symbol&quot;: &quot;BNBBTC&quot;,
  &quot;bidPrice&quot;: &quot;4.00000000&quot;,
  &quot;bidQty&quot;: &quot;431.00000000&quot;,
  &quot;askPrice&quot;: &quot;4.00000200&quot;,
  &quot;askQty&quot;: &quot;9.00000000&quot;
}

// from: https://github.com/binance-exchange/binance-official-api-docs/blob/master/rest-api.md#symbol-order-book-ticker
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Getting bid/ask prices for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.bookTickers((error, ticker) =&amp;gt; {
  console.info(&quot;bookTickers()&quot;, ticker);
  console.info(&quot;Price of BNB: &quot;, ticker.BNBBTC);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; { ETHBTC:
   { bid: &#39;0.06201000&#39;,
     bids: &#39;1.28200000&#39;,
     ask: &#39;0.06201300&#39;,
     asks: &#39;0.34200000&#39; },
  LTCBTC:
   { bid: &#39;0.01042000&#39;,
     bids: &#39;41.45000000&#39;,
     ask: &#39;0.01048700&#39;,
     asks: &#39;16.81000000&#39; },
  BNBBTC:
   { bid: &#39;0.00028754&#39;,
     bids: &#39;727.00000000&#39;,
     ask: &#39;0.00028755&#39;,
     asks: &#39;400.00000000&#39; },
  NEOBTC:
   { bid: &#39;0.00601800&#39;,
     bids: &#39;16.82000000&#39;,
     ask: &#39;0.00603700&#39;,
     asks: &#39;73.43000000&#39; },
  QTUMETH:
   { bid: &#39;0.04062900&#39;,
     bids: &#39;1.30000000&#39;,
     ask: &#39;0.04075300&#39;,
     asks: &#39;0.58000000&#39; },
  EOSETH:
   { bid: &#39;0.00191400&#39;,
     bids: &#39;202.53000000&#39;,
     ask: &#39;0.00192500&#39;,
     asks: &#39;26.08000000&#39; },
  SNTETH:
   { bid: &#39;0.00007610&#39;,
     bids: &#39;403.00000000&#39;,
     ask: &#39;0.00007638&#39;,
     asks: &#39;19850.00000000&#39; },
  BNTETH:
   { bid: &#39;0.00736800&#39;,
     bids: &#39;7.82000000&#39;,
     ask: &#39;0.00745900&#39;,
     asks: &#39;177.32000000&#39; },
  BCCBTC:
   { bid: &#39;0.06862000&#39;,
     bids: &#39;1.56100000&#39;,
     ask: &#39;0.06893600&#39;,
     asks: &#39;0.81100000&#39; },
  GASBTC:
   { bid: &#39;0.00451700&#39;,
     bids: &#39;44.00000000&#39;,
     ask: &#39;0.00489700&#39;,
     asks: &#39;44.95000000&#39; },
  BNBETH:
   { bid: &#39;0.00462592&#39;,
     bids: &#39;32.00000000&#39;,
     ask: &#39;0.00467982&#39;,
     asks: &#39;57.00000000&#39; },
  BTMETH:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  HCCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  BTCUSDT:
   { bid: &#39;4786.01000000&#39;,
     bids: &#39;0.58627700&#39;,
     ask: &#39;4796.10000000&#39;,
     asks: &#39;0.28486400&#39; },
  ETHUSDT:
   { bid: &#39;297.01000000&#39;,
     bids: &#39;7.17846000&#39;,
     ask: &#39;297.90000000&#39;,
     asks: &#39;0.30742000&#39; },
  HSRBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  OAXETH:
   { bid: &#39;0.00156200&#39;,
     bids: &#39;96.00000000&#39;,
     ask: &#39;0.00169900&#39;,
     asks: &#39;552.90000000&#39; },
  DNTETH:
   { bid: &#39;0.00011782&#39;,
     bids: &#39;1273.00000000&#39;,
     ask: &#39;0.00012045&#39;,
     asks: &#39;238.00000000&#39; },
  MCOETH:
   { bid: &#39;0.02651200&#39;,
     bids: &#39;0.94000000&#39;,
     ask: &#39;0.02681200&#39;,
     asks: &#39;8.59000000&#39; },
  ICNETH:
   { bid: &#39;0.00484600&#39;,
     bids: &#39;448.76000000&#39;,
     ask: &#39;0.00490000&#39;,
     asks: &#39;0.01000000&#39; },
  ELCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  MCOBTC:
   { bid: &#39;0.00164600&#39;,
     bids: &#39;1.00000000&#39;,
     ask: &#39;0.00164700&#39;,
     asks: &#39;12.11000000&#39; },
  WTCBTC:
   { bid: &#39;0.00132101&#39;,
     bids: &#39;124.00000000&#39;,
     ask: &#39;0.00133200&#39;,
     asks: &#39;98.00000000&#39; },
  WTCETH:
   { bid: &#39;0.02130000&#39;,
     bids: &#39;784.35000000&#39;,
     ask: &#39;0.02140800&#39;,
     asks: &#39;10.70000000&#39; },
  LLTBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  LRCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  LRCETH:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  QTUMBTC:
   { bid: &#39;0.00252800&#39;,
     bids: &#39;123.48000000&#39;,
     ask: &#39;0.00253200&#39;,
     asks: &#39;10.50000000&#39; },
  YOYOBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  OMGBTC:
   { bid: &#39;0.00164900&#39;,
     bids: &#39;25.94000000&#39;,
     ask: &#39;0.00166400&#39;,
     asks: &#39;0.90000000&#39; },
  OMGETH:
   { bid: &#39;0.02660000&#39;,
     bids: &#39;9.86000000&#39;,
     ask: &#39;0.02698200&#39;,
     asks: &#39;43.21000000&#39; },
  ZRXBTC:
   { bid: &#39;0.00003936&#39;,
     bids: &#39;117.00000000&#39;,
     ask: &#39;0.00003982&#39;,
     asks: &#39;8596.00000000&#39; },
  ZRXETH:
   { bid: &#39;0.00062801&#39;,
     bids: &#39;239.00000000&#39;,
     ask: &#39;0.00063595&#39;,
     asks: &#39;2446.00000000&#39; },
  STRATBTC:
   { bid: &#39;0.00070600&#39;,
     bids: &#39;43.43000000&#39;,
     ask: &#39;0.00070900&#39;,
     asks: &#39;15.00000000&#39; },
  STRATETH:
   { bid: &#39;0.01092100&#39;,
     bids: &#39;9.00000000&#39;,
     ask: &#39;0.01162700&#39;,
     asks: &#39;47.90000000&#39; },
  SNGLSBTC:
   { bid: &#39;0.00003162&#39;,
     bids: &#39;366.00000000&#39;,
     ask: &#39;0.00003183&#39;,
     asks: &#39;308.00000000&#39; },
  SNGLSETH:
   { bid: &#39;0.00050064&#39;,
     bids: &#39;300.00000000&#39;,
     ask: &#39;0.00051543&#39;,
     asks: &#39;64.00000000&#39; },
  BQXBTC:
   { bid: &#39;0.00013334&#39;,
     bids: &#39;13.00000000&#39;,
     ask: &#39;0.00013889&#39;,
     asks: &#39;1224.00000000&#39; },
  BQXETH:
   { bid: &#39;0.00200740&#39;,
     bids: &#39;990.00000000&#39;,
     ask: &#39;0.00228890&#39;,
     asks: &#39;80.00000000&#39; },
  KNCBTC:
   { bid: &#39;0.00029509&#39;,
     bids: &#39;300.00000000&#39;,
     ask: &#39;0.00029842&#39;,
     asks: &#39;4.00000000&#39; },
  KNCETH:
   { bid: &#39;0.00481840&#39;,
     bids: &#39;411.00000000&#39;,
     ask: &#39;0.00484440&#39;,
     asks: &#39;10.00000000&#39; },
  FUNBTC:
   { bid: &#39;0.00000461&#39;,
     bids: &#39;217.00000000&#39;,
     ask: &#39;0.00000465&#39;,
     asks: &#39;16668.00000000&#39; },
  FUNETH:
   { bid: &#39;0.00007486&#39;,
     bids: &#39;2004.00000000&#39;,
     ask: &#39;0.00007617&#39;,
     asks: &#39;1419.00000000&#39; },
  SNMBTC:
   { bid: &#39;0.00002462&#39;,
     bids: &#39;6922.00000000&#39;,
     ask: &#39;0.00002495&#39;,
     asks: &#39;404.00000000&#39; },
  SNMETH:
   { bid: &#39;0.00040181&#39;,
     bids: &#39;373.00000000&#39;,
     ask: &#39;0.00043404&#39;,
     asks: &#39;9281.00000000&#39; },
  NEOETH:
   { bid: &#39;0.09610400&#39;,
     bids: &#39;8.02000000&#39;,
     ask: &#39;0.09891100&#39;,
     asks: &#39;5.00000000&#39; },
  IOTABTC:
   { bid: &#39;0.00009674&#39;,
     bids: &#39;206.00000000&#39;,
     ask: &#39;0.00009721&#39;,
     asks: &#39;269.00000000&#39; },
  IOTAETH:
   { bid: &#39;0.00155061&#39;,
     bids: &#39;1231.00000000&#39;,
     ask: &#39;0.00158100&#39;,
     asks: &#39;22.00000000&#39; },
  LINKBTC:
   { bid: &#39;0.00007670&#39;,
     bids: &#39;2278.00000000&#39;,
     ask: &#39;0.00007697&#39;,
     asks: &#39;8000.00000000&#39; },
  LINKETH:
   { bid: &#39;0.00123000&#39;,
     bids: &#39;3492.00000000&#39;,
     ask: &#39;0.00123999&#39;,
     asks: &#39;4000.00000000&#39; },
  XVGBTC:
   { bid: &#39;0.00000111&#39;,
     bids: &#39;47758.00000000&#39;,
     ask: &#39;0.00000113&#39;,
     asks: &#39;215443.00000000&#39; },
  XVGETH:
   { bid: &#39;0.00001801&#39;,
     bids: &#39;8329.00000000&#39;,
     ask: &#39;0.00001842&#39;,
     asks: &#39;85146.00000000&#39; },
  CTRBTC:
   { bid: &#39;0.00019801&#39;,
     bids: &#39;650.00000000&#39;,
     ask: &#39;0.00021103&#39;,
     asks: &#39;49.00000000&#39; },
  CTRETH:
   { bid: &#39;0.00320200&#39;,
     bids: &#39;538.00000000&#39;,
     ask: &#39;0.00351990&#39;,
     asks: &#39;2081.00000000&#39; },
  SALTBTC:
   { bid: &#39;0.00063900&#39;,
     bids: &#39;57.13000000&#39;,
     ask: &#39;0.00064000&#39;,
     asks: &#39;96.48000000&#39; },
  SALTETH:
   { bid: &#39;0.01030200&#39;,
     bids: &#39;728.27000000&#39;,
     ask: &#39;0.01038900&#39;,
     asks: &#39;0.04000000&#39; },
  MDABTC:
   { bid: &#39;0.00039031&#39;,
     bids: &#39;282.00000000&#39;,
     ask: &#39;0.00039994&#39;,
     asks: &#39;540.00000000&#39; },
  MDAETH:
   { bid: &#39;0.00635500&#39;,
     bids: &#39;432.00000000&#39;,
     ask: &#39;0.00641990&#39;,
     asks: &#39;185.00000000&#39; },
  MTLBTC:
   { bid: &#39;0.00145500&#39;,
     bids: &#39;45.00000000&#39;,
     ask: &#39;0.00145600&#39;,
     asks: &#39;42.12000000&#39; },
  MTLETH:
   { bid: &#39;0.02300100&#39;,
     bids: &#39;96.10000000&#39;,
     ask: &#39;0.02477400&#39;,
     asks: &#39;131.90000000&#39; },
  SUBBTC:
   { bid: &#39;0.00003250&#39;,
     bids: &#39;4474.00000000&#39;,
     ask: &#39;0.00003380&#39;,
     asks: &#39;3878.00000000&#39; },
  SUBETH:
   { bid: &#39;0.00053000&#39;,
     bids: &#39;740.00000000&#39;,
     ask: &#39;0.00053501&#39;,
     asks: &#39;580.00000000&#39; } }
/* Price of BNB:  { bid: &#39;0.00028754&#39;,
  bids: &#39;727.00000000&#39;,
  ask: &#39;0.00028755&#39;,
  asks: &#39;400.00000000&#39; } */
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get all bid/ask prices&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.bookTickers((error, ticker) =&amp;gt; {
  console.info(&quot;bookTickers&quot;, ticker);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ ETHBTC:
   { bid: &#39;0.06187700&#39;,
     bids: &#39;0.64000000&#39;,
     ask: &#39;0.06188300&#39;,
     asks: &#39;6.79700000&#39; },
  LTCBTC:
   { bid: &#39;0.01036000&#39;,
     bids: &#39;14.96000000&#39;,
     ask: &#39;0.01037000&#39;,
     asks: &#39;0.60000000&#39; },
  BNBBTC:
   { bid: &#39;0.00028226&#39;,
     bids: &#39;802.00000000&#39;,
     ask: &#39;0.00028268&#39;,
     asks: &#39;584.00000000&#39; },
  NEOBTC:
   { bid: &#39;0.00595600&#39;,
     bids: &#39;33.00000000&#39;,
     ask: &#39;0.00595900&#39;,
     asks: &#39;37.00000000&#39; },
  QTUMETH:
   { bid: &#39;0.03958000&#39;,
     bids: &#39;1.42000000&#39;,
     ask: &#39;0.04024300&#39;,
     asks: &#39;7.46000000&#39; },
  EOSETH:
   { bid: &#39;0.00192600&#39;,
     bids: &#39;29.31000000&#39;,
     ask: &#39;0.00193500&#39;,
     asks: &#39;418.91000000&#39; },
  SNTETH:
   { bid: &#39;0.00007607&#39;,
     bids: &#39;8864.00000000&#39;,
     ask: &#39;0.00007682&#39;,
     asks: &#39;1311.00000000&#39; },
  BNTETH:
   { bid: &#39;0.00740200&#39;,
     bids: &#39;1.36000000&#39;,
     ask: &#39;0.00746800&#39;,
     asks: &#39;419.86000000&#39; },
  BCCBTC:
   { bid: &#39;0.06786500&#39;,
     bids: &#39;0.18600000&#39;,
     ask: &#39;0.06835400&#39;,
     asks: &#39;0.72600000&#39; },
  GASBTC:
   { bid: &#39;0.00435500&#39;,
     bids: &#39;332.73000000&#39;,
     ask: &#39;0.00435600&#39;,
     asks: &#39;18.31000000&#39; },
  BNBETH:
   { bid: &#39;0.00456443&#39;,
     bids: &#39;4.00000000&#39;,
     ask: &#39;0.00461795&#39;,
     asks: &#39;192.00000000&#39; },
  BTMETH:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  HCCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  BTCUSDT:
   { bid: &#39;4801.05000000&#39;,
     bids: &#39;0.82289400&#39;,
     ask: &#39;4812.00000000&#39;,
     asks: &#39;1.04753200&#39; },
  ETHUSDT:
   { bid: &#39;296.32000000&#39;,
     bids: &#39;3.24294000&#39;,
     ask: &#39;297.81000000&#39;,
     asks: &#39;17.69901000&#39; },
  HSRBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  OAXETH:
   { bid: &#39;0.00154500&#39;,
     bids: &#39;422.64000000&#39;,
     ask: &#39;0.00169200&#39;,
     asks: &#39;159.94000000&#39; },
  DNTETH:
   { bid: &#39;0.00012059&#39;,
     bids: &#39;434.00000000&#39;,
     ask: &#39;0.00012100&#39;,
     asks: &#39;8311.00000000&#39; },
  MCOETH:
   { bid: &#39;0.02566000&#39;,
     bids: &#39;5.85000000&#39;,
     ask: &#39;0.02651200&#39;,
     asks: &#39;4.37000000&#39; },
  ICNETH:
   { bid: &#39;0.00489000&#39;,
     bids: &#39;232.97000000&#39;,
     ask: &#39;0.00500000&#39;,
     asks: &#39;0.01000000&#39; },
  ELCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  MCOBTC:
   { bid: &#39;0.00162700&#39;,
     bids: &#39;2.87000000&#39;,
     ask: &#39;0.00163800&#39;,
     asks: &#39;0.70000000&#39; },
  WTCBTC:
   { bid: &#39;0.00129604&#39;,
     bids: &#39;600.00000000&#39;,
     ask: &#39;0.00131600&#39;,
     asks: &#39;1.00000000&#39; },
  WTCETH:
   { bid: &#39;0.02080000&#39;,
     bids: &#39;30.00000000&#39;,
     ask: &#39;0.02097600&#39;,
     asks: &#39;24.00000000&#39; },
  LLTBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  LRCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  LRCETH:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  QTUMBTC:
   { bid: &#39;0.00245100&#39;,
     bids: &#39;43.11000000&#39;,
     ask: &#39;0.00248500&#39;,
     asks: &#39;74.96000000&#39; },
  YOYOBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  OMGBTC:
   { bid: &#39;0.00160700&#39;,
     bids: &#39;300.00000000&#39;,
     ask: &#39;0.00161300&#39;,
     asks: &#39;36.05000000&#39; },
  OMGETH:
   { bid: &#39;0.02597100&#39;,
     bids: &#39;4.92000000&#39;,
     ask: &#39;0.02633200&#39;,
     asks: &#39;19.00000000&#39; },
  ZRXBTC:
   { bid: &#39;0.00003852&#39;,
     bids: &#39;9.00000000&#39;,
     ask: &#39;0.00003912&#39;,
     asks: &#39;103.00000000&#39; },
  ZRXETH:
   { bid: &#39;0.00062997&#39;,
     bids: &#39;645.00000000&#39;,
     ask: &#39;0.00062998&#39;,
     asks: &#39;5376.00000000&#39; },
  STRATBTC:
   { bid: &#39;0.00069200&#39;,
     bids: &#39;50.50000000&#39;,
     ask: &#39;0.00070000&#39;,
     asks: &#39;6.54000000&#39; },
  STRATETH:
   { bid: &#39;0.01080400&#39;,
     bids: &#39;5.00000000&#39;,
     ask: &#39;0.01200000&#39;,
     asks: &#39;5.88000000&#39; },
  SNGLSBTC:
   { bid: &#39;0.00003121&#39;,
     bids: &#39;726.00000000&#39;,
     ask: &#39;0.00003161&#39;,
     asks: &#39;153.00000000&#39; },
  SNGLSETH:
   { bid: &#39;0.00046686&#39;,
     bids: &#39;4782.00000000&#39;,
     ask: &#39;0.00051906&#39;,
     asks: &#39;32.00000000&#39; },
  BQXBTC:
   { bid: &#39;0.00011512&#39;,
     bids: &#39;87.00000000&#39;,
     ask: &#39;0.00011840&#39;,
     asks: &#39;133.00000000&#39; },
  BQXETH:
   { bid: &#39;0.00183080&#39;,
     bids: &#39;1051.00000000&#39;,
     ask: &#39;0.00195000&#39;,
     asks: &#39;626.00000000&#39; },
  KNCBTC:
   { bid: &#39;0.00027859&#39;,
     bids: &#39;7.00000000&#39;,
     ask: &#39;0.00028462&#39;,
     asks: &#39;35.00000000&#39; },
  KNCETH:
   { bid: &#39;0.00452830&#39;,
     bids: &#39;13.00000000&#39;,
     ask: &#39;0.00454970&#39;,
     asks: &#39;35.00000000&#39; },
  FUNBTC:
   { bid: &#39;0.00000464&#39;,
     bids: &#39;753.00000000&#39;,
     ask: &#39;0.00000465&#39;,
     asks: &#39;13924.00000000&#39; },
  FUNETH:
   { bid: &#39;0.00007126&#39;,
     bids: &#39;44131.00000000&#39;,
     ask: &#39;0.00007617&#39;,
     asks: &#39;1419.00000000&#39; },
  SNMBTC:
   { bid: &#39;0.00002489&#39;,
     bids: &#39;564.00000000&#39;,
     ask: &#39;0.00002559&#39;,
     asks: &#39;2553.00000000&#39; },
  SNMETH:
   { bid: &#39;0.00040060&#39;,
     bids: &#39;374.00000000&#39;,
     ask: &#39;0.00041494&#39;,
     asks: &#39;7624.00000000&#39; },
  NEOETH:
   { bid: &#39;0.09604700&#39;,
     bids: &#39;22.05000000&#39;,
     ask: &#39;0.09800000&#39;,
     asks: &#39;0.31000000&#39; },
  IOTABTC:
   { bid: &#39;0.00009515&#39;,
     bids: &#39;3.00000000&#39;,
     ask: &#39;0.00009529&#39;,
     asks: &#39;147.00000000&#39; },
  IOTAETH:
   { bid: &#39;0.00150002&#39;,
     bids: &#39;4311.00000000&#39;,
     ask: &#39;0.00155216&#39;,
     asks: &#39;7.00000000&#39; },
  LINKBTC:
   { bid: &#39;0.00007601&#39;,
     bids: &#39;4337.00000000&#39;,
     ask: &#39;0.00007630&#39;,
     asks: &#39;525.00000000&#39; },
  LINKETH:
   { bid: &#39;0.00121903&#39;,
     bids: &#39;3784.00000000&#39;,
     ask: &#39;0.00122965&#39;,
     asks: &#39;200.00000000&#39; },
  XVGBTC:
   { bid: &#39;0.00000113&#39;,
     bids: &#39;470101.00000000&#39;,
     ask: &#39;0.00000114&#39;,
     asks: &#39;147728.00000000&#39; },
  XVGETH:
   { bid: &#39;0.00001813&#39;,
     bids: &#39;8274.00000000&#39;,
     ask: &#39;0.00001843&#39;,
     asks: &#39;8320.00000000&#39; },
  CTRBTC:
   { bid: &#39;0.00020202&#39;,
     bids: &#39;625.00000000&#39;,
     ask: &#39;0.00020649&#39;,
     asks: &#39;1143.00000000&#39; },
  CTRETH:
   { bid: &#39;0.00330510&#39;,
     bids: &#39;387.00000000&#39;,
     ask: &#39;0.00339330&#39;,
     asks: &#39;436.00000000&#39; },
  SALTBTC:
   { bid: &#39;0.00063500&#39;,
     bids: &#39;76.00000000&#39;,
     ask: &#39;0.00064300&#39;,
     asks: &#39;437.54000000&#39; },
  SALTETH:
   { bid: &#39;0.01014200&#39;,
     bids: &#39;202.79000000&#39;,
     ask: &#39;0.01122600&#39;,
     asks: &#39;1.36000000&#39; },
  MDABTC:
   { bid: &#39;0.00038061&#39;,
     bids: &#39;8.00000000&#39;,
     ask: &#39;0.00041300&#39;,
     asks: &#39;1772.00000000&#39; },
  MDAETH:
   { bid: &#39;0.00655000&#39;,
     bids: &#39;547.00000000&#39;,
     ask: &#39;0.00660830&#39;,
     asks: &#39;8814.00000000&#39; },
  MTLBTC:
   { bid: &#39;0.00140600&#39;,
     bids: &#39;0.11000000&#39;,
     ask: &#39;0.00143800&#39;,
     asks: &#39;12.00000000&#39; },
  MTLETH:
   { bid: &#39;0.02300000&#39;,
     bids: &#39;1166.86000000&#39;,
     ask: &#39;0.02489500&#39;,
     asks: &#39;13.98000000&#39; },
  SUBBTC:
   { bid: &#39;0.00003580&#39;,
     bids: &#39;7617.00000000&#39;,
     ask: &#39;0.00003619&#39;,
     asks: &#39;1052.00000000&#39; },
  SUBETH:
   { bid: &#39;0.00056500&#39;,
     bids: &#39;3649.00000000&#39;,
     ask: &#39;0.00059988&#39;,
     asks: &#39;3649.00000000&#39; } }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get market depth for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.depth(&quot;BNBBTC&quot;, (error, depth, symbol) =&amp;gt; {
  console.info(symbol+&quot; market depth&quot;, depth);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;market depth for BNBBTC
{ bids:
   { &#39;0.00022997&#39;: &#39;49.00000000&#39;,
     &#39;0.00022867&#39;: &#39;11.00000000&#39;,
     &#39;0.00022865&#39;: &#39;1149.00000000&#39;,
     &#39;0.00022810&#39;: &#39;20.00000000&#39;,
     &#39;0.00022800&#39;: &#39;1000.00000000&#39;,
     &#39;0.00022777&#39;: &#39;1350.00000000&#39;,
     &#39;0.00022774&#39;: &#39;96.00000000&#39;,
     &#39;0.00022765&#39;: &#39;5.00000000&#39;,
     &#39;0.00022741&#39;: &#39;12.00000000&#39;,
     &#39;0.00022705&#39;: &#39;1372.00000000&#39;,
     &#39;0.00022700&#39;: &#39;402.00000000&#39;,
     &#39;0.00022514&#39;: &#39;756.00000000&#39;,
     &#39;0.00022513&#39;: &#39;761.00000000&#39;,
     &#39;0.00022502&#39;: &#39;2244.00000000&#39;,
     &#39;0.00022501&#39;: &#39;2190.00000000&#39;,
     &#39;0.00022500&#39;: &#39;5069.00000000&#39;,
     &#39;0.00022419&#39;: &#39;1871.00000000&#39;,
     &#39;0.00022418&#39;: &#39;1667.00000000&#39;,
     &#39;0.00022167&#39;: &#39;1889.00000000&#39;,
     &#39;0.00022162&#39;: &#39;1014.00000000&#39;,
     &#39;0.00022112&#39;: &#39;13563.00000000&#39;,
     &#39;0.00022078&#39;: &#39;4056.00000000&#39;,
     &#39;0.00022000&#39;: &#39;8060.00000000&#39;,
     &#39;0.00021963&#39;: &#39;13563.00000000&#39;,
     &#39;0.00021850&#39;: &#39;52.00000000&#39;,
     &#39;0.00021800&#39;: &#39;1282.00000000&#39;,
     &#39;0.00021710&#39;: &#39;102.00000000&#39;,
     &#39;0.00021680&#39;: &#39;100.00000000&#39;,
     &#39;0.00021652&#39;: &#39;29.00000000&#39;,
     &#39;0.00021641&#39;: &#39;154.00000000&#39;,
     &#39;0.00021500&#39;: &#39;1491.00000000&#39;,
     &#39;0.00021471&#39;: &#39;977.00000000&#39;,
     &#39;0.00021405&#39;: &#39;478.00000000&#39;,
     &#39;0.00021400&#39;: &#39;11.00000000&#39;,
     &#39;0.00021314&#39;: &#39;686.00000000&#39;,
     &#39;0.00021219&#39;: &#39;1089.00000000&#39;,
     &#39;0.00021200&#39;: &#39;767.00000000&#39;,
     &#39;0.00021100&#39;: &#39;5000.00000000&#39;,
     &#39;0.00021011&#39;: &#39;50.00000000&#39;,
     &#39;0.00021000&#39;: &#39;3468.00000000&#39;,
     &#39;0.00020900&#39;: &#39;169.00000000&#39;,
     &#39;0.00020843&#39;: &#39;90.00000000&#39;,
     &#39;0.00020811&#39;: &#39;200.00000000&#39;,
     &#39;0.00020702&#39;: &#39;50.00000000&#39;,
     &#39;0.00020691&#39;: &#39;283.00000000&#39;,
     &#39;0.00020600&#39;: &#39;3703.00000000&#39;,
     &#39;0.00020500&#39;: &#39;107.00000000&#39;,
     &#39;0.00020450&#39;: &#39;6363.00000000&#39;,
     &#39;0.00020250&#39;: &#39;301.00000000&#39;,
     &#39;0.00020222&#39;: &#39;200.00000000&#39;,
     &#39;0.00020200&#39;: &#39;123.00000000&#39;,
     &#39;0.00020137&#39;: &#39;50.00000000&#39;,
     &#39;0.00020122&#39;: &#39;727.00000000&#39;,
     &#39;0.00020100&#39;: &#39;6400.00000000&#39;,
     &#39;0.00020088&#39;: &#39;10.00000000&#39;,
     &#39;0.00020020&#39;: &#39;793.00000000&#39;,
     &#39;0.00020010&#39;: &#39;500.00000000&#39;,
     &#39;0.00020009&#39;: &#39;44.00000000&#39;,
     &#39;0.00020001&#39;: &#39;20020.00000000&#39;,
     &#39;0.00020000&#39;: &#39;45269.00000000&#39;,
     &#39;0.00019990&#39;: &#39;270.00000000&#39;,
     &#39;0.00019880&#39;: &#39;2117.00000000&#39;,
     &#39;0.00019800&#39;: &#39;1200.00000000&#39;,
     &#39;0.00019783&#39;: &#39;50.00000000&#39;,
     &#39;0.00019702&#39;: &#39;300.00000000&#39;,
     &#39;0.00019686&#39;: &#39;10.00000000&#39;,
     &#39;0.00019600&#39;: &#39;1025.00000000&#39;,
     &#39;0.00019595&#39;: &#39;139.00000000&#39;,
     &#39;0.00019501&#39;: &#39;3227.00000000&#39;,
     &#39;0.00019500&#39;: &#39;3832.00000000&#39;,
     &#39;0.00019488&#39;: &#39;82.00000000&#39;,
     &#39;0.00019400&#39;: &#39;1853.00000000&#39;,
     &#39;0.00019293&#39;: &#39;10.00000000&#39;,
     &#39;0.00019289&#39;: &#39;30.00000000&#39;,
     &#39;0.00019234&#39;: &#39;1999.00000000&#39;,
     &#39;0.00019200&#39;: &#39;4765.00000000&#39;,
     &#39;0.00019190&#39;: &#39;6.00000000&#39;,
     &#39;0.00019100&#39;: &#39;4353.00000000&#39;,
     &#39;0.00019073&#39;: &#39;12.00000000&#39;,
     &#39;0.00019058&#39;: &#39;28.00000000&#39;,
     &#39;0.00019050&#39;: &#39;718.00000000&#39;,
     &#39;0.00019001&#39;: &#39;20.00000000&#39;,
     &#39;0.00019000&#39;: &#39;39478.00000000&#39;,
     &#39;0.00018907&#39;: &#39;10.00000000&#39;,
     &#39;0.00018888&#39;: &#39;10045.00000000&#39;,
     &#39;0.00018880&#39;: &#39;15.00000000&#39;,
     &#39;0.00018800&#39;: &#39;3528.00000000&#39;,
     &#39;0.00018700&#39;: &#39;328.00000000&#39;,
     &#39;0.00018600&#39;: &#39;1000.00000000&#39;,
     &#39;0.00018598&#39;: &#39;2187.00000000&#39;,
     &#39;0.00018538&#39;: &#39;1383.00000000&#39;,
     &#39;0.00018529&#39;: &#39;10.00000000&#39;,
     &#39;0.00018500&#39;: &#39;1512.00000000&#39;,
     &#39;0.00018253&#39;: &#39;30.00000000&#39;,
     &#39;0.00018200&#39;: &#39;3000.00000000&#39;,
     &#39;0.00018158&#39;: &#39;10.00000000&#39;,
     &#39;0.00018106&#39;: &#39;250.00000000&#39;,
     &#39;0.00018100&#39;: &#39;4577.00000000&#39;,
     &#39;0.00018011&#39;: &#39;500.00000000&#39;,
     &#39;0.00018000&#39;: &#39;29832.00000000&#39; },
  asks:
   { &#39;0.00022999&#39;: &#39;32.00000000&#39;,
     &#39;0.00023086&#39;: &#39;583.00000000&#39;,
     &#39;0.00023095&#39;: &#39;1154.00000000&#39;,
     &#39;0.00023119&#39;: &#39;781.00000000&#39;,
     &#39;0.00023120&#39;: &#39;3401.00000000&#39;,
     &#39;0.00023180&#39;: &#39;4889.00000000&#39;,
     &#39;0.00023185&#39;: &#39;83.00000000&#39;,
     &#39;0.00023211&#39;: &#39;750.00000000&#39;,
     &#39;0.00023339&#39;: &#39;9273.00000000&#39;,
     &#39;0.00023340&#39;: &#39;474.00000000&#39;,
     &#39;0.00023440&#39;: &#39;500.00000000&#39;,
     &#39;0.00023450&#39;: &#39;1433.00000000&#39;,
     &#39;0.00023500&#39;: &#39;1480.00000000&#39;,
     &#39;0.00023573&#39;: &#39;87.00000000&#39;,
     &#39;0.00023580&#39;: &#39;518.00000000&#39;,
     &#39;0.00023999&#39;: &#39;863.00000000&#39;,
     &#39;0.00024000&#39;: &#39;275.00000000&#39;,
     &#39;0.00024100&#39;: &#39;60.00000000&#39;,
     &#39;0.00024119&#39;: &#39;3736.00000000&#39;,
     &#39;0.00024180&#39;: &#39;989.00000000&#39;,
     &#39;0.00024350&#39;: &#39;1285.00000000&#39;,
     &#39;0.00024399&#39;: &#39;500.00000000&#39;,
     &#39;0.00024400&#39;: &#39;2964.00000000&#39;,
     &#39;0.00024419&#39;: &#39;500.00000000&#39;,
     &#39;0.00024500&#39;: &#39;4499.00000000&#39;,
     &#39;0.00024580&#39;: &#39;542.00000000&#39;,
     &#39;0.00024584&#39;: &#39;6.00000000&#39;,
     &#39;0.00024700&#39;: &#39;250.00000000&#39;,
     &#39;0.00024789&#39;: &#39;2938.00000000&#39;,
     &#39;0.00024790&#39;: &#39;5535.00000000&#39;,
     &#39;0.00024800&#39;: &#39;499.00000000&#39;,
     &#39;0.00024892&#39;: &#39;2000.00000000&#39;,
     &#39;0.00024920&#39;: &#39;652.00000000&#39;,
     &#39;0.00024972&#39;: &#39;9242.00000000&#39;,
     &#39;0.00024999&#39;: &#39;1262.00000000&#39;,
     &#39;0.00025000&#39;: &#39;3739.00000000&#39;,
     &#39;0.00025078&#39;: &#39;250.00000000&#39;,
     &#39;0.00025348&#39;: &#39;1000.00000000&#39;,
     &#39;0.00025499&#39;: &#39;220.00000000&#39;,
     &#39;0.00025500&#39;: &#39;6029.00000000&#39;,
     &#39;0.00025518&#39;: &#39;10.00000000&#39;,
     &#39;0.00025698&#39;: &#39;17.00000000&#39;,
     &#39;0.00025700&#39;: &#39;250.00000000&#39;,
     &#39;0.00025800&#39;: &#39;265.00000000&#39;,
     &#39;0.00025925&#39;: &#39;20.00000000&#39;,
     &#39;0.00025984&#39;: &#39;1048.00000000&#39;,
     &#39;0.00025985&#39;: &#39;1048.00000000&#39;,
     &#39;0.00025987&#39;: &#39;1165.00000000&#39;,
     &#39;0.00025990&#39;: &#39;465.00000000&#39;,
     &#39;0.00025994&#39;: &#39;571.00000000&#39;,
     &#39;0.00025995&#39;: &#39;390.00000000&#39;,
     &#39;0.00026000&#39;: &#39;5033.00000000&#39;,
     &#39;0.00026028&#39;: &#39;10.00000000&#39;,
     &#39;0.00026280&#39;: &#39;40.00000000&#39;,
     &#39;0.00026300&#39;: &#39;13.00000000&#39;,
     &#39;0.00026348&#39;: &#39;50.00000000&#39;,
     &#39;0.00026500&#39;: &#39;38.00000000&#39;,
     &#39;0.00026548&#39;: &#39;10.00000000&#39;,
     &#39;0.00026594&#39;: &#39;51.00000000&#39;,
     &#39;0.00026666&#39;: &#39;15000.00000000&#39;,
     &#39;0.00026700&#39;: &#39;500.00000000&#39;,
     &#39;0.00026800&#39;: &#39;27.00000000&#39;,
     &#39;0.00026900&#39;: &#39;1000.00000000&#39;,
     &#39;0.00026929&#39;: &#39;50.00000000&#39;,
     &#39;0.00026990&#39;: &#39;270.00000000&#39;,
     &#39;0.00027000&#39;: &#39;8750.00000000&#39;,
     &#39;0.00027199&#39;: &#39;50.00000000&#39;,
     &#39;0.00027300&#39;: &#39;351.00000000&#39;,
     &#39;0.00027429&#39;: &#39;50.00000000&#39;,
     &#39;0.00027480&#39;: &#39;270.00000000&#39;,
     &#39;0.00027500&#39;: &#39;38.00000000&#39;,
     &#39;0.00027690&#39;: &#39;242.00000000&#39;,
     &#39;0.00027700&#39;: &#39;500.00000000&#39;,
     &#39;0.00027789&#39;: &#39;1317.00000000&#39;,
     &#39;0.00027906&#39;: &#39;1457.00000000&#39;,
     &#39;0.00027912&#39;: &#39;98.00000000&#39;,
     &#39;0.00027949&#39;: &#39;50.00000000&#39;,
     &#39;0.00027950&#39;: &#39;2000.00000000&#39;,
     &#39;0.00027977&#39;: &#39;96.00000000&#39;,
     &#39;0.00027980&#39;: &#39;1031.00000000&#39;,
     &#39;0.00028000&#39;: &#39;782.00000000&#39;,
     &#39;0.00028300&#39;: &#39;25.00000000&#39;,
     &#39;0.00028500&#39;: &#39;48.00000000&#39;,
     &#39;0.00028590&#39;: &#39;364.00000000&#39;,
     &#39;0.00028680&#39;: &#39;50.00000000&#39;,
     &#39;0.00028699&#39;: &#39;50.00000000&#39;,
     &#39;0.00028700&#39;: &#39;1600.00000000&#39;,
     &#39;0.00028800&#39;: &#39;3509.00000000&#39;,
     &#39;0.00028890&#39;: &#39;175.00000000&#39;,
     &#39;0.00028900&#39;: &#39;11474.00000000&#39;,
     &#39;0.00028999&#39;: &#39;10000.00000000&#39;,
     &#39;0.00029000&#39;: &#39;623.00000000&#39;,
     &#39;0.00029100&#39;: &#39;303.00000000&#39;,
     &#39;0.00029141&#39;: &#39;456.00000000&#39;,
     &#39;0.00029200&#39;: &#39;9999.00000000&#39;,
     &#39;0.00029234&#39;: &#39;104.00000000&#39;,
     &#39;0.00029300&#39;: &#39;200.00000000&#39;,
     &#39;0.00029358&#39;: &#39;325.00000000&#39;,
     &#39;0.00029399&#39;: &#39;153.00000000&#39;,
     &#39;0.00029428&#39;: &#39;100.00000000&#39; } }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Placing a LIMIT order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let quantity = 1, price = 0.069;
binance.buy(&quot;ETHBTC&quot;, quantity, price);
binance.sell(&quot;ETHBTC&quot;, quantity, price);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Placing a MARKET order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// These orders will be executed at current market price.
let quantity = 1;
binance.marketBuy(&quot;BNBBTC&quot;, quantity);
binance.marketSell(&quot;ETHBTC&quot;, quantity);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;LIMIT order with callback&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let quantity = 5, price = 0.00402030;
binance.buy(&quot;BNBETH&quot;, quantity, price, {type:&#39;LIMIT&#39;}, (error, response) =&amp;gt; {
  console.info(&quot;Limit Buy response&quot;, response);
  console.info(&quot;order id: &quot; + response.orderId);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;Limit Buy response {
  symbol: &#39;BNBETH&#39;,
  orderId: 4480717,
  clientOrderId: &#39;te38xGILZUXrPZHnTQPH6h&#39;,
  transactTime: 1509049732437,
  price: &#39;0.00402030&#39;,
  origQty: &#39;5.00000000&#39;,
  executedQty: &#39;5.00000000&#39;,
  status: &#39;FILLED&#39;,
  timeInForce: &#39;GTC&#39;,
  type: &#39;LIMIT&#39;,
  side: &#39;BUY&#39; }
//order id: 4480717
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Chaining orders together&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let quantity = 1;
binance.marketBuy(&quot;BNBBTC&quot;, quantity, (error, response) =&amp;gt; {
  console.info(&quot;Market Buy response&quot;, response);
  console.info(&quot;order id: &quot; + response.orderId);
  // Now you can limit sell with a stop loss, etc.
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;Market Buy response {
  symbol: &#39;BNBETH&#39;,
  orderId: 4480553,
  clientOrderId: &#39;rCGiCG08PGy7AwvbrG5d83&#39;,
  transactTime: 1509049376261,
  price: &#39;0.00000000&#39;,
  origQty: &#39;1.00000000&#39;,
  exeutedQty: &#39;1.00000000&#39;,
  status: &#39;FILLED&#39;,
  timeInForce: &#39;GTC&#39;,
  type: &#39;MARKET&#39;,
  side: &#39;BUY&#39; }
//order id: 4480553
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Placing a STOP LOSS order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// When the stop is reached, a stop order becomes a market order
// Note: You must also pass one of these type parameters:
// STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, TAKE_PROFIT_LIMIT
let type = &quot;STOP_LOSS&quot;;
let quantity = 1;
let price = 0.069;
let stopPrice = 0.068;
binance.sell(&quot;ETHBTC&quot;, quantity, price, {stopPrice: stopPrice, type: type});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Placing an ICEBERG order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Iceberg orders are intended to conceal the order quantity.
let quantity = 1;
let price = 0.069;
binance.sell(&quot;ETHBTC&quot;, quantity, price, {icebergQty: 10});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cancel an order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.cancel(&quot;ETHBTC&quot;, orderid, (error, response, symbol) =&amp;gt; {
  console.info(symbol+&quot; cancel response:&quot;, response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cancel all open orders&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.cancelAll(&quot;XMRBTC&quot;) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get open orders for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.openOrders(&quot;ETHBTC&quot;, (error, openOrders, symbol) =&amp;gt; {
  console.info(&quot;openOrders(&quot;+symbol+&quot;)&quot;, openOrders);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get list of all open orders&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.openOrders(false, (error, openOrders) =&amp;gt; {
  console.info(&quot;openOrders()&quot;, openOrders);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Check an order&#39;s status&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let orderid = &quot;7610385&quot;;
binance.orderStatus(&quot;ETHBTC&quot;, orderid, (error, orderStatus, symbol) =&amp;gt; {
  console.info(symbol+&quot; order status:&quot;, orderStatus);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get your Trade History&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.trades(&quot;SNMBTC&quot;, (error, trades, symbol) =&amp;gt; {
  console.info(symbol+&quot; trade history&quot;, trades);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[ { id: 9572,
    orderId: 47884,
    price: &#39;0.00003701&#39;,
    qty: &#39;1467.00000000&#39;,
    commission: &#39;0.06774660&#39;,
    commissionAsset: &#39;BNB&#39;,
    time: 1507062500456,
    isBuyer: true,
    isMaker: true,
    isBestMatch: true },
  { id: 9575,
    orderId: 47884,
    price: &#39;0.00003701&#39;,
    qty: &#39;735.00000000&#39;,
    commission: &#39;0.03394257&#39;,
    commissionAsset: &#39;BNB&#39;,
    time: 1507062502528,
    isBuyer: true,
    isMaker: true,
    isBestMatch: true } } ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get all account orders; active, canceled, or filled.&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.allOrders(&quot;ETHBTC&quot;, (error, orders, symbol) =&amp;gt; {
  console.info(symbol+&quot; orders:&quot;, orders);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get dust log&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.dustLog((error, dustlog) =&amp;gt; {
  console.info(dustlog);
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get 24hr ticker price change statistics for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.prevDay(false, (error, prevDay) =&amp;gt; {
  // console.info(prevDay); // view all data
  for ( let obj of prevDay ) {
    let symbol = obj.symbol;
    console.info(symbol+&quot; volume:&quot;+obj.volume+&quot; change: &quot;+obj.priceChangePercent+&quot;%&quot;);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get 24hr ticker price change statistics for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.prevDay(&quot;BNBBTC&quot;, (error, prevDay, symbol) =&amp;gt; {
  console.info(symbol+&quot; previous day:&quot;, prevDay);
  console.info(&quot;BNB change since yesterday: &quot;+prevDay.priceChangePercent+&quot;%&quot;)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Kline/candlestick data for a symbol&lt;/h4&gt; 
&lt;p&gt;You can use the optional API parameters for getting historical candlesticks, these are useful if you want to import data from earlier back in time. Optional parameters: limit (max/default 500), startTime, endTime.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Intervals: 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M
binance.candlesticks(&quot;BNBBTC&quot;, &quot;5m&quot;, (error, ticks, symbol) =&amp;gt; {
  console.info(&quot;candlesticks()&quot;, ticks);
  let last_tick = ticks[ticks.length - 1];
  let [time, open, high, low, close, volume, closeTime, assetVolume, trades, buyBaseVolume, buyAssetVolume, ignored] = last_tick;
  console.info(symbol+&quot; last close: &quot;+close);
}, {limit: 500, endTime: 1514764800000});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;WebSockets Implementation&lt;/h1&gt; 
&lt;h4&gt;Get Complete WebSocket Chart Cache&lt;/h4&gt; 
&lt;p&gt;This function pulls existing chart data before connecting to the WebSocket, and provides you realtime synchronized chart information including the most recent 500 candles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.websockets.chart(&quot;BNBBTC&quot;, &quot;1m&quot;, (symbol, interval, chart) =&amp;gt; {
  let tick = binance.last(chart);
  const last = chart[tick].close;
  console.info(chart);
  // Optionally convert &#39;chart&#39; object to array:
  // let ohlc = binance.ohlc(chart);
  // console.info(symbol, ohlc);
  console.info(symbol+&quot; last price: &quot;+last)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;{
  &#39;1517557800000&#39;:
   { open: &#39;0.00100090&#39;,
     high: &#39;0.00100650&#39;,
     low: &#39;0.00099810&#39;,
     close: &#39;0.00100370&#39;,
     volume: &#39;1161.52000000&#39; },
  &#39;1517557860000&#39;:
   { open: &#39;0.00100360&#39;,
     high: &#39;0.00101010&#39;,
     low: &#39;0.00100000&#39;,
     close: &#39;0.00100310&#39;,
     volume: &#39;1977.68000000&#39; },
  &#39;1517557920000&#39;:
   { open: &#39;0.00100100&#39;,
     high: &#39;0.00101130&#39;,
     low: &#39;0.00100080&#39;,
     close: &#39;0.00100670&#39;,
     volume: &#39;2002.00000000&#39; },
  &#39;1517557980000&#39;:
   { open: &#39;0.00100660&#39;,
     high: &#39;0.00101400&#39;,
     low: &#39;0.00100200&#39;,
     close: &#39;0.00100640&#39;,
     volume: &#39;3896.40000000&#39; },
  &#39;1517558040000&#39;:
   { open: &#39;0.00100630&#39;,
     high: &#39;0.00101390&#39;,
     low: &#39;0.00100350&#39;,
     close: &#39;0.00100470&#39;,
     volume: &#39;1675.48000000&#39; },
  &#39;1517558100000&#39;:
   { open: &#39;0.00100860&#39;,
     high: &#39;0.00101450&#39;,
     low: &#39;0.00100100&#39;,
     close: &#39;0.00100270&#39;,
     volume: &#39;1918.46000000&#39; },
  &#39;1517558160000&#39;:
   { open: &#39;0.00100460&#39;,
     high: &#39;0.00101480&#39;,
     low: &#39;0.00100310&#39;,
     close: &#39;0.00100670&#39;,
     volume: &#39;2464.12000000&#39; },
  &#39;1517558220000&#39;:
   { open: &#39;0.00100510&#39;,
     high: &#39;0.00100660&#39;,
     low: &#39;0.00100110&#39;,
     close: &#39;0.00100250&#39;,
     volume: &#39;1484.59000000&#39; } }
// (..many more entries not shown)
///BNBBTC last price: 0.00100250
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get Candlestick Updates via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Periods: 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M
binance.websockets.candlesticks([&#39;BNBBTC&#39;], &quot;1m&quot;, (candlesticks) =&amp;gt; {
  let { e:eventType, E:eventTime, s:symbol, k:ticks } = candlesticks;
  let { o:open, h:high, l:low, c:close, v:volume, n:trades, i:interval, x:isFinal, q:quoteVolume, V:buyVolume, Q:quoteBuyVolume } = ticks;
  console.info(symbol+&quot; &quot;+interval+&quot; candlestick update&quot;);
  console.info(&quot;open: &quot;+open);
  console.info(&quot;high: &quot;+high);
  console.info(&quot;low: &quot;+low);
  console.info(&quot;close: &quot;+close);
  console.info(&quot;volume: &quot;+volume);
  console.info(&quot;isFinal: &quot;+isFinal);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Trade Updates via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.websockets.trades([&#39;BNBBTC&#39;, &#39;ETHBTC&#39;], (trades) =&amp;gt; {
  let {e:eventType, E:eventTime, s:symbol, p:price, q:quantity, m:maker, a:tradeId} = trades;
  console.info(symbol+&quot; trade update. price: &quot;+price+&quot;, quantity: &quot;+quantity+&quot;, maker: &quot;+maker);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get miniTicker via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.websockets.miniTicker(markets =&amp;gt; {
  console.info(markets);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;  ICXBNB:
   { close: &#39;0.34803000&#39;,
     open: &#39;0.34249000&#39;,
     high: &#39;0.35000000&#39;,
     low: &#39;0.31001000&#39;,
     volume: &#39;134681.88000000&#39;,
     quoteVolume: &#39;44351.78363150&#39;,
     eventTime: 1520501508957 },
  ELFETH:
   { close: &#39;0.00120820&#39;,
     open: &#39;0.00132816&#39;,
     high: &#39;0.00132926&#39;,
     low: &#39;0.00115888&#39;,
     volume: &#39;852919.00000000&#39;,
     quoteVolume: &#39;1045.37831133&#39;,
     eventTime: 1520501508735 },
  PIVXBTC:
   { close: &#39;0.00049510&#39;,
     open: &#39;0.00051000&#39;,
     high: &#39;0.00056290&#39;,
     low: &#39;0.00049200&#39;,
     volume: &#39;215530.27000000&#39;,
     quoteVolume: &#39;111.50245426&#39;,
     eventTime: 1520501508367 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get 24hr Price Change Statistics via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// For all symbols:
binance.websockets.prevDay(false, (error, response) =&amp;gt; {
  console.info(response);
});

// For a specific symbol:
binance.websockets.prevDay(&#39;BNBBTC&#39;, (error, response) =&amp;gt; {
  console.info(response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;{ eventType: &#39;24hrTicker&#39;,
  eventTime: 1512629577435,
  symbol: &#39;BNBBTC&#39;,
  priceChange: &#39;-0.00002671&#39;,
  percentChange: &#39;-12.844&#39;,
  averagePrice: &#39;0.00019282&#39;,
  prevClose: &#39;0.00020796&#39;,
  close: &#39;0.00018125&#39;,
  closeQty: &#39;55.00000000&#39;,
  bestBid: &#39;0.00018038&#39;,
  bestBidQty: &#39;580.00000000&#39;,
  bestAsk: &#39;0.00018125&#39;,
  bestAskQty: &#39;144.00000000&#39;,
  open: &#39;0.00020796&#39;,
  high: &#39;0.00021300&#39;,
  low: &#39;0.00017555&#39;,
  volume: &#39;3731915.00000000&#39;,
  quoteVolume: &#39;719.59011818&#39;,
  openTime: 1512543177433,
  closeTime: 1512629577433,
  firstTradeId: 2248079,
  lastTradeId: 2284725,
  numTrades: 36647 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get Market Depth via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.websockets.depth([&#39;BNBBTC&#39;], (depth) =&amp;gt; {
  let {e:eventType, E:eventTime, s:symbol, u:updateId, b:bidDepth, a:askDepth} = depth;
  console.info(symbol+&quot; market depth update&quot;);
  console.info(bidDepth, askDepth);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Maintain Market Depth Cache Locally via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.websockets.depthCache([&#39;BNBBTC&#39;], (symbol, depth) =&amp;gt; {
  let bids = binance.sortBids(depth.bids);
  let asks = binance.sortAsks(depth.asks);
  console.info(symbol+&quot; depth cache update&quot;);
  console.info(&quot;bids&quot;, bids);
  console.info(&quot;asks&quot;, asks);
  console.info(&quot;best bid: &quot;+binance.first(bids));
  console.info(&quot;best ask: &quot;+binance.first(asks));
  console.info(&quot;last updated: &quot; + new Date(depth.eventTime));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;BNBBTC depth cache update
asks { &#39;0.00025400&#39;: 0.531114,
  &#39;0.00025440&#39;: 0.2602512,
  &#39;0.00025469&#39;: 0.01400795,
  &#39;0.00025500&#39;: 0.0051,
  &#39;0.00025555&#39;: 0.0245328,
  &#39;0.00025629&#39;: 0.05100171,
  &#39;0.00025630&#39;: 0.0146091,
  &#39;0.00025642&#39;: 0.02230854,
  &#39;0.00025825&#39;: 0.00180775,
  &#39;0.00025896&#39;: 0.21856224,
  &#39;0.00025927&#39;: 0.025927 }
bids { &#39;0.00025203&#39;: 0.201624,
  &#39;0.00025202&#39;: 0.04838784,
  &#39;0.00025200&#39;: 0.13482,
  &#39;0.00025195&#39;: 0.01385725,
  &#39;0.00025187&#39;: 0.25539618,
  &#39;0.00025138&#39;: 0.012569,
  &#39;0.00025136&#39;: 0.04247984,
  &#39;0.00025135&#39;: 0.0085459,
  &#39;0.00025100&#39;: 0.02259,
  &#39;0.00025072&#39;: 0.012536,
  &#39;0.00025071&#39;: 0.00401136 }
//best ask: 0.00025400
//best bid: 0.00025203
//last updated: Thu Apr 18 2019 00:52:49 GMT-0400 (Eastern Daylight Time)
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;bookTickers stream includes the bid/ask price &amp;amp; amount, for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.websockets.bookTickers( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;bookTickers stream includes the bid/ask price &amp;amp; amount, for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.websockets.bookTickers( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deposit &amp;amp; Withdraw&lt;/h3&gt; 
&lt;h4&gt;Get Deposit Address&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.depositAddress(&quot;XMR&quot;, (error, response) =&amp;gt; {
  console.info(response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get All Deposit History&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.depositHistory((error, response) =&amp;gt; {
  console.info(response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Deposit History for a specific symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.depositHistory((error, response) =&amp;gt; {
  console.info(response);
}, &quot;VEN&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get All Withdraw History&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.withdrawHistory((error, response) =&amp;gt; {
  console.info(response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Withdraw History for a specific symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.withdrawHistory((error, response) =&amp;gt; {
  console.info(response);
}, &quot;BTC&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Withdraw with AddressTag&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Required for coins like XMR, XRP, etc.
let address = &quot;44tLjmXrQNrWJ5NBsEj2R77ZBEgDa3fEe9GLpSf2FRmhexPvfYDUAB7EXX1Hdb3aMQ9FLqdJ56yaAhiXoRsceGJCRS3Jxkn&quot;;
let addressTag = &quot;0e5e38a01058dbf64e53a4333a5acf98e0d5feb8e523d32e3186c664a9c762c1&quot;;
let amount = 0.1;
binance.withdraw(&quot;XMR&quot;, address, amount, addressTag);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Withdraw&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.withdraw(&quot;BTC&quot;, &quot;1C5gqLRs96Xq4V2ZZAR1347yUCpHie7sa&quot;, 0.2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Binance Margin API&lt;/h1&gt; 
&lt;h4&gt;Transfer from Main account to Margin account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.mgTransferMainToMargin(asset, amount, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    // Success! Transaction ID: response.tranId
});

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Transfer from Margin account to Main account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.mgTransferMarginToMain(asset, amount, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    // Success! Transaction ID: response.tranId
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get maximum transfer-out amount from Margin account to Main account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.maxTransferable(asset, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    console.info(`Maximum transfer-out amount: ${response.amount}`);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get maximum borrow amount&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.maxBorrowable(asset, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    console.info(`Maximum borrow amount: ${response.amount}`);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Borrow from margin account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.mgBorrow(asset, amount, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    // Success! Transaction ID: response.tranId
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Repay margin account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.mgRepay(asset, amount, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    // Success! Transaction ID: response.tranId
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Margin BUY and SELL orders&lt;/h4&gt; 
&lt;p&gt;Instead of &lt;code&gt;binance.buy()&lt;/code&gt; use &lt;code&gt;binance.mgBuy()&lt;/code&gt; and instead of &lt;code&gt;binance.sell()&lt;/code&gt; use &lt;code&gt;binance.mgSell()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For market orders use &lt;code&gt;binance.mgMarketBuy()&lt;/code&gt; and &lt;code&gt;binance.mgMarketSell()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For order operations, use &lt;code&gt;binance.mgCancel()&lt;/code&gt;, &lt;code&gt;binance.mgCancelOrders()&lt;/code&gt;, &lt;code&gt;binance.mgAllOrders()&lt;/code&gt;, &lt;code&gt;binance.openOrders()&lt;/code&gt;, &lt;code&gt;binance.mgOrderStatus()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Usage and callbacks are the same as the &#39;regular account&#39; counterparts.&lt;/p&gt; 
&lt;h4&gt;Margin account details&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.mgAccount((error, response) =&amp;gt; {
   if ( error ) return console.warn(error);
   console.info(&quot;Account details response:&quot;, response)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  {
    borrowEnabled: true,
    marginLevel: &#39;999.00000000&#39;,
    totalAssetOfBtc: &#39;0.00000003&#39;,
    totalLiabilityOfBtc: &#39;0.00000000&#39;,
    totalNetAssetOfBtc: &#39;0.00000003&#39;,
    tradeEnabled: true,
    transferEnabled: true,
    userAssets: [
      {
        asset: &#39;MATIC&#39;,
        borrowed: &#39;0.00000000&#39;,
        free: &#39;0.00000000&#39;,
        interest: &#39;0.00000000&#39;,
        locked: &#39;0.00000000&#39;,
        netAsset: &#39;0.00000000&#39;
      }
    ]
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Binance Lending API&lt;/h1&gt; 
&lt;h4&gt;Lending Account Details&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let lendingData = await binance.lending();
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  lendingData {
    positionAmountVos: [
      {
        amount: &#39;952983.20208997&#39;,
        amountInBTC: &#39;129.54853649&#39;,
        amountInUSDT: &#39;952983.20208997&#39;,
        asset: &#39;USDT&#39;
      }
    ],
    totalAmountInBTC: &#39;129.54853649&#39;,
    totalAmountInUSDT: &#39;952983.20208997&#39;,
    totalFixedAmountInBTC: &#39;13.59400000&#39;,
    totalFixedAmountInUSDT: &#39;100000.00000000&#39;,
    totalFlexibleInBTC: &#39;115.95453649&#39;,
    totalFlexibleInUSDT: &#39;852983.20208997&#39;
  }
  {
    positionAmountVos: [],
    totalAmountInBTC: &#39;0.00000000&#39;,
    totalAmountInUSDT: &#39;0.00000000&#39;,
    totalFixedAmountInBTC: &#39;0.00000000&#39;,
    totalFixedAmountInUSDT: &#39;0.00000000&#39;,
    totalFlexibleInBTC: &#39;0.00000000&#39;,
    totalFlexibleInUSDT: &#39;0.00000000&#39;
  }
  {
    positionAmountVos: [],
    totalAmountInBTC: &#39;0.00000000&#39;,
    totalAmountInUSDT: &#39;0.00000000&#39;,
    totalFixedAmountInBTC: &#39;0.00000000&#39;,
    totalFixedAmountInUSDT: &#39;0.00000000&#39;,
    totalFlexibleInBTC: &#39;0.00000000&#39;,
    totalFlexibleInUSDT: &#39;0.00000000&#39;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md&quot;&gt;Advanced Examples&lt;/a&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#exchangeinfo-pull-minimum-order-size-quantity-etc&quot;&gt;exchangeInfo: Pull minimum order size, quantity, etc&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#clamp-order-quantities-to-required-amounts-via-minqty-minnotional-stepsize-when-placing-orders&quot;&gt;Clamp order quantities to required amounts via minQty, minNotional, stepSize when placing orders&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#show-api-rate-limits&quot;&gt;Show API Rate limits&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#connect-to-all-websockets-at-once-thanks-keith1024&quot;&gt;Connect to all WebSockets at once&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#get-last-order-for-a-symbol&quot;&gt;Get last order for a symbol&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#neworderresptype-example-when-placing-orders&quot;&gt;newOrderRespType example&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#recent-trades-historicaltrades-recenttrades-aggtrades-functions&quot;&gt;Recent Trades (historicalTrades, recentTrades, aggTrades functions)&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#terminate-websocket-connections&quot;&gt;Terminate WebSocket connections&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#user-data-account-balance-updates-trade-updates-new-orders-filled-orders-cancelled-orders-via-websocket&quot;&gt;User Data: Account Balance Updates, Trade Updates, New Orders, Filled Orders, Cancelled Orders via WebSocket&lt;/a&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#margin-user-data-account-balance-updates-trade-updates-new-orders-filled-orders-cancelled-orders-via-websocket&quot;&gt;Margin User Data: Account Balance Updates, Trade Updates, New Orders, Filled Orders, Cancelled Orders via WebSocket&lt;/a&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#asynchronous-syntax-options&quot;&gt;Asynchronous Syntax Options&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;Verify that your system time is correct. If you have any suggestions don&#39;t hesitate to file an issue.&lt;/p&gt; 
&lt;p&gt;Having problems? Try adding &lt;code&gt;useServerTime&lt;/code&gt; to your options or setting &lt;code&gt;recvWindow&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.options({
  APIKEY: &#39;xxx&#39;,
  APISECRET: &#39;xxx&#39;,
  useServerTime: true,
  recvWindow: 60000, // Set a higher recvWindow to increase response timeout
  verbose: true, // Add extra output when subscribing to WebSockets, etc
  log: log =&amp;gt; {
    console.log(log); // You can create your own logger here, or disable console output
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Problems getting your balance? Wrap the entry point of your application in useServerTime:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await binance.useServerTime();
binance.balance((error, balances) =&amp;gt; {
    if ( error ) return console.error(error);
    console.info(&quot;balances()&quot;, balances);
    console.info(&quot;BNB balance: &quot;, balances.BNB.available);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can enable verbose mode to help with debugging WebSocket streams:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.setOption( &#39;verbose&#39;, true );
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;For support go to &lt;a href=&quot;https://t.me/binance_api_english&quot;&gt;Telegram&lt;/a&gt; or &lt;a href=&quot;https://dev.binance.vision/&quot;&gt;Binance Developers&lt;/a&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; ✨&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Thank you to all contributors!&lt;/strong&gt;&lt;/em&gt; dmzoneill, bmino, dmitriz, keith1024, Eluvade, itnok, GusGold, gunar, kirosc, MadDeveloper, nimanr, robaleman, gemmell, lht147, abou7mied, arenddeboer, ejfrancis, charlesdarkwind, joaquinnunez, meetmangukiya, afsharsafavi, boyhagemann, davewang, dbvcode, sethyx, andersonaguiar, hoota, balthazar, ifmad, CollinEstes, dpereskokov, Dobberoonski75, guygberg, joelrich, mstijak, matthewwoop, bhnow, Rolaus, pavlovdog, toant13, Fuzzyma, bitoiu, WWWSpider, dreyescat, hems, mathlet0x, nurdtechie98 and others!&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Give us a star :star:&lt;/li&gt; 
 &lt;li&gt;Fork and Clone! Awesome&lt;/li&gt; 
 &lt;li&gt;Select existing &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/issues&quot;&gt;issues&lt;/a&gt; or create a &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/issues/new&quot;&gt;new issue&lt;/a&gt; and give us a PR with your bugfix or improvement after. We love it ❤️&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/node-binance-api.svg?style=for-the-badge&amp;amp;maxAge=86400&quot; alt=&quot;Downloads&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/jaggedsoft/node-binance-api.svg?style=for-the-badge&amp;amp;label=Stars&quot; alt=&quot;Stars&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/contributors/jaggedsoft/node-binance-api.svg?style=for-the-badge&amp;amp;maxAge=86400&quot; alt=&quot;Contributors&quot;&gt; &lt;a href=&quot;https://starcharts.herokuapp.com/jaggedsoft/node-binance-api&quot;&gt;&lt;img src=&quot;https://starcharts.herokuapp.com/jaggedsoft/node-binance-api.svg&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://hits.dwyl.io/jaggedsoft/node-binance-api&quot;&gt;&lt;img src=&quot;http://hits.dwyl.io/jaggedsoft/node-binance-api.svg&quot; alt=&quot;Views&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/jaggedsoft&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/jaggedsoft.svg?style=social&quot; alt=&quot;jaggedsoft on Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NervJS/taro</title>
      <link>https://github.com/NervJS/taro</link>
      <description>&lt;p&gt;开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信/京东/百度/支付宝/字节跳动/ QQ 小程序/H5/React Native 等应用。 https://taro.zone/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Taro&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/node/v/@tarojs/cli.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/NervJS/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/NervJS/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;👽 Taro[&#39;tɑ:roʊ]，泰罗·奥特曼，宇宙警备队总教官，实力最强的奥特曼。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Taro&lt;/strong&gt; 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信/京东/百度/支付宝/字节跳动/ QQ 小程序/H5 等应用。现如今市面上端的形态多种多样，Web、React Native、微信小程序等各种端大行其道，当业务要求同时在不同的端都要求有所表现的时候，针对不同的端去编写多套代码的成本显然非常高，这时候只编写一套代码就能够适配到多端的能力就显得极为需要。&lt;/p&gt; 
&lt;h3&gt;版本说明&lt;/h3&gt; 
&lt;p&gt;当前 Taro 已进入 3.x 时代，相较于 Taro 1/2 采用了重运行时的架构，让开发者可以获得完整的 React/Vue 等框架的开发体验，具体请参考&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU3NDkzMTI3MA==&amp;amp;mid=2247483770&amp;amp;idx=1&amp;amp;sn=ba2cdea5256e1c4e7bb513aa4c837834&quot;&gt;《小程序跨框架开发的探索与实践》&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;如果你想使用 Taro 1/2，可以访问&lt;a href=&quot;https://nervjs.github.io/taro/versions&quot;&gt;文档版本&lt;/a&gt;获得帮助。&lt;/p&gt; 
&lt;h2&gt;学习资源&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://taro-docs.jd.com/taro/docs/guide&quot;&gt;5 分钟上手 Taro 开发&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/awesome-taro&quot;&gt;awesome-taro&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;掘金小册：&lt;a href=&quot;https://juejin.im/book/5b73a131f265da28065fb1cd?referrer=5ba228f16fb9a05d3251492d&quot;&gt;Taro 多端开发实现原理与实战&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;社区共享&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://taro-club.jd.com/&quot;&gt;Taro 交流社区——让每一次交流都被沉淀&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://taro-ext.jd.com/&quot;&gt;Taro 物料市场——让每一个轮子产生价值&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;使用案例&lt;/h2&gt; 
&lt;p&gt;Taro 已经投入了我们的生产环境中使用，业界也在广泛地使用 Taro 开发多端应用。&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/244&quot;&gt;征集更多优秀案例&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Taro 特性&lt;/h2&gt; 
&lt;h3&gt;框架支持&lt;/h3&gt; 
&lt;h4&gt;React/Nerv 支持&lt;/h4&gt; 
&lt;p&gt;在 Taro 3 中可以使用完整的 React/Nerv 开发体验，具体请参考&lt;a href=&quot;https://nervjs.github.io/taro/docs/react&quot;&gt;基础教程——React&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;代码示例&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;
import { View, Text } from &#39;@tarojs/components&#39;

export default class Index extends Component {
  state = {
    msg: &#39;Hello World！&#39;
  }
  componentWillUnmount () { }

  componentDidShow () { }

  componentDidHide () { }

  render () {
    return (
      &amp;lt;View className=&#39;index&#39;&amp;gt;
        &amp;lt;Text&amp;gt;{this.state.msg}&amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Vue 支持&lt;/h4&gt; 
&lt;p&gt;在 Taro 3 中可以使用完整的 Vue 开发体验，具体请参考&lt;a href=&quot;https://nervjs.github.io/taro/docs/vue&quot;&gt;基础教程——Vue&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;代码示例&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vue&quot;&gt;&amp;lt;template&amp;gt;
  &amp;lt;view class=&quot;index&quot;&amp;gt;
    &amp;lt;text&amp;gt;{{msg}}&amp;lt;/text&amp;gt;
  &amp;lt;/view&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
export default {
  data () {
    return {
      msg: &#39;Hello World！&#39;
    }
  },
  created () {},
  onShow () {},
  onHide () {}
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;多端转换支持&lt;/h3&gt; 
&lt;p&gt;Taro 方案的初心就是为了打造一个多端开发的解决方案。&lt;/p&gt; 
&lt;p&gt;目前 Taro 3 可以支持转换到 &lt;strong&gt;微信/京东/百度/支付宝/字节跳动/QQ 小程序&lt;/strong&gt; 以及 &lt;strong&gt;H5 端&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;加入共建&lt;/h2&gt; 
&lt;h4&gt;加入 Taro 社区共建倡议&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/4714&quot;&gt;Taro 邀你加入社区共建&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;为 Taro 贡献代码&lt;/h4&gt; 
&lt;p&gt;Taro 非常欢迎社区开发者为 Taro 贡献代码，在贡献之前请先阅读&lt;a href=&quot;https://nervjs.github.io/taro/docs/CONTRIBUTING.html&quot;&gt;贡献指南&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;如果你想为 Taro 实现一个重要功能，需要先撰写 RFC 文档，按照 Taro 的&lt;a href=&quot;https://github.com/NervJS/taro-rfcs&quot;&gt;RFC 机制&lt;/a&gt;进行操作，在经过社区讨论完善后才可以进行代码的提交。&lt;/p&gt; 
&lt;h2&gt;问题反馈与建议&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://nervjs.github.io/taro-issue-helper/&quot;&gt;给 Taro 提 ISSUE&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;强烈推荐阅读 &lt;a href=&quot;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way&quot;&gt;《提问的智慧》&lt;/a&gt;、&lt;a href=&quot;https://github.com/seajs/seajs/issues/545&quot;&gt;《如何向开源社区提问题》&lt;/a&gt; 和 &lt;a href=&quot;http://www.chiark.greenend.org.uk/%7Esgtatham/bugs-cn.html&quot;&gt;《如何有效地报告 Bug》&lt;/a&gt;、&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25795393&quot;&gt;《如何向开源项目提交无法解答的问题》&lt;/a&gt;，更好的问题更容易获得帮助。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://issuehunt.io/repos/128624453&quot;&gt;&lt;img src=&quot;https://issuehunt.io/static/embed/issuehunt-button-v1.svg&quot; alt=&quot;Let&#39;s fund issues in this repository&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特别鸣谢&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nanjingboy/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1390888?s=100&amp;amp;v=4&quot; alt=&quot;nanjingboy&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/js-newbee/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20449400?s=100&amp;amp;v=4&quot; alt=&quot;jsNewbee&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/Qiyu8/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/15245051?s=100&amp;amp;v=4&quot; alt=&quot;Qiyu8&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/Garfield550/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3471836?s=100&amp;amp;v=4&quot; alt=&quot;Garfield550&quot;&gt;&lt;/a&gt; :---:|:---:|:---:|:---: &lt;a href=&quot;https://github.com/nanjingboy/&quot;&gt;nanjingboy&lt;/a&gt; | &lt;a href=&quot;https://github.com/js-newbee/&quot;&gt;jsNewbee&lt;/a&gt; | &lt;a href=&quot;https://github.com/Qiyu8/&quot;&gt;Qiyu8&lt;/a&gt; | &lt;a href=&quot;https://github.com/Garfield550/&quot;&gt;Garfield Lee&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;贡献者们&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;开发计划&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/milestones&quot;&gt;Milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;p&gt;本项目遵从 &lt;a href=&quot;https://gist.github.com/stephenparish/9941e89d80e2bc58a153&quot;&gt;Angular Style Commit Message Conventions&lt;/a&gt;，更新日志请查阅 &lt;a href=&quot;https://github.com/NervJS/taro/releases&quot;&gt;Release&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;开发交流&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/198&quot;&gt;官方交流微信群&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;p&gt;Copyright (c) O2Team&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png&quot; alt=&quot;AWESOME CHEATSHEETS LOGO&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge.svg&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href=&quot;https://gist.github.com/LeCoupa&quot;&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I reorganized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; 
&lt;h3&gt;📃 Languages&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Command line interface&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh&quot;&gt;Bash&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Imperative&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt&quot;&gt;C&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt&quot;&gt;C#&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md&quot;&gt;JAVA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md&quot;&gt;Python&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Functional&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;📦 Backend&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;PHP&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php&quot;&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Python&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py&quot;&gt;Django&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Javascript&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js&quot;&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js&quot;&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js&quot;&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js&quot;&gt;Sails.js&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌐 Frontend&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Basics&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html&quot;&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Frameworks&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js&quot;&gt;React.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js&quot;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css&quot;&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js&quot;&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js&quot;&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js&quot;&gt;AngularJS&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🗃️ Databases&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;SQL&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;NoSQL&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh&quot;&gt;Redis&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 Tools&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Development&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh&quot;&gt;cURL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh&quot;&gt;Drush&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md&quot;&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh&quot;&gt;Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js&quot;&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt&quot;&gt;VIM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt&quot;&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Infrastructure&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh&quot;&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh&quot;&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml&quot;&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh&quot;&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh&quot;&gt;Ubuntu&lt;/a&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jonasschmedtmann/complete-javascript-course</title>
      <link>https://github.com/jonasschmedtmann/complete-javascript-course</link>
      <description>&lt;p&gt;Starter files, final projects and FAQ for my Complete JavaScript course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Course Material and FAQ for my Complete JavaScript Course&lt;/h1&gt; 
&lt;p&gt;This repo contains starter files and final code for all sections and projects contained in the course.&lt;/p&gt; 
&lt;p&gt;Use starter code to start each section, and &lt;strong&gt;final code to compare it with your own code whenever something doesn&#39;t work&lt;/strong&gt;!&lt;/p&gt; 
&lt;p&gt;👇 &lt;strong&gt;&lt;em&gt;Please read the following Frequently Asked Questions (FAQ) carefully before starting the course&lt;/em&gt;&lt;/strong&gt; 👇&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Q1: How do I download the files?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; If you&#39;re new to GitHub and just want to download the entire code, hit the green button saying &quot;Code&quot;, and then choose the &quot;Download ZIP&quot; option. If you can&#39;t see the button (on mobile), use &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/archive/master.zip&quot;&gt;this link&lt;/a&gt; instead.&lt;/p&gt; 
&lt;h3&gt;Q2: I&#39;m looking for the old course version (v1) files. Where can I find them?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; They are in this same repo, but in the &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1 branch&lt;/a&gt;. So just go to &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1&lt;/a&gt;, and download the code from there.&lt;/p&gt; 
&lt;h3&gt;Q3: I&#39;m stuck! Where do I get help?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Have you actually tried to fix the problem on your own? Have you compared your code to the final code? If you failed fixing your problem, please &lt;strong&gt;post a detailed description of the problem to the Q&amp;amp;A area of that video over at Udemy&lt;/strong&gt;, along with a &lt;a href=&quot;https://codepen.io/pen/&quot;&gt;codepen&lt;/a&gt; containing your code. You will get help there. Please don&#39;t send me a personal message or email to fix coding problems.&lt;/p&gt; 
&lt;h3&gt;Q4: What VSCode theme are you using?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; I use Monokai Pro for all my coding and course production. It&#39;s a paid theme (I&#39;, &lt;strong&gt;not&lt;/strong&gt; affiliated with them), but you can actually use the free demo version forever 😅&lt;/p&gt; 
&lt;h3&gt;Q5: Can I see a final version of the course projects?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Sure! Here you go:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pig-game-v2.netlify.app&quot;&gt;Pig Game&lt;/a&gt; (DOM Manipulation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist.netlify.app/&quot;&gt;Bankist&lt;/a&gt; (Arrays, Numbers, Dates, Timers. Fake &quot;log in&quot; with user &lt;code&gt;js&lt;/code&gt; and PIN &lt;code&gt;1111&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist-dom.netlify.app/&quot;&gt;Bankist Site&lt;/a&gt; (Advanced DOM and Events)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mapty.netlify.app/&quot;&gt;Mapty&lt;/a&gt; (OOP, Geolocation, Project planning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forkify-v2.netlify.app/&quot;&gt;forkify&lt;/a&gt; (Final advanced project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q6: Videos don&#39;t load, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Unfortunately, there is nothing I can do about it. The course is hosted on Udemy, and sometimes they have technical issues like this. Please just come back a bit later or &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact their support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q7: Videos are blurred / have low quality, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Please open video settings and change the quality from &#39;Auto&#39; to another value, for example 720p. If that doesn&#39;t help, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q8: Are the videos downloadable?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Yes! I made all videos downloadable from Udemy so you can learn even without an internet connection. To download a video, use the settings icon in the right bottom corner of the video player. Videos have to be downloaded individually.&lt;/p&gt; 
&lt;h3&gt;Q9: I want to put these projects in my portfolio. Is that allowed?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Absolutely! Just make sure you actually built them yourself by following the course, and that you understand what you did. What is &lt;strong&gt;not allowed&lt;/strong&gt; is that you create your own course/videos/articles based on this course&#39;s content!&lt;/p&gt; 
&lt;h3&gt;Q10: You mentioned your resources page. Where can I find it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; It&#39;s on my website at &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;http://codingheroes.io/resources&lt;/a&gt;. You can subscribe for updates 😉&lt;/p&gt; 
&lt;h3&gt;Q11: I love your courses and want to get updates on new courses. How?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; First, you can subscribe to my email list &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;at my website&lt;/a&gt;. Plus, I make important announcements on twitter &lt;a href=&quot;https://twitter.com/jonasschmedtman&quot;&gt;@jonasschmedtman&lt;/a&gt;, so you should definitely follow me there 🔥&lt;/p&gt; 
&lt;h3&gt;Q12: How do I get my certificate of completion?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; A certificate of completion is provided by Udemy after you complete 100% of the course. After completing the course, just click on the &quot;Your progress&quot; indicator in the top right-hand corner of the course page. If you want to change your name on the certificate, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q13: Can you add subtitles in my language?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No. I provide professional English captions, but Udemy is responsible for subtitles in all other languages (automatic translations). So please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt; to request your own language.&lt;/p&gt; 
&lt;h3&gt;Q14: Do you accept pull requests?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No, for the simple reason that I want this repository to contain the &lt;em&gt;exact&lt;/em&gt; same code that is shown in the videos. However, please feel free to add an issue if you found one.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
