<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sat, 04 Sep 2021 01:49:42 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>TheAlgorithms/Javascript</title>
      <link>https://github.com/TheAlgorithms/Javascript</link>
      <description>&lt;p&gt;A repository for All algorithms implemented in Javascript (for educational purposes only)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Algorithms - JavaScript&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TheAlgorithms/Javascript/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&amp;amp;style=flat-square&quot; alt=&quot;contributions welcome&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://lgtm.com/projects/g/TheAlgorithms/Javascript/context:javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/grade/javascript/g/TheAlgorithms/Javascript.svg?logo=lgtm&amp;amp;logoWidth=18&amp;amp;style=flat-square&quot; alt=&quot;Language grade: JavaScript&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/TheAlgorithms/Javascript/workflows/Node%20CI/badge.svg?sanitize=true&quot; alt=&quot;Node CI&quot;&gt; &lt;img src=&quot;https://github.com/TheAlgorithms/Javascript/workflows/update_directory_md/badge.svg?sanitize=true&quot; alt=&quot;update_directory_md&quot;&gt; &lt;a href=&quot;https://discord.gg/c7MnfGFGa6&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/808045925556682782.svg?logo=discord&amp;amp;colorB=7289DA&amp;amp;style=flat-square&quot; alt=&quot;Discord chat&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/TheAlgorithms/Javascript.svg?label=Repo%20size&amp;amp;style=flat-square&quot; alt=&quot;&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;All algorithms implemented in JavaScript (for educational purposes only)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/TheAlgorithms/Javascript&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;These are for demonstration purposes only. There are many implementations of sorts in the JavaScript standard library that are much better for performance reasons.&lt;/p&gt; 
&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://raw.githubusercontent.com/TheAlgorithms/Javascript/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt; 
&lt;h2&gt;List of Algorithms&lt;/h2&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://raw.githubusercontent.com/TheAlgorithms/Javascript/master/DIRECTORY.md&quot;&gt;directory&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Algorithm Explanation&lt;/h2&gt; 
&lt;p&gt;see our &lt;a href=&quot;https://github.com/TheAlgorithms/Javascript/wiki&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HashLips/generative-art-opensource</title>
      <link>https://github.com/HashLips/generative-art-opensource</link>
      <description>&lt;p&gt;Create generative art by using the canvas api and node js, feel free to contribute to this repo with new ideas.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;generative-art-opensource&lt;/h1&gt; 
&lt;p&gt;Create generative art by using the canvas api and node js, feel free to contribute to this repo with new ideas.&lt;/p&gt; 
&lt;h1&gt;Project Setup&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;install &lt;code&gt;node.js&lt;/code&gt; on your local system (&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;https://nodejs.org/en/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;clone the repository to your local system &lt;code&gt;git@github.com:HashLips/generative-art-opensource.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn add all&lt;/code&gt; to install dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;How to use&lt;/h1&gt; 
&lt;h2&gt;Run the code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;node index.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the &lt;code&gt;./output&lt;/code&gt; folder to find your generated images to use as NFTs, as well as the metadata to use for NFT marketplaces.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Adjust the provided configuration and resources&lt;/h2&gt; 
&lt;h3&gt;Configuration file&lt;/h3&gt; 
&lt;p&gt;The file &lt;code&gt;./input/config.js&lt;/code&gt; contains the following properties that can be adjusted to your preference in order to change the behavior of the NFT generation procedure:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;width: - of your image in pixels. Default: &lt;code&gt;1000px&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;height: - of your image in pixels. Default: &lt;code&gt;1000px&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;dir: - where image parts are stored. Default: &lt;code&gt;./input&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;description: - of your generated NFT. Default: &lt;code&gt;This is an NFT made by the coolest generative code.&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;baseImageUri: - URL base to access your NFTs from. This will be used by platforms to find your image resource. This expects the image to be accessible by it&#39;s id like &lt;code&gt;${baseImageUri}/${id}&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;startEditionFrom: - number (int) to start naming NFTs from. Default: &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;editionSize: - number (int) to end edition at. Default: &lt;code&gt;10&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;editionDnaPrefix: - value (number or string) that indicates which dna from an edition is used there. I.e. dna &lt;code&gt;0&lt;/code&gt; from to independent batches in the same edition may differ, and can be differentiated using this. Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;rarityWeights: - allows to provide rarity categories and how many of each type to include in an edition. Default: &lt;code&gt;1 super_rare, 4 rare, 5 original&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;layers: list of layers that should be used to render the image. See next section for detail.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image layers&lt;/h3&gt; 
&lt;p&gt;The image layers are different parts that make up a full image by overlaying on top of each other. E.g. in the example input content of this repository we start with the eyeball and layer features like the eye lids or iris on top to create the completed and unique eye, which we can then use as part of our NFT collection. To ensure uniqueness, we want to add various features and multiple options for each of them in order to allow enough permutations for the amount of unique images we require.&lt;/p&gt; 
&lt;p&gt;To start, copy the layers/features and their images in a flat hierarchy at a directory of your choice (by default we expect them in &lt;code&gt;./input/&lt;/code&gt;). The features should contain options for each rarity that is provided via the config file.&lt;/p&gt; 
&lt;p&gt;After adding the &lt;code&gt;layers&lt;/code&gt;, adjust them accordingly in the &lt;code&gt;config.js&lt;/code&gt; by providing the directory path, positioning and sizes. Use the existing &lt;code&gt;addLayers&lt;/code&gt; calls as guidance for how to add layers. This can either only use the name of the layer and will use default positioning (x=0, y=0) and sizes (width=configured width, height=configure height), or positioning and sizes can be provided for more flexibility.&lt;/p&gt; 
&lt;h3&gt;Allowing different rarities for certain rarity/layer combinations&lt;/h3&gt; 
&lt;p&gt;It is possible to provide a percentage at which e.g. a rare item would contain a rare vs. common part in a given layer. This can be done via the &lt;code&gt;addRarityPercentForLayer&lt;/code&gt; that can be found in the &lt;code&gt;config.js&lt;/code&gt; as well. This allows for more fine grained control over how much randomness there should be during the generation process, and allows a combination of common and rare parts.&lt;/p&gt; 
&lt;h1&gt;Development suggestions&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preferably use VSCode with the prettifier plugin for a consistent coding style (or equivalent js formatting rules)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>pedroslopez/whatsapp-web.js</title>
      <link>https://github.com/pedroslopez/whatsapp-web.js</link>
      <description>&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg?sanitize=true&quot; alt=&quot;Depfu&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.2126.14-brightgreen.svg?sanitize=true&quot; alt=&quot;WhatsApp_Web 2.2126.14&quot;&gt; &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;whatsapp-web.js&lt;/h1&gt; 
&lt;p&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/p&gt; 
&lt;p&gt;It uses Puppeteer to run a real instance of Whatsapp Web to avoid getting blocked.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I can&#39;t guarantee you will not be blocked by using this method, although it has worked for me. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#39;t be considered totally safe.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Please note that Node v12+ is required.&lt;/p&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;whatsapp-web.js&#39;);

const client = new Client();

client.on(&#39;qr&#39;, (qr) =&amp;gt; {
    // Generate and scan this code with your phone
    console.log(&#39;QR RECEIVED&#39;, qr);
});

client.on(&#39;ready&#39;, () =&amp;gt; {
    console.log(&#39;Client is ready!&#39;);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
    if (msg.body == &#39;!ping&#39;) {
        msg.reply(&#39;pong&#39;);
    }
});

client.initialize();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at &lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js/raw/master/example.js&quot;&gt;example.js&lt;/a&gt; for another example with more use cases.&lt;/p&gt; 
&lt;h2&gt;Remote Access&lt;/h2&gt; 
&lt;p&gt;You could also connect to any previously existing browser instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const client = new Client({ 
    puppeteer: {
        browserWSEndpoint: `ws://localhost:3000`
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Installing a browser using browserless:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker run \
  --rm \
  -p 3000:3000 \
  -e &quot;MAX_CONCURRENT_SESSIONS=1&quot; \
  browserless/chrome:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reference: &lt;a href=&quot;https://docs.browserless.io/docs/docker-quickstart.html&quot;&gt;https://docs.browserless.io/docs/docker-quickstart.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Remote Debugging&lt;/h3&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Running a browser with websocket remote debugging enabled:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;chrome.exe --remote-debugging-port=9222&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;After that check the following webpage and check &lt;a href=&quot;http://127.0.0.1:9220/json&quot;&gt;http://127.0.0.1:9220/json&lt;/a&gt; and get the &lt;strong&gt;webSocketDebuggerUrl&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Supported features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (images/audio/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (video)&lt;/td&gt; 
   &lt;td&gt;✅ &lt;a href=&quot;https://guide.wwebjs.dev/features/handling-attachments#caveat-for-sending-videos-and-gifs&quot;&gt;(requires google chrome)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send stickers&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive media (images/audio/video/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send contact cards&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Message replies&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join groups by invite&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get invite for group&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group info (subject, description)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group settings (send messages, edit info)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Add group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kick group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Promote/demote group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention users&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mute/unmute chats&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Block/unblock contacts&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get contact info&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get profile pictures&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Set user status message&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.wwebjs.dev/&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guide.wwebjs.dev/&quot;&gt;Guide&lt;/a&gt; &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.org/package/whatsapp-web.js&quot;&gt;npm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome! If you see something you&#39;d like to add, please do. For drastic changes, please open an issue first.&lt;/p&gt; 
&lt;h2&gt;Donating&lt;/h2&gt; 
&lt;p&gt;You can support the maintainer of this project through the link below&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.me/psla/&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg?sanitize=true&quot; alt=&quot;Support via PayPal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at &lt;a href=&quot;https://whatsapp.com&quot;&gt;https://whatsapp.com&lt;/a&gt;. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this project except in compliance with the License. You may obtain a copy of the License at &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HowProgrammingWorks/Index</title>
      <link>https://github.com/HowProgrammingWorks/Index</link>
      <description>&lt;p&gt;Metarhia educational program index 📖&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Индекс и состояние курсов&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Links.md&quot;&gt;Индекс каналов и групп сообщества Метархия&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Talks.md&quot;&gt;Индекс докладов на конференциях&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Practice/Index.md&quot;&gt;Индекс практических заданий&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Последовательная программа&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Introduction.md&quot;&gt;Введение и обзор знаний&lt;/a&gt; (есть несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Fundamentals.md&quot;&gt;Основы программирования, модули (1 год обучения)&lt;/a&gt; (есть до 95% материала)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Advanced.md&quot;&gt;Программирование (2 год обучения)&lt;/a&gt; (есть до 65% материала)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Отдельные курсы&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Asynchronous.md&quot;&gt;Асинхронное программирование&lt;/a&gt; (есть 97% примеров кода и видео-лекции)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/NodeJS.md&quot;&gt;Технологический стек Node.js&lt;/a&gt; (есть 95% кода и видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Metarhia.md&quot;&gt;Технологический стек Metarhia&lt;/a&gt; (есть 5% примеров и видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Patterns.md&quot;&gt;Шаблоны проектирования&lt;/a&gt; (есть 50% примеров кода и видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Paradigms.md&quot;&gt;Парадигмы программирования&lt;/a&gt; (есть 50% кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Metaprogramming.md&quot;&gt;Метапрограммирование и мультипарадигменное программирование&lt;/a&gt; (есть 50% кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/AlgAndData.md&quot;&gt;Алгоритмы и структуры данных&lt;/a&gt; (есть до 20% материала, нужно сводить разные варианты)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Network.md&quot;&gt;Проектирование сетевых протоколов и сервисов&lt;/a&gt; (есть 50% примеров кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Tools.md&quot;&gt;Инструменты разработки и жизненного цикла ПО&lt;/a&gt; (есть несколько видео-лекций, нужно расширять)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Functional.md&quot;&gt;Функциональное программирование&lt;/a&gt; (есть 20% примеров кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/OOP.md&quot;&gt;Объектно-ориентированное программирование&lt;/a&gt; (есть 20% примеров кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/GRASP.md&quot;&gt;GRASP принципы с адаптацией для JavaScript и Node.js&lt;/a&gt; (есть 50% материала, записано 20% лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/OS.md&quot;&gt;Операционные системы&lt;/a&gt; (нужно сформировать программу)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/System.md&quot;&gt;Системное программирование&lt;/a&gt; (нужно сформировать программу)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Architecture.md&quot;&gt;Архитектура информационных систем&lt;/a&gt; (есть несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Web.md&quot;&gt;Веб-технологии&lt;/a&gt; (есть 25% кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Parallel.md&quot;&gt;Параллельное программирование&lt;/a&gt; (есть 10% примеров и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Databases.md&quot;&gt;Проектирование баз данных&lt;/a&gt; (есть 25% примеров и видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Highload.md&quot;&gt;Высоконагруженные и масштабируемые системы&lt;/a&gt; (есть несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/UI-UX.md&quot;&gt;Проектирование пользовательских интерфейсов&lt;/a&gt; (нужно сформировать программу)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Security.md&quot;&gt;Безопасность информационных систем&lt;/a&gt; (нужно сформировать программу)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Quality.md&quot;&gt;Качество, тестирование и надежность ПО&lt;/a&gt; (есть несколько видео-лекций)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Anish-Agnihotri/dhof-loot</title>
      <link>https://github.com/Anish-Agnihotri/dhof-loot</link>
      <description>&lt;p&gt;Scripts to collect statistics about the LOOT + derivative projects.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;dhof-loot&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;b&gt;&lt;a href=&quot;https://github.com/anish-agnihotri/dhof-loot#About&quot;&gt;About&lt;/a&gt;&lt;/b&gt; | &lt;b&gt;&lt;a href=&quot;https://github.com/anish-agnihotri/dhof-loot#Derivatives&quot;&gt;Derivatives&lt;/a&gt;&lt;/b&gt; | &lt;b&gt;&lt;a href=&quot;https://github.com/anish-agnihotri/dhof-loot#License&quot;&gt;License&lt;/a&gt;&lt;/b&gt; &lt;/p&gt; 
&lt;h1&gt;About&lt;/h1&gt; 
&lt;p&gt;This repository contains tooling and data for &lt;a href=&quot;https://www.lootproject.com/faq&quot;&gt;Loot&lt;/a&gt; and other derivative projects, and is free to use without credit or attribution, for any means.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;/&lt;/code&gt; directory contains scripts and data for Loot, and &lt;code&gt;/derivatives&lt;/code&gt; contains the same for projects inspired from or built atop Loot.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Loot itself is a collection of 8,000 unique bags of adventurer gear NFTs. At release, anyone could claim loot bags for just gas, and all bags were claimed in under 4 hours. Each loot bag contains 8 items: a piece for an adventurer&#39;s chest, foot, hand, head, neck, ring, waist, and weapon.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Loot&lt;/h1&gt; 
&lt;h2&gt;Distribution&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;tokenIds &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;7778&lt;/code&gt; claimable by user.&lt;/li&gt; 
 &lt;li&gt;tokenIds &lt;code&gt;7778&lt;/code&gt; to &lt;code&gt;8000&lt;/code&gt; claimable by contract owner.&lt;/li&gt; 
 &lt;li&gt;Each token has attributes: &lt;code&gt;chest&lt;/code&gt;, &lt;code&gt;foot&lt;/code&gt;, &lt;code&gt;hand&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;neck&lt;/code&gt;, &lt;code&gt;ring&lt;/code&gt;, &lt;code&gt;waist&lt;/code&gt;, &lt;code&gt;weapon&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Output&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;output/loot.json&lt;/code&gt; contains all tokenIds and their attributes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;output/occurences.json&lt;/code&gt; contains the number of occurences by attribute.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;output/rare.json&lt;/code&gt; contains a mapping of &lt;code&gt;lootId&lt;/code&gt; to &lt;code&gt;score&lt;/code&gt; (which is the sum of number of occcrences of each child attribute for a &lt;code&gt;lootId&lt;/code&gt;), sorted ascending by &lt;code&gt;score&lt;/code&gt;. It also includes &lt;code&gt;rarest&lt;/code&gt; which is how rare the loot bags attributes are (&lt;code&gt;1&lt;/code&gt; == &lt;code&gt;rarest&lt;/code&gt;, &lt;code&gt;8000&lt;/code&gt; == &lt;code&gt;least rare&lt;/code&gt;), based on this specific ranking mechanism.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;output/probability.json&lt;/code&gt; contains a mapping of &lt;code&gt;lootId&lt;/code&gt; to &lt;code&gt;rank&lt;/code&gt; by probabilistic occurence rather than rank (&lt;code&gt;P(A in bag at slot 1)&lt;/code&gt; and &lt;code&gt;P(B in bag at slot 2)&lt;/code&gt;, then &lt;code&gt;P(A in slot 1 and B in slot 2)&lt;/code&gt; is the product of the 2 probabilities).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;output/images.json&lt;/code&gt; contains the base64 encoded SVG of each tokenId&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Run locally&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install dependencies
npm install

# Collect all Loot
npm run collect

# Parse Loot statistics
npm run parse

# Collect Loot base64 encoded images
npm run images
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run derivative scripts, follow the README in their subdirectory.&lt;/p&gt; 
&lt;h1&gt;Derivatives&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Anish-Agnihotri/dhof-loot/tree/master/derivatives/ability-score&quot;&gt;Ability Score&lt;/a&gt;&amp;nbsp;— Ability score NFTs by &lt;a href=&quot;https://twitter.com/andy8052&quot;&gt;andy8052&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Anish-Agnihotri/dhof-loot/tree/master/derivatives/extension-loot&quot;&gt;Extension Loot&lt;/a&gt; — Data for the &lt;a href=&quot;https://twitter.com/xLootProject&quot;&gt;Extension Loot&lt;/a&gt; project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Anish-Agnihotri/dhof-loot/tree/master/derivatives/synthetic-loot&quot;&gt;Synthetic Loot Botting&lt;/a&gt; — Botting ideal synthetic loot by mass generating addresses&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cybergen/dope-wars-loot&quot;&gt;Fork: Dope Wars Loot&lt;/a&gt; by &lt;a href=&quot;https://cybergen/dope-wars-loot&quot;&gt;@cybergen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Credits&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ktasbas&quot;&gt;@ktasbas&lt;/a&gt; for adding Loot base64 encoded SVG retrieval support&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vance46#5648&lt;/code&gt; and &lt;code&gt;UFvOgue, X-Divine Rober#8392&lt;/code&gt; for helping me flag and think through the probablistic occurence for Loot items&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Loot is licensed under &lt;a href=&quot;https://github.com/Anish-Agnihotri/dhof-loot/raw/master/LICENSE&quot;&gt;The Unlicense&lt;/a&gt;—a license with no conditions whatsoever which dedicates works to the public domain.&lt;/p&gt; 
&lt;p&gt;Unlicensed works, modifications, and larger works may be distributed under different terms and without source code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>narze/THIS_REPO_HAS_1816_STARS</title>
      <link>https://github.com/narze/THIS_REPO_HAS_1816_STARS</link>
      <description>&lt;p&gt;Click Star ⭐️ to see it in action&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;THIS REPO HAS 1816 STARS ⭐️&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mhmdbhsk&quot;&gt;mhmdbhsk&lt;/a&gt; helped me count the 1816th star, thank you!&lt;/p&gt; 
&lt;h2&gt;The star count is wrong?&lt;/h2&gt; 
&lt;p&gt;Then help me fix it. CLICK THE STAR!&lt;/p&gt; 
&lt;h2&gt;Want to contribute?&lt;/h2&gt; 
&lt;p&gt;Clicking the star will trigger the commit which includes the clicker&#39;s name to the contributors list. So CLICK THE STAR!&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/narze/THIS_REPO_HAS_X_STARS/wiki/Q&amp;amp;A&quot;&gt;Q&amp;amp;A&lt;/a&gt;&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Stuk/jszip</title>
      <link>https://github.com/Stuk/jszip</link>
      <description>&lt;p&gt;Create, read and edit .zip files with Javascript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JSZip &lt;a href=&quot;http://travis-ci.org/Stuk/jszip&quot;&gt;&lt;img src=&quot;https://api.travis-ci.org/Stuk/jszip.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/github/Stuk/jszip&quot;&gt;&lt;img src=&quot;https://codeclimate.com/github/Stuk/jszip/badges/gpa.svg?sanitize=true&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://saucelabs.com/u/jszip&quot;&gt;&lt;img src=&quot;https://saucelabs.com/browser-matrix/jszip.svg?sanitize=true&quot; alt=&quot;Selenium Test Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A library for creating, reading and editing .zip files with JavaScript, with a lovely and simple API.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://stuk.github.io/jszip&quot;&gt;https://stuk.github.io/jszip&lt;/a&gt; for all the documentation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var zip = new JSZip();

zip.file(&quot;Hello.txt&quot;, &quot;Hello World\n&quot;);

var img = zip.folder(&quot;images&quot;);
img.file(&quot;smile.gif&quot;, imgData, {base64: true});

zip.generateAsync({type:&quot;blob&quot;}).then(function(content) {
    // see FileSaver.js
    saveAs(content, &quot;example.zip&quot;);
});

/*
Results in a zip containing
Hello.txt
images/
    smile.gif
*/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;JSZip is dual-licensed. You may use it under the MIT license &lt;em&gt;or&lt;/em&gt; the GPLv3 license. See &lt;a href=&quot;https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown&quot;&gt;LICENSE.markdown&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alibaba/butterfly</title>
      <link>https://github.com/alibaba/butterfly</link>
      <description>&lt;p&gt;🦋Butterfly，A JavaScript/React/Vue2 Diagramming library which concentrate on flow layout field. (基于JavaScript/React/Vue2的流程图组件)&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;http://noonnightstorm.github.io&quot;&gt; 
  &lt;!-- &lt;img width=&quot;900&quot; src=&quot;http://img.alicdn.com/tfs/TB1TlngGFYqK1RjSZLeXXbXppXa-844-474.png&quot;&gt; --&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;一个基于JS的数据驱动的节点式编排组件库&lt;/h3&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://dev.azure.com/noonnightstorm/butterfly/_build/latest?definitionId=1&amp;amp;branchName=master&quot;&gt;&lt;img src=&quot;https://dev.azure.com/noonnightstorm/butterfly/_apis/build/status/alibaba.butterfly?branchName=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/alibaba/butterfly&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/alibaba/butterfly/master.svg?style=flat-square&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/butterfly-dag&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/butterfly-dag.svg?style=flat-square&quot; alt=&quot;npm package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://npmjs.com/butterfly-dag&quot;&gt;&lt;img src=&quot;http://img.shields.io/npm/dm/butterfly-dag.svg?style=flat-square&quot; alt=&quot;NPM downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/alibaba/butterfly&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/alibaba/butterfly.svg?style=flat-square&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/alibaba/butterfly?type=dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/dev/alibaba/butterfly.svg?style=flat-square&quot; alt=&quot;DevDependencies&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/README.en-US.md&quot;&gt;English&lt;/a&gt; | 简体中文&lt;/p&gt; 
&lt;h2&gt;✨ 特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;丰富DEMO，开箱即用&lt;/li&gt; 
 &lt;li&gt;全方位管理画布，开发者只需要更专注定制化的需求&lt;/li&gt; 
 &lt;li&gt;利用DOM/REACT/VUE来定制元素；灵活性，可塑性，拓展性优秀&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;900&quot; src=&quot;https://img.alicdn.com/imgextra/i3/O1CN018CrqXz1KRK7Euhj6X_!!6000000001160-2-tps-1155-1081.png&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;🚀DEMO&lt;/h2&gt; 
&lt;h3&gt;本地DEMO&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;git clone git@github.com:alibaba/butterfly.git
npm install
cd example
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;线上DEMO&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://butterfly-dag.gitee.io/butterfly-dag/demo/analysis&quot;&gt;小蝴蝶官网&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📦 安装&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm install butterfly-dag
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔨 快速上手&lt;/h2&gt; 
&lt;h3&gt;引入方式&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;// 完全版，内部包含jquery和lodash
import {Canvas, Group, Node, Edge} from &#39;butterfly-dag&#39;;
import &#39;butterfly-dag/dist/index.css&#39;;

// 如果您引用的项目使用了jquery和lodash，为了缩小项目的体积，我们建议：
import {Canvas, Group, Node, Edge} from &#39;butterfly-dag/pack/index.js&#39;;
import &#39;butterfly-dag/pack/index.css&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;生成画布&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;import {Canvas} from &#39;butterfly-dag&#39;;
let canvas = new Canvas({
  root: dom,              //canvas的根节点(必传)
  zoomable: true,         //可缩放(可传)
  moveable: true,         //可平移(可传)
  draggable: true,        //节点可拖动(可传)
});
canvas.draw({
  groups: [],  //分组信息
  nodes: [],  //节点信息
  edges: []  // 连线信息
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔗 API文档&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;&lt;strong&gt;!!! 3.x的API文档，请移步到&lt;/strong&gt;&lt;/em&gt;&lt;a href=&quot;https://github.com/alibaba/butterfly/raw/master/README.md&quot;&gt;这里&lt;/a&gt;;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/canvas.md&quot;&gt;画布(Canvas)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/group.md&quot;&gt;节点组(Group)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/node.md&quot;&gt;节点(Node)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/edge.md&quot;&gt;线(Edge)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/endpoint.md&quot;&gt;锚点(Endpoint)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/minimap.md#endpoint-api&quot;&gt;缩略图(Minimap)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/tooltip.md&quot;&gt;提示 &amp;amp; 菜单(tooltips &amp;amp; menu)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/layout.md&quot;&gt;布局(Layout)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;插件 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/plugins-arrows.md&quot;&gt;箭头(arrow)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/plugins-pannel.md&quot;&gt;左侧画板(pannel)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/plugins-hotkey.md&quot;&gt;快捷键(hotkey)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;React &amp;amp; Vue支持 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/react.md&quot;&gt;React butterfly组件支持&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/vue.md&quot;&gt;Vue2 butterfly组件支持&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎨优秀案例&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;900&quot; src=&quot;https://img.alicdn.com/imgextra/i4/O1CN01d7WHVs1vkEDzWRRlW_!!6000000006210-2-tps-2400-8172.png&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;⌨️垂直业务React拓展组件&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aliyun/react-data-mapping&quot;&gt;数据/字段映射组件&lt;/a&gt;: 适用于做数据字段映射，表字段映射，表格连线等业务&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;49%&quot; src=&quot;https://img.alicdn.com/imgextra/i2/O1CN01O8w0tT26WuU5J6lty_!!6000000007670-1-tps-595-411.gif&quot;&gt; &lt;img width=&quot;49%&quot; src=&quot;https://img.alicdn.com/imgextra/i2/O1CN017Gcu0Y1mbgIHcgqwr_!!6000000004973-1-tps-595-411.gif&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;49%&quot; src=&quot;https://img.alicdn.com/imgextra/i2/O1CN011xYzxM1ZenzfVE0Xq_!!6000000003220-1-tps-595-411.gif&quot;&gt; &lt;img width=&quot;49%&quot; src=&quot;https://img.alicdn.com/imgextra/i4/O1CN01Nt9rpo25y6NlRMUtR_!!6000000007594-1-tps-595-411.gif&quot;&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aliyun/react-lineage-dag&quot;&gt;表字段血缘/业务血缘&lt;/a&gt;: 适用于表级血缘,表字段级血缘,业务链路血缘等业务&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width=&quot;98%&quot; src=&quot;https://img.alicdn.com/imgextra/i4/O1CN01ou8wTq20SQv4AnedD_!!6000000006848-1-tps-1337-761.gif&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aliyun/react-visual-modeling&quot;&gt;可视化建模图&lt;/a&gt;: 适用于UML，数据库建模，数据仓库建设等业务&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width=&quot;98%&quot; src=&quot;https://img.alicdn.com/imgextra/i4/O1CN01VZxfyl1pOLc15k7XM_!!6000000005350-1-tps-1665-829.gif&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;调度编排图(doing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aliyun/react-monitor-dag&quot;&gt;监控图&lt;/a&gt;: 适用于任务流，数据流等业务的状态展示&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width=&quot;98%&quot; src=&quot;https://img.alicdn.com/imgextra/i2/O1CN01eJigoL1gd9tjRSvdi_!!6000000004164-1-tps-1665-826.gif&quot;&gt; 
&lt;ul&gt; 
 &lt;li&gt;Butterfly-Editor(doing)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝如何贡献&lt;/h2&gt; 
&lt;p&gt;我们欢迎所有的贡献者，在成为贡献者之前，请先阅读&lt;a href=&quot;https://raw.githubusercontent.com/alibaba/butterfly/master/docs/zh-CN/CONTRIBUTING.md&quot;&gt;贡献指南&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;如果您已经了解，快来&lt;a href=&quot;https://github.com/alibaba/butterfly/issues&quot;&gt;Issus&lt;/a&gt;或&lt;a href=&quot;https://github.com/alibaba/butterfly/pulls&quot;&gt;Pull requests&lt;/a&gt;成为贡献者吧，让我们和小蝴蝶一起成长，一起变得更好、更棒！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lgwebdream/FE-Interview</title>
      <link>https://github.com/lgwebdream/FE-Interview</link>
      <description>&lt;p&gt;🔥🔥🔥 前端面试，独有前端面试题详解，前端面试刷题必备，1000+前端面试真题，Html、Css、JavaScript、Vue、React、Node、TypeScript、Webpack、算法、网络与安全、浏览器&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;前端面试&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://github.com/lgwebdream/FE-Interview/issues&quot;&gt;&lt;img alt=&quot;GitHub issues&quot; src=&quot;https://img.shields.io/github/issues/lgwebdream/FE-Interview?color=success&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/lgwebdream/FE-Interview/network&quot;&gt;&lt;img alt=&quot;GitHub forks&quot; src=&quot;https://img.shields.io/github/forks/lgwebdream/FE-Interview?color=success&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/lgwebdream/FE-Interview/stargazers&quot;&gt;&lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/lgwebdream/FE-Interview?color=success&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/t3.png&quot; width=&quot;300px&quot;&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table display=&quot;table&quot;&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt; &lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/html.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/html1.png&quot; width=&quot;30px&quot;&gt; &lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/css.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/css.png&quot; width=&quot;40px&quot;&gt; &lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/javascript.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/javascript1.png&quot; width=&quot;35px&quot;&gt;&lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/vue.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/vue.svg?sanitize=true&quot; width=&quot;40px&quot;&gt;&lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/react.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/wx/react_icon_v1.png&quot; width=&quot;40px&quot;&gt;&lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/node.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/node1.png&quot; width=&quot;40px&quot;&gt;&lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/webpack.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/webpack.svg?sanitize=true&quot; width=&quot;40px&quot;&gt;&lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/http.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/http1.png&quot; width=&quot;35px&quot;&gt;&lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/algorithm.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/algorithm3.svg?sanitize=true&quot; width=&quot;52px&quot;&gt;&lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/program.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/pro.svg?sanitize=true&quot; width=&quot;50px&quot;&gt;&lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/other.md&quot;&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/wx/other_iocn_v2.png&quot; width=&quot;38px&quot;&gt; &lt;/a&gt;&lt;/b&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/html.md&quot;&gt;Html&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/css.md&quot;&gt;&amp;nbsp;Css&amp;nbsp; &lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/javascript.md&quot;&gt;JavaScript&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/vue.md&quot;&gt;&amp;nbsp;Vue&amp;nbsp;&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/react.md&quot;&gt;React&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/node.md&quot;&gt;Node&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/webpack.md&quot;&gt;Webpack&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/http.md&quot;&gt;Http&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/algorithm.md&quot;&gt;Algorithm&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/program.md&quot;&gt;Coding&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/raw/master/summarry/other.md&quot;&gt;Other&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;h2&gt;☕ 前端面试每日一题&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;每天 get 一个知识点&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Day379:如果让你来实现一个前端监控系统，应该考虑什么？如何去实现？&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1214&quot;&gt;答案&amp;amp;解析&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;📚 前端面试题汇总&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview/issues&quot;&gt;全部面试题汇总&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;📱 手机刷题(附带详细答案)&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;二维码加载失败请点击 &lt;a href=&quot;http://img-static.yidengxuetang.com/wxapp/issue-img/wxqr-github.png&quot;&gt;入口&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/issue-img/wxqr-github.png&quot; width=&quot;200px&quot;&gt; 
&lt;h2&gt;⏱️ 最近更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1213&quot;&gt;Day378:说一下什么是 Http 协议无状态?怎么解决 Http 协议无状态?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1211&quot;&gt;Day377:说一下你了解的 WebSocket 鉴权授权方案？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1210&quot;&gt;Day376:说一下你对进程和线程的了解？Node 中进程间是如何进行通信的？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1209&quot;&gt;Day375:setTimeout/setInterval 实现倒计时如何解决时间偏差的问题?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1208&quot;&gt;Day374:说一下开发中常用的几种 Content-Type ？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1207&quot;&gt;Day373：说下 Node 中 require 模块引入的查找方式？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1206&quot;&gt;Day372:说一下你对 Get 和 Post 请求在缓存方面理解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1205&quot;&gt;Day371:使用 Symbol 函数都有哪些要注意的点？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1204&quot;&gt;Day370:为什么使用 setTimeout 实现 setInterval？怎么模拟？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1203&quot;&gt;Day369:说下你对 Reflect 的理解？为什么会有 Reflect 的出现？Proxy 也简单的说一下？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1202&quot;&gt;Day368:说一下你对 Get 请求传参长度限制的理解？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1201&quot;&gt;Day367:说下 URL 和 URI 的区别？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1200&quot;&gt;Day366:什么是 CSP?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1199&quot;&gt;Day365:如何解决 Vue 打包 vendor 过大的问题？Webpack 打包 vue 速度慢怎么办？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1197&quot;&gt;Day364：为什么说 React 中 props 是只读的？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1196&quot;&gt;Day363:举例说明 React 的插槽有哪些运用场景？你有用过 React 的插槽(Portals)吗？怎么用？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1195&quot;&gt;Day362:说一下 Vue 中 EventBus 的使用？在使用过程中有没有遇到重复触发的问题？如何解决的？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1193&quot;&gt;Day361:Vue 切换路由时，需要保存草稿的功能，怎么实现？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1192&quot;&gt;Day360:Vue2.x 为什么要求组件模板只能有一个根元素？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1191&quot;&gt;Day359:你知道 Vue 的模板语法用的是哪个 web 模板引擎的吗？说说你对这模板引擎的理解?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1190&quot;&gt;Day358:说一下你对 vue keep-alive 的理解？以及使用过程需要注意的地方？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1188&quot;&gt;Day357:说一下你觉得的 vue 开发规范有哪些？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1187&quot;&gt;Day356:说说 Context 有哪些属性？怎么使用 Context 开发组件？除了实例的属性可以获取 Context 外哪些地方还能直接获取 Context ？为什么 React 并不推荐我们优先考虑使用 Context？&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏠 前端面试 Family&lt;/h2&gt; 
&lt;p&gt;如果你在工作中遇到问题、在面试中遇到疑惑、在前端路上遇到了阻碍，都可以加入我们前端星球 Family，我们会竭尽全力为大家答疑解惑，让我们共同努力，一同成长。&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/bot.gif&quot; width=&quot;500px&quot;&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;h2&gt;版权许可&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/copyright.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/&quot;&gt;知识共享署名-非商业性使用 4.0 国际许可协议&lt;/a&gt;进行许可，只要保持原作者署名和非商用，您可以自由地阅读、分享、修改。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebookexperimental/Recoil</title>
      <link>https://github.com/facebookexperimental/Recoil</link>
      <description>&lt;p&gt;Recoil is an experimental state management library for React apps. It provides several capabilities that are difficult to achieve with React alone, while being compatible with the newest features of React.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Recoil · &lt;a href=&quot;https://www.npmjs.com/package/recoil&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/recoil&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebookexperimental/Recoil/actions&quot;&gt;&lt;img src=&quot;https://github.com/facebookexperimental/Recoil/workflows/Node.js%20CI/badge.svg?sanitize=true&quot; alt=&quot;Node.js CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebookexperimental/Recoil/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/recoiljs&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/recoiljs?label=Follow%20Recoil&amp;amp;style=social&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Recoil is an experimental set of utilities for state management with React.&lt;/p&gt; 
&lt;p&gt;Please see the website: &lt;a href=&quot;https://recoiljs.org&quot;&gt;https://recoiljs.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The Recoil package lives in &lt;a href=&quot;https://www.npmjs.com/get-npm&quot;&gt;npm&lt;/a&gt;. To install the latest stable version, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you&#39;re using &lt;a href=&quot;https://classic.yarnpkg.com/en/docs/install/&quot;&gt;yarn&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn add recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you&#39;re using &lt;a href=&quot;https://cloud.google.com/community/tutorials/install-bower-dependencies-on-google-app-engine&quot;&gt;bower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;bower install --save recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Development of Recoil happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving Recoil.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Recoil is &lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>amark/gun</title>
      <link>https://github.com/amark/gun</link>
      <description>&lt;p&gt;An open source cybersecurity protocol for syncing decentralized graph data.&lt;/p&gt;&lt;hr&gt;&lt;p id=&quot;readme&quot;&gt;&lt;a href=&quot;https://gun.eco/&quot;&gt;&lt;img width=&quot;40%&quot; src=&quot;https://cldup.com/TEy9yGh45l.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;img width=&quot;50%&quot; align=&quot;right&quot; vspace=&quot;25&quot; src=&quot;https://gun.eco/see/demo.gif&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jsdelivr.com/package/npm/gun&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/gun/badge?style=rounded&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/amark/gun/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Famark%2Fgun?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Famark%2Fgun.svg?size=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://chat.gun.eco&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/amark/gun.js.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GUN&lt;/strong&gt; is an &lt;a href=&quot;https://gun.eco/docs/Ecosystem&quot;&gt;ecosystem&lt;/a&gt; of &lt;strong&gt;tools&lt;/strong&gt; that let you build &lt;a href=&quot;https://www.nbcnews.com/tech/tech-news/these-technologists-think-internet-broken-so-they-re-building-another-n1030136&quot;&gt;community run&lt;/a&gt; and &lt;a href=&quot;https://gun.eco/docs/Cartoon-Cryptography&quot;&gt;encrypted applications&lt;/a&gt; - like an Open Source Firebase or a Decentralized Dropbox.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://news.ycombinator.com/item?id=17685682&quot;&gt;Internet Archive&lt;/a&gt;, &lt;a href=&quot;https://www.coindesk.com/hacker-noon-is-storing-content-on-a-blockchain-after-ditching-medium&quot;&gt;HackerNoon&lt;/a&gt;, and &lt;a href=&quot;https://github.com/amark/gun/wiki/awesome-gun&quot;&gt;100s of other apps&lt;/a&gt; run GUN in-production. GUN is also part of &lt;a href=&quot;https://blueskycommunity.net/&quot;&gt;Twitter&#39;s Bluesky&lt;/a&gt; initiative!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Multiplayer by default with realtime p2p state synchronization!&lt;/li&gt; 
 &lt;li&gt;Graph data let&#39;s you use key/value, tables, documents, videos, &amp;amp; more!&lt;/li&gt; 
 &lt;li&gt;Local-first, offline, and decentralized with end-to-end encryption.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Decentralized alternatives to &lt;a href=&quot;https://www.zdnet.com/article/era-hatches-meething-an-open-source-browser-based-video-conferencing-system/&quot;&gt;Zoom&lt;/a&gt;, &lt;a href=&quot;https://notabug.io/t/whatever/comments/36588a16b9008da4e3f15663c2225e949eca4a15/gpu-bot-test&quot;&gt;Reddit&lt;/a&gt;, &lt;a href=&quot;https://iris.to/&quot;&gt;Instagram&lt;/a&gt;, &lt;a href=&quot;https://iris.to/&quot;&gt;Slack&lt;/a&gt;, &lt;a href=&quot;https://d.tube/&quot;&gt;YouTube&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/marknadal/status/1422717427427647489&quot;&gt;Stripe&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=17685682&quot;&gt;Wikipedia&lt;/a&gt;, Facebook &lt;a href=&quot;https://twitter.com/marknadal/status/1424476179189305347&quot;&gt;Horizon&lt;/a&gt; and more have already pushed terabytes of daily P2P traffic on GUN. We are a &lt;a href=&quot;http://chat.gun.eco/&quot;&gt;friendly community&lt;/a&gt; creating a &lt;a href=&quot;https://youtu.be/1HJdrBk3BlE&quot;&gt;free fun future for freedom&lt;/a&gt;:&lt;/p&gt; 
&lt;a href=&quot;https://youtu.be/s_m16-w6bBI&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/3dvr.gif&quot; title=&quot;3D VR&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/cstefanache/cstefanache.github.io/raw/06697003449e4fc531fd32ee068bab532976f47b/_posts/2016-08-02-gun-db-artificial-knowledge-sharing.md&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/aiml.gif&quot; title=&quot;AI/ML&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;http://gps.gunDB.io/&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/gps.gif&quot; title=&quot;GPS&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/lmangani/gun-scape#gun-scape&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/dataviz.gif&quot; title=&quot;Data Viz&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/amark/gun/wiki/Auth&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/p2p.gif&quot; title=&quot;P2P&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Stefdv/gun-ui-lcd#okay-what-about-gundb-&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/iot.gif&quot; title=&quot;IoT&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;http://chat.gun.eco&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/vr-world.gif&quot; title=&quot;VR World&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://youtu.be/1ASrmQ-CwX4&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/ar.gif&quot; title=&quot;AR&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://meething.space/&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/video-conf.gif&quot; title=&quot;Video Confernece&quot;&gt;&lt;/a&gt;
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;    
  &lt;/tr&gt; 
  &lt;tr&gt;    
  &lt;/tr&gt; 
  &lt;tr&gt;    
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;GUN is &lt;em&gt;super easy&lt;/em&gt; to get started with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Try the &lt;a href=&quot;https://gun.eco/docs/Todo-Dapp&quot;&gt;interactive tutorial&lt;/a&gt; in the browser (&lt;strong&gt;5min&lt;/strong&gt; ~ average developer).&lt;/li&gt; 
 &lt;li&gt;Or &lt;code&gt;npm install gun&lt;/code&gt; and run the examples with &lt;code&gt;cd node_modules/gun &amp;amp;&amp;amp; npm start&lt;/code&gt; (&lt;strong&gt;5min&lt;/strong&gt; ~ average developer).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you don&#39;t have &lt;a href=&quot;http://nodejs.org/&quot;&gt;node&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;, read &lt;a href=&quot;https://github.com/amark/gun/raw/master/examples/install.sh&quot;&gt;this&lt;/a&gt; first. If the &lt;code&gt;npm&lt;/code&gt; command line didn&#39;t work, you may need to &lt;code&gt;mkdir node_modules&lt;/code&gt; first or use &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;An online demo of the examples are available here: &lt;a href=&quot;http://gunjs.herokuapp.com/&quot;&gt;http://gunjs.herokuapp.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Or write a quick app: (&lt;a href=&quot;https://jsbin.com/kadobamevo/edit?js,console&quot;&gt;try now in a playground&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/gun/gun.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
// import GUN from &#39;gun&#39;; // in ESM
// GUN = require(&#39;gun&#39;); // in NodeJS
// GUN = require(&#39;gun/gun&#39;); // in React
gun = GUN();

gun.get(&#39;mark&#39;).put({
  name: &quot;Mark&quot;,
  email: &quot;mark@gun.eco&quot;,
});

gun.get(&#39;mark&#39;).on((data, key) =&amp;gt; {
  console.log(&quot;realtime updates:&quot;, data);
});

setInterval(() =&amp;gt; { gun.get(&#39;mark&#39;).get(&#39;live&#39;).put(Math.random()) }, 9);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or try something &lt;strong&gt;mind blowing&lt;/strong&gt;, like saving circular references to a table of documents! (&lt;a href=&quot;http://jsbin.com/wefozepume/edit?js,console&quot;&gt;play&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;cat = {name: &quot;Fluffy&quot;, species: &quot;kitty&quot;};
mark = {boss: cat};
cat.slave = mark;

// partial updates merge with existing data!
gun.get(&#39;mark&#39;).put(mark);

// access the data as if it is a document.
gun.get(&#39;mark&#39;).get(&#39;boss&#39;).get(&#39;name&#39;).once(function(data, key){
  // `val` grabs the data once, no subscriptions.
  console.log(&quot;Mark&#39;s boss is&quot;, data);
});

// traverse a graph of circular references!
gun.get(&#39;mark&#39;).get(&#39;boss&#39;).get(&#39;slave&#39;).once(function(data, key){
  console.log(&quot;Mark is the cat&#39;s slave!&quot;, data);
});

// add both of them to a table!
gun.get(&#39;list&#39;).set(gun.get(&#39;mark&#39;).get(&#39;boss&#39;));
gun.get(&#39;list&#39;).set(gun.get(&#39;mark&#39;));

// grab each item once from the table, continuously:
gun.get(&#39;list&#39;).map().once(function(data, key){
  console.log(&quot;Item:&quot;, data);
});

// live update the table!
gun.get(&#39;list&#39;).set({type: &quot;cucumber&quot;, goal: &quot;jumping cat&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want to keep building more? &lt;strong&gt;Jump to &lt;a href=&quot;https://raw.githubusercontent.com/amark/gun/master/#documentation&quot;&gt;THE DOCUMENTATION&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;About&lt;/h1&gt; 
&lt;p&gt;First &amp;amp; foremost, GUN is &lt;strong&gt;a community of the nicest and most helpful people&lt;/strong&gt; out there. So &lt;a href=&quot;http://chat.gun.eco&quot;&gt;I want to invite you&lt;/a&gt; to come tell us about what &lt;strong&gt;you&lt;/strong&gt; are working on &amp;amp; wanting to build (new or old school alike! Just be nice as well.) and ask us your questions directly. :)&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=oTQXzhm8w_8&quot;&gt;&lt;img width=&quot;250&quot; src=&quot;https://img.youtube.com/vi/oTQXzhm8w_8/0.jpg&quot;&gt;&lt;br&gt;Watch the 100 second intro!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The GUN ecosystem stack is a collection of independent and modular tools covering everything from &lt;a href=&quot;https://crdt.tech/&quot;&gt;CRDT&lt;/a&gt; &lt;a href=&quot;https://gun.eco/distributed/matters.html&quot;&gt;conflict resolution&lt;/a&gt;, &lt;a href=&quot;https://gun.eco/docs/Cartoon-Cryptography&quot;&gt;cryptographic security&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://gun.eco/docs/SEA&quot;&gt;encryption&lt;/a&gt;, &lt;a href=&quot;https://gun.eco/docs/RAD&quot;&gt;radix storage serialization&lt;/a&gt;, &lt;a href=&quot;https://gun.eco/docs/DAM&quot;&gt;mesh networking&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://gun.eco/docs/Routing&quot;&gt;routing algorithms&lt;/a&gt;, to distributed systems &lt;a href=&quot;https://github.com/gundb/panic-server&quot;&gt;correctness &amp;amp; load testing&lt;/a&gt;, CPU scheduled &lt;a href=&quot;https://github.com/amark/gun/raw/master/lib/yson.js&quot;&gt;JSON parser&lt;/a&gt; to prevent UI lag, and more!&lt;/p&gt; 
&lt;div&gt;
 &lt;img width=&quot;48%&quot; src=&quot;https://gun.eco/see/stack.png&quot;&gt; 
 &lt;img width=&quot;48%&quot; align=&quot;right&quot; src=&quot;https://gun.eco/see/layers.png&quot;&gt;
&lt;/div&gt; 
&lt;p&gt;On that note, let&#39;s get some official shout outs covered first:&lt;/p&gt; 
&lt;h3&gt;Support&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Thanks to: &lt;/p&gt;
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td vlign=&quot;center&quot;&gt;&lt;a href=&quot;https://mozilla.org/builders&quot;&gt;&lt;img height=&quot;100&quot; src=&quot;https://user-images.githubusercontent.com/1423657/81992335-85346480-9643-11ea-8754-8275e98e06bc.png&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td vlign=&quot;center&quot;&gt;&lt;a href=&quot;http://unstoppabledomains.com/&quot;&gt;&lt;img src=&quot;https://gun.eco/img/unstoppable.png&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td vlign=&quot;center&quot;&gt;&lt;a href=&quot;https://www.ajar.org/&quot;&gt;&lt;img src=&quot;https://www.ajar.org/logo.png&quot; width=&quot;200&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/robertheessels&quot;&gt;Robert Heessels&lt;/a&gt;, &lt;a href=&quot;http://qxip.net/&quot;&gt;Lorenzo Mangani&lt;/a&gt;, &lt;a href=&quot;https://nlnet.nl/&quot;&gt;NLnet Foundation&lt;/a&gt;, &lt;a href=&quot;http://github.com/samliu&quot;&gt;Sam Liu&lt;/a&gt;, &lt;a href=&quot;http://github.com/ddombrow&quot;&gt;Daniel Dombrowsky&lt;/a&gt;, &lt;a href=&quot;http://github.com/vincentwoo&quot;&gt;Vincent Woo&lt;/a&gt;, &lt;a href=&quot;http://github.com/coolaj86&quot;&gt;AJ ONeal&lt;/a&gt;, &lt;a href=&quot;http://github.com/ottman&quot;&gt;Bill Ottman&lt;/a&gt;, &lt;a href=&quot;http://github.com/mikewlange&quot;&gt;Mike Lange&lt;/a&gt;, &lt;a href=&quot;http://github.com/ctrlplusb&quot;&gt;Sean Matheson&lt;/a&gt;, &lt;a href=&quot;http://github.com/alanmimms&quot;&gt;Alan Mimms&lt;/a&gt;, &lt;a href=&quot;https://github.com/dfreire&quot;&gt;Dário Freire&lt;/a&gt;, &lt;a href=&quot;http://github.com/velua&quot;&gt;John Williamson&lt;/a&gt;, &lt;a href=&quot;http://github.com/finwo&quot;&gt;Robin Bron&lt;/a&gt;, &lt;a href=&quot;http://github.com/ElieMakhoul&quot;&gt;Elie Makhoul&lt;/a&gt;, &lt;a href=&quot;http://github.com/mikestaub&quot;&gt;Mike Staub&lt;/a&gt;, &lt;a href=&quot;http://github.com/bmatusiak&quot;&gt;Bradley Matusiak&lt;/a&gt;, &lt;a href=&quot;https://github.com/sjuxax&quot;&gt;Jeff Cook&lt;/a&gt;, &lt;a href=&quot;https://github.com/nmauersberg&quot;&gt;Nico&lt;/a&gt;, &lt;a href=&quot;https://github.com/ajartille&quot;&gt;Aaron Artille&lt;/a&gt;, &lt;a href=&quot;https://github.com/timjrobinson&quot;&gt;Tim Robinson&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join others in sponsoring code: &lt;a href=&quot;https://www.patreon.com/gunDB&quot;&gt;https://www.patreon.com/gunDB&lt;/a&gt; !&lt;/li&gt; 
 &lt;li&gt;Ask questions: &lt;a href=&quot;http://stackoverflow.com/questions/tagged/gun&quot;&gt;http://stackoverflow.com/questions/tagged/gun&lt;/a&gt; ?&lt;/li&gt; 
 &lt;li&gt;Found a bug? Report at: &lt;a href=&quot;https://github.com/amark/gun/issues&quot;&gt;https://github.com/amark/gun/issues&lt;/a&gt; ;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need help&lt;/strong&gt;? Chat with us: &lt;a href=&quot;http://chat.gun.eco&quot;&gt;http://chat.gun.eco&lt;/a&gt; .&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;History&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://gun.eco&quot;&gt;GUN&lt;/a&gt; was created by &lt;a href=&quot;https://twitter.com/marknadal&quot;&gt;Mark Nadal&lt;/a&gt; in 2014 after he had spent 4 years trying to get his collaborative web app to scale up with traditional databases.&lt;/p&gt; 
&lt;p&gt;&lt;img width=&quot;250px&quot; src=&quot;https://gun.eco/see/problem.png&quot; align=&quot;left&quot; title=&quot;pain point&quot; style=&quot;margin: 0 1em 1em 0&quot;&gt; After he realized &lt;a href=&quot;https://gun.eco/distributed/matters.html&quot;&gt;Master-Slave database architecture causes one big bottleneck&lt;/a&gt;, he (as a complete newbie outsider) naively decided &lt;strong&gt;to question the status quo&lt;/strong&gt; and shake things up with controversial, heretical, and contrarian experiments:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The NoDB&lt;/strong&gt; - no master, no servers, no &quot;single source of truth&quot;, not built with a real programming language or real hardware, no DevOps, no locking, not &lt;em&gt;just&lt;/em&gt; SQL or NoSQL but both (&lt;strong&gt;all&lt;/strong&gt; - graphs, documents, tables, key/value).&lt;/p&gt; 
&lt;p&gt;The goal was to build a P2P database that could survive living inside &lt;strong&gt;any&lt;/strong&gt; browser, and could correctly sync data between &lt;strong&gt;any&lt;/strong&gt; device after assuming &lt;strong&gt;any&lt;/strong&gt; offline-first activity.&lt;/p&gt; 
&lt;img src=&quot;https://gun.eco/see/compare.png&quot; title=&quot;comparison table&quot;&gt; 
&lt;p&gt;Technically, &lt;strong&gt;GUN is a graph synchronization protocol&lt;/strong&gt; with a &lt;em&gt;lightweight embedded engine&lt;/em&gt;, capable of doing &lt;em&gt;&lt;a href=&quot;https://gun.eco/docs/Performance&quot;&gt;20M+ API ops/sec&lt;/a&gt;&lt;/em&gt; in &lt;strong&gt;just ~9KB gzipped size&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/API&quot;&gt;API reference&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Todo-Dapp&quot;&gt;Tutorials&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/amark/gun/tree/master/examples&quot;&gt;Examples&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/brysgo/graphql-gun&quot;&gt;GraphQL&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/PenguinMan98/electrontest&quot;&gt;Electron&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/React-Native&quot;&gt;React &amp;amp; Native&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/sjones6/vue-gun&quot;&gt;Vue&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Svelte&quot;&gt;Svelte&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/Stefdv/gun-ui-lcd#syncing&quot;&gt;Webcomponents&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/CAP-Theorem&quot;&gt;CAP Theorem Tradeoffs&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/distributed/matters.html&quot;&gt;How Data Sync Works&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Porting-GUN&quot;&gt;How GUN is Built&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Auth&quot;&gt;Crypto Auth&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/amark/gun/wiki/Awesome-GUN&quot;&gt;Modules&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;This would not be possible without &lt;strong&gt;community contributors&lt;/strong&gt;, big shout out to:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/ajmeyghani&quot;&gt;ajmeyghani&lt;/a&gt; (&lt;a href=&quot;https://medium.com/@ajmeyghani/gundb-a-graph-database-in-javascript-3860a08d873c&quot;&gt;Learn GUN Basics with Diagrams&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/anywhichway&quot;&gt;anywhichway&lt;/a&gt; (&lt;a href=&quot;https://github.com/anywhichway/gun-block&quot;&gt;Block Storage&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/beebase&quot;&gt;beebase&lt;/a&gt; (&lt;a href=&quot;https://github.com/beebase/gun-vuex-quasar&quot;&gt;Quasar&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/BrockAtkinson&quot;&gt;BrockAtkinson&lt;/a&gt; (&lt;a href=&quot;https://github.com/BrockAtkinson/brunch-gun&quot;&gt;brunch config&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/brysgo&quot;&gt;Brysgo&lt;/a&gt; (&lt;a href=&quot;https://github.com/brysgo/graphql-gun&quot;&gt;GraphQL&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/d3x0r&quot;&gt;d3x0r&lt;/a&gt; (&lt;a href=&quot;https://github.com/d3x0r/gun-db&quot;&gt;SQLite&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/forrestjt&quot;&gt;forrestjt&lt;/a&gt; (&lt;a href=&quot;https://github.com/amark/gun/raw/master/lib/file.js&quot;&gt;file.js&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/hillct&quot;&gt;hillct&lt;/a&gt; (Docker)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/josepedrodias&quot;&gt;JosePedroDias&lt;/a&gt; (&lt;a href=&quot;http://acor.sl.pt:9966&quot;&gt;graph visualizer&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/JuniperChicago&quot;&gt;JuniperChicago&lt;/a&gt; (&lt;a href=&quot;https://github.com/JuniperChicago/cycle-gun&quot;&gt;cycle.js bindings&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/jveres&quot;&gt;jveres&lt;/a&gt; (&lt;a href=&quot;https://github.com/jveres/todomvc&quot;&gt;todoMVC&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/kristianmandrup&quot;&gt;kristianmandrup&lt;/a&gt; (&lt;a href=&quot;https://github.com/kristianmandrup/gun-edge&quot;&gt;edge&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/Lightnet&quot;&gt;Lightnet&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://glitch.com/edit/#!/jsvuegunui?path=README.md:1:0&quot;&gt;Awesome Vue User Examples&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://gdb-auth-vue-node.glitch.me/&quot;&gt;User Kitchen Sink Playground&lt;/a&gt;); &lt;strong&gt;&lt;a href=&quot;https://github.com/lmangani&quot;&gt;lmangani&lt;/a&gt; (&lt;a href=&quot;https://github.com/lmangani/gun-scape&quot;&gt;Cytoscape Visualizer&lt;/a&gt;, &lt;a href=&quot;https://github.com/lmangani/gun-cassandra&quot;&gt;Cassandra&lt;/a&gt;, &lt;a href=&quot;https://github.com/lmangani/fastify-gundb&quot;&gt;Fastify&lt;/a&gt;, &lt;a href=&quot;https://github.com/lmangani/polyGun-letsencrypt&quot;&gt;LetsEncrypt&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/mhelander&quot;&gt;mhelander&lt;/a&gt; (&lt;a href=&quot;https://github.com/amark/gun/raw/master/sea.js&quot;&gt;SEA&lt;/a&gt;)&lt;/strong&gt;; &lt;a href=&quot;https://github.com/omarzion&quot;&gt;omarzion&lt;/a&gt; (&lt;a href=&quot;https://github.com/omarzion/stickies&quot;&gt;Sticky Note App&lt;/a&gt;); &lt;a href=&quot;https://github.com/PsychoLlama&quot;&gt;PsychoLlama&lt;/a&gt; (&lt;a href=&quot;https://github.com/PsychoLlama/gun-level&quot;&gt;LevelDB&lt;/a&gt;); &lt;strong&gt;&lt;a href=&quot;https://github.com/RangerMauve&quot;&gt;RangerMauve&lt;/a&gt; (&lt;a href=&quot;https://github.com/gundb/gun-schema&quot;&gt;schema&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/swifty&quot;&gt;robertheessels&lt;/a&gt; (&lt;a href=&quot;https://github.com/swifty/gun-p2p-auth&quot;&gt;gun-p2p-auth&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/rogowski&quot;&gt;rogowski&lt;/a&gt; (AXE)&lt;/strong&gt;; &lt;a href=&quot;https://github.com/sbeleidy&quot;&gt;sbeleidy&lt;/a&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/sbiaudet&quot;&gt;sbiaudet&lt;/a&gt; (&lt;a href=&quot;https://github.com/sbiaudet/cs-gun&quot;&gt;C# Port&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/ctrlplusb&quot;&gt;Sean Matheson&lt;/a&gt; (&lt;a href=&quot;https://github.com/ctrlplusb/gun-most&quot;&gt;Observable/RxJS/Most.js bindings&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/Shadyzpop&quot;&gt;Shadyzpop&lt;/a&gt; (&lt;a href=&quot;https://github.com/amark/gun/tree/master/examples/react-native&quot;&gt;React Native example&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/sjones6&quot;&gt;sjones6&lt;/a&gt; (&lt;a href=&quot;https://github.com/sjones6/gun-flint&quot;&gt;Flint&lt;/a&gt;)&lt;/strong&gt;; RIP &lt;strong&gt;&lt;a href=&quot;https://github.com/stefdv&quot;&gt;Stefdv&lt;/a&gt; (Polymer/web components)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/zrrrzzt&quot;&gt;zrrrzzt&lt;/a&gt; (&lt;a href=&quot;https://gist.github.com/zrrrzzt/6f88dc3cedee4ee18588236756d2cfce&quot;&gt;JWT Auth&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/xmonader&quot;&gt;xmonader&lt;/a&gt; (&lt;a href=&quot;https://github.com/xmonader/pygundb&quot;&gt;Python Port&lt;/a&gt;)&lt;/strong&gt;;&lt;/p&gt; 
&lt;p&gt;I am missing many others, apologies, will be adding them soon! This list is infintiely old &amp;amp; way out of date, if you want to be listed in it please make a PR! :)&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;You will need to &lt;code&gt;npm install -g mocha&lt;/code&gt; first. Then in the gun root folder run &lt;code&gt;npm test&lt;/code&gt;. Tests will trigger persistent writes to the DB, so subsequent runs of the test will fail. You must clear the DB before running the tests again. This can be done by running &lt;code&gt;rm -rf *data*&lt;/code&gt; command in the project directory.&lt;/p&gt; 
&lt;h2&gt;Shims&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;These are only needed for NodeJS &amp;amp; React Native, they shim the native Browser WebCrypto API.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use &lt;a href=&quot;https://gun.eco/docs/SEA&quot;&gt;SEA&lt;/a&gt; for &lt;code&gt;User&lt;/code&gt; auth and security, you will need to install:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install @peculiar/webcrypto --save&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://gun.eco/docs/React-Native&quot;&gt;our React Native docs&lt;/a&gt; for installation instructions!&lt;/p&gt; 
&lt;p&gt;Then you can require &lt;a href=&quot;https://gun.eco/docs/SEA&quot;&gt;SEA&lt;/a&gt; without an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;GUN = require(&#39;gun/gun&#39;);
SEA = require(&#39;gun/sea&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploy&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The default examples that get auto-deployed on &lt;code&gt;npm start&lt;/code&gt; CDN-ify all GUN files, modules, &amp;amp; storage.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Moving forward, AXE will start to automatically cluster your peer into a shared DHT. You may want to disable this to run an isolated network.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When deploying a web application using GUN on a cloud provider, you may have to set &lt;code&gt;CI=false&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt;. This prevents GUN-specific warnings from being treated as errors when deploying your app. You may also resolve this by modifying your webpack config to not try to build the GUN dependencies.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To quickly spin up a GUN relay peer for your development team, utilize &lt;a href=&quot;http://heroku.com&quot;&gt;Heroku&lt;/a&gt;, &lt;a href=&quot;http://docker.com&quot;&gt;Docker&lt;/a&gt;, or any others listed below. Or some variant thereof &lt;a href=&quot;http://dokku.viewdocs.io/dokku/&quot;&gt;Dokku&lt;/a&gt;, K8s, etc. ! Or use all of them so your relays are decentralized too!&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;SSH&lt;/code&gt; into the home directory of a clean OS install with &lt;code&gt;sudo&lt;/code&gt; ability. Set any environment variables you need (see below), then do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -o- https://raw.githubusercontent.com/amark/gun/master/examples/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Read &lt;a href=&quot;https://github.com/amark/gun/raw/master/examples/install.sh&quot;&gt;install.sh&lt;/a&gt; first! If &lt;code&gt;curl&lt;/code&gt; is not found, &lt;em&gt;copy&amp;amp;paste&lt;/em&gt; the contents of install.sh into your ssh.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can now safely &lt;code&gt;CTRL+A+D&lt;/code&gt; to escape without stopping the peer. To stop everything &lt;code&gt;killall screen&lt;/code&gt; or &lt;code&gt;killall node&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Environment variables may need to be set like &lt;code&gt;export HTTPS_CERT=~/cert.pem HTTPS_KEY=~/key.pem PORT=443&lt;/code&gt;. You can also look at a sample &lt;a href=&quot;https://gun.eco/docs/nginx&quot;&gt;nginx&lt;/a&gt; config. For production deployments, you probably will want to use something like &lt;code&gt;pm2&lt;/code&gt; or better to keep the peer alive after machine reboots.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/amark/gun&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Heroku deletes your data every 15 minutes, one way to fix this is by adding &lt;a href=&quot;https://gun.eco/docs/Using-Amazon-S3-for-Storage&quot;&gt;cheap storage&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/amark/gun.git
cd gun
heroku create
git push -f heroku HEAD:master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit the URL in the output of the &#39;heroku create&#39; step, in a browser. Make sure to set any environment config vars in the settings tab.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.zeet.co/&quot;&gt;Zeet.co&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://deploy.zeet.co/?url=https://github.com/amark/gun&quot;&gt;&lt;img src=&quot;https://deploy.zeet.co/gun.svg?sanitize=true&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://zeit.co/now/&quot;&gt;Now.sh&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g now
now --npm amark/gun
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit the URL in the output of the &#39;now --npm&#39; step, in your browser.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://unubo.app/&quot;&gt;Unubo&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Fork this GUN repo (Unubo only deploys from your own GitHub repo&#39;s).&lt;br&gt; Add a Node.js app, select your GUN fork, set &lt;code&gt;npm start&lt;/code&gt; start as the command and deploy.&lt;/p&gt; 
&lt;p&gt;From the experience of &lt;a href=&quot;https://github.com/genderev&quot;&gt;genderev&lt;/a&gt;, this only works if you set your country to the United States.&lt;/p&gt; 
&lt;p&gt;Visit the deployed app by following the &#39;view app&#39; button, in your browser.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Warning: Docker image is community contributed and may be old with missing security updates, please check version numbers to compare.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/gundb/gun/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/automated/gundb/gun.svg?sanitize=true&quot; alt=&quot;Docker Automated buil&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://microbadger.com/images/gundb/gun&quot; title=&quot;Get your own image badge on microbadger.com&quot;&gt;&lt;img src=&quot;https://images.microbadger.com/badges/image/gundb/gun.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/gundb/gun/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/gundb/gun.svg?sanitize=true&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/gundb/gun/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/stars/gundb/gun.svg?sanitize=true&quot; alt=&quot;Docker Stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Pull from the &lt;a href=&quot;https://hub.docker.com/r/gundb/gun/&quot;&gt;Docker Hub&lt;/a&gt; &lt;a href=&quot;https://microbadger.com/images/gundb/gun&quot;&gt;&lt;img src=&quot;https://images.microbadger.com/badges/commit/gundb/gun.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;. Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -p 8765:8765 gundb/gun
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or build the &lt;a href=&quot;https://docs.docker.com/engine/installation/&quot;&gt;Docker&lt;/a&gt; image locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/amark/gun.git
cd gun
docker build -t myrepo/gundb:v1 .
docker run -p 8765:8765 myrepo/gundb:v1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, if you prefer your Docker image with metadata labels (Linux/Mac only):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run docker
docker run -p 8765:8765 username/gun:git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href=&quot;http://localhost:8765&quot;&gt;http://localhost:8765&lt;/a&gt; in your browser.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Designed with ♥ by Mark Nadal, the GUN team, and many amazing contributors.&lt;/p&gt; 
&lt;p&gt;Openly licensed under &lt;a href=&quot;https://github.com/amark/gun/raw/master/LICENSE.md&quot;&gt;Zlib / MIT / Apache 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Famark%2Fgun?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Famark%2Fgun.svg?size=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCQAtpf-zi9Pp4__2nToOM8g&quot;&gt;YouTube&lt;/a&gt; . &lt;a href=&quot;https://twitter.com/marknadal&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vuejs/vue</title>
      <link>https://github.com/vuejs/vue</link>
      <description>&lt;p&gt;🖖 Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://vuejs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img width=&quot;100&quot; src=&quot;https://vuejs.org/images/logo.png&quot; alt=&quot;Vue logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://circleci.com/gh/vuejs/vue/tree/dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/github/vuejs/vue?branch=dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmcharts.com/compare/vue?minimal=true&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/vue.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vue&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue.svg?sanitize=true&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vue&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/vue.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&quot; alt=&quot;Chat&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://app.saucelabs.com/builds/50f8372d79f743a3b25fb6ca4851ca4c&quot;&gt;&lt;img src=&quot;https://app.saucelabs.com/buildstatus/vuejs&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2 align=&quot;center&quot;&gt;Supporting Vue.js&lt;/h2&gt; 
&lt;p&gt;Vue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href=&quot;https://github.com/vuejs/vue/raw/dev/BACKERS.md&quot;&gt;backers&lt;/a&gt;. If you&#39;d like to join them, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/evanyou&quot;&gt;Become a backer or sponsor on Patreon&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/vuejs&quot;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/support-vuejs/#One-time-Donations&quot;&gt;One-time donation via PayPal or crypto-currencies&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What&#39;s the difference between Patreon and OpenCollective?&lt;/h4&gt; 
&lt;p&gt;Funds donated via Patreon go directly to support Evan You&#39;s full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.&lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Special Sponsors&lt;/h3&gt; 
&lt;!--special start--&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://autocode.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;260px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/autocode.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!--special end--&gt; 
&lt;h3 align=&quot;center&quot;&gt;Platinum Sponsors&lt;/h3&gt; 
&lt;!--platinum start--&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://vueschool.io/?utm_source=Vuejs.org&amp;amp;utm_medium=Banner&amp;amp;utm_campaign=Sponsored%20Banner&amp;amp;utm_content=V1&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vueschool.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://vehikl.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vehikl.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://retool.com/?utm_source=sponsor&amp;amp;utm_campaign=vue&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/retool.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://passionatepeople.io/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/passionate_people.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.storyblok.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/storyblok.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://ionicframework.com/vue?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=vuesponsorship&amp;amp;utm_content=vuedocs&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/ionic.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://nuxtjs.org/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/nuxt.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--platinum end--&gt; 
&lt;!--special-china start--&gt; 
&lt;h3 align=&quot;center&quot;&gt;Platinum Sponsors (China)&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.dcloud.io/?hmsr=vuejsorg&amp;amp;hmpl=&amp;amp;hmcu=&amp;amp;hmkw=&amp;amp;hmci=&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;177px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/dcloud.gif&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://authing.cn/welcome?from=vuejs&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;177px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/cn.vuejs.org/master/themes/vue/source/images/authing.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--special-china end--&gt; 
&lt;h3 align=&quot;center&quot;&gt;Gold Sponsors&lt;/h3&gt; 
&lt;!--gold start--&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.vuemastery.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vuemastery.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://laravel.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/laravel.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://htmlburger.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/html_burger.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.frontenddeveloperlove.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/frontendlove.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://neds.com.au/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/neds.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://icons8.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/icons_8.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://tidelift.com/subscription/npm/vue&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/tidelift.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.firesticktricks.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/firestick_tricks.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://intygrate.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/intygrate.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://en.shopware.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/shopware_ag.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.vpnranks.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vpnranks.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.bacancytechnology.com/hire-vuejs-developer&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/bacancy_technology.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.bestvpn.co/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/bestvpn_co.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.y8.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/y8.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://js.devexpress.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/devexpress.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://fastcoding.jp/javascript/ &quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/fastcoding_inc.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://usave.co.uk/utilities/broadband&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/usave.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://storekit.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/storekit.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.foo.software&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/foo.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://flatlogic.com/templates&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/flatlogic_templates.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.layer0.co&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/layer0.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://vpn-review.com/netflix-vpn&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vpn_review.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://cosmos.network/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/tendermint.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.okayhq.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/okay.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.vpsserver.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vpsserver_com.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://aussiecasinohex.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/aussiecasinohex.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://litslink.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/litslink.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://newicon.net&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/newicon.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://lowdefy.com?k=w432&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/lowdefy.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://quickbookstoolhub.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/quickbooks_tool_hub.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://linecorp.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/line_corporation.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://exmax.it/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/exmax.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://plaid.co.jp/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/plaid__inc_.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://troypoint.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/troypoint.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://webreinvent.com?utm_source=vuejs.org&amp;amp;utm_medium=logo&amp;amp;utm_campaign=patreon-sponsors&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/webreinvent_technologies_pvt_ltd.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--gold end--&gt; 
&lt;h3 align=&quot;center&quot;&gt;Sponsors via &lt;a href=&quot;https://opencollective.com/vuejs&quot;&gt;Open Collective&lt;/a&gt;&lt;/h3&gt; 
&lt;h4 align=&quot;center&quot;&gt;Platinum&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/vuejs/tiers/platinum-sponsors/0/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/platinum-sponsors/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/platinum-sponsors/1/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/platinum-sponsors/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4 align=&quot;center&quot;&gt;Gold&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/0/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/0/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/1/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/1/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/2/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/2/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/3/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/3/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/4/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/4/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/5/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/5/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/6/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/6/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/7/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/7/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/8/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/8/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/9/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/9/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/10/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/10/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Vue (pronounced &lt;code&gt;/vjuː/&lt;/code&gt;, like view) is a &lt;strong&gt;progressive framework&lt;/strong&gt; for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.&lt;/p&gt; 
&lt;h4&gt;Browser Compatibility&lt;/h4&gt; 
&lt;p&gt;Vue.js supports all browsers that are &lt;a href=&quot;https://kangax.github.io/compat-table/es5/&quot;&gt;ES5-compliant&lt;/a&gt; (IE8 and below are not supported).&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-router&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-router.svg?sanitize=true&quot; alt=&quot;vue-router-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Single-page application routing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vuex&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vuex.svg?sanitize=true&quot; alt=&quot;vuex-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Large-scale state management&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;vue-cli&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/@vue/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@vue/cli.svg?sanitize=true&quot; alt=&quot;vue-cli-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Project scaffolding&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;vue-loader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-loader&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-loader.svg?sanitize=true&quot; alt=&quot;vue-loader-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Single File Component (&lt;code&gt;*.vue&lt;/code&gt; file) loader for webpack&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer&quot;&gt;vue-server-renderer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-server-renderer&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-server-renderer.svg?sanitize=true&quot; alt=&quot;vue-server-renderer-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Server-side rendering support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;vue-class-component&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-class-component&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-class-component.svg?sanitize=true&quot; alt=&quot;vue-class-component-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;TypeScript decorator for a class-based API&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-rx&quot;&gt;vue-rx&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-rx&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-rx.svg?sanitize=true&quot; alt=&quot;vue-rx-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RxJS integration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/v/nhdogjmejiglipccpnnnanhbledajbpd.svg?sanitize=true&quot; alt=&quot;vue-devtools-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Browser DevTools extension&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To check out &lt;a href=&quot;https://vuejs.org/v2/examples/&quot;&gt;live examples&lt;/a&gt; and docs, visit &lt;a href=&quot;https://vuejs.org&quot;&gt;vuejs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For questions and support please use &lt;a href=&quot;https://forum.vuejs.org&quot;&gt;the official forum&lt;/a&gt; or &lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;community chat&lt;/a&gt;. The issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/raw/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines&quot;&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&quot;https://github.com/vuejs/vue/releases&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay In Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/vuejs&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/the-vue-point&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejobs.com/?ref=vuejs&quot;&gt;Job Board&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/raw/dev/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to &lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already contributed to Vue!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/contributors.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2013-present, Yuxi (Evan) You&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chartbrew/chartbrew</title>
      <link>https://github.com/chartbrew/chartbrew</link>
      <description>&lt;p&gt;Open-source web platform for creating charts out of different data sources (databases and APIs) 📈📊&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://chartbrew.com&quot;&gt; &lt;img src=&quot;https://docs.chartbrew.com/assets/logo_full_3.png&quot; alt=&quot;ChartBrew logo&quot; width=&quot;250&quot;&gt; &lt;/a&gt;  &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://circleci.com/gh/chartbrew/chartbrew&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/chartbrew/chartbrew.svg?style=svg&quot; alt=&quot;ChartBrew build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codacy.com/gh/chartbrew/chartbrew&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.codacy.com/project/badge/Grade/b245aa07f69c4250a2de9d24efc659e6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/KwGEbFk&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/656557151048957995?label=Discord&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt; &lt;a href=&quot;https://chartbrew.com&quot;&gt;Chartbrew&lt;/a&gt; is an open-source web application that can connect directly to databases and APIs and use the data to create beautiful charts. It features a chart builder, editable dashboards, embedable charts, query &amp;amp; requests editor, and team capabilities. &lt;/strong&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://chartbrew.com&quot;&gt; &lt;img src=&quot;https://cdn2.chartbrew.com/newsletter/chartbrew-open-dashboard.jpeg&quot; alt=&quot;ChartBrew dashboard&quot; width=&quot;600&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you are looking for Chartbrew as a service, &lt;a href=&quot;https://chartbrew.com&quot;&gt;it&#39;s available here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;📚 &lt;a href=&quot;https://docs.chartbrew.com&quot;&gt;&lt;strong&gt;Read the full docs here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🔧 &lt;a href=&quot;https://github.com/orgs/chartbrew/projects/1&quot;&gt;&lt;strong&gt;Issues ready to be tackled&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🚙 &lt;a href=&quot;https://trello.com/b/IQ7eiDqZ/chartbrew-roadmap&quot;&gt;&lt;strong&gt;Public roadmap over here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;💡 &lt;a href=&quot;https://github.com/chartbrew/chartbrew/discussions&quot;&gt;&lt;strong&gt;Have any ideas or discussion topics?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;💬 &lt;a href=&quot;https://discord.gg/KwGEbFk&quot;&gt;&lt;strong&gt;Join our Discord&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Data sources&lt;/h2&gt; 
&lt;p&gt;Currently, Chartbrew supports connections to these data sources.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MySQL&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;li&gt;MongoDB&lt;/li&gt; 
 &lt;li&gt;Firestore&lt;/li&gt; 
 &lt;li&gt;Google Analytics&lt;/li&gt; 
 &lt;li&gt;REST APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Chartbrew also features dashboard templates with charts already prepared:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple Analytics&lt;/li&gt; 
 &lt;li&gt;ChartMogul&lt;/li&gt; 
 &lt;li&gt;Mailgun&lt;/li&gt; 
 &lt;li&gt;Google Analytics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;...or you can create your &lt;strong&gt;custom templates&lt;/strong&gt; and replicate them across multiple dashboards.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;NodeJS v12 (should also work with v10) 
  &lt;ul&gt; 
   &lt;li&gt;For M1 Macs you might need the latest v14 or v15&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NPM&lt;/li&gt; 
 &lt;li&gt;MySQL (5+) or PostgreSQL (12.5+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Start&lt;/h2&gt; 
&lt;p&gt;It is recommended you head over to the more detailed documentation to find out how to set up Chartbrew&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.chartbrew.com/#getting-started&quot;&gt;📚 You can find it here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;If you already have a MySQL or PostgreSQL server running, create a database called &lt;code&gt;chartbrew&lt;/code&gt; and follow the prompts of the &lt;code&gt;create-chartbrew-app&lt;/code&gt; command below.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt; Windows command line is not supported at the moment. Use something like &lt;a href=&quot;http://www.cygwin.com/&quot;&gt;Cygwin&lt;/a&gt; on Windows.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-chartbrew-app chartbrew
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The CLI tool creates a &lt;code&gt;chartbrew/.env&lt;/code&gt; file which you can configure at any time if you want to change the database, API &amp;amp; client host, etc. The file contains comments explaining what each environmental variable is for. &lt;a href=&quot;https://docs.chartbrew.com/#set-up-environmental-variables&quot;&gt;Check out which need to be set here.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Run the project in Development&lt;/h3&gt; 
&lt;p&gt;Open two terminals, one for front-end and the other for back-end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# frontend
cd client/
npm run start

# backend
cd server/
npm run start-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Run with Docker&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.chartbrew.com/deployment/#run-the-application-with-docker&quot;&gt;Check the full guide in the docs.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;p&gt;Run the following commands and configure the variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker pull razvanilin/chartbrew
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;docker run -p 3210:3210 -p 3000:3000 \
  -e CB_SECRET=&amp;lt;enter_a_secure_string&amp;gt; \
  -e CB_API_HOST=0.0.0.0 \
  -e CB_API_PORT=3210 \
  -e CB_DB_HOST=host.docker.internal \
  -e CB_DB_NAME=chartbrew \
  -e CB_DB_USERNAME=root \
  -e CB_DB_PASSWORD=password \
  -e REACT_APP_CLIENT_HOST=http://localhost:3000 \
  -e REACT_APP_API_HOST=http://localhost:3210 \
  razvanilin/chartbrew
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Many thanks to &lt;a href=&quot;https://github.com/chartbrew/chartbrew/graphs/contributors&quot;&gt;everybody that contributed&lt;/a&gt; to this open-source project 🙏&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chartbrew/chartbrew/raw/master/CONTRIBUTING.md&quot;&gt;Start here if you want to become a contributor&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can’t reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
  var c = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
console.log(c); // Prints 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ಠ_ಠ
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt; &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It’s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;functions--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it’s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function’s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it’s time to extract it to its own module! Don’t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error’s call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--iife&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--in-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--note-on-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--arguments-shadow&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-rest&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-default-parameters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn’t mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--default-side-effects&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--defaults-last&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--constructor&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-spacing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn’t have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--mutate-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--reassign-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.13&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--spread-vs-apply&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.14&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s cleaner, you don’t need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-invocation-indentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--implicit-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--paren-wrap&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--one-arg-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--confusing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--implicit-arrow-linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--use-class&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--extends&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--chaining&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--tostring&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It’s okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--no-useless&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--no-duplicate-members&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--methods-use-this&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires using specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;modules--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let’s start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-wildcard&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-export-from-import&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-duplicate-imports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// … some other imports … //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-mutable-exports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--prefer-default-export&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--imports-first&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--multiline-imports-over-newlines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-webpack-loader-syntax&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--import-extensions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;iterators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don’t use iterators. Prefer JavaScript’s higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don’t use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don’t transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;properties--dot&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;properties--bracket&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es2016-properties--exponentiation-operator&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--one-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const-let-group&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--define-where-used&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-chain-assignment&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don’t chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--unary-increment-decrement&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-unused-vars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--about&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It’s important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn’t work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--anon-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--named-expresions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;hoisting--named-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--eqeqeq&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--if&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--shortcuts&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--moreinfo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--switch-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--nested-ternaries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--unneeded-ternary&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--no-mixed-operators&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer’s intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--cuddled-elses&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you’re using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block’s closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--no-else-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;control-statements&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;control-statement--value-selection&quot;&gt;&lt;/a&gt;&lt;a name=&quot;control-statements--value-selection&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comments--multiline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--singleline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it’s on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--actionitems&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you’re pointing out a problem that needs to be revisited, or if you’re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--fixme&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn’t use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--todo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--spaces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
∙∙∙∙let name;
}

// bad
function bar() {
∙let name;
}

// good
function baz() {
∙∙let name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--before-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--around-keywords&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--infix-ops&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--newline-at-end&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/raw/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
↵
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--chains&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
const svg = leds.enter().append(&#39;svg:svg&#39;);
svg.classed(&#39;led&#39;, true).attr(&#39;width&#39;, (radius + margin) * 2);
const g = svg.append(&#39;svg:g&#39;);
g.attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`).call(tron.led);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--after-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--padded-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-blanks&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-brackets&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--max-len&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--block-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--comma-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--computed-property-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--func-call-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--key-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-trailing-spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-empty-lines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;commas--leading-trailing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;commas--dangling&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;semicolons--required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;20.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That’s impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That’s impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--explicit&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--strings&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn’t guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--numbers&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--comment-deviations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you’re doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--bitwise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--booleans&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;naming--descriptive&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--leading-underscore&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean “private”, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won’t count as breaking, or that tests aren’t needed. tl;dr: if you want something to be “private”, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--self-this&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don’t save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--filename-matches-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase-default-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function’s name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase-singleton&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--Acronyms-and-Initialisms&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--uppercase&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--not-required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--no-getters-setters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--boolean-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--consistent&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It’s okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;events--hash&quot;&gt;&lt;/a&gt;&lt;a name=&quot;24.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &quot;hash&quot;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--dollar-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--cache&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--queries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;http://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--find&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es5-compat--kangax&quot;&gt;&lt;/a&gt;&lt;a name=&quot;26.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;’s ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;ecmascript-6-styles&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es6-styles&quot;&gt;&lt;/a&gt;&lt;a name=&quot;27.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a name=&quot;tc39-proposals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isnan&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isfinite&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;testing--yup&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;testing--for-real&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it’s not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mobæk, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don’t Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AloPeyk&quot;&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/raw/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury’s Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team’s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>jhipster/generator-jhipster</title>
      <link>https://github.com/jhipster/generator-jhipster</link>
      <description>&lt;p&gt;JHipster is a development platform to quickly generate, develop, &amp; deploy modern web applications &amp; microservice architectures.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.jhipster.tech/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jhipster/jhipster-artwork/main/logos/JHipster%20RGB-small100x25px.png&quot; alt=&quot;Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/generator-jhipster&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/generator-jhipster.svg?sanitize=true&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmcharts.com/compare/generator-jhipster&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/generator-jhipster.svg?label=Downloads&amp;amp;style=flat&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/jhipster/generator-jhipster?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jhipster/generator-jhipster.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/npm/generator-jhipster&quot;&gt;&lt;img src=&quot;https://snyk.io/test/npm/generator-jhipster/badge.svg?sanitize=true&quot; alt=&quot;Known Vulnerabilities&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jhipster/generator-jhipster/actions&quot;&gt;&lt;img src=&quot;https://github.com/jhipster/generator-jhipster/workflows/Generator/badge.svg?sanitize=true&quot; alt=&quot;Generator Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jhipster/generator-jhipster/actions&quot;&gt;&lt;img src=&quot;https://github.com/jhipster/generator-jhipster/workflows/Angular/badge.svg?sanitize=true&quot; alt=&quot;Angular Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jhipster/generator-jhipster/actions&quot;&gt;&lt;img src=&quot;https://github.com/jhipster/generator-jhipster/workflows/React/badge.svg?sanitize=true&quot; alt=&quot;React Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jhipster/generator-jhipster/actions&quot;&gt;&lt;img src=&quot;https://github.com/jhipster/generator-jhipster/workflows/Vue/badge.svg?sanitize=true&quot; alt=&quot;Vue Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jhipster/generator-jhipster/actions&quot;&gt;&lt;img src=&quot;https://github.com/jhipster/generator-jhipster/workflows/Webflux/badge.svg?sanitize=true&quot; alt=&quot;Webflux Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/jhipster/generator-jhipster/_build&quot;&gt;&lt;img src=&quot;https://dev.azure.com/jhipster/generator-jhipster/_apis/build/status/jhipster.generator-jhipster?branchName=main&quot; alt=&quot;Azure DevOps Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ge.jhipster.tech/scans&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Revved%20up%20by-Gradle%20Enterprise-06A0CE?logo=Gradle&amp;amp;labelColor=02303A&quot; alt=&quot;Revved up by Gradle Enterprise&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Greetings, Java Hipster!&lt;/p&gt; 
&lt;p&gt;Full documentation and information is available on our website at &lt;a href=&quot;https://www.jhipster.tech/&quot;&gt;https://www.jhipster.tech/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please read our &lt;a href=&quot;https://raw.githubusercontent.com/jhipster/generator-jhipster/main/CONTRIBUTING.md#submitting-an-issue&quot;&gt;guidelines&lt;/a&gt; before submitting an issue. If your issue is a bug, please use the bug template pre-populated &lt;a href=&quot;https://github.com/jhipster/generator-jhipster/issues/new?template=BUG_REPORT.md&quot;&gt;here&lt;/a&gt;. For feature requests and queries you can use &lt;a href=&quot;https://github.com/jhipster/generator-jhipster/issues/new?template=FEATURE_REQUEST.md&quot;&gt;this template&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are honoured by any contributions you may have small or large. Please refer to our &lt;a href=&quot;https://github.com/jhipster/generator-jhipster/raw/main/CONTRIBUTING.md&quot;&gt;contribution guidelines and instructions document&lt;/a&gt; for any information about contributing to the project.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor! &lt;a href=&quot;https://opencollective.com/generator-jhipster&quot;&gt;Become a sponsor&lt;/a&gt; or &lt;a href=&quot;https://www.jhipster.tech/sponsors/&quot;&gt;learn more about sponsoring the project&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Thank you to our sponsors!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Platinum Sponsors&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://developer.okta.com/signup?utm_source=JHipster&amp;amp;utm_medium=logo&amp;amp;utm_campaign=Platinum-Sponsor&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;425em&quot; src=&quot;https://www.jhipster.tech/images/open-collective/okta.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Gold Sponsors&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.octoconsulting.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;200em&quot; src=&quot;https://www.jhipster.tech/images/open-collective/octoconsulting.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://dev.entando.org/jhipster&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;200em&quot; src=&quot;https://www.jhipster.tech/images/open-collective/entandoe.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.datastax.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;200em&quot; src=&quot;https://www.jhipster.tech/images/open-collective/datastax.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Bronze sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/generator-jhipster&quot;&gt;&lt;img src=&quot;https://opencollective.com/generator-jhipster/tiers/bronze-sponsor.svg?avatarHeight=120&amp;amp;width=890&quot; alt=&quot;BronzeSponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Thank you to all our backers!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/generator-jhipster&quot;&gt;&lt;img src=&quot;https://opencollective.com/generator-jhipster/tiers/backer.svg?avatarHeight=70&amp;amp;width=890&quot; alt=&quot;Backers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;object data=&quot;https://opencollective.com/generator-jhipster/tiers/backer.svg?avatarHeight=40&amp;amp;width=890&amp;amp;button=false&quot; type=&quot;image/svg+xml&quot;&gt;&lt;/object&gt;&lt;/p&gt; 
&lt;h2&gt;Azure Builds&lt;/h2&gt; 
&lt;p&gt;Additional builds at &lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds&quot;&gt;hipster-labs/jhipster-daily-builds&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Pipeline Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Angular%20Maven%20SQL/badge.svg?sanitize=true&quot; alt=&quot;Angular Maven SQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Angular%20Maven%20NoSQL/badge.svg?sanitize=true&quot; alt=&quot;Angular Maven NoSQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Angular%20Gradle%20SQL/badge.svg?sanitize=true&quot; alt=&quot;Angular Gradle SQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Angular%20Gradle%20NoSQL/badge.svg?sanitize=true&quot; alt=&quot;Angular Gradle NoSQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/React%20Maven%20SQL/badge.svg?sanitize=true&quot; alt=&quot;React Maven SQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/React%20Maven%20NoSQL/badge.svg?sanitize=true&quot; alt=&quot;React Maven NoSQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/React%20Gradle%20SQL/badge.svg?sanitize=true&quot; alt=&quot;React Gradle SQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/React%20Gradle%20NoSQL/badge.svg?sanitize=true&quot; alt=&quot;React Gradle NoSQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Vue%20Maven%20SQL/badge.svg?sanitize=true&quot; alt=&quot;Vue Maven SQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Vue%20Maven%20NoSQL/badge.svg?sanitize=true&quot; alt=&quot;Vue Maven NoSQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Vue%20Gradle%20SQL/badge.svg?sanitize=true&quot; alt=&quot;Vue Gradle SQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Vue%20Gradle%20NoSQL/badge.svg?sanitize=true&quot; alt=&quot;Vue Gradle NoSQL&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Elasticsearch/badge.svg?sanitize=true&quot; alt=&quot;Elasticsearch&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Monolith%20OAuth%202.0/badge.svg?sanitize=true&quot; alt=&quot;Monolith OAuth2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/No%20Database/badge.svg?sanitize=true&quot; alt=&quot;No Database&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Microservices%20JWT/badge.svg?sanitize=true&quot; alt=&quot;Microservices JWT&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Microservices%20OAuth%202.0/badge.svg?sanitize=true&quot; alt=&quot;Microservices OAuth2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Docker%20Image/badge.svg?sanitize=true&quot; alt=&quot;Docker Image&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/hipster-labs/jhipster-daily-builds/actions&quot;&gt;&lt;img src=&quot;https://github.com/hipster-labs/jhipster-daily-builds/workflows/Official%20Windows/badge.svg?sanitize=true&quot; alt=&quot;Official Windows&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Analysis of the sample JHipster project&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://sonarcloud.io/dashboard?id=jhipster-sample-application&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;amp;metric=alert_status&quot; alt=&quot;sonar-quality-gate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=jhipster-sample-application&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;amp;metric=coverage&quot; alt=&quot;sonar-coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=jhipster-sample-application&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;amp;metric=bugs&quot; alt=&quot;sonar-bugs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sonarcloud.io/dashboard?id=jhipster-sample-application&quot;&gt;&lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=jhipster-sample-application&amp;amp;metric=vulnerabilities&quot; alt=&quot;sonar-vulnerabilities&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>antonioru/beautiful-react-hooks</title>
      <link>https://github.com/antonioru/beautiful-react-hooks</link>
      <description>&lt;p&gt;🔥 A collection of beautiful and (hopefully) useful React hooks to speed-up your components and hooks development 🔥&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/beautifulinteractions/beautiful-react-hooks/workflows/CI/CD/badge.svg?sanitize=true&quot; alt=&quot;CI/CD&quot;&gt; &lt;a href=&quot;https://coveralls.io/github/beautifulinteractions/beautiful-react-hooks?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/beautifulinteractions/beautiful-react-hooks/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/npm/v/beautiful-react-hooks&quot; alt=&quot;npm&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/beautifulinteractions/beautiful-react-hooks?style=social&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/logo.png&quot; alt=&quot;Beautiful React Hooks&quot; width=&quot;750px&quot;&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;div&gt; 
 &lt;p align=&quot;center&quot;&gt; A collection of beautiful (and hopefully useful) React hooks to speed-up your components and hooks development &lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://antonioru.github.io/beautiful-react-hooks/&quot; target=&quot;_blank&quot;&gt; 🌟 Live playground here 🌟 &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/usage_example.png&quot; alt=&quot;Usage example&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🇬🇧 English | &lt;a href=&quot;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.zh-CN.md&quot;&gt;🇨🇳 简体中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.it-IT.md&quot;&gt;🇮🇹 Italiano&lt;/a&gt; | &lt;a href=&quot;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.es-ES.md&quot;&gt; 🇪🇸 Español &lt;/a&gt; | &lt;a href=&quot;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.uk-UA.md&quot;&gt;🇺🇦 Ukrainian&lt;/a&gt; | &lt;a href=&quot;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.pt-BR.md&quot;&gt;🇧🇷 Brazilian Portuguese&lt;/a&gt; | &lt;a href=&quot;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.pl-PL.md&quot;&gt;🇵🇱 Polski &lt;/a&gt; | &lt;a href=&quot;https://github.com/beautifulinteractions/beautiful-react-hooks/raw/master/docs/README.jp-JP.md&quot;&gt;🇯🇵 日本語 &lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💡 Why?&lt;/h2&gt; 
&lt;p&gt;React custom hooks allow to abstract components&#39; business logic into single reusable functions.&lt;br&gt; So far, we&#39;ve found that most of the hooks we&#39;ve created and therefore shared between our internal projects have quite often a similar gist that involves callback references, events and components&#39; lifecycle. &lt;br&gt; For this reason we&#39;ve tried to sum up that gist into &lt;code&gt;beautiful-react-hooks&lt;/code&gt;: a collection of (&lt;em&gt;hopefully&lt;/em&gt;) useful React hooks to possibly help other companies and professionals to speed up their development process.&lt;br&gt;&lt;br&gt; Furthermore, we created a concise yet concrete API having in mind the code readability, focusing to keep the learning curve as lower as possible so that the it can be used and shared in bigger teams.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;-- Please before using any hook, read its documentation! --&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;☕️ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Concise API&lt;/li&gt; 
 &lt;li&gt;Small and lightweight&lt;/li&gt; 
 &lt;li&gt;Easy to learn&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://antonioru.github.io/beautiful-react-hooks/&quot; target=&quot;_blank&quot;&gt; 🌟 Live playground here 🌟 &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🕺 Install&lt;/h2&gt; 
&lt;p&gt;by using &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install beautiful-react-hooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;by using &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ yarn add beautiful-react-hooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🎨 Hooks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useObservable.md&quot;&gt;useObservable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useGlobalEvent.md&quot;&gt;useGlobalEvent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/usePreviousValue.md&quot;&gt;usePreviousValue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useValueHistory.md&quot;&gt;useValueHistory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useValidatedState.md&quot;&gt;useValidatedState&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMediaQuery.md&quot;&gt;useMediaQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useOnlineState.md&quot;&gt;useOnlineState&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useViewportSpy.md&quot;&gt;useViewportSpy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSpeechSynthesis.md&quot;&gt;useSpeechSynthesis&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSystemVoices.md&quot;&gt;useSystemVoices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useGeolocation.md&quot;&gt;useGeolocation&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useGeolocationState.md&quot;&gt;useGeolocationState&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useGeolocationEvents.md&quot;&gt;useGeolocationEvents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDrag.md&quot;&gt;useDrag&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDropZone.md&quot;&gt;useDropZone&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDragEvents.md&quot;&gt;useDragEvents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMouse.md&quot;&gt;useMouse&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMouseState.md&quot;&gt;useMouseState&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useMouseEvents.md&quot;&gt;useMouseEvents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useTouch.md&quot;&gt;useTouch&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useTouchState.md&quot;&gt;useTouchState&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useTouchEvents.md&quot;&gt;useTouchEvents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useLifecycle.md&quot;&gt;useLifecycle&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDidMount.md&quot;&gt;useDidMount&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useWillUnmount.md&quot;&gt;useWillUnmount&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useWindowResize.md&quot;&gt;useWindowResize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useWindowScroll.md&quot;&gt;useWindowScroll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useRequestAnimationFrame.md&quot;&gt;useRequestAnimationFrame&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useResizeObserver.md&quot;&gt;useResizeObserver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useTimeout.md&quot;&gt;useTimeout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useInterval.md&quot;&gt;useInterval&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDebouncedFn.md&quot;&gt;useDebouncedFn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useThrottledFn.md&quot;&gt;useThrottledFn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useLocalStorage.md&quot;&gt;useLocalStorage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSessionStorage.md&quot;&gt;useSessionStorage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useStorage.md&quot;&gt;useStorage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useDefaultedState.md&quot;&gt;useDefaultedState&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useRenderInfo.md&quot;&gt;useRenderInfo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSwipe.md&quot;&gt;useSwipe&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useHorizontalSwipe.md&quot;&gt;useHorizontalSwipe&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useVerticalSwipe.md&quot;&gt;useVerticalSwipe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useSwipeEvents.md&quot;&gt;useSwipeEvents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/docs/useConditionalTimeout.md&quot;&gt;useConditionalTimeout&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://antonioru.github.io/beautiful-react-hooks/&quot; target=&quot;_blank&quot;&gt; 🌟 Live playground here 🌟 &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are very welcome and wanted.&lt;/p&gt; 
&lt;p&gt;To submit your custom hook, please make sure your read our &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; guidelines.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before submitting&lt;/strong&gt; a new merge request, please make sure:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;You have updated the package.json version and reported your changes into the &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/CHANGELOG.md&quot;&gt;CHANGELOG&lt;/a&gt; file&lt;/li&gt; 
 &lt;li&gt;make sure you run &lt;code&gt;npm test&lt;/code&gt; and &lt;code&gt;npm build&lt;/code&gt; before submitting your merge request.&lt;/li&gt; 
 &lt;li&gt;make sure you&#39;ve added the documentation of your custom hook (&lt;em&gt;you can possibly use the &lt;a href=&quot;https://raw.githubusercontent.com/antonioru/beautiful-react-hooks/master/HOOK_DOCUMENTATION_TEMPLATE.md&quot;&gt;HOOK_DOCUMENTATION_TEMPLATE&lt;/a&gt; to document your custom hook&lt;/em&gt;).&lt;/li&gt; 
 &lt;li&gt;make sure you&#39;ve updated the &lt;code&gt;index.d.ts&lt;/code&gt; file with your hook types.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Made with&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chaijs.com/&quot;&gt;Chai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testing-library.com/docs/react-testing-library/intro&quot;&gt;@testing-library/react&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://react-hooks-testing-library.com/&quot;&gt;@testing-library/react-hooks&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;Icon made by &lt;a href=&quot;https://www.flaticon.com/authors/freepik&quot;&gt;Freepik&lt;/a&gt; from &lt;a href=&quot;https://www.flaticon.com/free-icon/hook_1081812&quot;&gt;www.flaticon.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SortableJS/Vue.Draggable</title>
      <link>https://github.com/SortableJS/Vue.Draggable</link>
      <description>&lt;p&gt;Vue drag-and-drop component based on Sortable.js&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img width=&quot;140&quot; src=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/logo.svg?sanitize=true&quot;&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Vue.Draggable&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/SortableJS/Vue.Draggable&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/SortableJS/Vue.Draggable.svg?style=shield&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/SortableJS/Vue.Draggable&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/SortableJS/Vue.Draggable/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codebeat.co/projects/github-com-sortablejs-vue-draggable-master&quot;&gt;&lt;img src=&quot;https://codebeat.co/badges/7a6c27c8-2d0b-47b9-af55-c2eea966e713&quot; alt=&quot;codebeat badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/issues?q=is%3Aopen+is%3Aissue&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/SortableJS/Vue.Draggable.svg?sanitize=true&quot; alt=&quot;GitHub open issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vuedraggable&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/vuedraggable.svg?sanitize=true&quot; alt=&quot;npm download&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vuedraggable&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/vuedraggable.svg?sanitize=true&quot; alt=&quot;npm download per month&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vuedraggable&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vuedraggable.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/SortableJS/Vue.Draggable.svg?sanitize=true&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Vue component (Vue.js 2.0) or directive (Vue.js 1.0) allowing drag-and-drop and synchronization with view model array.&lt;/p&gt; 
&lt;p&gt;Based on and offering all features of &lt;a href=&quot;https://github.com/RubaXa/Sortable&quot;&gt;Sortable.js&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;For Vue 3&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/SortableJS/vue.draggable.next&quot;&gt;vue.draggable.next&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/example.gif&quot; alt=&quot;demo gif&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Live Demos&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/&quot;&gt;https://sortablejs.github.io/Vue.Draggable/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://david-desmaisons.github.io/draggable-example/&quot;&gt;https://david-desmaisons.github.io/draggable-example/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full support of &lt;a href=&quot;https://github.com/RubaXa/Sortable&quot;&gt;Sortable.js&lt;/a&gt; features: 
  &lt;ul&gt; 
   &lt;li&gt;Supports touch devices&lt;/li&gt; 
   &lt;li&gt;Supports drag handles and selectable text&lt;/li&gt; 
   &lt;li&gt;Smart auto-scrolling&lt;/li&gt; 
   &lt;li&gt;Support drag and drop between different lists&lt;/li&gt; 
   &lt;li&gt;No jQuery dependency&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Keeps in sync HTML and view model list&lt;/li&gt; 
 &lt;li&gt;Compatible with Vue.js 2.0 transition-group&lt;/li&gt; 
 &lt;li&gt;Cancellation support&lt;/li&gt; 
 &lt;li&gt;Events reporting any changes when full control is needed&lt;/li&gt; 
 &lt;li&gt;Reuse existing UI library components (such as &lt;a href=&quot;https://vuetifyjs.com&quot;&gt;vuetify&lt;/a&gt;, &lt;a href=&quot;http://element.eleme.io/&quot;&gt;element&lt;/a&gt;, or &lt;a href=&quot;https://vuematerial.io&quot;&gt;vue material&lt;/a&gt; etc...) and make them draggable using &lt;code&gt;tag&lt;/code&gt; and &lt;code&gt;componentData&lt;/code&gt; props&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;a href=&quot;https://flatlogic.com/admin-dashboards&quot;&gt; &lt;img style=&quot;margin-top: 10px;&quot; src=&quot;https://flatlogic.com/assets/logo-b6ca6492a82bd9eddf58c40710235855b1c502097c23faae6306cd36973aaea8.svg?sanitize=true&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Admin Dashboard Templates made with Vue, React and Angular.&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;Find this project useful? You can buy me a &lt;span&gt;☕&lt;/span&gt; or a &lt;span&gt;🍺&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=GYAEKQZJ4FQT2&amp;amp;currency_code=USD&amp;amp;source=url&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; alt=&quot;paypal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;With npm or yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add vuedraggable

npm i -S vuedraggable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Beware it is vuedraggable for Vue 2.0 and not vue-draggable which is for version 1.0&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;with direct link&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;
&amp;lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- CDNJS :: Sortable (https://cdnjs.com/) --&amp;gt;
&amp;lt;script src=&quot;//cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- CDNJS :: Vue.Draggable (https://cdnjs.com/) --&amp;gt;
&amp;lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.20.0/vuedraggable.umd.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/tree/master/example&quot;&gt;cf example section&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;For Vue.js 2.0&lt;/h2&gt; 
&lt;p&gt;Use draggable component:&lt;/p&gt; 
&lt;h3&gt;Typical use:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; group=&quot;people&quot; @start=&quot;drag=true&quot; @end=&quot;drag=false&quot;&amp;gt;
   &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot;&amp;gt;{{element.name}}&amp;lt;/div&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.vue file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  import draggable from &#39;vuedraggable&#39;
  ...
  export default {
        components: {
            draggable,
        },
  ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;With &lt;code&gt;transition-group&lt;/code&gt;:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot;&amp;gt;
    &amp;lt;transition-group&amp;gt;
        &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot;&amp;gt;
            {{element.name}}
        &amp;lt;/div&amp;gt;
    &amp;lt;/transition-group&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Draggable component should directly wrap the draggable elements, or a &lt;code&gt;transition-component&lt;/code&gt; containing the draggable elements.&lt;/p&gt; 
&lt;h3&gt;With footer slot:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; draggable=&quot;.item&quot;&amp;gt;
    &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot; class=&quot;item&quot;&amp;gt;
        {{element.name}}
    &amp;lt;/div&amp;gt;
    &amp;lt;button slot=&quot;footer&quot; @click=&quot;addPeople&quot;&amp;gt;Add&amp;lt;/button&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;With header slot:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; draggable=&quot;.item&quot;&amp;gt;
    &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot; class=&quot;item&quot;&amp;gt;
        {{element.name}}
    &amp;lt;/div&amp;gt;
    &amp;lt;button slot=&quot;header&quot; @click=&quot;addPeople&quot;&amp;gt;Add&amp;lt;/button&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;With Vuex:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&#39;myList&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;computed: {
    myList: {
        get() {
            return this.$store.state.myList
        },
        set(value) {
            this.$store.commit(&#39;updateList&#39;, value)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Props&lt;/h3&gt; 
&lt;h4&gt;value&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Input array to draggable component. Typically same array as referenced by inner element v-for directive.&lt;br&gt; This is the preferred way to use Vue.draggable as it is compatible with Vuex.&lt;br&gt; It should not be used directly but only though the &lt;code&gt;v-model&lt;/code&gt; directive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;list&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Alternative to the &lt;code&gt;value&lt;/code&gt; prop, list is an array to be synchronized with drag-and-drop.&lt;br&gt; The main difference is that &lt;code&gt;list&lt;/code&gt; prop is updated by draggable component using splice method, whereas &lt;code&gt;value&lt;/code&gt; is immutable.&lt;br&gt; &lt;strong&gt;Do not use in conjunction with value prop.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;All sortable options&lt;/h4&gt; 
&lt;p&gt;New in version 2.19&lt;/p&gt; 
&lt;p&gt;Sortable options can be set directly as vue.draggable props since version 2.19.&lt;/p&gt; 
&lt;p&gt;This means that all &lt;a href=&quot;https://github.com/RubaXa/Sortable#options&quot;&gt;sortable option&lt;/a&gt; are valid sortable props with the notable exception of all the method starting by &quot;on&quot; as draggable component expose the same API via events.&lt;/p&gt; 
&lt;p&gt;kebab-case propery are supported: for example &lt;code&gt;ghost-class&lt;/code&gt; props will be converted to &lt;code&gt;ghostClass&lt;/code&gt; sortable option.&lt;/p&gt; 
&lt;p&gt;Example setting handle, sortable and a group option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;draggable
        v-model=&quot;list&quot;
        handle=&quot;.handle&quot;
        :group=&quot;{ name: &#39;people&#39;, pull: &#39;clone&#39;, put: false }&quot;
        ghost-class=&quot;ghost&quot;
        :sort=&quot;false&quot;
        @change=&quot;log&quot;
      &amp;gt;
      &amp;lt;!-- --&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;tag&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;String&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;&#39;div&#39;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;HTML node type of the element that draggable component create as outer element for the included slot.&lt;br&gt; It is also possible to pass the name of vue component as element. In this case, draggable attribute will be passed to the create component.&lt;br&gt; See also &lt;a href=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#componentdata&quot;&gt;componentData&lt;/a&gt; if you need to set props or event to the created component.&lt;/p&gt; 
&lt;h4&gt;clone&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;(original) =&amp;gt; { return original;}&lt;/code&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;Function called on the source component to clone element when clone option is true. The unique argument is the viewModel element to be cloned and the returned value is its cloned version.&lt;br&gt; By default vue.draggable reuses the viewModel element, so you have to use this hook if you want to clone or deep clone it.&lt;/p&gt; 
&lt;h4&gt;move&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;If not null this function will be called in a similar way as &lt;a href=&quot;https://github.com/RubaXa/Sortable#move-event-object&quot;&gt;Sortable onMove callback&lt;/a&gt;. Returning false will cancel the drag operation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function onMoveCallback(evt, originalEvent){
   ...
    // return false; — for cancel
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;evt object has same property as &lt;a href=&quot;https://github.com/RubaXa/Sortable#move-event-object&quot;&gt;Sortable onMove event&lt;/a&gt;, and 3 additional properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;draggedContext&lt;/code&gt;: context linked to dragged element 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;index&lt;/code&gt;: dragged element index&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: dragged element underlying view model element&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;futureIndex&lt;/code&gt;: potential index of the dragged element if the drop operation is accepted&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;relatedContext&lt;/code&gt;: context linked to current drag operation 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;index&lt;/code&gt;: target element index&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: target element view model element&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;list&lt;/code&gt;: target list&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;component&lt;/code&gt;: target VueComponent&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;draggable :list=&quot;list&quot; :move=&quot;checkMove&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;javascript:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;checkMove: function(evt){
    return (evt.draggedContext.element.name!==&#39;apple&#39;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See complete example: &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/raw/master/examples/Cancel.html&quot;&gt;Cancel.html&lt;/a&gt;, &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/raw/master/examples/script/cancel.js&quot;&gt;cancel.js&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;componentData&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;br&gt; Required: &lt;code&gt;false&lt;/code&gt;&lt;br&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;This props is used to pass additional information to child component declared by &lt;a href=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#tag&quot;&gt;tag props&lt;/a&gt;.&lt;br&gt; Value:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;props&lt;/code&gt;: props to be passed to the child component&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;attrs&lt;/code&gt;: attrs to be passed to the child component&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;on&lt;/code&gt;: events to be subscribe in the child component&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example (using &lt;a href=&quot;http://element.eleme.io/#/en-US&quot;&gt;element UI library&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;draggable tag=&quot;el-collapse&quot; :list=&quot;list&quot; :component-data=&quot;getComponentData()&quot;&amp;gt;
    &amp;lt;el-collapse-item v-for=&quot;e in list&quot; :title=&quot;e.title&quot; :name=&quot;e.name&quot; :key=&quot;e.name&quot;&amp;gt;
        &amp;lt;div&amp;gt;{{e.description}}&amp;lt;/div&amp;gt;
     &amp;lt;/el-collapse-item&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;methods: {
    handleChange() {
      console.log(&#39;changed&#39;);
    },
    inputChanged(value) {
      this.activeNames = value;
    },
    getComponentData() {
      return {
        on: {
          change: this.handleChange,
          input: this.inputChanged
        },
        attrs:{
          wrap: true
        },
        props: {
          value: this.activeNames
        }
      };
    }
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Events&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Support for Sortable events:&lt;/p&gt; &lt;p&gt;&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;choose&lt;/code&gt;, &lt;code&gt;unchoose&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;clone&lt;/code&gt;&lt;br&gt; Events are called whenever onStart, onAdd, onRemove, onUpdate, onEnd, onChoose, onUnchoose, onSort, onClone are fired by Sortable.js with the same argument.&lt;br&gt; &lt;a href=&quot;https://github.com/RubaXa/Sortable#event-object-demo&quot;&gt;See here for reference&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Note that SortableJS OnMove callback is mapped with the &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/raw/master/README.md#move&quot;&gt;move prop&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;draggable :list=&quot;list&quot; @end=&quot;onEnd&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;change event&lt;/p&gt; &lt;p&gt;&lt;code&gt;change&lt;/code&gt; event is triggered when list prop is not null and the corresponding array is altered due to drag-and-drop operation.&lt;br&gt; This event is called with one argument containing one of the following properties:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;added&lt;/code&gt;: contains information of an element added to the array 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;newIndex&lt;/code&gt;: the index of the added element&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the added element&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;removed&lt;/code&gt;: contains information of an element removed from to the array 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;oldIndex&lt;/code&gt;: the index of the element before remove&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the removed element&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;moved&lt;/code&gt;: contains information of an element moved within the array 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;newIndex&lt;/code&gt;: the current index of the moved element&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;oldIndex&lt;/code&gt;: the old index of the moved element&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the moved element&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Slots&lt;/h3&gt; 
&lt;p&gt;Limitation: neither header or footer slot works in conjunction with transition-group.&lt;/p&gt; 
&lt;h4&gt;Header&lt;/h4&gt; 
&lt;p&gt;Use the &lt;code&gt;header&lt;/code&gt; slot to add none-draggable element inside the vuedraggable component. Important: it should be used in conjunction with draggable option to tag draggable element. Note that header slot will always be added before the default slot regardless its position in the template. Ex:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; draggable=&quot;.item&quot;&amp;gt;
    &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot; class=&quot;item&quot;&amp;gt;
        {{element.name}}
    &amp;lt;/div&amp;gt;
    &amp;lt;button slot=&quot;header&quot; @click=&quot;addPeople&quot;&amp;gt;Add&amp;lt;/button&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Footer&lt;/h4&gt; 
&lt;p&gt;Use the &lt;code&gt;footer&lt;/code&gt; slot to add none-draggable element inside the vuedraggable component. Important: it should be used in conjunction with draggable option to tag draggable elements. Note that footer slot will always be added after the default slot regardless its position in the template. Ex:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; draggable=&quot;.item&quot;&amp;gt;
    &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot; class=&quot;item&quot;&amp;gt;
        {{element.name}}
    &amp;lt;/div&amp;gt;
    &amp;lt;button slot=&quot;footer&quot; @click=&quot;addPeople&quot;&amp;gt;Add&amp;lt;/button&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Gotchas&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Vue.draggable children should always map the list or value prop using a v-for directive&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You may use &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable#header&quot;&gt;header&lt;/a&gt; and &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable#footer&quot;&gt;footer&lt;/a&gt; slot to by-pass this limitation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Children elements inside v-for should be keyed as any element in Vue.js. Be carefull to provide revelant key values in particular:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;typically providing array index as keys won&#39;t work as key should be linked to the items content&lt;/li&gt; 
   &lt;li&gt;cloned elements should provide updated keys, it is doable using the &lt;a href=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#clone&quot;&gt;clone props&lt;/a&gt; for example&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/custom-clone&quot;&gt;Clone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/handle&quot;&gt;Handle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/transition-example-2&quot;&gt;Transition&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/nested-example&quot;&gt;Nested&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/table-example&quot;&gt;Table&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Full demo example&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/David-Desmaisons/draggable-example&quot;&gt;draggable-example&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;For Vue.js 1.0&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/documentation/Vue.draggable.for.ReadME.md&quot;&gt;See here&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>pinojs/pino</title>
      <link>https://github.com/pinojs/pino</link>
      <description>&lt;p&gt;🌲 super fast, all natural json logger 🌲&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pinojs/pino/master/pino-banner.png&quot; alt=&quot;banner&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;pino&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/pino&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/pino&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pinojs/pino/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/pinojs/pino/CI&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/github/pinojs/pino&quot;&gt;&lt;img src=&quot;https://snyk.io/test/github/pinojs/pino/badge.svg?sanitize=true&quot; alt=&quot;Known Vulnerabilities&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/pinojs/pino?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/pinojs/pino/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://standardjs.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat&quot; alt=&quot;js-standard-style&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://definitelytyped.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/DefinitelyTyped-.d.ts-brightgreen.svg?style=flat&quot; alt=&quot;TypeScript definitions on DefinitelyTyped&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/#low-overhead&quot;&gt;Very low overhead&lt;/a&gt; Node.js logger.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/benchmarks.md&quot;&gt;Benchmarks ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/api.md&quot;&gt;API ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/browser.md&quot;&gt;Browser API ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/redaction.md&quot;&gt;Redaction ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/child-loggers.md&quot;&gt;Child Loggers ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/transports.md&quot;&gt;Transports ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/web.md&quot;&gt;Web Frameworks ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/pretty.md&quot;&gt;Pretty Printing ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/asynchronous.md&quot;&gt;Asynchronous Logging ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/ecosystem.md&quot;&gt;Ecosystem ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/legacy.md&quot;&gt;Legacy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/help.md&quot;&gt;Help ⇗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/lts.md&quot;&gt;Long Term Support Policy ⇗&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install pino@next
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you would like to install pino v6, refer to &lt;a href=&quot;https://github.com/pinojs/pino/tree/v6.x&quot;&gt;https://github.com/pinojs/pino/tree/v6.x&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = require(&#39;pino&#39;)()

logger.info(&#39;hello world&#39;)

const child = logger.child({ a: &#39;property&#39; })
child.info(&#39;hello child!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This produces:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{&quot;level&quot;:30,&quot;time&quot;:1531171074631,&quot;msg&quot;:&quot;hello world&quot;,&quot;pid&quot;:657,&quot;hostname&quot;:&quot;Davids-MBP-3.fritz.box&quot;}
{&quot;level&quot;:30,&quot;time&quot;:1531171082399,&quot;msg&quot;:&quot;hello child!&quot;,&quot;pid&quot;:657,&quot;hostname&quot;:&quot;Davids-MBP-3.fritz.box&quot;,&quot;a&quot;:&quot;property&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For using Pino with a web framework see:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/web.md#fastify&quot;&gt;Pino with Fastify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/web.md#express&quot;&gt;Pino with Express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/web.md#hapi&quot;&gt;Pino with Hapi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/web.md#restify&quot;&gt;Pino with Restify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/web.md#koa&quot;&gt;Pino with Koa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/web.md#http&quot;&gt;Pino with Node core &lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/web.md#nest&quot;&gt;Pino with Nest&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;essentials&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Essentials&lt;/h2&gt; 
&lt;h3&gt;Development Formatting&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/pinojs/pino-pretty&quot;&gt;&lt;code&gt;pino-pretty&lt;/code&gt;&lt;/a&gt; module can be used to format logs during development:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pinojs/pino/master/pretty-demo.png&quot; alt=&quot;pretty demo&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Transports &amp;amp; Log Processing&lt;/h3&gt; 
&lt;p&gt;Due to Node&#39;s single-threaded event-loop, it&#39;s highly recommended that sending, alert triggering, reformatting and all forms of log processing be conducted in a separate process or thread.&lt;/p&gt; 
&lt;p&gt;In Pino terminology we call all log processors &quot;transports&quot;, and recommend that the transports be run in a worker thread using our &lt;code&gt;pino.transport&lt;/code&gt; API.&lt;/p&gt; 
&lt;p&gt;For more details see our &lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/transports.md&quot;&gt;Transports⇗&lt;/a&gt; document.&lt;/p&gt; 
&lt;h3&gt;Low overhead&lt;/h3&gt; 
&lt;p&gt;Using minimum resources for logging is very important. Log messages tend to get added over time and this can lead to a throttling effect on applications –&amp;nbsp;such as reduced requests per second.&lt;/p&gt; 
&lt;p&gt;In many cases, Pino is over 5x faster than alternatives.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/docs/benchmarks.md&quot;&gt;Benchmarks&lt;/a&gt; document for comparisons.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;team&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;The Team&lt;/h2&gt; 
&lt;h3&gt;Matteo Collina&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/pinojs&quot;&gt;https://github.com/pinojs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/~matteo.collina&quot;&gt;https://www.npmjs.com/~matteo.collina&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/matteocollina&quot;&gt;https://twitter.com/matteocollina&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;David Mark Clements&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/davidmarkclements&quot;&gt;https://github.com/davidmarkclements&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/~davidmarkclements&quot;&gt;https://www.npmjs.com/~davidmarkclements&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/davidmarkclem&quot;&gt;https://twitter.com/davidmarkclem&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;James Sumners&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jsumners&quot;&gt;https://github.com/jsumners&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/~jsumners&quot;&gt;https://www.npmjs.com/~jsumners&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/jsumners79&quot;&gt;https://twitter.com/jsumners79&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Thomas Watson Steen&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/watson&quot;&gt;https://github.com/watson&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/~watson&quot;&gt;https://www.npmjs.com/~watson&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/wa7son&quot;&gt;https://twitter.com/wa7son&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pino is an &lt;strong&gt;OPEN Open Source Project&lt;/strong&gt;. This means that:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Individuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/pinojs/pino/raw/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; file for more details.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;acknowledgements&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;This project was kindly sponsored by &lt;a href=&quot;https://nearform.com&quot;&gt;nearForm&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Logo and identity designed by Cosmic Fox Design: &lt;a href=&quot;https://www.behance.net/cosmicfox&quot;&gt;https://www.behance.net/cosmicfox&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under &lt;a href=&quot;https://raw.githubusercontent.com/pinojs/pino/master/LICENSE&quot;&gt;MIT&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>datastaxdevs/workshop-spring-stargate</title>
      <link>https://github.com/datastaxdevs/workshop-spring-stargate</link>
      <description>&lt;p&gt;Building Spring Boot/data Application leveraging Cassandra and Stargate&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://github.com/DataStax-Academy/AstraPortia/raw/master/0_materials/ico.jpg?raw=true&quot; alt=&quot;ok&quot;&gt; Workshop Spring Data Cassandra and Stargate&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/DataStax-Academy/workshop-spring-data-cassandra&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&quot; alt=&quot;Gitpod ready-to-code&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/hexpm/l/plug.svg?sanitize=true&quot; alt=&quot;License Apache2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.com/widget?id=685554030159593522&amp;amp;theme=dark&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/685554030159593522&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Today we showcase an application using &lt;strong&gt;Apache Cassandra™&lt;/strong&gt; as a backend implemented with &lt;strong&gt;Spring Boot&lt;/strong&gt;, &lt;strong&gt;Spring Data&lt;/strong&gt;, the &lt;strong&gt;&lt;a href=&quot;http://stargate.io&quot;&gt;Stargate&lt;/a&gt;&lt;/strong&gt; and related SDK.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/splash.png?raw=true&quot; alt=&quot;SplashScreen&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Which better business domain than the TV Show &lt;strong&gt;Stargate&lt;/strong&gt; hoping it will not bring any confusion ^^.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/pic-travel.png?raw=true&quot; alt=&quot;SplashScreen&quot;&gt;&lt;/p&gt; 
&lt;p&gt;ℹ️ &lt;strong&gt;Frequently asked questions&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Can I run the workshop on my computer?&lt;/em&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;There is nothing preventing you from running the workshop on your own machine. If you do so, you will need &lt;em&gt;java jdk11+&lt;/em&gt;, &lt;em&gt;Maven&lt;/em&gt;, an IDE like &lt;em&gt;VSCode, IntelliJ, Eclipse, Spring STS&lt;/em&gt;. You will have to adapt commands and paths based on your environment and install the dependencies by yourself. &lt;strong&gt;We won&#39;t provide support&lt;/strong&gt; to keep on track with schedule.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Materials for the Session&lt;/h2&gt; 
&lt;p&gt;It doesn&#39;t matter if you join our workshop live or you prefer to do at your own pace, we have you covered. In this repository, you&#39;ll find everything you need for this workshop:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/slides.pdf&quot;&gt;Slide deck&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bit.ly/cassandra-workshop&quot;&gt;Discord chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://community.datastax.com/&quot;&gt;Questions and Answers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#1-create-astra-db-instance&quot;&gt;Create Astra DB Instance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#2-create-table-and-insert-data&quot;&gt;Create Tables and insert data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#3-load-dataset-as-a-csv&quot;&gt;Load dataSet as a CSV&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#4-create-astra-token&quot;&gt;Create Astra Token&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#5-launch-gitpod&quot;&gt;Launch Gitpod&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#6-know-your-gitpod&quot;&gt;Know your Gitpod&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#7-setup-your-application&quot;&gt;Setup your Application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#8-run-some-unit-tests&quot;&gt;Run Unit tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#9-run-the-application&quot;&gt;Run the Application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#10-using-stargate-rest-api&quot;&gt;Using Stargate Rest API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#11-using-stargate-document-api&quot;&gt;Using Stargate Document API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#12-walkthrough-sdk&quot;&gt;Walkthrough Stargate SDK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#13-homeworks&quot;&gt;Homeworks&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;1. Create Astra DB Instance&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ASTRA DB&lt;/code&gt;&lt;/strong&gt; is the simplest way to run Cassandra with zero operations at all - just push the button and get your cluster. No credit card required, $25.00 USD credit every month, roughly 5M writes, 30M reads, 40GB storage monthly - sufficient to run small production workloads.&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 1a. If you do have an account yet register and sign In to Astra DB this is FREE and NO CREDIT CARD asked&lt;/strong&gt; &lt;a href=&quot;https://astra.dev/9-2&quot;&gt;https://astra.datastax.com&lt;/a&gt;: You can use your &lt;code&gt;Github&lt;/code&gt;, &lt;code&gt;Google&lt;/code&gt; accounts or register with an &lt;code&gt;email&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Make sure to chose a password with minimum 8 characters, containing upper and lowercase letters, at least one number and special character&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 1b. Create a &quot;pay as you go&quot; plan&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Follow this &lt;a href=&quot;https://docs.datastax.com/en/astra/docs/creating-your-astra-database.html&quot;&gt;guide&lt;/a&gt;, to set up a pay as you go database with a free $25 monthly credit. You will find below recommended values to enter:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For the database name&lt;/strong&gt; - &lt;code&gt;workshops&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For the keyspace name&lt;/strong&gt; - &lt;code&gt;stargate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;You can technically use whatever you want and update the code to reflect the keyspace. This is really to get you on a happy path for the first run.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For provider and region&lt;/strong&gt;: Choose a provider (GCP, Azure or AWS) and then the related region is where your database will reside physically (choose one close to you or your users).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create the database&lt;/strong&gt;. Review all the fields to make sure they are as shown, and click the &lt;code&gt;Create Database&lt;/code&gt; button.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You will see your new database &lt;code&gt;pending&lt;/code&gt; in the Dashboard.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/db-pending.png?raw=true&quot; alt=&quot;my-pic&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The status will change to &lt;code&gt;Active&lt;/code&gt; when the database is ready, this will only take 2-3 minutes. You will also receive an email when it is ready.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Walkthrough&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/astra-create-db.gif?raw=true&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;2. Create Table and insert data&lt;/h2&gt; 
&lt;p&gt;Once the database is created we want to create the tables to insert Data.&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step2a: Locate and open CQLConsole&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Click the name of you database &lt;code&gt;workshops&lt;/code&gt; in the panel on the left&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Locate the tab &lt;code&gt;CQL Console&lt;/code&gt;, the prompt will open, there is no need to enter credentials here.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/cqlshconsole.png?raw=true&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 2b: Navigate to your keyspace&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;To ease the copy-paste you can use the small clipboard icons as show in the walkthrough. If the CTL+C and CTRL+V does not work in your browser you can also &lt;em&gt;right-click&lt;/em&gt; and then select &lt;em&gt;paste&lt;/em&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter the following statement in CQL console to list existing keyspaces, you should see the one you created with the database.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;describe keyspaces;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter the following statement in CQL console to select your keyspace:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;use stargate;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 2c: Create Entities&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter the following statement in CQL console to Create a table &lt;code&gt;chevrons&lt;/code&gt; with the following fields&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE IF NOT EXISTS stargate.chevrons(
   area text,
   code int ,
   name text,
   picture text,
   PRIMARY KEY ((area), code)
) WITH CLUSTERING ORDER BY (code ASC);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 2d: Populate entries&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter the following statement in CqlSH console to enter the different chevrons in the database&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 1, &#39;Earth&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/001glyph-earth.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 2, &#39;Crater&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/002glyph-crater.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 3, &#39;Virgo&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/003glyph-virgo.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 4, &#39;Bootes&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/004glyph-bootes.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 5, &#39;Centaurus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/005glyph-centarus.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 6, &#39;Libra&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/006glyph-libra.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 7, &#39;Serpenscaput&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/007glyph-serpenscaput.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 8, &#39;Norma&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/008glyph-norma.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 9, &#39;Scorpio&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/009glyph-scorpio.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 10, &#39;Cra&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/010glyph-cra.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 11, &#39;Scutum&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/011glyph-scutum.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 12, &#39;Sagitarus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/012glyph-sagittarius.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 13, &#39;Aquila&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/013glyph-aquila.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 14, &#39;Mic&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/014glyph-mic.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 15, &#39;Capricorn&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/015glyph-capricorn.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 16, &#39;Piscesaustrinus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/016glyph-piscesaustrinus.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 17, &#39;Equuleus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/017glyph-equuleus.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 18, &#39;Aquarius&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/018glyph-aquarius.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 19, &#39;Pegasus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/019glyph-pegasus.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 20, &#39;Sculptor&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/020glyph-sculptor.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 21, &#39;Pisces&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/021glyph-pisces.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 22, &#39;Andromeda&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/022glyph-andromeda.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 23, &#39;Triangulum&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/023glyph-triangulum.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 24, &#39;Aries&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/024glyph-aries.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 25, &#39;Perseus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/025glyph-perseus.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 26, &#39;Cetus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/026glyph-cetus.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 27, &#39;Taurus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/027glyph-taurus.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 28, &#39;Auriga&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/028glyph-auriga.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 29, &#39;Eridanus&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/029glyph-eridanus.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 30, &#39;Orion&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/030glyph-orion.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 31, &#39;Canisminor&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/031glyph-canisminor.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 32, &#39;Monoceros&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/032glyph-monoceros.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 33, &#39;Gemini&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/033glyph-gemini.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 34, &#39;Hydra&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/034glyph-hydra.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 35, &#39;Lynx&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/035glyph-lynx.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 36, &#39;Cancer&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/036glyph-cancer.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 37, &#39;Sextans&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/037glyph-sextans.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 38, &#39;Leominor&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/038glyph-leominor.jpg?raw=true&#39;);
INSERT INTO chevrons (area, code, name, picture) VALUES (&#39;Milky Way&#39;, 39, &#39;Leo&#39;, &#39;https://github.com/datastaxdevs/workshop-spring-stargate/blob/main/images/glyphs/039glyph-leo.jpg?raw=true&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can notice than those are real images, thanks to &lt;a href=&quot;http://stargate-sg1-solutions.com/wiki/Main_Page&quot;&gt;StargateWiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/001glyph-earth.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/002glyph-crater.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/003glyph-virgo.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/004glyph-bootes.jpg?raw=true&quot; alt=&quot;#&quot;&gt;...&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 2e: Show the results&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We have inserted 39 symbols of the &lt;code&gt;Milky Way&lt;/code&gt; galaxy with &lt;code&gt;INSERT&lt;/code&gt; statements but we could have used other solutions like &lt;a href=&quot;https://github.com/datastax/dsbulk&quot;&gt;dsbulk&lt;/a&gt;, Spark, Apis or Astra Data Loader. We will show some of them to you later.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Validate the number of chevrons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;select count(*) from stargate.chevrons;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Show the chevrons known for the &lt;code&gt;Milky Way&lt;/code&gt; galaxy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;select code,name from stargate.chevrons where area=&#39;Milky Way&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;3. Load dataSet as a CSV&lt;/h2&gt; 
&lt;p&gt;Inserting a couple of values with CQL console is great but quite verbose, correct? We created the table and inserted a few values.&lt;/p&gt; 
&lt;p&gt;In Astra DB there is a tool to speed up that process and both create and import data from a CSV, instead.&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 3a: Download the dataset&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;To download the DATASET, &lt;strong&gt;right-click&lt;/strong&gt; &lt;em&gt;(or CTRL + Click to open in new tab)&lt;/em&gt; the button below and download the target file on your machine.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;If the file opens in the browser save it with the name &lt;code&gt;destinations.csv&lt;/code&gt;. The name is important as the filename will be the table name.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align=&quot;left&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/dataset/destinations.csv&quot;&gt; &lt;img src=&quot;https://dabuttonfactory.com/button.png?t=Download Dataset&amp;amp;f=Roboto-Bold&amp;amp;ts=26&amp;amp;tc=fff&amp;amp;hp=45&amp;amp;vp=20&amp;amp;c=11&amp;amp;bgt=unicolored&amp;amp;bgc=15d798&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 3b: Open Astra Data Loader&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Locate the &lt;code&gt;Upload Data&lt;/code&gt; button to open the Data Loader.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/dataloader-01-button.png&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 3c: Upload the dataset&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Click on the area &lt;em&gt;Drag n drop a single file&lt;/em&gt; and look for the file &lt;code&gt;destinations.csv&lt;/code&gt; on your machine, this file has been downloaded in step &lt;strong&gt;3a&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/dataloader-02-upload.png&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Once the file has been uploaded notice the &lt;code&gt;Upload Successful&lt;/code&gt; message in green. You can now click &lt;code&gt;NEXT&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 3d: Define the target table&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Locate the field Table Name and make sure it is set to &lt;code&gt;destinations&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/dataloader-03-parsed.png&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Scroll down to show the the &lt;strong&gt;Keys and Clustering&lt;/strong&gt; part of the screen and enter the following&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;use the dropdown &lt;code&gt;galaxy&lt;/code&gt; which will be our partition key (assuming there are less than 100,000 stargates in our galaxy) and a lot of galaxy ^^.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;name&lt;/code&gt; will be our clustering key in order to ensure a unique name of the planet in the galaxy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can now click &lt;code&gt;NEXT&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/dataloader-04-datamodel.png&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 3e: Define the target keyspace&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;In the &lt;strong&gt;Target Keyspace&lt;/strong&gt; combo box find and select our keyspace &lt;code&gt;stargate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Then click &lt;code&gt;NEXT&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/dataloader-05-keyspace.png&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 3f: Show Data&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;After a few seconds (about 30s),you will get an email informing you that the batch has been scheduled.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/dataloader-06-mail1.png&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;As you can see the operation here is asynchronous. About a minute later your will get another email to tell you the data has been inserted.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/dataloader-07-mail2.png&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Using the CQL Console enter the CQL command that was suggested in the email as below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT * FROM stargate.destinations LIMIT 10;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Expected output&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/dataloader-08-data.png&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;QUIZ:&lt;/strong&gt; Try to find by the correct CQL statement to retrieve the coordinates of planet Chulak in our galaxy.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Click to view Solution&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT chevron1,chevron2,chevron3,chevron4,chevron5,chevron6 FROM stargate.destinations WHERE galaxy=&#39;Milky Way&#39; and name=&#39;Chulak&#39;;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Yes now we do have the cartouche (a carved tablet or drawing representing a scroll with rolled-up ends) - &lt;code&gt;9,2,23,16,37,20&lt;/code&gt; (&lt;a href=&quot;http://stargate-sg1-solutions.com/wiki/Chulak&quot;&gt;You can check that we are correct&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/009glyph-scorpio.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/002glyph-crater.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/023glyph-triangulum.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/016glyph-piscesaustrinus.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/037glyph-sextans.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/020glyph-sculptor.jpg?raw=true&quot; alt=&quot;#&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/glyphs/001glyph-earth.jpg?raw=true&quot; alt=&quot;#&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🎉🎉 &lt;strong&gt;Congratulations&lt;/strong&gt; we do have both chevrons and coordinates of our destination.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;4. Create Astra Token&lt;/h2&gt; 
&lt;p&gt;However, to save &lt;em&gt;Teal&#39;c&lt;/em&gt; from &lt;em&gt;Apophysis&lt;/em&gt; we still need to create a &lt;strong&gt;token&lt;/strong&gt; that we will use as our credentials.&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 4a: Generate Token&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Following the &lt;a href=&quot;https://docs.datastax.com/en/astra/docs/manage-application-tokens.html&quot;&gt;Manage Application Tokens docs&lt;/a&gt; create a token with &lt;code&gt;Database Admnistrator&lt;/code&gt; roles.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Go the &lt;code&gt;Organization Settings&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;Token Management&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Pick the role &lt;code&gt;Database Admnistrator&lt;/code&gt; on the select box&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click Generate token&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Walkthrough&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/astra-create-token.gif?raw=true&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;This is what the token page looks like. You can now download the values as a CSV. We will need those values but you can also keep this window open for use later.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/astra-token.png?raw=true&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Notice the clipboard icon at the end of each value.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;clientId:&lt;/code&gt; We will use it as a &lt;em&gt;username&lt;/em&gt; to contact Cassandra&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;clientSecret:&lt;/code&gt; We will use it as a &lt;em&gt;password&lt;/em&gt; to contact Cassandra&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;appToken:&lt;/code&gt; We will use it as a api token Key to interact with APIs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To know more about roles of each token you can have a look to &lt;a href=&quot;https://www.youtube.com/watch?v=nRqu44W-bMU&quot;&gt;this video.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note: Make sure you don&#39;t close the window accidentally or otherwise - if you close this window before you copy the values, the application token is lost forever. They won&#39;t be available later for security reasons.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We are now set with the database and credentials. Let&#39;s start coding with Spring !&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;5. Launch Gitpod&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.gitpod.io/&quot;&gt;Gitpod&lt;/a&gt; is an IDE 100% online based on &lt;a href=&quot;https://github.com/gitpod-io/vscode/raw/gp-code/LICENSE.txt?lang=en-US&quot;&gt;VS Code&lt;/a&gt;. To initialize your environment simply click on the button below &lt;em&gt;(CTRL + Click to open in new tab)&lt;/em&gt; You will be asked for you github account, as needed.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/datastaxdevs/workshop-spring-stargate&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;The screenshot may be slightly different based on your default skin and a few edits in the read me.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/gitpod-01-home.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;That&#39;s it.&lt;/strong&gt; Gitpod provides all tools we will need today including &lt;code&gt;Maven&lt;/code&gt; and exporting port &lt;code&gt;8080&lt;/code&gt;. At initialization of the workspace we schedule a &lt;code&gt;mvn clean install&lt;/code&gt; to download dependencies.&lt;/p&gt; 
&lt;p&gt;Also you may have noticed that a build is happening - even before we get started. The sample project already exists and loading the developer enviroment triggers a build to download all the maven dependencies so you don&#39;t have to.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;6. Know your gitpod&lt;/h2&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 6a: Know your public URL&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The workshop application has opened with an ephemeral URL. To know the URL where your application endpoint will be exposed you can run the following command in the terminal after the build has completed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gp url 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/gitpod-02-url.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 6b: Build the project&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Using maven build the project and download its dependencies.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /workspace/workshop-spring-stargate/stargate-demo &amp;amp;&amp;amp; mvn clean package install -Dmaven.test.skip=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/gitpod-04-build.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;7. Setup your application&lt;/h2&gt; 
&lt;p&gt;To run the application you need to provide the credentials and identifier to the application. you will have to provide 6 values in total as shown below&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/gitpod-05-appyml.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 7a: Enter 3 values from the token&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Open the file &lt;code&gt;stargate-demo/src/main/resources/application.yml&lt;/code&gt; as show below.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Replace &lt;code&gt;client-id&lt;/code&gt;, &lt;code&gt;clientSecret&lt;/code&gt;, &lt;code&gt;application-token&lt;/code&gt; with values shown on the Astra token screen or picking the values from the CSV token file your dowloaded before including the AstraCS: part of the token.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;To ease the copy-paste you can use the small clipboard icons as show in the walkthrough.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 7b: Enter 3 values related to your DB&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;In Astra DB go back to home page by clicking the logo&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select you database &lt;code&gt;workshops&lt;/code&gt; in the left panel and then copy values for &lt;code&gt;cloud-region&lt;/code&gt; and &lt;code&gt;database-id&lt;/code&gt; (clusterID) from the details page.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Walkthrough&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/copy-credentials.gif?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;TADA your application is now configured we can finally play with some code.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;8. Run some unit tests&lt;/h2&gt; 
&lt;p&gt;The application is now set you should be able to interact with your DB. Let&#39;s demonstrate some capabilities.&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 8a: Use CqlSession&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Interaction with Cassandra are implemented in Java through drivers and the main Class is &lt;code&gt;CqlSession&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Higher level frameworks like Spring, Spring Data, or even quarkus will rely on this object so let&#39;s make sure it is part of your Spring context with a &lt;code&gt;@SpringBootTest&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mvn test -Dtest=com.datastax.demo.stargate.Ex1_UseCqlSessionTest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;[..]
+ Code=38, name=&#39;Leominor&#39;,
+ Code=39, name=&#39;Leo&#39;,
[OK] - Test Successfully you ROCK !
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.42 s - in com.datastax.demo.stargate.Ex1_UseCqlSessionTest
18:23:34.167 INFO  com.datastax.stargate.sdk.StargateClient      : Closing CqlSession.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
-----------------------------------------------------------------------[INFO] BUILD SUCCESS
-----------------------------------------------------------------------[INFO] Total time:  13.985 s
[INFO] Finished at: 2021-04-27T18:23:34+02:00
------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 8b: Working With Spring Data&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Spring Data allows Mapping &lt;code&gt;Object &amp;lt;=&amp;gt; Table&lt;/code&gt; based on annotation at the java bean level. Then by convention CQL query will be executed under the hood.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mvn test -Dtest=com.datastax.demo.stargate.Ex2_UseSpringDataChevronTest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This test perform 3 operations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find all Chevrons in the table&lt;/li&gt; 
 &lt;li&gt;Find a chevron by its primary key&lt;/li&gt; 
 &lt;li&gt;Find all chevrons in our galaxy (partition key)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;[...]
 [OK]  - Test #2.1 Successful - you ROCK !
[...]
[OK]  - Test #2.2 Successful - you ROCK !
[...]
[OK]  - Test #2.3 Successful - you ROCK !
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can also query the destination table to find coordinates:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mvn test -Dtest=com.datastax.demo.stargate.Ex3_UseSpringDataDestinationTest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;9. Run the application&lt;/h2&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 9a: Start the application&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Navigate to the folder and simply start the application with the following command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /workspace/workshop-spring-stargate/stargate-demo
mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Your application is now started you should have a peek at the logs here&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Picked up JAVA_TOOL_OPTIONS: -Xmx1879m
  _________ __                             __
  /   _____//  |______ _______  _________ _/  |_  ____
  \_____  \\   __\__  \\_  __ \/ ___\__  \\   __\/ __ \
  /        \|  |  / __ \|  | \/ /_/  &amp;gt; __ \|  | \  ___/
 /_______  /|__| (____  /__|  \___  (____  /__|  \___  &amp;gt;
        \/           \/     /_____/     \/          \/
 ________
 \______ \   ____   _____   ____
  |    |  \_/ __ \ /     \ /  _ \
  |    `   \  ___/|  Y Y  (  &amp;lt;_&amp;gt; )
 /_______  /\___  &amp;gt;__|_|  /\____/
         \/     \/      \/

 DataStax Developer Advocate team

Starting StargateDemoApplication using Java 11.0.10 on
No active profile set, falling back to default profiles: default
+ Load Environment Variables
+ Load Builder parameters
+ HttpClient Initialized
+ API(s) Devops is [ENABLED]
+ Load Secure Connect: /home/gitpod/.astra/secure_connect_bundle_58a2e502-fccf-4524-ac22-e59277e63edc.zip
+ CQL Credentials: ${clientId}${/clientSecret}
+ API(s) Document is [ENABLED] https://58a2e502-fccf-4524-ac22-e59277e63edc-us-east-1.apps.astra.datastax.com/api/rest
+ API(s) REST Data is [ENABLED] https://58a2e502-fccf-4524-ac22-e59277e63edc-us-east-1.apps.astra.datastax.com/api/rest
+ API(s) GraphQL [ENABLED] https://58a2e502-fccf-4524-ac22-e59277e63edc-us-east-1.apps.astra.datastax.com/api/graphql
+ API(s) Cql is [ENABLED]
+ Keyspace stargate
[StargateClient] has been initialized
[AstraClient] has been initialized.
[THYMELEAF][restartedMain] Template Mode &#39;XHTML&#39; is deprecated. Using Template Mode &#39;HTML&#39; instead.
Started StargateDemoApplication in 7.883 seconds (JVM running for 8.497)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/gitpod-06-start.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 9b: Open a new terminal in gitpod&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The application is running on our first terminal. To enter new commands please create a new terminal in gitpod.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/new-terminal.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 9c: Open the application&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Are you ready? Now is the time to play the demo.&lt;/p&gt; 
&lt;p&gt;It is better to use a dedicated TAB in the browser to open the application in full screen. Use this command to show the URL.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gp url 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have the link in the terminal gitpod, it&#39;s a lot easier to create a new tab by clicking &lt;code&gt;Follow link&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/follow-link.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 9d: Play the demo&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click the Stargate logo, the music starts if it did not start automatically&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/demo-home.png?raw=true&quot; alt=&quot;SplashScreen&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Click on the planet name you want to reach here &lt;code&gt;CHULAK&lt;/code&gt; the coordinates are not entered in the Stargate.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click on one orange &lt;code&gt;chrevron&lt;/code&gt; in the order to make the wheel start spinning. Click the chevrons one after the other to simulate the dialing. As soon as all chevrons are engaged the vortex will open.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/demo-home-2.png?raw=true&quot; alt=&quot;SplashScreen&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Activate the rest of the chevrons to open the stargate...Buckle up !&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/demo-home-3.png?raw=true&quot; alt=&quot;SplashScreen&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Congratulations you Played the demo !&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/demo.gif?raw=true&quot; alt=&quot;demo&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;10. Using Stargate Rest API&lt;/h2&gt; 
&lt;p&gt;The gateway &lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/stargate.io&quot;&gt;Stargate&lt;/a&gt; allows you to execute the operations through a REST API. Let&#39;s list the chevrons.&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 10a: Open swagger&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In a terminal that is not running the demo enter the command in order to open the swagger UI from Astra (URL has been built based on the values you entered in &lt;code&gt;application.yaml&lt;/code&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;/workspace/workshop-spring-stargate/open-swagger.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Script output&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/open-swagger.png?raw=true&quot; alt=&quot;SplashScreen&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;👁️ Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/gitpod-07-swagger.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 10b: List Chevrons&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the Swagger UI page locate the blue line &lt;code&gt;/v1/keyspaces/{keyspaceName}/tables/{tableName}/rows&lt;/code&gt; in the block &lt;code&gt;DATA&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/restapi-retrieve-rows.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Click the button &lt;code&gt;Try it Out&lt;/code&gt; on the top right hand corner.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enter the following values&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;FIELD&lt;/th&gt; 
   &lt;th&gt;VALUE&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;X-Cassandra-Token&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AstraCS....&lt;/code&gt; (&lt;em&gt;your token&lt;/em&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;keyspaceName&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;stargate&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;tableName&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;chevrons&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;pageSize&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;let it blank&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;pageState&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;let it blank&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click the button &lt;code&gt;Execute&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/restapi-retrieve-rows-2.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;11. Using Stargate Document API&lt;/h2&gt; 
&lt;p&gt;The REST API covers the same features as the CQL interface and you need to know your schema.&lt;/p&gt; 
&lt;p&gt;Stargate also provide a way to insert &lt;strong&gt;schemaless&lt;/strong&gt; JSON Document as you would do with a document oriented datbase, you are welcomed.&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 11a: Create a document&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Locate &lt;code&gt; ​/v2​/namespaces​/{namespace-id}​/collections​/{collection-id} Create a new document&lt;/code&gt; in the block &lt;code&gt;DOCUMENT&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the button &lt;code&gt;Try it Out&lt;/code&gt; on the top right hand corner.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enter the following values&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;FIELD&lt;/th&gt; 
   &lt;th&gt;VALUE&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;X-Cassandra-Token&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AstraCS....&lt;/code&gt; (&lt;em&gt;your token&lt;/em&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;namespace-id&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;stargate&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;collection-id&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sampledoc&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;pageSize&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;let it blank&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;body&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;videoid&quot;: &quot;e466f561-4ea4-4eb7-8dcc-126e0fbfd573&quot;,
  &quot;email&quot;: &quot;clunven@sample.com&quot;,
  &quot;title&quot;: &quot;A video&quot;,
  &quot;upload&quot;: &quot;2020-02-26 15:09:22 +00:00&quot;,
  &quot;url&quot;: &quot;http://google.fr&quot;,
  &quot;frames&quot;: [1, 2, 3, 4],
  &quot;tags&quot;: [&quot;cassandra&quot;, &quot;accelerate&quot;, &quot;2020&quot;],
  &quot;formats&quot;: {
    &quot;mp4&quot;: { &quot;width&quot;: 1, &quot;height&quot;: 1 },
    &quot;ogg&quot;: { &quot;width&quot;: 1, &quot;height&quot;: 1 }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Expected output&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/docapi-createdoc.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click the button &lt;code&gt;Execute&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The api will create a new table for the collection and insert the JSON document. A new unique identifier is generated and returned as &lt;code&gt;documentId&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Expected output&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/docapi-createdoc-2.png?raw=true&quot; alt=&quot;gitpod&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;12. Walkthrough SDK&lt;/h2&gt; 
&lt;p&gt;Well you had an overview about the APIs exposed by Stargate. There is also a &lt;a href=&quot;https://docs.datastax.com/en/astra/docs/using-the-astra-graphql-api.html&quot;&gt;GraphQL API if you want to know more&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A SDK or &lt;em&gt;Software Developement Kit&lt;/em&gt; is used here to ease the usage of each API. It is also the one creating a bean &lt;code&gt;CqlSession&lt;/code&gt; that will be used with Spring Data Cassandra as is.&lt;/p&gt; 
&lt;p&gt;The Astra SDK has been installed with a single starter dependency. More information is &lt;a href=&quot;https://github.com/datastax/astra-sdk-java/wiki&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.datastax.astra&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;astra-spring-boot-starter&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;0.1.14&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 12a: Using devops API with SDK&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In a gitpod terminal use Maven to execute a unit test illustrating the usage of the &lt;code&gt;Devops API&lt;/code&gt; from the SDK.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /workspace/workshop-spring-stargate/stargate-demo
mvn test -Dtest=com.datastax.demo.stargate.Ex4_SdkDevopsApi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Expected Output&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;13:48:16.753 INFO  com.datastax.demo.stargate.Ex4_SdkDevopsApi   : Started Ex4_SdkDevopsApi in 6.184 seconds (JVM running for 7.136)
Database &#39;workshops&#39;
+ id=3c7fc647-c03b-4a0c-aa6b-a00dd677ac53
+ region=eu-central-1
+ keyspace=stargate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 12b: Using REST API with SDK&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In a gitpod terminal use Maven to execute a unit test illustrating the usage of the &lt;code&gt;REST API&lt;/code&gt; from the SDK.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mvn test -Dtest=com.datastax.demo.stargate.Ex5_SdkRestApi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Expected Output&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;13:47:38.123 INFO  com.datastax.demo.stargate.Ex5_SdkRestApi     : Started Ex5_SdkRestApi in 6.375 seconds (JVM running for 7.375)
Earth
Crater
Virgo
Bootes
Centaurus
Libra
Serpenscaput
Norma
Scorpio
Cra
Scutum
Sagitarus
Aquila
Mic
Capricorn
Piscesaustrinus
Equuleus
Aquarius
Pegasus
Sculptor
13:47:41.173 INFO  com.datastax.stargate.sdk.StargateClient      : Closing CqlSession.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;✅ &lt;strong&gt;Step 12c: Using DOC API with SDK&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In a gitpod terminal use Maven to execute a unit test illustrating the usage of the &lt;code&gt;DOC API&lt;/code&gt; from the SDK.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mvn test -Dtest=com.datastax.demo.stargate.Ex6_SdkDocApi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Expected Output&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;13:46:43.360 INFO  com.datastax.demo.stargate.Ex6_SdkDocApi      : Started Ex6_SdkDocApi in 5.935 seconds (JVM running for 6.887)
Document:
+ id=063d3fe9-8ec0-4b9b-887a-90da52ee0f51
+ email= clunven@sample.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;13. Homeworks&lt;/h2&gt; 
&lt;img src=&quot;https://github.com/datastaxdevs/workshop-spring-stargate/raw/main/images/tutorials/badge.png?raw=true&quot; width=&quot;200&quot; align=&quot;right&quot;&gt; 
&lt;p&gt;Don&#39;t forget to complete your upgrade and get your verified skill badge! Finish and submit your homework!&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Complete the practice steps from this repository as described above. Make screenshots alongside the steps&lt;/li&gt; 
 &lt;li&gt;Learn more about spring in the &lt;a href=&quot;https://www.datastax.com/dev/spring&quot;&gt;course&lt;/a&gt; and complete scenario &lt;code&gt;Build a Spring Boot REST Service&lt;/code&gt; at the bottom of the page and make a screenshot of the &quot;congratulations&quot; page.&lt;/li&gt; 
 &lt;li&gt;Submit your homework &lt;a href=&quot;https://github.com/datastaxdevs/workshop-spring-stargate/issues/new?assignees=HadesArchitect&amp;amp;labels=homework%2Cpending&amp;amp;template=homework-assignment.md&amp;amp;title=%5BHW%5D+%3CNAME%3E&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;That&#39;s it, you are done! Expect an email next week!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/#table-of-content&quot;&gt;🏠 Back to Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;14. The END&lt;/h2&gt; 
&lt;p&gt;Congratulations, your made it to the END of the show.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;💚 Share the love&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/sharer/sharer.php?u=https://github.com/datastaxdevs/workshop-spring-stargate&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/share-facebook.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://github.com/datastaxdevs/workshop-spring-stargate&amp;amp;text=I attended a wonderful workshop today , thank you @Datastax, @clunven, @sonicdmg&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials//share-twitter.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/shareArticle?mini=true&amp;amp;url=https://github.com/datastaxdevs/workshop-spring-stargate&amp;amp;title=&amp;amp;summary=I attended a wonderful workshop today , thank you @Datastax, @clunven, @sonicdmg&amp;amp;source=&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/share-linkedin.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🧑🏻‍🤝‍🧑🏽 Let&#39;s get in touch&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/david.png&quot; alt=&quot;B&quot;&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/cedrick.png&quot; alt=&quot;B&quot;&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;David Gilardi &lt;br&gt;&lt;a href=&quot;https://github.com/SonicDMG&quot;&gt;@SonicDMG&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Cedrick Lunven&lt;br&gt;&lt;a href=&quot;https://github.com/clun&quot;&gt;@clun&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/datastaxdevs/workshop-spring-stargate/main/images/tutorials/thankyou.gif&quot; alt=&quot;thankyou&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>node-fetch/node-fetch</title>
      <link>https://github.com/node-fetch/node-fetch</link>
      <description>&lt;p&gt;A light-weight module that brings the Fetch API to Node.js&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/media/Banner.svg?sanitize=true&quot; alt=&quot;Node Fetch&quot;&gt; 
 &lt;br&gt; 
 &lt;p&gt;A light-weight module that brings &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt; to Node.js.&lt;/p&gt; 
 &lt;a href=&quot;https://github.com/node-fetch/node-fetch/actions&quot;&gt;&lt;img src=&quot;https://github.com/node-fetch/node-fetch/workflows/CI/badge.svg?branch=master&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://coveralls.io/github/node-fetch/node-fetch&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/github/node-fetch/node-fetch&quot; alt=&quot;Coverage status&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://packagephobia.now.sh/result?p=node-fetch&quot;&gt;&lt;img src=&quot;https://badgen.net/packagephobia/install/node-fetch&quot; alt=&quot;Current version&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://www.npmjs.com/package/node-fetch&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/node-fetch&quot; alt=&quot;Install size&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/sindresorhus/awesome-nodejs&quot;&gt;&lt;img src=&quot;https://awesome.re/mentioned-badge.svg?sanitize=true&quot; alt=&quot;Mentioned in Awesome Node.js&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://discord.gg/Zxbndcm&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/619915844268326952?color=%237289DA&amp;amp;label=Discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;b&gt;Consider supporting us on our Open Collective:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://opencollective.com/node-fetch&quot;&gt;&lt;img src=&quot;https://opencollective.com/node-fetch/donate/button.png?color=blue&quot; alt=&quot;Open Collective&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;You might be looking for the &lt;a href=&quot;https://github.com/node-fetch/node-fetch/tree/2.x#readme&quot;&gt;v2 docs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;!-- TOC --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#motivation&quot;&gt;Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#difference-from-client-side-fetch&quot;&gt;Difference from client-side fetch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#loading-and-configuring-the-module&quot;&gt;Loading and configuring the module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#upgrading&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#common-usage&quot;&gt;Common Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#plain-text-or-html&quot;&gt;Plain text or HTML&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#json&quot;&gt;JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#simple-post&quot;&gt;Simple Post&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#post-with-json&quot;&gt;Post with JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#post-with-form-parameters&quot;&gt;Post with form parameters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#handling-exceptions&quot;&gt;Handling exceptions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#handling-client-and-server-errors&quot;&gt;Handling client and server errors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#handling-cookies&quot;&gt;Handling cookies&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#advanced-usage&quot;&gt;Advanced Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#streams&quot;&gt;Streams&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#accessing-headers-and-other-meta-data&quot;&gt;Accessing Headers and other Meta data&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#extract-set-cookie-header&quot;&gt;Extract Set-Cookie Header&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#post-data-using-a-file-stream&quot;&gt;Post data using a file stream&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#post-with-form-data-detect-multipart&quot;&gt;Post with form-data (detect multipart)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#request-cancellation-with-abortsignal&quot;&gt;Request cancellation with AbortSignal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#api&quot;&gt;API&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#fetchurl-options&quot;&gt;fetch(url[, options])&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#options&quot;&gt;Options&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#default-headers&quot;&gt;Default Headers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#custom-agent&quot;&gt;Custom Agent&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#custom-highwatermark&quot;&gt;Custom highWaterMark&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#insecure-http-parser&quot;&gt;Insecure HTTP Parser&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-request&quot;&gt;Class: Request&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#new-requestinput-options&quot;&gt;new Request(input[, options])&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-response&quot;&gt;Class: Response&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#new-responsebody-options&quot;&gt;new Response([body[, options]])&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#responseok&quot;&gt;response.ok&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#responseredirected&quot;&gt;response.redirected&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#responsetype&quot;&gt;response.type&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-headers&quot;&gt;Class: Headers&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#new-headersinit&quot;&gt;new Headers([init])&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#interface-body&quot;&gt;Interface: Body&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodybody&quot;&gt;body.body&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodybodyused&quot;&gt;body.bodyUsed&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodyarraybuffer&quot;&gt;body.arrayBuffer()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodyblob&quot;&gt;body.blob()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodyjson&quot;&gt;body.json()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodytext&quot;&gt;body.text()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodybuffer&quot;&gt;body.buffer()&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-fetcherror&quot;&gt;Class: FetchError&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-aborterror&quot;&gt;Class: AbortError&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#typescript&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#acknowledgement&quot;&gt;Acknowledgement&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#team&quot;&gt;Team&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#former&quot;&gt;Former&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;Instead of implementing &lt;code&gt;XMLHttpRequest&lt;/code&gt; in Node.js to run browser-specific &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;Fetch polyfill&lt;/a&gt;, why not go from native &lt;code&gt;http&lt;/code&gt; to &lt;code&gt;fetch&lt;/code&gt; API directly? Hence, &lt;code&gt;node-fetch&lt;/code&gt;, minimal code for a &lt;code&gt;window.fetch&lt;/code&gt; compatible API on Node.js runtime.&lt;/p&gt; 
&lt;p&gt;See Jason Miller&#39;s &lt;a href=&quot;https://www.npmjs.com/package/isomorphic-unfetch&quot;&gt;isomorphic-unfetch&lt;/a&gt; or Leonardo Quixada&#39;s &lt;a href=&quot;https://github.com/lquixada/cross-fetch&quot;&gt;cross-fetch&lt;/a&gt; for isomorphic usage (exports &lt;code&gt;node-fetch&lt;/code&gt; for server-side, &lt;code&gt;whatwg-fetch&lt;/code&gt; for client-side).&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stay consistent with &lt;code&gt;window.fetch&lt;/code&gt; API.&lt;/li&gt; 
 &lt;li&gt;Make conscious trade-off when following &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;WHATWG fetch spec&lt;/a&gt; and &lt;a href=&quot;https://streams.spec.whatwg.org/&quot;&gt;stream spec&lt;/a&gt; implementation details, document known differences.&lt;/li&gt; 
 &lt;li&gt;Use native promise and async functions.&lt;/li&gt; 
 &lt;li&gt;Use native Node streams for body, on both request and response.&lt;/li&gt; 
 &lt;li&gt;Decode content encoding (gzip/deflate/brotli) properly, and convert string output (such as &lt;code&gt;res.text()&lt;/code&gt; and &lt;code&gt;res.json()&lt;/code&gt;) to UTF-8 automatically.&lt;/li&gt; 
 &lt;li&gt;Useful extensions such as redirect limit, response size limit, &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/docs/ERROR-HANDLING.md&quot;&gt;explicit errors&lt;/a&gt; for troubleshooting.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Difference from client-side fetch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See known differences: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/v3-LIMITS.md&quot;&gt;As of v3.x&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/v2-LIMITS.md&quot;&gt;As of v2.x&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If you happen to use a missing feature that &lt;code&gt;window.fetch&lt;/code&gt; offers, feel free to open an issue.&lt;/li&gt; 
 &lt;li&gt;Pull requests are welcomed too!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Current stable release (&lt;code&gt;3.x&lt;/code&gt;) requires at least Node.js 12.20.0.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install node-fetch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Loading and configuring the module&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to patch the global object in node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

if (!globalThis.fetch) {
	globalThis.fetch = fetch;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;node-fetch&lt;/code&gt; is an ESM-only module - you are not able to import it with &lt;code&gt;require&lt;/code&gt;. We recommend you stay on v2 which is built with CommonJS unless you use ESM yourself. We will continue to publish critical bug fixes for it.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can use the async &lt;code&gt;import()&lt;/code&gt; function from CommonJS to load &lt;code&gt;node-fetch&lt;/code&gt; asynchronously:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// mod.cjs
const fetch = (...args) =&amp;gt; import(&#39;node-fetch&#39;).then(({default: fetch}) =&amp;gt; fetch(...args));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;Using an old version of node-fetch? Check out the following files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/v3-UPGRADE-GUIDE.md&quot;&gt;2.x to 3.x upgrade guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/v2-UPGRADE-GUIDE.md&quot;&gt;1.x to 2.x upgrade guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Common Usage&lt;/h2&gt; 
&lt;p&gt;NOTE: The documentation below is up-to-date with &lt;code&gt;3.x&lt;/code&gt; releases, if you are using an older version, please check how to &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#upgrading&quot;&gt;upgrade&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Plain text or HTML&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://github.com/&#39;);
const body = await response.text();

console.log(body);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JSON&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://api.github.com/users/github&#39;);
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Simple Post&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://httpbin.org/post&#39;, {method: &#39;POST&#39;, body: &#39;a=1&#39;});
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Post with JSON&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const body = {a: 1};

const response = await fetch(&#39;https://httpbin.org/post&#39;, {
	method: &#39;post&#39;,
	body: JSON.stringify(body),
	headers: {&#39;Content-Type&#39;: &#39;application/json&#39;}
});
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Post with form parameters&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;URLSearchParams&lt;/code&gt; is available on the global object in Node.js as of v10.0.0. See &lt;a href=&quot;https://nodejs.org/api/url.html#url_class_urlsearchparams&quot;&gt;official documentation&lt;/a&gt; for more usage methods.&lt;/p&gt; 
&lt;p&gt;NOTE: The &lt;code&gt;Content-Type&lt;/code&gt; header is only set automatically to &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; when an instance of &lt;code&gt;URLSearchParams&lt;/code&gt; is given as such:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const params = new URLSearchParams();
params.append(&#39;a&#39;, 1);

const response = await fetch(&#39;https://httpbin.org/post&#39;, {method: &#39;POST&#39;, body: params});
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Handling exceptions&lt;/h3&gt; 
&lt;p&gt;NOTE: 3xx-5xx responses are &lt;em&gt;NOT&lt;/em&gt; exceptions, and should be handled in &lt;code&gt;then()&lt;/code&gt;, see the next section.&lt;/p&gt; 
&lt;p&gt;Wrapping the fetch function into a &lt;code&gt;try/catch&lt;/code&gt; block will catch &lt;em&gt;all&lt;/em&gt; exceptions, such as errors originating from node core libraries, like network errors, and operational errors which are instances of FetchError. See the &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/docs/ERROR-HANDLING.md&quot;&gt;error handling document&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

try {
	await fetch(&#39;https://domain.invalid/&#39;);
} catch (error) {
	console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Handling client and server errors&lt;/h3&gt; 
&lt;p&gt;It is common to create a helper function to check that the response contains no client (4xx) or server (5xx) error responses:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

class HTTPResponseError extends Error {
	constructor(response, ...args) {
		this.response = response;
		super(`HTTP Error Response: ${response.status} ${response.statusText}`, ...args);
	}
}

const checkStatus = response =&amp;gt; {
	if (response.ok) {
		// response.status &amp;gt;= 200 &amp;amp;&amp;amp; response.status &amp;lt; 300
		return response;
	} else {
		throw new HTTPResponseError(response);
	}
}

const response = await fetch(&#39;https://httpbin.org/status/400&#39;);

try {
	checkStatus(response);
} catch (error) {
	console.error(error);

	const errorBody = await error.response.text();
	console.error(`Error body: ${errorBody}`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Handling cookies&lt;/h3&gt; 
&lt;p&gt;Cookies are not stored by default. However, cookies can be extracted and passed by manipulating request and response headers. See &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#extract-set-cookie-header&quot;&gt;Extract Set-Cookie Header&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;h3&gt;Streams&lt;/h3&gt; 
&lt;p&gt;The &quot;Node.js way&quot; is to use streams when possible. You can pipe &lt;code&gt;res.body&lt;/code&gt; to another stream. This example uses &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_stream_pipeline_streams_callback&quot;&gt;stream.pipeline&lt;/a&gt; to attach stream error handlers and wait for the download to complete.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {createWriteStream} from &#39;fs&#39;;
import {pipeline} from &#39;stream&#39;;
import {promisify} from &#39;util&#39;
import fetch from &#39;node-fetch&#39;;

const streamPipeline = promisify(pipeline);

const response = await fetch(&#39;https://assets-cdn.github.com/images/modules/logos_page/Octocat.png&#39;);

if (!response.ok) throw new Error(`unexpected response ${response.statusText}`);

await streamPipeline(response.body, createWriteStream(&#39;./octocat.png&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Node.js 14 you can also use async iterators to read &lt;code&gt;body&lt;/code&gt;; however, be careful to catch errors -- the longer a response runs, the more likely it is to encounter an error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://httpbin.org/stream/3&#39;);

try {
	for await (const chunk of response.body) {
		console.dir(JSON.parse(chunk.toString()));
	}
} catch (err) {
	console.error(err.stack);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Node.js 12 you can also use async iterators to read &lt;code&gt;body&lt;/code&gt;; however, async iterators with streams did not mature until Node.js 14, so you need to do some extra work to ensure you handle errors directly from the stream and wait on it response to fully close.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const read = async body =&amp;gt; {
	let error;
	body.on(&#39;error&#39;, err =&amp;gt; {
		error = err;
	});

	for await (const chunk of body) {
		console.dir(JSON.parse(chunk.toString()));
	}

	return new Promise((resolve, reject) =&amp;gt; {
		body.on(&#39;close&#39;, () =&amp;gt; {
			error ? reject(error) : resolve();
		});
	});
};

try {
	const response = await fetch(&#39;https://httpbin.org/stream/3&#39;);
	await read(response.body);
} catch (err) {
	console.error(err.stack);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Buffer&lt;/h3&gt; 
&lt;p&gt;If you prefer to cache binary data in full, use buffer(). (NOTE: buffer() is a &lt;code&gt;node-fetch&lt;/code&gt; only API)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;
import fileType from &#39;file-type&#39;;

const response = await fetch(&#39;https://octodex.github.com/images/Fintechtocat.png&#39;);
const buffer = await response.buffer();
const type = await fileType.fromBuffer(buffer)

console.log(type);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Accessing Headers and other Meta data&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://github.com/&#39;);

console.log(response.ok);
console.log(response.status);
console.log(response.statusText);
console.log(response.headers.raw());
console.log(response.headers.get(&#39;content-type&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extract Set-Cookie Header&lt;/h3&gt; 
&lt;p&gt;Unlike browsers, you can access raw &lt;code&gt;Set-Cookie&lt;/code&gt; headers manually using &lt;code&gt;Headers.raw()&lt;/code&gt;. This is a &lt;code&gt;node-fetch&lt;/code&gt; only API.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://example.com&#39;);

// Returns an array of values, instead of a string of comma-separated values
console.log(response.headers.raw()[&#39;set-cookie&#39;]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Post data using a file stream&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {createReadStream} from &#39;fs&#39;;
import fetch from &#39;node-fetch&#39;;

const stream = createReadStream(&#39;input.txt&#39;);

const response = await fetch(&#39;https://httpbin.org/post&#39;, {method: &#39;POST&#39;, body: stream});
const data = await response.json();

console.log(data)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;node-fetch also supports spec-compliant FormData implementations such as &lt;a href=&quot;https://www.npmjs.com/package/formdata-polyfill&quot;&gt;formdata-polyfill&lt;/a&gt; and &lt;a href=&quot;https://github.com/octet-stream/form-data&quot;&gt;formdata-node&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;
import {FormData} from &#39;formdata-polyfill/esm-min.js&#39;;
// Alternative package:
import {FormData} from &#39;formdata-node&#39;;

const form = new FormData();
form.set(&#39;greeting&#39;, &#39;Hello, world!&#39;);

const response = await fetch(&#39;https://httpbin.org/post&#39;, {method: &#39;POST&#39;, body: form});
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;node-fetch also support form-data but it&#39;s now discouraged due to not being spec-compliant and needs workarounds to function - which we hope to remove one day&lt;/p&gt; 
&lt;h3&gt;Request cancellation with AbortSignal&lt;/h3&gt; 
&lt;p&gt;You may cancel requests with &lt;code&gt;AbortController&lt;/code&gt;. A suggested implementation is &lt;a href=&quot;https://www.npmjs.com/package/abort-controller&quot;&gt;&lt;code&gt;abort-controller&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;An example of timing out a request after 150ms could be achieved as the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;
import AbortController from &#39;abort-controller&#39;;

const controller = new AbortController();
const timeout = setTimeout(() =&amp;gt; {
	controller.abort();
}, 150);

try {
	const response = await fetch(&#39;https://example.com&#39;, {signal: controller.signal});
	const data = await response.json();
} catch (error) {
	if (error instanceof fetch.AbortError) {
		console.log(&#39;request was aborted&#39;);
	}
} finally {
	clearTimeout(timeout);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/test/&quot;&gt;test cases&lt;/a&gt; for more examples.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;fetch(url[, options])&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;url&lt;/code&gt; A string representing the URL for fetching&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;options&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#fetch-options&quot;&gt;Options&lt;/a&gt; for the HTTP(S) request&lt;/li&gt; 
 &lt;li&gt;Returns: &lt;code&gt;Promise&amp;lt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-response&quot;&gt;Response&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Perform an HTTP(S) fetch.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; should be an absolute url, such as &lt;code&gt;https://example.com/&lt;/code&gt;. A path-relative URL (&lt;code&gt;/file/under/root&lt;/code&gt;) or protocol-relative URL (&lt;code&gt;//can-be-http-or-https.com/&lt;/code&gt;) will result in a rejected &lt;code&gt;Promise&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;fetch-options&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;The default values are shown after each option key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
	// These properties are part of the Fetch Standard
	method: &#39;GET&#39;,
	headers: {},            // Request headers. format is the identical to that accepted by the Headers constructor (see below)
	body: null,             // Request body. can be null, a string, a Buffer, a Blob, or a Node.js Readable stream
	redirect: &#39;follow&#39;,     // Set to `manual` to extract redirect headers, `error` to reject redirect
	signal: null,           // Pass an instance of AbortSignal to optionally abort requests

	// The following properties are node-fetch extensions
	follow: 20,             // maximum redirect count. 0 to not follow redirect
	compress: true,         // support gzip/deflate content encoding. false to disable
	size: 0,                // maximum response body size in bytes. 0 to disable
	agent: null,            // http(s).Agent instance or function that returns an instance (see below)
	highWaterMark: 16384,   // the maximum number of bytes to store in the internal buffer before ceasing to read from the underlying resource.
	insecureHTTPParser: false	// Use an insecure HTTP parser that accepts invalid HTTP headers when `true`.
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Default Headers&lt;/h4&gt; 
&lt;p&gt;If no values are set, the following request headers will be sent automatically:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Header&lt;/th&gt; 
   &lt;th&gt;Value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Accept-Encoding&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;gzip,deflate,br&lt;/code&gt; &lt;em&gt;(when &lt;code&gt;options.compress === true&lt;/code&gt;)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*/*&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;close&lt;/code&gt; &lt;em&gt;(when no &lt;code&gt;options.agent&lt;/code&gt; is present)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;(automatically calculated, if possible)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;chunked&lt;/code&gt; &lt;em&gt;(when &lt;code&gt;req.body&lt;/code&gt; is a stream)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;node-fetch&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Note: when &lt;code&gt;body&lt;/code&gt; is a &lt;code&gt;Stream&lt;/code&gt;, &lt;code&gt;Content-Length&lt;/code&gt; is not set automatically.&lt;/p&gt; 
&lt;h4&gt;Custom Agent&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;agent&lt;/code&gt; option allows you to specify networking related options which are out of the scope of Fetch, including and not limited to the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support self-signed certificate&lt;/li&gt; 
 &lt;li&gt;Use only IPv4 or IPv6&lt;/li&gt; 
 &lt;li&gt;Custom DNS Lookup&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://nodejs.org/api/http.html#http_new_agent_options&quot;&gt;&lt;code&gt;http.Agent&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;In addition, the &lt;code&gt;agent&lt;/code&gt; option accepts a function that returns &lt;code&gt;http&lt;/code&gt;(s)&lt;code&gt;.Agent&lt;/code&gt; instance given current &lt;a href=&quot;https://nodejs.org/api/url.html&quot;&gt;URL&lt;/a&gt;, this is useful during a redirection chain across HTTP and HTTPS protocol.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import http from &#39;http&#39;;
import https from &#39;https&#39;;

const httpAgent = new http.Agent({
	keepAlive: true
});
const httpsAgent = new https.Agent({
	keepAlive: true
});

const options = {
	agent: function(_parsedURL) {
		if (_parsedURL.protocol == &#39;http:&#39;) {
			return httpAgent;
		} else {
			return httpsAgent;
		}
	}
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a id=&quot;custom-highWaterMark&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Custom highWaterMark&lt;/h4&gt; 
&lt;p&gt;Stream on Node.js have a smaller internal buffer size (16kB, aka &lt;code&gt;highWaterMark&lt;/code&gt;) from client-side browsers (&amp;gt;1MB, not consistent across browsers). Because of that, when you are writing an isomorphic app and using &lt;code&gt;res.clone()&lt;/code&gt;, it will hang with large response in Node.&lt;/p&gt; 
&lt;p&gt;The recommended way to fix this problem is to resolve cloned response in parallel:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://example.com&#39;);
const r1 = await response.clone();

const results = await Promise.all([response.json(), r1.text()]);

console.log(results[0]);
console.log(results[1]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If for some reason you don&#39;t like the solution above, since &lt;code&gt;3.x&lt;/code&gt; you are able to modify the &lt;code&gt;highWaterMark&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://example.com&#39;, {
	// About 1MB
	highWaterMark: 1024 * 1024
});

const result = await res.clone().buffer();
console.dir(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Insecure HTTP Parser&lt;/h4&gt; 
&lt;p&gt;Passed through to the &lt;code&gt;insecureHTTPParser&lt;/code&gt; option on http(s).request. See &lt;a href=&quot;https://nodejs.org/api/http.html#http_http_request_url_options_callback&quot;&gt;&lt;code&gt;http.request&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-request&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: Request&lt;/h3&gt; 
&lt;p&gt;An HTTP(S) request containing information about URL, method, headers, and the body. This class implements the &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#iface-body&quot;&gt;Body&lt;/a&gt; interface.&lt;/p&gt; 
&lt;p&gt;Due to the nature of Node.js, the following properties are not implemented at this moment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;referrer&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;referrerPolicy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;credentials&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;integrity&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keepalive&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following node-fetch extension properties are provided:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;follow&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;counter&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;highWaterMark&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#fetch-options&quot;&gt;options&lt;/a&gt; for exact meaning of these extensions.&lt;/p&gt; 
&lt;h4&gt;new Request(input[, options])&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;input&lt;/code&gt; A string representing a URL, or another &lt;code&gt;Request&lt;/code&gt; (which will be cloned)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;options&lt;/code&gt; [Options][#fetch-options] for the HTTP(S) request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Constructs a new &lt;code&gt;Request&lt;/code&gt; object. The constructor is identical to that in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/Request&quot;&gt;browser&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In most cases, directly &lt;code&gt;fetch(url, options)&lt;/code&gt; is simpler than creating a &lt;code&gt;Request&lt;/code&gt; object.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-response&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: Response&lt;/h3&gt; 
&lt;p&gt;An HTTP(S) response. This class implements the &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#iface-body&quot;&gt;Body&lt;/a&gt; interface.&lt;/p&gt; 
&lt;p&gt;The following properties are not implemented in node-fetch at this moment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;trailer&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;new Response([body[, options]])&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;body&lt;/code&gt; A &lt;code&gt;String&lt;/code&gt; or &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_readable_streams&quot;&gt;&lt;code&gt;Readable&lt;/code&gt; stream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;options&lt;/code&gt; A &lt;a href=&quot;https://fetch.spec.whatwg.org/#responseinit&quot;&gt;&lt;code&gt;ResponseInit&lt;/code&gt;&lt;/a&gt; options dictionary&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Constructs a new &lt;code&gt;Response&lt;/code&gt; object. The constructor is identical to that in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/Response&quot;&gt;browser&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Because Node.js does not implement service workers (for which this class was designed), one rarely has to construct a &lt;code&gt;Response&lt;/code&gt; directly.&lt;/p&gt; 
&lt;h4&gt;response.ok&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;Convenience property representing if the request ended normally. Will evaluate to true if the response status was greater than or equal to 200 but smaller than 300.&lt;/p&gt; 
&lt;h4&gt;response.redirected&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;Convenience property representing if the request has been redirected at least once. Will evaluate to true if the internal redirect counter is greater than 0.&lt;/p&gt; 
&lt;h4&gt;response.type&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(deviation from spec)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;Convenience property representing the response&#39;s type. node-fetch only supports &lt;code&gt;&#39;default&#39;&lt;/code&gt; and &lt;code&gt;&#39;error&#39;&lt;/code&gt; and does not make use of &lt;a href=&quot;https://fetch.spec.whatwg.org/#concept-filtered-response&quot;&gt;filtered responses&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-headers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: Headers&lt;/h3&gt; 
&lt;p&gt;This class allows manipulating and iterating over a set of HTTP headers. All methods specified in the &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch Standard&lt;/a&gt; are implemented.&lt;/p&gt; 
&lt;h4&gt;new Headers([init])&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;init&lt;/code&gt; Optional argument to pre-fill the &lt;code&gt;Headers&lt;/code&gt; object&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Construct a new &lt;code&gt;Headers&lt;/code&gt; object. &lt;code&gt;init&lt;/code&gt; can be either &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;Headers&lt;/code&gt; object, an key-value map object or any iterable object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Example adapted from https://fetch.spec.whatwg.org/#example-headers-class
import {Headers} from &#39;node-fetch&#39;;

const meta = {
	&#39;Content-Type&#39;: &#39;text/xml&#39;,
	&#39;Breaking-Bad&#39;: &#39;&amp;lt;3&#39;
};
const headers = new Headers(meta);

// The above is equivalent to
const meta = [[&#39;Content-Type&#39;, &#39;text/xml&#39;], [&#39;Breaking-Bad&#39;, &#39;&amp;lt;3&#39;]];
const headers = new Headers(meta);

// You can in fact use any iterable objects, like a Map or even another Headers
const meta = new Map();
meta.set(&#39;Content-Type&#39;, &#39;text/xml&#39;);
meta.set(&#39;Breaking-Bad&#39;, &#39;&amp;lt;3&#39;);
const headers = new Headers(meta);
const copyOfHeaders = new Headers(headers);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a id=&quot;iface-body&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Interface: Body&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Body&lt;/code&gt; is an abstract interface with methods that are applicable to both &lt;code&gt;Request&lt;/code&gt; and &lt;code&gt;Response&lt;/code&gt; classes.&lt;/p&gt; 
&lt;p&gt;The following methods are not yet implemented in node-fetch at this moment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;formData()&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;body.body&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(deviation from spec)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_readable_streams&quot;&gt;&lt;code&gt;Readable&lt;/code&gt; stream&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Data are encapsulated in the &lt;code&gt;Body&lt;/code&gt; object. Note that while the &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch Standard&lt;/a&gt; requires the property to always be a WHATWG &lt;code&gt;ReadableStream&lt;/code&gt;, in node-fetch it is a Node.js &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_readable_streams&quot;&gt;&lt;code&gt;Readable&lt;/code&gt; stream&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;body.bodyUsed&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A boolean property for if this body has been consumed. Per the specs, a consumed body cannot be used again.&lt;/p&gt; 
&lt;h4&gt;body.arrayBuffer()&lt;/h4&gt; 
&lt;h4&gt;body.blob()&lt;/h4&gt; 
&lt;h4&gt;body.json()&lt;/h4&gt; 
&lt;h4&gt;body.text()&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Returns: &lt;code&gt;Promise&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Consume the body and return a promise that will resolve to one of these formats.&lt;/p&gt; 
&lt;h4&gt;body.buffer()&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(node-fetch extension)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Returns: &lt;code&gt;Promise&amp;lt;Buffer&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Consume the body and return a promise that will resolve to a Buffer.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-fetcherror&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: FetchError&lt;/h3&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(node-fetch extension)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;An operational error in the fetching process. See &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/docs/ERROR-HANDLING.md&quot;&gt;ERROR-HANDLING.md&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-aborterror&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: AbortError&lt;/h3&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(node-fetch extension)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;An Error thrown when the request is aborted in response to an &lt;code&gt;AbortSignal&lt;/code&gt;&#39;s &lt;code&gt;abort&lt;/code&gt; event. It has a &lt;code&gt;name&lt;/code&gt; property of &lt;code&gt;AbortError&lt;/code&gt;. See &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/docs/ERROR-HANDLING.md&quot;&gt;ERROR-HANDLING.MD&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;TypeScript&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Since &lt;code&gt;3.x&lt;/code&gt; types are bundled with &lt;code&gt;node-fetch&lt;/code&gt;, so you don&#39;t need to install any additional packages.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For older versions please use the type definitions from &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped&quot;&gt;DefinitelyTyped&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install --save-dev @types/node-fetch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;github/fetch&lt;/a&gt; for providing a solid implementation reference.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/bitinn&quot;&gt;&lt;img src=&quot;https://github.com/bitinn.png?size=100&quot; alt=&quot;David Frank&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/jimmywarting&quot;&gt;&lt;img src=&quot;https://github.com/jimmywarting.png?size=100&quot; alt=&quot;Jimmy Wärting&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/xxczaki&quot;&gt;&lt;img src=&quot;https://github.com/xxczaki.png?size=100&quot; alt=&quot;Antoni Kepinski&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/Richienb&quot;&gt;&lt;img src=&quot;https://github.com/Richienb.png?size=100&quot; alt=&quot;Richie Bendall&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/gr2m&quot;&gt;&lt;img src=&quot;https://github.com/gr2m.png?size=100&quot; alt=&quot;Gregor Martynus&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitinn.net/&quot;&gt;David Frank&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://jimmy.warting.se/&quot;&gt;Jimmy Wärting&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://kepinski.ch&quot;&gt;Antoni Kepinski&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.richie-bendall.ml/&quot;&gt;Richie Bendall&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://twitter.com/gr2m&quot;&gt;Gregor Martynus&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h6&gt;Former&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/timothygu&quot;&gt;Timothy Gu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jkantr&quot;&gt;Jared Kantrowitz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/LICENSE.md&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alvarotrigo/fullPage.js</title>
      <link>https://github.com/alvarotrigo/fullPage.js</link>
      <description>&lt;p&gt;fullPage plugin by Alvaro Trigo. Create full screen pages fast and simple&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fullPage.js&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/alvarotrigo/fullPage.js/master/examples/imgs/intro.png&quot; alt=&quot;preview&quot;&gt; &lt;img src=&quot;https://raw.github.com/alvarotrigo/fullPage.js/master/examples/imgs/compatible.gif?v=2&quot; alt=&quot;compatibility&quot;&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/spanish#fullpagejs&quot;&gt;Español&lt;/a&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/french#fullpagejs&quot;&gt;Français&lt;/a&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/russian#fullpagejs&quot;&gt;Pусский&lt;/a&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs&quot;&gt;中文&lt;/a&gt; | &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/lang/korean#fullpagejs&quot;&gt;한국어&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Available for &lt;a href=&quot;https://github.com/alvarotrigo/vue-fullpage.js&quot;&gt;Vue&lt;/a&gt;, &lt;a href=&quot;https://github.com/alvarotrigo/react-fullpage&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;https://github.com/alvarotrigo/angular-fullpage&quot;&gt;Angular&lt;/a&gt;. &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;img src=&quot;http://img.shields.io/badge/fullPage.js-v3.1.2-brightgreen.svg?sanitize=true&quot; alt=&quot;fullPage.js version&quot;&gt; &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-GPL-blue.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.paypal.me/alvarotrigo/9.95&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/donate-PayPal.me-ff69b4.svg?sanitize=true&quot; alt=&quot;PayPal Donate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/npm/fullpage.js&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/fullpage.js/badge?style=rounded&quot; alt=&quot;jsDelivr Hits&quot;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;strong&gt;|&lt;/strong&gt;&amp;nbsp;&amp;nbsp; &lt;em&gt;7Kb gziped&lt;/em&gt; &amp;nbsp;&amp;nbsp;&lt;strong&gt;|&lt;/strong&gt;&amp;nbsp;&amp;nbsp; &lt;em&gt;Created by &lt;a href=&quot;https://twitter.com/imac2&quot;&gt;@imac2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/&quot;&gt;Demo online&lt;/a&gt; | &lt;a href=&quot;https://codepen.io/alvarotrigo/pen/NxyPPp&quot;&gt;Codepen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-gutenberg/&quot;&gt;Wordpress plugin for Gutenberg&lt;/a&gt; and &lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-elementor/&quot;&gt;WordPress plugin for Elementor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/utils/wordpress.html&quot;&gt;Wordpress theme&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;fullpage.js Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/FAQ---Frequently-Answered-Questions&quot;&gt;Frequently Answered Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;A simple and easy to use library that creates fullscreen scrolling websites (also known as single page websites or onepage sites) and adds landscape sliders inside the sections of the site.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#compatibility&quot;&gt;Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#creating-links-to-sections-or-slides&quot;&gt;Creating links to sections or slides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#creating-smaller-or-bigger-sections&quot;&gt;Creating smaller or bigger sections&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#state-classes-added-by-fullpagejs&quot;&gt;State classes added by fullpage.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#lazy-loading&quot;&gt;Lazy loading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#auto-playpause-embedded-media&quot;&gt;Auto play/pause embedded media&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#use-extensions&quot;&gt;Use extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#options&quot;&gt;Options&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#methods&quot;&gt;Methods&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#callbacks&quot;&gt;Callbacks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#reporting-issues&quot;&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#contributing-to-fullpagejs&quot;&gt;Contributing to fullpage.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#changelog&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#build-tasks&quot;&gt;Build tasks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#who-is-using-fullpagejs&quot;&gt;Who is using fullpage.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#donations&quot;&gt;Donations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#sponsors&quot;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Suggestion are more than welcome, not only for feature requests but also for coding style improvements. Let&#39;s make this a great library to make people&#39;s lives easier!&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;fullPage.js is fully functional on all modern browsers, as well as some old ones such as Internet Explorer 9, Opera 12, etc. It works with browsers with CSS3 support and with the ones which don&#39;t have it, making it ideal for old browsers compatibility. It also provides touch support for mobile phones, tablets and touch screen computers.&lt;/p&gt; 
&lt;p&gt;Special thanks to &lt;a href=&quot;http://www.browserstack.com/&quot;&gt;Browserstack&lt;/a&gt; for supporting fullpage.js.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;h3&gt;Commercial license&lt;/h3&gt; 
&lt;p&gt;If you want to use fullPage to develop non open sourced sites, themes, projects, and applications, the Commercial license is the appropriate license. With this option, your source code is kept proprietary. Which means, you won&#39;t have to change your whole application source code to an open source license. &lt;a href=&quot;https://alvarotrigo.com/fullPage/pricing/&quot;&gt;[Purchase a Fullpage Commercial License]&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Open source license&lt;/h3&gt; 
&lt;p&gt;If you are creating an open source application under a license compatible with the &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU GPL license v3&lt;/a&gt;, you may use fullPage under the terms of the GPLv3.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The credit comments in the JavaScript and CSS files should be kept intact&lt;/strong&gt; (even after combination or minification)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/pricing/&quot;&gt;Read more about fullPage&#39;s license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;As you can see in the example files, you will need to include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The JavaScript file &lt;code&gt;fullpage.js&lt;/code&gt; (or its minified version &lt;code&gt;fullpage.min.js&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;The css file &lt;code&gt;fullpage.css&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Optionally&lt;/strong&gt;, when using &lt;code&gt;css3:false&lt;/code&gt;, you can add the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/vendors/easings.min.js&quot;&gt;easings file&lt;/a&gt; in case you want to use other easing effects apart from the one included in the library (&lt;code&gt;easeInOutCubic&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Install using bower or npm&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Optionally&lt;/strong&gt;, you can install fullPage.js with bower or npm if you prefer:&lt;/p&gt; 
&lt;p&gt;Terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;// With bower
bower install fullpage.js

// With npm
npm install fullpage.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Including files:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;fullpage.css&quot; /&amp;gt;

&amp;lt;!-- This following line is optional. Only necessary if you use the option css3:false and you want to use other easing effects rather than &quot;easeInOutCubic&quot;. --&amp;gt;
&amp;lt;script src=&quot;vendors/easings.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;


&amp;lt;!-- This following line is only necessary in the case of using the option `scrollOverflow:true` --&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;vendors/scrolloverflow.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using Webpack, Browserify or Require.js? Check &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Use-module-loaders-for-fullPage.js&quot;&gt;how to use fullPage.js with module loaders&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Optional use of CDN&lt;/h3&gt; 
&lt;p&gt;If you prefer to use a CDN to load the needed files, fullPage.js is in CDNJS: &lt;a href=&quot;https://cdnjs.com/libraries/fullPage.js&quot;&gt;https://cdnjs.com/libraries/fullPage.js&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Required HTML structure&lt;/h3&gt; 
&lt;p&gt;Start your HTML document with the compulsory &lt;a href=&quot;http://www.corelangs.com/html/introduction/doctype.html&quot;&gt;HTML DOCTYPE declaration&lt;/a&gt; on the 1st line of your HTML code. You might have troubles with sections heights otherwise. The examples provided use HTML 5 doctype &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each section will be defined with an element containing the &lt;code&gt;section&lt;/code&gt; class. The active section by default will be the first section, which is taken as the home page.&lt;/p&gt; 
&lt;p&gt;Sections should be placed inside a wrapper (&lt;code&gt;&amp;lt;div id=&quot;fullpage&quot;&amp;gt;&lt;/code&gt; in this case). The wrapper can not be the &lt;code&gt;body&lt;/code&gt; element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&quot;fullpage&quot;&amp;gt;
	&amp;lt;div class=&quot;section&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;section&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;section&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;section&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to define a different starting point rather than the first section or the first slide of a section, just add the class &lt;code&gt;active&lt;/code&gt; to the section and slide you want to load first.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;section active&quot;&amp;gt;Some section&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to create a landscape slider within a section, each slide will be defined by default with an element containing the &lt;code&gt;slide&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;section&quot;&amp;gt;
	&amp;lt;div class=&quot;slide&quot;&amp;gt; Slide 1 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot;&amp;gt; Slide 2 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot;&amp;gt; Slide 3 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot;&amp;gt; Slide 4 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see a fully working example of the HTML structure in the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/raw/master/examples/simple.html&quot;&gt;&lt;code&gt;simple.html&lt;/code&gt; file&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Initialization&lt;/h3&gt; 
&lt;h4&gt;Initialization with Vanilla Javascript&lt;/h4&gt; 
&lt;p&gt;All you need to do is call fullPage.js before the closing &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	//options here
	autoScrolling:true,
	scrollHorizontally: true
});

//methods
fullpage_api.setAllowScrolling(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Initialization with jQuery&lt;/h4&gt; 
&lt;p&gt;You can use fullpage.js as a jQuery plugin if you want to!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function() {
	$(&#39;#fullpage&#39;).fullpage({
		//options here
		autoScrolling:true,
		scrollHorizontally: true
	});

	//methods
	$.fn.fullpage.setAllowScrolling(false);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Functions and methods can still be called in the jQuery way, as &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/2.9.7&quot;&gt;in fullPage.js v2.X&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Vanilla JS example with all options&lt;/h4&gt; 
&lt;p&gt;A more complex initialization with all options set could look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
var myFullpage = new fullpage(&#39;#fullpage&#39;, {
	//Navigation
	menu: &#39;#menu&#39;,
	lockAnchors: false,
	anchors:[&#39;firstPage&#39;, &#39;secondPage&#39;],
	navigation: false,
	navigationPosition: &#39;right&#39;,
	navigationTooltips: [&#39;firstSlide&#39;, &#39;secondSlide&#39;],
	showActiveTooltip: false,
	slidesNavigation: false,
	slidesNavPosition: &#39;bottom&#39;,

	//Scrolling
	css3: true,
	scrollingSpeed: 700,
	autoScrolling: true,
	fitToSection: true,
	fitToSectionDelay: 1000,
	scrollBar: false,
	easing: &#39;easeInOutCubic&#39;,
	easingcss3: &#39;ease&#39;,
	loopBottom: false,
	loopTop: false,
	loopHorizontal: true,
	continuousVertical: false,
	continuousHorizontal: false,
	scrollHorizontally: false,
	interlockedSlides: false,
	dragAndMove: false,
	offsetSections: false,
	resetSliders: false,
	fadingEffect: false,
	normalScrollElements: &#39;#element1, .element2&#39;,
	scrollOverflow: false,
	scrollOverflowReset: false,
	scrollOverflowOptions: null,
	touchSensitivity: 15,
	bigSectionsDestination: null,

	//Accessibility
	keyboardScrolling: true,
	animateAnchor: true,
	recordHistory: true,

	//Design
	controlArrows: true,
	verticalCentered: true,
	sectionsColor : [&#39;#ccc&#39;, &#39;#fff&#39;],
	paddingTop: &#39;3em&#39;,
	paddingBottom: &#39;10px&#39;,
	fixedElements: &#39;#header, .footer&#39;,
	responsiveWidth: 0,
	responsiveHeight: 0,
	responsiveSlides: false,
	parallax: false,
	parallaxOptions: {type: &#39;reveal&#39;, percentage: 62, property: &#39;translate&#39;},
	dropEffect: false,
	dropEffectOptions: { speed: 2300, color: &#39;#F82F4D&#39;, zIndex: 9999},
	waterEffect: false,
	waterEffectOptions: { animateContent: true, animateOnMouseMove: true},
	cards: false,
	cardsOptions: {perspective: 100, fadeContent: true, fadeBackground: true},

	//Custom selectors
	sectionSelector: &#39;.section&#39;,
	slideSelector: &#39;.slide&#39;,

	lazyLoading: true,

	//events
	onLeave: function(origin, destination, direction){},
	afterLoad: function(origin, destination, direction){},
	afterRender: function(){},
	afterResize: function(width, height){},
	afterReBuild: function(){},
	afterResponsive: function(isResponsive){},
	afterSlideLoad: function(section, origin, destination, direction){},
	onSlideLeave: function(section, origin, destination, direction){}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating links to sections or slides&lt;/h3&gt; 
&lt;p&gt;If you are using fullPage.js with anchor links for the sections (using the &lt;code&gt;anchors&lt;/code&gt; option or the attribute &lt;code&gt;data-anchor&lt;/code&gt; in each section), then you will be able to use anchor links also to navigate directly to a certain slide inside a section.&lt;/p&gt; 
&lt;p&gt;This would be an example of a link with an anchor: &lt;a href=&quot;http://alvarotrigo.com/fullPage/#secondPage/2&quot;&gt;http://alvarotrigo.com/fullPage/#secondPage/2&lt;/a&gt; (which is the URL you will see once you access to that section/slide manually) Notice the last part of the URL ends in &lt;code&gt;#secondPage/2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Having the following initialization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	anchors:[&#39;firstPage&#39;, &#39;secondPage&#39;, &#39;thirdPage&#39;]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The anchor at the end of the URL &lt;code&gt;#secondPage/2&lt;/code&gt; defines the section and slide of destination respectively. In the previous URL, the section of destination will be the one defined with the anchor &lt;code&gt;secondPage&lt;/code&gt; and the slide will be the 2nd slide, as we are using the index &lt;code&gt;2&lt;/code&gt; for it. (the fist slide of a section has index 0, as technically it is a section).&lt;/p&gt; 
&lt;p&gt;We could have used a custom anchor for the slide instead of its index if we would have used the attribute &lt;code&gt;data-anchor&lt;/code&gt; on the HTML markup like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;section&quot;&amp;gt;
	&amp;lt;div class=&quot;slide&quot; data-anchor=&quot;slide1&quot;&amp;gt; Slide 1 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot; data-anchor=&quot;slide2&quot;&amp;gt; Slide 2 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot; data-anchor=&quot;slide3&quot;&amp;gt; Slide 3 &amp;lt;/div&amp;gt;
	&amp;lt;div class=&quot;slide&quot; data-anchor=&quot;slide4&quot;&amp;gt; Slide 4 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this last case, the URL we would use would be &lt;code&gt;#secondPage/slide3&lt;/code&gt;, which is the equivalent to our previous &lt;code&gt;#secondPage/2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that section anchors can also be defined in the same way, by using the &lt;code&gt;data-anchor&lt;/code&gt; attribute, if no &lt;code&gt;anchors&lt;/code&gt; array is provided.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Be careful!&lt;/strong&gt; &lt;code&gt;data-anchor&lt;/code&gt; tags can not have the same value as any ID element on the site (or NAME element for IE).&lt;/p&gt; 
&lt;h3&gt;Creating smaller or bigger sections&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/BKjRYm&quot;&gt;Demo&lt;/a&gt; fullPage.js provides a way to remove the full height restriction from its sections and slides. It is possible to create sections which height is smaller or bigger than the viewport. This is ideal for footers. It is important to realise that it doesn&#39;t make sense to have all of your sections using this feature. If there is more than one section in the initial load of the site, fullPage.js won&#39;t scroll at all to see the next one as it will be already in the viewport.&lt;/p&gt; 
&lt;p&gt;To create smaller sections just use the class &lt;code&gt;fp-auto-height&lt;/code&gt; in the section you want to apply it. It will then take the height defined by your section/slide content.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;section&quot;&amp;gt;Whole viewport&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;section fp-auto-height&quot;&amp;gt;Auto height&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Responsive auto height sections&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://codepen.io/alvarotrigo/pen/MzByMa&quot;&gt;Demo&lt;/a&gt; A responsive auto height can be applied by using the class &lt;code&gt;fp-auto-height-responsive&lt;/code&gt;. This way sections will be fullscreen until the responsive mode gets fired. Then they&#39;ll take the size required by their content, which could be bigger or smaller than the viewport.&lt;/p&gt; 
&lt;h3&gt;State classes added by fullpage.js&lt;/h3&gt; 
&lt;p&gt;Fullpage.js adds multiple classes in different elements to keep a record of the status of the site:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;active&lt;/code&gt; is added the current visible section and slide.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;active&lt;/code&gt; is added to the current menu element (if using the &lt;code&gt;menu&lt;/code&gt; option).&lt;/li&gt; 
 &lt;li&gt;A class of the form &lt;code&gt;fp-viewing-SECTION-SLIDE&lt;/code&gt; is added to the &lt;code&gt;body&lt;/code&gt; element of the site. (eg: &lt;a href=&quot;http://alvarotrigo.com/fullPage/#secondPage&quot;&gt;&lt;code&gt;fp-viewing-secondPage-0&lt;/code&gt;&lt;/a&gt;) The &lt;code&gt;SECTION&lt;/code&gt; and &lt;code&gt;SLIDE&lt;/code&gt; parts will be the anchors (or indexes if no anchor is provided) of the current section and slide.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fp-responsive&lt;/code&gt; is added to the &lt;code&gt;body&lt;/code&gt; element when the entering in the responsive mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fp-enabled&lt;/code&gt; is added to the &lt;code&gt;html&lt;/code&gt; element when fullpage.js is enabled. (and removed when destroyed).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fp-destroyed&lt;/code&gt; is added to the fullpage.js container when fullPage.js is destroyed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Lazy Loading&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/eNLBXo&quot;&gt;Demo&lt;/a&gt; fullPage.js provides a way to lazy load images, videos and audio elements so they won&#39;t slow down the loading of your site or unnecessarily waste data transfer. When using lazy loading, all these elements will only get loaded when entering in the viewport. To enable lazy loading all you need to do is change your &lt;code&gt;src&lt;/code&gt; attribute to &lt;code&gt;data-src&lt;/code&gt; as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;img data-src=&quot;image.png&quot;&amp;gt;
&amp;lt;video&amp;gt;
	&amp;lt;source data-src=&quot;video.webm&quot; type=&quot;video/webm&quot; /&amp;gt;
	&amp;lt;source data-src=&quot;video.mp4&quot; type=&quot;video/mp4&quot; /&amp;gt;
&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you already use another lazy load solution which uses &lt;code&gt;data-src&lt;/code&gt; as well, you can disable the fullPage.js lazy loading by setting the option &lt;code&gt;lazyLoading: false&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Auto play/pause embedded media&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://codepen.io/alvarotrigo/pen/pXEaaK&quot;&gt;Demo&lt;/a&gt; &lt;strong&gt;Note&lt;/strong&gt;: the autoplay feature might not work on some mobile devices depending on the OS and browser (i.e. &lt;a href=&quot;https://webkit.org/blog/6784/new-video-policies-for-ios/&quot;&gt;Safari on iOS&lt;/a&gt; version &amp;lt; 10.0).&lt;/p&gt; 
&lt;h4&gt;Play on section/slide load:&lt;/h4&gt; 
&lt;p&gt;Using the attribute &lt;code&gt;autoplay&lt;/code&gt; for videos or audio, or the param &lt;code&gt;autoplay=1&lt;/code&gt; for youtube iframes will result in the media element playing on page load. In order to play it on section/slide load use instead the attribute &lt;code&gt;data-autoplay&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;audio data-autoplay&amp;gt;
	&amp;lt;source src=&quot;http://metakoncept.hr/horse.ogg&quot; type=&quot;audio/ogg&quot;&amp;gt;
&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Pause on leave&lt;/h4&gt; 
&lt;p&gt;Embedded HTML5 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; and Youtube iframes are automatically paused when you navigate away from a section or slide. This can be disabled by using the attribute &lt;code&gt;data-keepplaying&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;audio data-keepplaying&amp;gt;
	&amp;lt;source src=&quot;http://metakoncept.hr/horse.ogg&quot; type=&quot;audio/ogg&quot;&amp;gt;
&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use extensions&lt;/h3&gt; 
&lt;p&gt;fullpage.js &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;provides a set of extensions&lt;/a&gt; you can use to enhance its default features. All of them are listed as &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#options&quot;&gt;fullpage.js options&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Extensions requires you to use the minified file &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/raw/master/dist/fullpage.extensions.min.js&quot;&gt;&lt;code&gt;fullpage.extensions.min.js&lt;/code&gt;&lt;/a&gt; that is inside the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/tree/master/dist&quot;&gt;&lt;code&gt;dist&lt;/code&gt; folder&lt;/a&gt; instead of the usual fullPage.js file (&lt;code&gt;fullpage.js&lt;/code&gt; or &lt;code&gt;fullpage.min.js&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Once you acquire the extension file, you will need to add it before fullPage. For example, if I want to use the Continuous Horizontal extension, I would have include the extension file and then the extensions version of the fullPage file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.continuousHorizontal.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;fullpage/fullpage.extensions.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An activation key and a license key will be required for each extension. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/How-to-activate-a-fullPage.js-extension&quot;&gt;See more details about it here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Then you will be able to use and configure them as explained in &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#options&quot;&gt;options&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;licenseKey&lt;/code&gt;: (default &lt;code&gt;null&lt;/code&gt;). &lt;strong&gt;This option is compulsory.&lt;/strong&gt; If you use fullPage in a non open source project, then you should use the license key provided on the purchase of the fullPage Commercial License. If your project is open source and it is compatible with the GPLv3 license you can &lt;a href=&quot;https://alvarotrigo.com/fullPage/extensions/requestKey.html&quot;&gt;request a license key&lt;/a&gt;. Please read more about licenses &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#license&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://alvarotrigo.com/fullPage/pricing/&quot;&gt;on the website&lt;/a&gt;. For example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage({
    licenseKey: &#39;YOUR_KEY_HERE&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;v2compatible&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;). Determines whether to make it 100% compatible with any code written for version 2, ignoring new features or api changes of version 3. State classes, callbacks signature etc. will work exactly in the same way as it did on verion 2. &lt;strong&gt;Note that this option will be removed at some point in the future.&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;controlArrows&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Determines whether to use control arrows for the slides to move right or left.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;verticalCentered&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Vertically centering of the content within sections. When set to &lt;code&gt;true&lt;/code&gt;, your content will be wrapped by the library. Consider using delegation or load your other scripts in the &lt;code&gt;afterRender&lt;/code&gt; callback.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollingSpeed&lt;/code&gt;: (default &lt;code&gt;700&lt;/code&gt;) Speed in milliseconds for the scrolling transitions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sectionsColor&lt;/code&gt;: (default &lt;code&gt;none&lt;/code&gt;) Define the CSS &lt;code&gt;background-color&lt;/code&gt; property for each section. Example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	sectionsColor: [&#39;#f2f2f2&#39;, &#39;#4BBFC3&#39;, &#39;#7BAABE&#39;, &#39;whitesmoke&#39;, &#39;#000&#39;],
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;anchors&lt;/code&gt;: (default &lt;code&gt;[]&lt;/code&gt;) Defines the anchor links (#example) to be shown on the URL for each section. Anchors value should be unique. The position of the anchors in the array will define to which sections the anchor is applied. (second position for second section and so on). Using anchors forward and backward navigation will also be possible through the browser. This option also allows users to bookmark a specific section or slide. &lt;strong&gt;Be careful!&lt;/strong&gt; anchors can not have the same value as any ID element on the site (or NAME element for IE). Now anchors can be defined directly in the HTML structure by using the attribute &lt;code&gt;data-anchor&lt;/code&gt; as explained here.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;lockAnchors&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Determines whether anchors in the URL will have any effect at all in the library. You can still using anchors internally for your own functions and callbacks, but they won&#39;t have any effect in the scrolling of the site. Useful if you want to combine fullPage.js with other plugins using anchor in the URL.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt; It is helpful to understand that the values in the &lt;code&gt;anchors&lt;/code&gt; option array correlate directly to the element with the class of &lt;code&gt;.section&lt;/code&gt; by it&#39;s position in the markup.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;easing&lt;/code&gt;: (default &lt;code&gt;easeInOutCubic&lt;/code&gt;) Defines the transition effect to use for the vertical and horizontal scrolling. It requires the file &lt;code&gt;vendors/easings.min.js&lt;/code&gt; or &lt;a href=&quot;http://jqueryui.com/&quot;&gt;jQuery UI&lt;/a&gt; for using some of &lt;a href=&quot;http://api.jqueryui.com/easings/&quot;&gt;its transitions&lt;/a&gt;. Other libraries could be used instead.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;easingcss3&lt;/code&gt;: (default &lt;code&gt;ease&lt;/code&gt;) Defines the transition effect to use in case of using &lt;code&gt;css3:true&lt;/code&gt;. You can use the &lt;a href=&quot;http://www.w3schools.com/cssref/css3_pr_transition-timing-function.asp&quot;&gt;pre-defined ones&lt;/a&gt; (such as &lt;code&gt;linear&lt;/code&gt;, &lt;code&gt;ease-out&lt;/code&gt;...) or create your own ones using the &lt;code&gt;cubic-bezier&lt;/code&gt; function. You might want to use &lt;a href=&quot;http://matthewlein.com/ceaser/&quot;&gt;Matthew Lein CSS Easing Animation Tool&lt;/a&gt; for it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;loopTop&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Defines whether scrolling up in the first section should scroll to the last one or not.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;loopBottom&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Defines whether scrolling down in the last section should scroll to the first one or not.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;loopHorizontal&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines whether horizontal sliders will loop after reaching the last or previous slide or not.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;css3&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;). Defines whether to use JavaScript or CSS3 transforms to scroll within sections and slides. Useful to speed up the movement in tablet and mobile devices with browsers supporting CSS3. If this option is set to &lt;code&gt;true&lt;/code&gt; and the browser doesn&#39;t support CSS3, a fallback will be used instead.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;autoScrolling&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines whether to use the &quot;automatic&quot; scrolling or the &quot;normal&quot; one. It also has affects the way the sections fit in the browser/device window in tablets and mobile phones.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;fitToSection&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Determines whether or not to fit sections to the viewport or not. When set to &lt;code&gt;true&lt;/code&gt; the current active section will always fill the whole viewport. Otherwise the user will be free to stop in the middle of a section.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;fitToSectionDelay&lt;/code&gt;: (default 1000). If &lt;code&gt;fitToSection&lt;/code&gt; is set to true, this delays the fitting by the configured milliseconds.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollBar&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Determines whether to use scroll bar for the &lt;strong&gt;vertical sections&lt;/strong&gt; on site or not. In case of using scroll bar, the &lt;code&gt;autoScrolling&lt;/code&gt; functionality will still work as expected. The user will also be free to scroll the site with the scroll bar and fullPage.js will fit the section in the screen when scrolling finishes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;paddingTop&lt;/code&gt;: (default &lt;code&gt;0&lt;/code&gt;) Defines the top padding for each section with a numerical value and its measure (paddingTop: &#39;10px&#39;, paddingTop: &#39;10em&#39;...) Useful in case of using a fixed header.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;paddingBottom&lt;/code&gt;: (default &lt;code&gt;0&lt;/code&gt;) Defines the bottom padding for each section with a numerical value and its measure (paddingBottom: &#39;10px&#39;, paddingBottom: &#39;10em&#39;...). Useful in case of using a fixed footer.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;fixedElements&lt;/code&gt;: (default &lt;code&gt;null&lt;/code&gt;) Defines which elements will be taken off the scrolling structure of the plugin which is necessary when using the &lt;code&gt;css3&lt;/code&gt; option to keep them fixed. It requires a string with the Javascript selectors for those elements. (For example: &lt;code&gt;fixedElements: &#39;#element1, .element2&#39;&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;normalScrollElements&lt;/code&gt;: (default &lt;code&gt;null&lt;/code&gt;) &lt;a href=&quot;https://codepen.io/alvarotrigo/pen/RmVazM&quot;&gt;Demo&lt;/a&gt; If you want to avoid the auto scroll when scrolling over some elements, this is the option you need to use. (useful for maps, scrolling divs etc.) It requires a string with the Javascript selectors for those elements. (For example: &lt;code&gt;normalScrollElements: &#39;#element1, .element2&#39;&lt;/code&gt;). This option should not be applied to any section/slide element itself.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;bigSectionsDestination&lt;/code&gt;: (default &lt;code&gt;null&lt;/code&gt;) &lt;a href=&quot;https://codepen.io/alvarotrigo/pen/vYLdMrx&quot;&gt;Demo&lt;/a&gt; Defines how to scroll to a section which height is bigger than the viewport and when not using &lt;code&gt;scrollOverflow:true&lt;/code&gt;. (Read &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#creating-smaller-or-bigger-sections&quot;&gt;how to create smaller or bigger sections&lt;/a&gt;). By default fullPage.js scrolls to the top if you come from a section above the destination one and to the bottom if you come from a section below the destination one. Possible values are &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keyboardScrolling&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines if the content can be navigated using the keyboard.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;touchSensitivity&lt;/code&gt;: (default &lt;code&gt;5&lt;/code&gt;) Defines a percentage of the browsers window width/height, and how far a swipe must measure for navigating to the next section / slide&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;continuousVertical&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Defines whether scrolling down in the last section should scroll down to the first one and if scrolling up in the first section should scroll up to the last one. Not compatible with &lt;code&gt;loopTop&lt;/code&gt;, &lt;code&gt;loopBottom&lt;/code&gt; or any scroll bar present in the site (&lt;code&gt;scrollBar:true&lt;/code&gt; or &lt;code&gt;autoScrolling:false&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;continuousHorizontal&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether sliding right in the last slide should slide right to the first one or not, and if scrolling left in the first slide should slide left to the last one or not. Not compatible with &lt;code&gt;loopHorizontal&lt;/code&gt;. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollHorizontally&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether to slide horizontally within sliders by using the mouse wheel or trackpad. It can only be used when using: &lt;code&gt;autoScrolling:true&lt;/code&gt;. Ideal for story telling. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;interlockedSlides&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Determines whether moving one horizontal slider will force the sliding of sliders in other section in the same direction. Possible values are &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or an array with the interlocked sections. For example &lt;code&gt;[1,3,5]&lt;/code&gt; starting by 1. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;dragAndMove&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Enables or disables the dragging and flicking of sections and slides by using mouse or fingers. Requires fullpage.js &amp;gt;= 3.0.1. Possible values are:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;true&lt;/code&gt;: enables the feature.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: disables the feature.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;vertical&lt;/code&gt;: enables the feature only vertically.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;horizontal&lt;/code&gt;: enables the feature only horizontally.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;fingersonly&lt;/code&gt;: enables the feature for touch devices only.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;mouseonly&lt;/code&gt;: enables the feature for desktop devices only (mouse and trackpad).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;offsetSections&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;)&lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Provides a way to use non full screen sections based on percentage. Ideal to show visitors there&#39;s more content in the site by showing part of the next or previous section. Requires fullPage.js &amp;gt;= 3.0.1. To define the percentage of each section the attribute &lt;code&gt;data-percentage&lt;/code&gt; must be used. The centering of the section in the viewport can be determined by using a boolean value in the attribute &lt;code&gt;data-centered&lt;/code&gt; (default to &lt;code&gt;true&lt;/code&gt; if not specified). For example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;    &amp;lt;div class=&quot;section&quot; data-percentage=&quot;80&quot; data-centered=&quot;true&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;resetSliders&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;). &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to reset every slider after leaving its section. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;fadingEffect&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;). &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether to use a fading effect or not instead of the default scrolling one. Possible values are &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;sections&lt;/code&gt;, &lt;code&gt;slides&lt;/code&gt;. It can therefore be applied just vertically or horizontally, or to both at the time. It can only be used when using: &lt;code&gt;autoScrolling:true&lt;/code&gt;. Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;animateAnchor&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines whether the load of the site when given an anchor (#) will scroll with animation to its destination or will directly load on the given section.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;recordHistory&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Defines whether to push the state of the site to the browser&#39;s history. When set to &lt;code&gt;true&lt;/code&gt; each section/slide of the site will act as a new page and the back and forward buttons of the browser will scroll the sections/slides to reach the previous or next state of the site. When set to &lt;code&gt;false&lt;/code&gt;, the URL will keep changing but will have no effect on the browser&#39;s history. This option is automatically turned off when using &lt;code&gt;autoScrolling:false&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;menu&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) A selector can be used to specify the menu to link with the sections. This way the scrolling of the sections will activate the corresponding element in the menu using the class &lt;code&gt;active&lt;/code&gt;. This won&#39;t generate a menu but will just add the &lt;code&gt;active&lt;/code&gt; class to the element in the given menu with the corresponding anchor links. In order to link the elements of the menu with the sections, an HTML 5 data-tag (&lt;code&gt;data-menuanchor&lt;/code&gt;) will be needed to use with the same anchor links as used within the sections. Example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;ul id=&quot;myMenu&quot;&amp;gt;
	&amp;lt;li data-menuanchor=&quot;firstPage&quot; class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;#firstPage&quot;&amp;gt;First section&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
	&amp;lt;li data-menuanchor=&quot;secondPage&quot;&amp;gt;&amp;lt;a href=&quot;#secondPage&quot;&amp;gt;Second section&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
	&amp;lt;li data-menuanchor=&quot;thirdPage&quot;&amp;gt;&amp;lt;a href=&quot;#thirdPage&quot;&amp;gt;Third section&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
	&amp;lt;li data-menuanchor=&quot;fourthPage&quot;&amp;gt;&amp;lt;a href=&quot;#fourthPage&quot;&amp;gt;Fourth section&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	anchors: [&#39;firstPage&#39;, &#39;secondPage&#39;, &#39;thirdPage&#39;, &#39;fourthPage&#39;, &#39;lastPage&#39;],
	menu: &#39;#myMenu&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the menu element should be placed outside the fullpage wrapper in order to avoid problem when using &lt;code&gt;css3:true&lt;/code&gt;. Otherwise it will be appended to the &lt;code&gt;body&lt;/code&gt; by the plugin itself.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;navigation&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) If set to &lt;code&gt;true&lt;/code&gt;, it will show a navigation bar made up of small circles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;navigationPosition&lt;/code&gt;: (default &lt;code&gt;none&lt;/code&gt;) It can be set to &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt; and defines which position the navigation bar will be shown (if using one).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;navigationTooltips&lt;/code&gt;: (default []) Defines the tooltips to show for the navigation circles in case they are being used. Example: &lt;code&gt;navigationTooltips: [&#39;firstSlide&#39;, &#39;secondSlide&#39;]&lt;/code&gt;. You can also define them by using the attribute &lt;code&gt;data-tooltip&lt;/code&gt; in each section if you prefer.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;showActiveTooltip&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) Shows a persistent tooltip for the actively viewed section in the vertical navigation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;slidesNavigation&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) If set to &lt;code&gt;true&lt;/code&gt; it will show a navigation bar made up of small circles for each landscape slider on the site.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;slidesNavPosition&lt;/code&gt;: (default &lt;code&gt;bottom&lt;/code&gt;) Defines the position for the landscape navigation bar for sliders. Admits &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; as values. You may want to modify the CSS styles to determine the distance from the top or bottom as well as any other style such as color.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollOverflow&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) defines whether or not to create a scroll for the section/slide in case its content is bigger than the height of it. When set to &lt;code&gt;true&lt;/code&gt;, your content will be wrapped by the plugin. Consider using delegation or load your other scripts in the &lt;code&gt;afterRender&lt;/code&gt; callback. In case of setting it to &lt;code&gt;true&lt;/code&gt;, it requires the vendor library &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/raw/master/vendors/scrolloverflow.min.js&quot;&gt;&lt;code&gt;scrolloverflow.min.js&lt;/code&gt;&lt;/a&gt;. This file has to be loaded before the fullPage.js plugin, but after jQuery ( in case of using it). For example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;vendors/scrolloverflow.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to prevent fullpage.js from creating the scrollbar in certain sections or slides use the class &lt;code&gt;fp-noscroll&lt;/code&gt;. For example: &lt;code&gt;&amp;lt;div class=&quot;section fp-noscroll&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can also prevent scrolloverflow from getting applied on responsive mode when using &lt;code&gt;fp-auto-height-responsive&lt;/code&gt; in the section element.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollOverflowReset&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. When set to &lt;code&gt;true&lt;/code&gt; it scrolls up the content of the section/slide with scroll bar when leaving to another vertical section. This way the section/slide will always show the start of its content even when scrolling from a section under it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scrollOverflowOptions&lt;/code&gt;: when using scrollOverflow:true fullpage.js will make use of a forked and modified version of &lt;a href=&quot;https://github.com/cubiq/iscroll/&quot;&gt;iScroll.js library&lt;/a&gt;. You can customize the scrolling behaviour by providing fullpage.js with the iScroll.js options you want to use. Check &lt;a href=&quot;https://github.com/cubiq/iscroll&quot;&gt;its documentation&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sectionSelector&lt;/code&gt;: (default &lt;code&gt;.section&lt;/code&gt;) Defines the Javascript selector used for the plugin sections. It might need to be changed sometimes to avoid problem with other plugins using the same selectors as fullpage.js.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;slideSelector&lt;/code&gt;: (default &lt;code&gt;.slide&lt;/code&gt;) Defines the Javascript selector used for the plugin slides. It might need to be changed sometimes to avoid problem with other plugins using the same selectors as fullpage.js.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;responsiveWidth&lt;/code&gt;: (default &lt;code&gt;0&lt;/code&gt;) A normal scroll (&lt;code&gt;autoScrolling:false&lt;/code&gt;) will be used under the defined width in pixels. A class &lt;code&gt;fp-responsive&lt;/code&gt; is added to the body tag in case the user wants to use it for their own responsive CSS. For example, if set to 900, whenever the browser&#39;s width is less than 900 the plugin will scroll like a normal site.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;responsiveHeight&lt;/code&gt;: (default &lt;code&gt;0&lt;/code&gt;) A normal scroll (&lt;code&gt;autoScrolling:false&lt;/code&gt;) will be used under the defined height in pixels. A class &lt;code&gt;fp-responsive&lt;/code&gt; is added to the body tag in case the user wants to use it for their own responsive CSS. For example, if set to 900, whenever the browser&#39;s height is less than 900 the plugin will scroll like a normal site.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;responsiveSlides&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. When set to &lt;code&gt;true&lt;/code&gt; slides will be turned into vertical sections when responsive mode is fired. (by using the &lt;code&gt;responsiveWidth&lt;/code&gt; or &lt;code&gt;responsiveHeight&lt;/code&gt; options detailed above). Requires fullpage.js &amp;gt;= 3.0.1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;parallax&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to use the parallax backgrounds effects on sections / slides. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension---Parallax&quot;&gt;Read more about how to apply the parallax option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;parallaxOptions&lt;/code&gt;: (default: &lt;code&gt;{ type: &#39;reveal&#39;, percentage: 62, property: &#39;translate&#39;}&lt;/code&gt;). Allows to configure the parameters for the parallax backgrounds effect when using the option &lt;code&gt;parallax:true&lt;/code&gt;. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension---Parallax&quot;&gt;Read more about how to apply the parallax option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;dropEffect&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to use the drop effect on sections / slides. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Drop-Effect&quot;&gt;Read more about how to apply the the drop effect option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;dropEffectOptions&lt;/code&gt;: (default: &lt;code&gt;{ speed: 2300, color: &#39;#F82F4D&#39;, zIndex: 9999}&lt;/code&gt;). Allows to configure the parameters for the drop effect when using the option &lt;code&gt;dropEffect:true&lt;/code&gt;.&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Drop-Effect&quot;&gt;Read more about how to apply the the drop effect option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;waterEffect&lt;/code&gt; (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to use the water effect on sections / slides. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Water-Effect&quot;&gt;Read more about how to apply the the water effect option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;waterEffectOptions&lt;/code&gt;: (default: &lt;code&gt;{ animateContent: true, animateOnMouseMove: true}&lt;/code&gt;). Allows to configure the parameters for the water effect when using the option &lt;code&gt;waterEffect:true&lt;/code&gt;.&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Water-Effect&quot;&gt;Read more about how to apply the the water effect option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;cards&lt;/code&gt;: (default &lt;code&gt;false&lt;/code&gt;) &lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Defines whether or not to use the cards effect on sections/slides. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Cards&quot;&gt;Read more about how to apply the cards option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;cardsOptions&lt;/code&gt;: (default: &lt;code&gt;{ perspective: 100, fadeContent: true, fadeBackground: true}&lt;/code&gt;). Allows you to configure the parameters for the cards effect when using the option &lt;code&gt;cards:true&lt;/code&gt;. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Extension-Cards&quot;&gt;Read more about how to apply the cards option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;lazyLoading&lt;/code&gt;: (default &lt;code&gt;true&lt;/code&gt;) Lazy loading is active by default which means it will lazy load any media element containing the attribute &lt;code&gt;data-src&lt;/code&gt; as detailed in the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#lazy-loading&quot;&gt;Lazy Loading docs&lt;/a&gt; . If you want to use any other lazy loading library you can disable this fullpage.js feature.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Methods&lt;/h2&gt; 
&lt;p&gt;You can see them in action &lt;a href=&quot;http://alvarotrigo.com/fullPage/examples/methods.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;getActiveSection()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://codepen.io/alvarotrigo/pen/VdpzRN/&quot;&gt;Demo&lt;/a&gt; Gets an Object (type &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#callbacks&quot;&gt;Section&lt;/a&gt;) containing the active section and its properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.getActiveSection();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;getActiveSlide()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://codepen.io/alvarotrigo/pen/VdpzRN/&quot;&gt;Demo&lt;/a&gt; Gets an Object (type &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#callbacks&quot;&gt;Slide&lt;/a&gt;) containing the active slide and its properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.getActiveSlide();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;moveSectionUp()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/GJXNMN&quot;&gt;Demo&lt;/a&gt; Scrolls one section up:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.moveSectionUp();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;moveSectionDown()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/jPvVZx&quot;&gt;Demo&lt;/a&gt; Scrolls one section down:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.moveSectionDown();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;moveTo(section, slide)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/doqOmY&quot;&gt;Demo&lt;/a&gt; Scrolls the page to the given section and slide. The first section will have the index 1 whilst the first slide, the visible one by default, will have index 0.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/*Scrolling to the section with the anchor link `firstSlide` and to the 2nd Slide */
fullpage_api.moveTo(&#39;firstSlide&#39;, 2);

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Scrolling to the 3rd section (with index 3) in the site
fullpage_api.moveTo(3, 0);

//Which is the same as
fullpage_api.moveTo(3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;silentMoveTo(section, slide)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/doqOeY&quot;&gt;Demo&lt;/a&gt; Exactly the same as &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#movetosection-slide&quot;&gt;&lt;code&gt;moveTo&lt;/code&gt;&lt;/a&gt; but in this case it performs the scroll without animation. A direct jump to the destination.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/*Scrolling to the section with the anchor link `firstSlide` and to the 2nd Slide */
fullpage_api.silentMoveTo(&#39;firstSlide&#39;, 2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;moveSlideRight()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/Wvgoyz&quot;&gt;Demo&lt;/a&gt; Scrolls the horizontal slider of the current section to the next slide:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.moveSlideRight();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;moveSlideLeft()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/gpdLjW&quot;&gt;Demo&lt;/a&gt; Scrolls the horizontal slider of the current section to the previous slide:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.moveSlideLeft();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setAutoScrolling(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/rVZWrR&quot;&gt;Demo&lt;/a&gt; Sets the scrolling configuration in real time. Defines the way the page scrolling behaves. If it is set to &lt;code&gt;true&lt;/code&gt;, it will use the &quot;automatic&quot; scrolling, otherwise, it will use the &quot;manual&quot; or &quot;normal&quot; scrolling of the site.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setAutoScrolling(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setFitToSection(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/GJXNYm&quot;&gt;Demo&lt;/a&gt; Sets the value for the option &lt;code&gt;fitToSection&lt;/code&gt; determining whether to fit the section in the screen or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setFitToSection(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;fitToSection()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/JWWagj&quot;&gt;Demo&lt;/a&gt; Scrolls to the nearest active section fitting it in the viewport.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.fitToSection();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setLockAnchors(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/yNxVRQ&quot;&gt;Demo&lt;/a&gt; Sets the value for the option &lt;code&gt;lockAnchors&lt;/code&gt; determining whether anchors will have any effect in the URL or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setLockAnchors(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setAllowScrolling(boolean, [directions])&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/EjeNdq&quot;&gt;Demo&lt;/a&gt; Adds or remove the possibility of scrolling through sections/slides by using the mouse wheel/trackpad or touch gestures (which is active by default). Note this won&#39;t disable the keyboard scrolling. You would need to use &lt;code&gt;setKeyboardScrolling&lt;/code&gt; for it.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;directions&lt;/code&gt;: (optional parameter) Admitted values: &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or a combination of them separated by commas like &lt;code&gt;down, right&lt;/code&gt;. It defines the direction for which the scrolling will be enabled or disabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
//disabling scrolling
fullpage_api.setAllowScrolling(false);

//disabling scrolling down
fullpage_api.setAllowScrolling(false, &#39;down&#39;);

//disabling scrolling down and right
fullpage_api.setAllowScrolling(false, &#39;down, right&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setKeyboardScrolling(boolean, [directions])&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/GJXNwm&quot;&gt;Demo&lt;/a&gt; Adds or remove the possibility of scrolling through sections by using the keyboard (which is active by default).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;directions&lt;/code&gt;: (optional parameter) Admitted values: &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or a combination of them separated by commas like &lt;code&gt;down, right&lt;/code&gt;. It defines the direction for which the scrolling will be enabled or disabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//disabling all keyboard scrolling
fullpage_api.setKeyboardScrolling(false);

//disabling keyboard scrolling down
fullpage_api.setKeyboardScrolling(false, &#39;down&#39;);

//disabling keyboard scrolling down and right
fullpage_api.setKeyboardScrolling(false, &#39;down, right&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setRecordHistory(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/rVZWQb&quot;&gt;Demo&lt;/a&gt; Defines whether to record the history for each hash change in the URL.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setRecordHistory(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setScrollingSpeed(milliseconds)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/NqLbeY&quot;&gt;Demo&lt;/a&gt; Defines the scrolling speed in milliseconds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setScrollingSpeed(700);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;destroy(type)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/bdxBzv&quot;&gt;Demo&lt;/a&gt; Destroys the plugin events and optionally its HTML markup and styles. Ideal to use when using AJAX to load content.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: (optional parameter) can be empty or &lt;code&gt;all&lt;/code&gt;. If &lt;code&gt;all&lt;/code&gt; is passed, the HTML markup and styles used by fullpage.js will be removed. This way the original HTML markup, the one used before any plugin modification is made, will be maintained.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//destroying all Javascript events created by fullPage.js (scrolls, hashchange in the URL...)
fullpage_api.destroy();

//destroying all Javascript events and any modification done by fullPage.js over your original HTML markup.
fullpage_api.destroy(&#39;all&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;reBuild()&lt;/h3&gt; 
&lt;p&gt;Updates the DOM structure to fit the new window size or its contents. Ideal to use in combination with AJAX calls or external changes in the DOM structure of the site, specially when using &lt;code&gt;scrollOverflow:true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.reBuild();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;setResponsive(boolean)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/WxOyLA&quot;&gt;Demo&lt;/a&gt; Sets the responsive mode of the page. When set to &lt;code&gt;true&lt;/code&gt; the autoScrolling will be turned off and the result will be exactly the same one as when the &lt;code&gt;responsiveWidth&lt;/code&gt; or &lt;code&gt;responsiveHeight&lt;/code&gt; options get fired.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.setResponsive(true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;responsiveSlides.toSections()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Requires fullpage.js &amp;gt;= 3.0.1. Turns horizontal slides into vertical sections.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.responsiveSlides.toSections();
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;responsiveSlides.toSlides()&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://alvarotrigo.com/fullPage/extensions/&quot;&gt;Extension of fullpage.js&lt;/a&gt;. Requires fullpage.js &amp;gt;= 3.0.1. Turns back the original slides (now converted into vertical sections) into horizontal slides again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fullpage_api.responsiveSlides.toSlides();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Callbacks&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://codepen.io/alvarotrigo/pen/XbPNQv&quot;&gt;Demo&lt;/a&gt; You can see them in action &lt;a href=&quot;http://alvarotrigo.com/fullPage/examples/callbacks.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some callbacks, such as &lt;code&gt;onLeave&lt;/code&gt; will contain Object type of parameters containing the following properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;anchor&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; item&#39;s anchor.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;index&lt;/code&gt;: &lt;em&gt;(Number)&lt;/em&gt; item&#39;s index.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;item&lt;/code&gt;: &lt;em&gt;(DOM element)&lt;/em&gt; item element.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;isFirst&lt;/code&gt;: &lt;em&gt;(Boolean)&lt;/em&gt; determines if the item is the first child.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;isLast&lt;/code&gt;: &lt;em&gt;(Boolean)&lt;/em&gt; determines if the item is the last child.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;afterLoad (origin, destination, direction)&lt;/h3&gt; 
&lt;p&gt;Callback fired once the sections have been loaded, after the scrolling has ended. Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;origin&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; section of origin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; destination section.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; it will take the values &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;down&lt;/code&gt; depending on the scrolling direction.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	anchors: [&#39;firstPage&#39;, &#39;secondPage&#39;, &#39;thirdPage&#39;, &#39;fourthPage&#39;, &#39;lastPage&#39;],

	afterLoad: function(origin, destination, direction){
		var loadedSection = this;

		//using index
		if(origin.index == 2){
			alert(&quot;Section 3 ended loading&quot;);
		}

		//using anchorLink
		if(origin.anchor == &#39;secondSlide&#39;){
			alert(&quot;Section 2 ended loading&quot;);
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;onLeave (&lt;code&gt;origin&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;This callback is fired once the user leaves a section, in the transition to the new section. Returning &lt;code&gt;false&lt;/code&gt; will cancel the move before it takes place.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;origin&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; section of origin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; destination section.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; it will take the values &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;down&lt;/code&gt; depending on the scrolling direction.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	onLeave: function(origin, destination, direction){
		var leavingSection = this;

		//after leaving section 2
		if(origin.index == 1 &amp;amp;&amp;amp; direction ==&#39;down&#39;){
			alert(&quot;Going to section 3!&quot;);
		}

		else if(origin.index == 1 &amp;amp;&amp;amp; direction == &#39;up&#39;){
			alert(&quot;Going to section 1!&quot;);
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cancelling the scroll before it takes place&lt;/h4&gt; 
&lt;p&gt;You can cancel the scroll by returning &lt;code&gt;false&lt;/code&gt; on the &lt;code&gt;onLeave&lt;/code&gt; callback:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	onLeave: function(origin, destination, direction){
		//it won&#39;t scroll if the destination is the 3rd section
		if(destination.index == 2){
			return false;
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterRender()&lt;/h3&gt; 
&lt;p&gt;This callback is fired just after the structure of the page is generated. This is the callback you want to use to initialize other plugins or fire any code which requires the document to be ready (as this plugin modifies the DOM to create the resulting structure). See &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/FAQ---Frequently-Answered-Questions&quot;&gt;FAQs&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	afterRender: function(){
		var pluginContainer = this;
		alert(&quot;The resulting DOM structure is ready&quot;);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterResize(width, height)&lt;/h3&gt; 
&lt;p&gt;This callback is fired after resizing the browser&#39;s window. Just after the sections are resized.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: &lt;em&gt;(Number)&lt;/em&gt; window&#39;s width.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: &lt;em&gt;(Number)&lt;/em&gt; window&#39;s height.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	afterResize: function(width, height){
		var fullpageContainer = this;
		alert(&quot;The sections have finished resizing&quot;);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterReBuild()&lt;/h3&gt; 
&lt;p&gt;This callback is fired after manually re-building fullpage.js by calling &lt;code&gt;fullpage_api.reBuild()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	afterReBuild: function(){
		console.log(&quot;fullPage.js has manually being re-builded&quot;);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterResponsive(&lt;code&gt;isResponsive&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;This callback is fired after fullpage.js changes from normal to responsive mode or from responsive mode to normal mode.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;isResponsive&lt;/code&gt;: &lt;em&gt;(Boolean)&lt;/em&gt; determines if it enters into responsive mode (&lt;code&gt;true&lt;/code&gt;) or goes back to normal mode (&lt;code&gt;false&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	afterResponsive: function(isResponsive){
		alert(&quot;Is responsive: &quot; + isResponsive);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;afterSlideLoad (&lt;code&gt;section&lt;/code&gt;, &lt;code&gt;origin&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;Callback fired once the slide of a section have been loaded, after the scrolling has ended.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;section&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; active vertical section.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;origin&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; horizontal slide of origin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; destination horizontal slide.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;left&lt;/code&gt; depending on the scrolling direction.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	anchors: [&#39;firstPage&#39;, &#39;secondPage&#39;, &#39;thirdPage&#39;, &#39;fourthPage&#39;, &#39;lastPage&#39;],

	afterSlideLoad: function( section, origin, destination, direction){
		var loadedSlide = this;

		//first slide of the second section
		if(section.anchor == &#39;secondPage&#39; &amp;amp;&amp;amp; destination.index == 1){
			alert(&quot;First slide loaded&quot;);
		}

		//second slide of the second section (supposing #secondSlide is the
		//anchor for the second slide)
		if(section.index == 1 &amp;amp;&amp;amp; destination.anchor == &#39;secondSlide&#39;){
			alert(&quot;Second slide loaded&quot;);
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;onSlideLeave (&lt;code&gt;section&lt;/code&gt;, &lt;code&gt;origin&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;This callback is fired once the user leaves an slide to go to another, in the transition to the new slide. Returning &lt;code&gt;false&lt;/code&gt; will cancel the move before it takes place.&lt;/p&gt; 
&lt;p&gt;Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;section&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; active vertical section.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;origin&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; horizontal slide of origin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;: &lt;em&gt;(Object)&lt;/em&gt; destination horizontal slide.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: &lt;em&gt;(String)&lt;/em&gt; &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;left&lt;/code&gt; depending on the scrolling direction.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new fullpage(&#39;#fullpage&#39;, {
	onSlideLeave: function( section, origin, destination, direction){
		var leavingSlide = this;

		//leaving the first slide of the 2nd Section to the right
		if(section.index == 1 &amp;amp;&amp;amp; origin.index == 0 &amp;amp;&amp;amp; direction == &#39;right&#39;){
			alert(&quot;Leaving the fist slide!!&quot;);
		}

		//leaving the 3rd slide of the 2nd Section to the left
		if(section.index == 1 &amp;amp;&amp;amp; origin.index == 2 &amp;amp;&amp;amp; direction == &#39;left&#39;){
			alert(&quot;Going to slide 2! &quot;);
		}
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cancelling a move before it takes place&lt;/h4&gt; 
&lt;p&gt;You can cancel a move by returning &lt;code&gt;false&lt;/code&gt; on the &lt;code&gt;onSlideLeave&lt;/code&gt; callback. &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#cancelling-the-scroll-before-it-takes-place&quot;&gt;Same as when canceling a movement with &lt;code&gt;onLeave&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Reporting issues&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Please, look for your issue before asking using the github issues search.&lt;/li&gt; 
 &lt;li&gt;Make sure you use the latest fullpage.js version. No support is provided for older versions.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/issues&quot;&gt;the Github Issues forum&lt;/a&gt; to create issues.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;An isolated reproduction of the issue will be required.&lt;/strong&gt; Make use of &lt;a href=&quot;https://jsfiddle.net/alvarotrigo/ea17skjr/&quot;&gt;jsfiddle&lt;/a&gt; or &lt;a href=&quot;http://codepen.io/alvarotrigo/pen/NxyPPp&quot;&gt;codepen&lt;/a&gt; for it if possible.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Contributing to fullpage.js&lt;/h1&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Contributing-to-fullpage.js&quot;&gt;Contributing to fullpage.js&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Changelog&lt;/h1&gt; 
&lt;p&gt;To see the list of recent changes, see &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/releases&quot;&gt;Releases section&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Build tasks&lt;/h1&gt; 
&lt;p&gt;Want to build fullpage.js distribution files? Please see &lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js/wiki/Build-tasks&quot;&gt;Build Tasks&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wordpress Plugin &lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-gutenberg/&quot;&gt;for Gutenberg&lt;/a&gt; and &lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-elementor/&quot;&gt;for Elementor&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/utils/wordpress.html&quot;&gt;Wordpress theme&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/vue-fullpage.js&quot;&gt;Official Vue.js wrapper component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/react-fullpage&quot;&gt;Official React.js wrapper component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarotrigo/angular-fullpage&quot;&gt;Official Angular wrapper component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://matthewlein.com/ceaser/&quot;&gt;CSS Easing Animation Tool - Matthew Lein&lt;/a&gt; (useful to define the &lt;code&gt;easingcss3&lt;/code&gt; value)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jsdelivr.com/package/npm/fullpage.js&quot;&gt;fullPage.js jsDelivr CDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freestream/oc-parallax-plugin&quot;&gt;fullPage.js plugin for October CMS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/meiblorn/ng2-fullpage&quot;&gt;fullPage.js Angular2 directive&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellsan631/angular-fullpage.js&quot;&gt;fullPage.js angular directive&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/ember-cli-fullpagejs&quot;&gt;fullPage.js ember-cli addon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/fullpagejs-rails&quot;&gt;fullPage.js Rails Ruby Gem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmautomatizacion/angular-fullpage.js&quot;&gt;Angular fullPage.js - Adaptation for Angular.js v1.x&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://premium.wpmudev.org/blog/build-apple-inspired-full-page-scrolling-pages-for-your-wordpress-site/&quot;&gt;Integrating fullPage.js with Wordpress (Tutorial)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-divi/&quot;&gt;Wordpress Plugin for Divi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/wordpress-plugin-elementor/&quot;&gt;Wordpress Plugin for Elementor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Who is using fullPage.js&lt;/h2&gt; 
&lt;p&gt;If you want your page to be listed here, please &lt;a href=&quot;mailto:alvaro@alvarotrigo.com&quot;&gt;contact me&lt;/a&gt; with the URL.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.yourprimer.com/&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/google-4.png&quot; alt=&quot;Google&quot;&gt;&lt;/a&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/cocacola-4.png&quot; alt=&quot;Coca-cola&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/ebay-4.png&quot; alt=&quot;eBay&quot;&gt; &lt;a href=&quot;http://www.bbc.co.uk/news/resources/idt-d88680d1-26f2-4863-be95-83298fd01e02&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/bbc-4.png&quot; alt=&quot;BBC&quot;&gt;&lt;/a&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/sony-4.png&quot; alt=&quot;Sony&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/vodafone-5.png&quot; alt=&quot;Vodafone&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/british-airways-5.png&quot; alt=&quot;British Airways&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/mcdonalds-6.png&quot; alt=&quot;McDonalds&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/ea-6.png&quot; alt=&quot;EA&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/vogue-6.png&quot; alt=&quot;Vogue&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/mi-6.png&quot; alt=&quot;Mi&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/mercedes-5.png&quot; alt=&quot;Mercedes&quot;&gt; &lt;a href=&quot;http://www.sanyang.com.tw/service/Conception/&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/sym-5.png&quot; alt=&quot;sym&quot;&gt;&lt;/a&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/bugatti-5.png&quot; alt=&quot;Bugatti&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/edarling-5.png&quot; alt=&quot;eDarling&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/ubisoft-5.png&quot; alt=&quot;Ubisoft&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coca-colacompany.com/annual-review/2017/index.html&quot;&gt;https://www.coca-colacompany.com/annual-review/2017/index.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/resources/idt-d88680d1-26f2-4863-be95-83298fd01e02&quot;&gt;http://www.bbc.co.uk/news/resources/idt-d88680d1-26f2-4863-be95-83298fd01e02&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.newjumoconcept.com/&quot;&gt;http://www.newjumoconcept.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.shootinggalleryasia.com/&quot;&gt;http://www.shootinggalleryasia.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://medoff.ua/en/&quot;&gt;http://medoff.ua/en/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://promo.prestigio.com/grace1/&quot;&gt;http://promo.prestigio.com/grace1/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://torchbrowser.com/&quot;&gt;http://torchbrowser.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://thekorner.fr/&quot;&gt;http://thekorner.fr/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://charlotteaimes.com/&quot;&gt;http://charlotteaimes.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.boxreload.com/&quot;&gt;http://www.boxreload.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://educationaboveall.org/&quot;&gt;http://educationaboveall.org/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://usescribe.com/&quot;&gt;http://usescribe.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://boxx.hk/&quot;&gt;http://boxx.hk/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sanyang.com.tw/service/Conception/&quot;&gt;http://www.sanyang.com.tw/service/Conception/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trasmissione-energia.terna.it/&quot;&gt;http://trasmissione-energia.terna.it/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.villareginateodolinda.it&quot;&gt;http://www.villareginateodolinda.it&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kesstrio.com&quot;&gt;http://www.kesstrio.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ded-morozz.kiev.ua/&quot;&gt;http://ded-morozz.kiev.ua/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dancingroad.com&quot;&gt;http://dancingroad.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.camanihome.com/&quot;&gt;http://www.camanihome.com/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find another list &lt;a href=&quot;http://libscore.com/#$.fn.fullpage&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;Donations would be more than welcome :)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=BEK5JQCQMED4J&amp;amp;lc=GB&amp;amp;item_name=fullPage%2ejs&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/GB/i/btn/btn_donateCC_LG.gif&quot; alt=&quot;Donate&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&quot;https://alvarotrigo.com/#contact&quot;&gt;Become a sponsor&lt;/a&gt;] | &lt;a href=&quot;https://www.patreon.com/fullpagejs&quot;&gt;[Become a patreon]&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.stackpath.com/&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/stackpath3.png&quot; alt=&quot;Stackpath&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.browserstack.com/&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/browserstack3.png&quot; alt=&quot;Browserstack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codepen.com&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/codepen3.png&quot; alt=&quot;CodePen&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefirst.co.uk&quot;&gt;&lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/logos/codefirst2.png&quot; alt=&quot;CodeFirst&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;People&lt;/h3&gt; 
&lt;a href=&quot;https://github.com/donsalvadori&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt; &lt;img src=&quot;http://wallpapers-for-ipad.com/fullpage/imgs3/avatars/donsalvadori.jpg&quot;&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>mui-org/material-ui</title>
      <link>https://github.com/mui-org/material-ui</link>
      <description>&lt;p&gt;Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with Material Design.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://material-ui.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;150&quot; src=&quot;https://material-ui.com/static/logo.svg?sanitize=true&quot; alt=&quot;Material-UI logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Material-UI&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;Quickly build beautiful &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; apps. Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with &lt;a href=&quot;https://material.io/design/introduction/&quot;&gt;Material Design&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/mui-org/material-ui/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@mui/material/latest.svg?sanitize=true&quot; alt=&quot;npm latest package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@mui/material/next.svg?sanitize=true&quot; alt=&quot;npm next package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@mui/material.svg?sanitize=true&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.circleci.com/pipelines/github/mui-org/material-ui?branch=next&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/mui-org/material-ui/next.svg?sanitize=true&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/mui-org/material-ui/branch/next&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/mui-org/material-ui/next.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/MaterialUI&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/MaterialUI.svg?label=follow+Material-UI&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mui-org/material-ui/issues/27062&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/renovate-enabled-brightgreen.svg?sanitize=true&quot; alt=&quot;Renovate status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://isitmaintained.com/project/mui-org/material-ui&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;https://isitmaintained.com/badge/resolution/mui-org/material-ui.svg?sanitize=true&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://translate.material-ui.com/project/material-ui-docs&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/material-ui-docs/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/material-ui&quot; alt=&quot;Open Collective backers and sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Material-UI is available as an &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;npm package&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://material-ui.com/&quot;&gt;Stable channel v4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @mui/material

// with yarn
yarn add @mui/material
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;⚠️ All ongoing work has moved to v5. The development of v4 is limited to important bug fixes, security patches and easing the upgrade path to v5.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://next.material-ui.com/&quot;&gt;Alpha channel v5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @mui/material@next @emotion/react @emotion/styled

// with yarn
yarn add @mui/material@next @emotion/react @emotion/styled
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Older versions&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v3.material-ui.com/&quot;&gt;v3.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://material-ui.com/guides/migration-v3/&quot;&gt;Migration from v3 to v4&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v0.material-ui.com/&quot;&gt;v0.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://material-ui.com/guides/migration-v0x/&quot;&gt;Migration to v1&lt;/a&gt;)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;Please note that &lt;code&gt;@next&lt;/code&gt; will only point to pre-releases; to get the latest stable release use &lt;code&gt;@latest&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Who sponsors Material-UI?&lt;/h2&gt; 
&lt;h3&gt;Diamond 💎&lt;/h3&gt; 
&lt;p style=&quot;display: flex; justify-content: center;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;octopus&quot; href=&quot;https://octopus.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://avatars3.githubusercontent.com/u/1287123?s=256&quot; alt=&quot;octopus&quot; title=&quot;Repeatable, reliable deployments&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;doit-intl&quot; href=&quot;https://www.doit-intl.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://avatars3.githubusercontent.com/u/8424863?s=256&quot; alt=&quot;doit-intl&quot; title=&quot;Management Platform for Google Cloud and AWS&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Diamond Sponsors are those who have pledged $1,500/month or more to Material-UI.&lt;/p&gt; 
&lt;h3&gt;Gold 🏆&lt;/h3&gt; 
&lt;p&gt;via &lt;a href=&quot;https://www.patreon.com/oliviertassinari&quot;&gt;Patreon&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;tidelift&quot; href=&quot;https://tidelift.com/subscription/pkg/npm-material-ui?utm_source=npm-material-ui&amp;amp;utm_medium=referral&amp;amp;utm_campaign=homepage&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://github.com/tidelift.png?size=192&quot; alt=&quot;tidelift&quot; title=&quot;Enterprise-ready open source software&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;bitsrc&quot; href=&quot;https://bit.dev/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://github.com/teambit.png?size=192&quot; alt=&quot;bitsrc&quot; title=&quot;The fastest way to share code&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;movavi&quot; href=&quot;https://spicefactory.co/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://avatars.githubusercontent.com/u/13365608?s=192&quot; alt=&quot;Next gen digital product studio.&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;via &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;OpenCollective&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center; flex-wrap: wrap;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;textemall&quot; href=&quot;https://www.text-em-all.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/callemall/a6946da/logo/192.png&quot; alt=&quot;call-em-all&quot; title=&quot;Mass Text Messaging &amp;amp; Automated Calling&quot; height=&quot;96&quot; width=&quot;96&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;hoodiebees&quot; href=&quot;https://hoodiebees.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/hoodiebees1/617b451/logo/192.png&quot; alt=&quot;hoodiebees&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;movavi&quot; href=&quot;https://www.movavi.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/movavi-software/a1d0167/logo/192.png&quot; alt=&quot;Screen recorder for Mac&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Direct&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center; flex-wrap: wrap;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;elevator&quot; href=&quot;https://www.elevatormag.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img src=&quot;https://material-ui.com/static/sponsors/elevator.png&quot; alt=&quot;elevator&quot; title=&quot;The dopest new hip hop, upcoming artsits, music news, culture, and style&quot; height=&quot;57&quot; width=&quot;191&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Gold Sponsors are those who have pledged $500/month or more to Material-UI.&lt;/p&gt; 
&lt;h3&gt;There is more!&lt;/h3&gt; 
&lt;p&gt;See the full list of &lt;a href=&quot;https://material-ui.com/discover-more/backers/&quot;&gt;our backers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Here is a quick example to get you started, &lt;strong&gt;it&#39;s all you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import * as React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import Button from &#39;@mui/material/Button&#39;;

function App() {
  return &amp;lt;Button variant=&quot;contained&quot;&amp;gt;Hello World&amp;lt;/Button&amp;gt;;
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.querySelector(&#39;#app&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Yes, it&#39;s really all you need to get started as you can see in this live and interactive demo:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/4j7m47vlm4&quot;&gt;&lt;img src=&quot;https://codesandbox.io/static/img/play-codesandbox.svg?sanitize=true&quot; alt=&quot;Edit Button&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For &lt;em&gt;how-to&lt;/em&gt; questions and other non-issues, please use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/material-ui&quot;&gt;StackOverflow&lt;/a&gt; instead of GitHub issues. There is a StackOverflow tag called &quot;material-ui&quot; that you can use to tag your questions.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Are you looking for an example project to get started? &lt;a href=&quot;https://material-ui.com/getting-started/example-projects/&quot;&gt;We host some&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://material-ui.com/&quot;&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Premium Themes&lt;/h2&gt; 
&lt;p&gt;You can find complete templates &amp;amp; themes in the &lt;a href=&quot;https://material-ui.com/store/?utm_source=docs&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme-store&quot;&gt;Material-UI store&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/next/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.&lt;/p&gt; 
&lt;p&gt;Notice that contributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of &lt;a href=&quot;https://material-ui.com/getting-started/faq/#material-ui-is-awesome-how-can-i-support-the-project&quot;&gt;other contributions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;If you have recently updated, please read the &lt;a href=&quot;https://github.com/mui-org/material-ui/releases&quot;&gt;changelog&lt;/a&gt; for details of what has changed.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The future plans and high priority features and enhancements can be found in the &lt;a href=&quot;https://material-ui.com/discover-more/roadmap/&quot;&gt;roadmap&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/next/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsoring services&lt;/h2&gt; 
&lt;p&gt;These great services sponsor Material-UI&#39;s core infrastructure:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;GitHub&quot; src=&quot;https://github.githubassets.com/images/modules/logos_page/GitHub-Logo.png&quot; height=&quot;25&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub allows us to host the Git repository and coordinate contributions.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;Netlify&quot; src=&quot;https://cdn.netlify.com/15ecf59b59c9d04b88097c6b5d2c7e8a7d1302d0/1b6d6/img/press/logos/full-logo-light.svg?sanitize=true&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Netlify allows us to distribute the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://crowdin.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;CrowdIn&quot; src=&quot;https://support.crowdin.com/assets/logos/crowdin-logo1-small.png&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CrowdIn allows us to translate the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;BrowserStack&quot; src=&quot;https://www.browserstack.com/images/mail/browserstack-logo-footer.png&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;BrowserStack allows us to test in real browsers.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;CodeCov&quot; src=&quot;https://github.com/codecov.png?size=70&quot; width=&quot;35&quot; height=&quot;35&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CodeCov allows us to monitor the test coverage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zloirock/core-js</title>
      <link>https://github.com/zloirock/core-js</link>
      <description>&lt;p&gt;Standard Library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;core-js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/core-js&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/all/badge.svg?label=open%20collective&quot; alt=&quot;Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/core-js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/core-js.svg?sanitize=true&quot; alt=&quot;version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npm-stat.com/charts.html?package=core-js&amp;amp;package=core-js-pure&amp;amp;package=core-js-compat&amp;amp;from=2014-11-18&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/core-js.svg?label=npm%20i%20core-js&quot; alt=&quot;core-js downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npm-stat.com/charts.html?package=core-js&amp;amp;package=core-js-pure&amp;amp;package=core-js-compat&amp;amp;from=2014-11-18&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/core-js-pure.svg?label=npm%20i%20core-js-pure&quot; alt=&quot;core-js-pure downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zloirock/core-js/actions&quot;&gt;&lt;img src=&quot;https://github.com/zloirock/core-js/workflows/tests/badge.svg?sanitize=true&quot; alt=&quot;tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zloirock/core-js/actions&quot;&gt;&lt;img src=&quot;https://github.com/zloirock/core-js/workflows/eslint/badge.svg?sanitize=true&quot; alt=&quot;eslint&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Modular standard library for JavaScript. Includes polyfills for &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript&quot;&gt;ECMAScript up to 2021&lt;/a&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-promise&quot;&gt;promises&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-symbol&quot;&gt;symbols&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-collections&quot;&gt;collections&lt;/a&gt;, iterators, &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-typed-arrays&quot;&gt;typed arrays&lt;/a&gt;, many other features, &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-proposals&quot;&gt;ECMAScript proposals&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#web-standards&quot;&gt;some cross-platform WHATWG / W3C features and proposals&lt;/a&gt; like &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#url-and-urlsearchparams&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;. You can load only required features or use it without global namespace pollution.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;If you looking documentation for obsolete &lt;code&gt;core-js@2&lt;/code&gt;, please, check &lt;a href=&quot;https://github.com/zloirock/core-js/tree/v2&quot;&gt;this branch&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;As advertising: the author is looking for a good job -)&lt;/h2&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/tree/master/docs/2019-03-19-core-js-3-babel-and-a-look-into-the-future.md&quot;&gt;core-js@3, babel and a look into the future&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;Raising funds&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;core-js&lt;/code&gt; isn&#39;t backed by a company, so the future of this project depends on you. Become a sponsor or a backer if you are interested in &lt;code&gt;core-js&lt;/code&gt;: &lt;a href=&quot;https://opencollective.com/core-js&quot;&gt;&lt;strong&gt;Open Collective&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://patreon.com/zloirock&quot;&gt;&lt;strong&gt;Patreon&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://paypal.me/zloirock&quot;&gt;&lt;strong&gt;PayPal&lt;/strong&gt;&lt;/a&gt;, &lt;strong&gt;Bitcoin ( bc1qlea7544qtsmj2rayg0lthvza9fau63ux0fstcz )&lt;/strong&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/10/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/core-js/sponsor/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/sponsor/11/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/core-js#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/core-js/backers.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Available as part of the Tidelift Subscription.&lt;/p&gt; 
&lt;p&gt;The maintainers of &lt;code&gt;core-js&lt;/code&gt; and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href=&quot;https://tidelift.com/subscription/pkg/npm-core-js?utm_source=npm-core-js&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&quot;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/a2xexl&quot;&gt;&lt;em&gt;Example of usage&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;core-js&#39;; // &amp;lt;- at the top of your entry point

Array.from(new Set([1, 2, 3, 2, 1]));          // =&amp;gt; [1, 2, 3]
[1, [2, 3], [4, [5]]].flat(2);                 // =&amp;gt; [1, 2, 3, 4, 5]
Promise.resolve(32).then(x =&amp;gt; console.log(x)); // =&amp;gt; 32
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;You can load only required features&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;core-js/features/array/from&#39;; // &amp;lt;- at the top of your entry point
import &#39;core-js/features/array/flat&#39;; // &amp;lt;- at the top of your entry point
import &#39;core-js/features/set&#39;;        // &amp;lt;- at the top of your entry point
import &#39;core-js/features/promise&#39;;    // &amp;lt;- at the top of your entry point

Array.from(new Set([1, 2, 3, 2, 1]));          // =&amp;gt; [1, 2, 3]
[1, [2, 3], [4, [5]]].flat(2);                 // =&amp;gt; [1, 2, 3, 4, 5]
Promise.resolve(32).then(x =&amp;gt; console.log(x)); // =&amp;gt; 32
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Or use it without global namespace pollution&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import from from &#39;core-js-pure/features/array/from&#39;;
import flat from &#39;core-js-pure/features/array/flat&#39;;
import Set from &#39;core-js-pure/features/set&#39;;
import Promise from &#39;core-js-pure/features/promise&#39;;

from(new Set([1, 2, 3, 2, 1]));                // =&amp;gt; [1, 2, 3]
flat([1, [2, 3], [4, [5]]], 2);                // =&amp;gt; [1, 2, 3, 4, 5]
Promise.resolve(32).then(x =&amp;gt; console.log(x)); // =&amp;gt; 32
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Index&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#postinstall-message&quot;&gt;&lt;code&gt;postinstall&lt;/code&gt; message&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;CommonJS API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#babel&quot;&gt;Babel&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#babelpolyfill&quot;&gt;&lt;code&gt;@babel/polyfill&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#babelpreset-env&quot;&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#babelruntime&quot;&gt;&lt;code&gt;@babel/runtime&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#swc&quot;&gt;swc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#configurable-level-of-aggressiveness&quot;&gt;Configurable level of aggressiveness&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#custom-build&quot;&gt;Custom build&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#compatibility-data&quot;&gt;Compatibility data&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#supported-engines&quot;&gt;Supported engines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript&quot;&gt;ECMAScript&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-object&quot;&gt;ECMAScript: Object&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-function&quot;&gt;ECMAScript: Function&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-array&quot;&gt;ECMAScript: Array&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-string-and-regexp&quot;&gt;ECMAScript: String and RegExp&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-number&quot;&gt;ECMAScript: Number&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-math&quot;&gt;ECMAScript: Math&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-date&quot;&gt;ECMAScript: Date&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-promise&quot;&gt;ECMAScript: Promise&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-symbol&quot;&gt;ECMAScript: Symbol&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-collections&quot;&gt;ECMAScript: Collections&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-typed-arrays&quot;&gt;ECMAScript: Typed Arrays&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-reflect&quot;&gt;ECMAScript: Reflect&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-json&quot;&gt;ECMAScript: JSON&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-globalthis&quot;&gt;ECMAScript: globalThis&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-proposals&quot;&gt;ECMAScript proposals&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#stage-4-proposals&quot;&gt;Stage 4 proposals&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#stage-3-proposals&quot;&gt;Stage 3 proposals&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#array-find-from-last&quot;&gt;&lt;code&gt;Array&lt;/code&gt; find from last&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#stage-2-proposals&quot;&gt;Stage 2 proposals&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#iterator-helpers&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt; helpers&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#new-set-methods&quot;&gt;New &lt;code&gt;Set&lt;/code&gt; methods&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#mapprototypeemplace&quot;&gt;&lt;code&gt;Map.prototype.emplace&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#arrayistemplateobject&quot;&gt;&lt;code&gt;Array.isTemplateObject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#symbol-asyncdispose-dispose--for-using-statement&quot;&gt;&lt;code&gt;Symbol.{ asyncDispose, dispose }&lt;/code&gt; for &lt;code&gt;using&lt;/code&gt; statement&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#symbolmetadata-for-decorators-proposal&quot;&gt;&lt;code&gt;Symbol.metadata&lt;/code&gt; for decorators proposal&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#stage-1-proposals&quot;&gt;Stage 1 proposals&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#observable&quot;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#new-collections-methods&quot;&gt;New collections methods&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#of-and-from-methods-on-collection-constructors&quot;&gt;&lt;code&gt;.of&lt;/code&gt; and &lt;code&gt;.from&lt;/code&gt; methods on collection constructors&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#compositekey-and-compositesymbol&quot;&gt;&lt;code&gt;compositeKey&lt;/code&gt; and &lt;code&gt;compositeSymbol&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#array-filtering&quot;&gt;&lt;code&gt;Array&lt;/code&gt; filtering&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#array-grouping&quot;&gt;&lt;code&gt;Array&lt;/code&gt; grouping&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#array-deduplication&quot;&gt;&lt;code&gt;Array&lt;/code&gt; deduplication&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#getting-last-item-from-array&quot;&gt;Getting last item from &lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#numberrange&quot;&gt;&lt;code&gt;Number.range&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#numberfromstring&quot;&gt;&lt;code&gt;Number.fromString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#math-extensions&quot;&gt;&lt;code&gt;Math&lt;/code&gt; extensions&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#mathsignbit&quot;&gt;&lt;code&gt;Math.signbit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#stringprototypecodepoints&quot;&gt;&lt;code&gt;String.prototype.codePoints&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#symbolmatcher-for-pattern-matching&quot;&gt;&lt;code&gt;Symbol.matcher&lt;/code&gt; for pattern matching&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#stage-0-proposals&quot;&gt;Stage 0 proposals&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#pre-stage-0-proposals&quot;&gt;Pre-stage 0 proposals&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#reflect-metadata&quot;&gt;&lt;code&gt;Reflect&lt;/code&gt; metadata&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#web-standards&quot;&gt;Web standards&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#settimeout-and-setinterval&quot;&gt;&lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#setimmediate&quot;&gt;&lt;code&gt;setImmediate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#queuemicrotask&quot;&gt;&lt;code&gt;queueMicrotask&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#url-and-urlsearchparams&quot;&gt;&lt;code&gt;URL&lt;/code&gt; and &lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#iterable-dom-collections&quot;&gt;iterable DOM collections&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#iteration-helpers&quot;&gt;Iteration helpers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#missing-polyfills&quot;&gt;Missing polyfills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/SECURITY.md&quot;&gt;Security policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;Installation:&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;// global version
npm install --save core-js@3.17.2
// version without global namespace pollution
npm install --save core-js-pure@3.17.2
// bundled global version
npm install --save core-js-bundle@3.17.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Already bundled version of &lt;code&gt;core-js&lt;/code&gt; &lt;a href=&quot;https://unpkg.com/core-js-bundle@3.17.2&quot;&gt;on CDN&lt;/a&gt; (&lt;a href=&quot;https://unpkg.com/core-js-bundle@3.17.2/minified.js&quot;&gt;minified version&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;postinstall&lt;/code&gt; message&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;core-js&lt;/code&gt; project needs your help, so the package shows a message about it after installation. If it causes problems for you, you can disable it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ADBLOCK=true npm install
// or
DISABLE_OPENCOLLECTIVE=true npm install
// or
npm install --loglevel silent
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CommonJS API&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;You can import only-required-for-you polyfills, like in examples at the top of &lt;code&gt;README.md&lt;/code&gt;. Available CommonJS entry points for all polyfilled methods / constructors and namespaces. Just some examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// polyfill all `core-js` features:
import &quot;core-js&quot;;
// polyfill only stable `core-js` features - ES and web standards:
import &quot;core-js/stable&quot;;
// polyfill only stable ES features:
import &quot;core-js/es&quot;;

// if you want to polyfill `Set`:
// all `Set`-related features, with ES proposals:
import &quot;core-js/features/set&quot;;
// stable required for `Set` ES features and features from web standards
// (DOM collections iterator in this case):
import &quot;core-js/stable/set&quot;;
// only stable ES features required for `Set`:
import &quot;core-js/es/set&quot;;
// the same without global namespace pollution:
import Set from &quot;core-js-pure/features/set&quot;;
import Set from &quot;core-js-pure/stable/set&quot;;
import Set from &quot;core-js-pure/es/set&quot;;

// if you want to polyfill just required methods:
import &quot;core-js/features/set/intersection&quot;;
import &quot;core-js/stable/queue-microtask&quot;;
import &quot;core-js/es/array/from&quot;;

// polyfill iterator helpers proposal:
import &quot;core-js/proposals/iterator-helpers&quot;;
// polyfill all stage 2+ proposals:
import &quot;core-js/stage/2&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Caveats when using CommonJS API:&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;modules&lt;/code&gt; path is an internal API, does not inject all required dependencies and can be changed in minor or patch releases. Use it only for a custom build and/or if you know what are you doing.&lt;/li&gt; 
 &lt;li&gt;If you use &lt;code&gt;core-js&lt;/code&gt; with the extension of native objects, recommended load all &lt;code&gt;core-js&lt;/code&gt; modules at the top of the entry point of your application, otherwise, you can have conflicts. 
  &lt;ul&gt; 
   &lt;li&gt;For example, Google Maps use their own &lt;code&gt;Symbol.iterator&lt;/code&gt;, conflicting with &lt;code&gt;Array.from&lt;/code&gt;, &lt;code&gt;URLSearchParams&lt;/code&gt; and/or something else from &lt;code&gt;core-js&lt;/code&gt;, see &lt;a href=&quot;https://github.com/zloirock/core-js/search?q=Google+Maps&amp;amp;type=Issues&quot;&gt;related issues&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Such conflicts also resolvable by discrovering and manual adding each conflicting entry from &lt;code&gt;core-js&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;core-js&lt;/code&gt; is extremely modular and uses a lot of very tiny modules, because of that for usage in browsers bundle up &lt;code&gt;core-js&lt;/code&gt; instead of usage loader for each file, otherwise, you will have hundreds of requests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;CommonJS and prototype methods without global namespace pollution&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;In the &lt;code&gt;pure&lt;/code&gt; version, we can&#39;t pollute prototypes of native constructors. Because of that, prototype methods transformed into static methods like in examples above. But with transpilers, we can use one more trick - &lt;a href=&quot;https://github.com/tc39/proposal-bind-operator&quot;&gt;bind operator and virtual methods&lt;/a&gt;. Special for that, available &lt;code&gt;/virtual/&lt;/code&gt; entry points. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fill from &#39;core-js-pure/features/array/virtual/fill&#39;;
import findIndex from &#39;core-js-pure/features/array/virtual/find-index&#39;;

Array(10)::fill(0).map((a, b) =&amp;gt; b * b)::findIndex(it =&amp;gt; it &amp;amp;&amp;amp; !(it % 8)); // =&amp;gt; 4

// or

import { fill, findIndex } from &#39;core-js-pure/features/array/virtual&#39;;

Array(10)::fill(0).map((a, b) =&amp;gt; b * b)::findIndex(it =&amp;gt; it &amp;amp;&amp;amp; !(it % 8)); // =&amp;gt; 4
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning!&lt;/strong&gt; The bind operator is an early-stage ECMAScript proposal and usage of this syntax can be dangerous.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Babel&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;core-js&lt;/code&gt; is integrated with &lt;code&gt;babel&lt;/code&gt; and is the base for polyfilling-related &lt;code&gt;babel&lt;/code&gt; features:&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;@babel/polyfill&lt;/code&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;http://babeljs.io/docs/usage/polyfill&quot;&gt;&lt;code&gt;@babel/polyfill&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/babel/babel/raw/c8bb4500326700e7dc68ce8c4b90b6482c48d82f/packages/babel-polyfill/src/index.js&quot;&gt;&lt;strong&gt;IS&lt;/strong&gt; just the import of stable &lt;code&gt;core-js&lt;/code&gt; features and &lt;code&gt;regenerator-runtime&lt;/code&gt;&lt;/a&gt; for generators and async functions, so if you load &lt;code&gt;@babel/polyfill&lt;/code&gt; - you load the global version of &lt;code&gt;core-js&lt;/code&gt; without ES proposals.&lt;/p&gt; 
&lt;p&gt;Now it&#39;s deprecated in favour of separate inclusion of required parts of &lt;code&gt;core-js&lt;/code&gt; and &lt;code&gt;regenerator-runtime&lt;/code&gt; and, for preventing breaking changes, left on &lt;code&gt;core-js@2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;As a full equal of &lt;code&gt;@babel/polyfill&lt;/code&gt;, you can use this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;core-js/stable&#39;;
import &#39;regenerator-runtime/runtime&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-env&quot;&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt; has &lt;code&gt;useBuiltIns&lt;/code&gt; option, which optimizes working with global version of &lt;code&gt;core-js&lt;/code&gt;. With &lt;code&gt;useBuiltIns&lt;/code&gt; option, you should also set &lt;code&gt;corejs&lt;/code&gt; option to used version of &lt;code&gt;core-js&lt;/code&gt;, like &lt;code&gt;corejs: &#39;3.17&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning!&lt;/strong&gt; Recommended to specify used minor &lt;code&gt;core-js&lt;/code&gt; version, like &lt;code&gt;corejs: &#39;3.17&#39;&lt;/code&gt;, instead of &lt;code&gt;corejs: 3&lt;/code&gt;, since with &lt;code&gt;corejs: 3&lt;/code&gt; will not be injected modules which were added in minor &lt;code&gt;core-js&lt;/code&gt; releases.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;useBuiltIns: &#39;entry&#39;&lt;/code&gt; replaces imports of &lt;code&gt;core-js&lt;/code&gt; to import only required for a target environment modules. So, for example,&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;core-js/stable&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;with &lt;code&gt;chrome 71&lt;/code&gt; target will be replaced just to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &quot;core-js/modules/es.array.unscopables.flat&quot;;
import &quot;core-js/modules/es.array.unscopables.flat-map&quot;;
import &quot;core-js/modules/es.object.from-entries&quot;;
import &quot;core-js/modules/web.immediate&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It works for all entry points of global version of &lt;code&gt;core-js&lt;/code&gt; and their combinations, for example for&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;core-js/es&#39;;
import &#39;core-js/proposals/set-methods&#39;;
import &#39;core-js/features/set/map&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;with &lt;code&gt;chrome 71&lt;/code&gt; target you will have as a result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &quot;core-js/modules/es.array.unscopables.flat&quot;;
import &quot;core-js/modules/es.array.unscopables.flat-map&quot;;
import &quot;core-js/modules/es.object.from-entries&quot;;
import &quot;core-js/modules/esnext.set.difference&quot;;
import &quot;core-js/modules/esnext.set.intersection&quot;;
import &quot;core-js/modules/esnext.set.is-disjoint-from&quot;;
import &quot;core-js/modules/esnext.set.is-subset-of&quot;;
import &quot;core-js/modules/esnext.set.is-superset-of&quot;;
import &quot;core-js/modules/esnext.set.map&quot;;
import &quot;core-js/modules/esnext.set.symmetric-difference&quot;;
import &quot;core-js/modules/esnext.set.union&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;useBuiltIns: &#39;usage&#39;&lt;/code&gt; adds to the top of each file import of polyfills for features used in this file and not supported by target environments, so for:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// first file:
var set = new Set([1, 2, 3]);

// second file:
var array = Array.of(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;if target contains an old environment like &lt;code&gt;IE 11&lt;/code&gt; we will have something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// first file:
import &#39;core-js/modules/es.array.iterator&#39;;
import &#39;core-js/modules/es.object.to-string&#39;;
import &#39;core-js/modules/es.set&#39;;
var set = new Set([1, 2, 3]);

// second file:
import &#39;core-js/modules/es.array.of&#39;;
var array = Array.of(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, &lt;code&gt;@babel/preset-env&lt;/code&gt; with &lt;code&gt;useBuiltIns: &#39;usage&#39;&lt;/code&gt; option only polyfills stable features, but you can enable polyfilling of proposals by &lt;code&gt;proposals&lt;/code&gt; option, as &lt;code&gt;corejs: { version: &#39;3.17&#39;, proposals: true }&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;@babel/runtime&lt;/code&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;http://babeljs.io/docs/plugins/transform-runtime/&quot;&gt;&lt;code&gt;@babel/runtime&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;corejs: 3&lt;/code&gt; option simplifies work with &lt;code&gt;core-js-pure&lt;/code&gt;. It automatically replaces usage of modern features from JS standard library to imports from the version of &lt;code&gt;core-js&lt;/code&gt; without global namespace pollution, so instead of:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import from from &#39;core-js-pure/stable/array/from&#39;;
import flat from &#39;core-js-pure/stable/array/flat&#39;;
import Set from &#39;core-js-pure/stable/set&#39;;
import Promise from &#39;core-js-pure/stable/promise&#39;;

from(new Set([1, 2, 3, 2, 1]));
flat([1, [2, 3], [4, [5]]], 2);
Promise.resolve(32).then(x =&amp;gt; console.log(x));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;you can write just:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Array.from(new Set([1, 2, 3, 2, 1]));
[1, [2, 3], [4, [5]]].flat(2);
Promise.resolve(32).then(x =&amp;gt; console.log(x));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, &lt;code&gt;@babel/runtime&lt;/code&gt; only polyfills stable features, but like in &lt;code&gt;@babel/preset-env&lt;/code&gt;, you can enable polyfilling of proposals by &lt;code&gt;proposals&lt;/code&gt; option, as &lt;code&gt;corejs: { version: 3, proposals: true }&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning!&lt;/strong&gt; If you use &lt;code&gt;@babel/preset-env&lt;/code&gt; and &lt;code&gt;@babel/runtime&lt;/code&gt; together, use &lt;code&gt;corejs&lt;/code&gt; option only in one place since it&#39;s duplicate functionality and will cause conflicts.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;swc&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Fast JavaScript transpiler &lt;code&gt;swc&lt;/code&gt; contains integration with &lt;code&gt;core-js&lt;/code&gt; in &lt;a href=&quot;https://swc.rs/docs/preset-env&quot;&gt;&lt;code&gt;preset-env&lt;/code&gt;&lt;/a&gt;, which optimizes working with global version of &lt;code&gt;core-js&lt;/code&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#babelpreset-env&quot;&gt;Like &lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt;, it has 2 modes: &lt;code&gt;usage&lt;/code&gt; and &lt;code&gt;entry&lt;/code&gt;, but &lt;code&gt;usage&lt;/code&gt; mode still works not so good like in &lt;code&gt;babel&lt;/code&gt;. Example of configuration in &lt;code&gt;.swcrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;env&quot;: {
    &quot;targets&quot;: &quot;&amp;gt; 0.25%, not dead&quot;,
    &quot;mode&quot;: &quot;entry&quot;,
    &quot;coreJs&quot;: &quot;3.13&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configurable level of aggressiveness&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;By default, &lt;code&gt;core-js&lt;/code&gt; sets polyfills only when they are required. That means that &lt;code&gt;core-js&lt;/code&gt; checks if a feature is available and works correctly or not and if it has no problems, &lt;code&gt;core-js&lt;/code&gt; use native implementation.&lt;/p&gt; 
&lt;p&gt;But sometimes &lt;code&gt;core-js&lt;/code&gt; feature detection could be too strict for your case. For example, &lt;code&gt;Promise&lt;/code&gt; constructor requires the support of unhandled rejection tracking and &lt;code&gt;@@species&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Sometimes we could have inverse problem - knowingly broken environment with problems not covered by &lt;code&gt;core-js&lt;/code&gt; feature detection.&lt;/p&gt; 
&lt;p&gt;For those cases, we could redefine this behaviour for certain polyfills:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const configurator = require(&#39;core-js/configurator&#39;);

configurator({
  useNative: [&#39;Promise&#39;],                                 // polyfills will be used only if natives completely unavailable
  usePolyfill: [&#39;Array.from&#39;, &#39;String.prototype.padEnd&#39;], // polyfills will be used anyway
  useFeatureDetection: [&#39;Map&#39;, &#39;Set&#39;],                    // default behaviour
});

require(&#39;core-js&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It does not work with some features. Also, if you change the default behaviour, even &lt;code&gt;core-js&lt;/code&gt; internals may not work correctly.&lt;/p&gt; 
&lt;h3&gt;Custom build&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;For some cases could be useful to exclude some &lt;code&gt;core-js&lt;/code&gt; features or generate a polyfill for target engines. You could use &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/packages/core-js-builder&quot;&gt;&lt;code&gt;core-js-builder&lt;/code&gt;&lt;/a&gt; package for that.&lt;/p&gt; 
&lt;h3&gt;Compatibility data&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/packages/core-js-compat&quot;&gt;&lt;code&gt;core-js-compat&lt;/code&gt;&lt;/a&gt; package contains data about the necessity of &lt;code&gt;core-js&lt;/code&gt; modules and API for getting a list of required &lt;code&gt;core-js&lt;/code&gt; modules by &lt;code&gt;browserslist&lt;/code&gt; query.&lt;/p&gt; 
&lt;h2&gt;Supported engines&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Tested in:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome 26+&lt;/li&gt; 
 &lt;li&gt;Firefox 4+&lt;/li&gt; 
 &lt;li&gt;Safari 5+&lt;/li&gt; 
 &lt;li&gt;Opera 12+&lt;/li&gt; 
 &lt;li&gt;Internet Explorer 8+ (sure, IE8 with ES3 limitations; IE7- also should work, but no longer tested)&lt;/li&gt; 
 &lt;li&gt;Edge&lt;/li&gt; 
 &lt;li&gt;Android Browser 2.3+&lt;/li&gt; 
 &lt;li&gt;iOS Safari 5.1+&lt;/li&gt; 
 &lt;li&gt;PhantomJS 1.9+&lt;/li&gt; 
 &lt;li&gt;NodeJS 0.8+&lt;/li&gt; 
 &lt;li&gt;Deno 1.0+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;...and it doesn&#39;t mean &lt;code&gt;core-js&lt;/code&gt; will not work in other engines, they just have not been tested.&lt;/p&gt; 
&lt;h2&gt;Features:&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ECMAScript&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: Object&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.assign.js&quot;&gt;&lt;code&gt;es.object.assign&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.is.js&quot;&gt;&lt;code&gt;es.object.is&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.set-prototype-of.js&quot;&gt;&lt;code&gt;es.object.set-prototype-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.to-string.js&quot;&gt;&lt;code&gt;es.object.to-string&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.freeze.js&quot;&gt;&lt;code&gt;es.object.freeze&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.seal.js&quot;&gt;&lt;code&gt;es.object.seal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.prevent-extensions.js&quot;&gt;&lt;code&gt;es.object.prevent-extensions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.is-frozen.js&quot;&gt;&lt;code&gt;es.object.is-frozen&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.is-sealed.js&quot;&gt;&lt;code&gt;es.object.is-sealed&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.is-extensible.js&quot;&gt;&lt;code&gt;es.object.is-extensible&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.get-own-property-descriptor.js&quot;&gt;&lt;code&gt;es.object.get-own-property-descriptor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.get-own-property-descriptors.js&quot;&gt;&lt;code&gt;es.object.get-own-property-descriptors&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.get-prototype-of.js&quot;&gt;&lt;code&gt;es.object.get-prototype-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.keys.js&quot;&gt;&lt;code&gt;es.object.keys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.values.js&quot;&gt;&lt;code&gt;es.object.values&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.entries.js&quot;&gt;&lt;code&gt;es.object.entries&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.get-own-property-names.js&quot;&gt;&lt;code&gt;es.object.get-own-property-names&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.from-entries.js&quot;&gt;&lt;code&gt;es.object.from-entries&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.has-own.js&quot;&gt;&lt;code&gt;es.object.has-own&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Just ES5 features: &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.create.js&quot;&gt;&lt;code&gt;es.object.create&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.define-property.js&quot;&gt;&lt;code&gt;es.object.define-property&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.es.object.define-properties.js&quot;&gt;&lt;code&gt;es.object.define-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://tc39.es/ecma262/#sec-object.prototype.__defineGetter__&quot;&gt;ES2017 Annex B&lt;/a&gt; - modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.define-setter.js&quot;&gt;&lt;code&gt;es.object.define-setter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.define-getter.js&quot;&gt;&lt;code&gt;es.object.define-getter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.lookup-setter.js&quot;&gt;&lt;code&gt;es.object.lookup-setter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.lookup-getter.js&quot;&gt;&lt;code&gt;es.object.lookup-getter&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Object {
  toString(): string; // ES2015+ fix: @@toStringTag support
  __defineGetter__(property: PropertyKey, getter: Function): void;
  __defineSetter__(property: PropertyKey, setter: Function): void;
  __lookupGetter__(property: PropertyKey): Function | void;
  __lookupSetter__(property: PropertyKey): Function | void;
  static assign(target: Object, ...sources: Array&amp;lt;Object&amp;gt;): Object;
  static create(prototype: Object | null, properties?: { [property: PropertyKey]: PropertyDescriptor }): Object;
  static defineProperties(object: Object, properties: { [property: PropertyKey]: PropertyDescriptor })): Object;
  static defineProperty(object: Object, property: PropertyKey, attributes: PropertyDescriptor): Object;
  static entries(object: Object): Array&amp;lt;[string, mixed]&amp;gt;;
  static freeze(object: any): any;
  static fromEntries(iterable: Iterable&amp;lt;[key, value]&amp;gt;): Object;
  static getOwnPropertyDescriptor(object: any, property: PropertyKey): PropertyDescriptor | void;
  static getOwnPropertyDescriptors(object: any): { [property: PropertyKey]: PropertyDescriptor };
  static getOwnPropertyNames(object: any): Array&amp;lt;string&amp;gt;;
  static getPrototypeOf(object: any): Object | null;
  static hasOwn(object: object, key: PropertyKey): boolean;
  static is(value1: any, value2: any): boolean;
  static isExtensible(object: any): boolean;
  static isFrozen(object: any): boolean;
  static isSealed(object: any): boolean;
  static keys(object: any): Array&amp;lt;string&amp;gt;;
  static preventExtensions(object: any): any;
  static seal(object: any): any;
  static setPrototypeOf(target: any, prototype: Object | null): any; // required __proto__ - IE11+
  static values(object: any): Array&amp;lt;mixed&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/object
core-js(-pure)/es|stable|features/object/assign
core-js(-pure)/es|stable|features/object/is
core-js(-pure)/es|stable|features/object/set-prototype-of
core-js(-pure)/es|stable|features/object/get-prototype-of
core-js(-pure)/es|stable|features/object/create
core-js(-pure)/es|stable|features/object/define-property
core-js(-pure)/es|stable|features/object/define-properties
core-js(-pure)/es|stable|features/object/get-own-property-descriptor
core-js(-pure)/es|stable|features/object/get-own-property-descriptors
core-js(-pure)/es|stable|features/object/has-own
core-js(-pure)/es|stable|features/object/keys
core-js(-pure)/es|stable|features/object/values
core-js(-pure)/es|stable|features/object/entries
core-js(-pure)/es|stable|features/object/get-own-property-names
core-js(-pure)/es|stable|features/object/freeze
core-js(-pure)/es|stable|features/object/from-entries
core-js(-pure)/es|stable|features/object/seal
core-js(-pure)/es|stable|features/object/prevent-extensions
core-js(-pure)/es|stable|features/object/is-frozen
core-js(-pure)/es|stable|features/object/is-sealed
core-js(-pure)/es|stable|features/object/is-extensible
core-js/es|stable|features/object/to-string
core-js(-pure)/es|stable|features/object/define-getter
core-js(-pure)/es|stable|features/object/define-setter
core-js(-pure)/es|stable|features/object/lookup-getter
core-js(-pure)/es|stable|features/object/lookup-setter
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#var%20foo%20%3D%20%7Bq%3A%201%2C%20w%3A%202%7D%0A%20%20%2C%20bar%20%3D%20%7Be%3A%203%2C%20r%3A%204%7D%0A%20%20%2C%20baz%20%3D%20%7Bt%3A%205%2C%20y%3A%206%7D%3B%0AObject.assign(foo%2C%20bar%2C%20baz)%3B%0Alog(foo)%3B%20%2F%2F%20%3D%3E%20%7Bq%3A%201%2C%20w%3A%202%2C%20e%3A%203%2C%20r%3A%204%2C%20t%3A%205%2C%20y%3A%206%7D%0A%0Alog(Object.is(NaN%2C%20NaN))%3B%20%2F%2F%20%3D%3E%20true%0Alog(Object.is(0%2C%20-0))%3B%20%20%20%20%2F%2F%20%3D%3E%20false%0Alog(Object.is(42%2C%2042))%3B%20%20%20%2F%2F%20%3D%3E%20true%0Alog(Object.is(42%2C%20&#39;42&#39;))%3B%20%2F%2F%20%3D%3E%20false%0A%0Afunction%20Parent()%7B%7D%0Afunction%20Child()%7B%7D%0AObject.setPrototypeOf(Child.prototype%2C%20Parent.prototype)%3B%0Alog(new%20Child%20instanceof%20Child)%3B%20%20%2F%2F%20%3D%3E%20true%0Alog(new%20Child%20instanceof%20Parent)%3B%20%2F%2F%20%3D%3E%20true%0A%0Avar%20O%20%3D%20%7B%7D%3B%0AO%5BSymbol.toStringTag%5D%20%3D%20&#39;Foo&#39;%3B%0Alog(&#39;&#39;%20%2B%20O)%3B%20%2F%2F%20%3D%3E%20&#39;%5Bobject%20Foo%5D&#39;%0A%0Alog(Object.keys(&#39;qwe&#39;))%3B%20%2F%2F%20%3D%3E%20%5B&#39;0&#39;%2C%20&#39;1&#39;%2C%20&#39;2&#39;%5D%0Alog(Object.getPrototypeOf(&#39;qwe&#39;)%20%3D%3D%3D%20String.prototype)%3B%20%2F%2F%20%3D%3E%20true%0A%0Alog(Object.values(%7Ba%3A%201%2C%20b%3A%202%2C%20c%3A%203%7D))%3B%20%20%2F%2F%20%3D%3E%20%5B1%2C%202%2C%203%5D%0Alog(Object.entries(%7Ba%3A%201%2C%20b%3A%202%2C%20c%3A%203%7D))%3B%20%2F%2F%20%3D%3E%20%5B%5B&#39;a&#39;%2C%201%5D%2C%20%5B&#39;b&#39;%2C%202%5D%2C%20%5B&#39;c&#39;%2C%203%5D%5D%0A%0Afor(let%20%5Bkey%2C%20value%5D%20of%20Object.entries(%7Ba%3A%201%2C%20b%3A%202%2C%20c%3A%203%7D))%7B%0A%20%20log(key)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;a&#39;%2C%20&#39;b&#39;%2C%20&#39;c&#39;%0A%20%20log(value)%3B%20%2F%2F%20%3D%3E%201%2C%202%2C%203%0A%7D%0A%0A%2F%2F%20Shallow%20object%20cloning%20with%20prototype%20and%20descriptors%3A%0A%2F%2F%20let%20copy%20%3D%20Object.create(Object.getPrototypeOf(object)%2C%20Object.getOwnPropertyDescriptors(object))%3B%0A%2F%2F%20Mixin%3A%0A%2F%2F%20Object.defineProperties(target%2C%20Object.getOwnPropertyDescriptors(source))%3B%0A%0Aconst%20map%20%3D%20new%20Map(%5B%5B&#39;a&#39;%2C%201%5D%2C%20%5B&#39;b&#39;%2C%202%5D%5D)%3B%0Alog(Object.fromEntries(map))%3B%20%2F%2F%20%3D%3E%20%7B%20a%3A%201%2C%20b%3A%202%20%7D%0A%0Aclass%20Unit%20%7B%0A%20%20constructor(id)%20%7B%0A%20%20%20%20this.id%20%3D%20id%3B%0A%20%20%7D%0A%20%20toString()%20%7B%0A%20%20%20%20return%20%60unit%24%7B%20this.id%20%7D%60%3B%0A%20%20%7D%0A%7D%0A%0Aconst%20units%20%3D%20new%20Set(%5Bnew%20Unit(101)%2C%20new%20Unit(102)%5D)%3B%0A%0Alog(Object.fromEntries(units.entries()))%3B%20%2F%2F%20%3D%3E%20%7B%20unit101%3A%20Unit%20%7B%20id%3A%20101%20%7D%2C%20unit102%3A%20Unit%20%7B%20id%3A%20102%20%7D%20%7D%0A%0Alog(Object.hasOwn(%7B%20foo%3A%2042%20%7D%2C%20&#39;foo&#39;))%3B%20%2F%2F%20%3D%3E%20true%0Alog(Object.hasOwn(%7B%20foo%3A%2042%20%7D%2C%20&#39;bar&#39;))%3B%20%2F%2F%20%3D%3E%20false%0Alog(Object.hasOwn(%7B%7D%2C%20&#39;toString&#39;))%3B%20%20%20%20%20%2F%2F%20%3D%3E%20false&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let foo = { q: 1, w: 2 };
let bar = { e: 3, r: 4 };
let baz = { t: 5, y: 6 };
Object.assign(foo, bar, baz); // =&amp;gt; foo = { q: 1, w: 2, e: 3, r: 4, t: 5, y: 6 }

Object.is(NaN, NaN); // =&amp;gt; true
Object.is(0, -0);    // =&amp;gt; false
Object.is(42, 42);   // =&amp;gt; true
Object.is(42, &#39;42&#39;); // =&amp;gt; false

function Parent() {}
function Child() {}
Object.setPrototypeOf(Child.prototype, Parent.prototype);
new Child() instanceof Child;  // =&amp;gt; true
new Child() instanceof Parent; // =&amp;gt; true

let object = {
  [Symbol.toStringTag]: &#39;Foo&#39;
};

&#39;&#39; + object; // =&amp;gt; &#39;[object Foo]&#39;

Object.keys(&#39;qwe&#39;); // =&amp;gt; [&#39;0&#39;, &#39;1&#39;, &#39;2&#39;]
Object.getPrototypeOf(&#39;qwe&#39;) === String.prototype; // =&amp;gt; true

Object.values({ a: 1, b: 2, c: 3 });  // =&amp;gt; [1, 2, 3]
Object.entries({ a: 1, b: 2, c: 3 }); // =&amp;gt; [[&#39;a&#39;, 1], [&#39;b&#39;, 2], [&#39;c&#39;, 3]]

for (let [key, value] of Object.entries({ a: 1, b: 2, c: 3 })) {
  console.log(key);   // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;
  console.log(value); // =&amp;gt; 1, 2, 3
}

// Shallow object cloning with prototype and descriptors:
let copy = Object.create(Object.getPrototypeOf(object), Object.getOwnPropertyDescriptors(object));
// Mixin:
Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));

const map = new Map([[&#39;a&#39;, 1], [&#39;b&#39;, 2]]);
Object.fromEntries(map); // =&amp;gt; { a: 1, b: 2 }

class Unit {
  constructor(id) {
    this.id = id;
  }
  toString() {
    return `unit${ this.id }`;
  }
}

const units = new Set([new Unit(101), new Unit(102)]);

Object.fromEntries(units.entries()); // =&amp;gt; { unit101: Unit { id: 101 }, unit102: Unit { id: 102 } }

Object.hasOwn({ foo: 42 }, &#39;foo&#39;); // =&amp;gt; true
Object.hasOwn({ foo: 42 }, &#39;bar&#39;); // =&amp;gt; false
Object.hasOwn({}, &#39;toString&#39;);     // =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: Function&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.function.name.js&quot;&gt;&lt;code&gt;es.function.name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.function.has-instance.js&quot;&gt;&lt;code&gt;es.function.has-instance&lt;/code&gt;&lt;/a&gt;. Just ES5: &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.function.bind.js&quot;&gt;&lt;code&gt;es.function.bind&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Function {
  name: string;
  bind(thisArg: any, ...args: Array&amp;lt;mixed&amp;gt;): Function;
  @@hasInstance(value: any): boolean;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/es|stable|features/function
core-js/es|stable|features/function/name
core-js/es|stable|features/function/has-instance
core-js/es|stable|features/function/bind
core-js/es|stable|features/function/virtual/bind
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/zqu3Wp&quot;&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function foo() {}).name // =&amp;gt; &#39;foo&#39;

console.log.bind(console, 42)(43); // =&amp;gt; 42 43
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: Array&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.from.js&quot;&gt;&lt;code&gt;es.array.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.is-array.js&quot;&gt;&lt;code&gt;es.array.is-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.of.js&quot;&gt;&lt;code&gt;es.array.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.copy-within.js&quot;&gt;&lt;code&gt;es.array.copy-within&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.fill.js&quot;&gt;&lt;code&gt;es.array.fill&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.find.js&quot;&gt;&lt;code&gt;es.array.find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.find-index.js&quot;&gt;&lt;code&gt;es.array.find-index&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.iterator.js&quot;&gt;&lt;code&gt;es.array.iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.includes.js&quot;&gt;&lt;code&gt;es.array.includes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.slice.js&quot;&gt;&lt;code&gt;es.array.slice&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.join.js&quot;&gt;&lt;code&gt;es.array.join&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.index-of.js&quot;&gt;&lt;code&gt;es.array.index-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.last-index-of.js&quot;&gt;&lt;code&gt;es.array.last-index-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.every.js&quot;&gt;&lt;code&gt;es.array.every&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.some.js&quot;&gt;&lt;code&gt;es.array.some&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.for-each.js&quot;&gt;&lt;code&gt;es.array.for-each&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.map.js&quot;&gt;&lt;code&gt;es.array.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.filter.js&quot;&gt;&lt;code&gt;es.array.filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.reduce.js&quot;&gt;&lt;code&gt;es.array.reduce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.reduce-right.js&quot;&gt;&lt;code&gt;es.array.reduce-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.reverse.js&quot;&gt;&lt;code&gt;es.array.reverse&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.sort.js&quot;&gt;&lt;code&gt;es.array.sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.flat.js&quot;&gt;&lt;code&gt;es.array.flat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.flat-map.js&quot;&gt;&lt;code&gt;es.array.flat-map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.unscopables.flat.js&quot;&gt;&lt;code&gt;es.array.unscopables.flat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.unscopables.flat-map.js&quot;&gt;&lt;code&gt;es.array.unscopables.flat-map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.at.js&quot;&gt;&lt;code&gt;es.array.at&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Array {
  at(index: int): any;
  concat(...args: Array&amp;lt;mixed&amp;gt;): Array&amp;lt;mixed&amp;gt;; // with adding support of @@isConcatSpreadable and @@species
  copyWithin(target: number, start: number, end?: number): this;
  entries(): Iterator&amp;lt;[index, value]&amp;gt;;
  every(callbackfn: (value: any, index: number, target: any) =&amp;gt; boolean, thisArg?: any): boolean;
  fill(value: any, start?: number, end?: number): this;
  filter(callbackfn: (value: any, index: number, target: any) =&amp;gt; boolean, thisArg?: any): Array&amp;lt;mixed&amp;gt;; // with adding support of @@species
  find(callbackfn: (value: any, index: number, target: any) =&amp;gt; boolean), thisArg?: any): any;
  findIndex(callbackfn: (value: any, index: number, target: any) =&amp;gt; boolean, thisArg?: any): number;
  flat(depthArg?: number = 1): Array&amp;lt;mixed&amp;gt;;
  flatMap(mapFn: (value: any, index: number, target: any) =&amp;gt; any, thisArg: any): Array&amp;lt;mixed&amp;gt;;
  forEach(callbackfn: (value: any, index: number, target: any) =&amp;gt; void, thisArg?: any): void;
  includes(searchElement: any, from?: number): boolean;
  indexOf(searchElement: any, from?: number): number;
  join(separator: string = &#39;,&#39;): string;
  keys(): Iterator&amp;lt;index&amp;gt;;
  lastIndexOf(searchElement: any, from?: number): number;
  map(mapFn: (value: any, index: number, target: any) =&amp;gt; any, thisArg?: any): Array&amp;lt;mixed&amp;gt;; // with adding support of @@species
  reduce(callbackfn: (memo: any, value: any, index: number, target: any) =&amp;gt; any, initialValue?: any): any;
  reduceRight(callbackfn: (memo: any, value: any, index: number, target: any) =&amp;gt; any, initialValue?: any): any;
  reverse(): this; // Safari 12.0 bug fix
  slice(start?: number, end?: number): Array&amp;lt;mixed&amp;gt;; // with adding support of @@species
  splice(start?: number, deleteCount?: number, ...items: Array&amp;lt;mixed&amp;gt;): Array&amp;lt;mixed&amp;gt;; // with adding support of @@species
  some(callbackfn: (value: any, index: number, target: any) =&amp;gt; boolean, thisArg?: any): boolean;
  sort(comparefn?: (a: any, b: any) =&amp;gt; number): this; // with modern behavior like stable sort
  values(): Iterator&amp;lt;value&amp;gt;;
  @@iterator(): Iterator&amp;lt;value&amp;gt;;
  @@unscopables: { [newMethodNames: string]: true };
  static from(items: Iterable | ArrayLike, mapFn?: (value: any, index: number) =&amp;gt; any, thisArg?: any): Array&amp;lt;mixed&amp;gt;;
  static isArray(value: any): boolean;
  static of(...args: Array&amp;lt;mixed&amp;gt;): Array&amp;lt;mixed&amp;gt;;
}

class Arguments {
  @@iterator(): Iterator&amp;lt;value&amp;gt;; // available only in core-js methods
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/array
core-js(-pure)/es|stable|features/array/from
core-js(-pure)/es|stable|features/array/of
core-js(-pure)/es|stable|features/array/is-array
core-js(-pure)/es|stable|features/array/at
core-js(-pure)/es|stable|features/array/concat
core-js(-pure)/es|stable|features/array/entries
core-js(-pure)/es|stable|features/array/every
core-js(-pure)/es|stable|features/array/copy-within
core-js(-pure)/es|stable|features/array/fill
core-js(-pure)/es|stable|features/array/filter
core-js(-pure)/es|stable|features/array/find
core-js(-pure)/es|stable|features/array/find-index
core-js(-pure)/es|stable|features/array/flat
core-js(-pure)/es|stable|features/array/flat-map
core-js(-pure)/es|stable|features/array/for-each
core-js(-pure)/es|stable|features/array/includes
core-js(-pure)/es|stable|features/array/index-of
core-js(-pure)/es|stable|features/array/iterator
core-js(-pure)/es|stable|features/array/join
core-js(-pure)/es|stable|features/array/keys
core-js(-pure)/es|stable|features/array/last-index-of
core-js(-pure)/es|stable|features/array/map
core-js(-pure)/es|stable|features/array/reduce
core-js(-pure)/es|stable|features/array/reduce-right
core-js(-pure)/es|stable|features/array/reverse
core-js(-pure)/es|stable|features/array/slice
core-js(-pure)/es|stable|features/array/splice
core-js(-pure)/es|stable|features/array/some
core-js(-pure)/es|stable|features/array/sort
core-js(-pure)/es|stable|features/array/values
core-js(-pure)/es|stable|features/array/virtual/at
core-js(-pure)/es|stable|features/array/virtual/concat
core-js(-pure)/es|stable|features/array/virtual/copy-within
core-js(-pure)/es|stable|features/array/virtual/entries
core-js(-pure)/es|stable|features/array/virtual/every
core-js(-pure)/es|stable|features/array/virtual/fill
core-js(-pure)/es|stable|features/array/virtual/filter
core-js(-pure)/es|stable|features/array/virtual/find
core-js(-pure)/es|stable|features/array/virtual/find-index
core-js(-pure)/es|stable|features/array/virtual/flat
core-js(-pure)/es|stable|features/array/virtual/flat-map
core-js(-pure)/es|stable|features/array/virtual/for-each
core-js(-pure)/es|stable|features/array/virtual/includes
core-js(-pure)/es|stable|features/array/virtual/index-of
core-js(-pure)/es|stable|features/array/virtual/iterator
core-js(-pure)/es|stable|features/array/virtual/join
core-js(-pure)/es|stable|features/array/virtual/keys
core-js(-pure)/es|stable|features/array/virtual/last-index-of
core-js(-pure)/es|stable|features/array/virtual/map
core-js(-pure)/es|stable|features/array/virtual/reduce
core-js(-pure)/es|stable|features/array/virtual/reduce-right
core-js(-pure)/es|stable|features/array/virtual/reverse
core-js(-pure)/es|stable|features/array/virtual/slice
core-js(-pure)/es|stable|features/array/virtual/some
core-js(-pure)/es|stable|features/array/virtual/sort
core-js(-pure)/es|stable|features/array/virtual/splice
core-js(-pure)/es|stable|features/array/virtual/values
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(Array.from(new%20Set(%5B1%2C%202%2C%203%2C%202%2C%201%5D)))%3B%20%20%20%20%20%20%2F%2F%20%3D%3E%20%5B1%2C%202%2C%203%5D%0Alog(Array.from(%7B0%3A%201%2C%201%3A%202%2C%202%3A%203%2C%20length%3A%203%7D))%3B%20%2F%2F%20%3D%3E%20%5B1%2C%202%2C%203%5D%0Alog(Array.from(&#39;123&#39;%2C%20Number))%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20%5B1%2C%202%2C%203%5D%0Alog(Array.from(&#39;123&#39;%2C%20function(it)%7B%0A%20%20return%20it%20*%20it%3B%0A%7D))%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20%5B1%2C%204%2C%209%5D%0A%0Alog(Array.of(1))%3B%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20%5B1%5D%0Alog(Array.of(1%2C%202%2C%203))%3B%20%2F%2F%20%3D%3E%20%5B1%2C%202%2C%203%5D%0A%0Avar%20array%20%3D%20%5B&#39;a&#39;%2C%20&#39;b&#39;%2C%20&#39;c&#39;%5D%3B%0A%0Afor(var%20val%20of%20array)log(val)%3B%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;a&#39;%2C%20&#39;b&#39;%2C%20&#39;c&#39;%0Afor(var%20val%20of%20array.values())log(val)%3B%20%2F%2F%20%3D%3E%20&#39;a&#39;%2C%20&#39;b&#39;%2C%20&#39;c&#39;%0Afor(var%20key%20of%20array.keys())log(key)%3B%20%20%20%2F%2F%20%3D%3E%200%2C%201%2C%202%0Afor(var%20%5Bkey%2C%20val%5D%20of%20array.entries())%7B%0A%20%20log(key)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%200%2C%201%2C%202%0A%20%20log(val)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;a&#39;%2C%20&#39;b&#39;%2C%20&#39;c&#39;%0A%7D%0A%0Afunction%20isOdd(val)%7B%0A%20%20return%20val%20%25%202%3B%0A%7D%0Alog(%5B4%2C%208%2C%2015%2C%2016%2C%2023%2C%2042%5D.find(isOdd))%3B%20%20%20%20%20%20%2F%2F%20%3D%3E%2015%0Alog(%5B4%2C%208%2C%2015%2C%2016%2C%2023%2C%2042%5D.findIndex(isOdd))%3B%20%2F%2F%20%3D%3E%202%0Alog(%5B4%2C%208%2C%2015%2C%2016%2C%2023%2C%2042%5D.find(isNaN))%3B%20%20%20%20%20%20%2F%2F%20%3D%3E%20undefined%0Alog(%5B4%2C%208%2C%2015%2C%2016%2C%2023%2C%2042%5D.findIndex(isNaN))%3B%20%2F%2F%20%3D%3E%20-1%0A%0Alog(Array(5).fill(42))%3B%20%2F%2F%20%3D%3E%20%5B42%2C%2042%2C%2042%2C%2042%2C%2042%5D%0A%0Alog(%5B1%2C%202%2C%203%2C%204%2C%205%5D.copyWithin(0%2C%203))%3B%20%2F%2F%20%3D%3E%20%5B4%2C%205%2C%203%2C%204%2C%205%5D%0A%0Alog(%5B1%2C%202%2C%203%5D.includes(2))%3B%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20true%0Alog(%5B1%2C%202%2C%203%5D.includes(4))%3B%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20false%0Alog(%5B1%2C%202%2C%203%5D.includes(2%2C%202))%3B%20%20%20%20%20%2F%2F%20%3D%3E%20false%0A%0Alog(%5BNaN%5D.indexOf(NaN))%3B%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20-1%0Alog(%5BNaN%5D.includes(NaN))%3B%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20true%0Alog(Array(1).indexOf(undefined))%3B%20%20%2F%2F%20%3D%3E%20-1%0Alog(Array(1).includes(undefined))%3B%20%2F%2F%20%3D%3E%20true%0A%0Alog(%5B%7B%20a%3A%201%2C%20b%3A%202%20%7D%2C%20%7B%20a%3A%203%2C%20b%3A%204%20%7D%2C%20%7B%20a%3A%205%2C%20b%3A%206%20%7D%5D.flatMap(it%20%3D%3E%20%5Bit.a%2C%20it.b%5D))%3B%20%2F%2F%20%3D%3E%20%5B1%2C%202%2C%203%2C%204%2C%205%2C%206%5D%0A%0Alog(%5B1%2C%202%2C%203%5D.at(1))%3B%20%20%2F%2F%20%3D%3E%202%0Alog(%5B1%2C%202%2C%203%5D.at(-1))%3B%20%2F%2F%20%3D%3E%203&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Array.from(new Set([1, 2, 3, 2, 1]));        // =&amp;gt; [1, 2, 3]
Array.from({ 0: 1, 1: 2, 2: 3, length: 3 }); // =&amp;gt; [1, 2, 3]
Array.from(&#39;123&#39;, Number);                   // =&amp;gt; [1, 2, 3]
Array.from(&#39;123&#39;, it =&amp;gt; it * it);            // =&amp;gt; [1, 4, 9]

Array.of(1);       // =&amp;gt; [1]
Array.of(1, 2, 3); // =&amp;gt; [1, 2, 3]

let array = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;];

for (let value of array) console.log(value);          // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;
for (let value of array.values()) console.log(value); // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;
for (let key of array.keys()) console.log(key);       // =&amp;gt; 0, 1, 2
for (let [key, value] of array.entries()) {
  console.log(key);                                   // =&amp;gt; 0, 1, 2
  console.log(value);                                 // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;
}

function isOdd(value) {
  return value % 2;
}
[4, 8, 15, 16, 23, 42].find(isOdd);      // =&amp;gt; 15
[4, 8, 15, 16, 23, 42].findIndex(isOdd); // =&amp;gt; 2
[4, 8, 15, 16, 23, 42].find(isNaN);      // =&amp;gt; undefined
[4, 8, 15, 16, 23, 42].findIndex(isNaN); // =&amp;gt; -1

Array(5).fill(42); // =&amp;gt; [42, 42, 42, 42, 42]

[1, 2, 3, 4, 5].copyWithin(0, 3); // =&amp;gt; [4, 5, 3, 4, 5]


[1, 2, 3].includes(2);        // =&amp;gt; true
[1, 2, 3].includes(4);        // =&amp;gt; false
[1, 2, 3].includes(2, 2);     // =&amp;gt; false

[NaN].indexOf(NaN);           // =&amp;gt; -1
[NaN].includes(NaN);          // =&amp;gt; true
Array(1).indexOf(undefined);  // =&amp;gt; -1
Array(1).includes(undefined); // =&amp;gt; true

[1, [2, 3], [4, 5]].flat();    // =&amp;gt; [1, 2, 3, 4, 5]
[1, [2, [3, [4]]], 5].flat();  // =&amp;gt; [1, 2, [3, [4]], 5]
[1, [2, [3, [4]]], 5].flat(3); // =&amp;gt; [1, 2, 3, 4, 5]

[{ a: 1, b: 2 }, { a: 3, b: 4 }, { a: 5, b: 6 }].flatMap(it =&amp;gt; [it.a, it.b]); // =&amp;gt; [1, 2, 3, 4, 5, 6]

[1, 2, 3].at(1);  // =&amp;gt; 2
[1, 2, 3].at(-1); // =&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: String and RegExp&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;The main part of &lt;code&gt;String&lt;/code&gt; features: modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.from-code-point.js&quot;&gt;&lt;code&gt;es.string.from-code-point&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.raw.js&quot;&gt;&lt;code&gt;es.string.raw&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.iterator.js&quot;&gt;&lt;code&gt;es.string.iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.split.js&quot;&gt;&lt;code&gt;es.string.split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.code-point-at.js&quot;&gt;&lt;code&gt;es.string.code-point-at&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.ends-with.js&quot;&gt;&lt;code&gt;es.string.ends-with&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.includes.js&quot;&gt;&lt;code&gt;es.string.includes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.repeat.js&quot;&gt;&lt;code&gt;es.string.repeat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.pad-start.js&quot;&gt;&lt;code&gt;es.string.pad-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.pad-end.js&quot;&gt;&lt;code&gt;es.string.pad-end&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.starts-with.js&quot;&gt;&lt;code&gt;es.string.starts-with&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.trim.js&quot;&gt;&lt;code&gt;es.string.trim&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.trim-start.js&quot;&gt;&lt;code&gt;es.string.trim-start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.trim-end.js&quot;&gt;&lt;code&gt;es.string.trim-end&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.match-all.js&quot;&gt;&lt;code&gt;es.string.match-all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.replace-all.js&quot;&gt;&lt;code&gt;es.string.replace-all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.at-alternative.js&quot;&gt;&lt;code&gt;es.string.at-alternative&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Adding support of well-known &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#ecmascript-symbol&quot;&gt;symbols&lt;/a&gt; &lt;code&gt;@@match&lt;/code&gt;, &lt;code&gt;@@replace&lt;/code&gt;, &lt;code&gt;@@search&lt;/code&gt; and &lt;code&gt;@@split&lt;/code&gt; and direct &lt;code&gt;.exec&lt;/code&gt; calls to related &lt;code&gt;String&lt;/code&gt; methods, modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.match.js&quot;&gt;&lt;code&gt;es.string.match&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.replace.js&quot;&gt;&lt;code&gt;es.string.replace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.search.js&quot;&gt;&lt;code&gt;es.string.search&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.split.js&quot;&gt;&lt;code&gt;es.string.split&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Annex B methods. Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.anchor.js&quot;&gt;&lt;code&gt;es.string.anchor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.big.js&quot;&gt;&lt;code&gt;es.string.big&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.blink.js&quot;&gt;&lt;code&gt;es.string.blink&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.bold.js&quot;&gt;&lt;code&gt;es.string.bold&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.fixed.js&quot;&gt;&lt;code&gt;es.string.fixed&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.fontcolor.js&quot;&gt;&lt;code&gt;es.string.fontcolor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.fontsize.js&quot;&gt;&lt;code&gt;es.string.fontsize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.italics.js&quot;&gt;&lt;code&gt;es.string.italics&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.link.js&quot;&gt;&lt;code&gt;es.string.link&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.small.js&quot;&gt;&lt;code&gt;es.string.small&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.strike.js&quot;&gt;&lt;code&gt;es.string.strike&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.sub.js&quot;&gt;&lt;code&gt;es.string.sub&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.sup.js&quot;&gt;&lt;code&gt;es.string.sup&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.substr.js&quot;&gt;&lt;code&gt;es.string.substr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.escape.js&quot;&gt;&lt;code&gt;es.escape&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.unescape.js&quot;&gt;&lt;code&gt;es.unescape&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;RegExp&lt;/code&gt; features: modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.regexp.constructor.js&quot;&gt;&lt;code&gt;es.regexp.constructor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.regexp.dot-all.js&quot;&gt;&lt;code&gt;es.regexp.dot-all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.regexp.flags.js&quot;&gt;&lt;code&gt;es.regexp.flags&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.regexp.sticky.js&quot;&gt;&lt;code&gt;es.regexp.sticky&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.regexp.test.js&quot;&gt;&lt;code&gt;es.regexp.test&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class String {
  static fromCodePoint(...codePoints: Array&amp;lt;number&amp;gt;): string;
  static raw({ raw: Array&amp;lt;string&amp;gt; }, ...substitutions: Array&amp;lt;string&amp;gt;): string;
  at(index: int): string;
  includes(searchString: string, position?: number): boolean;
  startsWith(searchString: string, position?: number): boolean;
  endsWith(searchString: string, position?: number): boolean;
  repeat(count: number): string;
  padStart(length: number, fillStr?: string = &#39; &#39;): string;
  padEnd(length: number, fillStr?: string = &#39; &#39;): string;
  codePointAt(pos: number): number | void;
  match(template: any): any; // ES2015+ fix for support @@match
  matchAll(regexp: RegExp): Iterator;
  replace(template: any, replacer: any): any; // ES2015+ fix for support @@replace
  replaceAll(searchValue: string | RegExp, replaceString: string | (searchValue, index, this) =&amp;gt; string): string;
  search(template: any): any; // ES2015+ fix for support @@search
  split(template: any, limit?: int): Array&amp;lt;string&amp;gt;;; // ES2015+ fix for support @@split, some fixes for old engines
  trim(): string;
  trimLeft(): string;
  trimRight(): string;
  trimStart(): string;
  trimEnd(): string;
  anchor(name: string): string;
  big(): string;
  blink(): string;
  bold(): string;
  fixed(): string;
  fontcolor(color: string): string;
  fontsize(size: any): string;
  italics(): string;
  link(url: string): string;
  small(): string;
  strike(): string;
  sub(): string;
  substr(start: int, length?: int): string;
  sup(): string;
  @@iterator(): Iterator&amp;lt;characters&amp;gt;;
}

class RegExp {
  // support of sticky (`y`) flag, dotAll (`s`) flag, named capture groups, can alter flags
  constructor(pattern: RegExp | string, flags?: string): RegExp;
  exec(): Array&amp;lt;string | undefined&amp;gt; | null; // IE8 fixes
  test(string: string): boolean; // delegation to `.exec`
  toString(): string; // ES2015+ fix - generic
  @@match(string: string): Array | null;
  @@matchAll(string: string): Iterator;
  @@replace(string: string, replaceValue: Function | string): string;
  @@search(string: string): number;
  @@split(string: string, limit: number): Array&amp;lt;string&amp;gt;;
  readonly attribute dotAll: boolean; // IE9+
  readonly attribute flags: string;   // IE9+
  readonly attribute sticky: boolean; // IE9+
}

function escape(string: string): string;
function unescape(string: string): string;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/string
core-js(-pure)/es|stable|features/string/from-code-point
core-js(-pure)/es|stable|features/string/raw
core-js/es|stable|features/string/match
core-js/es|stable|features/string/replace
core-js/es|stable|features/string/search
core-js/es|stable|features/string/split
core-js(-pure)/es|stable/string(/virtual)/at
core-js(-pure)/es|stable|features/string(/virtual)/code-point-at
core-js(-pure)/es|stable|features/string(/virtual)/ends-with
core-js(-pure)/es|stable|features/string(/virtual)/includes
core-js(-pure)/es|stable|features/string(/virtual)/starts-with
core-js(-pure)/es|stable|features/string(/virtual)/match-all
core-js(-pure)/es|stable|features/string(/virtual)/pad-start
core-js(-pure)/es|stable|features/string(/virtual)/pad-end
core-js(-pure)/es|stable|features/string(/virtual)/repeat
core-js(-pure)/es|stable|features/string(/virtual)/replace-all
core-js(-pure)/es|stable|features/string(/virtual)/trim
core-js(-pure)/es|stable|features/string(/virtual)/trim-start
core-js(-pure)/es|stable|features/string(/virtual)/trim-end
core-js(-pure)/es|stable|features/string(/virtual)/trim-left
core-js(-pure)/es|stable|features/string(/virtual)/trim-right
core-js(-pure)/es|stable|features/string(/virtual)/anchor
core-js(-pure)/es|stable|features/string(/virtual)/big
core-js(-pure)/es|stable|features/string(/virtual)/blink
core-js(-pure)/es|stable|features/string(/virtual)/bold
core-js(-pure)/es|stable|features/string(/virtual)/fixed
core-js(-pure)/es|stable|features/string(/virtual)/fontcolor
core-js(-pure)/es|stable|features/string(/virtual)/fontsize
core-js(-pure)/es|stable|features/string(/virtual)(/virtual)/italics
core-js(-pure)/es|stable|features/string(/virtual)/link
core-js(-pure)/es|stable|features/string(/virtual)/small
core-js(-pure)/es|stable|features/string(/virtual)/strike
core-js(-pure)/es|stable|features/string(/virtual)/sub
core-js(-pure)/es|stable|features/string(/virtual)/substr
core-js(-pure)/es|stable|features/string(/virtual)/sup
core-js(-pure)/es|stable|features/string(/virtual)/iterator
core-js/es|stable|features/regexp
core-js/es|stable|features/regexp/constructor
core-js/es|stable|features/regexp/dot-all
core-js(-pure)/es|stable|features/regexp/flags
core-js/es|stable|features/regexp/sticky
core-js/es|stable|features/regexp/test
core-js/es|stable|features/regexp/to-string
core-js/es|stable|features/escape
core-js/es|stable|features/unescape
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#for(var%20val%20of%20&#39;a%F0%A0%AE%B7b&#39;)%7B%0A%20%20log(val)%3B%20%2F%2F%20%3D%3E%20&#39;a&#39;%2C%20&#39;%F0%A0%AE%B7&#39;%2C%20&#39;b&#39;%0A%7D%0A%0Alog(&#39;foobarbaz&#39;.includes(&#39;bar&#39;))%3B%20%20%20%20%20%20%2F%2F%20%3D%3E%20true%0Alog(&#39;foobarbaz&#39;.includes(&#39;bar&#39;%2C%204))%3B%20%20%20%2F%2F%20%3D%3E%20false%0Alog(&#39;foobarbaz&#39;.startsWith(&#39;foo&#39;))%3B%20%20%20%20%2F%2F%20%3D%3E%20true%0Alog(&#39;foobarbaz&#39;.startsWith(&#39;bar&#39;%2C%203))%3B%20%2F%2F%20%3D%3E%20true%0Alog(&#39;foobarbaz&#39;.endsWith(&#39;baz&#39;))%3B%20%20%20%20%20%20%2F%2F%20%3D%3E%20true%0Alog(&#39;foobarbaz&#39;.endsWith(&#39;bar&#39;%2C%206))%3B%20%20%20%2F%2F%20%3D%3E%20true%0A%0Alog(&#39;string&#39;.repeat(3))%3B%20%2F%2F%20%3D%3E%20&#39;stringstringstring&#39;%0A%0Alog(&#39;hello&#39;.padStart(10))%3B%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;%20%20%20%20%20hello&#39;%0Alog(&#39;hello&#39;.padStart(10%2C%20&#39;1234&#39;))%3B%20%2F%2F%20%3D%3E%20&#39;12341hello&#39;%0Alog(&#39;hello&#39;.padEnd(10))%3B%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;hello%20%20%20%20%20&#39;%0Alog(&#39;hello&#39;.padEnd(10%2C%20&#39;1234&#39;))%3B%20%20%20%2F%2F%20%3D%3E%20&#39;hello12341&#39;%0A%0Alog(&#39;%F0%A0%AE%B7&#39;.codePointAt(0))%3B%20%2F%2F%20%3D%3E%20134071%0A%0Avar%20name%20%3D%20&#39;Bob&#39;%3B%0Alog(String.raw%60Hi%5Cn%24%7Bname%7D!%60)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;Hi%5C%5CnBob!&#39;%20(ES6%20template%20string%20syntax)%0Alog(String.raw(%7B%20raw%3A%20&#39;test&#39;%20%7D%2C%200%2C%201%2C%202))%3B%20%2F%2F%20%3D%3E%20%2F%2F%20&#39;t0e1s2t&#39;%0A%0Alog(&#39;foo&#39;.bold())%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;%3Cb%3Efoo%3C%2Fb%3E&#39;%0Alog(&#39;bar&#39;.anchor(&#39;a%22b&#39;))%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;%3Ca%20name%3D%22a%26quot%3Bb%22%3Ebar%3C%2Fa%3E&#39;%0Alog(&#39;baz&#39;.link(&#39;http%3A%2F%2Fexample.com&#39;))%3B%20%2F%2F%20%3D%3E%20&#39;%3Ca%20href%3D%22http%3A%2F%2Fexample.com%22%3Ebaz%3C%2Fa%3E&#39;%0A%0Alog(RegExp(&#39;.&#39;%2C%20&#39;s&#39;).test(&#39;%5Cn&#39;))%3B%20%2F%2F%20%3D%3E%20true%0Alog(RegExp(&#39;.&#39;%2C%20&#39;s&#39;).dotAll)%3B%20%20%20%20%20%2F%2F%20%3D%3E%20true%0A%0Alog(RegExp(&#39;foo%3A(%3F%3Cfoo%3E%5C%5Cw%2B)%2Cbar%3A(%3F%3Cbar%3E%5C%5Cw%2B)&#39;).exec(&#39;foo%3Aabc%2Cbar%3Adef&#39;).groups.bar)%3B%20%2F%2F%20%3D%3E%20&#39;def&#39;%0A%0Alog(&#39;foo%3Aabc%2Cbar%3Adef&#39;.replace(RegExp(&#39;foo%3A(%3F%3Cfoo%3E%5C%5Cw%2B)%2Cbar%3A(%3F%3Cbar%3E%5C%5Cw%2B)&#39;)%2C%20&#39;%24%3Cbar%3E%2C%24%3Cfoo%3E&#39;))%3B%20%2F%2F%20%3D%3E%20&#39;def%2Cabc&#39;%0A%0Alog(RegExp(%2F.%2Fg%2C%20&#39;m&#39;))%3B%20%2F%2F%20%3D%3E%20%2F.%2Fm%0A%0Alog(%2Ffoo%2F.flags)%3B%20%20%20%20%2F%2F%20%3D%3E%20&#39;&#39;%0Alog(%2Ffoo%2Fgim.flags)%3B%20%2F%2F%20%3D%3E%20&#39;gim&#39;%0A%0Alog(RegExp(&#39;foo&#39;%2C%20&#39;y&#39;).sticky)%3B%20%2F%2F%20%3D%3E%20true%0A%0Aconst%20text%20%3D%20&#39;First%20line%5CnSecond%20line&#39;%3B%0Aconst%20regex%20%3D%20RegExp(&#39;(%5C%5CS%2B)%20line%5C%5Cn%3F&#39;%2C%20&#39;y&#39;)%3B%0A%0Alog(regex.exec(text)%5B1%5D)%3B%20%2F%2F%20%3D%3E%20&#39;First&#39;%0Alog(regex.exec(text)%5B1%5D)%3B%20%2F%2F%20%3D%3E%20&#39;Second&#39;%0Alog(regex.exec(text))%3B%20%20%20%20%2F%2F%20%3D%3E%20null%0A%0Alog(&#39;foo&#39;.match(%7B%5BSymbol.match%5D%3A%20_%20%3D%3E%201%7D))%3B%20%20%20%20%20%2F%2F%20%3D%3E%201%0Alog(&#39;foo&#39;.replace(%7B%5BSymbol.replace%5D%3A%20_%20%3D%3E%202%7D))%3B%20%2F%2F%20%3D%3E%202%0Alog(&#39;foo&#39;.search(%7B%5BSymbol.search%5D%3A%20_%20%3D%3E%203%7D))%3B%20%20%20%2F%2F%20%3D%3E%203%0Alog(&#39;foo&#39;.split(%7B%5BSymbol.split%5D%3A%20_%20%3D%3E%204%7D))%3B%20%20%20%20%20%2F%2F%20%3D%3E%204%0A%0Alog(RegExp.prototype.toString.call(%7Bsource%3A%20&#39;foo&#39;%2C%20flags%3A%20&#39;bar&#39;%7D))%3B%0A%0Alog(&#39;%20%20%20hello%20%20%20&#39;.trimLeft())%3B%20%20%2F%2F%20%3D%3E%20&#39;hello%20%20%20&#39;%0Alog(&#39;%20%20%20hello%20%20%20&#39;.trimRight())%3B%20%2F%2F%20%3D%3E%20&#39;%20%20%20hello&#39;%0Alog(&#39;%20%20%20hello%20%20%20&#39;.trimStart())%3B%20%2F%2F%20%3D%3E%20&#39;hello%20%20%20&#39;%0Alog(&#39;%20%20%20hello%20%20%20&#39;.trimEnd())%3B%20%20%20%2F%2F%20%3D%3E%20&#39;%20%20%20hello&#39;%0A%0Afor%20(let%20%5B_%2C%20d%2C%20D%5D%20of%20&#39;1111a2b3cccc&#39;.matchAll(%2F(%5Cd)(%5CD)%2Fg))%20%7B%0A%20%20log(d%2C%20D)%3B%20%2F%2F%20%3D%3E%201%20a%2C%202%20b%2C%203%20c%0A%7D%0A%0Alog(&#39;Test%20abc%20test%20test%20abc%20test.&#39;.replaceAll(&#39;abc&#39;%2C%20&#39;foo&#39;))%3B%20%2F%2F%20-%3E%20&#39;Test%20foo%20test%20test%20foo%20test.&#39;&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;%0A%0Alog(&#39;abc&#39;.at(1))%3B%20%20%2F%2F%20%3D%3E%20&#39;b&#39;%0Alog(&#39;abc&#39;.at(-1))%3B%20%2F%2F%20%3D%3E%20&#39;c&#39;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;for (let value of &#39;a𠮷b&#39;) {
  console.log(value); // =&amp;gt; &#39;a&#39;, &#39;𠮷&#39;, &#39;b&#39;
}

&#39;foobarbaz&#39;.includes(&#39;bar&#39;);      // =&amp;gt; true
&#39;foobarbaz&#39;.includes(&#39;bar&#39;, 4);   // =&amp;gt; false
&#39;foobarbaz&#39;.startsWith(&#39;foo&#39;);    // =&amp;gt; true
&#39;foobarbaz&#39;.startsWith(&#39;bar&#39;, 3); // =&amp;gt; true
&#39;foobarbaz&#39;.endsWith(&#39;baz&#39;);      // =&amp;gt; true
&#39;foobarbaz&#39;.endsWith(&#39;bar&#39;, 6);   // =&amp;gt; true

&#39;string&#39;.repeat(3); // =&amp;gt; &#39;stringstringstring&#39;

&#39;hello&#39;.padStart(10);         // =&amp;gt; &#39;     hello&#39;
&#39;hello&#39;.padStart(10, &#39;1234&#39;); // =&amp;gt; &#39;12341hello&#39;
&#39;hello&#39;.padEnd(10);           // =&amp;gt; &#39;hello     &#39;
&#39;hello&#39;.padEnd(10, &#39;1234&#39;);   // =&amp;gt; &#39;hello12341&#39;

&#39;𠮷&#39;.codePointAt(0); // =&amp;gt; 134071
String.fromCodePoint(97, 134071, 98); // =&amp;gt; &#39;a𠮷b&#39;

let name = &#39;Bob&#39;;
String.raw`Hi\n${name}!`;             // =&amp;gt; &#39;Hi\\nBob!&#39; (ES2015 template string syntax)
String.raw({ raw: &#39;test&#39; }, 0, 1, 2); // =&amp;gt; &#39;t0e1s2t&#39;

&#39;foo&#39;.bold();                     // =&amp;gt; &#39;&amp;lt;b&amp;gt;foo&amp;lt;/b&amp;gt;&#39;
&#39;bar&#39;.anchor(&#39;a&quot;b&#39;);              // =&amp;gt; &#39;&amp;lt;a name=&quot;a&amp;amp;quot;b&quot;&amp;gt;bar&amp;lt;/a&amp;gt;&#39;
&#39;baz&#39;.link(&#39;http://example.com&#39;); // =&amp;gt; &#39;&amp;lt;a href=&quot;http://example.com&quot;&amp;gt;baz&amp;lt;/a&amp;gt;&#39;

RegExp(&#39;.&#39;, &#39;s&#39;).test(&#39;\n&#39;); // =&amp;gt; true
RegExp(&#39;.&#39;, &#39;s&#39;).dotAll;     // =&amp;gt; true

RegExp(&#39;foo:(?&amp;lt;foo&amp;gt;\\w+),bar:(?&amp;lt;bar&amp;gt;\\w+)&#39;).exec(&#39;foo:abc,bar:def&#39;).groups.bar; // =&amp;gt; &#39;def&#39;

&#39;foo:abc,bar:def&#39;.replace(RegExp(&#39;foo:(?&amp;lt;foo&amp;gt;\\w+),bar:(?&amp;lt;bar&amp;gt;\\w+)&#39;), &#39;$&amp;lt;bar&amp;gt;,$&amp;lt;foo&amp;gt;&#39;); // =&amp;gt; &#39;def,abc&#39;

RegExp(/./g, &#39;m&#39;); // =&amp;gt; /./m

/foo/.flags;    // =&amp;gt; &#39;&#39;
/foo/gim.flags; // =&amp;gt; &#39;gim&#39;

RegExp(&#39;foo&#39;, &#39;y&#39;).sticky; // =&amp;gt; true

const text = &#39;First line\nSecond line&#39;;
const regex = RegExp(&#39;(\\S+) line\\n?&#39;, &#39;y&#39;);

regex.exec(text)[1]; // =&amp;gt; &#39;First&#39;
regex.exec(text)[1]; // =&amp;gt; &#39;Second&#39;
regex.exec(text);    // =&amp;gt; null

&#39;foo&#39;.match({ [Symbol.match]: () =&amp;gt; 1 });     // =&amp;gt; 1
&#39;foo&#39;.replace({ [Symbol.replace]: () =&amp;gt; 2 }); // =&amp;gt; 2
&#39;foo&#39;.search({ [Symbol.search]: () =&amp;gt; 3 });   // =&amp;gt; 3
&#39;foo&#39;.split({ [Symbol.split]: () =&amp;gt; 4 });     // =&amp;gt; 4

RegExp.prototype.toString.call({ source: &#39;foo&#39;, flags: &#39;bar&#39; }); // =&amp;gt; &#39;/foo/bar&#39;

&#39;   hello   &#39;.trimLeft();  // =&amp;gt; &#39;hello   &#39;
&#39;   hello   &#39;.trimRight(); // =&amp;gt; &#39;   hello&#39;
&#39;   hello   &#39;.trimStart(); // =&amp;gt; &#39;hello   &#39;
&#39;   hello   &#39;.trimEnd();   // =&amp;gt; &#39;   hello&#39;

for (let [_, d, D] of &#39;1111a2b3cccc&#39;.matchAll(/(\d)(\D)/g)) {
  console.log(d, D); // =&amp;gt; 1 a, 2 b, 3 c
}

&#39;Test abc test test abc test.&#39;.replaceAll(&#39;abc&#39;, &#39;foo&#39;); // -&amp;gt; &#39;Test foo test test foo test.&#39;

&#39;abc&#39;.at(1);  // =&amp;gt; &#39;b&#39;
&#39;abc&#39;.at(-1); // =&amp;gt; &#39;c&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: Number&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.constructor.js&quot;&gt;&lt;code&gt;es.number.constructor&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;Number&lt;/code&gt; constructor support binary and octal literals, &lt;a href=&quot;http://goo.gl/jRd6b3&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number(&#39;0b1010101&#39;); // =&amp;gt; 85
Number(&#39;0o7654321&#39;); // =&amp;gt; 2054353
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.epsilon.js&quot;&gt;&lt;code&gt;es.number.epsilon&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.is-finite.js&quot;&gt;&lt;code&gt;es.number.is-finite&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.is-integer.js&quot;&gt;&lt;code&gt;es.number.is-integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.is-nan.js&quot;&gt;&lt;code&gt;es.number.is-nan&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.is-safe-integer.js&quot;&gt;&lt;code&gt;es.number.is-safe-integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.max-safe-integer.js&quot;&gt;&lt;code&gt;es.number.max-safe-integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.min-safe-integer.js&quot;&gt;&lt;code&gt;es.number.min-safe-integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.parse-float.js&quot;&gt;&lt;code&gt;es.number.parse-float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.parse-int.js&quot;&gt;&lt;code&gt;es.number.parse-int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.to-fixed.js&quot;&gt;&lt;code&gt;es.number.to-fixed&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.number.to-precision.js&quot;&gt;&lt;code&gt;es.number.to-precision&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.parse-int.js&quot;&gt;&lt;code&gt;es.parse-int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.parse-float.js&quot;&gt;&lt;code&gt;es.parse-float&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Number {
  constructor(value: any): number;
  toFixed(digits: number): string;
  toPrecision(precision: number): string;
  static isFinite(number: any): boolean;
  static isNaN(number: any): boolean;
  static isInteger(number: any): boolean;
  static isSafeInteger(number: any): boolean;
  static parseFloat(string: string): number;
  static parseInt(string: string, radix?: number = 10): number;
  static EPSILON: number;
  static MAX_SAFE_INTEGER: number;
  static MIN_SAFE_INTEGER: number;
}

function parseFloat(string: string): number;
function parseInt(string: string, radix?: number = 10): number;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/number
core-js/es|stable|features/number/constructor
core-js(-pure)/es|stable|features/number/is-finite
core-js(-pure)/es|stable|features/number/is-nan
core-js(-pure)/es|stable|features/number/is-integer
core-js(-pure)/es|stable|features/number/is-safe-integer
core-js(-pure)/es|stable|features/number/parse-float
core-js(-pure)/es|stable|features/number/parse-int
core-js(-pure)/es|stable|features/number/epsilon
core-js(-pure)/es|stable|features/number/max-safe-integer
core-js(-pure)/es|stable|features/number/min-safe-integer
core-js(-pure)/es|stable|features/number/to-fixed
core-js(-pure)/es|stable|features/number/to-precision
core-js(-pure)/es|stable|features/parse-float
core-js(-pure)/es|stable|features/parse-int
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: Math&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.acosh.js&quot;&gt;&lt;code&gt;es.math.acosh&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.asinh.js&quot;&gt;&lt;code&gt;es.math.asinh&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.atanh.js&quot;&gt;&lt;code&gt;es.math.atanh&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.cbrt.js&quot;&gt;&lt;code&gt;es.math.cbrt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.clz32.js&quot;&gt;&lt;code&gt;es.math.clz32&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.cosh.js&quot;&gt;&lt;code&gt;es.math.cosh&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.expm1.js&quot;&gt;&lt;code&gt;es.math.expm1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.fround.js&quot;&gt;&lt;code&gt;es.math.fround&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.hypot.js&quot;&gt;&lt;code&gt;es.math.hypot&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.imul.js&quot;&gt;&lt;code&gt;es.math.imul&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.log10.js&quot;&gt;&lt;code&gt;es.math.log10&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.log1p.js&quot;&gt;&lt;code&gt;es.math.log1p&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.log2.js&quot;&gt;&lt;code&gt;es.math.log2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.sign.js&quot;&gt;&lt;code&gt;es.math.sign&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.sinh.js&quot;&gt;&lt;code&gt;es.math.sinh&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.tanh.js&quot;&gt;&lt;code&gt;es.math.tanh&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.trunc.js&quot;&gt;&lt;code&gt;es.math.trunc&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;namespace Math {
  acosh(number: number): number;
  asinh(number: number): number;
  atanh(number: number): number;
  cbrt(number: number): number;
  clz32(number: number): number;
  cosh(number: number): number;
  expm1(number: number): number;
  fround(number: number): number;
  hypot(...args: Array&amp;lt;number&amp;gt;): number;
  imul(number1: number, number2: number): number;
  log1p(number: number): number;
  log10(number: number): number;
  log2(number: number): number;
  sign(number: number): 1 | -1 | 0 | -0 | NaN;
  sinh(number: number): number;
  tanh(number: number): number;
  trunc(number: number): number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/math
core-js(-pure)/es|stable|features/math/acosh
core-js(-pure)/es|stable|features/math/asinh
core-js(-pure)/es|stable|features/math/atanh
core-js(-pure)/es|stable|features/math/cbrt
core-js(-pure)/es|stable|features/math/clz32
core-js(-pure)/es|stable|features/math/cosh
core-js(-pure)/es|stable|features/math/expm1
core-js(-pure)/es|stable|features/math/fround
core-js(-pure)/es|stable|features/math/hypot
core-js(-pure)/es|stable|features/math/imul
core-js(-pure)/es|stable|features/math/log1p
core-js(-pure)/es|stable|features/math/log10
core-js(-pure)/es|stable|features/math/log2
core-js(-pure)/es|stable|features/math/sign
core-js(-pure)/es|stable|features/math/sinh
core-js(-pure)/es|stable|features/math/tanh
core-js(-pure)/es|stable|features/math/trunc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: Date&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.date.to-string.js&quot;&gt;&lt;code&gt;es.date.to-string&lt;/code&gt;&lt;/a&gt;, ES5 features with fixes: &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.date.now.js&quot;&gt;&lt;code&gt;es.date.now&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.date.to-iso-string.js&quot;&gt;&lt;code&gt;es.date.to-iso-string&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.date.to-json.js&quot;&gt;&lt;code&gt;es.date.to-json&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.date.to-primitive.js&quot;&gt;&lt;code&gt;es.date.to-primitive&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Annex B methods. Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.date.get-year.js&quot;&gt;&lt;code&gt;es.date.get-year&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.date.set-year.js&quot;&gt;&lt;code&gt;es.date.set-year&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.date.to-gmt-string.js&quot;&gt;&lt;code&gt;es.date.to-gmt-string&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Date {
  getYear(): int;
  setYear(year: int): number;
  toGMTString(): string;
  toISOString(): string;
  toJSON(): string;
  toString(): string;
  @@toPrimitive(hint: &#39;default&#39; | &#39;number&#39; | &#39;string&#39;): string | number;
  static now(): number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/es|stable|features/date
core-js/es|stable|features/date/to-string
core-js(-pure)/es|stable|features/date/now
core-js(-pure)/es|stable|features/date/get-year
core-js(-pure)/es|stable|features/date/set-year
core-js(-pure)/es|stable|features/date/to-gmt-string
core-js(-pure)/es|stable|features/date/to-iso-string
core-js(-pure)/es|stable|features/date/to-json
core-js(-pure)/es|stable|features/date/to-primitive
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/haeHLR&quot;&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new Date(NaN).toString(); // =&amp;gt; &#39;Invalid Date&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: Promise&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.aggregate-error.js&quot;&gt;&lt;code&gt;es.aggregate-error&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.promise.js&quot;&gt;&lt;code&gt;es.promise&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.promise.all-settled.js&quot;&gt;&lt;code&gt;es.promise.all-settled&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.promise.any.js&quot;&gt;&lt;code&gt;es.promise.any&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.promise.finally.js&quot;&gt;&lt;code&gt;es.promise.finally&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class AggregateError {
  constructor(errors: Iterable, message: string): AggregateError;
  errors: Array&amp;lt;any&amp;gt;;
  message: string;
}

class Promise {
  constructor(executor: (resolve: Function, reject: Function) =&amp;gt; void): Promise;
  then(onFulfilled: Function, onRejected: Function): Promise;
  catch(onRejected: Function): Promise;
  finally(onFinally: Function): Promise;
  static resolve(x: any): Promise;
  static reject(r: any): Promise;
  static all(iterable: Iterable): Promise;
  static allSettled(iterable: Iterable): Promise;
  static any(promises: Iterable): Promise&amp;lt;any&amp;gt;;
  static race(iterable: Iterable): Promise;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/aggregate-error
core-js(-pure)/es|stable|features/promise
core-js(-pure)/es|stable|features/promise/all-settled
core-js(-pure)/es|stable|features/promise/any
core-js(-pure)/es|stable|features/promise/finally
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Basic &lt;a href=&quot;http://goo.gl/vGrtUC&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function sleepRandom(time) {
  return new Promise((resolve, reject) =&amp;gt; {
    setTimeout(resolve, time * 1e3, 0 | Math.random() * 1e3);
  });
}

console.log(&#39;Run&#39;);                    // =&amp;gt; Run
sleepRandom(5).then(result =&amp;gt; {
  console.log(result);                 // =&amp;gt; 869, after 5 sec.
  return sleepRandom(10);
}).then(result =&amp;gt; {
  console.log(result);                 // =&amp;gt; 202, after 10 sec.
}).then(() =&amp;gt; {
  console.log(&#39;immediately after&#39;);    // =&amp;gt; immediately after
  throw Error(&#39;Irror!&#39;);
}).then(() =&amp;gt; {
  console.log(&#39;will not be displayed&#39;);
}).catch(x =&amp;gt; console.log(x));         // =&amp;gt; =&amp;gt; Error: Irror!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Promise.resolve&lt;/code&gt; and &lt;code&gt;Promise.reject&lt;/code&gt; &lt;a href=&quot;http://goo.gl/vr8TN3&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Promise.resolve(42).then(x =&amp;gt; console.log(x)); // =&amp;gt; 42
Promise.reject(42).catch(x =&amp;gt; console.log(x)); // =&amp;gt; 42

Promise.resolve($.getJSON(&#39;/data.json&#39;)); // =&amp;gt; ES promise
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Promise#finally&lt;/code&gt; &lt;a href=&quot;https://goo.gl/AhyBbJ&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Promise.resolve(42).finally(() =&amp;gt; console.log(&#39;You will see it anyway&#39;));

Promise.reject(42).finally(() =&amp;gt; console.log(&#39;You will see it anyway&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Promise.all&lt;/code&gt; &lt;a href=&quot;http://goo.gl/RdoDBZ&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Promise.all([
  &#39;foo&#39;,
  sleepRandom(5),
  sleepRandom(15),
  sleepRandom(10)             // after 15 sec:
]).then(x =&amp;gt; console.log(x)); // =&amp;gt; [&#39;foo&#39;, 956, 85, 382]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Promise.race&lt;/code&gt; &lt;a href=&quot;http://goo.gl/L8ovkJ&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function timeLimit(promise, time) {
  return Promise.race([promise, new Promise((resolve, reject) =&amp;gt; {
    setTimeout(reject, time * 1e3, Error(&#39;Await &amp;gt; &#39; + time + &#39; sec&#39;));
  })]);
}

timeLimit(sleepRandom(5), 10).then(x =&amp;gt; console.log(x));   // =&amp;gt; 853, after 5 sec.
timeLimit(sleepRandom(15), 10).catch(x =&amp;gt; console.log(x)); // Error: Await &amp;gt; 10 sec
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Promise.allSettled&lt;/code&gt; &lt;a href=&quot;https://goo.gl/PXXLNJ&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Promise.allSettled([
  Promise.resolve(1),
  Promise.reject(2),
  Promise.resolve(3),
]).then(console.log); // =&amp;gt; [{ value: 1, status: &#39;fulfilled&#39; }, { reason: 2, status: &#39;rejected&#39; }, { value: 3, status: &#39;fulfilled&#39; }]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Promise.any&lt;/code&gt; &lt;a href=&quot;https://goo.gl/iErvmp&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Promise.any([
  Promise.resolve(1),
  Promise.reject(2),
  Promise.resolve(3),
]).then(console.log); // =&amp;gt; 1

Promise.any([
  Promise.reject(1),
  Promise.reject(2),
  Promise.reject(3),
]).catch(({ errors }) =&amp;gt; console.log(errors)); // =&amp;gt; [1, 2, 3]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/wnQS4j&quot;&gt;Example&lt;/a&gt; with async functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let delay = time =&amp;gt; new Promise(resolve =&amp;gt; setTimeout(resolve, time))

async function sleepRandom(time) {
  await delay(time * 1e3);
  return 0 | Math.random() * 1e3;
}

async function sleepError(time, msg) {
  await delay(time * 1e3);
  throw Error(msg);
}

(async () =&amp;gt; {
  try {
    console.log(&#39;Run&#39;);                // =&amp;gt; Run
    console.log(await sleepRandom(5)); // =&amp;gt; 936, after 5 sec.
    let [a, b, c] = await Promise.all([
      sleepRandom(5),
      sleepRandom(15),
      sleepRandom(10)
    ]);
    console.log(a, b, c);              // =&amp;gt; 210 445 71, after 15 sec.
    await sleepError(5, &#39;Error!&#39;);
    console.log(&#39;Will not be displayed&#39;);
  } catch (e) {
    console.log(e);                    // =&amp;gt; Error: &#39;Error!&#39;, after 5 sec.
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Unhandled rejection tracking&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;In Node.js, like in native implementation, available events &lt;a href=&quot;https://nodejs.org/api/process.html#process_event_unhandledrejection&quot;&gt;&lt;code&gt;unhandledRejection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/api/process.html#process_event_rejectionhandled&quot;&gt;&lt;code&gt;rejectionHandled&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;process.on(&#39;unhandledRejection&#39;, (reason, promise) =&amp;gt; console.log(&#39;unhandled&#39;, reason, promise));
process.on(&#39;rejectionHandled&#39;, (promise) =&amp;gt; console.log(&#39;handled&#39;, promise));

let promise = Promise.reject(42);
// unhandled 42 [object Promise]

setTimeout(() =&amp;gt; promise.catch(() =&amp;gt; {}), 1e3);
// handled [object Promise]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In a browser on rejection, by default, you will see notify in the console, or you can add a custom handler and a handler on handling unhandled, &lt;a href=&quot;http://goo.gl/Wozskl&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;window.addEventListener(&#39;unhandledrejection&#39;, e =&amp;gt; console.log(&#39;unhandled&#39;, e.reason, e.promise));
window.addEventListener(&#39;rejectionhandled&#39;, e =&amp;gt; console.log(&#39;handled&#39;, e.reason, e.promise));
// or
window.onunhandledrejection = e =&amp;gt; console.log(&#39;unhandled&#39;, e.reason, e.promise);
window.onrejectionhandled = e =&amp;gt; console.log(&#39;handled&#39;, e.reason, e.promise);

let promise = Promise.reject(42);
// =&amp;gt; unhandled 42 [object Promise]

setTimeout(() =&amp;gt; promise.catch(() =&amp;gt; {}), 1e3);
// =&amp;gt; handled 42 [object Promise]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: Symbol&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.js&quot;&gt;&lt;code&gt;es.symbol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.async-iterator.js&quot;&gt;&lt;code&gt;es.symbol.async-iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.description.js&quot;&gt;&lt;code&gt;es.symbol.description&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.has-instance.js&quot;&gt;&lt;code&gt;es.symbol.has-instance&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.is-concat-spreadable.js&quot;&gt;&lt;code&gt;es.symbol.is-concat-spreadable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.iterator.js&quot;&gt;&lt;code&gt;es.symbol.iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.match.js&quot;&gt;&lt;code&gt;es.symbol.match&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.replace.js&quot;&gt;&lt;code&gt;es.symbol.replace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.search.js&quot;&gt;&lt;code&gt;es.symbol.search&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.species.js&quot;&gt;&lt;code&gt;es.symbol.species&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.split.js&quot;&gt;&lt;code&gt;es.symbol.split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.to-primitive.js&quot;&gt;&lt;code&gt;es.symbol.to-primitive&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.to-string-tag.js&quot;&gt;&lt;code&gt;es.symbol.to-string-tag&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.symbol.unscopables.js&quot;&gt;&lt;code&gt;es.symbol.unscopables&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.math.to-string-tag.js&quot;&gt;&lt;code&gt;es.math.to-string-tag&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Symbol {
  constructor(description?): symbol;
  readonly attribute description: string | void;
  static asyncIterator: @@asyncIterator;
  static hasInstance: @@hasInstance;
  static isConcatSpreadable: @@isConcatSpreadable;
  static iterator: @@iterator;
  static match: @@match;
  static replace: @@replace;
  static search: @@search;
  static species: @@species;
  static split: @@split;
  static toPrimitive: @@toPrimitive;
  static toStringTag: @@toStringTag;
  static unscopables: @@unscopables;
  static for(key: string): symbol;
  static keyFor(sym: symbol): string;
  static useSimple(): void;
  static useSetter(): void;
}

class Object {
  static getOwnPropertySymbols(object: any): Array&amp;lt;symbol&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also wrapped some methods for correct work with &lt;code&gt;Symbol&lt;/code&gt; polyfill.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Object {
  static create(prototype: Object | null, properties?: { [property: PropertyKey]: PropertyDescriptor }): Object;
  static defineProperties(object: Object, properties: { [property: PropertyKey]: PropertyDescriptor })): Object;
  static defineProperty(object: Object, property: PropertyKey, attributes: PropertyDescriptor): Object;
  static getOwnPropertyDescriptor(object: any, property: PropertyKey): PropertyDescriptor | void;
  static getOwnPropertyNames(object: any): Array&amp;lt;string&amp;gt;;
  propertyIsEnumerable(key: PropertyKey): boolean;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/symbol
core-js(-pure)/es|stable|features/symbol/async-iterator
core-js/es|stable|features/symbol/description
core-js(-pure)/es|stable|features/symbol/has-instance
core-js(-pure)/es|stable|features/symbol/is-concat-spreadable
core-js(-pure)/es|stable|features/symbol/iterator
core-js(-pure)/es|stable|features/symbol/match
core-js(-pure)/es|stable|features/symbol/replace
core-js(-pure)/es|stable|features/symbol/search
core-js(-pure)/es|stable|features/symbol/species
core-js(-pure)/es|stable|features/symbol/split
core-js(-pure)/es|stable|features/symbol/to-primitive
core-js(-pure)/es|stable|features/symbol/to-string-tag
core-js(-pure)/es|stable|features/symbol/unscopables
core-js(-pure)/es|stable|features/symbol/for
core-js(-pure)/es|stable|features/symbol/key-for
core-js(-pure)/es|stable|features/object/get-own-property-symbols
core-js(-pure)/es|stable|features/math/to-string-tag
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/BbvWFc&quot;&gt;&lt;em&gt;Basic example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let Person = (() =&amp;gt; {
  let NAME = Symbol(&#39;name&#39;);
  return class {
    constructor(name) {
      this[NAME] = name;
    }
    getName() {
      return this[NAME];
    }
  }
})();

let person = new Person(&#39;Vasya&#39;);
console.log(person.getName());            // =&amp;gt; &#39;Vasya&#39;
console.log(person[&#39;name&#39;]);              // =&amp;gt; undefined
console.log(person[Symbol(&#39;name&#39;)]);      // =&amp;gt; undefined, symbols are uniq
for (let key in person) console.log(key); // =&amp;gt; nothing, symbols are not enumerable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Symbol.for&lt;/code&gt; &amp;amp; &lt;code&gt;Symbol.keyFor&lt;/code&gt; &lt;a href=&quot;http://goo.gl/0pdJjX&quot;&gt;&lt;em&gt;example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let symbol = Symbol.for(&#39;key&#39;);
symbol === Symbol.for(&#39;key&#39;); // true
Symbol.keyFor(symbol);        // &#39;key&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/mKVOQJ&quot;&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/a&gt; with methods for getting own object keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let object = { a: 1 };
Object.defineProperty(object, &#39;b&#39;, { value: 2 });
object[Symbol(&#39;c&#39;)] = 3;
Object.keys(object);                  // =&amp;gt; [&#39;a&#39;]
Object.getOwnPropertyNames(object);   // =&amp;gt; [&#39;a&#39;, &#39;b&#39;]
Object.getOwnPropertySymbols(object); // =&amp;gt; [Symbol(c)]
Reflect.ownKeys(object);              // =&amp;gt; [&#39;a&#39;, &#39;b&#39;, Symbol(c)]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/MWizfc&quot;&gt;&lt;em&gt;Symbol#description getter&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Symbol(&#39;foo&#39;).description; // =&amp;gt; &#39;foo&#39;
Symbol().description;      // =&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Caveats when using &lt;code&gt;Symbol&lt;/code&gt; polyfill:&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;We can&#39;t add new primitive type, &lt;code&gt;Symbol&lt;/code&gt; returns object.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Symbol.for&lt;/code&gt; and &lt;code&gt;Symbol.keyFor&lt;/code&gt; can&#39;t be polyfilled cross-realm.&lt;/li&gt; 
 &lt;li&gt;By default, to hide the keys, &lt;code&gt;Symbol&lt;/code&gt; polyfill defines setter in &lt;code&gt;Object.prototype&lt;/code&gt;. For this reason, uncontrolled creation of symbols can cause memory leak and the &lt;code&gt;in&lt;/code&gt; operator is not working correctly with &lt;code&gt;Symbol&lt;/code&gt; polyfill: &lt;code&gt;Symbol() in {} // =&amp;gt; true&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can disable defining setters in &lt;code&gt;Object.prototype&lt;/code&gt;. &lt;a href=&quot;http://goo.gl/N5UD7J&quot;&gt;Example&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Symbol.useSimple();
let symbol1 = Symbol(&#39;symbol1&#39;);
let object1 = {};
object1[symbol1] = true;
for (let key in object1) console.log(key); // =&amp;gt; &#39;Symbol(symbol1)_t.qamkg9f3q&#39;, w/o native Symbol

Symbol.useSetter();
let symbol2 = Symbol(&#39;symbol2&#39;);
let object2 = {};
object2[symbol2] = true;
for (let key in object2) console.log(key); // nothing
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Currently, &lt;code&gt;core-js&lt;/code&gt; not adds setters to &lt;code&gt;Object.prototype&lt;/code&gt; for well-known symbols for correct work something like &lt;code&gt;Symbol.iterator in foo&lt;/code&gt;. It can cause problems with their enumerability.&lt;/li&gt; 
 &lt;li&gt;Some problems possible with environment exotic objects (for example, IE &lt;code&gt;localStorage&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;ECMAScript: Collections&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;core-js&lt;/code&gt; uses native collections in most case, just fixes methods / constructor, if it&#39;s required, and in old environment uses fast polyfill (O(1) lookup).&lt;/p&gt; 
&lt;h4&gt;Map&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.map.js&quot;&gt;&lt;code&gt;es.map&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Map {
  constructor(iterable?: Iterable&amp;lt;[key, value]&amp;gt;): Map;
  clear(): void;
  delete(key: any): boolean;
  forEach(callbackfn: (value: any, key: any, target: any) =&amp;gt; void, thisArg: any): void;
  get(key: any): any;
  has(key: any): boolean;
  set(key: any, val: any): this;
  values(): Iterator&amp;lt;value&amp;gt;;
  keys(): Iterator&amp;lt;key&amp;gt;;
  entries(): Iterator&amp;lt;[key, value]&amp;gt;;
  @@iterator(): Iterator&amp;lt;[key, value]&amp;gt;;
  readonly attribute size: number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/map
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/GWR7NI&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let array = [1];

let map = new Map([[&#39;a&#39;, 1], [42, 2]]);
map.set(array, 3).set(true, 4);

console.log(map.size);        // =&amp;gt; 4
console.log(map.has(array));  // =&amp;gt; true
console.log(map.has([1]));    // =&amp;gt; false
console.log(map.get(array));  // =&amp;gt; 3
map.forEach((val, key) =&amp;gt; {
  console.log(val);           // =&amp;gt; 1, 2, 3, 4
  console.log(key);           // =&amp;gt; &#39;a&#39;, 42, [1], true
});
map.delete(array);
console.log(map.size);        // =&amp;gt; 3
console.log(map.get(array));  // =&amp;gt; undefined
console.log(Array.from(map)); // =&amp;gt; [[&#39;a&#39;, 1], [42, 2], [true, 4]]

let map = new Map([[&#39;a&#39;, 1], [&#39;b&#39;, 2], [&#39;c&#39;, 3]]);

for (let [key, value] of map) {
  console.log(key);                                 // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;
  console.log(value);                               // =&amp;gt; 1, 2, 3
}
for (let value of map.values()) console.log(value); // =&amp;gt; 1, 2, 3
for (let key of map.keys()) console.log(key);       // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;
for (let [key, value] of map.entries()) {
  console.log(key);                                 // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;
  console.log(value);                               // =&amp;gt; 1, 2, 3
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Set&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.set.js&quot;&gt;&lt;code&gt;es.set&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Set {
  constructor(iterable?: Iterable&amp;lt;value&amp;gt;): Set;
  add(key: any): this;
  clear(): void;
  delete(key: any): boolean;
  forEach((value: any, key: any, target: any) =&amp;gt; void, thisArg: any): void;
  has(key: any): boolean;
  values(): Iterator&amp;lt;value&amp;gt;;
  keys(): Iterator&amp;lt;value&amp;gt;;
  entries(): Iterator&amp;lt;[value, value]&amp;gt;;
  @@iterator(): Iterator&amp;lt;value&amp;gt;;
  readonly attribute size: number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/set
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/bmhLwg&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let set = new Set([&#39;a&#39;, &#39;b&#39;, &#39;a&#39;, &#39;c&#39;]);
set.add(&#39;d&#39;).add(&#39;b&#39;).add(&#39;e&#39;);
console.log(set.size);        // =&amp;gt; 5
console.log(set.has(&#39;b&#39;));    // =&amp;gt; true
set.forEach(it =&amp;gt; {
  console.log(it);            // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;
});
set.delete(&#39;b&#39;);
console.log(set.size);        // =&amp;gt; 4
console.log(set.has(&#39;b&#39;));    // =&amp;gt; false
console.log(Array.from(set)); // =&amp;gt; [&#39;a&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]

let set = new Set([1, 2, 3, 2, 1]);

for (let value of set) console.log(value);          // =&amp;gt; 1, 2, 3
for (let value of set.values()) console.log(value); // =&amp;gt; 1, 2, 3
for (let key of set.keys()) console.log(key);       // =&amp;gt; 1, 2, 3
for (let [key, value] of set.entries()) {
  console.log(key);                                 // =&amp;gt; 1, 2, 3
  console.log(value);                               // =&amp;gt; 1, 2, 3
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;WeakMap&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.weak-map.js&quot;&gt;&lt;code&gt;es.weak-map&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class WeakMap {
  constructor(iterable?: Iterable&amp;lt;[key, value]&amp;gt;): WeakMap;
  delete(key: Object): boolean;
  get(key: Object): any;
  has(key: Object): boolean;
  set(key: Object, val: any): this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/weak-map
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/SILXyw&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let a = [1];
let b = [2];
let c = [3];

let weakmap = new WeakMap([[a, 1], [b, 2]]);
weakmap.set(c, 3).set(b, 4);
console.log(weakmap.has(a));   // =&amp;gt; true
console.log(weakmap.has([1])); // =&amp;gt; false
console.log(weakmap.get(a));   // =&amp;gt; 1
weakmap.delete(a);
console.log(weakmap.get(a));   // =&amp;gt; undefined

// Private properties store:
let Person = (() =&amp;gt; {
  let names = new WeakMap;
  return class {
    constructor(name) {
      names.set(this, name);
    }
    getName() {
      return names.get(this);
    }
  }
})();

let person = new Person(&#39;Vasya&#39;);
console.log(person.getName());            // =&amp;gt; &#39;Vasya&#39;
for (let key in person) console.log(key); // =&amp;gt; only &#39;getName&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;WeakSet&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.weak-set.js&quot;&gt;&lt;code&gt;es.weak-set&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class WeakSet {
  constructor(iterable?: Iterable&amp;lt;value&amp;gt;): WeakSet;
  add(key: Object): this;
  delete(key: Object): boolean;
  has(key: Object): boolean;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/weak-set
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/TdFbEx&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let a = [1];
let b = [2];
let c = [3];

let weakset = new WeakSet([a, b, a]);
weakset.add(c).add(b).add(c);
console.log(weakset.has(b));   // =&amp;gt; true
console.log(weakset.has([2])); // =&amp;gt; false
weakset.delete(b);
console.log(weakset.has(b));   // =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Caveats when using collections polyfill:&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Weak-collections polyfill stores values as hidden properties of keys. It works correct and not leak in most cases. However, it is desirable to store a collection longer than its keys.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;ECMAScript: Typed Arrays&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Implementations and fixes for &lt;code&gt;ArrayBuffer&lt;/code&gt;, &lt;code&gt;DataView&lt;/code&gt;, Typed Arrays constructors, static and prototype methods. Typed arrays work only in environments with support descriptors (IE9+), &lt;code&gt;ArrayBuffer&lt;/code&gt; and &lt;code&gt;DataView&lt;/code&gt; should work anywhere.&lt;/p&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array-buffer.constructor.js&quot;&gt;&lt;code&gt;es.array-buffer.constructor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array-buffer.is-view.js&quot;&gt;&lt;code&gt;es.array-buffer.is-view&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array-buffer.slice.js&quot;&gt;&lt;code&gt;es.array-buffer.slice&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.data-view.js&quot;&gt;&lt;code&gt;es.data-view&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.int8-array.js&quot;&gt;&lt;code&gt;es.typed-array.int8-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.uint8-array.js&quot;&gt;&lt;code&gt;es.typed-array.uint8-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.uint8-clamped-array.js&quot;&gt;&lt;code&gt;es.typed-array.uint8-clamped-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.int16-array.js&quot;&gt;&lt;code&gt;es.typed-array.int16-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.uint16-array.js&quot;&gt;&lt;code&gt;es.typed-array.uint16-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed.int32-array.js&quot;&gt;&lt;code&gt;es.typed-array.int32-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.uint32-array.js&quot;&gt;&lt;code&gt;es.typed-array.uint32-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.float32-array.js&quot;&gt;&lt;code&gt;es.typed-array.float32-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.float64-array.js&quot;&gt;&lt;code&gt;es.typed-array.float64-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.copy-within.js&quot;&gt;&lt;code&gt;es.typed-array.copy-within&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.every.js&quot;&gt;&lt;code&gt;es.typed-array.every&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.fill.js&quot;&gt;&lt;code&gt;es.typed-array.fill&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.filter.js&quot;&gt;&lt;code&gt;es.typed-array.filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.find.js&quot;&gt;&lt;code&gt;es.typed-array.find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.find-index.js&quot;&gt;&lt;code&gt;es.typed-array.find-index&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.for-each.js&quot;&gt;&lt;code&gt;es.typed-array.for-each&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.from.js&quot;&gt;&lt;code&gt;es.typed-array.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.includes.js&quot;&gt;&lt;code&gt;es.typed-array.includes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.index-of.js&quot;&gt;&lt;code&gt;es.typed-array.index-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.iterator.js&quot;&gt;&lt;code&gt;es.typed-array.iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.last-index-of.js&quot;&gt;&lt;code&gt;es.typed-array.last-index-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.map.js&quot;&gt;&lt;code&gt;es.typed-array.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.of.js&quot;&gt;&lt;code&gt;es.typed-array.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.reduce.js&quot;&gt;&lt;code&gt;es.typed-array.reduce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.reduce-right.js&quot;&gt;&lt;code&gt;es.typed-array.reduce-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.reverse.js&quot;&gt;&lt;code&gt;es.typed-array.reverse&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.set.js&quot;&gt;&lt;code&gt;es.typed-array.set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.slice.js&quot;&gt;&lt;code&gt;es.typed-array.slice&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.some.js&quot;&gt;&lt;code&gt;es.typed-array.some&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.sort.js&quot;&gt;&lt;code&gt;es.typed-array.sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.subarray.js&quot;&gt;&lt;code&gt;es.typed-array.subarray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.to-locale-string.js&quot;&gt;&lt;code&gt;es.typed-array.to-locale-string&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.to-string.js&quot;&gt;&lt;code&gt;es.typed-array.to-string&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.at.js&quot;&gt;&lt;code&gt;es.typed-array.at&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class ArrayBuffer {
  constructor(length: any): ArrayBuffer;
  slice(start: any, end: any): ArrayBuffer;
  readonly attribute byteLength: number;
  static isView(arg: any): boolean;
}

class DataView {
  constructor(buffer: ArrayBuffer, byteOffset?: number, byteLength?: number): DataView;
  getInt8(offset: any): int8;
  getUint8(offset: any): uint8
  getInt16(offset: any, littleEndian?: boolean = false): int16;
  getUint16(offset: any, littleEndian?: boolean = false): uint16;
  getInt32(offset: any, littleEndian?: boolean = false): int32;
  getUint32(offset: any, littleEndian?: boolean = false): uint32;
  getFloat32(offset: any, littleEndian?: boolean = false): float32;
  getFloat64(offset: any, littleEndian?: boolean = false): float64;
  setInt8(offset: any, value: any): void;
  setUint8(offset: any, value: any): void;
  setInt16(offset: any, value: any, littleEndian?: boolean = false): void;
  setUint16(offset: any, value: any, littleEndian?: boolean = false): void;
  setInt32(offset: any, value: any, littleEndian?: boolean = false): void;
  setUint32(offset: any, value: any, littleEndian?: boolean = false): void;
  setFloat32(offset: any, value: any, littleEndian?: boolean = false): void;
  setFloat64(offset: any, value: any, littleEndian?: boolean = false): void;
  readonly attribute buffer: ArrayBuffer;
  readonly attribute byteLength: number;
  readonly attribute byteOffset: number;
}

class [
  Int8Array,
  Uint8Array,
  Uint8ClampedArray,
  Int16Array,
  Uint16Array,
  Int32Array,
  Uint32Array,
  Float32Array,
  Float64Array,
] extends %TypedArray% {
  constructor(length: number): %TypedArray%;
  constructor(object: %TypedArray% | Iterable | ArrayLike): %TypedArray%;
  constructor(buffer: ArrayBuffer, byteOffset?: number, length?: number): %TypedArray%
}

class %TypedArray% {
  at(index: int): number;
  copyWithin(target: number, start: number, end?: number): this;
  every(callbackfn: (value: number, index: number, target: %TypedArray%) =&amp;gt; boolean, thisArg?: any): boolean;
  fill(value: number, start?: number, end?: number): this;
  filter(callbackfn: (value: number, index: number, target: %TypedArray%) =&amp;gt; boolean, thisArg?: any): %TypedArray%;
  find(callbackfn: (value: number, index: number, target: %TypedArray%) =&amp;gt; boolean), thisArg?: any): any;
  findIndex(callbackfn: (value: number, index: number, target: %TypedArray%) =&amp;gt; boolean, thisArg?: any): number;
  forEach(callbackfn: (value: number, index: number, target: %TypedArray%) =&amp;gt; void, thisArg?: any): void;
  includes(searchElement: any, from?: number): boolean;
  indexOf(searchElement: any, from?: number): number;
  join(separator: string = &#39;,&#39;): string;
  lastIndexOf(searchElement: any, from?: number): number;
  map(mapFn: (value: number, index: number, target: %TypedArray%) =&amp;gt; number, thisArg?: any): %TypedArray%;
  reduce(callbackfn: (memo: any, value: number, index: number, target: %TypedArray%) =&amp;gt; any, initialValue?: any): any;
  reduceRight(callbackfn: (memo: any, value: number, index: number, target: %TypedArray%) =&amp;gt; any, initialValue?: any): any;
  reverse(): this;
  set(array: ArrayLike, offset?: number): void;
  slice(start?: number, end?: number): %TypedArray%;
  some(callbackfn: (value: number, index: number, target: %TypedArray%) =&amp;gt; boolean, thisArg?: any): boolean;
  sort(comparefn?: (a: number, b: number) =&amp;gt; number): this; // with modern behavior like stable sort
  subarray(begin?: number, end?: number): %TypedArray%;
  toString(): string;
  toLocaleString(): string;
  values(): Iterator&amp;lt;value&amp;gt;;
  keys(): Iterator&amp;lt;index&amp;gt;;
  entries(): Iterator&amp;lt;[index, value]&amp;gt;;
  @@iterator(): Iterator&amp;lt;value&amp;gt;;
  readonly attribute buffer: ArrayBuffer;
  readonly attribute byteLength: number;
  readonly attribute byteOffset: number;
  readonly attribute length: number;
  BYTES_PER_ELEMENT: number;
  static from(items: Iterable | ArrayLike, mapFn?: (value: any, index: number) =&amp;gt; any, thisArg?: any): %TypedArray%;
  static of(...args: Array&amp;lt;mixed&amp;gt;): %TypedArray%;
  static BYTES_PER_ELEMENT: number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/es|stable|features/array-buffer
core-js/es|stable|features/array-buffer/constructor
core-js/es|stable|features/array-buffer/is-view
core-js/es|stable|features/array-buffer/slice
core-js/es|stable|features/data-view
core-js/es|stable|features/typed-array
core-js/es|stable|features/typed-array/int8-array
core-js/es|stable|features/typed-array/uint8-array
core-js/es|stable|features/typed-array/uint8-clamped-array
core-js/es|stable|features/typed-array/int16-array
core-js/es|stable|features/typed-array/uint16-array
core-js/es|stable|features/typed-array/int32-array
core-js/es|stable|features/typed-array/uint32-array
core-js/es|stable|features/typed-array/float32-array
core-js/es|stable|features/typed-array/float64-array
core-js/es|stable|features/typed-array/at
core-js/es|stable|features/typed-array/copy-within
core-js/es|stable|features/typed-array/entries
core-js/es|stable|features/typed-array/every
core-js/es|stable|features/typed-array/fill
core-js/es|stable|features/typed-array/filter
core-js/es|stable|features/typed-array/find
core-js/es|stable|features/typed-array/find-index
core-js/es|stable|features/typed-array/for-each
core-js/es|stable|features/typed-array/from
core-js/es|stable|features/typed-array/includes
core-js/es|stable|features/typed-array/index-of
core-js/es|stable|features/typed-array/iterator
core-js/es|stable|features/typed-array/join
core-js/es|stable|features/typed-array/keys
core-js/es|stable|features/typed-array/last-index-of
core-js/es|stable|features/typed-array/map
core-js/es|stable|features/typed-array/of
core-js/es|stable|features/typed-array/reduce
core-js/es|stable|features/typed-array/reduce-right
core-js/es|stable|features/typed-array/reverse
core-js/es|stable|features/typed-array/set
core-js/es|stable|features/typed-array/slice
core-js/es|stable|features/typed-array/some
core-js/es|stable|features/typed-array/sort
core-js/es|stable|features/typed-array/subarray
core-js/es|stable|features/typed-array/to-locale-string
core-js/es|stable|features/typed-array/to-string
core-js/es|stable|features/typed-array/values
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(new%20Int32Array(4))%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20%5B0%2C%200%2C%200%2C%200%5D%0Alog(new%20Uint8ClampedArray(%5B1%2C%202%2C%203%2C%20666%5D))%3B%20%20%20%20%20%20%2F%2F%20%3D%3E%20%5B1%2C%202%2C%203%2C%20255%5D%0Alog(new%20Float32Array(new%20Set(%5B1%2C%202%2C%203%2C%202%2C%201%5D)))%3B%20%2F%2F%20%3D%3E%20%5B1%2C%202%2C%203%5D%0A%0Avar%20buffer%20%3D%20new%20ArrayBuffer(8)%3B%0Avar%20view%20%20%20%3D%20new%20DataView(buffer)%3B%0Aview.setFloat64(0%2C%20123.456%2C%20true)%3B%0Alog(new%20Uint8Array(buffer.slice(4)))%3B%20%2F%2F%20%3D%3E%20%5B47%2C%20221%2C%2094%2C%2064%5D%0A%0Alog(Int8Array.of(1%2C%201.5%2C%205.7%2C%20745))%3B%20%20%20%20%20%20%2F%2F%20%3D%3E%20%5B1%2C%201%2C%205%2C%20-23%5D%0Alog(Uint8Array.from(%5B1%2C%201.5%2C%205.7%2C%20745%5D))%3B%20%2F%2F%20%3D%3E%20%5B1%2C%201%2C%205%2C%20233%5D%0A%0Avar%20typed%20%3D%20new%20Uint8Array(%5B1%2C%202%2C%203%5D)%3B%0A%0Avar%20a%20%3D%20typed.slice(1)%3B%20%20%20%20%2F%2F%20%3D%3E%20%5B2%2C%203%5D%0Alog(a)%3B%0Alog(typed.buffer%20%3D%3D%3D%20a.buffer)%3B%20%2F%2F%20%3D%3E%20false%0Avar%20b%20%3D%20typed.subarray(1)%3B%20%2F%2F%20%3D%3E%20%5B2%2C%203%5D%0Alog(b)%3B%0Alog(typed.buffer%20%3D%3D%3D%20b.buffer)%3B%20%2F%2F%20%3D%3E%20true%0A%0Alog(typed.filter(it%20%3D%3E%20it%20%25%202))%3B%20%2F%2F%20%3D%3E%20%5B1%2C%203%5D%0Alog(typed.map(it%20%3D%3E%20it%20*%201.5))%3B%20%20%2F%2F%20%3D%3E%20%5B1%2C%203%2C%204%5D%0A%0Afor(var%20val%20of%20typed)log(val)%3B%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%201%2C%202%2C%203%0Afor(var%20val%20of%20typed.values())log(val)%3B%20%2F%2F%20%3D%3E%201%2C%202%2C%203%0Afor(var%20key%20of%20typed.keys())log(key)%3B%20%20%20%2F%2F%20%3D%3E%200%2C%201%2C%202%0Afor(var%20%5Bkey%2C%20val%5D%20of%20typed.entries())%7B%0A%20%20log(key)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%200%2C%201%2C%202%0A%20%20log(val)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%3D%3E%201%2C%202%2C%203%0A%7D%0A%0Alog(new%20Int32Array(%5B1%2C%202%2C%203%5D).at(1))%3B%20%20%2F%2F%20%3D%3E%202%0Alog(new%20Int32Array(%5B1%2C%202%2C%203%5D).at(-1))%3B%20%2F%2F%20%3D%3E%203&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new Int32Array(4);                          // =&amp;gt; [0, 0, 0, 0]
new Uint8ClampedArray([1, 2, 3, 666]);      // =&amp;gt; [1, 2, 3, 255]
new Float32Array(new Set([1, 2, 3, 2, 1])); // =&amp;gt; [1, 2, 3]

let buffer = new ArrayBuffer(8);
let view   = new DataView(buffer);
view.setFloat64(0, 123.456, true);
new Uint8Array(buffer.slice(4)); // =&amp;gt; [47, 221, 94, 64]

Int8Array.of(1, 1.5, 5.7, 745);      // =&amp;gt; [1, 1, 5, -23]
Uint8Array.from([1, 1.5, 5.7, 745]); // =&amp;gt; [1, 1, 5, 233]

let typed = new Uint8Array([1, 2, 3]);

let a = typed.slice(1);    // =&amp;gt; [2, 3]
typed.buffer === a.buffer; // =&amp;gt; false
let b = typed.subarray(1); // =&amp;gt; [2, 3]
typed.buffer === b.buffer; // =&amp;gt; true

typed.filter(it =&amp;gt; it % 2); // =&amp;gt; [1, 3]
typed.map(it =&amp;gt; it * 1.5);  // =&amp;gt; [1, 3, 4]

for (let value of typed) console.log(value);          // =&amp;gt; 1, 2, 3
for (let value of typed.values()) console.log(value); // =&amp;gt; 1, 2, 3
for (let key of typed.keys()) console.log(key);       // =&amp;gt; 0, 1, 2
for (let [key, value] of typed.entries()) {
  console.log(key);                                   // =&amp;gt; 0, 1, 2
  console.log(value);                                 // =&amp;gt; 1, 2, 3
}

new Int32Array([1, 2, 3]).at(1);  // =&amp;gt; 2
new Int32Array([1, 2, 3]).at(-1); // =&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Caveats when using typed arrays polyfills:&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Polyfills of Typed Arrays constructors work completely how should work by the spec, but because of internal usage of getters / setters on each instance, are slow and consumes significant memory. However, polyfills of Typed Arrays constructors required mainly for old IE, all modern engines have native Typed Arrays constructors and require only fixes of constructors and polyfills of methods.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;ECMAScript: Reflect&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.apply.js&quot;&gt;&lt;code&gt;es.reflect.apply&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.construct.js&quot;&gt;&lt;code&gt;es.reflect.construct&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.define-property.js&quot;&gt;&lt;code&gt;es.reflect.define-property&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.delete-property.js&quot;&gt;&lt;code&gt;es.reflect.delete-property&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.get.js&quot;&gt;&lt;code&gt;es.reflect.get&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.get-own-property-descriptor.js&quot;&gt;&lt;code&gt;es.reflect.get-own-property-descriptor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.get-prototype-of.js&quot;&gt;&lt;code&gt;es.reflect.get-prototype-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.has.js&quot;&gt;&lt;code&gt;es.reflect.has&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.is-extensible.js&quot;&gt;&lt;code&gt;es.reflect.is-extensible&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.own-keys.js&quot;&gt;&lt;code&gt;es.reflect.own-keys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.prevent-extensions.js&quot;&gt;&lt;code&gt;es.reflect.prevent-extensions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.set.js&quot;&gt;&lt;code&gt;es.reflect.set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.reflect.set-prototype-of.js&quot;&gt;&lt;code&gt;es.reflect.set-prototype-of&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;namespace Reflect {
  apply(target: Function, thisArgument: any, argumentsList: Array&amp;lt;mixed&amp;gt;): any;
  construct(target: Function, argumentsList: Array&amp;lt;mixed&amp;gt;, newTarget?: Function): Object;
  defineProperty(target: Object, propertyKey: PropertyKey, attributes: PropertyDescriptor): boolean;
  deleteProperty(target: Object, propertyKey: PropertyKey): boolean;
  get(target: Object, propertyKey: PropertyKey, receiver?: any): any;
  getOwnPropertyDescriptor(target: Object, propertyKey: PropertyKey): PropertyDescriptor | void;
  getPrototypeOf(target: Object): Object | null;
  has(target: Object, propertyKey: PropertyKey): boolean;
  isExtensible(target: Object): boolean;
  ownKeys(target: Object): Array&amp;lt;string | symbol&amp;gt;;
  preventExtensions(target: Object): boolean;
  set(target: Object, propertyKey: PropertyKey, V: any, receiver?: any): boolean;
  setPrototypeOf(target: Object, proto: Object | null): boolean; // required __proto__ - IE11+
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/es|stable|features/reflect
core-js(-pure)/es|stable|features/reflect/apply
core-js(-pure)/es|stable|features/reflect/construct
core-js(-pure)/es|stable|features/reflect/define-property
core-js(-pure)/es|stable|features/reflect/delete-property
core-js(-pure)/es|stable|features/reflect/get
core-js(-pure)/es|stable|features/reflect/get-own-property-descriptor
core-js(-pure)/es|stable|features/reflect/get-prototype-of
core-js(-pure)/es|stable|features/reflect/has
core-js(-pure)/es|stable|features/reflect/is-extensible
core-js(-pure)/es|stable|features/reflect/own-keys
core-js(-pure)/es|stable|features/reflect/prevent-extensions
core-js(-pure)/es|stable|features/reflect/set
core-js(-pure)/es|stable|features/reflect/set-prototype-of
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/gVT0cH&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let object = { a: 1 };
Object.defineProperty(object, &#39;b&#39;, { value: 2 });
object[Symbol(&#39;c&#39;)] = 3;
Reflect.ownKeys(object); // =&amp;gt; [&#39;a&#39;, &#39;b&#39;, Symbol(c)]

function C(a, b) {
  this.c = a + b;
}

let instance = Reflect.construct(C, [20, 22]);
instance.c; // =&amp;gt; 42
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: JSON&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Since &lt;code&gt;JSON&lt;/code&gt; object is missed only in very old engines like IE7-, &lt;code&gt;core-js&lt;/code&gt; does not provide a full &lt;code&gt;JSON&lt;/code&gt; polyfill, however, fix already existing implementations by the current standard, for example, &lt;a href=&quot;https://github.com/tc39/proposal-well-formed-stringify&quot;&gt;well-formed &lt;code&gt;JSON.stringify&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;JSON&lt;/code&gt; also fixed in other modules - for example, &lt;code&gt;Symbol&lt;/code&gt; polyfill fixes &lt;code&gt;JSON.stringify&lt;/code&gt; for correct work with symbols.&lt;/p&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.json.to-string-tag.js&quot;&gt;&lt;code&gt;es.json.to-string-tag&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.json.stringify.js&quot;&gt;&lt;code&gt;es.json.stringify&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;namespace JSON {
  stringify(target: any, replacer?: Function | Array, space?: string | number): string | void;
  @@toStringTag: &#39;JSON&#39;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/es|stable|features/json/stringify
core-js(-pure)/es|stable|features/json/to-string-tag
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(JSON.stringify(%7B%20&#39;%F0%A0%AE%B7&#39;%3A%20%5B&#39;%5CuDF06%5CuD834&#39;%5D%20%7D))%3B%20%2F%2F%20%3D%3E%20&#39;%7B%22%F0%A0%AE%B7%22%3A%5B%22%5C%5Cudf06%5C%5Cud834%22%5D%7D&#39;&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;JSON.stringify({ &#39;𠮷&#39;: [&#39;\uDF06\uD834&#39;] }); // =&amp;gt; &#39;{&quot;𠮷&quot;:[&quot;\\udf06\\ud834&quot;]}&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ECMAScript: globalThis&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.global-this.js&quot;&gt;&lt;code&gt;es.global-this&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let globalThis: Object;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/es|stable|features/global-this
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/LAifsc&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;globalThis.Array === Array; // =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ECMAScript proposals&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;The TC39 process.&lt;/a&gt; &lt;code&gt;core-js/stage/4&lt;/code&gt; entry point contains only stage 4 proposals, &lt;code&gt;core-js/stage/3&lt;/code&gt; - stage 3 and stage 4, etc.&lt;/p&gt; 
&lt;h4&gt;Stage 4 proposals&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Stage 4 proposals already marked in &lt;code&gt;core-js&lt;/code&gt; as stable ECMAScript, they will be removed from proposals namespace in the next major &lt;code&gt;core-js&lt;/code&gt; version. &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/stage/4
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-global&quot;&gt;&lt;code&gt;globalThis&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.global-this.js&quot;&gt;&lt;code&gt;es.global-this&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let globalThis: Object;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/global-this
core-js(-pure)/es|stable|features/global-this
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/LAifsc&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;globalThis.Array === Array; // =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-string-matchall&quot;&gt;&lt;code&gt;String#matchAll&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;.&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.match-all.js&quot;&gt;&lt;code&gt;es.string.match-all&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class String {
  matchAll(regexp: RegExp): Iterator;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/string-match-all
core-js/es|stable|features/string/match-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-string-replace-all&quot;&gt;&lt;code&gt;String#replaceAll&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.replace-all.js&quot;&gt;&lt;code&gt;es.string.replace-all&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class String {
  replaceAll(searchValue: string | RegExp, replaceString: string | (searchValue, index, this) =&amp;gt; string): string;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/string-replace-all
core-js/es|stable|features/string/replace-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/wUXNXN&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;Test abc test test abc test.&#39;.replaceAll(&#39;abc&#39;, &#39;foo&#39;); // -&amp;gt; &#39;Test foo test test foo test.&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-promise-allSettled&quot;&gt;&lt;code&gt;Promise.allSettled&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.promise.all-settled.js&quot;&gt;&lt;code&gt;es.promise.all-settled&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Promise {
  static allSettled(iterable: Iterable): Promise;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/promise-all-settled
core-js(-pure)/es|stable|features/promise/all-settled
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-promise-any&quot;&gt;&lt;code&gt;Promise.any&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.promise.any.js&quot;&gt;&lt;code&gt;es.promise.any&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.aggregate-error.js&quot;&gt;&lt;code&gt;es.aggregate-error&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class AggregateError {
  constructor(errors: Iterable, message: string): AggregateError;
  errors: Array&amp;lt;any&amp;gt;;
  message: string;
}

class Promise {
  static any(promises: Iterable): Promise&amp;lt;any&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/promise-any
core-js(-pure)/es|stable|features/promise/any
core-js(-pure)/es|stable|features/aggregate-error
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/iErvmp&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Promise.any([
  Promise.resolve(1),
  Promise.reject(2),
  Promise.resolve(3),
]).then(console.log); // =&amp;gt; 1

Promise.any([
  Promise.reject(1),
  Promise.reject(2),
  Promise.reject(3),
]).catch(({ errors }) =&amp;gt; console.log(errors)); // =&amp;gt; [1, 2, 3]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-accessible-object-hasownproperty&quot;&gt;Accessible &lt;code&gt;Object.prototype.hasOwnProperty&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.object.has-own.js&quot;&gt;&lt;code&gt;es.object.has-own&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Object {
  static hasOwn(object: object, key: PropertyKey): boolean;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/proposals/accessible-object-hasownproperty
core-js(-pure)/es|stable|features/object/has-own
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(Object.hasOwn(%7B%20foo%3A%2042%20%7D%2C%20&#39;foo&#39;))%3B%20%2F%2F%20%3D%3E%20true%0Alog(Object.hasOwn(%7B%20foo%3A%2042%20%7D%2C%20&#39;bar&#39;))%3B%20%2F%2F%20%3D%3E%20false%0Alog(Object.hasOwn(%7B%7D%2C%20&#39;toString&#39;))%3B%20%2F%2F%20%3D%3E%20false&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Object.hasOwn({ foo: 42 }, &#39;foo&#39;); // =&amp;gt; true
Object.hasOwn({ foo: 42 }, &#39;bar&#39;); // =&amp;gt; false
Object.hasOwn({}, &#39;toString&#39;);     // =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-relative-indexing-method&quot;&gt;Relative indexing method&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.array.at.js&quot;&gt;&lt;code&gt;es.array.at&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.string.at-alternative.js&quot;&gt;&lt;code&gt;es.string.at-alternative&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/es.typed-array.at.js&quot;&gt;&lt;code&gt;es.typed-array.at&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Array {
  at(index: int): any;
}

class String {
  at(index: int): string;
}

class %TypedArray% {
  at(index: int): number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/proposals/relative-indexing-method
core-js(-pure)/es|stable|features/array/at
core-js(-pure)/es|stable|features/string/at
core-js(-pure)/es|stable|features/typed-array/at
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(%5B1%2C%202%2C%203%5D.at(1))%3B%20%20%2F%2F%20%3D%3E%202%0Alog(%5B1%2C%202%2C%203%5D.at(-1))%3B%20%2F%2F%20%3D%3E%203&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3].at(1);  // =&amp;gt; 2
[1, 2, 3].at(-1); // =&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stage 3 proposals&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/stage/3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-array-find-from-last&quot;&gt;Array find from last&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.array.find-last.js&quot;&gt;&lt;code&gt;esnext.array.find-last&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.array.find-last-index.js&quot;&gt;&lt;code&gt;esnext.array.find-last-index&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.typed-array.find-last.js&quot;&gt;&lt;code&gt;esnext.typed-array.find-last&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.typed-array.find-last-index.js&quot;&gt;&lt;code&gt;esnext.typed-array.find-last-index&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Array {
  findLast(callbackfn: (value: any, index: number, target: any) =&amp;gt; boolean, thisArg?: any): any;
  findLastIndex(callbackfn: (value: any, index: number, target: any) =&amp;gt; boolean, thisArg?: any): uint;
}

class %TypedArray% {
  findLast(callbackfn: (value: any, index: number, target: %TypedArray%) =&amp;gt; boolean, thisArg?: any): any;
  findLastIndex(callbackfn: (value: any, index: number, target: %TypedArray%) =&amp;gt; boolean, thisArg?: any): uint;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/proposals/array-find-from-last
core-js(-pure)/features(/virtual)/array/find-last
core-js(-pure)/features(/virtual)/array/find-last-index
core-js/features/typed-array/find-last
core-js/features/typed-array/find-last-index
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(%5B1%2C%202%2C%203%2C%204%5D.findLast(it%20%3D%3E%20it%20%25%202))%3B%20%20%20%20%20%20%2F%2F%20%3D%3E%203%0Alog(%5B1%2C%202%2C%203%2C%204%5D.findLastIndex(it%20%3D%3E%20it%20%25%202))%3B%20%2F%2F%20%3D%3E%202&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3, 4].findLast(it =&amp;gt; it % 2);      // =&amp;gt; 3
[1, 2, 3, 4].findLastIndex(it =&amp;gt; it % 2); // =&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stage 2 proposals&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js(-pure)/stage/2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-iterator-helpers&quot;&gt;Iterator helpers&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.constructor.js&quot;&gt;&lt;code&gt;esnext.async-iterator.constructor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.as-indexed-pairs.js&quot;&gt;&lt;code&gt;esnext.async-iterator.as-indexed-pairs&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.drop.js&quot;&gt;&lt;code&gt;esnext.async-iterator.drop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.every.js&quot;&gt;&lt;code&gt;esnext.async-iterator.every&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.filter.js&quot;&gt;&lt;code&gt;esnext.async-iterator.filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.find.js&quot;&gt;&lt;code&gt;esnext.async-iterator.find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.flat-map.js&quot;&gt;&lt;code&gt;esnext.async-iterator.flat-map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.for-each.js&quot;&gt;&lt;code&gt;esnext.async-iterator.for-each&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.from.js&quot;&gt;&lt;code&gt;esnext.async-iterator.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.map.js&quot;&gt;&lt;code&gt;esnext.async-iterator.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.reduce.js&quot;&gt;&lt;code&gt;esnext.async-iterator.reduce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.some.js&quot;&gt;&lt;code&gt;esnext.async-iterator.some&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.take.js&quot;&gt;&lt;code&gt;esnext.async-iterator.take&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.async-iterator.to-array.js&quot;&gt;&lt;code&gt;esnext.async-iterator.to-array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.constructor.js&quot;&gt;&lt;code&gt;esnext.iterator.constructor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.as-indexed-pairs.js&quot;&gt;&lt;code&gt;esnext.iterator.as-indexed-pairs&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.drop.js&quot;&gt;&lt;code&gt;esnext.iterator.drop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.every.js&quot;&gt;&lt;code&gt;esnext.iterator.every&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.filter.js&quot;&gt;&lt;code&gt;esnext.iterator.filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.find.js&quot;&gt;&lt;code&gt;esnext.iterator.find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.flat-map.js&quot;&gt;&lt;code&gt;esnext.iterator.flat-map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.for-each.js&quot;&gt;&lt;code&gt;esnext.iterator.for-each&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.from.js&quot;&gt;&lt;code&gt;esnext.iterator.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.map.js&quot;&gt;&lt;code&gt;esnext.iterator.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.reduce.js&quot;&gt;&lt;code&gt;esnext.iterator.reduce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.some.js&quot;&gt;&lt;code&gt;esnext.iterator.some&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.take.js&quot;&gt;&lt;code&gt;esnext.iterator.take&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.iterator.to-array.js&quot;&gt;&lt;code&gt;esnext.iterator.to-array&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Iterator {
  static from(iterable: Iterable&amp;lt;mixed&amp;gt;): Iterator&amp;lt;any&amp;gt;;
  asIndexedPairs(): Iterator&amp;lt;[index, any]&amp;gt;;
  drop(limit: uint): Iterator&amp;lt;any&amp;gt;;
  every(callbackfn: value: any =&amp;gt; boolean): boolean;
  filter(callbackfn: value: any =&amp;gt; boolean): Iterator&amp;lt;any&amp;gt;;
  find(callbackfn: value: any =&amp;gt; boolean)): any;
  flatMap(callbackfn: value =&amp;gt; any: Iterable): Iterator&amp;lt;any&amp;gt;;
  forEach(callbackfn: value =&amp;gt; void): void;
  map(callbackfn: value =&amp;gt; any): Iterator&amp;lt;any&amp;gt;;
  reduce(callbackfn: (memo: any, value: any) =&amp;gt; any, initialValue: any): any;
  some(callbackfn: value: any =&amp;gt; boolean): boolean;
  take(limit: uint): Iterator&amp;lt;any&amp;gt;;
  toArray(): Array&amp;lt;any&amp;gt;;
  @@toStringTag: &#39;Iterator&#39;
}

class AsyncIterator {
  static from(iterable: Iterable&amp;lt;mixed&amp;gt;): AsyncIterator&amp;lt;any&amp;gt;;
  asIndexedPairs(): AsyncIterator&amp;lt;[index, any]&amp;gt;;
  drop(limit: uint): AsyncIterator&amp;lt;any&amp;gt;;
  every(async callbackfn: value: any =&amp;gt; boolean): Promise&amp;lt;boolean&amp;gt;;
  filter(async callbackfn: value: any =&amp;gt; boolean): AsyncIterator&amp;lt;any&amp;gt;;
  find(async callbackfn: value: any =&amp;gt; boolean)): Promise&amp;lt;any&amp;gt;;
  flatMap(async callbackfn: value =&amp;gt; any: Iterable): AsyncIterator&amp;lt;any&amp;gt;;
  forEach(async callbackfn: value =&amp;gt; void): Promise&amp;lt;void&amp;gt;;
  map(async callbackfn: value =&amp;gt; any): AsyncIterator&amp;lt;any&amp;gt;;
  reduce(async callbackfn: (memo: any, value: any) =&amp;gt; any, initialValue: any): Promise&amp;lt;any&amp;gt;;
  some(async callbackfn: value: any =&amp;gt; boolean): Promise&amp;lt;boolean&amp;gt;;
  take(limit: uint): AsyncIterator&amp;lt;any&amp;gt;;
  toArray(): Promise&amp;lt;Array&amp;gt;;
  @@toStringTag: &#39;AsyncIterator&#39;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/iterator-helpers
core-js(-pure)/features/async-iterator
core-js(-pure)/features/async-iterator/as-indexed-pairs
core-js(-pure)/features/async-iterator/drop
core-js(-pure)/features/async-iterator/every
core-js(-pure)/features/async-iterator/filter
core-js(-pure)/features/async-iterator/find
core-js(-pure)/features/async-iterator/flat-map
core-js(-pure)/features/async-iterator/for-each
core-js(-pure)/features/async-iterator/from
core-js(-pure)/features/async-iterator/map
core-js(-pure)/features/async-iterator/reduce
core-js(-pure)/features/async-iterator/some
core-js(-pure)/features/async-iterator/take
core-js(-pure)/features/async-iterator/to-array
core-js(-pure)/features/iterator
core-js(-pure)/features/iterator/as-indexed-pairs
core-js(-pure)/features/iterator/drop
core-js(-pure)/features/iterator/every
core-js(-pure)/features/iterator/filter
core-js(-pure)/features/iterator/find
core-js(-pure)/features/iterator/flat-map
core-js(-pure)/features/iterator/for-each
core-js(-pure)/features/iterator/from
core-js(-pure)/features/iterator/map
core-js(-pure)/features/iterator/reduce
core-js(-pure)/features/iterator/some
core-js(-pure)/features/iterator/take
core-js(-pure)/features/iterator/to-array
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(%5B1%2C%202%2C%203%2C%204%2C%205%2C%206%2C%207%5D.values()%0A%20%20.drop(1)%0A%20%20.take(5)%0A%20%20.filter(it%20%3D%3E%20it%20%25%202)%0A%20%20.map(it%20%3D%3E%20it%20**%202)%0A%20%20.toArray())%3B%20%2F%2F%20%3D%3E%20%5B9%2C%2025%5D%0A%0Alog(Iterator.from(%7B%0A%20%20next%3A%20()%20%3D%3E%20(%7B%20done%3A%20Math.random()%20%3E%20.9%2C%20value%3A%20Math.random()%20*%2010%20%7C%200%20%7D)%0A%7D).toArray())%3B%20%2F%2F%20%3D%3E%20%5B7%2C%206%2C%203%2C%200%2C%202%2C%208%5D%0A%0AAsyncIterator.from(%5B1%2C%202%2C%203%2C%204%2C%205%2C%206%2C%207%5D)%0A%20%20.drop(1)%0A%20%20.take(5)%0A%20%20.filter(it%20%3D%3E%20it%20%25%202)%0A%20%20.map(it%20%3D%3E%20it%20**%202)%0A%20%20.toArray()%0A%20%20.then(log)%3B%20%2F%2F%20%3D%3E%20%5B9%2C%2025%5D&quot;&gt;Examples&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3, 4, 5, 6, 7].values()
  .drop(1)
  .take(5)
  .filter(it =&amp;gt; it % 2)
  .map(it =&amp;gt; it ** 2)
  .toArray(); // =&amp;gt; [9, 25]

Iterator.from({
  next: () =&amp;gt; ({ done: Math.random() &amp;gt; .9, value: Math.random() * 10 | 0 })
}).toArray(); // =&amp;gt; [7, 6, 3, 0, 2, 8]

AsyncIterator.from([1, 2, 3, 4, 5, 6, 7])
  .drop(1)
  .take(5)
  .filter(it =&amp;gt; it % 2)
  .map(it =&amp;gt; it ** 2)
  .toArray()
  .then(console.log); // =&amp;gt; [9, 25]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;Caveats:&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;For preventing prototypes pollution, in the &lt;code&gt;pure&lt;/code&gt; version, new &lt;code&gt;%IteratorPrototype%&lt;/code&gt; methods are not added to the real &lt;code&gt;%IteratorPrototype%&lt;/code&gt;, they available only on wrappers - instead of &lt;code&gt;[].values().map(fn)&lt;/code&gt; use &lt;code&gt;Iterator.from([]).map(fn)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Now, we have access to the real &lt;code&gt;%AsyncIteratorPrototype%&lt;/code&gt; only with usage async generators syntax. So, for compatibility the library with old browsers, we should use &lt;code&gt;Function&lt;/code&gt; constructor. However, that breaks compatibility with CSP. So, if you wanna use the real &lt;code&gt;%AsyncIteratorPrototype%&lt;/code&gt;, you should set &lt;code&gt;USE_FUNCTION_CONSTRUCTOR&lt;/code&gt; option in the &lt;code&gt;core-js/configurator&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const configurator = require(&#39;core-js/configurator&#39;);

configurator({ USE_FUNCTION_CONSTRUCTOR: true });

require(&#39;core-js&#39;);

(async function * () { /* empty */ })() instanceof AsyncIterator; // =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-set-methods&quot;&gt;New &lt;code&gt;Set&lt;/code&gt; methods&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.difference.js&quot;&gt;&lt;code&gt;esnext.set.difference&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.intersection.js&quot;&gt;&lt;code&gt;esnext.set.intersection&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.is-disjoint-from.js&quot;&gt;&lt;code&gt;esnext.set.is-disjoint-from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.is-subset-of.js&quot;&gt;&lt;code&gt;esnext.set.is-subset-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.is-superset-of.js&quot;&gt;&lt;code&gt;esnext.set.is-superset-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.symmetric-difference.js&quot;&gt;&lt;code&gt;esnext.set.symmetric-difference&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.union.js&quot;&gt;&lt;code&gt;esnext.set.union&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Set {
  difference(iterable: Iterable&amp;lt;mixed&amp;gt;): Set;
  intersection(iterable: Iterable&amp;lt;mixed&amp;gt;): Set;
  isDisjointFrom(iterable: Iterable&amp;lt;mixed&amp;gt;): boolean;
  isSubsetOf(iterable: Iterable&amp;lt;mixed&amp;gt;): boolean;
  isSupersetOf(iterable: Iterable&amp;lt;mixed&amp;gt;): boolean;
  symmetricDifference(iterable: Iterable&amp;lt;mixed&amp;gt;): Set;
  union(iterable: Iterable&amp;lt;mixed&amp;gt;): Set;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/set-methods
core-js(-pure)/features/set/difference
core-js(-pure)/features/set/intersection
core-js(-pure)/features/set/is-disjoint-from
core-js(-pure)/features/set/is-subset-of
core-js(-pure)/features/set/is-superset-of
core-js(-pure)/features/set/symmetric-difference
core-js(-pure)/features/set/union
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/QMQdaJ&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new Set([1, 2, 3]).union([3, 4, 5]);               // =&amp;gt; Set {1, 2, 3, 4, 5}
new Set([1, 2, 3]).intersection([3, 4, 5]);        // =&amp;gt; Set {3}
new Set([1, 2, 3]).difference([3, 4, 5]);          // =&amp;gt; Set {1, 2}
new Set([1, 2, 3]).symmetricDifference([3, 4, 5]); // =&amp;gt; Set {1, 2, 4, 5}

new Set([1, 2, 3]).isDisjointFrom([4, 5, 6]);      // =&amp;gt; true
new Set([1, 2, 3]).isSubsetOf([5, 4, 3, 2, 1]);    // =&amp;gt; true
new Set([5, 4, 3, 2, 1]).isSupersetOf([1, 2, 3]);  // =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/thumbsupep/proposal-upsert&quot;&gt;&lt;code&gt;Map.prototype.emplace&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.emplace.js&quot;&gt;&lt;code&gt;esnext.map.emplace&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.weak-map.emplace.js&quot;&gt;&lt;code&gt;esnext.weak-map.emplace&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Map {
  emplace(key: any, { update: (value: any, key: any, handler: object) =&amp;gt; updated: any, insert: (key: any, handler: object) =&amp;gt; value: any): updated | value;
}

class WeakMap {
  emplace(key: any, { update: (value: any, key: any, handler: object) =&amp;gt; updated: any, insert: (key: any, handler: object) =&amp;gt; value: any): updated | value;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/map-upsert
core-js(-pure)/features/map/emplace
core-js(-pure)/features/weak-map/emplace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#const%20map%20%3D%20new%20Map(%5B%5B&#39;a&#39;%2C%202%5D%5D)%3B%0A%0Amap.emplace(&#39;a&#39;%2C%20%7B%20update%3A%20it%20%3D%3E%20it%20**%202%2C%20insert%3A%20()%20%3D%3E%203%7D)%3B%20%2F%2F%20%3D%3E%204%0A%0Amap.emplace(&#39;b&#39;%2C%20%7B%20update%3A%20it%20%3D%3E%20it%20**%202%2C%20insert%3A%20()%20%3D%3E%203%7D)%3B%20%2F%2F%20%3D%3E%203%0A%0Afor%20(let%20%5Bkey%2C%20value%5D%20of%20map)%7B%0A%20%20log(key%2C%20value)%3B%20%2F%2F%20%3D%3E%20Map%20%7B%20&#39;a&#39;%3A%204%2C%20&#39;b&#39;%3A%203%20%7D%0A%7D&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const map = new Map([[&#39;a&#39;, 2]]);

map.emplace(&#39;a&#39;, { update: it =&amp;gt; it ** 2, insert: () =&amp;gt; 3}); // =&amp;gt; 4

map.emplace(&#39;b&#39;, { update: it =&amp;gt; it ** 2, insert: () =&amp;gt; 3}); // =&amp;gt; 3

console.log(map); // =&amp;gt; Map { &#39;a&#39;: 4, &#39;b&#39;: 3 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-array-is-template-object&quot;&gt;&lt;code&gt;Array.isTemplateObject&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.array.is-template-object.js&quot;&gt;&lt;code&gt;esnext.array.is-template-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Array {
  static isTemplateObject(value: any): boolean
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/array-is-template-object
core-js(-pure)/features/array/is-template-object
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(Array.isTemplateObject((it =&amp;gt; it)`qwe${ 123 }asd`)); // =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-using-statement&quot;&gt;&lt;code&gt;Symbol.{ asyncDispose, dispose }&lt;/code&gt; for &lt;code&gt;using&lt;/code&gt; statement&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.symbol.dispose.js&quot;&gt;&lt;code&gt;esnext.symbol.dispose&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.symbol.async-dispose.js&quot;&gt;&lt;code&gt;esnext.symbol.async-dispose&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Symbol {
  static asyncDispose: @@asyncDispose;
  static dispose: @@dispose;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/using-statement
core-js(-pure)/features/symbol/async-dispose
core-js(-pure)/features/symbol/dispose
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-decorators&quot;&gt;&lt;code&gt;Symbol.metadata&lt;/code&gt; for decorators proposal&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.symbol.metadata.js&quot;&gt;&lt;code&gt;esnext.symbol.metadata&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Symbol {
  static metadata: @@metadata;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/decorators
core-js(-pure)/features/symbol/metadata
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stage 1 proposals&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/stage/1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/zenparsing/es-observable&quot;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.observable.js&quot;&gt;&lt;code&gt;esnext.observable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.symbol.observable.js&quot;&gt;&lt;code&gt;esnext.symbol.observable&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Observable {
  constructor(subscriber: Function): Observable;
  subscribe(observer: Function | { next?: Function, error?: Function, complete?: Function }): Subscription;
  @@observable(): this;
  static of(...items: Aray&amp;lt;mixed&amp;gt;): Observable;
  static from(x: Observable | Iterable): Observable;
  static readonly attribute @@species: this;
}

class Symbol {
  static observable: @@observable;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/observable
core-js(-pure)/features/observable
core-js(-pure)/features/symbol/observable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/1LDywi&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new Observable(observer =&amp;gt; {
  observer.next(&#39;hello&#39;);
  observer.next(&#39;world&#39;);
  observer.complete();
}).subscribe({
  next(it) { console.log(it); },
  complete() { console.log(&#39;!&#39;); }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-collection-methods&quot;&gt;New collections methods&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.add-all.js&quot;&gt;&lt;code&gt;esnext.set.add-all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.delete-all.js&quot;&gt;&lt;code&gt;esnext.set.delete-all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.every.js&quot;&gt;&lt;code&gt;esnext.set.every&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.filter.js&quot;&gt;&lt;code&gt;esnext.set.filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.find.js&quot;&gt;&lt;code&gt;esnext.set.find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.join.js&quot;&gt;&lt;code&gt;esnext.set.join&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.map.js&quot;&gt;&lt;code&gt;esnext.set.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.reduce.js&quot;&gt;&lt;code&gt;esnext.set.reduce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.some.js&quot;&gt;&lt;code&gt;esnext.set.some&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.delete-all.js&quot;&gt;&lt;code&gt;esnext.map.delete-all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.every.js&quot;&gt;&lt;code&gt;esnext.map.every&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.filter.js&quot;&gt;&lt;code&gt;esnext.map.filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.find.js&quot;&gt;&lt;code&gt;esnext.map.find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.find-key.js&quot;&gt;&lt;code&gt;esnext.map.find-key&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.group-by.js&quot;&gt;&lt;code&gt;esnext.map.group-by&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.includes.js&quot;&gt;&lt;code&gt;esnext.map.includes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.key-by.js&quot;&gt;&lt;code&gt;esnext.map.key-by&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.key-of.js&quot;&gt;&lt;code&gt;esnext.map.key-of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.map-keys.js&quot;&gt;&lt;code&gt;esnext.map.map-keys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.map-values.js&quot;&gt;&lt;code&gt;esnext.map.map-values&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.merge.js&quot;&gt;&lt;code&gt;esnext.map.merge&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.reduce.js&quot;&gt;&lt;code&gt;esnext.map.reduce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.some.js&quot;&gt;&lt;code&gt;esnext.map.some&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.update.js&quot;&gt;&lt;code&gt;esnext.map.update&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.weak-set.add-all.js&quot;&gt;&lt;code&gt;esnext.weak-set.add-all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.weak-set.delete-all.js&quot;&gt;&lt;code&gt;esnext.weak-set.delete-all&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.weak-map.delete-all.js&quot;&gt;&lt;code&gt;esnext.weak-map.delete-all&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-setmap-offrom&quot;&gt;&lt;code&gt;.of&lt;/code&gt; and &lt;code&gt;.from&lt;/code&gt; methods on collection constructors&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.of.js&quot;&gt;&lt;code&gt;esnext.set.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.set.from.js&quot;&gt;&lt;code&gt;esnext.set.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.of.js&quot;&gt;&lt;code&gt;esnext.map.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.map.from.js&quot;&gt;&lt;code&gt;esnext.map.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.weak-set.of.js&quot;&gt;&lt;code&gt;esnext.weak-set.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.weak-set.from.js&quot;&gt;&lt;code&gt;esnext.weak-set.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.weak-map.of.js&quot;&gt;&lt;code&gt;esnext.weak-map.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.weak-map.from.js&quot;&gt;&lt;code&gt;esnext.weak-map.from&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Set {
  static of(...args: Array&amp;lt;mixed&amp;gt;): Set;
  static from(iterable: Iterable&amp;lt;mixed&amp;gt;, mapFn?: (value: any, index: number) =&amp;gt; any, thisArg?: any): Set;
  addAll(...args: Array&amp;lt;mixed&amp;gt;): this;
  deleteAll(...args: Array&amp;lt;mixed&amp;gt;): boolean;
  every(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean, thisArg?: any): boolean;
  filter(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean, thisArg?: any): Set;
  find(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean), thisArg?: any): any;
  join(separator: string = &#39;,&#39;): string;
  map(callbackfn: (value: any, key: any, target: any) =&amp;gt; any, thisArg?: any): Set;
  reduce(callbackfn: (memo: any, value: any, key: any, target: any) =&amp;gt; any, initialValue?: any): any;
  some(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean, thisArg?: any): boolean;
}

class Map {
  static groupBy(iterable: Iterable&amp;lt;mixed&amp;gt;, callbackfn?: (value: any) =&amp;gt; any): Map;
  static of(...args: Array&amp;lt;[key, value]&amp;gt;): Map;
  static from(iterable: Iterable&amp;lt;mixed&amp;gt;, mapFn?: (value: any, index: number) =&amp;gt; [key: any, value: any], thisArg?: any): Map;
  static keyBy(iterable: Iterable&amp;lt;mixed&amp;gt;, callbackfn?: (value: any) =&amp;gt; any): Map;
  deleteAll(...args: Array&amp;lt;mixed&amp;gt;): boolean;
  every(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean, thisArg?: any): boolean;
  filter(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean, thisArg?: any): Map;
  find(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean), thisArg?: any): any;
  findKey(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean), thisArg?: any): any;
  includes(searchElement: any): boolean;
  keyOf(searchElement: any): any;
  mapKeys(mapFn: (value: any, index: number, target: any) =&amp;gt; any, thisArg?: any): Map;
  mapValues(mapFn: (value: any, index: number, target: any) =&amp;gt; any, thisArg?: any): Map;
  merge(...iterables: Array&amp;lt;Iterable&amp;gt;): this;
  reduce(callbackfn: (memo: any, value: any, key: any, target: any) =&amp;gt; any, initialValue?: any): any;
  some(callbackfn: (value: any, key: any, target: any) =&amp;gt; boolean, thisArg?: any): boolean;
  update(key: any, callbackfn: (value: any, key: any, target: any) =&amp;gt; any, thunk?: (key: any, target: any) =&amp;gt; any): this;
}

class WeakSet {
  static of(...args: Array&amp;lt;mixed&amp;gt;): WeakSet;
  static from(iterable: Iterable&amp;lt;mixed&amp;gt;, mapFn?: (value: any, index: number) =&amp;gt; Object, thisArg?: any): WeakSet;
  addAll(...args: Array&amp;lt;mixed&amp;gt;): this;
  deleteAll(...args: Array&amp;lt;mixed&amp;gt;): boolean;
}

class WeakMap {
  static of(...args: Array&amp;lt;[key, value]&amp;gt;): WeakMap;
  static from(iterable: Iterable&amp;lt;mixed&amp;gt;, mapFn?: (value: any, index: number) =&amp;gt; [key: Object, value: any], thisArg?: any): WeakMap;
  deleteAll(...args: Array&amp;lt;mixed&amp;gt;): boolean;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/collection-methods
core-js/proposals/collection-of-from
core-js(-pure)/features/set/add-all
core-js(-pure)/features/set/delete-all
core-js(-pure)/features/set/every
core-js(-pure)/features/set/filter
core-js(-pure)/features/set/find
core-js(-pure)/features/set/from
core-js(-pure)/features/set/join
core-js(-pure)/features/set/map
core-js(-pure)/features/set/of
core-js(-pure)/features/set/reduce
core-js(-pure)/features/set/some
core-js(-pure)/features/map/delete-all
core-js(-pure)/features/map/every
core-js(-pure)/features/map/filter
core-js(-pure)/features/map/find
core-js(-pure)/features/map/find-key
core-js(-pure)/features/map/from
core-js(-pure)/features/map/group-by
core-js(-pure)/features/map/includes
core-js(-pure)/features/map/key-by
core-js(-pure)/features/map/key-of
core-js(-pure)/features/map/map-keys
core-js(-pure)/features/map/map-values
core-js(-pure)/features/map/merge
core-js(-pure)/features/map/of
core-js(-pure)/features/map/reduce
core-js(-pure)/features/map/some
core-js(-pure)/features/map/update
core-js(-pure)/features/weak-set/add-all
core-js(-pure)/features/weak-set/delete-all
core-js(-pure)/features/weak-set/of
core-js(-pure)/features/weak-set/from
core-js(-pure)/features/weak-map/delete-all
core-js(-pure)/features/weak-map/of
core-js(-pure)/features/weak-map/from
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;.of&lt;/code&gt; / &lt;code&gt;.from&lt;/code&gt; &lt;a href=&quot;https://goo.gl/mSC7eU&quot;&gt;&lt;em&gt;examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Set.of(1, 2, 3, 2, 1); // =&amp;gt; Set {1, 2, 3}

Map.from([[1, 2], [3, 4]], ([key, value]) =&amp;gt; [key ** 2, value ** 2]); // =&amp;gt; Map { 1: 4, 9: 16 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey&quot;&gt;&lt;code&gt;compositeKey&lt;/code&gt; and &lt;code&gt;compositeSymbol&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.composite-key.js&quot;&gt;&lt;code&gt;esnext.composite-key&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.composite-symbol.js&quot;&gt;&lt;code&gt;esnext.composite-symbol&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function compositeKey(...args: Array&amp;lt;mixed&amp;gt;): object;
function compositeSymbol(...args: Array&amp;lt;mixed&amp;gt;): symbol;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/keys-composition
core-js(-pure)/features/composite-key
core-js(-pure)/features/composite-symbol
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/2oPAH7&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// returns a symbol
const symbol = compositeSymbol({});
console.log(typeof symbol); // =&amp;gt; &#39;symbol&#39;

// works the same, but returns a plain frozen object without a prototype
const key = compositeKey({});
console.log(typeof key); // =&amp;gt; &#39;object&#39;
console.log({}.toString.call(key)); // =&amp;gt; &#39;[object Object]&#39;
console.log(Object.getPrototypeOf(key)); // =&amp;gt; null
console.log(Object.isFrozen(key)); // =&amp;gt; true

const a = [&#39;a&#39;];
const b = [&#39;b&#39;];
const c = [&#39;c&#39;];

console.log(compositeSymbol(a) === compositeSymbol(a)); // =&amp;gt; true
console.log(compositeSymbol(a) !== compositeSymbol([&#39;a&#39;])); // =&amp;gt; true
console.log(compositeSymbol(a, 1) === compositeSymbol(a, 1)); // =&amp;gt; true
console.log(compositeSymbol(a, b) !== compositeSymbol(b, a)); // =&amp;gt; true
console.log(compositeSymbol(a, b, c) === compositeSymbol(a, b, c)); // =&amp;gt; true
console.log(compositeSymbol(1, a) === compositeSymbol(1, a)); // =&amp;gt; true
console.log(compositeSymbol(1, a, 2, b) === compositeSymbol(1, a, 2, b)); // =&amp;gt; true
console.log(compositeSymbol(a, a) === compositeSymbol(a, a)); // =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-array-filtering&quot;&gt;Array filtering&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.array.filter-reject.js&quot;&gt;&lt;code&gt;esnext.array.filter-reject&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.typed-array.filter-reject.js&quot;&gt;&lt;code&gt;esnext.typed-array.filter-reject&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Array {
  filterReject(callbackfn: (value: any, index: number, target: any) =&amp;gt; boolean, thisArg?: any): Array&amp;lt;mixed&amp;gt;;
}

class %TypedArray% {
  filterReject(callbackfn: (value: number, index: number, target: %TypedArray%) =&amp;gt; boolean, thisArg?: any): %TypedArray%;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/proposals/array-filtering
core-js(-pure)/features/array(/virtual)/filter-reject
core-js/features/typed-array/filter-reject
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(%5B1%2C%202%2C%203%2C%204%2C%205%5D.filterReject(it%20%3D%3E%20it%20%25%202))%3B%20%2F%2F%20%3D%3E%20%5B2%2C%204%5D&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3, 4, 5].filterReject(it =&amp;gt; it % 2); // =&amp;gt; [2, 4]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#https://github.com/tc39/proposal-array-grouping&quot;&gt;&lt;code&gt;Array&lt;/code&gt; grouping&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.array.group-by.js&quot;&gt;&lt;code&gt;esnext.array.group-by&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.typed-array.group-by.js&quot;&gt;&lt;code&gt;esnext.typed-array.group-by&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Array {
  groupBy(callbackfn: (value: any, index: number, target: any) =&amp;gt; key, thisArg?: any): { [key]: Array&amp;lt;mixed&amp;gt; };
}

class %TypedArray% {
  groupBy(callbackfn: (value: number, index: number, target: %TypedArray%) =&amp;gt; key, thisArg?: any): { [key]: %TypedArray% };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/proposals/array-grouping
core-js(-pure)/features/array(/virtual)/group-by
core-js/features/typed-array/group-by
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(%5B1%2C%202%2C%203%2C%204%2C%205%5D.groupBy(it%20%3D%3E%20it%20%25%202))%3B%20%2F%2F%20%3D%3E%20%7B%201%3A%20%5B1%2C%203%2C%205%5D%2C%200%3A%20%5B2%2C%204%5D%20%7D&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3, 4, 5].groupBy(it =&amp;gt; it % 2); // =&amp;gt; { 1: [1, 3, 5], 0: [2, 4] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-array-unique&quot;&gt;Array deduplication&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.array.unique-by.js&quot;&gt;&lt;code&gt;esnext.array.unique-by&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.typed-array.unique-by.js&quot;&gt;&lt;code&gt;esnext.typed-array.unique-by&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Array {
  uniqueBy(resolver?: (item: any) =&amp;gt; any): Array&amp;lt;mixed&amp;gt;;
}

class %TypedArray% {
  uniqueBy(resolver?: (item: any) =&amp;gt; any): %TypedArray%;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;core-js/proposals/array-unique
core-js(-pure)/features/array(/virtual)/unique-by
core-js/features/typed-array/unique-by
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#log(%5B1%2C%202%2C%203%2C%202%2C%201%5D.uniqueBy())%3B%20%20%2F%2F%20%5B1%2C%202%2C%203%5D%0A%0Aconst%20data%20%3D%20%5B%0A%20%20%7B%20id%3A%201%2C%20uid%3A%2010000%20%7D%2C%0A%20%20%7B%20id%3A%202%2C%20uid%3A%2010000%20%7D%2C%0A%20%20%7B%20id%3A%203%2C%20uid%3A%2010001%20%7D%0A%5D%3B%0A%0Alog(data.uniqueBy(&#39;uid&#39;))%3B%20%2F%2F%20%3D%3E%20%5B%7B%20id%3A%201%2C%20uid%3A%2010000%20%7D%2C%20%7B%20id%3A%203%2C%20uid%3A%2010001%20%7D%5D%0A%0Alog(data.uniqueBy((%7B%20id%2C%20uid%20%7D)%20%3D%3E%20%60%24%7Bid%7D-%24%7Buid%7D%60))%3B%20%2F%2F%20%3D%3E%20%5B%7B%20id%3A%201%2C%20uid%3A%2010000%20%7D%2C%20%7B%20id%3A%202%2C%20uid%3A%2010000%20%7D%2C%20%7B%20id%3A%203%2C%20uid%3A%2010001%20%7D%5D&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3, 2, 1].uniqueBy(); // [1, 2, 3]

[
  { id: 1, uid: 10000 },
  { id: 2, uid: 10000 },
  { id: 3, uid: 10001 }
].uniqueBy(it =&amp;gt; it.id);    // =&amp;gt; [{ id: 1, uid: 10000 }, { id: 3, uid: 10001 }]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/keithamus/proposal-array-last&quot;&gt;Getting last item from &lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.array.last-item.js&quot;&gt;&lt;code&gt;esnext.array.last-item&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.array.last-index.js&quot;&gt;&lt;code&gt;esnext.array.last-index&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Array {
  attribute lastItem: any;
  readonly attribute lastIndex: uint;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/array-last
core-js/features/array/last-item
core-js/features/array/last-index
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/2TmcMT&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3].lastItem;  // =&amp;gt; 3
[1, 2, 3].lastIndex; // =&amp;gt; 2

const array = [1, 2, 3];
array.lastItem = 4;

array; // =&amp;gt; [1, 2, 4]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-Number.range&quot;&gt;&lt;code&gt;Number.range&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.number.range.js&quot;&gt;&lt;code&gt;esnext.number.range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.bigint.range.js&quot;&gt;&lt;code&gt;esnext.bigint.range&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Number {
  range(start: number, end: number, options: { step: number = 1, inclusive: boolean = false } | step: number = 1): RangeIterator;
}

class BigInt {
  range(start: bigint, end: bigint | Infinity | -Infinity, options: { step: bigint = 1n, inclusive: boolean = false } | step: bigint = 1n): RangeIterator;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/number-range
core-js(-pure)/features/bigint/range
core-js(-pure)/features/number/range
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#for%20(const%20i%20of%20Number.range(1%2C%2010%2C%20%7B%20step%3A%203%2C%20inclusive%3A%20true%20%7D))%20%7B%0A%20%20log(i)%3B%20%2F%2F%20%3D%3E%201%2C%204%2C%207%2C%2010%0A%7D&quot;&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;for (const i of Number.range(1, 10)) {
  console.log(i); // =&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9
}

for (const i of Number.range(1, 10, { step: 3, inclusive: true })) {
  console.log(i); // =&amp;gt; 1, 4, 7, 10
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-number-fromstring&quot;&gt;&lt;code&gt;Number.fromString&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.number.from-string.js&quot;&gt;&lt;code&gt;esnext.number.from-string&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Number {
  fromString(string: string, radix: number): number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/number-from-string
core-js(-pure)/features/number/from-string
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/rwaldron/proposal-math-extensions&quot;&gt;&lt;code&gt;Math&lt;/code&gt; extensions&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.clamp.js&quot;&gt;&lt;code&gt;esnext.math.clamp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.deg-per-rad.js&quot;&gt;&lt;code&gt;esnext.math.deg-per-rad&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.degrees.js&quot;&gt;&lt;code&gt;esnext.math.degrees&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.fscale.js&quot;&gt;&lt;code&gt;esnext.math.fscale&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.rad-per-deg.js&quot;&gt;&lt;code&gt;esnext.math.rad-per-deg&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.radians.js&quot;&gt;&lt;code&gt;esnext.math.radians&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.scale.js&quot;&gt;&lt;code&gt;esnext.math.scale&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;namespace Math {
  DEG_PER_RAD: number;
  RAD_PER_DEG: number;
  clamp(x: number, lower: number, upper: number): number;
  degrees(radians: number): number;
  fscale(x: number, inLow: number, inHigh: number, outLow: number, outHigh: number): number;
  radians(degrees: number): number;
  scale(x: number, inLow: number, inHigh: number, outLow: number, outHigh: number): number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/math-extensions
core-js(-pure)/features/math/clamp
core-js(-pure)/features/math/deg-per-rad
core-js(-pure)/features/math/degrees
core-js(-pure)/features/math/fscale
core-js(-pure)/features/math/rad-per-deg
core-js(-pure)/features/math/radians
core-js(-pure)/features/math/scale
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-Math.signbit&quot;&gt;&lt;code&gt;Math.signbit&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.signbit.js&quot;&gt;&lt;code&gt;esnext.math.signbit&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;namespace Math {
  signbit(x: number): boolean;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/math-signbit
core-js(-pure)/features/math/signbit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/rPWbzZ&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Math.signbit(NaN); // =&amp;gt; false
Math.signbit(1);   // =&amp;gt; false
Math.signbit(-1);  // =&amp;gt; true
Math.signbit(0);   // =&amp;gt; false
Math.signbit(-0);  // =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-string-prototype-codepoints&quot;&gt;&lt;code&gt;String.prototype.codePoints&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.string.code-points.js&quot;&gt;&lt;code&gt;esnext.string.code-points&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class String {
  codePoints(): Iterator&amp;lt;{ codePoint, position }&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/string-code-points
core-js(-pure)/features/string/code-points
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/Jt7SsD&quot;&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;for (let { codePoint, position } of &#39;qwe&#39;.codePoints()) {
  console.log(codePoint); // =&amp;gt; 113, 119, 101
  console.log(position);  // =&amp;gt; 0, 1, 2
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-pattern-matching&quot;&gt;&lt;code&gt;Symbol.matcher&lt;/code&gt; for pattern matching&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.symbol.matcher.js&quot;&gt;&lt;code&gt;esnext.symbol.matcher&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Symbol {
  static matcher: @@matcher;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/pattern-matching
core-js(-pure)/features/symbol/matcher
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-seeded-random&quot;&gt;Seeded pseudo-random numbers&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;&lt;strong&gt;API of this proposal has been changed. This proposal will be removed from the next major &lt;code&gt;core-js&lt;/code&gt; version and will be added back after adding and stabilization of the spec text.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.seeded-prng.js&quot;&gt;&lt;code&gt;esnext.math.seeded-prng&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Math {
  seededPRNG({ seed: number }): Iterator&amp;lt;number&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/seeded-random
core-js(-pure)/features/math/seeded-prng
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/oj3WgQ&quot;&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;for (let x of Math.seededPRNG({ seed: 42 })) {
  console.log(x); // =&amp;gt; 0.16461519912315087, 0.2203933906000046, 0.8249682894209105
  if (x &amp;gt; .8) break;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-object-iteration&quot;&gt;Object iteration&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;&lt;strong&gt;This proposal has been withdrawn and will be removed from the next major &lt;code&gt;core-js&lt;/code&gt; version.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.object.iterate-keys.js&quot;&gt;&lt;code&gt;esnext.object.iterate-keys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.object.iterate-values.js&quot;&gt;&lt;code&gt;esnext.object.iterate-values&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.object.iterate-entries.js&quot;&gt;&lt;code&gt;esnext.object.iterate-entries&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Object {
  iterateKeys(object: any): Iterator&amp;lt;string&amp;gt;;
  iterateValues(object: any): Iterator&amp;lt;any&amp;gt;;
  iterateEntries(object: any): Iterator&amp;lt;[string, any]&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/object-iteration
core-js(-pure)/features/object/iterate-keys
core-js(-pure)/features/object/iterate-values
core-js(-pure)/features/object/iterate-entries
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#const%20obj%20%3D%20%7B%20foo%3A%20&#39;bar&#39;%2C%20baz%3A%20&#39;blah&#39;%20%7D%3B%0A%0Afor%20(const%20%5Bkey%2C%20value%5D%20of%20Object.iterateEntries(obj))%20%7B%0A%20%20log(%60%24%7Bkey%7D%20-%3E%20%24%7Bvalue%7D%60)%3B%0A%7D%0A%0Afor%20(const%20key%20of%20Object.iterateKeys(obj))%20%7B%0A%20%20log(key)%3B%0A%7D%0A%0Afor%20(const%20value%20of%20Object.iterateValues(obj))%20%7B%0A%20%20log(value)%3B%0A%7D&quot;&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const obj = { foo: &#39;bar&#39;, baz: &#39;blah&#39; };

for (const [key, value] of Object.iterateEntries(obj)) {
  console.log(`${key} -&amp;gt; ${value}`);
}

for (const key of Object.iterateKeys(obj)) {
  console.log(key);
}

for (const value of Object.iterateValues(obj)) {
  console.log(value);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/tc39/proposal-promise-try&quot;&gt;&lt;code&gt;Promise.try&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;&lt;strong&gt;This proposal is dead and will be removed from the next major &lt;code&gt;core-js&lt;/code&gt; version.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.promise.try.js&quot;&gt;&lt;code&gt;esnext.promise.try&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Promise {
  static try(callbackfn: Function): promise;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/promise-try
core-js(-pure)/features/promise/try
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/k5GGRo&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Promise.try(() =&amp;gt; 42).then(it =&amp;gt; console.log(`Promise, resolved as ${it}`));

Promise.try(() =&amp;gt; { throw 42; }).catch(it =&amp;gt; console.log(`Promise, rejected as ${it}`));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stage 0 proposals&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/stage/0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/jasnell/proposal-url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;See more info &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#url-and-urlsearchparams&quot;&gt;in web standards namespace&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/mathiasbynens/String.prototype.at&quot;&gt;&lt;code&gt;String#at&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;&lt;strong&gt;This proposal has been withdrawn and will be removed from the next major &lt;code&gt;core-js&lt;/code&gt; version.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.string.at.js&quot;&gt;&lt;code&gt;esnext.string.at&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class String {
  at(index: number): string;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/string-at
core-js(-pure)/features/string/at
core-js(-pure)/features/string/virtual/at
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/XluXI8&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;a𠮷b&#39;.at(1);        // =&amp;gt; &#39;𠮷&#39;
&#39;a𠮷b&#39;.at(1).length; // =&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://gist.github.com/BrendanEich/4294d5c212a6d2254703&quot;&gt;Efficient 64 bit arithmetic&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;&lt;strong&gt;This proposal has been withdrawn and will be removed from the next major &lt;code&gt;core-js&lt;/code&gt; version.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.iaddh.js&quot;&gt;&lt;code&gt;esnext.math.iaddh&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.isubh.js&quot;&gt;&lt;code&gt;esnext.math.isubh&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.imulh.js&quot;&gt;&lt;code&gt;esnext.math.imulh&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.math.umulh.js&quot;&gt;&lt;code&gt;esnext.math.umulh&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;namespace Math {
  iaddh(lo0: number, hi0: number, lo1: number, hi1: number): number;
  isubh(lo0: number, hi0: number, lo1: number, hi1: number): number;
  imulh(a: number, b: number): number;
  umulh(a: number, b: number): number;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/efficient-64-bit-arithmetic
core-js(-pure)/features/math/iaddh
core-js(-pure)/features/math/isubh
core-js(-pure)/features/math/imulh
core-js(-pure)/features/math/umulh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Pre-stage 0 proposals&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/stage/pre
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/rbuckton/reflect-metadata&quot;&gt;&lt;code&gt;Reflect&lt;/code&gt; metadata&lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.define-metadata.js&quot;&gt;&lt;code&gt;esnext.reflect.define-metadata&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.delete-metadata.js&quot;&gt;&lt;code&gt;esnext.reflect.delete-metadata&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.get-metadata.js&quot;&gt;&lt;code&gt;esnext.reflect.get-metadata&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.get-metadata-keys.js&quot;&gt;&lt;code&gt;esnext.reflect.get-metadata-keys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.get-own-metadata.js&quot;&gt;&lt;code&gt;esnext.reflect.get-own-metadata&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.get-own-metadata-keys.js&quot;&gt;&lt;code&gt;esnext.reflect.get-own-metadata-keys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.has-metadata.js&quot;&gt;&lt;code&gt;esnext.reflect.has-metadata&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.has-own-metadata.js&quot;&gt;&lt;code&gt;esnext.reflect.has-own-metadata&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/esnext.reflect.metadata.js&quot;&gt;&lt;code&gt;esnext.reflect.metadata&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;namespace Reflect {
  defineMetadata(metadataKey: any, metadataValue: any, target: Object, propertyKey?: PropertyKey): void;
  getMetadata(metadataKey: any, target: Object, propertyKey?: PropertyKey): any;
  getOwnMetadata(metadataKey: any, target: Object, propertyKey?: PropertyKey): any;
  hasMetadata(metadataKey: any, target: Object, propertyKey?: PropertyKey): boolean;
  hasOwnMetadata(metadataKey: any, target: Object, propertyKey?: PropertyKey): boolean;
  deleteMetadata(metadataKey: any, target: Object, propertyKey?: PropertyKey): boolean;
  getMetadataKeys(target: Object, propertyKey?: PropertyKey): Array&amp;lt;mixed&amp;gt;;
  getOwnMetadataKeys(target: Object, propertyKey?: PropertyKey): Array&amp;lt;mixed&amp;gt;;
  metadata(metadataKey: any, metadataValue: any): decorator(target: Object, targetKey?: PropertyKey) =&amp;gt; void;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/reflect-metadata
core-js(-pure)/features/reflect/define-metadata
core-js(-pure)/features/reflect/delete-metadata
core-js(-pure)/features/reflect/get-metadata
core-js(-pure)/features/reflect/get-metadata-keys
core-js(-pure)/features/reflect/get-own-metadata
core-js(-pure)/features/reflect/get-own-metadata-keys
core-js(-pure)/features/reflect/has-metadata
core-js(-pure)/features/reflect/has-own-metadata
core-js(-pure)/features/reflect/metadata
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/KCo3PS&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let object = {};
Reflect.defineMetadata(&#39;foo&#39;, &#39;bar&#39;, object);
Reflect.ownKeys(object);               // =&amp;gt; []
Reflect.getOwnMetadataKeys(object);    // =&amp;gt; [&#39;foo&#39;]
Reflect.getOwnMetadata(&#39;foo&#39;, object); // =&amp;gt; &#39;bar&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Web standards&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/web
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/web.timers.js&quot;&gt;&lt;code&gt;web.timers&lt;/code&gt;&lt;/a&gt;. Additional arguments fix for IE9-.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function setTimeout(callback: any, time: any, ...args: Array&amp;lt;mixed&amp;gt;): number;
function setInterval(callback: any, time: any, ...args: Array&amp;lt;mixed&amp;gt;): number;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/web/timers
core-js(-pure)/stable|features/set-timeout
core-js(-pure)/stable|features/set-interval
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Before:
setTimeout(log.bind(null, 42), 1000);
// After:
setTimeout(log, 1000, 42);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;setImmediate&lt;/code&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/web.immediate.js&quot;&gt;&lt;code&gt;web.immediate&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;http://w3c.github.io/setImmediate/&quot;&gt;&lt;code&gt;setImmediate&lt;/code&gt;&lt;/a&gt; polyfill.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function setImmediate(callback: any, ...args: Array&amp;lt;mixed&amp;gt;): number;
function clearImmediate(id: number): void;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/web/immediate
core-js(-pure)/stable|features/set-immediate
core-js(-pure)/stable|features/clear-immediate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/6nXGrx&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;setImmediate((arg1, arg2) =&amp;gt; {
  console.log(arg1, arg2); // =&amp;gt; Message will be displayed with minimum delay
}, &#39;Message will be displayed&#39;, &#39;with minimum delay&#39;);

clearImmediate(setImmediate(() =&amp;gt; {
  console.log(&#39;Message will not be displayed&#39;);
}));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;queueMicrotask&lt;/code&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask&quot;&gt;Spec&lt;/a&gt;, module &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/web.queue-microtask.js&quot;&gt;&lt;code&gt;web.queue-microtask&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function queueMicrotask(fn: Function): void;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/web/queue-microtask
core-js(-pure)/stable|features/queue-microtask
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://goo.gl/nsW8P9&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;queueMicrotask(() =&amp;gt; console.log(&#39;called as microtask&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;URL&lt;/code&gt; and &lt;code&gt;URLSearchParams&lt;/code&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;&lt;code&gt;URL&lt;/code&gt; standard&lt;/a&gt; implementation. Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/web.url.js&quot;&gt;&lt;code&gt;web.url&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/web.url.to-json.js&quot;&gt;&lt;code&gt;web.url.to-json&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/web.url-search-params.js&quot;&gt;&lt;code&gt;web.url-search-params&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class URL {
  constructor(url: string, base?: string);
  attribute href: string;
  readonly attribute origin: string;
  attribute protocol: string;
  attribute username: string;
  attribute password: string;
  attribute host: string;
  attribute hostname: string;
  attribute port: string;
  attribute pathname: string;
  attribute search: string;
  readonly attribute searchParams: URLSearchParams;
  attribute hash: string;
  toJSON(): string;
  toString(): string;
}

class URLSearchParams {
  constructor(params?: string | Iterable&amp;lt;[key, value]&amp;gt; | Object);
  append(name: string, value: string): void;
  delete(name: string): void;
  get(name: string): string | void;
  getAll(name: string): Array&amp;lt;string&amp;gt;;
  has(name: string): boolean;
  set(name: string, value: string): void;
  sort(): void;
  toString(): string;
  forEach(callbackfn: (value: any, index: number, target: any) =&amp;gt; void, thisArg: any): void;
  entries(): Iterator&amp;lt;[key, value]&amp;gt;;
  keys(): Iterator&amp;lt;key&amp;gt;;
  values(): Iterator&amp;lt;value&amp;gt;;
  @@iterator(): Iterator&amp;lt;[key, value]&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js/proposals/url
core-js(-pure)/web/url
core-js(-pure)/web/url-search-params
core-js(-pure)/stable|features/url
core-js/stable|features/url/to-json
core-js(-pure)/stable|features/url-search-params
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://es6.zloirock.ru/#const%20url%20%3D%20new%20URL(&#39;http%3A%2F%2Flogin%3Apassword%40example.com%3A8080%2Ffoo%2Fbar%3Fa%3D1%26b%3D2%26a%3D3%23fragment&#39;)%3B%0A%0Alog(url.href)%3B%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;http%3A%2F%2Flogin%3Apassword%40example.com%3A8080%2Ffoo%2Fbar%3Fa%3D1%26b%3D2%26a%3D3%23fragment&#39;%0Alog(url.origin)%3B%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;http%3A%2F%2Fexample.com%3A8080&#39;%0Alog(url.protocol)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;http%3A&#39;%0Alog(url.username)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;login&#39;%0Alog(url.password)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;password&#39;%0Alog(url.host)%3B%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;example.com%3A8080&#39;%0Alog(url.hostname)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;example.com&#39;%0Alog(url.port)%3B%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;8080&#39;%0Alog(url.pathname)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;%2Ffoo%2Fbar&#39;%0Alog(url.search)%3B%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;%3Fa%3D1%26b%3D2%26a%3D3&#39;%0Alog(url.hash)%3B%20%20%20%20%20%20%20%2F%2F%20%3D%3E%20&#39;%23fragment&#39;%0Alog(url.toJSON())%3B%20%20%20%2F%2F%20%3D%3E%20&#39;http%3A%2F%2Flogin%3Apassword%40example.com%3A8080%2Ffoo%2Fbar%3Fa%3D1%26b%3D2%26a%3D3%23fragment&#39;%0Alog(url.toString())%3B%20%2F%2F%20%3D%3E%20&#39;http%3A%2F%2Flogin%3Apassword%40example.com%3A8080%2Ffoo%2Fbar%3Fa%3D1%26b%3D2%26a%3D3%23fragment&#39;%0A%0Afor%20(let%20%5Bkey%2C%20value%5D%20of%20url.searchParams)%20%7B%0A%20%20log(key)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;a&#39;%2C%20&#39;b&#39;%2C%20&#39;a&#39;%0A%20%20log(value)%3B%20%2F%2F%20%3D%3E%20&#39;1&#39;%2C%20&#39;2&#39;%2C%20&#39;3&#39;%0A%7D%0A%0Aurl.pathname%20%3D%20&#39;&#39;%3B%0Aurl.searchParams.append(&#39;c&#39;%2C%204)%3B%0A%0Alog(url.search)%3B%20%2F%2F%20%3D%3E%20&#39;%3Fa%3D1%26b%3D2%26a%3D3%26c%3D4&#39;%0Alog(url.href)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;http%3A%2F%2Flogin%3Apassword%40example.com%3A8080%2F%3Fa%3D1%26b%3D2%26a%3D3%26c%3D4%23fragment&#39;%0A%0Aconst%20params%20%3D%20new%20URLSearchParams(&#39;%3Fa%3D1%26b%3D2%26a%3D3&#39;)%3B%0A%0Aparams.append(&#39;c&#39;%2C%204)%3B%0Aparams.append(&#39;a&#39;%2C%202)%3B%0Aparams.sort()%3B%0A%0Afor%20(let%20%5Bkey%2C%20value%5D%20of%20params)%20%7B%0A%20%20log(key)%3B%20%20%20%2F%2F%20%3D%3E%20&#39;a&#39;%2C%20&#39;a&#39;%2C%20&#39;a&#39;%2C%20&#39;b&#39;%2C%20&#39;c&#39;%0A%20%20log(value)%3B%20%2F%2F%20%3D%3E%20&#39;1&#39;%2C%20&#39;3&#39;%2C%20&#39;2&#39;%2C%20&#39;2&#39;%2C%20&#39;4&#39;%0A%7D%0A%0Alog(params.toString())%3B%20%2F%2F%20%3D%3E%20&#39;a%3D1%26a%3D3%26a%3D2%26b%3D2%26c%3D4&#39;&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const url = new URL(&#39;http://login:password@example.com:8080/foo/bar?a=1&amp;amp;b=2&amp;amp;a=3#fragment&#39;);

console.log(url.href);       // =&amp;gt; &#39;http://login:password@example.com:8080/foo/bar?a=1&amp;amp;b=2&amp;amp;a=3#fragment&#39;
console.log(url.origin);     // =&amp;gt; &#39;http://example.com:8080&#39;
console.log(url.protocol);   // =&amp;gt; &#39;http:&#39;
console.log(url.username);   // =&amp;gt; &#39;login&#39;
console.log(url.password);   // =&amp;gt; &#39;password&#39;
console.log(url.host);       // =&amp;gt; &#39;example.com:8080&#39;
console.log(url.hostname);   // =&amp;gt; &#39;example.com&#39;
console.log(url.port);       // =&amp;gt; &#39;8080&#39;
console.log(url.pathname);   // =&amp;gt; &#39;/foo/bar&#39;
console.log(url.search);     // =&amp;gt; &#39;?a=1&amp;amp;b=2&amp;amp;a=3&#39;
console.log(url.hash);       // =&amp;gt; &#39;#fragment&#39;
console.log(url.toJSON());   // =&amp;gt; &#39;http://login:password@example.com:8080/foo/bar?a=1&amp;amp;b=2&amp;amp;a=3#fragment&#39;
console.log(url.toString()); // =&amp;gt; &#39;http://login:password@example.com:8080/foo/bar?a=1&amp;amp;b=2&amp;amp;a=3#fragment&#39;

for (let [key, value] of url.searchParams) {
  console.log(key);   // =&amp;gt; &#39;a&#39;, &#39;b&#39;, &#39;a&#39;
  console.log(value); // =&amp;gt; &#39;1&#39;, &#39;2&#39;, &#39;3&#39;
}

url.pathname = &#39;&#39;;
url.searchParams.append(&#39;c&#39;, 4);

console.log(url.search); // =&amp;gt; &#39;?a=1&amp;amp;b=2&amp;amp;a=3&amp;amp;c=4&#39;
console.log(url.href);   // =&amp;gt; &#39;http://login:password@example.com:8080/?a=1&amp;amp;b=2&amp;amp;a=3&amp;amp;c=4#fragment&#39;

const params = new URLSearchParams(&#39;?a=1&amp;amp;b=2&amp;amp;a=3&#39;);

params.append(&#39;c&#39;, 4);
params.append(&#39;a&#39;, 2);
params.sort();

for (let [key, value] of params) {
  console.log(key);   // =&amp;gt; &#39;a&#39;, &#39;a&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;
  console.log(value); // =&amp;gt; &#39;1&#39;, &#39;3&#39;, &#39;2&#39;, &#39;2&#39;, &#39;4&#39;
}

console.log(params.toString()); // =&amp;gt; &#39;a=1&amp;amp;a=3&amp;amp;a=2&amp;amp;b=2&amp;amp;c=4&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Caveats when using &lt;code&gt;URL&lt;/code&gt; and &lt;code&gt;URLSearchParams&lt;/code&gt;:&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;IE8 does not support setters, so they do not work on &lt;code&gt;URL&lt;/code&gt; instances. However, &lt;code&gt;URL&lt;/code&gt; constructor can be used for basic &lt;code&gt;URL&lt;/code&gt; parsing.&lt;/li&gt; 
 &lt;li&gt;Legacy encodings in a search query are not supported. Also, &lt;code&gt;core-js&lt;/code&gt; implementation has some other encoding-related issues.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;URL&lt;/code&gt; implementations from all of the popular browsers have much more problems than &lt;code&gt;core-js&lt;/code&gt;, however, replacing all of them does not looks like a good idea. You can customize the aggressiveness of polyfill &lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#configurable-level-of-aggressiveness&quot;&gt;by your requirements&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Iterable DOM collections&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Some DOM collections should have &lt;a href=&quot;https://heycam.github.io/webidl/#idl-iterable&quot;&gt;iterable interface&lt;/a&gt; or should be &lt;a href=&quot;https://heycam.github.io/webidl/#LegacyArrayClass&quot;&gt;inherited from &lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. That means they should have &lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;entries&lt;/code&gt; and &lt;code&gt;@@iterator&lt;/code&gt; methods for iteration. So add them. Modules &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/web.dom-collections.iterator.js&quot;&gt;&lt;code&gt;web.dom-collections.iterator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js/raw/master/packages/core-js/modules/web.dom-collections.for-each.js&quot;&gt;&lt;code&gt;web.dom-collections.for-each&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class [
  CSSRuleList,
  CSSStyleDeclaration,
  CSSValueList,
  ClientRectList,
  DOMRectList,
  DOMStringList,
  DataTransferItemList,
  FileList,
  HTMLAllCollection,
  HTMLCollection,
  HTMLFormElement,
  HTMLSelectElement,
  MediaList,
  MimeTypeArray,
  NamedNodeMap,
  PaintRequestList,
  Plugin,
  PluginArray,
  SVGLengthList,
  SVGNumberList,
  SVGPathSegList,
  SVGPointList,
  SVGStringList,
  SVGTransformList,
  SourceBufferList,
  StyleSheetList,
  TextTrackCueList,
  TextTrackList,
  TouchList,
] {
  @@iterator(): Iterator&amp;lt;value&amp;gt;;
}

class [DOMTokenList, NodeList] {
  forEach(callbackfn: (value: any, index: number, target: any) =&amp;gt; void, thisArg: any): void;
  entries(): Iterator&amp;lt;[key, value]&amp;gt;;
  keys(): Iterator&amp;lt;key&amp;gt;;
  values(): Iterator&amp;lt;value&amp;gt;;
  @@iterator(): Iterator&amp;lt;value&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js(-pure)/web/dom-collections
core-js(-pure)/stable|features/dom-collections/iterator
core-js/stable|features/dom-collections/for-each
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/lfXVFl&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;for (let { id } of document.querySelectorAll(&#39;*&#39;)) {
  if (id) console.log(id);
}

for (let [index, { id }] of document.querySelectorAll(&#39;*&#39;).entries()) {
  if (id) console.log(index, id);
}

document.querySelectorAll(&#39;*&#39;).forEach(it =&amp;gt; console.log(it.id));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Iteration helpers&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Helpers for check iterability / get iterator in the &lt;code&gt;pure&lt;/code&gt; version or, for example, for &lt;code&gt;arguments&lt;/code&gt; object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function isIterable(value: any): boolean;
function getIterator(value: any): Object;
function getIteratorMethod(value: any): Function | void;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#commonjs-api&quot;&gt;&lt;em&gt;CommonJS entry points:&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;core-js-pure/es|stable|features/is-iterable
core-js-pure/es|stable|features/get-iterator
core-js-pure/es|stable|features/get-iterator-method
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;http://goo.gl/SXsM6D&quot;&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import isIterable from &#39;core-js-pure/features/is-iterable&#39;;
import getIterator from &#39;core-js-pure/features/get-iterator&#39;;
import getIteratorMethod from &#39;core-js-pure/features/get-iterator-method&#39;;

let list = (function () {
  return arguments;
})(1, 2, 3);

console.log(isIterable(list)); // true;

let iterator = getIterator(list);
console.log(iterator.next().value); // 1
console.log(iterator.next().value); // 2
console.log(iterator.next().value); // 3
console.log(iterator.next().value); // undefined

getIterator({});   // TypeError: [object Object] is not iterable!

let method = getIteratorMethod(list);
console.log(typeof method);         // &#39;function&#39;
let iterator = method.call(list);
console.log(iterator.next().value); // 1
console.log(iterator.next().value); // 2
console.log(iterator.next().value); // 3
console.log(iterator.next().value); // undefined

console.log(getIteratorMethod({})); // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Missing polyfills&lt;a href=&quot;https://raw.githubusercontent.com/zloirock/core-js/master/#index&quot;&gt;⬆&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ES &lt;code&gt;BigInt&lt;/code&gt; can&#39;t be polyfilled since it requires changes in the behavior of operators, you could find more info &lt;a href=&quot;https://github.com/zloirock/core-js/issues/381&quot;&gt;here&lt;/a&gt;. You could try to use &lt;a href=&quot;https://github.com/GoogleChromeLabs/jsbi&quot;&gt;&lt;code&gt;JSBI&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;ES &lt;code&gt;Proxy&lt;/code&gt; can&#39;t be polyfilled, you can try to use &lt;a href=&quot;https://github.com/GoogleChrome/proxy-polyfill&quot;&gt;&lt;code&gt;proxy-polyfill&lt;/code&gt;&lt;/a&gt; which provides a very little subset of features.&lt;/li&gt; 
 &lt;li&gt;ES &lt;code&gt;String#normalize&lt;/code&gt; is not a very useful feature, but this polyfill will be very large. If you need it, you can use &lt;a href=&quot;https://github.com/walling/unorm/&quot;&gt;unorm&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;ECMA-402 &lt;code&gt;Intl&lt;/code&gt; is missed because of the size. You can use &lt;a href=&quot;https://formatjs.io/docs/polyfills&quot;&gt;those polyfills&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;window.fetch&lt;/code&gt; is not a cross-platform feature, in some environments, it makes no sense. For this reason, I don&#39;t think it should be in &lt;code&gt;core-js&lt;/code&gt;. Looking at a large number of requests it &lt;em&gt;might be&lt;/em&gt; added in the future. Now you can use, for example, &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;this polyfill&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>sudheerj/reactjs-interview-questions</title>
      <link>https://github.com/sudheerj/reactjs-interview-questions</link>
      <description>&lt;p&gt;List of top 500 ReactJS Interview Questions &amp; Answers....Coding exercise questions are coming soon!!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Interview Questions &amp;amp; Answers&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click &lt;span&gt;⭐&lt;/span&gt;if you like the project. Pull Request are highly appreciated. Follow me &lt;a href=&quot;https://twitter.com/SudheerJonna&quot;&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://www.fullstack.cafe/?utm_source=github&amp;amp;utm_medium=sud&quot;&gt; 3600 Tech Interview Questions. &lt;b&gt;Answered&lt;/b&gt;. 
  &lt;div&gt; 
   &lt;img src=&quot;https://user-images.githubusercontent.com/13550565/76382460-cc784d80-6393-11ea-8837-2b89265ac853.png&quot; width=&quot;150&quot; alt=&quot;FullStack.Cafe&quot;&gt; 
  &lt;/div&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div&gt;
  Learn to code and get hired with 
 &lt;a href=&quot;https://zerotomastery.io/?utm_source=github&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=reactjs-interview-questions&quot;&gt;Zero To Mastery:&lt;/a&gt; 
 &lt;ol&gt; 
  &lt;li&gt;This &lt;a href=&quot;https://links.zerotomastery.io/react_sudheer&quot;&gt;React course&lt;/a&gt; is good if you’re struggling to learn React beyond the basics&lt;/li&gt; 
  &lt;li&gt;This &lt;a href=&quot;http://links.zerotomastery.io/mci_sudheer&quot;&gt;coding interview bootcamp&lt;/a&gt; is helpful if you’re serious about getting hired as a developer&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repository is specific to ReactJS. Please check &lt;a href=&quot;https://github.com/sudheerj/javascript-interview-questions&quot;&gt;Javascript Interview questions&lt;/a&gt; for core javascript questions.&lt;/p&gt; 
&lt;h2&gt;Downloading PDF/Epub formats&lt;/h2&gt; 
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href=&quot;https://github.com/sudheerj/reactjs-interview-questions/actions&quot;&gt;actions tab&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;No.&lt;/th&gt; 
   &lt;th&gt;Questions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Core React&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react&quot;&gt;What is React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-major-features-of-react&quot;&gt;What are the major features of React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jsx&quot;&gt;What is JSX?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-element-and-component&quot;&gt;What is the difference between Element and Component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-components-in-react&quot;&gt;How to create components in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-to-use-a-class-component-over-a-function-component&quot;&gt;When to use a Class Component over a Function Component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-pure-components&quot;&gt;What are Pure Components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-state-in-react&quot;&gt;What is state in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-props-in-react&quot;&gt;What are props in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-state-and-props&quot;&gt;What is the difference between state and props?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-we-not-update-the-state-directly&quot;&gt;Why should we not update the state directly?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-callback-function-as-an-argument-of-setstate&quot;&gt;What is the purpose of callback function as an argument of setState()?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-html-and-react-event-handling&quot;&gt;What is the difference between HTML and React event handling?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-bind-methods-or-event-handlers-in-jsx-callbacks&quot;&gt;How to bind methods or event handlers in JSX callbacks?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-a-parameter-to-an-event-handler-or-callback&quot;&gt;How to pass a parameter to an event handler or callback?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-synthetic-events-in-react&quot;&gt;What are synthetic events in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-inline-conditional-expressions&quot;&gt;What are inline conditional expressions?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements&quot;&gt;What is &quot;key&quot; prop and what is the benefit of using it in arrays of elements?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-refs&quot;&gt;What is the use of refs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-refs&quot;&gt;How to create refs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-forward-refs&quot;&gt;What are forward refs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#which-is-preferred-option-with-in-callback-refs-and-finddomnode&quot;&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-string-refs-legacy&quot;&gt;Why are String Refs legacy?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-virtual-dom&quot;&gt;What is Virtual DOM?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-virtual-dom-works&quot;&gt;How Virtual DOM works?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-shadow-dom-and-virtual-dom&quot;&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-fiber&quot;&gt;What is React Fiber?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-goal-of-react-fiber&quot;&gt;What is the main goal of React Fiber?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-controlled-components&quot;&gt;What are controlled components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-uncontrolled-components&quot;&gt;What are uncontrolled components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;31&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-createelement-and-cloneelement&quot;&gt;What is the difference between createElement and cloneElement?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;32&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-lifting-state-up-in-react&quot;&gt;What is Lifting State Up in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;33&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-phases-of-component-lifecycle&quot;&gt;What are the different phases of component lifecycle?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;34&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-of-react&quot;&gt;What are the lifecycle methods of React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;35&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-higher-order-components&quot;&gt;What are Higher-Order components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;36&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-props-proxy-for-hoc-component&quot;&gt;How to create props proxy for HOC component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;37&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-context&quot;&gt;What is context?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;38&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-children-prop&quot;&gt;What is children prop?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;39&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-write-comments-in-react&quot;&gt;How to write comments in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;40&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-using-super-constructor-with-props-argument&quot;&gt;What is the purpose of using super constructor with props argument?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;41&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reconciliation&quot;&gt;What is reconciliation?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;42&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-state-with-a-dynamic-key-name&quot;&gt;How to set state with a dynamic key name?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;43&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-would-be-the-common-mistake-of-function-being-called-every-time-the-component-renders&quot;&gt;What would be the common mistake of function being called every time the component renders?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;44&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-lazy-function-supports-named-exports&quot;&gt;Is lazy function supports named exports?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;45&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-uses-classname-over-class-attribute&quot;&gt;Why React uses className over class attribute?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;46&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-fragments&quot;&gt;What are fragments?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;47&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-fragments-are-better-than-container-divs&quot;&gt;Why fragments are better than container divs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;48&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-portals-in-react&quot;&gt;What are portals in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;49&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateless-components&quot;&gt;What are stateless components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;50&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateful-components&quot;&gt;What are stateful components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;51&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-apply-validation-on-props-in-react&quot;&gt;How to apply validation on props in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;52&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react&quot;&gt;What are the advantages of React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;53&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-of-react&quot;&gt;What are the limitations of React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;54&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-error-boundaries-in-react-v16&quot;&gt;What are error boundaries in React v16&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;55&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-error-boundaries-handled-in-react-v15&quot;&gt;How error boundaries handled in React v15?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;56&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-recommended-ways-for-static-type-checking&quot;&gt;What are the recommended ways for static type checking?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;57&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-react-dom-package&quot;&gt;What is the use of react-dom package?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;58&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-render-method-of-react-dom&quot;&gt;What is the purpose of render method of react-dom?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;59&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reactdomserver&quot;&gt;What is ReactDOMServer?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;60&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-innerhtml-in-react&quot;&gt;How to use InnerHtml in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;61&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-styles-in-react&quot;&gt;How to use styles in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;62&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-events-are-different-in-react&quot;&gt;How events are different in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;63&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-setstate-in-constructor&quot;&gt;What will happen if you use setState in constructor?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-impact-of-indexes-as-keys&quot;&gt;What is the impact of indexes as keys?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;65&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-setstate-in-componentwillmount-method&quot;&gt;Is it good to use setState() in componentWillMount() method?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;66&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-props-in-initial-state&quot;&gt;What will happen if you use props in initial state?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;67&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-conditionally-render-components&quot;&gt;How do you conditionally render components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;68&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-be-careful-when-spreading-props-on-dom-elements&quot;&gt;Why we need to be careful when spreading props on DOM elements??&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;69&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-use-decorators-in-react&quot;&gt;How you use decorators in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;70&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-memoize-a-component&quot;&gt;How do you memoize a component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;71&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-implement-server-side-rendering-or-ssr&quot;&gt;How you implement Server-Side Rendering or SSR?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;72&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-enable-production-mode-in-react&quot;&gt;How to enable production mode in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;73&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-cra-and-its-benefits&quot;&gt;What is CRA and its benefits?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;74&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-lifecycle-methods-order-in-mounting&quot;&gt;What is the lifecycle methods order in mounting?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;75&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-going-to-be-deprecated-in-react-v16&quot;&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;76&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromprops-lifecycle-method&quot;&gt;What is the purpose of getDerivedStateFromProps() lifecycle method?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;77&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getsnapshotbeforeupdate-lifecycle-method&quot;&gt;What is the purpose of getSnapshotBeforeUpdate() lifecycle method?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;78&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-hooks-replace-render-props-and-higher-order-components&quot;&gt;Do Hooks replace render props and higher order components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;79&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-way-for-naming-components&quot;&gt;What is the recommended way for naming components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;80&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-ordering-of-methods-in-component-class&quot;&gt;What is the recommended ordering of methods in component class?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;81&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-switching-component&quot;&gt;What is a switching component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;82&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-pass-a-function-to-setstate&quot;&gt;Why we need to pass a function to setState()?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;83&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-strict-mode-in-react&quot;&gt;What is strict mode in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;84&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-mixins&quot;&gt;What are React Mixins?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;85&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-ismounted-an-anti-pattern-and-what-is-the-proper-solution&quot;&gt;Why is isMounted() an anti-pattern and what is the proper solution?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;86&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-pointer-events-supported-in-react&quot;&gt;What are the Pointer Events supported in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;87&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-component-names-start-with-capital-letter&quot;&gt;Why should component names start with capital letter?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;88&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-custom-dom-attributes-supported-in-react-v16&quot;&gt;Are custom DOM attributes supported in React v16?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;89&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-constructor-and-getinitialstate&quot;&gt;What is the difference between constructor and getInitialState?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;90&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-force-a-component-to-re-render-without-calling-setstate&quot;&gt;Can you force a component to re-render without calling setState?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;91&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-super-and-superprops-in-react-using-es6-classes&quot;&gt;What is the difference between super() and super(props) in React using ES6 classes?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;92&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-loop-inside-jsx&quot;&gt;How to loop inside JSX?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;93&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-props-in-attribute-quotes&quot;&gt;How do you access props in attribute quotes?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;94&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-proptype-array-with-shape&quot;&gt;What is React PropType array with shape?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;95&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-conditionally-apply-class-attributes&quot;&gt;How to conditionally apply class attributes?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;96&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-reactdom&quot;&gt;What is the difference between React and ReactDOM?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;97&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-reactdom-is-separated-from-react&quot;&gt;Why ReactDOM is separated from React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;98&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-react-label-element&quot;&gt;How to use React label element?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;99&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-combine-multiple-inline-style-objects&quot;&gt;How to combine multiple inline style objects?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-re-render-the-view-when-the-browser-is-resized&quot;&gt;How to re-render the view when the browser is resized?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;101&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-setstate-and-replacestate-methods&quot;&gt;What is the difference between setState and replaceState methods?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;102&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-listen-to-state-changes&quot;&gt;How to listen to state changes?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;103&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-approach-of-removing-an-array-element-in-react-state&quot;&gt;What is the recommended approach of removing an array element in react state?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;104&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-rendering-html&quot;&gt;Is it possible to use React without rendering HTML?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;105&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pretty-print-json-with-react&quot;&gt;How to pretty print JSON with React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;106&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-cant-update-props-in-react&quot;&gt;Why you can&#39;t update props in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;107&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-focus-an-input-element-on-page-load&quot;&gt;How to focus an input element on page load?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;108&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-ways-of-updating-objects-in-state&quot;&gt;What are the possible ways of updating objects in state?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;110&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-can-we-find-the-version-of-react-at-runtime-in-the-browser&quot;&gt;How can we find the version of React at runtime in the browser?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;111&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-approaches-to-include-polyfills-in-your-create-react-app&quot;&gt;What are the approaches to include polyfills in your create-react-app?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;112&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-https-instead-of-http-in-create-react-app&quot;&gt;How to use https instead of http in create-react-app?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;113&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-avoid-using-relative-path-imports-in-create-react-app&quot;&gt;How to avoid using relative path imports in create-react-app?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;114&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-google-analytics-for-react-router&quot;&gt;How to add Google Analytics for react-router?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;115&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-update-a-component-every-second&quot;&gt;How to update a component every second?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;116&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react&quot;&gt;How do you apply vendor prefixes to inline styles in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;117&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-import-and-export-components-using-react-and-es6&quot;&gt;How to import and export components using react and ES6?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;118&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-exceptions-on-react-component-naming&quot;&gt;What are the exceptions on React component naming?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;119&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-a-component-constructor-called-only-once&quot;&gt;Why is a component constructor called only once?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;120&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-define-constants-in-react&quot;&gt;How to define constants in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;121&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-programmatically-trigger-click-event-in-react&quot;&gt;How to programmatically trigger click event in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;122&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-asyncawait-in-plain-react&quot;&gt;Is it possible to use async/await in plain React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;123&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-common-folder-structures-for-react&quot;&gt;What are the common folder structures for React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;124&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-packages-for-animation&quot;&gt;What are the popular packages for animation?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;125&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-styles-modules&quot;&gt;What is the benefit of styles modules?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;126&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-react-specific-linters&quot;&gt;What are the popular React-specific linters?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;127&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-call-and-in-which-component-lifecycle-methods-should-i-make-an-ajax-call&quot;&gt;How to make AJAX call and In which component lifecycle methods should I make an AJAX call?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;128&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-render-props&quot;&gt;What are render props?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;React Router&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;129&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-router&quot;&gt;What is React Router?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;130&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-router-is-different-from-history-library&quot;&gt;How React Router is different from history library?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;131&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-router-components-of-react-router-v4&quot;&gt;What are the &amp;lt;Router&amp;gt; components of React Router v4?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;132&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-push-and-replace-methods-of-history&quot;&gt;What is the purpose of push and replace methods of history?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;133&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-programmatically-navigate-using-react-router-v4&quot;&gt;How do you programmatically navigate using React router v4?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;134&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-query-parameters-in-react-router-v4&quot;&gt;How to get query parameters in React Router v4&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;135&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-get-router-may-have-only-one-child-element-warning&quot;&gt;Why you get &quot;Router may have only one child element&quot; warning?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;136&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-params-to-historypush-method-in-react-router-v4&quot;&gt;How to pass params to history.push method in React Router v4?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;137&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-implement-default-or-notfound-page&quot;&gt;How to implement default or NotFound page?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;138&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-history-on-react-router-v4&quot;&gt;How to get history on React Router v4?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;139&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-perform-automatic-redirect-after-login&quot;&gt;How to perform automatic redirect after login?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;React Internationalization&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;140&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-intl&quot;&gt;What is React-Intl?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;141&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-react-intl&quot;&gt;What are the main features of React Intl?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;142&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-two-ways-of-formatting-in-react-intl&quot;&gt;What are the two ways of formatting in React Intl?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;143&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-formattedmessage-as-placeholder-using-react-intl&quot;&gt;How to use FormattedMessage as placeholder using React Intl?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;144&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-current-locale-with-react-intl&quot;&gt;How to access current locale with React Intl&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;145&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-format-date-using-react-intl&quot;&gt;How to format date using React Intl?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;React Testing&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;146&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-shallow-renderer-in-react-testing&quot;&gt;What is Shallow Renderer in React testing?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;147&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-testrenderer-package-in-react&quot;&gt;What is TestRenderer package in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;148&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-reacttestutils-package&quot;&gt;What is the purpose of ReactTestUtils package?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;149&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jest&quot;&gt;What is Jest?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;150&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-jest-over-jasmine&quot;&gt;What are the advantages of Jest over Jasmine?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;151&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-a-simple-example-of-jest-test-case&quot;&gt;Give a simple example of Jest test case&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;React Redux&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;152&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flux&quot;&gt;What is Flux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;153&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux&quot;&gt;What is Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;154&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-core-principles-of-redux&quot;&gt;What are the core principles of Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;155&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-downsides-of-redux-compared-to-flux&quot;&gt;What are the downsides of Redux compared to Flux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;156&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-mapstatetoprops-and-mapdispatchtoprops&quot;&gt;What is the difference between mapStateToProps() and mapDispatchToProps()?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;157&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-dispatch-an-action-in-reducer&quot;&gt;Can I dispatch an action in reducer?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;158&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-redux-store-outside-a-component&quot;&gt;How to access Redux store outside a component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;159&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-drawbacks-of-mvw-pattern&quot;&gt;What are the drawbacks of MVW pattern&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;160&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-there-any-similarities-between-redux-and-rxjs&quot;&gt;Are there any similarities between Redux and RxJS?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;161&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-dispatch-an-action-on-load&quot;&gt;How to dispatch an action on load?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;162&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-connect-from-react-redux&quot;&gt;How to use connect from React Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;163&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-reset-state-in-redux&quot;&gt;How to reset state in Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;164&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#whats-the-purpose-of-at-symbol-in-the-redux-connect-decorator&quot;&gt;Whats the purpose of at symbol in the redux connect decorator?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;165&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-context-and-react-redux&quot;&gt;What is the difference between React context and React Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;166&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-redux-state-functions-called-reducers&quot;&gt;Why are Redux state functions called reducers?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;167&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-request-in-redux&quot;&gt;How to make AJAX request in Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;168&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-keep-all-components-state-in-redux-store&quot;&gt;Should I keep all component&#39;s state in Redux store?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;169&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-way-to-access-redux-store&quot;&gt;What is the proper way to access Redux store?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;170&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-component-and-container-in-react-redux&quot;&gt;What is the difference between component and container in React Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;171&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-the-constants-in-redux&quot;&gt;What is the purpose of the constants in Redux? &lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;172&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-ways-to-write-mapdispatchtoprops&quot;&gt;What are the different ways to write mapDispatchToProps()?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;173&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-the-ownprops-parameter-in-mapstatetoprops-and-mapdispatchtoprops&quot;&gt;What is the use of the ownProps parameter in mapStateToProps() and mapDispatchToProps()?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;174&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-structure-redux-top-level-directories&quot;&gt;How to structure Redux top level directories?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;175&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-saga&quot;&gt;What is redux-saga?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;176&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-mental-model-of-redux-saga&quot;&gt;What is the mental model of redux-saga?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;177&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-call-and-put-in-redux-saga&quot;&gt;What are the differences between call and put in redux-saga&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;178&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-thunk&quot;&gt;What is Redux Thunk?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;179&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-saga-and-redux-thunk&quot;&gt;What are the differences between redux-saga and redux-thunk&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;180&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-devtools&quot;&gt;What is Redux DevTools?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;181&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-redux-devtools&quot;&gt;What are the features of Redux DevTools?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;182&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-redux-selectors-and-why-to-use-them&quot;&gt;What are Redux selectors and Why to use them?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;183&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-form&quot;&gt;What is Redux Form?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;184&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-redux-form&quot;&gt;What are the main features of Redux Form?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;185&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-multiple-middlewares-to-redux&quot;&gt;How to add multiple middlewares to Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;186&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-initial-state-in-redux&quot;&gt;How to set initial state in Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;187&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-relay-is-different-from-redux&quot;&gt;How Relay is different from Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;188&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-an-action-in-redux&quot;&gt;What is an action in Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;React Native&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;188&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-native-and-react&quot;&gt;What is the difference between React Native and React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;189&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-test-react-native-apps&quot;&gt;How to test React Native apps?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;190&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-do-logging-in-react-native&quot;&gt;How to do logging in React Native?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;191&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-your-react-native&quot;&gt;How to debug your React Native?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;React supported libraries and Integration&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;192&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reselect-and-how-it-works&quot;&gt;What is reselect and how it works?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;193&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flow&quot;&gt;What is Flow?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;194&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-flow-and-proptypes&quot;&gt;What is the difference between Flow and PropTypes?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;195&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-font-awesome-icons-in-react&quot;&gt;How to use font-awesome icons in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;196&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-dev-tools&quot;&gt;What is React Dev Tools?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;197&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-devtools-not-loading-in-chrome-for-local-files&quot;&gt;Why is DevTools not loading in Chrome for local files?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;198&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-polymer-in-react&quot;&gt;How to use Polymer in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;199&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react-over-vuejs&quot;&gt;What are the advantages of React over Vue.js?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;200&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-angular&quot;&gt;What is the difference between React and Angular?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;201&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-tab-is-not-showing-up-in-devtools&quot;&gt;Why React tab is not showing up in DevTools?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;202&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-styled-components&quot;&gt;What are styled components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;203&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-styled-components&quot;&gt;Give an example of Styled Components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;204&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-relay&quot;&gt;What is Relay?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;205&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-typescript-in-create-react-app-application&quot;&gt;How to use TypeScript in create-react-app application?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Miscellaneous&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;206&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-reselect-library&quot;&gt;What are the main features of reselect library?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;207&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-reselect-usage&quot;&gt;Give an example of reselect usage?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;209&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-the-statics-object-work-with-es6-classes-in-react&quot;&gt;Does the statics object work with ES6 classes in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;210&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-redux-only-be-used-with-react&quot;&gt;Can Redux only be used with React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;211&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-you-need-to-have-a-particular-build-tool-to-use-redux&quot;&gt;Do you need to have a particular build tool to use Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;212&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-redux-form-initialvalues-get-updated-from-state&quot;&gt;How Redux Form initialValues get updated from state?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;213&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-proptypes-allow-different-types-for-one-prop&quot;&gt;How React PropTypes allow different type for one prop?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;214&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-import-an-svg-file-as-react-component&quot;&gt;Can I import an SVG file as react component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;215&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-inline-ref-callbacks-or-functions-not-recommended&quot;&gt;Why are inline ref callbacks or functions not recommended?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;216&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-render-hijacking-in-react&quot;&gt;What is render hijacking in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;217&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hoc-factory-implementations&quot;&gt;What are HOC factory implementations?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;218&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-numbers-to-react-component&quot;&gt;How to pass numbers to React component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;219&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-keep-all-my-state-into-redux-should-i-ever-use-react-internal-state&quot;&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;220&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-registerserviceworker-in-react&quot;&gt;What is the purpose of registerServiceWorker in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;221&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-memo-function&quot;&gt;What is React memo function?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;222&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-lazy-function&quot;&gt;What is React lazy function?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;223&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-unnecessary-updates-using-setstate&quot;&gt;How to prevent unnecessary updates using setState?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;224&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-render-array-strings-and-numbers-in-react-16-version&quot;&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;225&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-class-field-declarations-syntax-in-react-classes&quot;&gt;How to use class field declarations syntax in React classes?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;226&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hooks&quot;&gt;What are hooks?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;227&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-needs-to-follow-for-hooks&quot;&gt;What are the rules needs to follow for hooks?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;228&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-ensure-hooks-followed-the-rules-in-your-project&quot;&gt;How to ensure hooks followed the rules in your project?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;229&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-flux-and-redux&quot;&gt;What are the differences between Flux and Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;230&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-react-router-v4&quot;&gt;What are the benefits of React Router V4?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;231&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-describe-about-componentdidcatch-lifecycle-method-signature&quot;&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;232&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#in-which-scenarios-error-boundaries-do-not-catch-errors&quot;&gt;In which scenarios error boundaries do not catch errors?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;233&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-not-need-error-boundaries-for-event-handlers&quot;&gt;Why do you not need error boundaries for event handlers?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;234&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-try-catch-block-and-error-boundaries&quot;&gt;What is the difference between try catch block and error boundaries?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;235&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-behavior-of-uncaught-errors-in-react-16&quot;&gt;What is the behavior of uncaught errors in react 16?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;236&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-placement-for-error-boundaries&quot;&gt;What is the proper placement for error boundaries?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;237&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-component-stack-trace-from-error-boundary&quot;&gt;What is the benefit of component stack trace from error boundary?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;238&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-required-method-to-be-defined-for-a-class-component&quot;&gt;What is the required method to be defined for a class component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;239&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-return-types-of-render-method&quot;&gt;What are the possible return types of render method?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;240&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-purpose-of-constructor&quot;&gt;What is the main purpose of constructor?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;241&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-mandatory-to-define-constructor-for-react-component&quot;&gt;Is it mandatory to define constructor for React component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;242&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-default-props&quot;&gt;What are default props?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;243&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-not-call-setstate-in-componentwillunmount&quot;&gt;Why should not call setState in componentWillUnmount?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;244&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromerror&quot;&gt;What is the purpose of getDerivedStateFromError?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;245&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-methods-order-when-component-re-rendered&quot;&gt;What is the methods order when component re-rendered?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;246&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-methods-invoked-during-error-handling&quot;&gt;What are the methods invoked during error handling?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;247&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-displayname-class-property&quot;&gt;What is the purpose of displayName class property?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;248&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-browser-support-for-react-applications&quot;&gt;What is the browser support for react applications?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;249&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-unmountcomponentatnode-method&quot;&gt;What is the purpose of unmountComponentAtNode method?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;250&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-code-splitting&quot;&gt;What is code-splitting?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;251&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-strict-mode&quot;&gt;What is the benefit of strict mode?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;252&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-keyed-fragments&quot;&gt;What are Keyed Fragments?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;253&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-react-support-all-html-attributes&quot;&gt;Does React support all HTML attributes?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;254&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-with-hocs&quot;&gt;What are the limitations with HOCs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;255&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-forwardrefs-in-devtools&quot;&gt;How to debug forwardRefs in DevTools?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;256&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-component-props-defaults-to-true&quot;&gt;When component props defaults to true?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;257&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-nextjs-and-major-features-of-it&quot;&gt;What is NextJS and major features of it?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;258&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-an-event-handler-to-a-component&quot;&gt;How do you pass an event handler to a component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;259&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-arrow-functions-in-render-methods&quot;&gt;Is it good to use arrow functions in render methods?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;260&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-a-function-from-being-called-multiple-times&quot;&gt;How to prevent a function from being called multiple times?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;261&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-jsx-prevents-injection-attacks&quot;&gt;How JSX prevents Injection Attacks?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;262&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-update-rendered-elements&quot;&gt;How do you update rendered elements?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;263&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-props-are-read-only&quot;&gt;How do you say that props are read only?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;264&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-state-updates-are-merged&quot;&gt;How do you say that state updates are merged?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;265&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-arguments-to-an-event-handler&quot;&gt;How do you pass arguments to an event handler?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;266&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-component-from-rendering&quot;&gt;How to prevent component from rendering?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;267&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-conditions-to-safely-use-the-index-as-a-key&quot;&gt;What are the conditions to safely use the index as a key?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;268&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-keys-should-be-globally-unique&quot;&gt;Is it keys should be globally unique?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;269&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-popular-choice-for-form-handling&quot;&gt;What is the popular choice for form handling?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;270&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-formik-over-redux-form-library&quot;&gt;What are the advantages of formik over redux form library?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;271&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-not-required-to-use-inheritance&quot;&gt;Why do you not required to use inheritance?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;272&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-web-components-in-react-application&quot;&gt;Can I use web components in react application?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;273&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-dynamic-import&quot;&gt;What is dynamic import?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;274&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-loadable-components&quot;&gt;What are loadable components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;275&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-suspense-component&quot;&gt;What is suspense component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;276&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-route-based-code-splitting&quot;&gt;What is route based code splitting?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;277&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-on-how-to-use-context&quot;&gt;Give an example on How to use context?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;278&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-default-value-in-context&quot;&gt;What is the purpose of default value in context?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;279&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-use-contexttype&quot;&gt;How do you use contextType?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;280&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-consumer&quot;&gt;What is a consumer?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;281&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-solve-performance-corner-cases-while-using-context&quot;&gt;How do you solve performance corner cases while using context?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;282&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-forward-ref-in-hocs&quot;&gt;What is the purpose of forward ref in HOCs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;283&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-ref-argument-available-for-all-functions-or-class-components&quot;&gt;Is it ref argument available for all functions or class components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;284&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-need-additional-care-for-component-libraries-while-using-forward-refs&quot;&gt;Why do you need additional care for component libraries while using forward refs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;285&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-react-class-components-without-es6&quot;&gt;How to create react class components without ES6?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;286&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-jsx&quot;&gt;Is it possible to use react without JSX?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;287&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-diffing-algorithm&quot;&gt;What is diffing algorithm?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;288&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-covered-by-diffing-algorithm&quot;&gt;What are the rules covered by diffing algorithm?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;289&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-do-you-need-to-use-refs&quot;&gt;When do you need to use refs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;290&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-prop-must-be-named-as-render-for-render-props&quot;&gt;Is it prop must be named as render for render props?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;291&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-problems-of-using-render-props-with-pure-components&quot;&gt;What are the problems of using render props with pure components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;292&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-create-hoc-using-render-props&quot;&gt;How do you create HOC using render props?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;293&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-windowing-technique&quot;&gt;What is windowing technique?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;294&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-print-falsy-values-in-jsx&quot;&gt;How do you print falsy values in JSX?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;295&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-typical-use-case-of-portals?&quot;&gt;What is the typical use case of portals?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;296&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-set-default-value-for-uncontrolled-component&quot;&gt;How do you set default value for uncontrolled component?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;297&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-your-favorite-react-stack&quot;&gt;What is your favorite React stack?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;298&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-real-dom-and-virtual-dom&quot;&gt;What is the difference between Real DOM and Virtual DOM?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;299&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-bootstrap-to-a-react-application&quot;&gt;How to add Bootstrap to a react application?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;300&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-list-down-top-websites-or-applications-using-react-as-front-end-framework&quot;&gt;Can you list down top websites or applications using react as front end framework?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;301&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-recommended-to-use-css-in-js-technique-in-react&quot;&gt;Is it recommended to use CSS In JS technique in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;302&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-rewrite-all-my-class-components-with-hooks&quot;&gt;Do I need to rewrite all my class components with hooks?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;303&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-fetch-data-with-react-hooks&quot;&gt;How to fetch data with React Hooks?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;304&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-hooks-cover-all-use-cases-for-classes&quot;&gt;Is Hooks cover all use cases for classes?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;305&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-stable-release-for-hooks-support&quot;&gt;What is the stable release for hooks support?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;306&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-we-use-array-destructuring-square-brackets-notation-in-usestate&quot;&gt;Why do we use array destructuring (square brackets notation) in useState?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;307&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-sources-used-for-introducing-hooks&quot;&gt;What are the sources used for introducing hooks?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;308&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-imperative-api-of-web-components&quot;&gt;How do you access imperative API of web components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;309&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-formik&quot;&gt;What is formik?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;310&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-typical-middleware-choices-for-handling-asynchronous-calls-in-redux&quot;&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;311&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-browsers-understand-jsx-code&quot;&gt;Do browsers understand JSX code?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;312&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#describe-about-data-flow-in-react&quot;&gt;Describe about data flow in react?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;313&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-scripts&quot;&gt;What is react scripts?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;314&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-create-react-app&quot;&gt;What are the features of create react app?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;315&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-rendertonodestream-method&quot;&gt;What is the purpose of renderToNodeStream method?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;316&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-mobx&quot;&gt;What is MobX?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;317&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-and-mobx&quot;&gt;What are the differences between Redux and MobX?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;318&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-learn-es6-before-learning-reactjs&quot;&gt;Should I learn ES6 before learning ReactJS?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;319&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-concurrent-rendering&quot;&gt;What is Concurrent Rendering?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;320&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-async-mode-and-concurrent-mode&quot;&gt;What is the difference between async mode and concurrent mode?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;321&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-javascript-urls-in-react169&quot;&gt;Can I use javascript urls in react16.9?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;322&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-eslint-plugin-for-hooks&quot;&gt;What is the purpose of eslint plugin for hooks?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;323&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-imperative-and-declarative-in-react&quot;&gt;What is the difference between Imperative and Declarative in React?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;324&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-using-typescript-with-reactjs&quot;&gt;What are the benefits of using typescript with reactjs?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;325&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-make-sure-that-user-remains-authenticated-on-page-refresh-while-using-context-api-state-management&quot;&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;326&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-new-jsx-transform&quot;&gt;What are the benefits of new JSX transform?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;327&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-does-new-jsx-transform-different-from-old-transform&quot;&gt;How does new JSX transform different from old transform?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;328&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-get-redux-scaffolding-using-create-react-app&quot;&gt;How do you get redux scaffolding using create-react-app?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;329&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-server-components&quot;&gt;What are React Server components?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Core React&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;h3&gt;What is React?&lt;/h3&gt; &lt;p&gt;React is an &lt;strong&gt;open-source frontend JavaScript library&lt;/strong&gt; which is used for building user interfaces especially for single page applications. It is used for handling view layer for web and mobile apps. React was created by &lt;a href=&quot;https://github.com/jordwalke&quot;&gt;Jordan Walke&lt;/a&gt;, a software engineer working for Facebook. React was first deployed on Facebook&#39;s News Feed in 2011 and on Instagram in 2012.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the major features of React?&lt;/h3&gt; &lt;p&gt;The major features of React are:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;It uses &lt;strong&gt;VirtualDOM&lt;/strong&gt; instead of RealDOM considering that RealDOM manipulations are expensive.&lt;/li&gt; 
   &lt;li&gt;Supports &lt;strong&gt;server-side rendering&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Follows &lt;strong&gt;Unidirectional&lt;/strong&gt; data flow or data binding.&lt;/li&gt; 
   &lt;li&gt;Uses &lt;strong&gt;reusable/composable&lt;/strong&gt; UI components to develop the view.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSX?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;JSX&lt;/em&gt; is a XML-like syntax extension to ECMAScript (the acronym stands for &lt;em&gt;JavaScript XML&lt;/em&gt;). Basically it just provides syntactic sugar for the &lt;code&gt;React.createElement()&lt;/code&gt; function, giving us expressiveness of JavaScript along with HTML like template syntax.&lt;/p&gt; &lt;p&gt;In the example below text inside &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag is returned as JavaScript function to the render function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class App extends React.Component {
  render() {
    return(
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;{&#39;Welcome to React world!&#39;}&amp;lt;/h1&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Element and Component?&lt;/h3&gt; &lt;p&gt;An &lt;em&gt;Element&lt;/em&gt; is a plain object describing what you want to appear on the screen in terms of the DOM nodes or other components. &lt;em&gt;Elements&lt;/em&gt; can contain other &lt;em&gt;Elements&lt;/em&gt; in their props. Creating a React element is cheap. Once an element is created, it is never mutated.&lt;/p&gt; &lt;p&gt;The object representation of React Element would be as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const element = React.createElement(
  &#39;div&#39;,
  {id: &#39;login-btn&#39;},
  &#39;Login&#39;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above &lt;code&gt;React.createElement()&lt;/code&gt; function returns an object:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{
  type: &#39;div&#39;,
  props: {
    children: &#39;Login&#39;,
    id: &#39;login-btn&#39;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And finally it renders to the DOM using &lt;code&gt;ReactDOM.render()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&#39;login-btn&#39;&amp;gt;Login&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas a &lt;strong&gt;component&lt;/strong&gt; can be declared in several different ways. It can be a class with a &lt;code&gt;render()&lt;/code&gt; method or it can be defined as a function. In either case, it takes props as an input, and returns a JSX tree as the output:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Button = ({ onLogin }) =&amp;gt;
  &amp;lt;div id={&#39;login-btn&#39;} onClick={onLogin}&amp;gt;Login&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then JSX gets transpiled to a &lt;code&gt;React.createElement()&lt;/code&gt; function tree:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Button = ({ onLogin }) =&amp;gt; React.createElement(
  &#39;div&#39;,
  { id: &#39;login-btn&#39;, onClick: onLogin },
  &#39;Login&#39;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to create components in React?&lt;/h3&gt; &lt;p&gt;There are two possible ways to create a component.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function Components:&lt;/strong&gt; This is the simplest way to create a component. Those are pure JavaScript functions that accept props object as first parameter and return React elements:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function Greeting({ message }) {
  return &amp;lt;h1&amp;gt;{`Hello, ${message}`}&amp;lt;/h1&amp;gt;

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Class Components:&lt;/strong&gt; You can also use ES6 class to define a component. The above function component can be written as:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Greeting extends React.Component {
  render() {
    return &amp;lt;h1&amp;gt;{`Hello, ${this.props.message}`}&amp;lt;/h1&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;When to use a Class Component over a Function Component?&lt;/h3&gt; &lt;p&gt;If the component needs &lt;em&gt;state or lifecycle methods&lt;/em&gt; then use class component otherwise use function component. &lt;em&gt;However, from React 16.8 with the addition of Hooks, you could use state , lifecycle methods and other features that were only available in class component right in your function component.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are Pure Components?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;&lt;code&gt;React.PureComponent&lt;/code&gt;&lt;/em&gt; is exactly the same as &lt;em&gt;&lt;code&gt;React.Component&lt;/code&gt;&lt;/em&gt; except that it handles the &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; method for you. When props or state changes, &lt;em&gt;PureComponent&lt;/em&gt; will do a shallow comparison on both props and state. &lt;em&gt;Component&lt;/em&gt; on the other hand won&#39;t compare current props and state to next out of the box. Thus, the component will re-render by default whenever &lt;code&gt;shouldComponentUpdate&lt;/code&gt; is called.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is state in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;State&lt;/em&gt; of a component is an object that holds some information that may change over the lifetime of the component. We should always try to make our state as simple as possible and minimize the number of stateful components.&lt;/p&gt; &lt;p&gt;Let&#39;s create a user component with message state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class User extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      message: &#39;Welcome to React world&#39;
    }
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;{this.state.message}&amp;lt;/h1&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/state.jpg&quot; alt=&quot;state&quot;&gt;&lt;/p&gt; &lt;p&gt;State is similar to props, but it is private and fully controlled by the component. i.e, It is not accessible to any other component til the owner component decides to pass it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are props in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Props&lt;/em&gt; are inputs to components. They are single values or objects containing a set of values that are passed to components on creation using a naming convention similar to HTML-tag attributes. They are data passed down from a parent component to a child component.&lt;/p&gt; &lt;p&gt;The primary purpose of props in React is to provide following component functionality:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Pass custom data to your component.&lt;/li&gt; 
   &lt;li&gt;Trigger state changes.&lt;/li&gt; 
   &lt;li&gt;Use via &lt;code&gt;this.props.reactProp&lt;/code&gt; inside component&#39;s &lt;code&gt;render()&lt;/code&gt; method.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, let us create an element with &lt;code&gt;reactProp&lt;/code&gt; property:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Element reactProp={&#39;1&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This &lt;code&gt;reactProp&lt;/code&gt; (or whatever you came up with) name then becomes a property attached to React&#39;s native props object which originally already exists on all components created using React library.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;props.reactProp
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between state and props?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;props&lt;/em&gt; and &lt;em&gt;state&lt;/em&gt; are plain JavaScript objects. While both of them hold information that influences the output of render, they are different in their functionality with respect to component. Props get passed to the component similar to function parameters whereas state is managed within the component similar to variables declared within a function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;11&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should we not update the state directly?&lt;/h3&gt; &lt;p&gt;If you try to update the state directly then it won&#39;t re-render the component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Wrong
this.state.message = &#39;Hello world&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead use &lt;code&gt;setState()&lt;/code&gt; method. It schedules an update to a component&#39;s state object. When state changes, the component responds by re-rendering.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Correct
this.setState({ message: &#39;Hello World&#39; })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can directly assign to the state object either in &lt;em&gt;constructor&lt;/em&gt; or using latest javascript&#39;s class field declaration syntax.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;12&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of callback function as an argument of &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;The callback function is invoked when setState finished and the component gets rendered. Since &lt;code&gt;setState()&lt;/code&gt; is &lt;strong&gt;asynchronous&lt;/strong&gt; the callback function is used for any post action.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is recommended to use lifecycle method rather than this callback function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setState({ name: &#39;John&#39; }, () =&amp;gt; console.log(&#39;The name has updated and component re-rendered&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;13&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between HTML and React event handling?&lt;/h3&gt; &lt;p&gt;Below are some of the main differences between HTML and React event handling,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, the event name usually represents in &lt;em&gt;lowercase&lt;/em&gt; as a convention:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button onclick=&#39;activateLasers()&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React it follows &lt;em&gt;camelCase&lt;/em&gt; convention:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={activateLasers}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, you can return &lt;code&gt;false&lt;/code&gt; to prevent default behavior:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&#39;#&#39; onclick=&#39;console.log(&quot;The link was clicked.&quot;); return false;&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React you must call &lt;code&gt;preventDefault()&lt;/code&gt; explicitly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function handleClick(event) {
  event.preventDefault()
  console.log(&#39;The link was clicked.&#39;)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, you need to invoke the function by appending &lt;code&gt;()&lt;/code&gt; Whereas in react you should not append &lt;code&gt;()&lt;/code&gt; with the function name. (refer &quot;activateLasers&quot; function in the first point for example)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;14&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to bind methods or event handlers in JSX callbacks?&lt;/h3&gt; &lt;p&gt;There are 3 possible ways to achieve this:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Binding in Constructor:&lt;/strong&gt; In JavaScript classes, the methods are not bound by default. The same thing applies for React event handlers defined as class methods. Normally we bind them in constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
  constructor(props) {
    super(props)
    this.handleClick = this.handleClick.bind(this)
  }

  handleClick() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Public class fields syntax:&lt;/strong&gt; If you don&#39;t like to use bind approach then &lt;em&gt;public class fields syntax&lt;/em&gt; can be used to correctly bind callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;handleClick = () =&amp;gt; {
  console.log(&#39;this is:&#39;, this)
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;
  {&#39;Click me&#39;}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Arrow functions in callbacks:&lt;/strong&gt; You can use &lt;em&gt;arrow functions&lt;/em&gt; directly in the callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={(event) =&amp;gt; this.handleClick(event)}&amp;gt;
  {&#39;Click me&#39;}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the callback is passed as prop to child components, those components might do an extra re-rendering. In those cases, it is preferred to go with &lt;code&gt;.bind()&lt;/code&gt; or &lt;em&gt;public class fields syntax&lt;/em&gt; approach considering performance.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;15&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass a parameter to an event handler or callback?&lt;/h3&gt; &lt;p&gt;You can use an &lt;em&gt;arrow function&lt;/em&gt; to wrap around an &lt;em&gt;event handler&lt;/em&gt; and pass parameters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={() =&amp;gt; this.handleClick(id)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is an equivalent to calling &lt;code&gt;.bind&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick.bind(this, id)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Apart from these two approaches, you can also pass arguments to a function which is defined as arrow function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick(id)} /&amp;gt;
handleClick = (id) =&amp;gt; () =&amp;gt; {
    console.log(&quot;Hello, your ticket number is&quot;, id)
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;16&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are synthetic events in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;SyntheticEvent&lt;/code&gt; is a cross-browser wrapper around the browser&#39;s native event. It&#39;s API is same as the browser&#39;s native event, including &lt;code&gt;stopPropagation()&lt;/code&gt; and &lt;code&gt;preventDefault()&lt;/code&gt;, except the events work identically across all browsers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;17&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are inline conditional expressions?&lt;/h3&gt; &lt;p&gt;You can use either &lt;em&gt;if statements&lt;/em&gt; or &lt;em&gt;ternary expressions&lt;/em&gt; which are available from JS to conditionally render expressions. Apart from these approaches, you can also embed any expressions in JSX by wrapping them in curly braces and then followed by JS logical operator &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;h1&amp;gt;Hello!&amp;lt;/h1&amp;gt;
{
    messages.length &amp;gt; 0 &amp;amp;&amp;amp; !isLogin?
      &amp;lt;h2&amp;gt;
          You have {messages.length} unread messages.
      &amp;lt;/h2&amp;gt;
      :
      &amp;lt;h2&amp;gt;
          You don&#39;t have unread messages.
      &amp;lt;/h2&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;18&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is &quot;key&quot; prop and what is the benefit of using it in arrays of elements?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;key&lt;/code&gt; is a special string attribute you &lt;strong&gt;should&lt;/strong&gt; include when creating arrays of elements. &lt;em&gt;Key&lt;/em&gt; prop helps React identify which items have changed, are added, or are removed.&lt;/p&gt; &lt;p&gt;Most often we use ID from our data as &lt;em&gt;key&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const todoItems = todos.map((todo) =&amp;gt;
  &amp;lt;li key={todo.id}&amp;gt;
    {todo.text}
  &amp;lt;/li&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When you don&#39;t have stable IDs for rendered items, you may use the item &lt;em&gt;index&lt;/em&gt; as a &lt;em&gt;key&lt;/em&gt; as a last resort:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const todoItems = todos.map((todo, index) =&amp;gt;
  &amp;lt;li key={index}&amp;gt;
    {todo.text}
  &amp;lt;/li&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using &lt;em&gt;indexes&lt;/em&gt; for &lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;not recommended&lt;/strong&gt; if the order of items may change. This can negatively impact performance and may cause issues with component state.&lt;/li&gt; 
   &lt;li&gt;If you extract list item as separate component then apply &lt;em&gt;keys&lt;/em&gt; on list component instead of &lt;code&gt;li&lt;/code&gt; tag.&lt;/li&gt; 
   &lt;li&gt;There will be a warning message in the console if the &lt;code&gt;key&lt;/code&gt; prop is not present on list items.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;19&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of refs?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;ref&lt;/em&gt; is used to return a reference to the element. They &lt;em&gt;should be avoided&lt;/em&gt; in most cases, however, they can be useful when you need a direct access to the DOM element or an instance of a component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;20&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create refs?&lt;/h3&gt; &lt;p&gt;There are two approaches&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;This is a recently added approach. &lt;em&gt;Refs&lt;/em&gt; are created using &lt;code&gt;React.createRef()&lt;/code&gt; method and attached to React elements via the &lt;code&gt;ref&lt;/code&gt; attribute. In order to use &lt;em&gt;refs&lt;/em&gt; throughout the component, just assign the &lt;em&gt;ref&lt;/em&gt; to the instance property within constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.myRef = React.createRef()
  }
  render() {
    return &amp;lt;div ref={this.myRef} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use ref callbacks approach regardless of React version. For example, the search bar component&#39;s input element accessed as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class SearchBar extends Component {
   constructor(props) {
      super(props);
      this.txtSearch = null;
      this.state = { term: &#39;&#39; };
      this.setInputSearchRef = e =&amp;gt; {
         this.txtSearch = e;
      }
   }
   onInputChange(event) {
      this.setState({ term: this.txtSearch.value });
   }
   render() {
      return (
         &amp;lt;input
            value={this.state.term}
            onChange={this.onInputChange.bind(this)}
            ref={this.setInputSearchRef} /&amp;gt;
      );
   }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;You can also use &lt;em&gt;refs&lt;/em&gt; in function components using &lt;strong&gt;closures&lt;/strong&gt;. &lt;strong&gt;Note&lt;/strong&gt;: You can also use inline ref callbacks even though it is not a recommended approach&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;21&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are forward refs?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Ref forwarding&lt;/em&gt; is a feature that lets some components take a &lt;em&gt;ref&lt;/em&gt; they receive, and pass it further down to a child.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ButtonElement = React.forwardRef((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;CustomButton&quot;&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));

// Create ref to the DOM button:
const ref = React.createRef();
&amp;lt;ButtonElement ref={ref}&amp;gt;{&#39;Forward Ref&#39;}&amp;lt;/ButtonElement&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;22&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/h3&gt; &lt;p&gt;It is preferred to use &lt;em&gt;callback refs&lt;/em&gt; over &lt;code&gt;findDOMNode()&lt;/code&gt; API. Because &lt;code&gt;findDOMNode()&lt;/code&gt; prevents certain improvements in React in the future.&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;legacy&lt;/strong&gt; approach of using &lt;code&gt;findDOMNode&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends Component {
  componentDidMount() {
    findDOMNode(this).scrollIntoView()
  }

  render() {
    return &amp;lt;div /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The recommended approach is:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends Component {
  constructor(props){
    super(props);
    this.node = createRef();
  }
  componentDidMount() {
    this.node.current.scrollIntoView();
  }

  render() {
    return &amp;lt;div ref={this.node} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;23&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are String Refs legacy?&lt;/h3&gt; &lt;p&gt;If you worked with React before, you might be familiar with an older API where the &lt;code&gt;ref&lt;/code&gt; attribute is a string, like &lt;code&gt;ref={&#39;textInput&#39;}&lt;/code&gt;, and the DOM node is accessed as &lt;code&gt;this.refs.textInput&lt;/code&gt;. We advise against it because &lt;em&gt;string refs have below issues&lt;/em&gt;, and are considered legacy. String refs were &lt;strong&gt;removed in React v16&lt;/strong&gt;.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;They &lt;em&gt;force React to keep track of currently executing component&lt;/em&gt;. This is problematic because it makes react module stateful, and thus causes weird errors when react module is duplicated in the bundle.&lt;/li&gt; 
   &lt;li&gt;They are &lt;em&gt;not composable&lt;/em&gt; — if a library puts a ref on the passed child, the user can&#39;t put another ref on it. Callback refs are perfectly composable.&lt;/li&gt; 
   &lt;li&gt;They &lt;em&gt;don&#39;t work with static analysis&lt;/em&gt; like Flow. Flow can&#39;t guess the magic that framework does to make the string ref appear on &lt;code&gt;this.refs&lt;/code&gt;, as well as its type (which could be different). Callback refs are friendlier to static analysis.&lt;/li&gt; 
   &lt;li&gt;It doesn&#39;t work as most people would expect with the &quot;render callback&quot; pattern (e.g. 
    &lt;datagrid renderRow=&quot;{this.renderRow}&quot; /&gt;) &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends Component {
  renderRow = (index) =&amp;gt; {
    // This won&#39;t work. Ref will get attached to DataTable rather than MyComponent:
    return &amp;lt;input ref={&#39;input-&#39; + index} /&amp;gt;;

    // This would work though! Callback refs are awesome.
    return &amp;lt;input ref={input =&amp;gt; this[&#39;input-&#39; + index] = input} /&amp;gt;;
  }

  render() {
    return &amp;lt;DataTable data={this.props.data} renderRow={this.renderRow} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;24&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; (VDOM) is an in-memory representation of &lt;em&gt;Real DOM&lt;/em&gt;. The representation of a UI is kept in memory and synced with the &quot;real&quot; DOM. It&#39;s a step that happens between the render function being called and the displaying of elements on the screen. This entire process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;25&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Virtual DOM works?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; works in three simple steps.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Whenever any underlying data changes, the entire UI is re-rendered in Virtual DOM representation.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom1.png&quot; alt=&quot;vdom&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Then the difference between the previous DOM representation and the new one is calculated.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom2.png&quot; alt=&quot;vdom2&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Once the calculations are done, the real DOM will be updated with only the things that have actually changed.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom3.png&quot; alt=&quot;vdom3&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;26&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Shadow DOM&lt;/em&gt; is a browser technology designed primarily for scoping variables and CSS in &lt;em&gt;web components&lt;/em&gt;. The &lt;em&gt;Virtual DOM&lt;/em&gt; is a concept implemented by libraries in JavaScript on top of browser APIs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;27&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Fiber?&lt;/h3&gt; &lt;p&gt;Fiber is the new &lt;em&gt;reconciliation&lt;/em&gt; engine or reimplementation of core algorithm in React v16. The goal of React Fiber is to increase its suitability for areas like animation, layout, gestures, ability to pause, abort, or reuse work and assign priority to different types of updates; and new concurrency primitives.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;28&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main goal of React Fiber?&lt;/h3&gt; &lt;p&gt;The goal of &lt;em&gt;React Fiber&lt;/em&gt; is to increase its suitability for areas like animation, layout, and gestures. Its headline feature is &lt;strong&gt;incremental rendering&lt;/strong&gt;: the ability to split rendering work into chunks and spread it out over multiple frames.&lt;/p&gt; &lt;p&gt;&lt;em&gt;from documentation&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Its main goals are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Ability to split interruptible work in chunks.&lt;/li&gt; 
   &lt;li&gt;Ability to prioritize, rebase and reuse work in progress.&lt;/li&gt; 
   &lt;li&gt;Ability to yield back and forth between parents and children to support layout in React.&lt;/li&gt; 
   &lt;li&gt;Ability to return multiple elements from render().&lt;/li&gt; 
   &lt;li&gt;Better support for error boundaries.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;29&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are controlled components?&lt;/h3&gt; &lt;p&gt;A component that controls the input elements within the forms on subsequent user input is called &lt;strong&gt;Controlled Component&lt;/strong&gt;, i.e, every state mutation will have an associated handler function.&lt;/p&gt; &lt;p&gt;For example, to write all the names in uppercase letters, we use handleChange as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;handleChange(event) {
  this.setState({value: event.target.value.toUpperCase()})
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;30&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are uncontrolled components?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;Uncontrolled Components&lt;/strong&gt; are the ones that store their own state internally, and you query the DOM using a ref to find its current value when you need it. This is a bit more like traditional HTML.&lt;/p&gt; &lt;p&gt;In the below UserProfile component, the &lt;code&gt;name&lt;/code&gt; input is accessed using ref.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserProfile extends React.Component {
  constructor(props) {
    super(props)
    this.handleSubmit = this.handleSubmit.bind(this)
    this.input = React.createRef()
  }

  handleSubmit(event) {
    alert(&#39;A name was submitted: &#39; + this.input.current.value)
    event.preventDefault()
  }

  render() {
    return (
      &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
        &amp;lt;label&amp;gt;
          {&#39;Name:&#39;}
          &amp;lt;input type=&quot;text&quot; ref={this.input} /&amp;gt;
        &amp;lt;/label&amp;gt;
        &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
      &amp;lt;/form&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In most cases, it&#39;s recommend to use controlled components to implement forms.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;31&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between createElement and cloneElement?&lt;/h3&gt; &lt;p&gt;JSX elements will be transpiled to &lt;code&gt;React.createElement()&lt;/code&gt; functions to create React elements which are going to be used for the object representation of UI. Whereas &lt;code&gt;cloneElement&lt;/code&gt; is used to clone an element and pass it new props.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;32&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Lifting State Up in React?&lt;/h3&gt; &lt;p&gt;When several components need to share the same changing data then it is recommended to &lt;em&gt;lift the shared state up&lt;/em&gt; to their closest common ancestor. That means if two child components share the same data from its parent, then move the state to parent instead of maintaining local state in both of the child components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;33&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different phases of component lifecycle?&lt;/h3&gt; &lt;p&gt;The component lifecycle has three distinct lifecycle phases:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mounting:&lt;/strong&gt; The component is ready to mount in the browser DOM. This phase covers initialization from &lt;code&gt;constructor()&lt;/code&gt;, &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, and &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Updating:&lt;/strong&gt; In this phase, the component get updated in two ways, sending the new props and updating the state either from &lt;code&gt;setState()&lt;/code&gt; or &lt;code&gt;forceUpdate()&lt;/code&gt;. This phase covers &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;shouldComponentUpdate()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; and &lt;code&gt;componentDidUpdate()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unmounting:&lt;/strong&gt; In this last phase, the component is not needed and get unmounted from the browser DOM. This phase includes &lt;code&gt;componentWillUnmount()&lt;/code&gt; lifecycle method.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;It&#39;s worth mentioning that React internally has a concept of phases when applying changes to the DOM. They are separated as follows&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Render&lt;/strong&gt; The component will render without any side-effects. This applies for Pure components and in this phase, React can pause, abort, or restart the render.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pre-commit&lt;/strong&gt; Before the component actually applies the changes to the DOM, there is a moment that allows React to read from the DOM through the &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commit&lt;/strong&gt; React works with the DOM and executes the final lifecycles respectively &lt;code&gt;componentDidMount()&lt;/code&gt; for mounting, &lt;code&gt;componentDidUpdate()&lt;/code&gt; for updating, and &lt;code&gt;componentWillUnmount()&lt;/code&gt; for unmounting.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;React 16.3+ Phases (or an &lt;a href=&quot;http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&quot;&gt;interactive version&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases16.3.jpg&quot; alt=&quot;phases 16.3+&quot;&gt;&lt;/p&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases.png&quot; alt=&quot;phases 16.2&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;34&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the lifecycle methods of React?&lt;/h3&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillMount:&lt;/strong&gt; Executed before rendering and is used for App level configuration in your root component.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and here all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillReceiveProps:&lt;/strong&gt; Executed when particular prop updates to trigger state transitions.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn&#39;t need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUpdate:&lt;/strong&gt; Executed before re-rendering the component when there are props &amp;amp; state changes confirmed by &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; which returns true.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUnmount:&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;React 16.3+&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;getDerivedStateFromProps:&lt;/strong&gt; Invoked right before calling &lt;code&gt;render()&lt;/code&gt; and is invoked on &lt;em&gt;every&lt;/em&gt; render. This exists for rare use cases where you need derived state. Worth reading &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;if you need derived state&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and where all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn&#39;t need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;getSnapshotBeforeUpdate:&lt;/strong&gt; Executed right before rendered output is committed to the DOM. Any value returned by this will be passed into &lt;code&gt;componentDidUpdate()&lt;/code&gt;. This is useful to capture information from the DOM i.e. scroll position.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes. This will not fire if &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUnmount&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;35&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Higher-Order Components?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;higher-order component&lt;/em&gt; (&lt;em&gt;HOC&lt;/em&gt;) is a function that takes a component and returns a new component. Basically, it&#39;s a pattern that is derived from React&#39;s compositional nature.&lt;/p&gt; &lt;p&gt;We call them &lt;strong&gt;pure components&lt;/strong&gt; because they can accept any dynamically provided child component but they won&#39;t modify or copy any behavior from their input components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const EnhancedComponent = higherOrderComponent(WrappedComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;HOC can be used for many use cases:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Code reuse, logic and bootstrap abstraction.&lt;/li&gt; 
   &lt;li&gt;Render hijacking.&lt;/li&gt; 
   &lt;li&gt;State abstraction and manipulation.&lt;/li&gt; 
   &lt;li&gt;Props manipulation.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;36&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create props proxy for HOC component?&lt;/h3&gt; &lt;p&gt;You can add/edit props passed to the component using &lt;em&gt;props proxy&lt;/em&gt; pattern like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HOC(WrappedComponent) {
  return class Test extends Component {
    render() {
      const newProps = {
        title: &#39;New Header&#39;,
        footer: false,
        showFeatureX: false,
        showFeatureY: true
      }

      return &amp;lt;WrappedComponent {...this.props} {...newProps} /&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;37&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is context?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Context&lt;/em&gt; provides a way to pass data through the component tree without having to pass props down manually at every level.&lt;/p&gt; &lt;p&gt;For example, authenticated user, locale preference, UI theme need to be accessed in the application by many components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const {Provider, Consumer} = React.createContext(defaultValue)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;38&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is children prop?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Children&lt;/em&gt; is a prop (&lt;code&gt;this.props.children&lt;/code&gt;) that allow you to pass components as data to other components, just like any other prop you use. Component tree put between component&#39;s opening and closing tag will be passed to that component as &lt;code&gt;children&lt;/code&gt; prop.&lt;/p&gt; &lt;p&gt;There are a number of methods available in the React API to work with this prop. These include &lt;code&gt;React.Children.map&lt;/code&gt;, &lt;code&gt;React.Children.forEach&lt;/code&gt;, &lt;code&gt;React.Children.count&lt;/code&gt;, &lt;code&gt;React.Children.only&lt;/code&gt;, &lt;code&gt;React.Children.toArray&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;A simple usage of children prop looks as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyDiv = React.createClass({
  render: function() {
    return &amp;lt;div&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;
  }
})

ReactDOM.render(
  &amp;lt;MyDiv&amp;gt;
    &amp;lt;span&amp;gt;{&#39;Hello&#39;}&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;{&#39;World&#39;}&amp;lt;/span&amp;gt;
  &amp;lt;/MyDiv&amp;gt;,
  node
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;39&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to write comments in React?&lt;/h3&gt; &lt;p&gt;The comments in React/JSX are similar to JavaScript Multiline comments but are wrapped in curly braces.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Single-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div&amp;gt;
  {/* Single-line comments(In vanilla JavaScript, the single-line comments are represented by double slash(//)) */}
  {`Welcome ${user}, let&#39;s play React`}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Multi-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div&amp;gt;
  {/* Multi-line comments for more than
   one line */}
  {`Welcome ${user}, let&#39;s play React`}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;40&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of using super constructor with props argument?&lt;/h3&gt; &lt;p&gt;A child class constructor cannot make use of &lt;code&gt;this&lt;/code&gt; reference until &lt;code&gt;super()&lt;/code&gt; method has been called. The same applies for ES6 sub-classes as well. The main reason of passing props parameter to &lt;code&gt;super()&lt;/code&gt; call is to access &lt;code&gt;this.props&lt;/code&gt; in your child constructors.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Not passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super()

    console.log(this.props) // prints undefined

    // but props parameter is still available
    console.log(props) // prints { name: &#39;John&#39;, age: 42 }
  }

  render() {
    // no difference outside constructor
    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code snippets reveals that &lt;code&gt;this.props&lt;/code&gt; is different only within the constructor. It would be the same outside the constructor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;41&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is reconciliation?&lt;/h3&gt; &lt;p&gt;When a component&#39;s props or state change, React decides whether an actual DOM update is necessary by comparing the newly returned element with the previously rendered one. When they are not equal, React will update the DOM. This process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;42&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to set state with a dynamic key name?&lt;/h3&gt; &lt;p&gt;If you are using ES6 or the Babel transpiler to transform your JSX code then you can accomplish this with &lt;em&gt;computed property names&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;handleInputChange(event) {
  this.setState({ [event.target.id]: event.target.value })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;43&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What would be the common mistake of function being called every time the component renders?&lt;/h3&gt; &lt;p&gt;You need to make sure that function is not being called while passing the function as a parameter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  // Wrong: handleClick is called instead of passed as a reference!
  return &amp;lt;button onClick={this.handleClick()}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead, pass the function itself without parenthesis:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  // Correct: handleClick is passed as a reference!
  return &amp;lt;button onClick={this.handleClick}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;44&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is lazy function supports named exports?&lt;/h3&gt; No, currently &lt;code&gt;React.lazy&lt;/code&gt; function supports default exports only. If you would like to import modules which are named exports, you can create an intermediate module that reexports it as the default. It also ensures that tree shaking keeps working and don’t pull unused components. Let&#39;s take a component file which exports multiple named components, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// MoreComponents.js
export const SomeComponent = /* ... */;
export const UnusedComponent = /* ... */;
&lt;/code&gt;&lt;/pre&gt; and reexport &lt;code&gt;MoreComponents.js&lt;/code&gt; components in an intermediate file &lt;code&gt;IntermediateComponent.js&lt;/code&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// IntermediateComponent.js
export { SomeComponent as default } from &quot;./MoreComponents.js&quot;;
&lt;/code&gt;&lt;/pre&gt; Now you can import the module using lazy function as below, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { lazy } from &#39;react&#39;;
const SomeComponent = lazy(() =&amp;gt; import(&quot;./IntermediateComponent.js&quot;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;45&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why React uses &lt;code&gt;className&lt;/code&gt; over &lt;code&gt;class&lt;/code&gt; attribute?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;class&lt;/code&gt; is a keyword in JavaScript, and JSX is an extension of JavaScript. That&#39;s the principal reason why React uses &lt;code&gt;className&lt;/code&gt; instead of &lt;code&gt;class&lt;/code&gt;. Pass a string as the &lt;code&gt;className&lt;/code&gt; prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;span className={&#39;menu navigation-menu&#39;}&amp;gt;{&#39;Menu&#39;}&amp;lt;/span&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;46&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are fragments?&lt;/h3&gt; &lt;p&gt;It&#39;s a common pattern in React which is used for a component to return multiple elements. &lt;em&gt;Fragments&lt;/em&gt; let you group a list of children without adding extra nodes to the DOM.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return (
    &amp;lt;React.Fragment&amp;gt;
      &amp;lt;ChildA /&amp;gt;
      &amp;lt;ChildB /&amp;gt;
      &amp;lt;ChildC /&amp;gt;
    &amp;lt;/React.Fragment&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There is also a &lt;em&gt;shorter syntax&lt;/em&gt;, but it&#39;s not supported in many tools:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;ChildA /&amp;gt;
      &amp;lt;ChildB /&amp;gt;
      &amp;lt;ChildC /&amp;gt;
    &amp;lt;/&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;47&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why fragments are better than container divs?&lt;/h3&gt; &lt;p&gt;Below are the list of reasons,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Fragments are a bit faster and use less memory by not creating an extra DOM node. This only has a real benefit on very large and deep trees.&lt;/li&gt; 
   &lt;li&gt;Some CSS mechanisms like &lt;em&gt;Flexbox&lt;/em&gt; and &lt;em&gt;CSS Grid&lt;/em&gt; have a special parent-child relationships, and adding divs in the middle makes it hard to keep the desired layout.&lt;/li&gt; 
   &lt;li&gt;The DOM Inspector is less cluttered.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;48&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are portals in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Portal&lt;/em&gt; is a recommended way to render children into a DOM node that exists outside the DOM hierarchy of the parent component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactDOM.createPortal(child, container)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The first argument is any render-able React child, such as an element, string, or fragment. The second argument is a DOM element.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;49&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are stateless components?&lt;/h3&gt; &lt;p&gt;If the behaviour is independent of its state then it can be a stateless component. You can use either a function or a class for creating stateless components. But unless you need to use a lifecycle hook in your components, you should go for function components. There are a lot of benefits if you decide to use function components here; they are easy to write, understand, and test, a little faster, and you can avoid the &lt;code&gt;this&lt;/code&gt; keyword altogether.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;50&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are stateful components?&lt;/h3&gt; &lt;p&gt;If the behaviour of a component is dependent on the &lt;em&gt;state&lt;/em&gt; of the component then it can be termed as stateful component. These &lt;em&gt;stateful components&lt;/em&gt; are always &lt;em&gt;class components&lt;/em&gt; and have a state that gets initialized in the &lt;code&gt;constructor&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends Component {
  constructor(props) {
    super(props)
    this.state = { count: 0 }
  }

  render() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;React 16.8 Update:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Hooks let you use state and other React features without writing classes.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; import React, {useState} from &#39;react&#39;;

 const App = (props) =&amp;gt; {
   const [count, setCount] = useState(0);

   return (
     // JSX
   )
 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;51&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to apply validation on props in React?&lt;/h3&gt; &lt;p&gt;When the application is running in &lt;em&gt;development mode&lt;/em&gt;, React will automatically check all props that we set on components to make sure they have &lt;em&gt;correct type&lt;/em&gt;. If the type is incorrect, React will generate warning messages in the console. It&#39;s disabled in &lt;em&gt;production mode&lt;/em&gt; due to performance impact. The mandatory props are defined with &lt;code&gt;isRequired&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The set of predefined prop types:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.func&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.node&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.element&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.bool&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.any&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;We can define &lt;code&gt;propTypes&lt;/code&gt; for &lt;code&gt;User&lt;/code&gt; component as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import PropTypes from &#39;prop-types&#39;

class User extends React.Component {
  static propTypes = {
    name: PropTypes.string.isRequired,
    age: PropTypes.number.isRequired
  }

  render() {
    return (
      &amp;lt;&amp;gt;
        &amp;lt;h1&amp;gt;{`Welcome, ${this.props.name}`}&amp;lt;/h1&amp;gt;
        &amp;lt;h2&amp;gt;{`Age, ${this.props.age}`}&amp;lt;/h2&amp;gt;
      &amp;lt;/&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In React v15.5 &lt;em&gt;PropTypes&lt;/em&gt; were moved from &lt;code&gt;React.PropTypes&lt;/code&gt; to &lt;code&gt;prop-types&lt;/code&gt; library.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import PropTypes from &#39;prop-types&#39;

function User({name, age}) {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;{`Welcome, ${name}`}&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;{`Age, ${age}`}&amp;lt;/h2&amp;gt;
    &amp;lt;/&amp;gt;
  )
}

User.propTypes = {
    name: PropTypes.string.isRequired,
    age: PropTypes.number.isRequired
  }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;52&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of React?&lt;/h3&gt; &lt;p&gt;Below are the list of main advantages of React,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Increases the application&#39;s performance with &lt;em&gt;Virtual DOM&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;JSX makes code easy to read and write.&lt;/li&gt; 
   &lt;li&gt;It renders both on client and server side (&lt;em&gt;SSR&lt;/em&gt;).&lt;/li&gt; 
   &lt;li&gt;Easy to integrate with frameworks (Angular, Backbone) since it is only a view library.&lt;/li&gt; 
   &lt;li&gt;Easy to write unit and integration tests with tools such as Jest.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;53&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the limitations of React?&lt;/h3&gt; &lt;p&gt;Apart from the advantages, there are few limitations of React too,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React is just a view library, not a full framework.&lt;/li&gt; 
   &lt;li&gt;There is a learning curve for beginners who are new to web development.&lt;/li&gt; 
   &lt;li&gt;Integrating React into a traditional MVC framework requires some additional configuration.&lt;/li&gt; 
   &lt;li&gt;The code complexity increases with inline templating and JSX.&lt;/li&gt; 
   &lt;li&gt;Too many smaller components leading to over engineering or boilerplate.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;54&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are error boundaries in React v16?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Error boundaries&lt;/em&gt; are components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed.&lt;/p&gt; &lt;p&gt;A class component becomes an error boundary if it defines a new lifecycle method called &lt;code&gt;componentDidCatch(error, info)&lt;/code&gt; or &lt;code&gt;static getDerivedStateFromError() &lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props)
    this.state = { hasError: false }
  }

  componentDidCatch(error, info) {
    // You can also log the error to an error reporting service
    logErrorToMyService(error, info)
  }

  static getDerivedStateFromError(error) {
     // Update state so the next render will show the fallback UI.
     return { hasError: true };
   }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return &amp;lt;h1&amp;gt;{&#39;Something went wrong.&#39;}&amp;lt;/h1&amp;gt;
    }
    return this.props.children
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that use it as a regular component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;ErrorBoundary&amp;gt;
  &amp;lt;MyWidget /&amp;gt;
&amp;lt;/ErrorBoundary&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;55&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How error boundaries handled in React v15?&lt;/h3&gt; &lt;p&gt;React v15 provided very basic support for &lt;em&gt;error boundaries&lt;/em&gt; using &lt;code&gt;unstable_handleError&lt;/code&gt; method. It has been renamed to &lt;code&gt;componentDidCatch&lt;/code&gt; in React v16.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;56&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the recommended ways for static type checking?&lt;/h3&gt; &lt;p&gt;Normally we use &lt;em&gt;PropTypes library&lt;/em&gt; (&lt;code&gt;React.PropTypes&lt;/code&gt; moved to a &lt;code&gt;prop-types&lt;/code&gt; package since React v15.5) for &lt;em&gt;type checking&lt;/em&gt; in the React applications. For large code bases, it is recommended to use &lt;em&gt;static type checkers&lt;/em&gt; such as Flow or TypeScript, that perform type checking at compile time and provide auto-completion features.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;57&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of &lt;code&gt;react-dom&lt;/code&gt; package?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-dom&lt;/code&gt; package provides &lt;em&gt;DOM-specific methods&lt;/em&gt; that can be used at the top level of your app. Most of the components are not required to use this module. Some of the methods of this package are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;hydrate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;unmountComponentAtNode()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;findDOMNode()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;createPortal()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;58&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of render method of &lt;code&gt;react-dom&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;This method is used to render a React element into the DOM in the supplied container and return a reference to the component. If the React element was previously rendered into container, it will perform an update on it and only mutate the DOM as necessary to reflect the latest changes.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ReactDOM.render(element, container[, callback])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the optional callback is provided, it will be executed after the component is rendered or updated.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;59&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is ReactDOMServer?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;ReactDOMServer&lt;/code&gt; object enables you to render components to static markup (typically used on node server). This object is mainly used for &lt;em&gt;server-side rendering&lt;/em&gt; (SSR). The following methods can be used in both the server and browser environments:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;renderToString()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;renderToStaticMarkup()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, you generally run a Node-based web server like Express, Hapi, or Koa, and you call &lt;code&gt;renderToString&lt;/code&gt; to render your root component to a string, which you then send as response.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// using Express
import { renderToString } from &#39;react-dom/server&#39;
import MyPage from &#39;./MyPage&#39;

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
  res.write(&#39;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;My Page&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&#39;)
  res.write(&#39;&amp;lt;div id=&quot;content&quot;&amp;gt;&#39;)
  res.write(renderToString(&amp;lt;MyPage/&amp;gt;))
  res.write(&#39;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;)
  res.end()
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;60&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use innerHTML in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute is React&#39;s replacement for using &lt;code&gt;innerHTML&lt;/code&gt; in the browser DOM. Just like &lt;code&gt;innerHTML&lt;/code&gt;, it is risky to use this attribute considering cross-site scripting (XSS) attacks. You just need to pass a &lt;code&gt;__html&lt;/code&gt; object as key and HTML text as value.&lt;/p&gt; &lt;p&gt;In this example MyComponent uses &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute for setting HTML markup:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function createMarkup() {
  return { __html: &#39;First &amp;amp;middot; Second&#39; }
}

function MyComponent() {
  return &amp;lt;div dangerouslySetInnerHTML={createMarkup()} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;61&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use styles in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;style&lt;/code&gt; attribute accepts a JavaScript object with camelCased properties rather than a CSS string. This is consistent with the DOM style JavaScript property, is more efficient, and prevents XSS security holes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const divStyle = {
  color: &#39;blue&#39;,
  backgroundImage: &#39;url(&#39; + imgUrl + &#39;)&#39;
};

function HelloWorldComponent() {
  return &amp;lt;div style={divStyle}&amp;gt;Hello World!&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Style keys are camelCased in order to be consistent with accessing the properties on DOM nodes in JavaScript (e.g. &lt;code&gt;node.style.backgroundImage&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;62&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How events are different in React?&lt;/h3&gt; &lt;p&gt;Handling events in React elements has some syntactic differences:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React event handlers are named using camelCase, rather than lowercase.&lt;/li&gt; 
   &lt;li&gt;With JSX you pass a function as the event handler, rather than a string.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;63&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What will happen if you use &lt;code&gt;setState()&lt;/code&gt; in constructor?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt;, then apart from assigning to the object state React also re-renders the component and all its children. You would get error like this: &lt;em&gt;Can only update a mounted or mounting component.&lt;/em&gt; So we need to use &lt;code&gt;this.state&lt;/code&gt; to initialize variables inside constructor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;64&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the impact of indexes as keys?&lt;/h3&gt; &lt;p&gt;Keys should be stable, predictable, and unique so that React can keep track of elements.&lt;/p&gt; &lt;p&gt;In the below code snippet each element&#39;s key will be based on ordering, rather than tied to the data that is being represented. This limits the optimizations that React can do.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;{todos.map((todo, index) =&amp;gt;
  &amp;lt;Todo
    {...todo}
    key={index}
  /&amp;gt;
)}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you use element data for unique key, assuming todo.id is unique to this list and stable, React would be able to reorder elements without needing to reevaluate them as much.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;{todos.map((todo) =&amp;gt;
  &amp;lt;Todo {...todo}
    key={todo.id} /&amp;gt;
)}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;65&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it good to use &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillMount()&lt;/code&gt; method?&lt;/h3&gt; &lt;p&gt;Yes, it is safe to use &lt;code&gt;setState()&lt;/code&gt; inside &lt;code&gt;componentWillMount()&lt;/code&gt; method. But at the same it is recommended to avoid async initialization in &lt;code&gt;componentWillMount()&lt;/code&gt; lifecycle method. &lt;code&gt;componentWillMount()&lt;/code&gt; is invoked immediately before mounting occurs. It is called before &lt;code&gt;render()&lt;/code&gt;, therefore setting state in this method will not trigger a re-render. Avoid introducing any side-effects or subscriptions in this method. We need to make sure async calls for component initialization happened in &lt;code&gt;componentDidMount()&lt;/code&gt; instead of &lt;code&gt;componentWillMount()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;componentDidMount() {
  axios.get(`api/todos`)
    .then((result) =&amp;gt; {
      this.setState({
        messages: [...result.data]
      })
    })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;66&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What will happen if you use props in initial state?&lt;/h3&gt; &lt;p&gt;If the props on the component are changed without the component being refreshed, the new prop value will never be displayed because the constructor function will never update the current state of the component. The initialization of state from props only runs when the component is first created.&lt;/p&gt; &lt;p&gt;The below component won&#39;t display the updated input value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      records: [],
      inputValue: this.props.inputValue
    };
  }

  render() {
    return &amp;lt;div&amp;gt;{this.state.inputValue}&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using props inside render method will update the value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      record: []
    }
  }

  render() {
    return &amp;lt;div&amp;gt;{this.props.inputValue}&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;67&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you conditionally render components?&lt;/h3&gt; &lt;p&gt;In some cases you want to render different components depending on some state. JSX does not render &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, so you can use conditional &lt;em&gt;short-circuiting&lt;/em&gt; to render a given part of your component only if a certain condition is true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = ({ name, address }) =&amp;gt; (
  &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;
    {address &amp;amp;&amp;amp;
      &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;
    }
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you need an &lt;code&gt;if-else&lt;/code&gt; condition then use &lt;em&gt;ternary operator&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = ({ name, address }) =&amp;gt; (
  &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;
    {address
      ? &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;
      : &amp;lt;p&amp;gt;{&#39;Address is not available&#39;}&amp;lt;/p&amp;gt;
    }
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;68&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why we need to be careful when spreading props on DOM elements?&lt;/h3&gt; &lt;p&gt;When we &lt;em&gt;spread props&lt;/em&gt; we run into the risk of adding unknown HTML attributes, which is a bad practice. Instead we can use prop destructuring with &lt;code&gt;...rest&lt;/code&gt; operator, so it will add only required props.&lt;/p&gt; &lt;p&gt;For example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ComponentA = () =&amp;gt;
  &amp;lt;ComponentB isDisplay={true} className={&#39;componentStyle&#39;} /&amp;gt;

const ComponentB = ({ isDisplay, ...domProps }) =&amp;gt;
  &amp;lt;div {...domProps}&amp;gt;{&#39;ComponentB&#39;}&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;69&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How you use decorators in React?&lt;/h3&gt; &lt;p&gt;You can &lt;em&gt;decorate&lt;/em&gt; your &lt;em&gt;class&lt;/em&gt; components, which is the same as passing the component into a function. &lt;strong&gt;Decorators&lt;/strong&gt; are flexible and readable way of modifying component functionality.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;@setTitle(&#39;Profile&#39;)
class Profile extends React.Component {
    //....
}

/*
  title is a string that will be set as a document title
  WrappedComponent is what our decorator will receive when
  put directly above a component class as seen in the example above
*/
const setTitle = (title) =&amp;gt; (WrappedComponent) =&amp;gt; {
  return class extends React.Component {
    componentDidMount() {
      document.title = title
    }

    render() {
      return &amp;lt;WrappedComponent {...this.props} /&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Decorators are a feature that didn&#39;t make it into ES7, but are currently a &lt;em&gt;stage 2 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;70&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you memoize a component?&lt;/h3&gt; &lt;p&gt;There are memoize libraries available which can be used on function components.&lt;/p&gt; &lt;p&gt;For example &lt;code&gt;moize&lt;/code&gt; library can memoize the component in another component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import moize from &#39;moize&#39;
import Component from &#39;./components/Component&#39; // this module exports a non-memoized component

const MemoizedFoo = moize.react(Component)

const Consumer = () =&amp;gt; {
  &amp;lt;div&amp;gt;
    {&#39;I will memoize the following entry:&#39;}
    &amp;lt;MemoizedFoo/&amp;gt;
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Since React v16.6.0, we have a &lt;code&gt;React.memo&lt;/code&gt;. It provides a higher order component which memoizes component unless the props change. To use it, simply wrap the component using React.memo before you use it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  const MemoComponent = React.memo(function MemoComponent(props) {
    /* render using props */
  });
  OR
  export default React.memo(MyFunctionComponent);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;71&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How you implement Server Side Rendering or SSR?&lt;/h3&gt; &lt;p&gt;React is already equipped to handle rendering on Node servers. A special version of the DOM renderer is available, which follows the same pattern as on the client side.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ReactDOMServer from &#39;react-dom/server&#39;
import App from &#39;./App&#39;

ReactDOMServer.renderToString(&amp;lt;App /&amp;gt;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This method will output the regular HTML as a string, which can be then placed inside a page body as part of the server response. On the client side, React detects the pre-rendered content and seamlessly picks up where it left off.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;72&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to enable production mode in React?&lt;/h3&gt; &lt;p&gt;You should use Webpack&#39;s &lt;code&gt;DefinePlugin&lt;/code&gt; method to set &lt;code&gt;NODE_ENV&lt;/code&gt; to &lt;code&gt;production&lt;/code&gt;, by which it strip out things like propType validation and extra warnings. Apart from this, if you minify the code, for example, Uglify&#39;s dead-code elimination to strip out development only code and comments, it will drastically reduce the size of your bundle.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;73&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is CRA and its benefits?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;create-react-app&lt;/code&gt; CLI tool allows you to quickly create &amp;amp; run React applications with no configuration step.&lt;/p&gt; &lt;p&gt;Let&#39;s create Todo App using &lt;em&gt;CRA&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;# Installation
$ npm install -g create-react-app

# Create new project
$ create-react-app todo-app
$ cd todo-app

# Build, test and run
$ npm run build
$ npm run test
$ npm start
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It includes everything we need to build a React app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React, JSX, ES6, and Flow syntax support.&lt;/li&gt; 
   &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; 
   &lt;li&gt;Autoprefixed CSS, so you don’t need -webkit- or other prefixes.&lt;/li&gt; 
   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; 
   &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; 
   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;74&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the lifecycle methods order in mounting?&lt;/h3&gt; &lt;p&gt;The lifecycle methods are called in the following order when an instance of a component is being created and inserted into the DOM.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;static getDerivedStateFromProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;75&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/h3&gt; &lt;p&gt;The following lifecycle methods going to be unsafe coding practices and will be more problematic with async rendering.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Starting with React v16.3 these methods are aliased with &lt;code&gt;UNSAFE_&lt;/code&gt; prefix, and the unprefixed version will be removed in React v17.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;76&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new static &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method is invoked after a component is instantiated as well as before it is re-rendered. It can return an object to update state, or &lt;code&gt;null&lt;/code&gt; to indicate that the new props do not require any state updates.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  static getDerivedStateFromProps(props, state) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillReceiveProps()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;77&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method is called right before DOM updates. The return value from this method will be passed as the third parameter to &lt;code&gt;componentDidUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  getSnapshotBeforeUpdate(prevProps, prevState) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;78&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do Hooks replace render props and higher order components?&lt;/h3&gt; &lt;p&gt;Both render props and higher-order components render only a single child but in most of the cases Hooks are a simpler way to serve this by reducing nesting in your tree.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;79&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended way for naming components?&lt;/h3&gt; &lt;p&gt;It is recommended to name the component by reference instead of using &lt;code&gt;displayName&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;displayName&lt;/code&gt; for naming component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export default React.createClass({
  displayName: &#39;TodoApp&#39;,
  // ...
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;strong&gt;recommended&lt;/strong&gt; approach:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export default class TodoApp extends React.Component {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;80&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended ordering of methods in component class?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Recommended&lt;/em&gt; ordering of methods from &lt;em&gt;mounting&lt;/em&gt; to &lt;em&gt;render stage&lt;/em&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;static&lt;/code&gt; methods&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;getChildContext()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;shouldComponentUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUnmount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;click handlers or event handlers like &lt;code&gt;onClickSubmit()&lt;/code&gt; or &lt;code&gt;onChangeDescription()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;getter methods for render like &lt;code&gt;getSelectReason()&lt;/code&gt; or &lt;code&gt;getFooterContent()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;optional render methods like &lt;code&gt;renderNavigation()&lt;/code&gt; or &lt;code&gt;renderProfilePicture()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;81&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is a switching component?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;switching component&lt;/em&gt; is a component that renders one of many components. We need to use object to map prop values to components.&lt;/p&gt; &lt;p&gt;For example, a switching component to display different pages based on &lt;code&gt;page&lt;/code&gt; prop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import HomePage from &#39;./HomePage&#39;
import AboutPage from &#39;./AboutPage&#39;
import ServicesPage from &#39;./ServicesPage&#39;
import ContactPage from &#39;./ContactPage&#39;

const PAGES = {
  home: HomePage,
  about: AboutPage,
  services: ServicesPage,
  contact: ContactPage
}

const Page = (props) =&amp;gt; {
  const Handler = PAGES[props.page] || ContactPage

  return &amp;lt;Handler {...props} /&amp;gt;
}

// The keys of the PAGES object can be used in the prop types to catch dev-time errors.
Page.propTypes = {
  page: PropTypes.oneOf(Object.keys(PAGES)).isRequired
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;82&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why we need to pass a function to setState()?&lt;/h3&gt; &lt;p&gt;The reason behind for this is that &lt;code&gt;setState()&lt;/code&gt; is an asynchronous operation. React batches state changes for performance reasons, so the state may not change immediately after &lt;code&gt;setState()&lt;/code&gt; is called. That means you should not rely on the current state when calling &lt;code&gt;setState()&lt;/code&gt; since you can&#39;t be sure what that state will be. The solution is to pass a function to &lt;code&gt;setState()&lt;/code&gt;, with the previous state as an argument. By doing this you can avoid issues with the user getting the old state value on access due to the asynchronous nature of &lt;code&gt;setState()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Let&#39;s say the initial count value is zero. After three consecutive increment operations, the value is going to be incremented only by one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// assuming this.state.count === 0
this.setState({ count: this.state.count + 1 })
this.setState({ count: this.state.count + 1 })
this.setState({ count: this.state.count + 1 })
// this.state.count === 0, not 3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we pass a function to &lt;code&gt;setState()&lt;/code&gt;, the count gets incremented correctly.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.setState((prevState, props) =&amp;gt; ({
  count: prevState.count + props.increment
}))
// this.state.count === 3 as expected
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;(OR)&lt;/strong&gt;&lt;/p&gt; &lt;h3&gt;Why function is preferred over object for &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;React may batch multiple &lt;code&gt;setState()&lt;/code&gt; calls into a single update for performance. Because &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; may be updated asynchronously, you should not rely on their values for calculating the next state.&lt;/p&gt; &lt;p&gt;This counter example will fail to update as expected:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Wrong
this.setState({
  counter: this.state.counter + this.props.increment,
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The preferred approach is to call &lt;code&gt;setState()&lt;/code&gt; with function rather than object. That function will receive the previous state as the first argument, and the props at the time the update is applied as the second argument.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Correct
this.setState((prevState, props) =&amp;gt; ({
  counter: prevState.counter + props.increment
}))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;83&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is strict mode in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; is a useful component for highlighting potential problems in an application. Just like &lt;code&gt;&amp;lt;Fragment&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;StrictMode&amp;gt;&lt;/code&gt; does not render any extra DOM elements. It activates additional checks and warnings for its descendants. These checks apply for &lt;em&gt;development mode&lt;/em&gt; only.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;

function ExampleApplication() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Header /&amp;gt;
      &amp;lt;React.StrictMode&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;ComponentOne /&amp;gt;
          &amp;lt;ComponentTwo /&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/React.StrictMode&amp;gt;
      &amp;lt;Header /&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the example above, the &lt;em&gt;strict mode&lt;/em&gt; checks apply to &lt;code&gt;&amp;lt;ComponentOne&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ComponentTwo&amp;gt;&lt;/code&gt; components only.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;84&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are React Mixins?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Mixins&lt;/em&gt; are a way to totally separate components to have a common functionality. Mixins &lt;strong&gt;should not be used&lt;/strong&gt; and can be replaced with &lt;em&gt;higher-order components&lt;/em&gt; or &lt;em&gt;decorators&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;One of the most commonly used mixins is &lt;code&gt;PureRenderMixin&lt;/code&gt;. You might be using it in some components to prevent unnecessary re-renders when the props and state are shallowly equal to the previous props and state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const PureRenderMixin = require(&#39;react-addons-pure-render-mixin&#39;)

const Button = React.createClass({
  mixins: [PureRenderMixin],
  // ...
})
&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- TODO: mixins are deprecated --&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;85&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is &lt;code&gt;isMounted()&lt;/code&gt; an anti-pattern and what is the proper solution?&lt;/h3&gt; &lt;p&gt;The primary use case for &lt;code&gt;isMounted()&lt;/code&gt; is to avoid calling &lt;code&gt;setState()&lt;/code&gt; after a component has been unmounted, because it will emit a warning.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (this.isMounted()) {
  this.setState({...})
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Checking &lt;code&gt;isMounted()&lt;/code&gt; before calling &lt;code&gt;setState()&lt;/code&gt; does eliminate the warning, but it also defeats the purpose of the warning. Using &lt;code&gt;isMounted()&lt;/code&gt; is a code smell because the only reason you would check is because you think you might be holding a reference after the component has unmounted.&lt;/p&gt; &lt;p&gt;An optimal solution would be to find places where &lt;code&gt;setState()&lt;/code&gt; might be called after a component has unmounted, and fix them. Such situations most commonly occur due to callbacks, when a component is waiting for some data and gets unmounted before the data arrives. Ideally, any callbacks should be canceled in &lt;code&gt;componentWillUnmount()&lt;/code&gt;, prior to unmounting.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;86&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the Pointer Events supported in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Pointer Events&lt;/em&gt; provide a unified way of handling all input events. In the old days we had a mouse and respective event listeners to handle them but nowadays we have many devices which don&#39;t correlate to having a mouse, like phones with touch surface or pens. We need to remember that these events will only work in browsers that support the &lt;em&gt;Pointer Events&lt;/em&gt; specification.&lt;/p&gt; &lt;p&gt;The following event types are now available in &lt;em&gt;React DOM&lt;/em&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;onPointerDown&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerMove&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerUp&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerCancel&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onGotPointerCapture&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onLostPointerCapture&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerEnter&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerLeave&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerOver&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerOut&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;87&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should component names start with capital letter?&lt;/h3&gt; &lt;p&gt;If you are rendering your component using JSX, the name of that component has to begin with a capital letter otherwise React will throw an error as unrecognized tag. This convention is because only HTML elements and SVG tags can begin with a lowercase letter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class SomeComponent extends Component {
 // Code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can define component class which name starts with lowercase letter, but when it&#39;s imported it should have capital letter. Here lowercase is fine:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class myComponent extends Component {
  render() {
    return &amp;lt;div /&amp;gt;
  }
}

export default myComponent
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While when imported in another file it should start with capital letter:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import MyComponent from &#39;./MyComponent&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;h4&gt;What are the exceptions on React component naming?&lt;/h4&gt; &lt;p&gt;The component names should start with a uppercase letter but there are few exceptions on this convention. The lowercase tag names with a dot (property accessors) are still considered as valid component names. For example the below tag can be compiled to a valid component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;     render() {
          return (
            &amp;lt;obj.component/&amp;gt; // `React.createElement(obj.component)`
          )
    }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;88&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Are custom DOM attributes supported in React v16?&lt;/h3&gt; &lt;p&gt;Yes. In the past, React used to ignore unknown DOM attributes. If you wrote JSX with an attribute that React doesn&#39;t recognize, React would just skip it.&lt;/p&gt; &lt;p&gt;For example, let&#39;s take a look at the below attribute:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div mycustomattribute={&#39;something&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Would render an empty div to the DOM with React v15:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In React v16 any unknown attributes will end up in the DOM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div mycustomattribute=&#39;something&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful for supplying browser-specific non-standard attributes, trying new DOM APIs, and integrating with opinionated third-party libraries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;89&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between constructor and getInitialState?&lt;/h3&gt; &lt;p&gt;You should initialize state in the constructor when using ES6 classes, and &lt;code&gt;getInitialState()&lt;/code&gt; method when using &lt;code&gt;React.createClass()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using ES6 classes:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.state = { /* initial state */ }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const MyComponent = React.createClass({
  getInitialState() {
    return { /* initial state */ }
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;React.createClass()&lt;/code&gt; is deprecated and removed in React v16. Use plain JavaScript classes instead.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;90&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you force a component to re-render without calling setState?&lt;/h3&gt; &lt;p&gt;By default, when your component&#39;s state or props change, your component will re-render. If your &lt;code&gt;render()&lt;/code&gt; method depends on some other data, you can tell React that the component needs re-rendering by calling &lt;code&gt;forceUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;component.forceUpdate(callback)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is recommended to avoid all uses of &lt;code&gt;forceUpdate()&lt;/code&gt; and only read from &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; in &lt;code&gt;render()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;91&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;super()&lt;/code&gt; and &lt;code&gt;super(props)&lt;/code&gt; in React using ES6 classes?&lt;/h3&gt; &lt;p&gt;When you want to access &lt;code&gt;this.props&lt;/code&gt; in &lt;code&gt;constructor()&lt;/code&gt; then you should pass props to &lt;code&gt;super()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super(props)&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    console.log(this.props) // { name: &#39;John&#39;, ... }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super()
    console.log(this.props) // undefined
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Outside &lt;code&gt;constructor()&lt;/code&gt; both will display same value for &lt;code&gt;this.props&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;92&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to loop inside JSX?&lt;/h3&gt; &lt;p&gt;You can simply use &lt;code&gt;Array.prototype.map&lt;/code&gt; with ES6 &lt;em&gt;arrow function&lt;/em&gt; syntax.&lt;/p&gt; &lt;p&gt;For example, the &lt;code&gt;items&lt;/code&gt; array of objects is mapped into an array of components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;tbody&amp;gt;
  {items.map(item =&amp;gt; &amp;lt;SomeComponent key={item.id} name={item.name} /&amp;gt;)}
&amp;lt;/tbody&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can&#39;t iterate using &lt;code&gt;for&lt;/code&gt; loop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;tbody&amp;gt;
  for (let i = 0; i &amp;lt; items.length; i++) {
    &amp;lt;SomeComponent key={items[i].id} name={items[i].name} /&amp;gt;
  }
&amp;lt;/tbody&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is because JSX tags are transpiled into &lt;em&gt;function calls&lt;/em&gt;, and you can&#39;t use statements inside expressions. This may change thanks to &lt;code&gt;do&lt;/code&gt; expressions which are &lt;em&gt;stage 1 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;93&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access props in attribute quotes?&lt;/h3&gt; &lt;p&gt;React (or JSX) doesn&#39;t support variable interpolation inside an attribute value. The below representation won&#39;t work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src=&#39;images/{this.props.image}&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can put any JS expression inside curly braces as the entire attribute value. So the below expression works:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src={&#39;images/&#39; + this.props.image} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using &lt;em&gt;template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src={`images/${this.props.image}`} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;94&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React proptype array with shape?&lt;/h3&gt; &lt;p&gt;If you want to pass an array of objects to a component with a particular shape then use &lt;code&gt;React.PropTypes.shape()&lt;/code&gt; as an argument to &lt;code&gt;React.PropTypes.arrayOf()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactComponent.propTypes = {
  arrayWithShape: React.PropTypes.arrayOf(React.PropTypes.shape({
    color: React.PropTypes.string.isRequired,
    fontSize: React.PropTypes.number.isRequired
  })).isRequired
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;95&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to conditionally apply class attributes?&lt;/h3&gt; &lt;p&gt;You shouldn&#39;t use curly braces inside quotes because it is going to be evaluated as a string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className=&quot;btn-panel {this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead you need to move curly braces outside (don&#39;t forget to include spaces between class names):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className={&#39;btn-panel &#39; + (this.props.visible ? &#39;show&#39; : &#39;hidden&#39;)}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className={`btn-panel ${this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}`}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;96&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React and ReactDOM?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react&lt;/code&gt; package contains &lt;code&gt;React.createElement()&lt;/code&gt;, &lt;code&gt;React.Component&lt;/code&gt;, &lt;code&gt;React.Children&lt;/code&gt;, and other helpers related to elements and component classes. You can think of these as the isomorphic or universal helpers that you need to build components. The &lt;code&gt;react-dom&lt;/code&gt; package contains &lt;code&gt;ReactDOM.render()&lt;/code&gt;, and in &lt;code&gt;react-dom/server&lt;/code&gt; we have &lt;em&gt;server-side rendering&lt;/em&gt; support with &lt;code&gt;ReactDOMServer.renderToString()&lt;/code&gt; and &lt;code&gt;ReactDOMServer.renderToStaticMarkup()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;97&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why ReactDOM is separated from React?&lt;/h3&gt; &lt;p&gt;The React team worked on extracting all DOM-related features into a separate library called &lt;em&gt;ReactDOM&lt;/em&gt;. React v0.14 is the first release in which the libraries are split. By looking at some of the packages, &lt;code&gt;react-native&lt;/code&gt;, &lt;code&gt;react-art&lt;/code&gt;, &lt;code&gt;react-canvas&lt;/code&gt;, and &lt;code&gt;react-three&lt;/code&gt;, it has become clear that the beauty and essence of React has nothing to do with browsers or the DOM.&lt;/p&gt; &lt;p&gt;To build more environments that React can render to, React team planned to split the main React package into two: &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt;. This paves the way to writing components that can be shared between the web version of React and React Native.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;98&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use React label element?&lt;/h3&gt; &lt;p&gt;If you try to render a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element bound to a text input using the standard &lt;code&gt;for&lt;/code&gt; attribute, then it produces HTML missing that attribute and prints a warning to the console.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;label for={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;
&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since &lt;code&gt;for&lt;/code&gt; is a reserved keyword in JavaScript, use &lt;code&gt;htmlFor&lt;/code&gt; instead.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;label htmlFor={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;
&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;99&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to combine multiple inline style objects?&lt;/h3&gt; &lt;p&gt;You can use &lt;em&gt;spread operator&lt;/em&gt; in regular React:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt; &amp;lt;button style={{...styles.panel.button, ...styles.panel.submitButton}}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you&#39;re using React Native then you can use the array notation:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button style={[styles.panel.button, styles.panel.submitButton]}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;100&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to re-render the view when the browser is resized?&lt;/h3&gt; &lt;p&gt;You can listen to the &lt;code&gt;resize&lt;/code&gt; event in &lt;code&gt;componentDidMount()&lt;/code&gt; and then update the dimensions (&lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;). You should remove the listener in &lt;code&gt;componentWillUnmount()&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class WindowDimensions extends React.Component {
  constructor(props){
    super(props);
    this.updateDimensions = this.updateDimensions.bind(this);
  }
   
  componentWillMount() {
    this.updateDimensions()
  }

  componentDidMount() {
    window.addEventListener(&#39;resize&#39;, this.updateDimensions)
  }

  componentWillUnmount() {
    window.removeEventListener(&#39;resize&#39;, this.updateDimensions)
  }

  updateDimensions() {
    this.setState({width: window.innerWidth, height: window.innerHeight})
  }

  render() {
    return &amp;lt;span&amp;gt;{this.state.width} x {this.state.height}&amp;lt;/span&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;101&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;setState()&lt;/code&gt; and &lt;code&gt;replaceState()&lt;/code&gt; methods?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt; the current and previous states are merged. &lt;code&gt;replaceState()&lt;/code&gt; throws out the current state, and replaces it with only what you provide. Usually &lt;code&gt;setState()&lt;/code&gt; is used unless you really need to remove all previous keys for some reason. You can also set state to &lt;code&gt;false&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt; in &lt;code&gt;setState()&lt;/code&gt; instead of using &lt;code&gt;replaceState()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;102&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to listen to state changes?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;componentDidUpdate&lt;/code&gt; lifecycle method will be called when state changes. You can compare provided state and props values with current state and props to determine if something meaningful changed.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;componentDidUpdate(object prevProps, object prevState)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The previous releases of ReactJS also uses &lt;code&gt;componentWillUpdate(object nextProps, object nextState)&lt;/code&gt; for state changes. It has been deprecated in latest releases.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;103&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended approach of removing an array element in React state?&lt;/h3&gt; &lt;p&gt;The better approach is to use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;For example, let&#39;s create a &lt;code&gt;removeItem()&lt;/code&gt; method for updating the state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;removeItem(index) {
  this.setState({
    data: this.state.data.filter((item, i) =&amp;gt; i !== index)
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;104&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use React without rendering HTML?&lt;/h3&gt; &lt;p&gt;It is possible with latest version (&amp;gt;=16.2). Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return false
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return null
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return []
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;React.Fragment&amp;gt;&amp;lt;/React.Fragment&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;&amp;gt;&amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Returning &lt;code&gt;undefined&lt;/code&gt; won&#39;t work.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;105&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pretty print JSON with React?&lt;/h3&gt; &lt;p&gt;We can use &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag so that the formatting of the &lt;code&gt;JSON.stringify()&lt;/code&gt; is retained:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const data = { name: &#39;John&#39;, age: 42 }

class User extends React.Component {
  render() {
    return (
      &amp;lt;pre&amp;gt;
        {JSON.stringify(data, null, 2)}
      &amp;lt;/pre&amp;gt;
    )
  }
}

React.render(&amp;lt;User /&amp;gt;, document.getElementById(&#39;container&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;106&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why you can&#39;t update props in React?&lt;/h3&gt; &lt;p&gt;The React philosophy is that props should be &lt;em&gt;immutable&lt;/em&gt; and &lt;em&gt;top-down&lt;/em&gt;. This means that a parent can send any prop values to a child, but the child can&#39;t modify received props.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;107&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to focus an input element on page load?&lt;/h3&gt; &lt;p&gt;You can do it by creating &lt;em&gt;ref&lt;/em&gt; for &lt;code&gt;input&lt;/code&gt; element and using it in &lt;code&gt;componentDidMount()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class App extends React.Component{
  componentDidMount() {
    this.nameInput.focus()
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input
          defaultValue={&#39;Won\&#39;t focus&#39;}
        /&amp;gt;
        &amp;lt;input
          ref={(input) =&amp;gt; this.nameInput = input}
          defaultValue={&#39;Will focus&#39;}
        /&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;app&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;108&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible ways of updating objects in state?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with an object to merge with state:&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;Using &lt;code&gt;Object.assign()&lt;/code&gt; to create a copy of the object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = Object.assign({}, this.state.user, { age: 42 })
this.setState({ user })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Using &lt;em&gt;spread operator&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { ...this.state.user, age: 42 }
this.setState({ user })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with a function:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.setState(prevState =&amp;gt; ({
  user: {
    ...prevState.user,
    age: 42
  }
}))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;110&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How can we find the version of React at runtime in the browser?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;React.version&lt;/code&gt; to get the version.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const REACT_VERSION = React.version

ReactDOM.render(
  &amp;lt;div&amp;gt;{`React version: ${REACT_VERSION}`}&amp;lt;/div&amp;gt;,
  document.getElementById(&#39;app&#39;)
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;111&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the approaches to include polyfills in your &lt;code&gt;create-react-app&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are approaches to include polyfills in create-react-app,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Manual import from &lt;code&gt;core-js&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create a file called (something like) &lt;code&gt;polyfills.js&lt;/code&gt; and import it into root &lt;code&gt;index.js&lt;/code&gt; file. Run &lt;code&gt;npm install core-js&lt;/code&gt; or &lt;code&gt;yarn add core-js&lt;/code&gt; and import your specific required features.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;core-js/fn/array/find&#39;
import &#39;core-js/fn/array/includes&#39;
import &#39;core-js/fn/number/is-nan&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Polyfill service:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use the polyfill.io CDN to retrieve custom, browser-specific polyfills by adding this line to &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&#39;https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.includes&#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above script we had to explicitly request the &lt;code&gt;Array.prototype.includes&lt;/code&gt; feature as it is not included in the default feature set.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;112&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use https instead of http in create-react-app?&lt;/h3&gt; &lt;p&gt;You just need to use &lt;code&gt;HTTPS=true&lt;/code&gt; configuration. You can edit your &lt;code&gt;package.json&lt;/code&gt; scripts section:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&quot;scripts&quot;: {
  &quot;start&quot;: &quot;set HTTPS=true &amp;amp;&amp;amp; react-scripts start&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or just run &lt;code&gt;set HTTPS=true &amp;amp;&amp;amp; npm start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;113&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to avoid using relative path imports in create-react-app?&lt;/h3&gt; &lt;p&gt;Create a file called &lt;code&gt;.env&lt;/code&gt; in the project root and write the import path:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;NODE_PATH=src/app
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that restart the development server. Now you should be able to import anything inside &lt;code&gt;src/app&lt;/code&gt; without relative paths.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;114&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add Google Analytics for React Router?&lt;/h3&gt; &lt;p&gt;Add a listener on the &lt;code&gt;history&lt;/code&gt; object to record each page view:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;history.listen(function (location) {
  window.ga(&#39;set&#39;, &#39;page&#39;, location.pathname + location.search)
  window.ga(&#39;send&#39;, &#39;pageview&#39;, location.pathname + location.search)
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;115&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to update a component every second?&lt;/h3&gt; &lt;p&gt;You need to use &lt;code&gt;setInterval()&lt;/code&gt; to trigger the change, but you also need to clear the timer when the component unmounts to prevent errors and memory leaks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;componentDidMount() {
  this.interval = setInterval(() =&amp;gt; this.setState({ time: Date.now() }), 1000)
}

componentWillUnmount() {
  clearInterval(this.interval)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;116&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you apply vendor prefixes to inline styles in React?&lt;/h3&gt; &lt;p&gt;React &lt;em&gt;does not&lt;/em&gt; apply &lt;em&gt;vendor prefixes&lt;/em&gt; automatically. You need to add vendor prefixes manually.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div style={{
  transform: &#39;rotate(90deg)&#39;,
  WebkitTransform: &#39;rotate(90deg)&#39;, // note the capital &#39;W&#39; here
  msTransform: &#39;rotate(90deg)&#39; // &#39;ms&#39; is the only lowercase vendor prefix
}} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;117&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to import and export components using React and ES6?&lt;/h3&gt; &lt;p&gt;You should use default for exporting the components&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import User from &#39;user&#39;

export default class MyProfile extends React.Component {
  render(){
    return (
      &amp;lt;User type=&quot;customer&quot;&amp;gt;
        //...
      &amp;lt;/User&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With the export specifier, the MyProfile is going to be the member and exported to this module and the same can be imported without mentioning the name in other components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;119&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is a component constructor called only once?&lt;/h3&gt; &lt;p&gt;React&#39;s &lt;em&gt;reconciliation&lt;/em&gt; algorithm assumes that without any information to the contrary, if a custom component appears in the same place on subsequent renders, it&#39;s the same component as before, so reuses the previous instance rather than creating a new one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;120&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to define constants in React?&lt;/h3&gt; &lt;p&gt;You can use ES7 &lt;code&gt;static&lt;/code&gt; field to define constant.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  static DEFAULT_PAGINATION = 10
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Static fields&lt;/em&gt; are part of the &lt;em&gt;Class Fields&lt;/em&gt; stage 3 proposal.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;121&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to programmatically trigger click event in React?&lt;/h3&gt; &lt;p&gt;You could use the ref prop to acquire a reference to the underlying &lt;code&gt;HTMLInputElement&lt;/code&gt; object through a callback, store the reference as a class property, then use that reference to later trigger a click from your event handlers using the &lt;code&gt;HTMLElement.click&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;This can be done in two steps:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create ref in render method:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;input ref={input =&amp;gt; this.inputElement = input} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Apply click event in your event handler:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.inputElement.click()
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;122&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use async/await in plain React?&lt;/h3&gt; &lt;p&gt;If you want to use &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; in React, you will need &lt;em&gt;Babel&lt;/em&gt; and &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot;&gt;transform-async-to-generator&lt;/a&gt; plugin. React Native ships with Babel and a set of transforms.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;123&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common folder structures for React?&lt;/h3&gt; &lt;p&gt;There are two common practices for React project file structure.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by features or routes:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;One common way to structure projects is locate CSS, JS, and tests together, grouped by feature or route.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;common/
├─ Avatar.js
├─ Avatar.css
├─ APIUtils.js
└─ APIUtils.test.js
feed/
├─ index.js
├─ Feed.js
├─ Feed.css
├─ FeedStory.js
├─ FeedStory.test.js
└─ FeedAPI.js
profile/
├─ index.js
├─ Profile.js
├─ ProfileHeader.js
├─ ProfileHeader.css
└─ ProfileAPI.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by file type:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Another popular way to structure projects is to group similar files together.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;api/
├─ APIUtils.js
├─ APIUtils.test.js
├─ ProfileAPI.js
└─ UserAPI.js
components/
├─ Avatar.js
├─ Avatar.css
├─ Feed.js
├─ Feed.css
├─ FeedStory.js
├─ FeedStory.test.js
├─ Profile.js
├─ ProfileHeader.js
└─ ProfileHeader.css
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;124&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the popular packages for animation?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Transition Group&lt;/em&gt; and &lt;em&gt;React Motion&lt;/em&gt; are popular animation packages in React ecosystem.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;125&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of styles modules?&lt;/h3&gt; &lt;p&gt;It is recommended to avoid hard coding style values in components. Any values that are likely to be used across different UI components should be extracted into their own modules.&lt;/p&gt; &lt;p&gt;For example, these styles could be extracted into a separate component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export const colors = {
  white,
  black,
  blue
}

export const space = [
  0,
  8,
  16,
  32,
  64
]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then imported individually in other components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { space, colors } from &#39;./styles&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;126&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the popular React-specific linters?&lt;/h3&gt; &lt;p&gt;ESLint is a popular JavaScript linter. There are plugins available that analyse specific code styles. One of the most common for React is an npm package called &lt;code&gt;eslint-plugin-react&lt;/code&gt;. By default, it will check a number of best practices, with rules checking things from keys in iterators to a complete set of prop types.&lt;/p&gt; &lt;p&gt;Another popular plugin is &lt;code&gt;eslint-plugin-jsx-a11y&lt;/code&gt;, which will help fix common issues with accessibility. As JSX offers slightly different syntax to regular HTML, issues with &lt;code&gt;alt&lt;/code&gt; text and &lt;code&gt;tabindex&lt;/code&gt;, for example, will not be picked up by regular plugins.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;127&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to make AJAX call and in which component lifecycle methods should I make an AJAX call?&lt;/h3&gt; &lt;p&gt;You can use AJAX libraries such as Axios, jQuery AJAX, and the browser built-in &lt;code&gt;fetch&lt;/code&gt;. You should fetch data in the &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle method. This is so you can use &lt;code&gt;setState()&lt;/code&gt; to update your component when the data is retrieved.&lt;/p&gt; &lt;p&gt;For example, the employees list fetched from API and set local state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      employees: [],
      error: null
    }
  }

  componentDidMount() {
    fetch(&#39;https://api.example.com/items&#39;)
      .then(res =&amp;gt; res.json())
      .then(
        (result) =&amp;gt; {
          this.setState({
            employees: result.employees
          })
        },
        (error) =&amp;gt; {
          this.setState({ error })
        }
      )
  }

  render() {
    const { error, employees } = this.state
    if (error) {
      return &amp;lt;div&amp;gt;Error: {error.message}&amp;lt;/div&amp;gt;;
    } else {
      return (
        &amp;lt;ul&amp;gt;
          {employees.map(employee =&amp;gt; (
            &amp;lt;li key={employee.name}&amp;gt;
              {employee.name}-{employee.experience}
            &amp;lt;/li&amp;gt;
          ))}
        &amp;lt;/ul&amp;gt;
      )
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;128&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are render props?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Render Props&lt;/strong&gt; is a simple technique for sharing code between components using a prop whose value is a function. The below component uses render prop which returns a React element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;DataProvider render={data =&amp;gt; (
  &amp;lt;h1&amp;gt;{`Hello ${data.target}`}&amp;lt;/h1&amp;gt;
)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Libraries such as React Router and DownShift are using this pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Router&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;129&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Router?&lt;/h3&gt; &lt;p&gt;React Router is a powerful routing library built on top of React that helps you add new screens and flows to your application incredibly quickly, all while keeping the URL in sync with what&#39;s being displayed on the page.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;130&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How React Router is different from history library?&lt;/h3&gt; &lt;p&gt;React Router is a wrapper around the &lt;code&gt;history&lt;/code&gt; library which handles interaction with the browser&#39;s &lt;code&gt;window.history&lt;/code&gt; with its browser and hash histories. It also provides memory history which is useful for environments that don&#39;t have global history, such as mobile app development (React Native) and unit testing with Node.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;131&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components of React Router v4?&lt;/h3&gt; &lt;p&gt;React Router v4 provides below 3 &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;HashRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;MemoryRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The above components will create &lt;em&gt;browser&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, and &lt;em&gt;memory&lt;/em&gt; history instances. React Router v4 makes the properties and methods of the &lt;code&gt;history&lt;/code&gt; instance associated with your router available through the context in the &lt;code&gt;router&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;132&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods of &lt;code&gt;history&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;A history instance has two methods for navigation purpose.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;If you think of the history as an array of visited locations, &lt;code&gt;push()&lt;/code&gt; will add a new location to the array and &lt;code&gt;replace()&lt;/code&gt; will replace the current location in the array with the new one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;133&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you programmatically navigate using React Router v4?&lt;/h3&gt; &lt;p&gt;There are three different ways to achieve programmatic routing/navigation within components.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using the &lt;code&gt;withRouter()&lt;/code&gt; higher-order function:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;withRouter()&lt;/code&gt; higher-order function will inject the history object as a prop of the component. This object provides &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods to avoid the usage of context.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { withRouter } from &#39;react-router-dom&#39; // this also works with &#39;react-router-native&#39;

const Button = withRouter(({ history }) =&amp;gt; (
  &amp;lt;button
    type=&#39;button&#39;
    onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}
  &amp;gt;
    {&#39;Click Me!&#39;}
  &amp;lt;/button&amp;gt;
))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component and render props pattern:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component passes the same props as &lt;code&gt;withRouter()&lt;/code&gt;, so you will be able to access the history methods through the history prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { Route } from &#39;react-router-dom&#39;

const Button = () =&amp;gt; (
  &amp;lt;Route render={({ history }) =&amp;gt; (
    &amp;lt;button
      type=&#39;button&#39;
      onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}
    &amp;gt;
      {&#39;Click Me!&#39;}
    &amp;lt;/button&amp;gt;
  )} /&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using context:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This option is not recommended and treated as unstable API.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const Button = (props, context) =&amp;gt; (
  &amp;lt;button
    type=&#39;button&#39;
    onClick={() =&amp;gt; {
      context.history.push(&#39;/new-location&#39;)
    }}
  &amp;gt;
    {&#39;Click Me!&#39;}
  &amp;lt;/button&amp;gt;
)

Button.contextTypes = {
  history: React.PropTypes.shape({
    push: React.PropTypes.func.isRequired
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;134&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to get query parameters in React Router v4?&lt;/h3&gt; &lt;p&gt;The ability to parse query strings was taken out of React Router v4 because there have been user requests over the years to support different implementation. So the decision has been given to users to choose the implementation they like. The recommended approach is to use query strings library.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const queryString = require(&#39;query-string&#39;);
const parsed = queryString.parse(props.location.search);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use &lt;code&gt;URLSearchParams&lt;/code&gt; if you want something native:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const params = new URLSearchParams(props.location.search)
const foo = params.get(&#39;name&#39;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should use a &lt;em&gt;polyfill&lt;/em&gt; for IE11.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;135&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why you get &quot;Router may have only one child element&quot; warning?&lt;/h3&gt; &lt;p&gt;You have to wrap your Route&#39;s in a &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block because &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; is unique in that it renders a route exclusively.&lt;/p&gt; &lt;p&gt;At first you need to add &lt;code&gt;Switch&lt;/code&gt; to your imports:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { Switch, Router, Route } from &#39;react-router&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then define the routes within &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Router&amp;gt;
  &amp;lt;Switch&amp;gt;
    &amp;lt;Route {/* ... */} /&amp;gt;
    &amp;lt;Route {/* ... */} /&amp;gt;
  &amp;lt;/Switch&amp;gt;
&amp;lt;/Router&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;136&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass params to &lt;code&gt;history.push&lt;/code&gt; method in React Router v4?&lt;/h3&gt; &lt;p&gt;While navigating you can pass props to the &lt;code&gt;history&lt;/code&gt; object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.props.history.push({
  pathname: &#39;/template&#39;,
  search: &#39;?name=sudheer&#39;,
  state: { detail: response.data }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;search&lt;/code&gt; property is used to pass query params in &lt;code&gt;push()&lt;/code&gt; method.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;137&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to implement &lt;em&gt;default&lt;/em&gt; or &lt;em&gt;NotFound&lt;/em&gt; page?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; renders the first child &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; that matches. A &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; with no path always matches. So you just need to simply drop path attribute as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Switch&amp;gt;
  &amp;lt;Route exact path=&quot;/&quot; component={Home}/&amp;gt;
  &amp;lt;Route path=&quot;/user&quot; component={User}/&amp;gt;
  &amp;lt;Route component={NotFound} /&amp;gt;
&amp;lt;/Switch&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;138&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to get history on React Router v4?&lt;/h3&gt; &lt;p&gt;Below are the list of steps to get history object on React Router v4,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create a module that exports a &lt;code&gt;history&lt;/code&gt; object and import this module across the project.&lt;/p&gt; &lt;p&gt;For example, create &lt;code&gt;history.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createBrowserHistory } from &#39;history&#39;

export default createBrowserHistory({
  /* pass a configuration object here if needed */
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You should use the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; component instead of built-in routers. Imported the above &lt;code&gt;history.js&lt;/code&gt; inside &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { Router } from &#39;react-router-dom&#39;
import history from &#39;./history&#39;
import App from &#39;./App&#39;

ReactDOM.render((
  &amp;lt;Router history={history}&amp;gt;
    &amp;lt;App /&amp;gt;
  &amp;lt;/Router&amp;gt;
), holder)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use push method of &lt;code&gt;history&lt;/code&gt; object similar to built-in history object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// some-other-file.js
import history from &#39;./history&#39;

history.push(&#39;/go-here&#39;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;139&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to perform automatic redirect after login?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-router&lt;/code&gt; package provides &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; component in React Router. Rendering a &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; will navigate to a new location. Like server-side redirects, the new location will override the current location in the history stack.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;
import { Redirect } from &#39;react-router&#39;

export default class LoginComponent extends Component {
  render() {
    if (this.state.isLoggedIn === true) {
      return &amp;lt;Redirect to=&quot;/your/redirect/page&quot; /&amp;gt;
    } else {
      return &amp;lt;div&amp;gt;{&#39;Login Please&#39;}&amp;lt;/div&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Internationalization&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;140&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;React Intl&lt;/em&gt; library makes internalization in React straightforward, with off-the-shelf components and an API that can handle everything from formatting strings, dates, and numbers, to pluralization. React Intl is part of &lt;em&gt;FormatJS&lt;/em&gt; which provides bindings to React via its components and API.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;141&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of React Intl?&lt;/h3&gt; &lt;p&gt;Below are the main features of React Intl,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Display numbers with separators.&lt;/li&gt; 
   &lt;li&gt;Display dates and times correctly.&lt;/li&gt; 
   &lt;li&gt;Display dates relative to &quot;now&quot;.&lt;/li&gt; 
   &lt;li&gt;Pluralize labels in strings.&lt;/li&gt; 
   &lt;li&gt;Support for 150+ languages.&lt;/li&gt; 
   &lt;li&gt;Runs in the browser and Node.&lt;/li&gt; 
   &lt;li&gt;Built on standards.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;142&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the two ways of formatting in React Intl?&lt;/h3&gt; &lt;p&gt;The library provides two ways to format strings, numbers, and dates:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using react components:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;FormattedMessage
  id={&#39;account&#39;}
  defaultMessage={&#39;The amount is less than minimum balance.&#39;}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using an API:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const messages = defineMessages({
  accountMessage: {
    id: &#39;account&#39;,
    defaultMessage: &#39;The amount is less than minimum balance.&#39;,
  }
})

formatMessage(messages.accountMessage)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;143&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;&amp;lt;FormattedMessage&amp;gt;&lt;/code&gt; as placeholder using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Formatted... /&amp;gt;&lt;/code&gt; components from &lt;code&gt;react-intl&lt;/code&gt; return elements, not plain text, so they can&#39;t be used for placeholders, alt text, etc. In that case, you should use lower level API &lt;code&gt;formatMessage()&lt;/code&gt;. You can inject the &lt;code&gt;intl&lt;/code&gt; object into your component using &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component and then format the message using &lt;code&gt;formatMessage()&lt;/code&gt; available on that object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import { injectIntl, intlShape } from &#39;react-intl&#39;

const MyComponent = ({ intl }) =&amp;gt; {
  const placeholder = intl.formatMessage({id: &#39;messageId&#39;})
  return &amp;lt;input placeholder={placeholder} /&amp;gt;
}

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;144&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to access current locale with React Intl?&lt;/h3&gt; &lt;p&gt;You can get the current locale in any component of your application using &lt;code&gt;injectIntl()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;

const MyComponent = ({ intl }) =&amp;gt; (
  &amp;lt;div&amp;gt;{`The current locale is ${intl.locale}`}&amp;lt;/div&amp;gt;
)

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;145&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to format date using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component will give you access to the &lt;code&gt;formatDate()&lt;/code&gt; method via the props in your component. The method is used internally by instances of &lt;code&gt;FormattedDate&lt;/code&gt; and it returns the string representation of the formatted date.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;

const stringDate = this.props.intl.formatDate(date, {
  year: &#39;numeric&#39;,
  month: &#39;numeric&#39;,
  day: &#39;numeric&#39;
})

const MyComponent = ({intl}) =&amp;gt; (
  &amp;lt;div&amp;gt;{`The formatted date is ${stringDate}`}&amp;lt;/div&amp;gt;
)

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;146&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Shallow Renderer in React testing?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Shallow rendering&lt;/em&gt; is useful for writing unit test cases in React. It lets you render a component &lt;em&gt;one level deep&lt;/em&gt; and assert facts about what its render method returns, without worrying about the behavior of child components, which are not instantiated or rendered.&lt;/p&gt; &lt;p&gt;For example, if you have the following component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;
      &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then you can assert as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ShallowRenderer from &#39;react-test-renderer/shallow&#39;

// in your test
const renderer = new ShallowRenderer()
renderer.render(&amp;lt;MyComponent /&amp;gt;)

const result = renderer.getRenderOutput()

expect(result.type).toBe(&#39;div&#39;)
expect(result.props.children).toEqual([
  &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;,
  &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;
])
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;147&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is &lt;code&gt;TestRenderer&lt;/code&gt; package in React?&lt;/h3&gt; &lt;p&gt;This package provides a renderer that can be used to render components to pure JavaScript objects, without depending on the DOM or a native mobile environment. This package makes it easy to grab a snapshot of the platform view hierarchy (similar to a DOM tree) rendered by a ReactDOM or React Native without using a browser or &lt;code&gt;jsdom&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import TestRenderer from &#39;react-test-renderer&#39;

const Link = ({page, children}) =&amp;gt; &amp;lt;a href={page}&amp;gt;{children}&amp;lt;/a&amp;gt;

const testRenderer = TestRenderer.create(
  &amp;lt;Link page={&#39;https://www.facebook.com/&#39;}&amp;gt;{&#39;Facebook&#39;}&amp;lt;/Link&amp;gt;
)

console.log(testRenderer.toJSON())
// {
//   type: &#39;a&#39;,
//   props: { href: &#39;https://www.facebook.com/&#39; },
//   children: [ &#39;Facebook&#39; ]
// }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;148&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of ReactTestUtils package?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;ReactTestUtils&lt;/em&gt; are provided in the &lt;code&gt;with-addons&lt;/code&gt; package and allow you to perform actions against a simulated DOM for the purpose of unit testing.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;149&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Jest?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Jest&lt;/em&gt; is a JavaScript unit testing framework created by Facebook based on Jasmine and provides automated mock creation and a &lt;code&gt;jsdom&lt;/code&gt; environment. It&#39;s often used for testing components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;150&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of Jest over Jasmine?&lt;/h3&gt; &lt;p&gt;There are couple of advantages compared to Jasmine:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Automatically finds tests to execute in your source code.&lt;/li&gt; 
   &lt;li&gt;Automatically mocks dependencies when running your tests.&lt;/li&gt; 
   &lt;li&gt;Allows you to test asynchronous code synchronously.&lt;/li&gt; 
   &lt;li&gt;Runs your tests with a fake DOM implementation (via &lt;code&gt;jsdom&lt;/code&gt;) so that your tests can be run on the command line.&lt;/li&gt; 
   &lt;li&gt;Runs tests in parallel processes so that they finish sooner.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;151&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give a simple example of Jest test case&lt;/h3&gt; &lt;p&gt;Let&#39;s write a test for a function that adds two numbers in &lt;code&gt;sum.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sum = (a, b) =&amp;gt; a + b

export default sum
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Create a file named &lt;code&gt;sum.test.js&lt;/code&gt; which contains actual test:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import sum from &#39;./sum&#39;

test(&#39;adds 1 + 2 to equal 3&#39;, () =&amp;gt; {
  expect(sum(1, 2)).toBe(3)
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then add the following section to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;scripts&quot;: {
    &quot;test&quot;: &quot;jest&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Finally, run &lt;code&gt;yarn test&lt;/code&gt; or &lt;code&gt;npm test&lt;/code&gt; and Jest will print a result:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ yarn test
PASS ./sum.test.js
✓ adds 1 + 2 to equal 3 (2ms)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Redux&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;152&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is flux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flux&lt;/em&gt; is an &lt;em&gt;application design paradigm&lt;/em&gt; used as a replacement for the more traditional MVC pattern. It is not a framework or a library but a new kind of architecture that complements React and the concept of Unidirectional Data Flow. Facebook uses this pattern internally when working with React.&lt;/p&gt; &lt;p&gt;The workflow between dispatcher, stores and views components with distinct inputs and outputs as follows:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/flux.png&quot; alt=&quot;flux&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;153&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux&lt;/em&gt; is a predictable state container for JavaScript apps based on the &lt;em&gt;Flux design pattern&lt;/em&gt;. Redux can be used together with React, or with any other view library. It is tiny (about 2kB) and has no dependencies.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;154&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the core principles of Redux?&lt;/h3&gt; &lt;p&gt;Redux follows three fundamental principles:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Single source of truth:&lt;/strong&gt; The state of your whole application is stored in an object tree within a single store. The single state tree makes it easier to keep track of changes over time and debug or inspect the application.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;State is read-only:&lt;/strong&gt; The only way to change the state is to emit an action, an object describing what happened. This ensures that neither the views nor the network callbacks will ever write directly to the state.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Changes are made with pure functions:&lt;/strong&gt; To specify how the state tree is transformed by actions, you write reducers. Reducers are just pure functions that take the previous state and an action as parameters, and return the next state.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;155&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the downsides of Redux compared to Flux?&lt;/h3&gt; &lt;p&gt;Instead of saying downsides we can say that there are few compromises of using Redux over Flux. Those are as follows:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;You will need to learn to avoid mutations:&lt;/strong&gt; Flux is un-opinionated about mutating data, but Redux doesn&#39;t like mutations and many packages complementary to Redux assume you never mutate the state. You can enforce this with dev-only packages like &lt;code&gt;redux-immutable-state-invariant&lt;/code&gt;, Immutable.js, or instructing your team to write non-mutating code.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;You&#39;re going to have to carefully pick your packages:&lt;/strong&gt; While Flux explicitly doesn&#39;t try to solve problems such as undo/redo, persistence, or forms, Redux has extension points such as middleware and store enhancers, and it has spawned a rich ecosystem.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;There is no nice Flow integration yet:&lt;/strong&gt; Flux currently lets you do very impressive static type checks which Redux doesn&#39;t support yet.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;156&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;mapStateToProps()&lt;/code&gt; is a utility which helps your component get updated state (which is updated by some other components):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapStateToProps = (state) =&amp;gt; {
  return {
    todos: getVisibleTodos(state.todos, state.visibilityFilter)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;mapDispatchToProps()&lt;/code&gt; is a utility which will help your component to fire an action event (dispatching action which may cause change of application state):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; {
  return {
    onTodoClick: (id) =&amp;gt; {
      dispatch(toggleTodo(id))
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Recommend always using the “object shorthand” form for the &lt;code&gt;mapDispatchToProps&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Redux wrap it in another function that looks like (…args) =&amp;gt; dispatch(onTodoClick(…args)), and pass that wrapper function as a prop to your component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const mapDispatchToProps = ({
   onTodoClick
 })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;157&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I dispatch an action in reducer?&lt;/h3&gt; &lt;p&gt;Dispatching an action within a reducer is an &lt;strong&gt;anti-pattern&lt;/strong&gt;. Your reducer should be &lt;em&gt;without side effects&lt;/em&gt;, simply digesting the action payload and returning a new state object. Adding listeners and dispatching actions within the reducer can lead to chained actions and other side effects.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;158&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to access Redux store outside a component?&lt;/h3&gt; &lt;p&gt;You just need to export the store from the module where it created with &lt;code&gt;createStore()&lt;/code&gt;. Also, it shouldn&#39;t pollute the global window object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;store = createStore(myReducer)

export default store
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;159&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the drawbacks of MVW pattern?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;DOM manipulation is very expensive which causes applications to behave slow and inefficient.&lt;/li&gt; 
   &lt;li&gt;Due to circular dependencies, a complicated model was created around models and views.&lt;/li&gt; 
   &lt;li&gt;Lot of data changes happens for collaborative applications(like Google Docs).&lt;/li&gt; 
   &lt;li&gt;No way to do undo (travel back in time) easily without adding so much extra code.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;160&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Are there any similarities between Redux and RxJS?&lt;/h3&gt; &lt;p&gt;These libraries are very different for very different purposes, but there are some vague similarities.&lt;/p&gt; &lt;p&gt;Redux is a tool for managing state throughout the application. It is usually used as an architecture for UIs. Think of it as an alternative to (half of) Angular. RxJS is a reactive programming library. It is usually used as a tool to accomplish asynchronous tasks in JavaScript. Think of it as an alternative to Promises. Redux uses the Reactive paradigm because the Store is reactive. The Store observes actions from a distance, and changes itself. RxJS also uses the Reactive paradigm, but instead of being an architecture, it gives you basic building blocks, Observables, to accomplish this pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;161&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to dispatch an action on load?&lt;/h3&gt; &lt;p&gt;You can dispatch an action in &lt;code&gt;componentDidMount()&lt;/code&gt; method and in &lt;code&gt;render()&lt;/code&gt; method you can verify the data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends Component {
  componentDidMount() {
    this.props.fetchData()
  }

  render() {
    return this.props.isLoaded
      ? &amp;lt;div&amp;gt;{&#39;Loaded&#39;}&amp;lt;/div&amp;gt;
      : &amp;lt;div&amp;gt;{&#39;Not Loaded&#39;}&amp;lt;/div&amp;gt;
  }
}

const mapStateToProps = (state) =&amp;gt; ({
  isLoaded: state.isLoaded
})

const mapDispatchToProps = { fetchData }

export default connect(mapStateToProps, mapDispatchToProps)(App)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;162&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;connect()&lt;/code&gt; from React Redux?&lt;/h3&gt; &lt;p&gt;You need to follow two steps to use your store in your container:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use &lt;code&gt;mapStateToProps()&lt;/code&gt;:&lt;/strong&gt; It maps the state variables from your store to the props that you specify.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect the above props to your container:&lt;/strong&gt; The object returned by the &lt;code&gt;mapStateToProps&lt;/code&gt; function is connected to the container. You can import &lt;code&gt;connect()&lt;/code&gt; from &lt;code&gt;react-redux&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import { connect } from &#39;react-redux&#39;

class App extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;{this.props.containerData}&amp;lt;/div&amp;gt;
  }
}

function mapStateToProps(state) {
  return { containerData: state.data }
}

export default connect(mapStateToProps)(App)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;163&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to reset state in Redux?&lt;/h3&gt; &lt;p&gt;You need to write a &lt;em&gt;root reducer&lt;/em&gt; in your application which delegate handling the action to the reducer generated by &lt;code&gt;combineReducers()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take &lt;code&gt;rootReducer()&lt;/code&gt; to return the initial state after &lt;code&gt;USER_LOGOUT&lt;/code&gt; action. As we know, reducers are supposed to return the initial state when they are called with &lt;code&gt;undefined&lt;/code&gt; as the first argument, no matter the action.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const appReducer = combineReducers({
  /* your app&#39;s top-level reducers */
})

const rootReducer = (state, action) =&amp;gt; {
  if (action.type === &#39;USER_LOGOUT&#39;) {
    state = undefined
  }

  return appReducer(state, action)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In case of using &lt;code&gt;redux-persist&lt;/code&gt;, you may also need to clean your storage. &lt;code&gt;redux-persist&lt;/code&gt; keeps a copy of your state in a storage engine. First, you need to import the appropriate storage engine and then, to parse the state before setting it to undefined and clean each storage state key.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const appReducer = combineReducers({
  /* your app&#39;s top-level reducers */
})

const rootReducer = (state, action) =&amp;gt; {
  if (action.type === &#39;USER_LOGOUT&#39;) {
    Object.keys(state).forEach(key =&amp;gt; {
      storage.removeItem(`persist:${key}`)
    })

    state = undefined
  }

  return appReducer(state, action)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;164&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Whats the purpose of &lt;code&gt;at&lt;/code&gt; symbol in the Redux connect decorator?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;@&lt;/strong&gt; symbol is in fact a JavaScript expression used to signify decorators. &lt;em&gt;Decorators&lt;/em&gt; make it possible to annotate and modify classes and properties at design time.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example setting up Redux without and with a decorator.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Without decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import * as actionCreators from &#39;./actionCreators&#39;
import { bindActionCreators } from &#39;redux&#39;
import { connect } from &#39;react-redux&#39;

function mapStateToProps(state) {
  return { todos: state.todos }
}

function mapDispatchToProps(dispatch) {
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

class MyApp extends React.Component {
  // ...define your main app here
}

export default connect(mapStateToProps, mapDispatchToProps)(MyApp)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;With decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import * as actionCreators from &#39;./actionCreators&#39;
import { bindActionCreators } from &#39;redux&#39;
import { connect } from &#39;react-redux&#39;

function mapStateToProps(state) {
  return { todos: state.todos }
}

function mapDispatchToProps(dispatch) {
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

@connect(mapStateToProps, mapDispatchToProps)
export default class MyApp extends React.Component {
  // ...define your main app here
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;The above examples are almost similar except the usage of decorator. The decorator syntax isn&#39;t built into any JavaScript runtimes yet, and is still experimental and subject to change. You can use babel for the decorators support.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;165&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React context and React Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;strong&gt;Context&lt;/strong&gt; in your application directly and is going to be great for passing down data to deeply nested components which what it was designed for.&lt;/p&gt; &lt;p&gt;Whereas &lt;strong&gt;Redux&lt;/strong&gt; is much more powerful and provides a large number of features that the Context API doesn&#39;t provide. Also, React Redux uses context internally but it doesn&#39;t expose this fact in the public API.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;166&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are Redux state functions called reducers?&lt;/h3&gt; &lt;p&gt;Reducers always return the accumulation of the state (based on all previous and current actions). Therefore, they act as a reducer of state. Each time a Redux reducer is called, the state and action are passed as parameters. This state is then reduced (or accumulated) based on the action, and then the next state is returned. You could &lt;em&gt;reduce&lt;/em&gt; a collection of actions and an initial state (of the store) on which to perform these actions to get the resulting final state.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;167&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to make AJAX request in Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;redux-thunk&lt;/code&gt; middleware which allows you to define async actions.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of fetching specific account as an AJAX call using &lt;em&gt;fetch API&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export function fetchAccount(id) {
  return dispatch =&amp;gt; {
    dispatch(setLoadingAccountState()) // Show a loading spinner
    fetch(`/account/${id}`, (response) =&amp;gt; {
      dispatch(doneFetchingAccount()) // Hide loading spinner
      if (response.status === 200) {
        dispatch(setAccount(response.json)) // Use a normal function to set the received state
      } else {
        dispatch(someError)
      }
    })
  }
}

function setAccount(data) {
 return { type: &#39;SET_Account&#39;, data: data }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;168&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Should I keep all component&#39;s state in Redux store?&lt;/h3&gt; &lt;p&gt;Keep your data in the Redux store, and the UI related state internally in the component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;169&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the proper way to access Redux store?&lt;/h3&gt; &lt;p&gt;The best way to access your store in a component is to use the &lt;code&gt;connect()&lt;/code&gt; function, that creates a new component that wraps around your existing one. This pattern is called &lt;em&gt;Higher-Order Components&lt;/em&gt;, and is generally the preferred way of extending a component&#39;s functionality in React. This allows you to map state and action creators to your component, and have them passed in automatically as your store updates.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of &lt;code&gt;&amp;lt;FilterLink&amp;gt;&lt;/code&gt; component using connect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { connect } from &#39;react-redux&#39;
import { setVisibilityFilter } from &#39;../actions&#39;
import Link from &#39;../components/Link&#39;

const mapStateToProps = (state, ownProps) =&amp;gt; ({
  active: ownProps.filter === state.visibilityFilter
})

const mapDispatchToProps = (dispatch, ownProps) =&amp;gt; ({
  onClick: () =&amp;gt; dispatch(setVisibilityFilter(ownProps.filter))
})

const FilterLink = connect(
  mapStateToProps,
  mapDispatchToProps
)(Link)

export default FilterLink
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Due to it having quite a few performance optimizations and generally being less likely to cause bugs, the Redux developers almost always recommend using &lt;code&gt;connect()&lt;/code&gt; over accessing the store directly (using context API).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent {
  someMethod() {
    doSomethingWith(this.context.store)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;170&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between component and container in React Redux?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Component&lt;/strong&gt; is a class or function component that describes the presentational part of your application.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Container&lt;/strong&gt; is an informal term for a component that is connected to a Redux store. Containers &lt;em&gt;subscribe&lt;/em&gt; to Redux state updates and &lt;em&gt;dispatch&lt;/em&gt; actions, and they usually don&#39;t render DOM elements; they delegate rendering to presentational child components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;171&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the constants in Redux?&lt;/h3&gt; &lt;p&gt;Constants allows you to easily find all usages of that specific functionality across the project when you use an IDE. It also prevents you from introducing silly bugs caused by typos – in which case, you will get a &lt;code&gt;ReferenceError&lt;/code&gt; immediately.&lt;/p&gt; &lt;p&gt;Normally we will save them in a single file (&lt;code&gt;constants.js&lt;/code&gt; or &lt;code&gt;actionTypes.js&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export const ADD_TODO = &#39;ADD_TODO&#39;
export const DELETE_TODO = &#39;DELETE_TODO&#39;
export const EDIT_TODO = &#39;EDIT_TODO&#39;
export const COMPLETE_TODO = &#39;COMPLETE_TODO&#39;
export const COMPLETE_ALL = &#39;COMPLETE_ALL&#39;
export const CLEAR_COMPLETED = &#39;CLEAR_COMPLETED&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In Redux, you use them in two places:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;During action creation:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s take &lt;code&gt;actions.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;;

export function addTodo(text) {
  return { type: ADD_TODO, text }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;In reducers:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s create &lt;code&gt;reducer.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;

export default (state = [], action) =&amp;gt; {
  switch (action.type) {
    case ADD_TODO:
      return [
        ...state,
        {
          text: action.text,
          completed: false
        }
      ];
    default:
      return state
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;172&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to write &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are a few ways of binding &lt;em&gt;action creators&lt;/em&gt; to &lt;code&gt;dispatch()&lt;/code&gt; in &lt;code&gt;mapDispatchToProps()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({
 action: () =&amp;gt; dispatch(action())
})
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({
 action: bindActionCreators(action, dispatch)
})
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = { action }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The third option is just a shorthand for the first one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;173&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of the &lt;code&gt;ownProps&lt;/code&gt; parameter in &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;If the &lt;code&gt;ownProps&lt;/code&gt; parameter is specified, React Redux will pass the props that were passed to the component into your &lt;em&gt;connect&lt;/em&gt; functions. So, if you use a connected component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ConnectedComponent from &#39;./containers/ConnectedComponent&#39;;

&amp;lt;ConnectedComponent user={&#39;john&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;ownProps&lt;/code&gt; inside your &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt; functions will be an object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{ user: &#39;john&#39; }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can use this object to decide what to return from those functions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;174&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to structure Redux top level directories?&lt;/h3&gt; &lt;p&gt;Most of the applications has several top-level directories as below:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Components&lt;/strong&gt;: Used for &lt;em&gt;dumb&lt;/em&gt; components unaware of Redux.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt;: Used for &lt;em&gt;smart&lt;/em&gt; components connected to Redux.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt;: Used for all action creators, where file names correspond to part of the app.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Reducers&lt;/strong&gt;: Used for all reducers, where files name correspond to state key.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt;: Used for store initialization.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;This structure works well for small and medium size apps.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;175&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;redux-saga&lt;/code&gt; is a library that aims to make side effects (asynchronous things like data fetching and impure things like accessing the browser cache) in React/Redux applications easier and better.&lt;/p&gt; &lt;p&gt;It is available in NPM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install --save redux-saga
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;176&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the mental model of redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Saga&lt;/em&gt; is like a separate thread in your application, that&#39;s solely responsible for side effects. &lt;code&gt;redux-saga&lt;/code&gt; is a redux &lt;em&gt;middleware&lt;/em&gt;, which means this thread can be started, paused and cancelled from the main application with normal Redux actions, it has access to the full Redux application state and it can dispatch Redux actions as well.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;177&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; in redux-saga?&lt;/h3&gt; &lt;p&gt;Both &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; are effect creator functions. &lt;code&gt;call()&lt;/code&gt; function is used to create effect description, which instructs middleware to call the promise. &lt;code&gt;put()&lt;/code&gt; function creates an effect, which instructs middleware to dispatch an action to the store.&lt;/p&gt; &lt;p&gt;Let&#39;s take example of how these effects work for fetching particular user data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* fetchUserSaga(action) {
  // `call` function accepts rest arguments, which will be passed to `api.fetchUser` function.
  // Instructing middleware to call promise, it resolved value will be assigned to `userData` variable
  const userData = yield call(api.fetchUser, action.userId)

  // Instructing middleware to dispatch corresponding action.
  yield put({
    type: &#39;FETCH_USER_SUCCESS&#39;,
    userData
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;178&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux Thunk?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Thunk&lt;/em&gt; middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods &lt;code&gt;dispatch()&lt;/code&gt; and &lt;code&gt;getState()&lt;/code&gt; as parameters.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;179&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;redux-saga&lt;/code&gt; and &lt;code&gt;redux-thunk&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;Redux Thunk&lt;/em&gt; and &lt;em&gt;Redux Saga&lt;/em&gt; take care of dealing with side effects. In most of the scenarios, Thunk uses &lt;em&gt;Promises&lt;/em&gt; to deal with them, whereas Saga uses &lt;em&gt;Generators&lt;/em&gt;. Thunk is simple to use and Promises are familiar to many developers, Sagas/Generators are more powerful but you will need to learn them. But both middleware can coexist, so you can start with Thunks and introduce Sagas when/if you need them.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;180&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux DevTools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux DevTools&lt;/em&gt; is a live-editing time travel environment for Redux with hot reloading, action replay, and customizable UI. If you don&#39;t want to bother with installing Redux DevTools and integrating it into your project, consider using Redux DevTools Extension for Chrome and Firefox.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;181&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the features of Redux DevTools?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux DevTools are below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Lets you inspect every state and action payload.&lt;/li&gt; 
   &lt;li&gt;Lets you go back in time by &lt;em&gt;cancelling&lt;/em&gt; actions.&lt;/li&gt; 
   &lt;li&gt;If you change the reducer code, each &lt;em&gt;staged&lt;/em&gt; action will be re-evaluated.&lt;/li&gt; 
   &lt;li&gt;If the reducers throw, you will see during which action this happened, and what the error was.&lt;/li&gt; 
   &lt;li&gt;With &lt;code&gt;persistState()&lt;/code&gt; store enhancer, you can persist debug sessions across page reloads.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;182&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Redux selectors and why to use them?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Selectors&lt;/em&gt; are functions that take Redux state as an argument and return some data to pass to the component.&lt;/p&gt; &lt;p&gt;For example, to get user details from the state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const getUserData = state =&amp;gt; state.user.data
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These selectors have two main benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The selector can compute derived data, allowing Redux to store the minimal possible state&lt;/li&gt; 
   &lt;li&gt;The selector is not recomputed unless one of its arguments changes&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;183&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux Form?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Form&lt;/em&gt; works with React and Redux to enable a form in React to use Redux to store all of its state. Redux Form can be used with raw HTML5 inputs, but it also works very well with common UI frameworks like Material UI, React Widgets and React Bootstrap.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;184&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of Redux Form?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux Form are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Field values persistence via Redux store.&lt;/li&gt; 
   &lt;li&gt;Validation (sync/async) and submission.&lt;/li&gt; 
   &lt;li&gt;Formatting, parsing and normalization of field values.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;185&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add multiple middlewares to Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;applyMiddleware()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, you can add &lt;code&gt;redux-thunk&lt;/code&gt; and &lt;code&gt;logger&lt;/code&gt; passing them as arguments to &lt;code&gt;applyMiddleware()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createStore, applyMiddleware } from &#39;redux&#39;
const createStoreWithMiddleware = applyMiddleware(ReduxThunk, logger)(createStore)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;186&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to set initial state in Redux?&lt;/h3&gt; &lt;p&gt;You need to pass initial state as second argument to createStore:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const rootReducer = combineReducers({
  todos: todos,
  visibilityFilter: visibilityFilter
})

const initialState = {
  todos: [{ id: 123, name: &#39;example&#39;, completed: false }]
}

const store = createStore(
  rootReducer,
  initialState
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;187&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Relay is different from Redux?&lt;/h3&gt; &lt;p&gt;Relay is similar to Redux in that they both use a single store. The main difference is that relay only manages state originated from the server, and all access to the state is used via &lt;em&gt;GraphQL&lt;/em&gt; queries (for reading data) and mutations (for changing data). Relay caches the data for you and optimizes data fetching for you, by fetching only changed data and nothing more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an action in Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Actions&lt;/em&gt; are plain JavaScript objects or payloads of information that send data from your application to your store. They are the only source of information for the store. Actions must have a type property that indicates the type of action being performed.&lt;/p&gt; &lt;p&gt;For example, let&#39;s take an action which represents adding a new todo item:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{
  type: ADD_TODO,
  text: &#39;Add todo item&#39;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;React Native&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;188&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React Native and React?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; is a JavaScript library, supporting both front end web and being run on the server, for building user interfaces and web applications.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;React Native&lt;/strong&gt; is a mobile framework that compiles to native app components, allowing you to build native mobile applications (iOS, Android, and Windows) in JavaScript that allows you to use React to build your components, and implements React under the hood.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;189&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to test React Native apps?&lt;/h3&gt; &lt;p&gt;React Native can be tested only in mobile simulators like iOS and Android. You can run the app in your mobile using expo app (&lt;a href=&quot;https://expo.io&quot;&gt;https://expo.io&lt;/a&gt;) Where it syncs using QR code, your mobile and computer should be in same wireless network.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;190&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to do logging in React Native?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;console.warn&lt;/code&gt;, etc. As of React Native v0.29 you can simply run the following to see logs in the console:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ react-native log-ios
$ react-native log-android
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;191&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to debug your React Native?&lt;/h3&gt; &lt;p&gt;Follow the below steps to debug React Native app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Run your application in the iOS simulator.&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Command + D&lt;/code&gt; and a webpage should open up at &lt;code&gt;http://localhost:8081/debugger-ui&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Enable &lt;em&gt;Pause On Caught Exceptions&lt;/em&gt; for a better debugging experience.&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Command + Option + I&lt;/code&gt; to open the Chrome Developer tools, or open it via &lt;code&gt;View&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer Tools&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;You should now be able to debug as you normally would.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React supported libraries &amp;amp; Integration&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;192&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is reselect and how it works?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Reselect&lt;/em&gt; is a &lt;strong&gt;selector library&lt;/strong&gt; (for Redux) which uses &lt;em&gt;memoization&lt;/em&gt; concept. It was originally written to compute derived data from Redux-like applications state, but it can&#39;t be tied to any architecture or library.&lt;/p&gt; &lt;p&gt;Reselect keeps a copy of the last inputs/outputs of the last call, and recomputes the result only if one of the inputs changes. If the the same inputs are provided twice in a row, Reselect returns the cached output. It&#39;s memoization and cache are fully customizable.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;193&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Flow?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flow&lt;/em&gt; is a &lt;em&gt;static type checker&lt;/em&gt; designed to find type errors in JavaScript. Flow types can express much more fine-grained distinctions than traditional type systems. For example, Flow helps you catch errors involving &lt;code&gt;null&lt;/code&gt;, unlike most type systems.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;194&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Flow and PropTypes?&lt;/h3&gt; &lt;p&gt;Flow is a &lt;em&gt;static analysis tool&lt;/em&gt; (static checker) which uses a superset of the language, allowing you to add type annotations to all of your code and catch an entire class of bugs at compile time.&lt;/p&gt; &lt;p&gt;PropTypes is a &lt;em&gt;basic type checker&lt;/em&gt; (runtime checker) which has been patched onto React. It can&#39;t check anything other than the types of the props being passed to a given component. If you want more flexible typechecking for your entire project Flow/TypeScript are appropriate choices.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;195&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use Font Awesome icons in React?&lt;/h3&gt; &lt;p&gt;The below steps followed to include Font Awesome in React:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Install &lt;code&gt;font-awesome&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install --save font-awesome
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Import &lt;code&gt;font-awesome&lt;/code&gt; in your &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;font-awesome/css/font-awesome.min.css&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Add Font Awesome classes in &lt;code&gt;className&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  return &amp;lt;div&amp;gt;&amp;lt;i className={&#39;fa fa-spinner&#39;} /&amp;gt;&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;196&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Dev Tools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Developer Tools&lt;/em&gt; let you inspect the component hierarchy, including component props and state. It exists both as a browser extension (for Chrome and Firefox), and as a standalone app (works with other environments including Safari, IE, and React Native).&lt;/p&gt; &lt;p&gt;The official extensions available for different browsers or environments.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Chrome extension&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Firefox extension&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Standalone app&lt;/strong&gt; (Safari, React Native, etc)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;197&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is DevTools not loading in Chrome for local files?&lt;/h3&gt; &lt;p&gt;If you opened a local HTML file in your browser (&lt;code&gt;file://...&lt;/code&gt;) then you must first open &lt;em&gt;Chrome Extensions&lt;/em&gt; and check &lt;code&gt;Allow access to file URLs&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;198&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use Polymer in React?&lt;/h3&gt; &lt;p&gt;You need to follow below steps to use Polymer in React,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create a Polymer element:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;../../bower_components/polymer/polymer.html&#39; /&amp;gt;
Polymer({
  is: &#39;calender-element&#39;,
  ready: function() {
    this.textContent = &#39;I am a calender&#39;
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Create the Polymer component HTML tag by importing it in a HTML document, e.g. import it in the &lt;code&gt;index.html&lt;/code&gt; of your React application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;./src/polymer-components/calender-element.html&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Use that element in the JSX file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;

class MyComponent extends React.Component {
  render() {
    return (
      &amp;lt;calender-element /&amp;gt;
    )
  }
}

export default MyComponent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;199&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of React over Vue.js?&lt;/h3&gt; &lt;p&gt;React has the following advantages over Vue.js:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Gives more flexibility in large apps developing.&lt;/li&gt; 
   &lt;li&gt;Easier to test.&lt;/li&gt; 
   &lt;li&gt;Suitable for mobile apps creating.&lt;/li&gt; 
   &lt;li&gt;More information and solutions available.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of advantages are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;200&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React and Angular?&lt;/h3&gt; &lt;p&gt;Let&#39;s see the difference between React and Angular in a table format.&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;React&lt;/th&gt; 
     &lt;th&gt;Angular&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;React is a library and has only the View layer&lt;/td&gt; 
     &lt;td&gt;Angular is a framework and has complete MVC functionality&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;React handles rendering on the server side&lt;/td&gt; 
     &lt;td&gt;AngularJS renders only on the client side but Angular 2 and above renders on the server side&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;React uses JSX that looks like HTML in JS which can be confusing&lt;/td&gt; 
     &lt;td&gt;Angular follows the template approach for HTML, which makes code shorter and easy to understand&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;React Native, which is a React type to build mobile applications are faster and more stable&lt;/td&gt; 
     &lt;td&gt;Ionic, Angular&#39;s mobile native app is relatively less stable and slower&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;In React, data flows only in one way and hence debugging is easy&lt;/td&gt; 
     &lt;td&gt;In Angular, data flows both way i.e it has two-way data binding between children and parent and hence debugging is often difficult&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of differences are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;201&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why React tab is not showing up in DevTools?&lt;/h3&gt; &lt;p&gt;When the page loads, &lt;em&gt;React DevTools&lt;/em&gt; sets a global named &lt;code&gt;__REACT_DEVTOOLS_GLOBAL_HOOK__&lt;/code&gt;, then React communicates with that hook during initialization. If the website is not using React or if React fails to communicate with DevTools then it won&#39;t show up the tab.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;202&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Styled Components?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;styled-components&lt;/code&gt; is a JavaScript library for styling React applications. It removes the mapping between styles and components, and lets you write actual CSS augmented with JavaScript.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;203&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example of Styled Components?&lt;/h3&gt; &lt;p&gt;Lets create &lt;code&gt;&amp;lt;Title&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Wrapper&amp;gt;&lt;/code&gt; components with specific styles for each.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import styled from &#39;styled-components&#39;

// Create a &amp;lt;Title&amp;gt; component that renders an &amp;lt;h1&amp;gt; which is centered, red and sized at 1.5em
const Title = styled.h1`
  font-size: 1.5em;
  text-align: center;
  color: palevioletred;
`

// Create a &amp;lt;Wrapper&amp;gt; component that renders a &amp;lt;section&amp;gt; with some padding and a papayawhip background
const Wrapper = styled.section`
  padding: 4em;
  background: papayawhip;
`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These two variables, &lt;code&gt;Title&lt;/code&gt; and &lt;code&gt;Wrapper&lt;/code&gt;, are now components that you can render just like any other react component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Wrapper&amp;gt;
  &amp;lt;Title&amp;gt;{&#39;Lets start first styled component!&#39;}&amp;lt;/Title&amp;gt;
&amp;lt;/Wrapper&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;204&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Relay?&lt;/h3&gt; &lt;p&gt;Relay is a JavaScript framework for providing a data layer and client-server communication to web applications using the React view layer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;205&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use TypeScript in &lt;code&gt;create-react-app&lt;/code&gt; application?&lt;/h3&gt; &lt;p&gt;Starting from react-scripts@2.1.0 or higher, there is a built-in support for typescript. i.e, &lt;code&gt;create-react-app&lt;/code&gt; now supports typescript natively. You can just pass &lt;code&gt;--typescript&lt;/code&gt; option as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-react-app my-app --typescript

# or

yarn create react-app my-app --typescript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But for lower versions of react scripts, just supply &lt;code&gt;--scripts-version&lt;/code&gt; option as &lt;code&gt;react-scripts-ts&lt;/code&gt; while you create a new project. &lt;code&gt;react-scripts-ts&lt;/code&gt; is a set of adjustments to take the standard &lt;code&gt;create-react-app&lt;/code&gt; project pipeline and bring TypeScript into the mix.&lt;/p&gt; &lt;p&gt;Now the project layout should look like the following:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;my-app/
├─ .gitignore
├─ images.d.ts
├─ node_modules/
├─ public/
├─ src/
│  └─ ...
├─ package.json
├─ tsconfig.json
├─ tsconfig.prod.json
├─ tsconfig.test.json
└─ tslint.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Miscellaneous&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;206&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of Reselect library?&lt;/h3&gt; &lt;p&gt;Let&#39;s see the main features of Reselect library,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Selectors can compute derived data, allowing Redux to store the minimal possible state.&lt;/li&gt; 
   &lt;li&gt;Selectors are efficient. A selector is not recomputed unless one of its arguments changes.&lt;/li&gt; 
   &lt;li&gt;Selectors are composable. They can be used as input to other selectors.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h4&gt;Give an example of Reselect usage?&lt;/h4&gt; &lt;p&gt;Let&#39;s take calculations and different amounts of a shipment order with the simplified usage of Reselect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createSelector } from &#39;reselect&#39;

const shopItemsSelector = state =&amp;gt; state.shop.items
const taxPercentSelector = state =&amp;gt; state.shop.taxPercent

const subtotalSelector = createSelector(
  shopItemsSelector,
  items =&amp;gt; items.reduce((acc, item) =&amp;gt; acc + item.value, 0)
)

const taxSelector = createSelector(
  subtotalSelector,
  taxPercentSelector,
  (subtotal, taxPercent) =&amp;gt; subtotal * (taxPercent / 100)
)

export const totalSelector = createSelector(
  subtotalSelector,
  taxSelector,
  (subtotal, tax) =&amp;gt; ({ total: subtotal + tax })
)

let exampleState = {
  shop: {
    taxPercent: 8,
    items: [
      { name: &#39;apple&#39;, value: 1.20 },
      { name: &#39;orange&#39;, value: 0.95 },
    ]
  }
}

console.log(subtotalSelector(exampleState)) // 2.15
console.log(taxSelector(exampleState))      // 0.172
console.log(totalSelector(exampleState))    // { total: 2.322 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;209&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Does the statics object work with ES6 classes in React?&lt;/h3&gt; &lt;p&gt;No, &lt;code&gt;statics&lt;/code&gt; only works with &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;someComponent= React.createClass({
  statics: {
    someMethod: function() {
      // ..
    }
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can write statics inside ES6+ classes as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
  static propTypes = {
    // ...
  }

  static someMethod() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or writing them outside class as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
   ....
}

Component.propTypes = {...}
Component.someMethod = function(){....}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;210&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can Redux only be used with React?&lt;/h3&gt; &lt;p&gt;Redux can be used as a data store for any UI layer. The most common usage is with React and React Native, but there are bindings available for Angular, Angular 2, Vue, Mithril, and more. Redux simply provides a subscription mechanism which can be used by any other code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;211&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do you need to have a particular build tool to use Redux?&lt;/h3&gt; &lt;p&gt;Redux is originally written in ES6 and transpiled for production into ES5 with Webpack and Babel. You should be able to use it regardless of your JavaScript build process. Redux also offers a UMD build that can be used directly without any build process at all.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;212&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Redux Form &lt;code&gt;initialValues&lt;/code&gt; get updated from state?&lt;/h3&gt; &lt;p&gt;You need to add &lt;code&gt;enableReinitialize : true&lt;/code&gt; setting.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const InitializeFromStateForm = reduxForm({
  form: &#39;initializeFromState&#39;,
  enableReinitialize : true
})(UserEdit)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your &lt;code&gt;initialValues&lt;/code&gt; prop gets updated, your form will update too.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;213&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How React PropTypes allow different types for one prop?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;oneOfType()&lt;/code&gt; method of &lt;code&gt;PropTypes&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, the height property can be defined with either &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; type as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Component.PropTypes = {
  size: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number
  ])
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;214&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I import an SVG file as react component?&lt;/h3&gt; &lt;p&gt;You can import SVG directly as component instead of loading it as a file. This feature is available with &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { ReactComponent as Logo } from &#39;./logo.svg&#39;

const App = () =&amp;gt; (
  &amp;lt;div&amp;gt;
    {/* Logo is an actual react component */}
    &amp;lt;Logo /&amp;gt;
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Don&#39;t forget about the curly braces in the import.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;215&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are inline ref callbacks or functions not recommended?&lt;/h3&gt; &lt;p&gt;If the ref callback is defined as an inline function, it will get called twice during updates, first with null and then again with the DOM element. This is because a new instance of the function is created with each render, so React needs to clear the old ref and set up the new one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserForm extends Component {
  handleSubmit = () =&amp;gt; {
    console.log(&quot;Input Value is: &quot;, this.input.value)
  }


  render () {
   return (
     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
       &amp;lt;input
         type=&#39;text&#39;
         ref={(input) =&amp;gt; this.input = input} /&amp;gt; // Access DOM input in handle submit
       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;
     &amp;lt;/form&amp;gt;
   )
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But our expectation is for the ref callback to get called once, when the component mounts. One quick fix is to use the ES7 class property syntax to define the function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserForm extends Component {
 handleSubmit = () =&amp;gt; {
   console.log(&quot;Input Value is: &quot;, this.input.value)
 }

 setSearchInput = (input) =&amp;gt; {
   this.input = input
 }

 render () {
   return (
     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
       &amp;lt;input
         type=&#39;text&#39;
         ref={this.setSearchInput} /&amp;gt; // Access DOM input in handle submit
       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;
     &amp;lt;/form&amp;gt;
   )
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;**Note:** In React v16.3,
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;216&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is render hijacking in react?&lt;/h3&gt; &lt;p&gt;The concept of render hijacking is the ability to control what a component will output from another component. It actually means that you decorate your component by wrapping it into a Higher-Order component. By wrapping you can inject additional props or make other changes, which can cause changing logic of rendering. It does not actually enables hijacking, but by using HOC you make your component behave in different way.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;217&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are HOC factory implementations?&lt;/h3&gt; &lt;p&gt;There are two main ways of implementing HOCs in React.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Props Proxy (PP) and&lt;/li&gt; 
   &lt;li&gt;Inheritance Inversion (II).&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;But they follow different approaches for manipulating the &lt;em&gt;WrappedComponent&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Props Proxy&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the render method of the HOC returns a React Element of the type of the WrappedComponent. We also pass through the props that the HOC receives, hence the name &lt;strong&gt;Props Proxy&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;
function ppHOC(WrappedComponent) {
 return class PP extends React.Component {
   render() {
     return &amp;lt;WrappedComponent {...this.props}/&amp;gt;
   }
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Inheritance Inversion&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the returned HOC class (Enhancer) extends the WrappedComponent. It is called Inheritance Inversion because instead of the WrappedComponent extending some Enhancer class, it is passively extended by the Enhancer. In this way the relationship between them seems &lt;strong&gt;inverse&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function iiHOC(WrappedComponent) {
 return class Enhancer extends WrappedComponent {
   render() {
     return super.render()
   }
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;218&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass numbers to React component?&lt;/h3&gt; &lt;p&gt;You should be passing the numbers via curly braces({}) where as strings in quotes&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;   React.render(&amp;lt;User age={30} department={&quot;IT&quot;} /&amp;gt;, document.getElementById(&#39;container&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;219&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/h3&gt; &lt;p&gt;It is up to developer decision. i.e, It is developer job to determine what kinds of state make up your application, and where each piece of state should live. Some users prefer to keep every single piece of data in Redux, to maintain a fully serializable and controlled version of their application at all times. Others prefer to keep non-critical or UI state, such as “is this dropdown currently open”, inside a component&#39;s internal state.&lt;/p&gt; &lt;p&gt;Below are the thumb rules to determine what kind of data should be put into Redux&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Do other parts of the application care about this data?&lt;/li&gt; 
   &lt;li&gt;Do you need to be able to create further derived data based on this original data?&lt;/li&gt; 
   &lt;li&gt;Is the same data being used to drive multiple components?&lt;/li&gt; 
   &lt;li&gt;Is there value to you in being able to restore this state to a given point in time (ie, time travel debugging)?&lt;/li&gt; 
   &lt;li&gt;Do you want to cache the data (i.e, use what&#39;s in state if it&#39;s already there instead of re-requesting it)?&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;220&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of registerServiceWorker in React?&lt;/h3&gt; &lt;p&gt;React creates a service worker for you without any configuration by default. The service worker is a web API that helps you cache your assets and other files so that when the user is offline or on slow network, he/she can still see results on the screen, as such, it helps you build a better user experience, that&#39;s what you should know about service worker&#39;s for now. It&#39;s all about adding offline capabilities to your site.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;   import React from &#39;react&#39;;
   import ReactDOM from &#39;react-dom&#39;;
   import App from &#39;./App&#39;;
   import registerServiceWorker from &#39;./registerServiceWorker&#39;;

   ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;root&#39;));
   registerServiceWorker();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;221&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React memo function?&lt;/h3&gt; &lt;p&gt;Class components can be restricted from rendering when their input props are the same using &lt;strong&gt;PureComponent or shouldComponentUpdate&lt;/strong&gt;. Now you can do the same with function components by wrapping them in &lt;strong&gt;React.memo&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = React.memo(function MyComponent(props) {
 /* only rerenders if props change */
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;222&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React lazy function?&lt;/h3&gt; The &lt;code&gt;React.lazy&lt;/code&gt; function lets you render an dynamic import as a regular component. It will automatically load the bundle containing the OtherComponent when the component gets rendered. This must return a Promise which resolves to a module with a default export containing a React component. &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));

function MyComponent() {
 return (
   &amp;lt;div&amp;gt;
     &amp;lt;OtherComponent /&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; React.lazy and Suspense is not yet available for server-side rendering. If you want to do code-splitting in a server rendered app, we still recommend React Loadable.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;223&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent unnecessary updates using setState?&lt;/h3&gt; &lt;p&gt;You can compare current value of the state with an existing state value and decide whether to rerender the page or not. If the values are same then you need to return &lt;strong&gt;null&lt;/strong&gt; to stop re-rendering otherwise return the latest state value.&lt;/p&gt; &lt;p&gt;For example, the user profile information is conditionally rendered as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;getUserProfile = user =&amp;gt; {
  const latestAddress = user.address;
  this.setState(state =&amp;gt; {
    if (state.address === latestAddress) {
      return null;
    } else {
      return { title: latestAddress };
    }
  });
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;224&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Arrays&lt;/strong&gt;: Unlike older releases, you don&#39;t need to make sure &lt;strong&gt;render&lt;/strong&gt; method return a single element in React16. You are able to return multiple sibling elements without a wrapping element by returning an array.&lt;/p&gt; &lt;p&gt;For example, let us take the below list of developers,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ReactJSDevs = () =&amp;gt; {
  return [
    &amp;lt;li key=&quot;1&quot;&amp;gt;John&amp;lt;/li&amp;gt;,
    &amp;lt;li key=&quot;2&quot;&amp;gt;Jackie&amp;lt;/li&amp;gt;,
    &amp;lt;li key=&quot;3&quot;&amp;gt;Jordan&amp;lt;/li&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also merge this array of items in another array component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const JSDevs = () =&amp;gt; {
  return (
    &amp;lt;ul&amp;gt;
      &amp;lt;li&amp;gt;Brad&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;Brodge&amp;lt;/li&amp;gt;
      &amp;lt;ReactJSDevs/&amp;gt;
      &amp;lt;li&amp;gt;Brandon&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Strings and Numbers:&lt;/strong&gt; You can also return string and number type from the render method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
 return &#39;Welcome to ReactJS questions&#39;;
}
// Number
render() {
 return 2018;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;225&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use class field declarations syntax in React classes?&lt;/h3&gt; &lt;p&gt;React Class Components can be made much more concise using the class field declarations. You can initialize local state without using the constructor and declare class methods by using arrow functions without the extra need to bind them.&lt;/p&gt; &lt;p&gt;Let&#39;s take a counter example to demonstrate class field declarations for state without using constructor and methods without binding,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Counter extends Component {
  state = { value: 0 };

  handleIncrement = () =&amp;gt; {
    this.setState(prevState =&amp;gt; ({
      value: prevState.value + 1
    }));
  };

  handleDecrement = () =&amp;gt; {
    this.setState(prevState =&amp;gt; ({
      value: prevState.value - 1
    }));
  };

  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.state.value}

        &amp;lt;button onClick={this.handleIncrement}&amp;gt;+&amp;lt;/button&amp;gt;
        &amp;lt;button onClick={this.handleDecrement}&amp;gt;-&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;226&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are hooks?&lt;/h3&gt; &lt;p&gt;Hooks is a new feature(React 16.8) that lets you use state and other React features without writing a class.&lt;/p&gt; &lt;p&gt;Let&#39;s see an example of useState hook example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { useState } from &#39;react&#39;;

function Example() {
  // Declare a new state variable, which we&#39;ll call &quot;count&quot;
  const [count, setCount] = useState(0);

  return (
    &amp;lt;div&amp;gt;
      &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;
        Click me
      &amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;227&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the rules needs to follow for hooks?&lt;/h3&gt; &lt;p&gt;You need to follow two rules in order to use hooks,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Call Hooks only at the top level of your react functions. i.e, You shouldn’t call Hooks inside loops, conditions, or nested functions. This will ensure that Hooks are called in the same order each time a component renders and it preserves the state of Hooks between multiple useState and useEffect calls.&lt;/li&gt; 
   &lt;li&gt;Call Hooks from React Functions only. i.e, You shouldn’t call Hooks from regular JavaScript functions.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;228&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to ensure hooks followed the rules in your project?&lt;/h3&gt; React team released an ESLint plugin called &lt;strong&gt;eslint-plugin-react-hooks&lt;/strong&gt; that enforces these two rules. You can add this plugin to your project using the below command, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install eslint-plugin-react-hooks@next
&lt;/code&gt;&lt;/pre&gt; And apply the below config in your ESLint config file, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Your ESLint configuration
{
  &quot;plugins&quot;: [
    // ...
    &quot;react-hooks&quot;
  ],
  &quot;rules&quot;: {
    // ...
    &quot;react-hooks/rules-of-hooks&quot;: &quot;error&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; This plugin is intended to use in Create React App by default.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;229&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Flux and Redux?&lt;/h3&gt; &lt;p&gt;Below are the major differences between Flux and Redux&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Flux&lt;/th&gt; 
     &lt;th&gt;Redux&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;State is mutable&lt;/td&gt; 
     &lt;td&gt;State is immutable&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;The Store contains both state and change logic&lt;/td&gt; 
     &lt;td&gt;The Store and change logic are separate&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;There are multiple stores exist&lt;/td&gt; 
     &lt;td&gt;There is only one store exist&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;All the stores are disconnected and flat&lt;/td&gt; 
     &lt;td&gt;Single store with hierarchical reducers&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It has a singleton dispatcher&lt;/td&gt; 
     &lt;td&gt;There is no concept of dispatcher&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;React components subscribe to the store&lt;/td&gt; 
     &lt;td&gt;Container components uses connect function&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;230&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of React Router V4?&lt;/h3&gt; &lt;p&gt;Below are the main benefits of React Router V4 module,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;In React Router v4(version 4), the API is completely about components. A router can be visualized as a single component(&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;) which wraps specific child router components(&lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;You don&#39;t need to manually set history. The router module will take care history by wrapping routes with &lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt; component.&lt;/li&gt; 
   &lt;li&gt;The application size is reduced by adding only the specific router module(Web, core, or native)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;231&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycle method is invoked after an error has been thrown by a descendant component. The method receives two parameters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;error: - The error object which was thrown&lt;/li&gt; 
   &lt;li&gt;info: - An object with a componentStack key contains the information about which component threw the error.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The method structure would be as follows&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;componentDidCatch(error, info)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;232&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;In which scenarios error boundaries do not catch errors?&lt;/h3&gt; &lt;p&gt;Below are the cases in which error boundaries doesn&#39;t work,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Inside Event handlers&lt;/li&gt; 
   &lt;li&gt;Asynchronous code using &lt;strong&gt;setTimeout or requestAnimationFrame&lt;/strong&gt; callbacks&lt;/li&gt; 
   &lt;li&gt;During Server side rendering&lt;/li&gt; 
   &lt;li&gt;When errors thrown in the error boundary code itself&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;233&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you not need error boundaries for event handlers?&lt;/h3&gt; &lt;p&gt;Error boundaries do not catch errors inside event handlers.&lt;/p&gt; &lt;p&gt;React doesn’t need error boundaries to recover from errors in event handlers. Unlike the render method and lifecycle methods, the event handlers don’t happen during rendering. So if they throw, React still knows what to display on the screen.&lt;/p&gt; &lt;p&gt;If you need to catch an error inside an event handler, use the regular JavaScript try / catch statement:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props);
    this.state = { error: null };
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick() {
    try {
      // Do something that could throw
    } catch (error) {
      this.setState({ error });
    }
  }

  render() {
    if (this.state.error) {
      return &amp;lt;h1&amp;gt;Caught an error.&amp;lt;/h1&amp;gt;
    }
    return &amp;lt;button onClick={this.handleClick}&amp;gt;Click Me&amp;lt;/button&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note that the above example is demonstrating regular JavaScript behavior and doesn’t use error boundaries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;234&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between try catch block and error boundaries?&lt;/h3&gt; &lt;p&gt;Try catch block works with imperative code whereas error boundaries are meant for declarative code to render on the screen.&lt;/p&gt; &lt;p&gt;For example, the try catch block used for below imperative code&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  showButton();
} catch (error) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas error boundaries wrap declarative code as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ErrorBoundary&amp;gt;
  &amp;lt;MyComponent /&amp;gt;
&amp;lt;/ErrorBoundary&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;So if an error occurs in a &lt;strong&gt;componentDidUpdate&lt;/strong&gt; method caused by a &lt;strong&gt;setState&lt;/strong&gt; somewhere deep in the tree, it will still correctly propagate to the closest error boundary.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;235&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the behavior of uncaught errors in react 16?&lt;/h3&gt; In React 16, errors that were not caught by any error boundary will result in unmounting of the whole React component tree. The reason behind this decision is that it is worse to leave corrupted UI in place than to completely remove it. For example, it is worse for a payments app to display a wrong amount than to render nothing.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;236&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the proper placement for error boundaries?&lt;/h3&gt; The granularity of error boundaries usage is up to the developer based on project needs. You can follow either of these approaches, 
  &lt;ol&gt; 
   &lt;li&gt;You can wrap top-level route components to display a generic error message for the entire application.&lt;/li&gt; 
   &lt;li&gt;You can also wrap individual components in an error boundary to protect them from crashing the rest of the application.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;237&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of component stack trace from error boundary?&lt;/h3&gt; &lt;p&gt;Apart from error messages and javascript stack, React16 will display the component stack trace with file names and line numbers using error boundary concept.&lt;/p&gt; &lt;p&gt;For example, BuggyCounter component displays the component stack trace as below,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/error_boundary.png&quot; alt=&quot;stacktrace&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;238&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the required method to be defined for a class component?&lt;/h3&gt; The &lt;code&gt;render()&lt;/code&gt; method is the only required method in a class component. i.e, All methods other than render method are optional for a class component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;239&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible return types of render method?&lt;/h3&gt; &lt;p&gt;Below are the list of following types used and return from render method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;React elements:&lt;/strong&gt; Elements that instruct React to render a DOM node. It includes html elements such as &lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt; and user defined elements.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Arrays and fragments:&lt;/strong&gt; Return multiple elements to render as Arrays and Fragments to wrap multiple elements&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Portals:&lt;/strong&gt; Render children into a different DOM subtree.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;String and numbers:&lt;/strong&gt; Render both Strings and Numbers as text nodes in the DOM&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans or null:&lt;/strong&gt; Doesn&#39;t render anything but these types are used to conditionally render content.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;240&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main purpose of constructor?&lt;/h3&gt; &lt;p&gt;The constructor is mainly used for two purposes,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;To initialize local state by assigning object to this.state&lt;/li&gt; 
   &lt;li&gt;For binding event handler methods to the instance For example, the below code covers both the above cases,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;constructor(props) {
  super(props);
  // Don&#39;t call this.setState() here!
  this.state = { counter: 0 };
  this.handleClick = this.handleClick.bind(this);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;241&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it mandatory to define constructor for React component?&lt;/h3&gt; No, it is not mandatory. i.e, If you don’t initialize state and you don’t bind methods, you don’t need to implement a constructor for your React component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;242&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are default props?&lt;/h3&gt; &lt;p&gt;The defaultProps are defined as a property on the component class to set the default props for the class. This is used for undefined props, but not for null props.&lt;/p&gt; &lt;p&gt;For example, let us create color default prop for the button component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyButton extends React.Component {
  // ...
}

MyButton.defaultProps = {
  color: &#39;red&#39;
};

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If props.color is not provided then it will set the default value to &#39;red&#39;. i.e, Whenever you try to access the color prop it uses default value&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
   return &amp;lt;MyButton /&amp;gt; ; // props.color will be set to red
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you provide null value then it remains null value.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;243&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should not call setState in componentWillUnmount?&lt;/h3&gt; You should not call &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillUnmount()&lt;/code&gt; because once a component instance is unmounted, it will never be mounted again.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;244&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of getDerivedStateFromError?&lt;/h3&gt; &lt;p&gt;This lifecycle method is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.&lt;/p&gt; &lt;p&gt;The signature of the lifecycle method is as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;static getDerivedStateFromError(error)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let us take error boundary use case with the above lifecycle method for demonstration purpose,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error) {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return &amp;lt;h1&amp;gt;Something went wrong.&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;245&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the methods order when component re-rendered?&lt;/h3&gt; &lt;p&gt;An update can be caused by changes to props or state. The below methods are called in the following order when a component is being re-rendered.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;static getDerivedStateFromProps()&lt;/li&gt; 
   &lt;li&gt;shouldComponentUpdate()&lt;/li&gt; 
   &lt;li&gt;render()&lt;/li&gt; 
   &lt;li&gt;getSnapshotBeforeUpdate()&lt;/li&gt; 
   &lt;li&gt;componentDidUpdate()&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;246&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the methods invoked during error handling?&lt;/h3&gt; &lt;p&gt;Below methods are called when there is an error during rendering, in a lifecycle method, or in the constructor of any child component.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;static getDerivedStateFromError()&lt;/li&gt; 
   &lt;li&gt;componentDidCatch()&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;247&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of displayName class property?&lt;/h3&gt; &lt;p&gt;The displayName string is used in debugging messages. Usually, you don’t need to set it explicitly because it’s inferred from the name of the function or class that defines the component. You might want to set it explicitly if you want to display a different name for debugging purposes or when you create a higher-order component.&lt;/p&gt; &lt;p&gt;For example, To ease debugging, choose a display name that communicates that it’s the result of a withSubscription HOC.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function withSubscription(WrappedComponent) {
  class WithSubscription extends React.Component {/* ... */}
  WithSubscription.displayName = `WithSubscription(${getDisplayName(WrappedComponent)})`;
  return WithSubscription;
}
function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || &#39;Component&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;248&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the browser support for react applications?&lt;/h3&gt; React supports all popular browsers, including Internet Explorer 9 and above, although some polyfills are required for older browsers such as IE 9 and IE 10. If you use &lt;strong&gt;es5-shim and es5-sham&lt;/strong&gt; polyfill then it even support old browsers that doesn&#39;t support ES5 methods.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;249&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of unmountComponentAtNode method?&lt;/h3&gt; &lt;p&gt;This method is available from react-dom package and it removes a mounted React component from the DOM and clean up its event handlers and state. If no component was mounted in the container, calling this function does nothing. Returns true if a component was unmounted and false if there was no component to unmount.&lt;/p&gt; &lt;p&gt;The method signature would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactDOM.unmountComponentAtNode(container)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;250&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is code-splitting?&lt;/h3&gt; &lt;p&gt;Code-Splitting is a feature supported by bundlers like Webpack and Browserify which can create multiple bundles that can be dynamically loaded at runtime. The react project supports code splitting via dynamic import() feature.&lt;/p&gt; &lt;p&gt;For example, in the below code snippets, it will make moduleA.js and all its unique dependencies as a separate chunk that only loads after the user clicks the &#39;Load&#39; button. &lt;strong&gt;moduleA.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const moduleA = &#39;Hello&#39;;

export { moduleA };
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;;

class App extends Component {
  handleClick = () =&amp;gt; {
    import(&#39;./moduleA&#39;)
      .then(({ moduleA }) =&amp;gt; {
        // Use moduleA
      })
      .catch(err =&amp;gt; {
        // Handle failure
      });
  };

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;button onClick={this.handleClick}&amp;gt;Load&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

export default App;

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;251&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of strict mode?&lt;/h3&gt; &lt;p&gt;The 
   &lt;strictmode&gt;
     will be helpful in the below cases
   &lt;/strictmode&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Identifying components with &lt;strong&gt;unsafe lifecycle methods&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Warning about &lt;strong&gt;legacy string ref&lt;/strong&gt; API usage.&lt;/li&gt; 
   &lt;li&gt;Detecting unexpected &lt;strong&gt;side effects&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Detecting &lt;strong&gt;legacy context&lt;/strong&gt; API.&lt;/li&gt; 
   &lt;li&gt;Warning about deprecated findDOMNode usage&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;252&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Keyed Fragments?&lt;/h3&gt; &lt;p&gt;The Fragments declared with the explicit &amp;lt;React.Fragment&amp;gt; syntax may have keys. The general use case is mapping a collection to an array of fragments as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Glossary(props) {
  return (
    &amp;lt;dl&amp;gt;
      {props.items.map(item =&amp;gt; (
        // Without the `key`, React will fire a key warning
        &amp;lt;React.Fragment key={item.id}&amp;gt;
          &amp;lt;dt&amp;gt;{item.term}&amp;lt;/dt&amp;gt;
          &amp;lt;dd&amp;gt;{item.description}&amp;lt;/dd&amp;gt;
        &amp;lt;/React.Fragment&amp;gt;
      ))}
    &amp;lt;/dl&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; key is the only attribute that can be passed to Fragment. In the future, there might be a support for additional attributes, such as event handlers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;253&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Does React support all HTML attributes?&lt;/h3&gt; &lt;p&gt;As of React 16, both standard or custom DOM attributes are fully supported. Since React components often take both custom and DOM-related props, React uses the camelCase convention just like the DOM APIs.&lt;/p&gt; &lt;p&gt;Let us take few props with respect to standard HTML attributes,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div tabIndex=&quot;-1&quot; /&amp;gt;      // Just like node.tabIndex DOM API
&amp;lt;div className=&quot;Button&quot; /&amp;gt; // Just like node.className DOM API
&amp;lt;input readOnly={true} /&amp;gt;  // Just like node.readOnly DOM API
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These props work similarly to the corresponding HTML attributes, with the exception of the special cases. It also support all SVG attributes.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;254&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the limitations with HOCs?&lt;/h3&gt; &lt;p&gt;Higher-order components come with a few caveats apart from its benefits. Below are the few listed in an order,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Don’t use HOCs inside the render method:&lt;/strong&gt; It is not recommended to apply a HOC to a component within the render method of a component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  // A new version of EnhancedComponent is created on every render
  // EnhancedComponent1 !== EnhancedComponent2
  const EnhancedComponent = enhance(MyComponent);
  // That causes the entire subtree to unmount/remount each time!
  return &amp;lt;EnhancedComponent /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code impact performance by remounting a component that causes the state of that component and all of its children to be lost. Instead, apply HOCs outside the component definition so that the resulting component is created only once.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static methods must be copied over:&lt;/strong&gt; When you apply a HOC to a component the new component does not have any of the static methods of the original component&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Define a static method
WrappedComponent.staticMethod = function() {/*...*/}
// Now apply a HOC
const EnhancedComponent = enhance(WrappedComponent);

// The enhanced component has no static method
typeof EnhancedComponent.staticMethod === &#39;undefined&#39; // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can overcome this by copying the methods onto the container before returning it,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function enhance(WrappedComponent) {
  class Enhance extends React.Component {/*...*/}
  // Must know exactly which method(s) to copy :(
  Enhance.staticMethod = WrappedComponent.staticMethod;
  return Enhance;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Refs aren’t passed through:&lt;/strong&gt; For HOCs you need to pass through all props to the wrapped component but this does not work for refs. This is because ref is not really a prop similar to key. In this case you need to use the React.forwardRef API&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;255&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to debug forwardRefs in DevTools?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React.forwardRef&lt;/strong&gt; accepts a render function as parameter and DevTools uses this function to determine what to display for the ref forwarding component.&lt;/p&gt; &lt;p&gt;For example, If you don&#39;t name the render function or not using displayName property then it will appear as ”ForwardRef” in the DevTools,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const WrappedComponent = React.forwardRef((props, ref) =&amp;gt; {
  return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But If you name the render function then it will appear as &lt;strong&gt;”ForwardRef(myFunction)”&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const WrappedComponent = React.forwardRef(
  function myFunction(props, ref) {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  }
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As an alternative, You can also set displayName property for forwardRef function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function logProps(Component) {
  class LogProps extends React.Component {
    // ...
  }

  function forwardRef(props, ref) {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  }

  // Give this component a more helpful display name in DevTools.
  // e.g. &quot;ForwardRef(logProps(MyComponent))&quot;
  const name = Component.displayName || Component.name;
  forwardRef.displayName = `logProps(${name})`;

  return React.forwardRef(forwardRef);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;256&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;When component props defaults to true?&lt;/h3&gt; &lt;p&gt;If you pass no value for a prop, it defaults to true. This behavior is available so that it matches the behavior of HTML.&lt;/p&gt; &lt;p&gt;For example, below expressions are equivalent,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;MyInput autocomplete /&amp;gt;

&amp;lt;MyInput autocomplete={true} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is not recommended to use this approach because it can be confused with the ES6 object shorthand (example, &lt;code&gt;{name}&lt;/code&gt; which is short for &lt;code&gt;{name: name}&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;257&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is NextJS and major features of it?&lt;/h3&gt; &lt;p&gt;Next.js is a popular and lightweight framework for static and server‑rendered applications built with React. It also provides styling and routing solutions. Below are the major features provided by NextJS,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Server-rendered by default&lt;/li&gt; 
   &lt;li&gt;Automatic code splitting for faster page loads&lt;/li&gt; 
   &lt;li&gt;Simple client-side routing (page based)&lt;/li&gt; 
   &lt;li&gt;Webpack-based dev environment which supports (HMR)&lt;/li&gt; 
   &lt;li&gt;Able to implement with Express or any other Node.js HTTP server&lt;/li&gt; 
   &lt;li&gt;Customizable with your own Babel and Webpack configurations&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;258&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you pass an event handler to a component?&lt;/h3&gt; &lt;p&gt;You can pass event handlers and other functions as props to child components. It can be used in child component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;259&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it good to use arrow functions in render methods?&lt;/h3&gt; &lt;p&gt;Yes, You can use. It is often the easiest way to pass parameters to callback functions. But you need to optimize the performance while using it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Foo extends Component {
  handleClick() {
    console.log(&#39;Click happened&#39;);
  }
  render() {
    return &amp;lt;button onClick={() =&amp;gt; this.handleClick()}&amp;gt;Click Me&amp;lt;/button&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using an arrow function in render method creates a new function each time the component renders, which may have performance implications&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;260&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent a function from being called multiple times?&lt;/h3&gt; &lt;p&gt;If you use an event handler such as &lt;strong&gt;onClick or onScroll&lt;/strong&gt; and want to prevent the callback from being fired too quickly, then you can limit the rate at which callback is executed. This can be achieved in the below possible ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Throttling:&lt;/strong&gt; Changes based on a time based frequency. For example, it can be used using _.throttle lodash function&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Debouncing:&lt;/strong&gt; Publish changes after a period of inactivity. For example, it can be used using _.debounce lodash function&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;RequestAnimationFrame throttling:&lt;/strong&gt; Changes based on requestAnimationFrame. For example, it can be used using raf-schd lodash function&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;261&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How JSX prevents Injection Attacks?&lt;/h3&gt; &lt;p&gt;React DOM escapes any values embedded in JSX before rendering them. Thus it ensures that you can never inject anything that’s not explicitly written in your application. Everything is converted to a string before being rendered.&lt;/p&gt; &lt;p&gt;For example, you can embed user input as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const name = response.potentiallyMaliciousInput;
const element = &amp;lt;h1&amp;gt;{name}&amp;lt;/h1&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way you can prevent XSS(Cross-site-scripting) attacks in the application.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;262&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you update rendered elements?&lt;/h3&gt; &lt;p&gt;You can update UI(represented by rendered element) by passing the newly created element to ReactDOM&#39;s render method.&lt;/p&gt; &lt;p&gt;For example, lets take a ticking clock example, where it updates the time by calling render method multiple times,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function tick() {
  const element = (
    &amp;lt;div&amp;gt;
      &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;It is {new Date().toLocaleTimeString()}.&amp;lt;/h2&amp;gt;
    &amp;lt;/div&amp;gt;
  );
  ReactDOM.render(element, document.getElementById(&#39;root&#39;));
}

setInterval(tick, 1000);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;263&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you say that props are read only?&lt;/h3&gt; &lt;p&gt;When you declare a component as a function or a class, it must never modify its own props.&lt;/p&gt; &lt;p&gt;Let us take a below capital function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function capital(amount, interest) {
   return amount + interest;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above function is called “pure” because it does not attempt to change their inputs, and always return the same result for the same inputs. Hence, React has a single rule saying &quot;All React components must act like pure functions with respect to their props.&quot;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;264&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you say that state updates are merged?&lt;/h3&gt; &lt;p&gt;When you call setState() in the component, React merges the object you provide into the current state.&lt;/p&gt; &lt;p&gt;For example, let us take a facebook user with posts and comments details as state variables,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  constructor(props) {
    super(props);
    this.state = {
      posts: [],
      comments: []
    };
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now you can update them independently with separate &lt;code&gt;setState()&lt;/code&gt; calls as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; componentDidMount() {
    fetchPosts().then(response =&amp;gt; {
      this.setState({
        posts: response.posts
      });
    });

    fetchComments().then(response =&amp;gt; {
      this.setState({
        comments: response.comments
      });
    });
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code snippets, &lt;code&gt;this.setState({comments})&lt;/code&gt; updates only comments variable without modifying or replacing posts variable.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;265&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you pass arguments to an event handler?&lt;/h3&gt; &lt;p&gt;During iterations or loops, it is common to pass an extra parameter to an event handler. This can be achieved through arrow functions or bind method.&lt;/p&gt; &lt;p&gt;Let us take an example of user details updated in a grid,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;button onClick={(e) =&amp;gt; this.updateUser(userId, e)}&amp;gt;Update User details&amp;lt;/button&amp;gt;
&amp;lt;button onClick={this.updateUser.bind(this, userId)}&amp;gt;Update User details&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In both the approaches, the synthetic argument e is passed as a second argument. You need to pass it explicitly for arrow functions and it forwarded automatically for bind method.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;266&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent component from rendering?&lt;/h3&gt; &lt;p&gt;You can prevent component from rendering by returning null based on specific condition. This way it can conditionally render component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Greeting(props) {
  if (!props.loggedIn) {
    return null;
  }

  return (
    &amp;lt;div className=&quot;greeting&quot;&amp;gt;
      welcome, {props.name}
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class User extends React.Component {
  constructor(props) {
    super(props);
    this.state = {loggedIn: false, name: &#39;John&#39;};
  }

  render() {
   return (
       &amp;lt;div&amp;gt;
         //Prevent component render if it is not loggedIn
         &amp;lt;Greeting loggedIn={this.state.loggedIn} /&amp;gt;
         &amp;lt;UserDetails name={this.state.name}&amp;gt;
       &amp;lt;/div&amp;gt;
   );
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above example, the greeting component skips its rendering section by applying condition and returning null value.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;267&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the conditions to safely use the index as a key?&lt;/h3&gt; &lt;p&gt;There are three conditions to make sure, it is safe use the index as a key.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The list and items are static– they are not computed and do not change&lt;/li&gt; 
   &lt;li&gt;The items in the list have no ids&lt;/li&gt; 
   &lt;li&gt;The list is never reordered or filtered.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;268&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it keys should be globally unique?&lt;/h3&gt; &lt;p&gt;Keys used within arrays should be unique among their siblings but they don’t need to be globally unique. i.e, You can use the same keys with two different arrays.&lt;/p&gt; &lt;p&gt;For example, the below book component uses two arrays with different arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Book(props) {
  const index = (
    &amp;lt;ul&amp;gt;
      {props.pages.map((page) =&amp;gt;
        &amp;lt;li key={page.id}&amp;gt;
          {page.title}
        &amp;lt;/li&amp;gt;
      )}
    &amp;lt;/ul&amp;gt;
  );
  const content = props.pages.map((page) =&amp;gt;
    &amp;lt;div key={page.id}&amp;gt;
      &amp;lt;h3&amp;gt;{page.title}&amp;lt;/h3&amp;gt;
      &amp;lt;p&amp;gt;{page.content}&amp;lt;/p&amp;gt;
      &amp;lt;p&amp;gt;{page.pageNumber}&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  );
  return (
    &amp;lt;div&amp;gt;
      {index}
      &amp;lt;hr /&amp;gt;
      {content}
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;269&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the popular choice for form handling?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;Formik&lt;/code&gt; is a form library for react which provides solutions such as validation, keeping track of the visited fields, and handling form submission.&lt;/p&gt; &lt;p&gt;In detail, You can categorize them as follows,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; 
   &lt;li&gt;Validation and error messages&lt;/li&gt; 
   &lt;li&gt;Handling form submission&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;It is used to create a scalable, performant, form helper with a minimal API to solve annoying stuff.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;270&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of formik over redux form library?&lt;/h3&gt; &lt;p&gt;Below are the main reasons to recommend formik over redux form library,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The form state is inherently short-term and local, so tracking it in Redux (or any kind of Flux library) is unnecessary.&lt;/li&gt; 
   &lt;li&gt;Redux-Form calls your entire top-level Redux reducer multiple times ON EVERY SINGLE KEYSTROKE. This way it increases input latency for large apps.&lt;/li&gt; 
   &lt;li&gt;Redux-Form is 22.5 kB minified gzipped whereas Formik is 12.7 kB&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;271&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you not required to use inheritance?&lt;/h3&gt; In React, it is recommend using composition instead of inheritance to reuse code between components. Both Props and composition give you all the flexibility you need to customize a component’s look and behavior in an explicit and safe way. Whereas, If you want to reuse non-UI functionality between components, it is suggested to extracting it into a separate JavaScript module. Later components import it and use that function, object, or a class, without extending it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;272&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use web components in react application?&lt;/h3&gt; &lt;p&gt;Yes, you can use web components in a react application. Even though many developers won&#39;t use this combination, it may require especially if you are using third-party UI components that are written using Web Components.&lt;/p&gt; &lt;p&gt;For example, let us use &lt;code&gt;Vaadin&lt;/code&gt; date picker web component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;;
import &#39;./App.css&#39;;
import &#39;@vaadin/vaadin-date-picker&#39;;
class App extends Component {
  render() {
    return (
      &amp;lt;div className=&quot;App&quot;&amp;gt;
        &amp;lt;vaadin-date-picker label=&quot;When were you born?&quot;&amp;gt;&amp;lt;/vaadin-date-picker&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
export default App;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;273&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is dynamic import?&lt;/h3&gt; &lt;p&gt;The dynamic import() syntax is a ECMAScript proposal not currently part of the language standard. It is expected to be accepted in the near future. You can achieve code-splitting into your app using dynamic import.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of addition,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Normal Import&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { add } from &#39;./math&#39;;
console.log(add(10, 20));
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;&lt;strong&gt;Dynamic Import&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(&quot;./math&quot;).then(math =&amp;gt; {
  console.log(math.add(10, 20));
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;274&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are loadable components?&lt;/h3&gt; &lt;p&gt;If you want to do code-splitting in a server rendered app, it is recommend to use Loadable Components because React.lazy and Suspense is not yet available for server-side rendering. Loadable lets you render a dynamic import as a regular component.&lt;/p&gt; &lt;p&gt;Lets take an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import loadable from &#39;@loadable/component&#39;

const OtherComponent = loadable(() =&amp;gt; import(&#39;./OtherComponent&#39;))

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;OtherComponent /&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now OtherComponent will be loaded in a separated bundle&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;275&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is suspense component?&lt;/h3&gt; &lt;p&gt;If the module containing the dynamic import is not yet loaded by the time parent component renders, you must show some fallback content while you’re waiting for it to load using a loading indicator. This can be done using &lt;strong&gt;Suspense&lt;/strong&gt; component.&lt;/p&gt; &lt;p&gt;For example, the below code uses suspense component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;
        &amp;lt;OtherComponent /&amp;gt;
      &amp;lt;/Suspense&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code, Suspense is wrapped above the lazy component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;276&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is route based code splitting?&lt;/h3&gt; &lt;p&gt;One of the best place to do code splitting is with routes. The entire page is going to re-render at once so users are unlikely to interact with other elements in the page at the same time. Due to this, the user experience won&#39;t be disturbed.&lt;/p&gt; &lt;p&gt;Let us take an example of route based website using libraries like React Router with React.lazy,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { BrowserRouter as Router, Route, Switch } from &#39;react-router-dom&#39;;
import React, { Suspense, lazy } from &#39;react&#39;;

const Home = lazy(() =&amp;gt; import(&#39;./routes/Home&#39;));
const About = lazy(() =&amp;gt; import(&#39;./routes/About&#39;));

const App = () =&amp;gt; (
  &amp;lt;Router&amp;gt;
    &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;
      &amp;lt;Switch&amp;gt;
        &amp;lt;Route exact path=&quot;/&quot; component={Home}/&amp;gt;
        &amp;lt;Route path=&quot;/about&quot; component={About}/&amp;gt;
      &amp;lt;/Switch&amp;gt;
    &amp;lt;/Suspense&amp;gt;
  &amp;lt;/Router&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, the code splitting will happen at each route level.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;277&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example on How to use context?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt; is designed to share data that can be considered &lt;strong&gt;global&lt;/strong&gt; for a tree of React components.&lt;/p&gt; &lt;p&gt;For example, in the code below lets manually thread through a “theme” prop in order to style the Button component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Lets create a context with a default theme value &quot;luna&quot;
const ThemeContext = React.createContext(&#39;luna&#39;);
// Create App component where it uses provider to pass theme value in the tree
class App extends React.Component {
  render() {
    return (
      &amp;lt;ThemeContext.Provider value=&quot;nova&quot;&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/ThemeContext.Provider&amp;gt;
    );
  }
}
// A middle component where you don&#39;t need to pass theme prop anymore
function Toolbar(props) {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;ThemedButton /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
// Lets read theme value in the button component to use
class ThemedButton extends React.Component {
  static contextType = ThemeContext;
  render() {
    return &amp;lt;Button theme={this.context} /&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;278&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of default value in context?&lt;/h3&gt; &lt;p&gt;The defaultValue argument is only used when a component does not have a matching Provider above it in the tree. This can be helpful for testing components in isolation without wrapping them.&lt;/p&gt; &lt;p&gt;Below code snippet provides default theme value as Luna.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const MyContext = React.createContext(defaultValue);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;279&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you use contextType?&lt;/h3&gt; &lt;p&gt;ContextType is used to consume the context object. The contextType property can be used in two ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;contextType as property of class:&lt;/strong&gt; The contextType property on a class can be assigned a Context object created by React.createContext(). After that, you can consume the nearest current value of that Context type using this.context in any of the lifecycle methods and render function.&lt;/p&gt; &lt;p&gt;Lets assign contextType property on MyClass as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyClass extends React.Component {
  componentDidMount() {
    let value = this.context;
    /* perform a side-effect at mount using the value of MyContext */
  }
  componentDidUpdate() {
    let value = this.context;
    /* ... */
  }
  componentWillUnmount() {
    let value = this.context;
    /* ... */
  }
  render() {
    let value = this.context;
    /* render something based on the value of MyContext */
  }
}
MyClass.contextType = MyContext;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static field&lt;/strong&gt; You can use a static class field to initialize your contextType using public class field syntax.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyClass extends React.Component {
  static contextType = MyContext;
  render() {
    let value = this.context;
    /* render something based on the value */
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;280&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is a consumer?&lt;/h3&gt; &lt;p&gt;A Consumer is a React component that subscribes to context changes. It requires a function as a child which receives current context value as argument and returns a react node. The value argument passed to the function will be equal to the value prop of the closest Provider for this context above in the tree.&lt;/p&gt; &lt;p&gt;Lets take a simple example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;MyContext.Consumer&amp;gt;
  {value =&amp;gt; /* render something based on the context value */}
&amp;lt;/MyContext.Consumer&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;281&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you solve performance corner cases while using context?&lt;/h3&gt; &lt;p&gt;The context uses reference identity to determine when to re-render, there are some gotchas that could trigger unintentional renders in consumers when a provider’s parent re-renders.&lt;/p&gt; &lt;p&gt;For example, the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends React.Component {
  render() {
    return (
      &amp;lt;Provider value={{something: &#39;something&#39;}}&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/Provider&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This can be solved by lifting up the value to parent state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: {something: &#39;something&#39;},
    };
  }

  render() {
    return (
      &amp;lt;Provider value={this.state.value}&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/Provider&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;282&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of forward ref in HOCs?&lt;/h3&gt; &lt;p&gt;Refs will not get passed through because ref is not a prop. It handled differently by React just like &lt;strong&gt;key&lt;/strong&gt;. If you add a ref to a HOC, the ref will refer to the outermost container component, not the wrapped component. In this case, you can use Forward Ref API. For example, we can explicitly forward refs to the inner FancyButton component using the React.forwardRef API.&lt;/p&gt; &lt;p&gt;The below HOC logs all props,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    function logProps(Component) {
      class LogProps extends React.Component {
        componentDidUpdate(prevProps) {
          console.log(&#39;old props:&#39;, prevProps);
          console.log(&#39;new props:&#39;, this.props);
        }

        render() {
          const {forwardedRef, ...rest} = this.props;

          // Assign the custom prop &quot;forwardedRef&quot; as a ref
          return &amp;lt;Component ref={forwardedRef} {...rest} /&amp;gt;;
        }
      }

      return React.forwardRef((props, ref) =&amp;gt; {
        return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
      });
    }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s use this HOC to log all props that get passed to our “fancy button” component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    class FancyButton extends React.Component {
      focus() {
        // ...
      }

      // ...
    }
    export default logProps(FancyButton);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now lets create a ref and pass it to FancyButton component. In this case, you can set focus to button element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    import FancyButton from &#39;./FancyButton&#39;;

    const ref = React.createRef();
    ref.current.focus();
    &amp;lt;FancyButton
      label=&quot;Click Me&quot;
      handleClick={handleClick}
      ref={ref}
    /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;283&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it ref argument available for all functions or class components?&lt;/h3&gt; Regular function or class components don’t receive the ref argument, and ref is not available in props either. The second ref argument only exists when you define a component with React.forwardRef call.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;284&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need additional care for component libraries while using forward refs?&lt;/h3&gt; When you start using forwardRef in a component library, you should treat it as a breaking change and release a new major version of your library. This is because your library likely has a different behavior such as what refs get assigned to, and what types are exported. These changes can break apps and other libraries that depend on the old behavior.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;285&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create react class components without ES6?&lt;/h3&gt; &lt;p&gt;If you don’t use ES6 then you may need to use the create-react-class module instead. For default props, you need to define getDefaultProps() as a function on the passed object. Whereas for initial state, you have to provide a separate getInitialState method that returns the initial state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var Greeting = createReactClass({
  getDefaultProps: function() {
      return {
        name: &#39;Jhohn&#39;
      };
    },
  getInitialState: function() {
      return {message: this.props.message};
    },
  handleClick: function() {
     console.log(this.state.message);
  },
  render: function() {
    return &amp;lt;h1&amp;gt;Hello, {this.props.name}&amp;lt;/h1&amp;gt;;
  }
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you use createReactClass then auto binding is available for all methods. i.e, You don&#39;t need to use &lt;code&gt;.bind(this)&lt;/code&gt; with in constructor for event handlers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;286&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use react without JSX?&lt;/h3&gt; &lt;p&gt;Yes, JSX is not mandatory for using React. Actually it is convenient when you don’t want to set up compilation in your build environment. Each JSX element is just syntactic sugar for calling &lt;code&gt;React.createElement(component, props, ...children)&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take a greeting example with JSX,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Greeting extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;Hello {this.props.message}&amp;lt;/div&amp;gt;;
  }
}

ReactDOM.render(
  &amp;lt;Greeting message=&quot;World&quot; /&amp;gt;,
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can write the same code without JSX as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Greeting extends React.Component {
  render() {
    return React.createElement(&#39;div&#39;, null, `Hello ${this.props.message}`);
  }
}

ReactDOM.render(
  React.createElement(Greeting, {message: &#39;World&#39;}, null),
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;287&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is diffing algorithm?&lt;/h3&gt; &lt;p&gt;React needs to use algorithms to find out how to efficiently update the UI to match the most recent tree. The diffing algorithms is generating the minimum number of operations to transform one tree into another. However, the algorithms have a complexity in the order of O(n3) where n is the number of elements in the tree.&lt;/p&gt; &lt;p&gt;In this case, for displaying 1000 elements would require in the order of one billion comparisons. This is far too expensive. Instead, React implements a heuristic O(n) algorithm based on two assumptions:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Two elements of different types will produce different trees.&lt;/li&gt; 
   &lt;li&gt;The developer can hint at which child elements may be stable across different renders with a key prop.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;288&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the rules covered by diffing algorithm?&lt;/h3&gt; &lt;p&gt;When diffing two trees, React first compares the two root elements. The behavior is different depending on the types of the root elements. It covers the below rules during reconciliation algorithm,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Elements Of Different Types:&lt;/strong&gt; Whenever the root elements have different types, React will tear down the old tree and build the new tree from scratch. For example, elements &lt;a&gt; to &lt;img&gt;, or from 
     &lt;article&gt;
       to 
      &lt;comment&gt;
        of different types lead a full rebuild.
      &lt;/comment&gt;
     &lt;/article&gt;&lt;/a&gt;&lt;/li&gt;
   &lt;a&gt; &lt;li&gt;&lt;strong&gt;DOM Elements Of The Same Type:&lt;/strong&gt; When comparing two React DOM elements of the same type, React looks at the attributes of both, keeps the same underlying DOM node, and only updates the changed attributes. Lets take an example with same DOM elements except className attribute, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div className=&quot;show&quot; title=&quot;ReactJS&quot; /&amp;gt;

&amp;lt;div className=&quot;hide&quot; title=&quot;ReactJS&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Component Elements Of The Same Type:&lt;/strong&gt; When a component updates, the instance stays the same, so that state is maintained across renders. React updates the props of the underlying component instance to match the new element, and calls componentWillReceiveProps() and componentWillUpdate() on the underlying instance. After that, the render() method is called and the diff algorithm recurses on the previous result and the new result.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Recursing On Children:&lt;/strong&gt; when recursing on the children of a DOM node, React just iterates over both lists of children at the same time and generates a mutation whenever there’s a difference. For example, when adding an element at the end of the children, converting between these two trees works well. &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;third&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Handling keys:&lt;/strong&gt; React supports a key attribute. When children have keys, React uses the key to match children in the original tree with children in the subsequent tree. For example, adding a key can make the tree conversion efficient,&lt;/li&gt; &lt;/a&gt;
  &lt;/ol&gt;&lt;a&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li key=&quot;2015&quot;&amp;gt;Duke&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2016&quot;&amp;gt;Villanova&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul&amp;gt;
  &amp;lt;li key=&quot;2014&quot;&amp;gt;Connecticut&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2015&quot;&amp;gt;Duke&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2016&quot;&amp;gt;Villanova&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&lt;/li&gt;
 &lt;a&gt; &lt;/a&gt;
&lt;/ol&gt;
&lt;a&gt; &lt;/a&gt;
&lt;p&gt;&lt;a&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;289&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;When do you need to use refs?&lt;/h3&gt; &lt;p&gt;There are few use cases to go for refs,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Managing focus, text selection, or media playback.&lt;/li&gt; 
   &lt;li&gt;Triggering imperative animations.&lt;/li&gt; 
   &lt;li&gt;Integrating with third-party DOM libraries.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;290&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it prop must be named as render for render props?&lt;/h3&gt; &lt;p&gt;Even though the pattern named render props, you don’t have to use a prop named render to use this pattern. i.e, Any prop that is a function that a component uses to know what to render is technically a “render prop”. Lets take an example with the children prop for render props,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;Mouse children={mouse =&amp;gt; (
  &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;
)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Actually children prop doesn’t need to be named in the list of “attributes” in JSX element. Instead, you can keep it directly inside element,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;Mouse&amp;gt;
  {mouse =&amp;gt; (
    &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;
  )}
&amp;lt;/Mouse&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While using this above technique(without any name), explicitly state that children should be a function in your propTypes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Mouse.propTypes = {
  children: PropTypes.func.isRequired
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;291&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems of using render props with pure components?&lt;/h3&gt; If you create a function inside a render method, it negates the purpose of pure component. Because the shallow prop comparison will always return false for new props, and each render in this case will generate a new value for the render prop. You can solve this issue by defining the render function as instance method.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;292&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create HOC using render props?&lt;/h3&gt; &lt;p&gt;You can implement most higher-order components (HOC) using a regular component with a render prop. For example, if you would prefer to have a withMouse HOC instead of a 
   &lt;mouse&gt;
     component, you could easily create one using a regular 
    &lt;mouse&gt;
      with a render prop.
    &lt;/mouse&gt;
   &lt;/mouse&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function withMouse(Component) {
  return class extends React.Component {
    render() {
      return (
        &amp;lt;Mouse render={mouse =&amp;gt; (
          &amp;lt;Component {...this.props} mouse={mouse} /&amp;gt;
        )}/&amp;gt;
      );
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way render props gives the flexibility of using either pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;293&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is windowing technique?&lt;/h3&gt; Windowing is a technique that only renders a small subset of your rows at any given time, and can dramatically reduce the time it takes to re-render the components as well as the number of DOM nodes created. If your application renders long lists of data then this technique is recommended. Both react-window and react-virtualized are popular windowing libraries which provides several reusable components for displaying lists, grids, and tabular data.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;294&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print falsy values in JSX?&lt;/h3&gt; &lt;p&gt;The falsy values such as false, null, undefined, and true are valid children but they don&#39;t render anything. If you still want to display them then you need to convert it to string. Let&#39;s take an example on how to convert to a string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div&amp;gt;
  My JavaScript variable is {String(myVariable)}.
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;295&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the typical use case of portals?&lt;/h3&gt; &lt;p&gt;React portals are very useful when a parent component has overflow: hidden or has properties that affect the stacking context(z-index,position,opacity etc styles) and you need to visually “break out” of its container.&lt;/p&gt; &lt;p&gt;For example, dialogs, global message notifications, hovercards, and tooltips.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;296&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you set default value for uncontrolled component?&lt;/h3&gt; &lt;p&gt;In React, the value attribute on form elements will override the value in the DOM. With an uncontrolled component, you might want React to specify the initial value, but leave subsequent updates uncontrolled. To handle this case, you can specify a &lt;strong&gt;defaultValue&lt;/strong&gt; attribute instead of &lt;strong&gt;value&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  return (
    &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
      &amp;lt;label&amp;gt;
        User Name:
        &amp;lt;input
          defaultValue=&quot;John&quot;
          type=&quot;text&quot;
          ref={this.input} /&amp;gt;
      &amp;lt;/label&amp;gt;
      &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
    &amp;lt;/form&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The same applies for &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;textArea&lt;/code&gt; inputs. But you need to use &lt;strong&gt;defaultChecked&lt;/strong&gt; for &lt;code&gt;checkbox&lt;/code&gt; and &lt;code&gt;radio&lt;/code&gt; inputs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;297&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is your favorite React stack?&lt;/h3&gt; Even though the tech stack varies from developer to developer, the most popular stack is used in react boilerplate project code. It mainly uses Redux and redux-saga for state management and asynchronous side-effects, react-router for routing purpose, styled-components for styling react components, axios for invoking REST api, and other supported stack such as webpack, reselect, ESNext, Babel. You can clone the project &lt;a href=&quot;https://github.com/react-boilerplate/react-boilerplate&quot;&gt;https://github.com/react-boilerplate/react-boilerplate&lt;/a&gt; and start working on any new react project.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;298&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Real DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Real DOM and Virtual DOM,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Real DOM&lt;/th&gt; 
     &lt;th&gt;Virtual DOM&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Updates are slow&lt;/td&gt; 
     &lt;td&gt;Updates are fast&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;DOM manipulation is very expensive.&lt;/td&gt; 
     &lt;td&gt;DOM manipulation is very easy&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;You can update HTML directly.&lt;/td&gt; 
     &lt;td&gt;You Can’t directly update HTML&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It causes too much of memory wastage&lt;/td&gt; 
     &lt;td&gt;There is no memory wastage&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Creates a new DOM if element updates&lt;/td&gt; 
     &lt;td&gt;It updates the JSX if element update&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;299&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add Bootstrap to a react application?&lt;/h3&gt; &lt;p&gt;Bootstrap can be added to your React app in a three possible ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using the Bootstrap CDN: This is the easiest way to add bootstrap. Add both bootstrap CSS and JS resources in a head tag.&lt;/li&gt; 
   &lt;li&gt;Bootstrap as Dependency: If you are using a build tool or a module bundler such as Webpack, then this is the preferred option for adding Bootstrap to your React application &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install bootstrap
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;React Bootstrap Package: In this case, you can add Bootstrap to our React app is by using a package that has rebuilt Bootstrap components to work particularly as React components. Below packages are popular in this category, 
    &lt;ol&gt; 
     &lt;li&gt;react-bootstrap&lt;/li&gt; 
     &lt;li&gt;reactstrap&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;300&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you list down top websites or applications using react as front end framework?&lt;/h3&gt; &lt;p&gt;Below are the &lt;code&gt;top 10 websites&lt;/code&gt; using React as their front-end framework,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Facebook&lt;/li&gt; 
   &lt;li&gt;Uber&lt;/li&gt; 
   &lt;li&gt;Instagram&lt;/li&gt; 
   &lt;li&gt;WhatsApp&lt;/li&gt; 
   &lt;li&gt;Khan Academy&lt;/li&gt; 
   &lt;li&gt;Airbnb&lt;/li&gt; 
   &lt;li&gt;Dropbox&lt;/li&gt; 
   &lt;li&gt;Flipboard&lt;/li&gt; 
   &lt;li&gt;Netflix&lt;/li&gt; 
   &lt;li&gt;PayPal&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;301&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it recommended to use CSS In JS technique in React?&lt;/h3&gt; React does not have any opinion about how styles are defined but if you are a beginner then good starting point is to define your styles in a separate *.css file as usual and refer to them using className. This functionality is not part of React but came from third-party libraries. But If you want to try a different approach(CSS-In-JS) then styled-components library is a good option.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;302&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do I need to rewrite all my class components with hooks?&lt;/h3&gt; No. But you can try Hooks in a few components(or new components) without rewriting any existing code. Because there are no plans to remove classes in ReactJS.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;303&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to fetch data with React Hooks?&lt;/h3&gt; &lt;p&gt;The effect hook called &lt;code&gt;useEffect&lt;/code&gt; is used to fetch the data with axios from the API and to set the data in the local state of the component with the state hook’s update function.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example in which it fetches list of react articles from the API&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useState, useEffect } from &#39;react&#39;;
import axios from &#39;axios&#39;;

function App() {
  const [data, setData] = useState({ hits: [] });

  useEffect(() =&amp;gt; {
    (async () =&amp;gt; {
      const result = await axios(
        &#39;http://hn.algolia.com/api/v1/search?query=react&#39;,
      );

      setData(result.data);
    })()
  }, []);

  return (
    &amp;lt;ul&amp;gt;
      {data.hits.map(item =&amp;gt; (
        &amp;lt;li key={item.objectID}&amp;gt;
          &amp;lt;a href={item.url}&amp;gt;{item.title}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
      ))}
    &amp;lt;/ul&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember we provided an empty array as second argument to the effect hook to avoid activating it on component updates but only for the mounting of the component. i.e, It fetches only for component mount.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;304&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is Hooks cover all use cases for classes?&lt;/h3&gt; Hooks doesn&#39;t cover all use cases of classes but there is a plan to add them soon. Currently there are no Hook equivalents to the uncommon &lt;strong&gt;getSnapshotBeforeUpdate&lt;/strong&gt; and &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycles yet.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;305&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the stable release for hooks support?&lt;/h3&gt; &lt;p&gt;React includes a stable implementation of React Hooks in 16.8 release for below packages&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React DOM&lt;/li&gt; 
   &lt;li&gt;React DOM Server&lt;/li&gt; 
   &lt;li&gt;React Test Renderer&lt;/li&gt; 
   &lt;li&gt;React Shallow Renderer&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;306&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we use array destructuring (square brackets notation) in &lt;code&gt;useState&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;When we declare a state variable with &lt;code&gt;useState&lt;/code&gt;, it returns a pair — an array with two items. The first item is the current value, and the second is a function that updates the value. Using [0] and [1] to access them is a bit confusing because they have a specific meaning. This is why we use array destructuring instead.&lt;/p&gt; &lt;p&gt;For example, the array index access would look as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var userStateVariable = useState(&#39;userProfile&#39;); // Returns an array pair
 var user = userStateVariable[0]; // Access first item
 var setUser = userStateVariable[1]; // Access second item
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas with array destructuring the variables can be accessed as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const [user, setUser] = useState(&#39;userProfile&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the sources used for introducing hooks?&lt;/h3&gt; &lt;p&gt;Hooks got the ideas from several different sources. Below are some of them,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Previous experiments with functional APIs in the react-future repository&lt;/li&gt; 
   &lt;li&gt;Community experiments with render prop APIs such as Reactions Component&lt;/li&gt; 
   &lt;li&gt;State variables and state cells in DisplayScript.&lt;/li&gt; 
   &lt;li&gt;Subscriptions in Rx.&lt;/li&gt; 
   &lt;li&gt;Reducer components in ReasonReact.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;308&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access imperative API of web components?&lt;/h3&gt; Web Components often expose an imperative API to implement its functions. You will need to use a &lt;strong&gt;ref&lt;/strong&gt; to interact with the DOM node directly if you want to access imperative API of a web component. But if you are using third-party Web Components, the best solution is to write a React component that behaves as a &lt;strong&gt;wrapper&lt;/strong&gt; for your Web Component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;309&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is formik?&lt;/h3&gt; &lt;p&gt;Formik is a small react form library that helps you with the three major problems,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; 
   &lt;li&gt;Validation and error messages&lt;/li&gt; 
   &lt;li&gt;Handling form submission&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;310&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/h3&gt; Some of the popular middleware choices for handling asynchronous calls in Redux eco system are &lt;code&gt;Redux Thunk, Redux Promise, Redux Saga&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;311&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do browsers understand JSX code?&lt;/h3&gt; No, browsers can&#39;t understand JSX code. You need a transpiler to convert your JSX to regular Javascript that browsers can understand. The most widely used transpiler right now is Babel.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;312&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Describe about data flow in react?&lt;/h3&gt; React implements one-way reactive data flow using props which reduce boilerplate and is easier to understand than traditional two-way data binding.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;313&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is react scripts?&lt;/h3&gt; The &lt;code&gt;react-scripts&lt;/code&gt; package is a set of scripts from the create-react-app starter pack which helps you kick off projects without configuring. The &lt;code&gt;react-scripts start&lt;/code&gt; command sets up the development environment and starts a server, as well as hot module reloading.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;314&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the features of create react app?&lt;/h3&gt; &lt;p&gt;Below are the list of some of the features provided by create react app.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React, JSX, ES6, Typescript and Flow syntax support.&lt;/li&gt; 
   &lt;li&gt;Autoprefixed CSS&lt;/li&gt; 
   &lt;li&gt;CSS Reset/Normalize&lt;/li&gt; 
   &lt;li&gt;A live development server&lt;/li&gt; 
   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting&lt;/li&gt; 
   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps&lt;/li&gt; 
   &lt;li&gt;An offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;315&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of renderToNodeStream method?&lt;/h3&gt; The &lt;code&gt;ReactDOMServer#renderToNodeStream&lt;/code&gt; method is used to generate HTML on the server and send the markup down on the initial request for faster page loads. It also helps search engines to crawl your pages easily for SEO purposes. &lt;strong&gt;Note:&lt;/strong&gt; Remember this method is not available in the browser but only server.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;316&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is MobX?&lt;/h3&gt; MobX is a simple, scalable and battle tested state management solution for applying functional reactive programming (TFRP). For reactJs application, you need to install below packages, &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install mobx --save
npm install mobx-react --save
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;317&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Redux and MobX?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Redux and MobX,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Topic&lt;/th&gt; 
     &lt;th&gt;Redux&lt;/th&gt; 
     &lt;th&gt;MobX&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Definition&lt;/td&gt; 
     &lt;td&gt;It is a javascript library for managing the application state&lt;/td&gt; 
     &lt;td&gt;It is a library for reactively managing the state of your applications&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Programming&lt;/td&gt; 
     &lt;td&gt;It is mainly written in ES6&lt;/td&gt; 
     &lt;td&gt;It is written in JavaScript(ES5)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Data Store&lt;/td&gt; 
     &lt;td&gt;There is only one large store exist for data storage&lt;/td&gt; 
     &lt;td&gt;There is more than one store for storage&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Usage&lt;/td&gt; 
     &lt;td&gt;Mainly used for large and complex applications&lt;/td&gt; 
     &lt;td&gt;Used for simple applications&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Performance&lt;/td&gt; 
     &lt;td&gt;Need to be improved&lt;/td&gt; 
     &lt;td&gt;Provides better performance&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;How it stores&lt;/td&gt; 
     &lt;td&gt;Uses JS Object to store&lt;/td&gt; 
     &lt;td&gt;Uses observable to store the data&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;318&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Should I learn ES6 before learning ReactJS?&lt;/h3&gt; &lt;p&gt;No, you don’t have to learn es2015/es6 to learn react. But you may find many resources or React ecosystem uses ES6 extensively. Let&#39;s see some of the frequently used ES6 features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Destructuring:&lt;/strong&gt; To get props and use them in a component &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// in es 5
 var someData = this.props.someData
 var dispatch = this.props.dispatch

// in es6
const { someData, dispatch } = this.props
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Spread operator: Helps in passing props down into a component &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// in es 5
&amp;lt;SomeComponent someData={this.props.someData} dispatch={this.props.dispatch} /&amp;gt;

// in es6
&amp;lt;SomeComponent {...this.props} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Arrow functions: Makes compact syntax &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// es 5
var users = usersList.map(function (user) {
 return &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;
})
// es 6
const users = usersList.map(user =&amp;gt; &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;319&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Concurrent Rendering?&lt;/h3&gt; &lt;p&gt;The Concurrent rendering makes React apps to be more responsive by rendering component trees without blocking the main UI thread. It allows React to interrupt a long-running render to handle a high-priority event. i.e, When you enabled concurrent Mode, React will keep an eye on other tasks that need to be done, and if there&#39;s something with a higher priority it will pause what it is currently rendering and let the other task finish first. You can enable this in two ways,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// 1. Part of an app by wrapping with ConcurrentMode
&amp;lt;React.unstable_ConcurrentMode&amp;gt;
  &amp;lt;Something /&amp;gt;
&amp;lt;/React.unstable_ConcurrentMode&amp;gt;

// 2. Whole app using createRoot
ReactDOM.unstable_createRoot(domNode).render(&amp;lt;App /&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;320&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between async mode and concurrent mode?&lt;/h3&gt; Both refers the same thing. Previously concurrent Mode being referred to as &quot;Async Mode&quot; by React team. The name has been changed to highlight React’s ability to perform work on different priority levels. So it avoids the confusion from other approaches to Async Rendering.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;321&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use javascript urls in react16.9?&lt;/h3&gt; &lt;p&gt;Yes, you can use javascript: URLs but it will log a warning in the console. Because URLs starting with javascript: are dangerous by including unsanitized output in a tag like &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; and create a security hole.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const companyProfile = {
  website: &quot;javascript: alert(&#39;Your website is hacked&#39;)&quot;,
};
// It will log a warning
&amp;lt;a href={companyProfile.website}&amp;gt;More details&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember that the future versions will throw an error for javascript URLs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;322&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of eslint plugin for hooks?&lt;/h3&gt; &lt;p&gt;The ESLint plugin enforces rules of Hooks to avoid bugs. It assumes that any function starting with ”use” and a capital letter right after it is a Hook. In particular, the rule enforces that,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Calls to Hooks are either inside a PascalCase function (assumed to be a component) or another useSomething function (assumed to be a custom Hook).&lt;/li&gt; 
   &lt;li&gt;Hooks are called in the same order on every render.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;323&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Imperative and Declarative in React?&lt;/h3&gt; &lt;p&gt;Imagine a simple UI component, such as a &quot;Like&quot; button. When you tap it, it turns blue if it was previously grey, and grey if it was previously blue.&lt;/p&gt; &lt;p&gt;The imperative way of doing this would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if( user.likes() ) {
    if( hasBlue() ) {
        removeBlue();
        addGrey();
    } else {
        removeGrey();
        addBlue();
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Basically, you have to check what is currently on the screen and handle all the changes necessary to redraw it with the current state, including undoing the changes from the previous state. You can imagine how complex this could be in a real-world scenario.&lt;/p&gt; &lt;p&gt;In contrast, the declarative approach would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if( this.state.liked ) {
    return &amp;lt;blueLike /&amp;gt;;
} else {
    return &amp;lt;greyLike /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Because the declarative approach separates concerns, this part of it only needs to handle how the UI should look in a sepecific state, and is therefore much simpler to understand.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;324&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of using typescript with reactjs?&lt;/h3&gt; &lt;p&gt;Below are some of the benefits of using typescript with Reactjs,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is possible to use latest JavaScript features&lt;/li&gt; 
   &lt;li&gt;Use of interfaces for complex type definitions&lt;/li&gt; 
   &lt;li&gt;IDEs such as VS Code was made for TypeScript&lt;/li&gt; 
   &lt;li&gt;Avoid bugs with the ease of readability and Validation&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/h3&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When a user logs in and reload, to persist the state generally we add the load user action in the useEffect hooks in the main App.js. While using Redux, loadUser action can be easily accessed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {loadUser}  from &#39;../actions/auth&#39;;
store.dispatch(loadUser());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;But while using &lt;strong&gt;Context API&lt;/strong&gt;, to access context in App.js, wrap the AuthState in index.js so that App.js can access the auth context. Now whenever the page reloads, no matter what route you are on, the user will be authenticated as &lt;strong&gt;loadUser&lt;/strong&gt; action will be triggered on each re-render.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;index.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import App from &#39;./App&#39;;
import AuthState from &#39;./context/auth/AuthState&#39;

ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;AuthState&amp;gt;
      &amp;lt;App /&amp;gt;
    &amp;lt;/AuthState&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  const authContext = useContext(AuthContext);

  const { loadUser } = authContext;

  useEffect(() =&amp;gt; {
    loadUser();
  },[])
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;loadUser&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;    const loadUser = async () =&amp;gt; {
        const token = sessionStorage.getItem(&#39;token&#39;);

        if(!token){
            dispatch({
                type: ERROR
            })
        }
        setAuthToken(token);

        try {
            const res = await axios(&#39;/api/auth&#39;); 

            dispatch({
                type: USER_LOADED,
                payload: res.data.data
            })
            
        } catch (err) {
           console.error(err); 
        }
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;326&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of new JSX transform?&lt;/h3&gt; &lt;p&gt;There are three major benefits of new JSX transform,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is possible to use JSX without importing React packages&lt;/li&gt; 
   &lt;li&gt;The compiled output might improve the bundle size in a small amount&lt;/li&gt; 
   &lt;li&gt;The future improvements provides the flexibility to reduce the number of concepts to learn React.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How does new JSX transform different from old transform?&lt;/h3&gt; &lt;p&gt;The new JSX transform doesn’t require React to be in scope. i.e, You don&#39;t need to import React package for simple scenarios.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to look at the main differences between the old and the new transform,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Old Transform:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;

function App() {
  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now JSX transform convert the above code into regular JavaScript as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;

function App() {
  return React.createElement(&#39;h1&#39;, null, &#39;Good morning!!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;New Transform:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The new JSX transform doesn&#39;t require any React imports&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function App() {
  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Under the hood JSX transform compiles to below code&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {jsx as _jsx} from &#39;react/jsx-runtime&#39;;

function App() {
  return _jsx(&#39;h1&#39;, { children: &#39;Good morning!!&#39; });
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You still need to import React to use Hooks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get redux scaffolding using create-react-app?&lt;/h3&gt; &lt;p&gt;Redux team has provided official redux+js or redux+typescript templates for create-react-app project. The generated project setup includes,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Redux Toolkit and React-Redux dependencies&lt;/li&gt; 
   &lt;li&gt;Create and configure Redux store&lt;/li&gt; 
   &lt;li&gt;React-Redux &lt;code&gt;&amp;lt;Provider&amp;gt;&lt;/code&gt; passing the store to React components&lt;/li&gt; 
   &lt;li&gt;Small &quot;counter&quot; example to demo how to add redux logic and React-Redux hooks API to interact with the store from components&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The below commands need to be executed along with template option as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Javascript template:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npx create-react-app my-app --template redux
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;&lt;strong&gt;Typescript template:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npx create-react-app my-app --template redux-typescript
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are React Server components?&lt;/h3&gt; &lt;p&gt;React Server Component is a way to write React component that gets rendered in the server-side with the purpose of improving React app performance. These components allow us to load components from the backend.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; React Server Components is still under development and not recommended for production yet.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is prop drilling?&lt;/h3&gt; &lt;p&gt;Prop Drilling is the process by which you pass data from one component of the React Component tree to another by going through other components that do not need the data but only help in passing it around.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to prevent state mutation?&lt;/h3&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>1c7/Crash-Course-Computer-Science-Chinese</title>
      <link>https://github.com/1c7/Crash-Course-Computer-Science-Chinese</link>
      <description>&lt;p&gt;💻 计算机速成课 | Crash Course 字幕组 (全40集 2018-5-1 精校完成)&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;计算机科学速成课 &lt;span&gt;🔥&lt;/span&gt; 2018年5月1号 - 全40集完结撒花&lt;/h2&gt; 
&lt;h3&gt;精校版：&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/av21376839/&quot;&gt;https://www.bilibili.com/video/av21376839/&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/1c7/Crash-Course-Computer-Science-Chinese/master/image/cs40.jpg&quot; alt=&quot;bilibili&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;字幕也放出来了(40集中英字幕)&lt;/h2&gt; 
&lt;p&gt;两个版本：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/1c7/Crash-Course-Computer-Science-Chinese/master/(%E5%AD%97%E5%B9%95)%E5%85%A840%E9%9B%86%E4%B8%AD%E8%8B%B1%E5%AD%97%E5%B9%95%E6%96%87%E6%9C%AC.txt&quot;&gt;所有字幕放一个文件里&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/1c7/Crash-Course-Computer-Science-Chinese/master/(%E5%AD%97%E5%B9%95)%E5%85%A840%E9%9B%86%E4%B8%AD%E8%8B%B1%E5%AD%97%E5%B9%95%E6%96%87%E6%9C%AC&quot;&gt;每一集一个文件，共40个文件&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;另外，片头总结在 &lt;strong&gt;这篇文章的底部&lt;/strong&gt;&lt;br&gt; 感谢观看，Don&#39;t forget to be Awesome!&lt;/p&gt; 
&lt;h2&gt;感谢所有翻译人员！&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;不想膨胀的小R - &lt;a href=&quot;https://github.com/coolralf&quot;&gt;Github&lt;/a&gt;, &lt;a href=&quot;https://weibo.com/u/2207493917&quot;&gt;微博&lt;/a&gt;, &lt;a href=&quot;https://space.bilibili.com/5385034#!/video&quot;&gt;B站&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;糖醋陈皮 - &lt;a href=&quot;https://github.com/1c7&quot;&gt;Github&lt;/a&gt;, &lt;a href=&quot;https://weibo.com/2004104451&quot;&gt;微博&lt;/a&gt;, &lt;a href=&quot;http://1c7.me/&quot;&gt;博客&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ZireHao - &lt;a href=&quot;http://space.bilibili.com/27167876/&quot;&gt;B站&lt;/a&gt; &amp;nbsp; &amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;gilot - &lt;a href=&quot;https://space.bilibili.com/43595622/&quot;&gt;B站&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;晴空&lt;/li&gt; 
 &lt;li&gt;Crazycat&lt;/li&gt; 
 &lt;li&gt;Cindy&lt;/li&gt; 
 &lt;li&gt;出门去&lt;/li&gt; 
 &lt;li&gt;TMC - RN&lt;/li&gt; 
 &lt;li&gt;LCAR979（推特 &lt;code&gt;_lincr_&lt;/code&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;第一版翻译（不推荐观看，看精校版即可）：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1 - &lt;a href=&quot;https://www.bilibili.com/video/av8861057/&quot;&gt;早期的计算 - Early Computing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2 - &lt;a href=&quot;https://www.bilibili.com/video/av9066628/&quot;&gt;电子计算 - Electronic Computing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;3 - &lt;a href=&quot;https://www.bilibili.com/video/av11557339/&quot;&gt;布尔逻辑与逻辑电路 - Boolean Logic &amp;amp; Logic Gates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;4 - &lt;a href=&quot;https://www.bilibili.com/video/av11592079/&quot;&gt;二进制 - Representing Numbers and Letters with Binary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;5 - &lt;a href=&quot;https://www.bilibili.com/video/av12742941/&quot;&gt;算术逻辑单元 - How Computers Calculate - the ALU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;6 - &lt;a href=&quot;https://www.bilibili.com/video/av12881796/&quot;&gt;寄存器 &amp;amp; 内存 - Registers and RAM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;7 - &lt;a href=&quot;https://www.bilibili.com/video/av12881976/&quot;&gt;中央处理器 - The Central Processing Unit(CPU)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;8 - &lt;a href=&quot;https://www.bilibili.com/video/av9875360/&quot;&gt;指令和程序 - Instructions &amp;amp; Programs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;9 - &amp;nbsp;&lt;a href=&quot;https://www.bilibili.com/video/av11867964/&quot;&gt;高级 CPU 设计 - Advanced CPU Designs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10 - &lt;a href=&quot;https://www.bilibili.com/video/av13582556/&quot;&gt;编程史话 - Early Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;11 - &lt;a href=&quot;https://www.bilibili.com/video/av14228148/&quot;&gt;编程语言 - The First Programming Languages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;12 - &lt;a href=&quot;https://www.bilibili.com/video/av14885759/&quot;&gt;编程原理：语句和函数 - Programming Basics: Statements &amp;amp; Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;13 - &lt;a href=&quot;https://www.bilibili.com/video/av15987761/&quot;&gt;算法初步 - Intro to Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;14 - &lt;a href=&quot;https://www.bilibili.com/video/av15987774/&quot;&gt;数据结构 - Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;15 - &lt;a href=&quot;https://www.bilibili.com/video/av16090115/&quot;&gt;阿兰·图灵 - Alan Turing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;16 - &lt;a href=&quot;https://www.bilibili.com/video/av16751202/&quot;&gt;软件工程 - Software Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;17 - &lt;a href=&quot;https://www.bilibili.com/video/av17186768&quot;&gt;集成电路、摩尔定律 - Integrated Circuits &amp;amp; Moore’s Law&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;18 - &lt;a href=&quot;https://www.bilibili.com/video/av17192468&quot;&gt;操作系统 - Operating Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;19 - &lt;a href=&quot;https://www.bilibili.com/video/av17192483/&quot;&gt;内存 &amp;amp; 储存介质 - Memory &amp;amp; Storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;20 - &lt;a href=&quot;https://www.bilibili.com/video/av17209268/&quot;&gt;文件系统 - Files &amp;amp; File Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;21 - &lt;a href=&quot;https://www.bilibili.com/video/av17192511/&quot;&gt;压缩 - Compression&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;22 - &lt;a href=&quot;https://www.bilibili.com/video/av17451718/&quot;&gt;命令行界面 - Keyboards &amp;amp; Command Line Interfaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;23 - &lt;a href=&quot;https://www.bilibili.com/video/av17476087/&quot;&gt;屏幕 &amp;amp; 2D 图形显示 - Screens &amp;amp; 2D Graphics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;24 - &lt;a href=&quot;https://www.bilibili.com/video/av15637307/&quot;&gt;冷战和消费主义 - The Cold War and Consumerism&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;25 - &lt;a href=&quot;https://www.bilibili.com/video/av18789303/&quot;&gt;个人计算机革命 - The Personal Computer Revolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;26 - &lt;a href=&quot;https://www.bilibili.com/video/av19035296/&quot;&gt;图形用户界面 - Graphical User Interfaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;27 - &lt;a href=&quot;https://www.bilibili.com/video/av19164942/&quot;&gt;3D 图形 - 3D Graphics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;28 - &lt;a href=&quot;https://www.bilibili.com/video/av19209394/&quot;&gt;计算机网络 - Computer Networks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;29 - &lt;a href=&quot;https://www.bilibili.com/video/av20716104/&quot;&gt;互联网 - The Internet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;30 - &lt;a href=&quot;https://www.bilibili.com/video/av20767130/&quot;&gt;万维网 - The World Wide Web&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;31 - &lt;a href=&quot;https://www.bilibili.com/video/av20785456/&quot;&gt;网络安全 - Cybersecurity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;32 - &lt;a href=&quot;https://www.bilibili.com/video/av20831479/&quot;&gt;黑客与攻击 - Hackers &amp;amp; Cyber Attacks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;33 - &lt;a href=&quot;https://www.bilibili.com/video/av20882310/&quot;&gt;加密 - Cryptography&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;34 - &lt;a href=&quot;https://www.bilibili.com/video/av20922906&quot;&gt;机器学习与人工智能 - Machine Learning &amp;amp; Artificial Intelligence&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;35 - &lt;a href=&quot;https://www.bilibili.com/video/av20974735&quot;&gt;计算机视觉 - Computer Vision&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;36 - &lt;a href=&quot;https://www.bilibili.com/video/av21004070&quot;&gt;自然语言处理 - Natural Language Processing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;37 - &lt;a href=&quot;https://www.bilibili.com/video/av21043523&quot;&gt;机器人 - Robots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;38 - &lt;a href=&quot;https://www.bilibili.com/video/av21066931&quot;&gt;计算机中的心理学 - Psychology of Computing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;39 - &lt;a href=&quot;https://www.bilibili.com/video/av21103744&quot;&gt;教育型科技 - Educational Technology&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;40 - &lt;a href=&quot;https://www.bilibili.com/video/av21126704&quot;&gt;(完结) 奇点，天网，计算机的未来 - The Singularity, Skynet, and the Future of Computing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;精校版质量更好，建议看精校版，之所以第一版目录不删：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;方便快速扫视，看都聊什么话题&lt;/li&gt; 
 &lt;li&gt;方便翻阅之前的版本（如果有需要） &amp;nbsp;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;备注：精校负责人是 @糖醋陈皮&lt;/p&gt; 
&lt;h2&gt;翻译时间&lt;/h2&gt; 
&lt;p&gt;英文版：&lt;br&gt; 第 1 集发布： 2017年2月22号&lt;br&gt; 第 40 集发布：2017年12月21号&lt;/p&gt; 
&lt;p&gt;中文版：&lt;br&gt; 第 1 集发布： 2017年2月27号&lt;br&gt; 全 40 集翻译完成：2018年3月24号&lt;br&gt; 全 40 集精校完成：2018年5月1号&lt;/p&gt; 
&lt;h3&gt;原视频&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo&quot;&gt;Youtube - Crash Course Computer Science Playlist&lt;/a&gt;&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1c7/Crash-Course-Computer-Science-Chinese/master/image/english.png&quot; alt=&quot;Crash Course CS screenshoht&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Thank you Crash Course &amp;amp; Carrie Anne!&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Patron support Crash Course：&lt;a href=&quot;https://www.patreon.com/crashcourse&quot;&gt;https://www.patreon.com/crashcourse&lt;/a&gt; &lt;br&gt;&lt;/li&gt; 
 &lt;li&gt;Crash Course website：&lt;a href=&quot;https://thecrashcourse.com/&quot;&gt;https://thecrashcourse.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Youtube Crash Course: &lt;a href=&quot;https://www.youtube.com/user/crashcourse&quot;&gt;https://www.youtube.com/user/crashcourse&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;感谢速成课！感谢 Carrie Anne！&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Patron 支持 Crash Course：&lt;a href=&quot;https://www.patreon.com/crashcourse&quot;&gt;https://www.patreon.com/crashcourse&lt;/a&gt; &lt;br&gt;&lt;/li&gt; 
 &lt;li&gt;Crash Course 官方网站：&lt;a href=&quot;https://thecrashcourse.com/&quot;&gt;https://thecrashcourse.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Youtube Crash Course: &lt;a href=&quot;https://www.youtube.com/user/crashcourse&quot;&gt;https://www.youtube.com/user/crashcourse&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;片头总结&lt;/h2&gt; 
&lt;h2&gt;第 1 集：计算机早期历史&lt;/h2&gt; 
&lt;p&gt;提到的设备：算盘 → 步进计算器 → 差分机 → 分析机 → 打孔卡片制表机&lt;br&gt; 提到的人名：Charles Babbage, Ada Lovelace&lt;/p&gt; 
&lt;p&gt;02:27 最早的计算设备是算盘，举例如何使用&lt;br&gt; 04:31 Computer 从指代职业变成指代机器&lt;br&gt; 04:57 机器里有名的是：步进计算器。第一个可以做加减乘除的机器&lt;br&gt; 06:44 炮弹为了精准，要计算弹道，二战是查表来做。但每次改设计了就需要做一张新表&lt;br&gt; 07:30 Charles Babbage 提出了 &quot;差分机&quot;, 在构造差分机期间，想出了分析机, 分析机是通用计算机&lt;br&gt; 08:50 Lovelace 给分析机写了假想程序，因此成为了第一位程序员&lt;br&gt; 09:25 人口普查 10 年一次. Herman Hollerith 的打孔卡片制表机大大提升了效率&lt;/p&gt; 
&lt;h2&gt;第 2 集：电子计算机&lt;/h2&gt; 
&lt;p&gt;提到的设备：继电器 → 真空管 → 晶体管&lt;/p&gt; 
&lt;p&gt;00:17 20世纪的发展要求更强的计算能力。柜子大小的计算机发展到房间大小&lt;br&gt; 01:06 哈佛 Mark 1 号，IBM 1944 年做的&lt;br&gt; 02:25 继电器，继电器一秒最多 50 次开关&lt;br&gt; 03:24 继电器出 bug&lt;br&gt; 03:49 1904 年，热电子管出现，第一个真空管。改进后变成和继电器的功能一样&lt;br&gt; 05:34 &quot;巨人1号&quot; 计算机在英国 布莱切利园 首次大规模使用真空管。但编程麻烦，还要配置&lt;br&gt; 06:40 1946 年，宾夕法尼亚大学的 ENIAC 是第一个通用可编程计算机&lt;br&gt; 07:36 1947 年，贝尔实验室做出了晶体管，晶体管有诸多好处，IBM 很快全面转向晶体管&lt;br&gt; 09:27 硅谷的典故：很多晶体管和半导体的开发都是这里做的。而生产半导体最常见的材料是硅&lt;br&gt; 09:41 肖克利半导体 → 仙童半导体 → 英特尔&lt;/p&gt; 
&lt;h2&gt;第 3 集：布尔逻辑和逻辑门&lt;/h2&gt; 
&lt;p&gt;01:00 什么是二进制, 为什么用二进制, 布尔逻辑&lt;br&gt; 02:46 3个基本操作：NOT，AND，OR&lt;br&gt; 02:51 解释3个基本操作&lt;br&gt; 07:11 XOR 异或&lt;/p&gt; 
&lt;h2&gt;第 4 集：二进制&lt;/h2&gt; 
&lt;p&gt;00:46 用十进制举例二进制的原理，演示二进制加法。存储单位 MB GB TB 等&lt;br&gt; 05:30 正数，负数，整数，浮点数的表示&lt;br&gt; 07:20 美国信息交换标准代码 - ASCII, 用来表示字符&lt;br&gt; 09:00 UNICODE 1992 年诞生，是字符编码标准， 解决 ASCII 不够表达所有语言的问题&lt;/p&gt; 
&lt;h2&gt;第 5 集：算数逻辑单元 - ALU&lt;/h2&gt; 
&lt;p&gt;00:03 简单介绍 ALU ，英特尔 74181&lt;br&gt; 01:24 ALU 有 2 个单元，1 个算术单元和 1 个逻辑单元&lt;/p&gt; 
&lt;p&gt;01:32 算术单元&lt;br&gt; 半加器 (处理1个 bit，2个输入)&lt;br&gt; 全加器 (处理1个 bit，3个输入)&lt;br&gt; 8 bit 加法 (1个半加器，7个全加器）&lt;br&gt; 溢出的概念，吃豆人的例子&lt;br&gt; 乘法除法&lt;/p&gt; 
&lt;p&gt;07:32 逻辑单元&lt;br&gt; 检测数字是否为 0 的电路（一堆 OR 门最后加个 NOT 门）&lt;br&gt; ALU 抽象成一个 V 符号&lt;br&gt; Flag 标志（是否相等，是否小于，是否溢出等等）&lt;/p&gt; 
&lt;h2&gt;第 6 集：寄存器和内存&lt;/h2&gt; 
&lt;p&gt;本集重点是 Memory （存储 / 内存 两种含义）&lt;/p&gt; 
&lt;p&gt;03:30 存 1 位 (Gated Latch - 锁存器）&lt;br&gt; 04:48 存 8 位 (Register - 寄存器)&lt;/p&gt; 
&lt;p&gt;05:46 16x16 的矩阵存 256 位&lt;br&gt; 数据选择器/多路复用器 (Multiplexer) 解码 8 位地址，定位到单个锁存器&lt;/p&gt; 
&lt;p&gt;07:38 4 位代表行， 4 位代表列&lt;/p&gt; 
&lt;p&gt;08:16 组合 256 位内存 + 多路复用器&lt;br&gt; 09:01 可寻址的 256 字节 内存&lt;br&gt; 一条1980年代的内存，1M 大小&lt;/p&gt; 
&lt;p&gt;10:14 8个模块，每个模块有32个小方块，&lt;br&gt; 每个小方块有 4 个小块，每个小块是 128 位 x 64 位&lt;/p&gt; 
&lt;h2&gt;第 7 集：中央处理器（CPU)&lt;/h2&gt; 
&lt;p&gt;重点&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;拼个 CPU 出来&lt;/li&gt; 
 &lt;li&gt;CPU 怎么执行命令&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;01:00 RAM + 寄存器 + ALU 做个 CPU&lt;br&gt; 04:00 解释 &quot;取指令→解释→执行&quot; 这个循环&lt;br&gt; 08:00 时钟是什么, 时钟速度和赫兹&lt;br&gt; 10:00 超频提升性能, 降频省电&lt;/p&gt; 
&lt;h2&gt;第 8 集：指令和程序&lt;/h2&gt; 
&lt;p&gt;本集重点：一步步带你运行一遍程序&lt;/p&gt; 
&lt;p&gt;00:45 回顾上集的例子程序，一步步讲解。介绍”指令集”的概念&lt;br&gt; LOAD_A，LOAD_B，SUB，JUMP，ADD，HALT 等指令&lt;br&gt; 05:16 带条件跳转，JUMP NEGATIVE 是负数才跳转，还有其他类型的 JUMP&lt;br&gt; 08:00 真正现代 CPU 用更多指令集。位数更长。&lt;br&gt; 09:07 1971年的英特尔 4004 处理器，有 46 个指令&lt;br&gt; 09:36 如今英特尔酷睿 i7, 有上千条指令&lt;/p&gt; 
&lt;h2&gt;第 9 集：高级 CPU 设计&lt;/h2&gt; 
&lt;p&gt;00:24 早期是加快晶体管切换速度，来提升 CPU 速度&lt;br&gt; 01:20 给 CPU 专门的除法电路 + 其他电路来做复杂操作，比如游戏，视频解码&lt;br&gt; 02:28 给 CPU 加缓存，提高数据存取速度，更快喂给 CPU，用计算餐馆销售额举例&lt;br&gt; 05:13 脏位 - Dirty bit&lt;br&gt; 05:33 流水线设计，用 1 个洗衣机和 1 个干燥机举例&lt;br&gt; 06:01 并行处理 - parallelize&lt;br&gt; 07:33 乱序执行 - out-of-order execution&lt;br&gt; 08:21 推测执行 - speculative execution&lt;br&gt; 08:50 分支预测 - branch prediction&lt;br&gt; 09:34 多个 ALU&lt;br&gt; 09:54 多核 (Core)&lt;br&gt; 10:11 多个独立 CPU&lt;br&gt; 10:52 超级计算机，中国的&quot;神威 太湖之光&quot;&lt;/p&gt; 
&lt;h2&gt;第 10 集：早期的编程方式&lt;/h2&gt; 
&lt;p&gt;本集重点：早期计算机如何编程&lt;br&gt; 打孔纸卡 → 插线板 → 面板拨开关&lt;/p&gt; 
&lt;p&gt;00:00 开头说本集重点：程序如何进入计算机&lt;br&gt; 00:53 拿纺织业举例，给机器编程的需求远在计算机出现前就有了&lt;br&gt; 01:41 打孔纸卡 - Punched card&lt;br&gt; 02:36 插线板 - Plugboard&lt;br&gt; 04:20 冯诺依曼架构 - Von Neumann Architecture&lt;br&gt; 07:00 面板编程 - Panel programming&lt;br&gt; 07:29 第一款取得商业成功的家用计算机: Altair 8800&lt;br&gt; 08:15 编程依然很困难，人们需要更友好更简单的方式编程&lt;br&gt; 08:44 下周主题：编程语言&lt;/p&gt; 
&lt;h2&gt;第 11 集：编程语言发展史&lt;/h2&gt; 
&lt;p&gt;编程：二进制 → 助记符（汇编器）→ A-0（编译器）→ FORTRAIN&lt;/p&gt; 
&lt;p&gt;01:45 二进制写程序，先纸上写伪代码，手工转二进制，很快就烦了&lt;br&gt; 02:28 用 &quot;助记符” 写代码（LOAD_A 14）为了把助记符转二进制，汇编器诞生 (Assembler)&lt;br&gt; 04:32 葛丽丝·霍普 (Grace Hopper) - 哈佛1号计算机首批程序员, 海军军官&lt;br&gt; 05:13 Grace 设计了编程语言 A-0&lt;br&gt; 05:29 Grace 1952 年做了第一个编译器 (Compiler)，实现 A-0&lt;br&gt; 06:29 变量 (Variables)&lt;br&gt; 07:01 FORTRAN&lt;br&gt; 08:18 COBOL&lt;br&gt; 09:25 新语言&lt;br&gt; 1960 年代：ALGOL，LISP，BASIC&lt;br&gt; 1970 年代：Pascal，C，Smalltalk&lt;br&gt; 1980 年代：C++，Objective-C，Perl&lt;br&gt; 1990 年代：Python，Ruby，Java&lt;/p&gt; 
&lt;h2&gt;第 12 集：编程基础 - 语句和函数&lt;/h2&gt; 
&lt;p&gt;00:50 变量, 赋值语句&lt;br&gt; 02:08 Grace Hopper 拍虫子游戏&lt;br&gt; 02:52 if 判断&lt;br&gt; 04:19 while 循环&lt;br&gt; 05:48 for 循环&lt;br&gt; 07:00 函数&lt;br&gt; 11:11 下集介绍算法&lt;/p&gt; 
&lt;h2&gt;第 13 集：算法入门&lt;/h2&gt; 
&lt;p&gt;03:00 选择排序 - Selection sort&lt;br&gt; 03:52 大 O 表示法 - Big O notation&lt;br&gt; 04:31 归并排序 - Merge sort&lt;br&gt; 08:03 Dijkstra 算法&lt;/p&gt; 
&lt;h2&gt;第 14 集：数据结构&lt;/h2&gt; 
&lt;p&gt;00:39 数组 - Array&lt;br&gt; 02:06 字符串 - String&lt;br&gt; 03:12 矩阵 - Matrix&lt;br&gt; 04:05 结构体 - Struct&lt;br&gt; 04:46 指针 - Pointer&lt;br&gt; 04:44 节点 - Node&lt;br&gt; 04:53 链表 - Linked List&lt;br&gt; 06:21 队列 - Queue&lt;br&gt; 06:21 栈 - Stack&lt;br&gt; 07:31 树 - Tree&lt;br&gt; 08:01 二叉树 - Binary Tree&lt;br&gt; 08:26 图 - Graph&lt;br&gt; 08:50 没时间讲红黑树和堆, 不同数据结构适用不同场景&lt;/p&gt; 
&lt;h2&gt;第 15 集：阿兰·图灵&lt;/h2&gt; 
&lt;p&gt;00:33 介绍图灵&lt;br&gt; 00:52 可判定性问题&lt;br&gt; 01:14 阿隆佐·丘奇，Lambda 算子&lt;br&gt; 01:38 图灵机&lt;br&gt; 04:54 停机问题&lt;br&gt; 08:09 破解德军英格玛加密机&lt;br&gt; 10:40 图灵测试&lt;br&gt; 11:18 图灵的个人生活&lt;br&gt; 12:07 图灵奖&lt;/p&gt; 
&lt;h2&gt;第 16 集：软件工程&lt;/h2&gt; 
&lt;p&gt;01:31 对象 Object&lt;br&gt; 02:39 面向对象编程 Object Oriented Programming.&lt;br&gt; 03:55 API Application Programming Interface&lt;br&gt; 04:33 public, private&lt;br&gt; 05:36 集成开发环境, IDE - Integrated Development Environments&lt;br&gt; 06:09 调试 debugging&lt;br&gt; 06:31 文档和注释 - readme, comment&lt;br&gt; 07:33 版本控制 Version control&lt;br&gt; 08:50 质量控制 Quality Assurance testing，QA&lt;br&gt; 09:21 Beta, Alpha&lt;/p&gt; 
&lt;h2&gt;第 17 集：集成电路与摩尔定律&lt;/h2&gt; 
&lt;p&gt;本集重点：晶圆的制作流程：光刻 (04:21~07:42)&lt;/p&gt; 
&lt;p&gt;00:51 分立元件 Discrete components&lt;br&gt; 01:09 数字暴政 Tyranny of Numbers - 是 1960 年代工程师碰到的问题&lt;br&gt; 意思是如果想加强电脑性能，就要更多部件，这导致更多线路，更复杂。所以很难做&lt;br&gt; 04:21 光刻 Photolithography&lt;br&gt; 04:26 晶圆 Wafer&lt;br&gt; 04:57 光刻胶 Photoresist&lt;br&gt; 05:08 光掩膜 Photomask&lt;br&gt; 06:00 掺杂 Doping&lt;br&gt; 09:09 摩尔定律 Moore’s Law.&lt;br&gt; 09:38 英特尔 Intel&lt;br&gt; 10:20 晶体管数量大幅度增长, 1980年三万个，1990年一百万个，2000年三千万个，2010年十亿个&lt;br&gt; 11:44 进一步小型化会碰到 2 个问题 1. 光的波长不足以制作更精细的设计 2. 量子隧穿效应&lt;/p&gt; 
&lt;h2&gt;第 18 集：操作系统&lt;/h2&gt; 
&lt;p&gt;00:48 操作系统 Operating systems&lt;br&gt; 01:34 批处理 Batch processing&lt;br&gt; 01:58 计算机变便宜变多，有不同配置，写程序处理不同硬件细节很痛苦，因此操作系统负责抽象硬件&lt;br&gt; 02:12 外部设备 Peripherals&lt;br&gt; 02:48 设备驱动程序 Device drivers&lt;br&gt; 04:43 多任务处理 Multitasking&lt;br&gt; 05:54 虚拟内存 Virtual Memory&lt;br&gt; 07:09 动态内存分配 Dynamic memory allocation&lt;br&gt; 07:31 内存保护 Memory Protection&lt;br&gt; 07:54 1970年代，计算机足够便宜，大学买了让学生用，多个学生用多个 &quot;终端&quot; 连接到主机&lt;br&gt; 08:29 多用户分时操作系统，Multics&lt;br&gt; 09:32 Unix&lt;br&gt; 11:02 MS-DOS&lt;br&gt; 12:09 下集是内存&amp;amp;存储介质&lt;/p&gt; 
&lt;h2&gt;第 19 集：内存&amp;amp;储存介质&lt;/h2&gt; 
&lt;p&gt;本集重点：存储技术的发展&lt;/p&gt; 
&lt;p&gt;01:01 纸卡 Paper punch cards&lt;br&gt; 02:01 延迟线存储器 Delay Line Memory&lt;br&gt; 04:06 磁芯 Magnetic Core Memory&lt;br&gt; 06:08 磁带 Magnetic Tape&lt;br&gt; 07:08 磁鼓 Magnetic Drum Memory&lt;br&gt; 07:43 硬盘 Hard Disk Drives&lt;br&gt; 08:53 内存层次结构 Memory Hierarchy&lt;br&gt; 09:36 软盘 Floppy Disk&lt;br&gt; 10:09 光盘 Compact Disk&lt;br&gt; 10:51 固态硬盘 Solid State Drives&lt;/p&gt; 
&lt;h2&gt;第 20 集：文件系统&lt;/h2&gt; 
&lt;p&gt;00:47 文件格式：可以随便存文件数据，但按格式存会更方便&lt;br&gt; 01:00 TXT 文本文件：ASCII&lt;br&gt; 01:31 WAV 音频文件：每秒上千次的音频采样数字&lt;br&gt; 02:47 BMP 图片文件：像素的红绿蓝 RGB 值&lt;br&gt; 04:43 文件系统：很早期时空间小，整个存储器就像一整个文件。后来随容量增长，多文件非常必要&lt;br&gt; 05:37 目录文件：用来解决多文件问题，存其他文件的信息，比如开头，结尾，创建时间等&lt;/p&gt; 
&lt;p&gt;06:39 平面文件系统 - Flat File System：文件都在同一个层次，早期空间小，只有十几个文件，平面系统够用&lt;/p&gt; 
&lt;p&gt;06:57 如果文件紧密的一个个前后排序会造成问题，所以文件系统会： 1. 把空间划分成一块块 2. 文件拆分存在多个块里&lt;/p&gt; 
&lt;p&gt;08:30 文件的增删改查会不可避免的造成文件散落在各个块里，&lt;br&gt; 如果是磁带这样的存储介质就会造成问题，所以做碎片整理&lt;/p&gt; 
&lt;p&gt;09:46 分层文件系统 - Hierarchical File System：有不同文件夹，文件夹可以层层嵌套&lt;/p&gt; 
&lt;p&gt;第21集讲压缩&lt;/p&gt; 
&lt;h2&gt;第 21 集：压缩&lt;/h2&gt; 
&lt;p&gt;00:26 压缩的好处是能存更多文件，传输也更快&lt;br&gt; 01:52 游程编码 Run-Length Encoding&lt;br&gt; 02:45 无损压缩 Lossless compression&lt;br&gt; 03:55 霍夫曼树 Huffman Tree&lt;br&gt; 05:56 &quot;消除冗余&quot;和&quot;用更紧凑的表示方法&quot;，这两种方法通常会组合使用&lt;br&gt; 06:07 字典编码 Dictionary coders, 游程编码 和 字典编码 都是无损压缩&lt;br&gt; 08:03 感知编码 Perceptual coding&lt;br&gt; 08:09 有损压缩 jpeg 格式&lt;br&gt; 09:39 时间冗余 Temporal redundancy&lt;br&gt; 10:30 MPEG-4 视频编码&lt;/p&gt; 
&lt;h2&gt;第 22 集：命令行界面&lt;/h2&gt; 
&lt;p&gt;本集重点：计算机早期同时输入程序和数据（用纸卡/纸带）&lt;br&gt; 运行开始直到结束，中间没有人类进行操作，&lt;br&gt; 原因是计算机很贵，不能等人类慢慢输入，执行完结果打印到纸上 (02:34)&lt;/p&gt; 
&lt;p&gt;到1950年代，计算机足够便宜+快，人类和计算机交互式操作变得可行&lt;br&gt; 为了让人类输入到计算机，改造之前就有的打字机，变成电传打字机 (02:44~05:38)&lt;/p&gt; 
&lt;p&gt;到1970年代末，屏幕成本足够低，屏幕代替电传打字机，屏幕成为标配 (07:24)&lt;/p&gt; 
&lt;p&gt;00:32 人机交互 Human-Computer Interaction&lt;br&gt; 00:50 早期输出数据是打印到纸上，而输入是用纸卡/纸带一次性把程序和数据都给进去&lt;br&gt; 03:00 QWERTY 打字机的发展，克里斯托弗·莱瑟姆·肖尔斯 发明于 1868 年&lt;br&gt; 05:38 电传打字机 Teletype machine&lt;br&gt; 06:32 命令行界面 Command line interface&lt;br&gt; 06:38 ls 命令&lt;br&gt; 08:22 早期文字游戏 Zork (1977年)&lt;br&gt; 08:47 cd 命令&lt;/p&gt; 
&lt;h2&gt;第 23 集：屏幕与 2D 图形显示&lt;/h2&gt; 
&lt;p&gt;00:05 PDP-1 计算机。键盘和显示器分开，屏幕显示临时值&lt;br&gt; 01:14 阴极射线管 Cathode Ray Tube (CRT)&lt;br&gt; 01:38 CRT 有两种绘图方式：&lt;br&gt; 矢量扫描 Vector Scanning&lt;br&gt; 光栅扫描 Raster Scanning&lt;/p&gt; 
&lt;p&gt;02:14 液晶显示器 Liquid Crystal Displays (LCD)，像素 (Pixel)&lt;br&gt; 03:32 字符生成器 Character generator&lt;br&gt; 03:45 屏幕缓冲区 Screen buffer&lt;br&gt; 05:09 矢量命令画图&lt;br&gt; 06:34 Sketchpad, 光笔 (Light pen)&lt;br&gt; 09:00 函数画线，矩形&lt;/p&gt; 
&lt;h2&gt;第 24 集：冷战和消费主义&lt;/h2&gt; 
&lt;p&gt;本集重点：冷战导致美国往计算机领域投入大量资源 (00:00~01:43)&lt;/p&gt; 
&lt;p&gt;范内瓦·布什 预见了计算机的潜力，提出假想机器 Memex&lt;br&gt; 帮助建立 国家科学基金会，给科学研究提供资金 (01:43~03:43)&lt;/p&gt; 
&lt;p&gt;1950 年代消费者开始买晶体管设备，收音机大卖&lt;br&gt; 日本取得晶体管授权后，索尼做了晶体管收音机，为日本半导体行业崛起埋下种子 (03:43~04:29）&lt;/p&gt; 
&lt;p&gt;苏联 1961 年把宇航员加加林送上太空，导致美国提出登月&lt;br&gt; NASA 预算大大增加，用集成电路来制作登月计算机 (04:29~06:27)&lt;/p&gt; 
&lt;p&gt;集成电路的发展实际上是由军事应用大大推进的，阿波罗登月毕竟只有 17 次&lt;br&gt; 美国造超级计算机进一步推进集成电路 (04:29~07:11)&lt;/p&gt; 
&lt;p&gt;美国半导体行业一开始靠政府高利润合同活着，忽略消费者市场，1970年代冷战渐消，行业开始衰败&lt;br&gt; 很多公司倒闭，英特尔转型处理器 (07:11~08:23)&lt;/p&gt; 
&lt;p&gt;末尾总结：政府和消费者推动了计算机的发展&lt;br&gt; 早期靠政府资金，让技术发展到足够商用，然后消费者购买商用产品继续推动产品发展 (08:23~10:41)&lt;/p&gt; 
&lt;h2&gt;第 25 集：个人计算机革命&lt;/h2&gt; 
&lt;p&gt;本集：全是历史故事&lt;br&gt; 00:18 1970年代初成本下降，个人计算机变得可行&lt;br&gt; 01:51 Altair 8800&lt;br&gt; 02:32 比尔·盖茨 和 保罗·艾伦写 BASIC 解释器&lt;br&gt; 03:45 乔布斯提议卖组装好的计算机，Apple-I 诞生&lt;br&gt; 04:40 1977年出现3款开箱即用计算机：&lt;br&gt; &quot;Apple-II&quot;，&quot;TRS-80 Model I&quot;，&quot;Commodore PET 2001&quot;&lt;/p&gt; 
&lt;p&gt;06:26 IBM 意识到个人计算机市场&lt;br&gt; IBM PC 发布，采用开放架构，兼容的机器都叫 IBM Compatible (IBM 兼容)&lt;br&gt; 生态系统产生雪球效应：&lt;br&gt; 因为用户多，软硬件开发人员更愿意花精力在这个平台&lt;br&gt; 因为软硬件多，用户也更乐意买 &quot;IBM 兼容&quot; 的计算机&lt;/p&gt; 
&lt;p&gt;08:44 苹果选封闭架构，一切都自己来，只有苹果在非 &quot;IBM 兼容&quot; 下保持了足够市场份额&lt;/p&gt; 
&lt;h2&gt;第 26 集：图形用户界面 (GUI)&lt;/h2&gt; 
&lt;p&gt;01:10 图形界面先驱：道格拉斯·恩格尔巴特（Douglas Engelbart）&lt;br&gt; 03:20 1970年成立 帕洛阿尔托研究中心（Palo Alto Research Center）&lt;br&gt; 03:29 1973年完成 Xerox Alto(施乐奥托) 计算机&lt;br&gt; 04:42 举例：写一个简单的 GUI 程序&lt;br&gt; 06:38 1981年的 Xerox Star system(施乐之星系统)&lt;br&gt; 08:18 史蒂夫·乔布斯去施乐参观&lt;br&gt; 07:45 所见即所得 WYSIWYG&lt;br&gt; 09:15 1983年推出 Apple Lisa&lt;br&gt; 09:31 1984年推出 Macintosh&lt;br&gt; 10:12 1985年推出 Windows 1.0，之后出到 3.1&lt;br&gt; 10:43 1995年推出 Windows 95 提供图形界面&lt;br&gt; 11:08 1995年微软做失败的 Microsoft Bob&lt;/p&gt; 
&lt;h2&gt;第 27 集：3D 图形&lt;/h2&gt; 
&lt;p&gt;01:15 线框渲染 Wireframe Rendering&lt;br&gt; 01:39 正交投影 Orthographic Projection&lt;br&gt; 01:50 透视投射 Perspective Projection&lt;br&gt; 02:14 网格 Mesh&lt;br&gt; 02:37 三角形更常用因为能定义唯一的平面&lt;br&gt; 03:09 扫描线渲染 Scanline Rendering&lt;br&gt; 05:04 遮挡 Occlusion&lt;br&gt; 05:19 画家算法 Painter&#39;s Algorithm&lt;br&gt; 06:09 深度缓冲 Z Buffering&lt;br&gt; 07:45 Z Fighting 错误&lt;br&gt; 07:51 背面剔除 Back Face Culling&lt;br&gt; 08:53 表面法线 Surface Normal&lt;br&gt; 09:33 平面着色 Flat Shading&lt;br&gt; 09:43 高洛德着色 Gouraud shading, 冯氏着色 Phong Shading&lt;br&gt; 10:06 纹理映射 Texture Mapping&lt;br&gt; 11:24 图形处理单元 GPU, Graphics Processing Unit&lt;/p&gt; 
&lt;h2&gt;第 28 集：计算机网络&lt;/h2&gt; 
&lt;p&gt;02:05 局域网 Local Area Networks - LAN&lt;br&gt; 02:36 媒体访问控制地址 Media Access Control address - MAC&lt;br&gt; 02:55 载波侦听多路访问 Carrier Sense Multiple Access - CSMA&lt;br&gt; 05:18 指数退避 Exponential Backoff&lt;br&gt; 05:36 冲突域 Collision Domain&lt;br&gt; 07:08 电路交换 Circuit Switching&lt;br&gt; 07:36 报文交换 Message Switching&lt;br&gt; 10:20 分组交换 Packet Switching&lt;/p&gt; 
&lt;h2&gt;第 29 集：互联网&lt;/h2&gt; 
&lt;p&gt;02:23 IP - 互联网协议 - Internet Protocol&lt;br&gt; 03:00 UDP - 用户数据报协议 - User Datagram Protocol&lt;br&gt; 03:41 校验和 - Checksum&lt;br&gt; 05:26 TCP - 传输控制协议 - Transmission Control Protocol&lt;br&gt; 08:21 DNS - 域名系统 - Domain Name System&lt;br&gt; 10:47 OSI - 开放式系统互联通信参考模型 - Open System Interconnection&lt;/p&gt; 
&lt;h2&gt;第 30 集：万维网&lt;/h2&gt; 
&lt;p&gt;01:01 超链接 Hyperlinks&lt;br&gt; 02:20 URL - 统一资源定位器 - Uniform Resource Locator&lt;br&gt; 03:01 HTTP - 超文本传输协议 - HyperText Transfer Protocol&lt;br&gt; 04:13 HTML - 超文本标记语言 - HyperText Markup Language&lt;br&gt; 04:24 写一个简单网页，用到了 &amp;lt;h1&amp;gt; &amp;lt;a&amp;gt; &amp;lt;h2&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt; 标签&lt;br&gt; 06:04 第一个浏览器和服务器是 Tim Berners-Lee 花了 2 个月在 CERN 写的&lt;br&gt; 06:32 1991年正式发布，万维网就此诞生&lt;br&gt; 07:19 开始讲搜索引擎的故事&lt;br&gt; 07:40 Jerry 和 David 的万维网指南 后来改名成 Yahoo&lt;br&gt; 07:52 搜索引擎 JumpStation&lt;br&gt; 09:07 搜索引擎 Google&lt;br&gt; 09:20 网络中立性&lt;/p&gt; 
&lt;h2&gt;第 31 集：计算机安全&lt;/h2&gt; 
&lt;p&gt;01:00 Secrecy, Integrity, Availability&lt;br&gt; 保密性, 完整性, 可用性&lt;br&gt; 01:49 Threat Model 威胁模型&lt;/p&gt; 
&lt;p&gt;03:14 身份验证 (Authentication) 的三种方式：&lt;br&gt; What you know, 你知道什么&lt;br&gt; What you have, 你有什么&lt;br&gt; What you are, 你是什么&lt;/p&gt; 
&lt;p&gt;07:34 访问控制 Access Control&lt;br&gt; 08:48 Bell LaPadula model 不能向上读取，不能向下写入&lt;br&gt; 11:00 隔离 Isolation, 沙盒 Sandbox&lt;/p&gt; 
&lt;h2&gt;第 32 集：黑客与攻击&lt;/h2&gt; 
&lt;p&gt;01:28 社会工程学 Social Engineering&lt;br&gt; 01:38 钓鱼 Phishing&lt;br&gt; 02:06 假托 Pretexting&lt;br&gt; 02:50 木马 Trojan Horses&lt;br&gt; 03:32 NAND镜像 NAND Mirroring&lt;br&gt; 04:12 漏洞利用 Exploit&lt;br&gt; 04:16 缓冲区溢出 Buffer Overflow&lt;br&gt; 05:45 边界检查 Bounds Checking&lt;br&gt; 06:16 代码注入 Code Injection&lt;br&gt; 09:32 零日漏洞 Zero Day Vulnerability&lt;br&gt; 09:53 计算机蠕虫 Worms&lt;br&gt; 09:58 僵尸网络 Botnet&lt;br&gt; 10:11 拒绝服务攻击 DDoS&lt;/p&gt; 
&lt;h2&gt;第 33 集：加密&lt;/h2&gt; 
&lt;p&gt;00:16 多层防御 Defence in depth&lt;br&gt; 01:00 加密 - Encryption，解密 - Decryption&lt;br&gt; 01:11 凯撒加密 Caesar cipher&lt;br&gt; 01:27 替换加密 Substitution cipher&lt;br&gt; 01:59 移位加密 Permutation cipher&lt;br&gt; 02:03 列移位加密 Columnar transposition cipher&lt;br&gt; 02:37 德国 Enigma 加密机&lt;br&gt; 04:54 1977年&quot;数据加密标准&quot; - Data Encryption Standard (DES)&lt;br&gt; 05:24 2001年&quot;高级加密标准&quot; - Advanced Encryption Standard (AES)&lt;br&gt; 07:06 密钥交换 - Key exchange&lt;br&gt; 07:33 用颜色来举例&quot;单向函数&quot;和&quot;密钥加密&quot;的原理&lt;br&gt; 08:24 迪菲-赫尔曼密钥交换 - Diffie-Hellman Key Exchange&lt;br&gt; 10:18 非对称加密 - Asymmetric encryption&lt;br&gt; 11:22 非对称加密算法 RSA&lt;/p&gt; 
&lt;h2&gt;第 34 集：机器学习与人工智能&lt;/h2&gt; 
&lt;p&gt;01:23 分类 Classification&lt;br&gt; 01:25 分类器 Classifier&lt;br&gt; 01:34 特征 Feature&lt;br&gt; 02:03 标记数据 Labeled data&lt;br&gt; 02:38 决策边界 Decision boundaries&lt;br&gt; 03:00 混淆矩阵 Confusion matrix&lt;br&gt; 03:39 未标签数据 Unlabeled data&lt;br&gt; 03:49 决策树 Decision tree&lt;br&gt; 04:25 支持向量机 Support Vector Machines&lt;br&gt; 05:52 人工神经网络 Artificial Neural Network&lt;br&gt; 08:34 深度学习 Deep learning&lt;br&gt; 09:21 弱AI, 窄AI Weak AI, Narrow AI&lt;br&gt; 09:43 强AI Strong AI&lt;br&gt; 10:42 强化学习 Reinforcement Learning&lt;/p&gt; 
&lt;h2&gt;第 35 集：计算机视觉&lt;/h2&gt; 
&lt;p&gt;02:41 检测垂直边缘的算法&lt;br&gt; 03:26 核/过滤器 kernel or filter&lt;br&gt; 03:56 卷积 convolution&lt;br&gt; 04:23 Prewitt 算子 Prewitt Operators&lt;br&gt; 05:34 维奥拉·琼斯 人脸检测 Viola-Jones Face Detection&lt;br&gt; 05:35 卷积神经网络 Convolutional Neural Networks&lt;br&gt; 07:33 识别出脸之后，可以进一步用其他算法定位面部标志，如眼睛和眉毛具体位置，从而判断心情等信息&lt;br&gt; 08:52 跟踪全身的标记点，如肩部，手臂等&lt;/p&gt; 
&lt;h2&gt;第 36 集：自然语言处理&lt;/h2&gt; 
&lt;p&gt;01:50 词性 Parts of speech&lt;br&gt; 02:15 短语结构规则 Phrase structure rules&lt;br&gt; 02:32 分析树 Parse tree&lt;br&gt; 05:30 语音识别 Speech recognition&lt;br&gt; 07:26 谱图 Spectrogram&lt;br&gt; 07:44 快速傅立叶变换 Fast Fourier Transform&lt;br&gt; 08:42 音素 Phonemes&lt;br&gt; 09:29 语音合成 Speech Synthesis&lt;/p&gt; 
&lt;h2&gt;第 37 集：机器人&lt;/h2&gt; 
&lt;p&gt;02:08 法国吃饭鸭 - Digesting Duck, Canard Digerateur&lt;br&gt; 02:23 土耳其行棋傀儡, 下国际象棋&lt;br&gt; 02:43 第一台计算机控制的机器出现在1940年代晚期，叫数控机器, Computer Numerical Control(CNC)&lt;br&gt; 03:32 1960年 Unimate，第一个商业贩卖的 可编程工业机器人&lt;br&gt; 03:47 简单控制回路 simple control loop&lt;br&gt; 04:08 负反馈回路 negative feedback loop&lt;br&gt; 05:17 比例-积分-微分控制器 Proportional–Integral–Derivative controller PID 控制器&lt;br&gt; 10:48 机器人三定律 Three Laws of Robotics&lt;/p&gt; 
&lt;h2&gt;第 38 集：计算机心理学&lt;/h2&gt; 
&lt;p&gt;00:45 我们需要了解人类心理学，做出更好的计算机&lt;br&gt; 01:12 易用度 - Usability&lt;br&gt; 01:31 颜色强度排序 和 颜色排序&lt;br&gt; 02:30 分组更好记，电话号码 317-555-3897 比 3175553897 好记&lt;br&gt; 03:25 直观功能 - Affordances&lt;br&gt; 04:33 认出 vs 回想 Recognition vs Recall&lt;br&gt; 05:45 让机器有一定情商以及 Facebook 的研究&lt;br&gt; 08:40 用软件修正注视位置。让视频通话时看起来像盯着对方，而不是盯着下方&lt;br&gt; 09:58 把机器人做的像人，恐怖谷理论&lt;br&gt; 11:35 有很多开放式的问题，心理学帮助我们明白不同选择可能带来的影响&lt;/p&gt; 
&lt;h2&gt;第 39 集：教育科技&lt;/h2&gt; 
&lt;p&gt;02:15 通过调速，暂停等技巧，加强学习效率&lt;br&gt; 03:15 大型开放式在线课程 - Massive Open Online Courses (MOOC)&lt;br&gt; 05:08 智能辅导系统 - Intelligent Tutoring Systems&lt;br&gt; 05:22 判断规则 - Production rule&lt;br&gt; 06:10 域模型 - Domain Model&lt;br&gt; 06:46 贝叶斯知识追踪 Bayesian knowledge tracing&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;学生已经学会的概率&lt;/li&gt; 
 &lt;li&gt;瞎猜的概率&lt;/li&gt; 
 &lt;li&gt;失误的概率&lt;/li&gt; 
 &lt;li&gt;做题过程中学会的概率&lt;br&gt; 09:27 教育数据挖掘 Educational Data Mining&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;（完结）第 40 集：奇点，天网，计算机的未来&lt;/h2&gt; 
&lt;p&gt;01:21 普适计算 Ubiquitous Computing&lt;br&gt; 04:55 奇点 Singularity&lt;br&gt; 06:51 把工作分为4个象限，讨论自动化带来的影响&lt;br&gt; 10:15 机器人的存在时间可能长过人类，可以长时间探索宇宙&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
