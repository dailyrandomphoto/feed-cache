<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Wed, 22 Sep 2021 01:54:37 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>freeCodeCamp/freeCodeCamp</title>
      <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
      <description>&lt;p&gt;freeCodeCamp.org&#39;s open-source codebase and curriculum. Learn to code for free.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/freecodecamp/wide-social-banner.png&quot; alt=&quot;freeCodeCamp.org Social Banner&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;Pull Requests Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.firsttimersonly.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/first--timers--only-friendly-blue.svg?sanitize=true&quot; alt=&quot;first-timers-only Friendly&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codetriage.com/freecodecamp/freecodecamp&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg?sanitize=true&quot; alt=&quot;Open Source Helpers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/from-referrer/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/setup-automated-blue?logo=gitpod&quot; alt=&quot;Setup Automated&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://chat.freecodecamp.org/&quot;&gt;&lt;img src=&quot;https://chat.freecodecamp.org/api/v1/shield.svg?type=online&amp;amp;icon=false&amp;amp;name=Chat&quot; alt=&quot;Rocket.Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;freeCodeCamp.org&#39;s open-source codebase and curriculum&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt; is a friendly community where you can learn to code for free. It is run by a &lt;a href=&quot;https://www.freecodecamp.org/donate&quot;&gt;donor-supported 501(c)(3) nonprofit&lt;/a&gt; to help millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.&lt;/p&gt; 
&lt;p&gt;Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#certifications&quot;&gt;Certifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#the-learning-platform&quot;&gt;The Learning Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-bugs-and-issues&quot;&gt;Reporting Bugs and Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-security-issues-and-responsible-disclosure&quot;&gt;Reporting Security Issues and Responsible Disclosure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#platform-build-and-deployment-status&quot;&gt;Platform, Build and Deployment Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Certifications&lt;/h3&gt; 
&lt;p&gt;freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.&lt;/p&gt; 
&lt;p&gt;Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you&#39;ve fulfilled all the user stories before you submit it.&lt;/p&gt; 
&lt;p&gt;You can pull in these test suites through &lt;a href=&quot;https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js&quot;&gt;freeCodeCamp&#39;s CDN&lt;/a&gt;. This means you can build these projects on websites like CodePen and Replit - or even on your local computer&#39;s development environment.&lt;/p&gt; 
&lt;p&gt;Once you&#39;ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they&#39;ll see a verified certification specific to you.&lt;/p&gt; 
&lt;p&gt;The one exception to this is if we discover violations of our &lt;a href=&quot;https://www.freecodecamp.org/news/academic-honesty-policy/&quot;&gt;Academic Honesty Policy&lt;/a&gt;. When we catch people unambiguously plagiarizing (submitting other people&#39;s code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.&lt;/p&gt; 
&lt;p&gt;Here are our ten core certifications:&lt;/p&gt; 
&lt;h4&gt;1. &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/&quot;&gt;Responsive Web Design Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#basic-html-and-html5&quot;&gt;Basic HTML and HTML5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#basic-css&quot;&gt;Basic CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#applied-visual-design&quot;&gt;Applied Visual Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#applied-accessibility&quot;&gt;Applied Accessibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#responsive-web-design-principles&quot;&gt;Responsive Web Design Principles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#css-flexbox&quot;&gt;CSS Flexbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#css-grid&quot;&gt;CSS Grid&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-tribute-page&quot;&gt;Tribute Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-survey-form&quot;&gt;Survey Form&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-product-landing-page&quot;&gt;Product Landing Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-technical-documentation-page&quot;&gt;Technical Documentation Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-personal-portfolio-webpage&quot;&gt;Personal Portfolio Webpage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/&quot;&gt;JavaScript Algorithms and Data Structures Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#basic-javascript&quot;&gt;Basic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#es6&quot;&gt;ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#regular-expressions&quot;&gt;Regular Expressions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#debugging&quot;&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#basic-data-structures&quot;&gt;Basic Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#basic-algorithm-scripting&quot;&gt;Basic Algorithm Scripting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#object-oriented-programming&quot;&gt;Object-Oriented Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#functional-programming&quot;&gt;Functional Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#intermediate-algorithm-scripting&quot;&gt;Intermediate Algorithm Scripting&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/palindrome-checker&quot;&gt;Palindrome Checker&lt;/a&gt;,&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/roman-numeral-converter&quot;&gt; Roman Numeral Converter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/caesars-cipher&quot;&gt;Caesar&#39;s Cipher&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/telephone-number-validator&quot;&gt;Telephone Number Validator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/cash-register&quot;&gt;Cash Register&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/&quot;&gt;Front End Libraries Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#sass&quot;&gt;Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#react&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#redux&quot;&gt;Redux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux&quot;&gt;React and Redux&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine&quot;&gt;Random Quote Machine&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer&quot;&gt;Markdown Previewer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine&quot;&gt;Drum Machine&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator&quot;&gt;JavaScript Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock&quot;&gt;25 + 5 Clock&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/&quot;&gt;Data Visualization Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3&quot;&gt;Data Visualization with D3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax&quot;&gt;JSON APIs and Ajax&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart&quot;&gt;Bar Chart&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph&quot;&gt;Scatterplot Graph&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map&quot;&gt;Heat Map&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map&quot;&gt;Choropleth Map&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram&quot;&gt;Treemap Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5. &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/&quot;&gt;APIs and Microservices Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm&quot;&gt;Managing Packages with Npm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express&quot;&gt;Basic Node and Express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose&quot;&gt;MongoDB and Mongoose&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice&quot;&gt;Timestamp Microservice&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice&quot;&gt;Request Header Parser&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice&quot;&gt;URL Shortener&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker&quot;&gt;Exercise Tracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice&quot;&gt;File Metadata Microservice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/&quot;&gt;Quality Assurance Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai&quot;&gt;Quality Assurance and Testing with Chai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express&quot;&gt;Advanced Node and Express&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter&quot;&gt;Metric-Imperial Converter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker&quot;&gt;Issue Tracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library&quot;&gt;Personal Library&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver&quot;&gt;Sudoku Solver&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator&quot;&gt;American British Translator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;7. &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/&quot;&gt;Scientific Computing with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#python-for-everybody&quot;&gt;Introduction to Python for Everybody&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/arithmetic-formatter&quot;&gt;Arithmetic Formatter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/time-calculator&quot;&gt;Time Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/budget-app&quot;&gt;Budget App&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/polygon-area-calculator&quot;&gt;Polygon Area Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/probability-calculator&quot;&gt;Probability Calculator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;8. &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/&quot;&gt;Data Analysis with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/#data-analysis-with-python-course&quot;&gt;Data Analysis with Python Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/#numpy&quot;&gt;NumPy&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator&quot;&gt;Mean-Variance-Standard Deviation Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer&quot;&gt;Demographic Data Analyzer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/medical-data-visualizer&quot;&gt;Medical Data Visualizer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/page-view-time-series-visualizer&quot;&gt;Page View Time Series Visualizer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/sea-level-predictor&quot;&gt;Sea Level Predictor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;9. &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/&quot;&gt;Information Security Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/#information-security-with-helmetjs&quot;&gt;Information Security with HelmetJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/#python-for-penetration-testing&quot;&gt;Python for Penetration Testing&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/stock-price-checker&quot;&gt;Stock Price Checker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/anonymous-message-board&quot;&gt;Anonymous Message Board&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/port-scanner&quot;&gt;Port Scanner&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/sha-1-password-cracker&quot;&gt;SHA-1 Password Cracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/secure-real-time-multiplayer-game&quot;&gt;Secure Real Time Multiplayer Game &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;10. &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/&quot;&gt;Machine Learning with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/#tensorflow&quot;&gt;TensorFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/#how-neural-networks-work&quot;&gt;How Neural Networks Work&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/rock-paper-scissors&quot;&gt;Rock Paper Scissors&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/cat-and-dog-image-classifier&quot;&gt;Cat and Dog Image Classifier&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/book-recommendation-engine-using-knn&quot;&gt;Book Recommendation Engine using KNN&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/linear-regression-health-costs-calculator&quot;&gt;Linear Regression Health Costs Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/neural-network-sms-text-classifier&quot;&gt;Neural Network SMS Text Classifier&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Legacy Full Stack Development Certification&lt;/h4&gt; 
&lt;p&gt;Once you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Development Libraries, Data Visualization, Back End Development and APIs, and Legacy Information Security and Quality Assurance certifications, you&#39;ll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you&#39;ve completed around 1,800 hours of coding with a wide range of web development tools.&lt;/p&gt; 
&lt;h4&gt;Legacy Certifications&lt;/h4&gt; 
&lt;p&gt;We also have 4 legacy certifications dating back to our 2015 curriculum, which is still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Legacy Front End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Data Visualization Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Back End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Information Security and Quality Assurance Certification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Learning Platform&lt;/h3&gt; 
&lt;p&gt;This code is running live at &lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our community also has:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://forum.freecodecamp.org&quot;&gt;forum&lt;/a&gt; where you can usually get programming help or project feedback within hours.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://youtube.com/freecodecamp&quot;&gt;YouTube channel&lt;/a&gt; with free courses on Python, SQL, Android, and a wide variety of other technologies.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://www.freecodecamp.org/news&quot;&gt;technical publication&lt;/a&gt; with thousands of programming tutorials and articles about math and computer science.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://chat.freecodecamp.org/home&quot;&gt;chat server&lt;/a&gt; where you can hang out and talk with developers and people who are learning to code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.freecodecamp.org/signin&quot;&gt;Join the community here&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Reporting Bugs and Issues&lt;/h3&gt; 
&lt;p&gt;If you think you&#39;ve found a bug, first read the &lt;a href=&quot;https://forum.freecodecamp.org/t/how-to-report-a-bug/19543&quot;&gt;how to report a bug&lt;/a&gt; article and follow its instructions.&lt;/p&gt; 
&lt;p&gt;If you&#39;re confident it&#39;s a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Issues and Responsible Disclosure&lt;/h3&gt; 
&lt;p&gt;If you think you have found a vulnerability, &lt;em&gt;please report responsibly&lt;/em&gt;. Don&#39;t create GitHub issues for security issues. Instead, please send an email to &lt;code&gt;security@freecodecamp.org&lt;/code&gt; and we&#39;ll look into it immediately.&lt;/p&gt; 
&lt;p&gt;We appreciate any responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users. While we do not offer any bounties or swags at the moment, we&#39;ll be happy to list your name in our &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/HoF.md&quot;&gt;Hall of Fame&lt;/a&gt; for security researchers.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;The freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome all contributions to the community and are excited to welcome you aboard.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://contribute.freecodecamp.org&quot;&gt;Please follow these steps to contribute&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Platform, Build, and Deployment Status&lt;/h3&gt; 
&lt;p&gt;The general platform status for all our applications is available at &lt;a href=&quot;https://status.freecodecamp.org&quot;&gt;&lt;code&gt;status.freecodecamp.org&lt;/code&gt;&lt;/a&gt;. The build and deployment status for the code is available in &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/docs/devops.md&quot;&gt;our DevOps Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Copyright © 2021 freeCodeCamp.org&lt;/p&gt; 
&lt;p&gt;The content of this repository is bound by the following licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The computer software is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/LICENSE.md&quot;&gt;BSD-3-Clause&lt;/a&gt; license.&lt;/li&gt; 
 &lt;li&gt;The learning resources in the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum&quot;&gt;&lt;code&gt;/curriculum&lt;/code&gt;&lt;/a&gt; directory including their subdirectories thereon are licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum/LICENSE.md&quot;&gt;CC-BY-SA-4.0&lt;/a&gt; license.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>iamadamdev/bypass-paywalls-chrome</title>
      <link>https://github.com/iamadamdev/bypass-paywalls-chrome</link>
      <description>&lt;p&gt;Bypass Paywalls web browser extension for Chrome and Firefox.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/raw/master/src/icons/bypass.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Bypass Paywalls&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Bypass Paywalls is a web browser extension to help bypass paywalls for selected sites.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Google Chrome / Microsoft Edge&lt;/strong&gt; (Custom sites supported)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download this repo as a &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/archive/master.zip&quot;&gt;ZIP file from GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Unzip the file and you should have a folder named &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In Chrome/Edge go to the extensions page (&lt;code&gt;chrome://extensions&lt;/code&gt; or &lt;code&gt;edge://extensions&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Enable Developer Mode.&lt;/li&gt; 
 &lt;li&gt;Drag the &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt; folder anywhere on the page to import it (do not delete the folder afterwards).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Mozilla Firefox&lt;/strong&gt; (Custom sites not supported)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/releases/latest/download/bypass-paywalls-firefox.xpi&quot;&gt;Download and install the latest version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every time you open Chrome it may warn you about running extensions in developer mode, just click ✕ to keep the extension enabled.&lt;/li&gt; 
 &lt;li&gt;You will be logged out for any site you have checked.&lt;/li&gt; 
 &lt;li&gt;This extension works best alongside the adblocker uBlock Origin.&lt;/li&gt; 
 &lt;li&gt;The Firefox version supports automatic updates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bypass the following sites&#39; paywalls with this extension:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.adweek.com&quot;&gt;Adweek&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ad.nl&quot;&gt;Algemeen Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.americanbanker.com&quot;&gt;American Banker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ambito.com&quot;&gt;Ámbito&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.baltimoresun.com&quot;&gt;Baltimore Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.barrons.com&quot;&gt;Barron&#39;s&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloombergquint.com&quot;&gt;Bloomberg Quint&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloomberg.com&quot;&gt;Bloomberg&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bndestem.nl&quot;&gt;BN De Stem&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bostonglobe.com&quot;&gt;Boston Globe&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bd.nl&quot;&gt;Brabants Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.brisbanetimes.com.au&quot;&gt;Brisbane Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.businessinsider.com&quot;&gt;Business Insider&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.caixinglobal.com&quot;&gt;Caixin&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.centralwesterndaily.com.au&quot;&gt;Central Western Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://cen.acs.org&quot;&gt;Chemical &amp;amp; Engineering News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagotribune.com&quot;&gt;Chicago Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.corriere.it&quot;&gt;Corriere Della Sera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagobusiness.com&quot;&gt;Crain&#39;s Chicago Business&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailypress.com&quot;&gt;Daily Press&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.gelderlander.nl&quot;&gt;De Gelderlander&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.groene.nl&quot;&gt;De Groene Amsterdammer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.destentor.nl&quot;&gt;De Stentor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://speld.nl&quot;&gt;De Speld&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tijd.be&quot;&gt;De Tijd&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.volkskrant.nl&quot;&gt;De Volkskrant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.demorgen.be&quot;&gt;DeMorgen&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.denverpost.com&quot;&gt;Denver Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.df.cl&quot;&gt;Diario Financiero&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.editorialedomani.it&quot;&gt;Domani&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dynamed.com&quot;&gt;Dynamed Plus&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ed.nl&quot;&gt;Eindhovens Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elmercurio.com&quot;&gt;El Mercurio&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elpais.com&quot;&gt;El Pais&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elperiodico.com&quot;&gt;El Periodico&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elu24.ee&quot;&gt;Elu24&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.britannica.com&quot;&gt;Encyclopedia Britannica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.estadao.com.br&quot;&gt;Estadão&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.examiner.com.au&quot;&gt;Examiner&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.expansion.com&quot;&gt;Expansión&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fnlondon.com&quot;&gt;Financial News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.financialpost.com&quot;&gt;Financial Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ft.com&quot;&gt;Financial Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.firstthings.com&quot;&gt;First Things&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.foreignpolicy.com&quot;&gt;Foreign Policy&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fortune.com&quot;&gt;Fortune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.genomeweb.com&quot;&gt;Genomeweb&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.glassdoor.com&quot;&gt;Glassdoor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.globes.co.il&quot;&gt;Globes&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.grubstreet.com&quot;&gt;Grubstreet&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.co.il&quot;&gt;Haaretz.co.il&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.com&quot;&gt;Haaretz.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.handelsblatt.com&quot;&gt;Handelsblatt&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://harpers.org&quot;&gt;Harper&#39;s Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.courant.com&quot;&gt;Hartford Courant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.hbr.org&quot;&gt;Harvard Business Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.heraldsun.com.au&quot;&gt;Herald Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://fd.nl&quot;&gt;Het Financieel Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.historyextra.com&quot;&gt;History Extra&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.humo.be&quot;&gt;Humo&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ilmanifesto.it&quot;&gt;Il Manifesto&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inc.com&quot;&gt;Inc.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.interest.co.nz&quot;&gt;Interest.co.nz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.investorschronicle.co.uk&quot;&gt;Investors Chronicle&lt;/a&gt; &lt;a href=&quot;https://www.lecho.be&quot;&gt;L&#39;Écho&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://labusinessjournal.com&quot;&gt;L.A. Business Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lanacion.com.ar&quot;&gt;La Nación&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.repubblica.it&quot;&gt;La Repubblica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lastampa.it&quot;&gt;La Stampa&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latercera.com&quot;&gt;La Tercera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lavoixdunord.fr&quot;&gt;La Voix du Nord&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ledevoir.com&quot;&gt;Le Devoir&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.leparisien.fr&quot;&gt;Le Parisien&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lesechos.fr&quot;&gt;Les Échos&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.loebclassics.com&quot;&gt;Loeb Classical Library&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lrb.co.uk&quot;&gt;London Review of Books&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latimes.com&quot;&gt;Los Angeles Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sloanreview.mit.edu&quot;&gt;MIT Sloan Management Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.technologyreview.com&quot;&gt;MIT Technology Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medium.com&quot;&gt;Medium&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medscape.com&quot;&gt;Medscape&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://mexiconewsdaily.com&quot;&gt;Mexicon News Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mv-voice.com&quot;&gt;Mountain View Voice&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nationalgeographic.com&quot;&gt;National Geographic&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nydailynews.com&quot;&gt;New York Daily News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nrc.nl&quot;&gt;NRC Handelsblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ntnews.com.au&quot;&gt;NT News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nationalpost.com&quot;&gt;National Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzz.ch&quot;&gt;Neue Zürcher Zeitung&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nymag.com&quot;&gt;New York Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzherald.co.nz&quot;&gt;New Zealand Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://asia.nikkei.com&quot;&gt;Nikkei Asian Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ocregister.com&quot;&gt;Orange County Register&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.orlandosentinel.com&quot;&gt;Orlando Sentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.pzc.nl&quot;&gt;PZC&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.paloaltoonline.com&quot;&gt;Palo Alto Online&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.parool.nl&quot;&gt;Parool&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.postimees.ee&quot;&gt;Postimees&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://qz.com&quot;&gt;Quartz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.quora.com&quot;&gt;Quora&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://quotidiani.gelocal.it&quot;&gt;Quotidiani Gelocal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://republic.ru&quot;&gt;Republic.ru&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.reuters.com&quot;&gt;Reuters&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sandiegouniontribune.com&quot;&gt;San Diego Union Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sfchronicle.com&quot;&gt;San Francisco Chronicle&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.scientificamerican.com&quot;&gt;Scientific American&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://seekingalpha.com&quot;&gt;Seeking Alpha&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://slate.com&quot;&gt;Slate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sofrep.com&quot;&gt;SOFREP&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.statista.com&quot;&gt;Statista&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.startribune.com&quot;&gt;Star Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.stuff.co.nz&quot;&gt;Stuff&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sun-sentinel.com&quot;&gt;SunSentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.techinasia.com&quot;&gt;Tech in Asia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraaf.nl&quot;&gt;Telegraaf&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.adelaidenow.com.au&quot;&gt;The Advertiser&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theadvocate.com.au&quot;&gt;The Advocate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theage.com.au&quot;&gt;The Age&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-american-interest.com&quot;&gt;The American Interest&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theatlantic.com&quot;&gt;The Atlantic&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.afr.com&quot;&gt;The Australian Financial Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theaustralian.com.au&quot;&gt;The Australian&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bizjournals.com&quot;&gt;The Business Journals&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.canberratimes.com.au&quot;&gt;The Canberra Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecourier.com.au&quot;&gt;The Courier&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.couriermail.com.au&quot;&gt;The Courier Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecut.com&quot;&gt;The Cut&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailytelegraph.com.au&quot;&gt;The Daily Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thediplomat.com&quot;&gt;The Diplomat&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.economist.com&quot;&gt;The Economist&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theglobeandmail.com&quot;&gt;The Globe and Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theherald.com.au&quot;&gt;The Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thehindu.com&quot;&gt;The Hindu&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.irishtimes.com&quot;&gt;The Irish Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.japantimes.co.jp&quot;&gt;The Japan Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.kansascity.com&quot;&gt;The Kansas City Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mercurynews.com&quot;&gt;The Mercury News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themercury.com.au&quot;&gt;The Mercury Tasmania&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mcall.com&quot;&gt;The Morning Call&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenation.com&quot;&gt;The Nation&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenational.scot&quot;&gt;The National&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newstatesman.com&quot;&gt;The New Statesman&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nytimes.com&quot;&gt;The New York Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newyorker.com&quot;&gt;The New Yorker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.news-gazette.com&quot;&gt;The News-Gazette&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inquirer.com&quot;&gt;The Philadelphia Inquirer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thesaturdaypaper.com.au&quot;&gt;The Saturday Paper&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.seattletimes.com&quot;&gt;The Seattle Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.com.au&quot;&gt;The Spectator Australia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.co.uk&quot;&gt;The Spectator&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.smh.com.au&quot;&gt;The Sydney Morning Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraph.co.uk&quot;&gt;The Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thestar.com&quot;&gt;The Toronto Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wsj.com&quot;&gt;The Wall Street Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.washingtonpost.com&quot;&gt;The Washington Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thewrap.com&quot;&gt;The Wrap&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themarker.com&quot;&gt;TheMarker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-tls.co.uk&quot;&gt;Times Literary Supplement&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.towardsdatascience.com&quot;&gt;Towards Data Science&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.trouw.nl&quot;&gt;Trouw&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tubantia.nl&quot;&gt;Tubantia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vanityfair.com&quot;&gt;Vanity Fair&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vn.nl&quot;&gt;Vrij Nederland&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vulture.com&quot;&gt;Vulture&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://journalnow.com&quot;&gt;Winston-Salem Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wired.com&quot;&gt;Wired&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.worldpoliticsreview.com&quot;&gt;World Politics Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.zeit.de&quot;&gt;Zeit Online&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sites with limited number of free articles&lt;/h3&gt; 
&lt;p&gt;The free article limit can normally be bypassed by removing cookies for the site.*&lt;/p&gt; 
&lt;p&gt;Install the Cookie Remover extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;for Mozilla Firefox&lt;/a&gt;. Please rate it 5 stars if you find it useful.&lt;/p&gt; 
&lt;p&gt;When coming across a paywall click the cookie icon to remove the cookies then refresh the page.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;*May not always succeed&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;New site requests&lt;/h3&gt; 
&lt;p&gt;Only large or major sites will be considered. Usually premium articles cannot be bypassed as they are behind a hard paywall.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the uBlock Origin extension if it hasn&#39;t been installed already. See if you are still getting a paywall.&lt;/li&gt; 
 &lt;li&gt;Check if using Cookie Remover (&lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;Google Chrome version&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;Mozilla Firefox version&lt;/a&gt;) can bypass the paywall. If not, continue to the next step.&lt;/li&gt; 
 &lt;li&gt;First search &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues&quot;&gt;Issues&lt;/a&gt; to see if the site has been requested already.&lt;/li&gt; 
 &lt;li&gt;Visit an article on the site you want to bypass the paywall for and copy the article title.&lt;/li&gt; 
 &lt;li&gt;Open up a new incognito window (Ctrl+Shift+N on Chrome) or Private window (Ctrl+Shift+P on Firefox), and paste the article title into Google.&lt;/li&gt; 
 &lt;li&gt;Click on the same article from the Google search results page.&lt;/li&gt; 
 &lt;li&gt;If it loads without a paywall you can &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;submit a request&lt;/a&gt; and replace the entire template text with the word &quot;Confirmed&quot;. Otherwise please do not submit an issue as this extension cannot bypass it either.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This extension works best alongside uBlock Origin &lt;a href=&quot;https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/&quot;&gt;for Mozilla Firefox&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If a site doesn&#39;t work, try turning off uBlock and refreshing.&lt;/li&gt; 
 &lt;li&gt;Try clearing &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;cookies&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Make sure you&#39;re running the latest version of Bypass Paywalls.&lt;/li&gt; 
 &lt;li&gt;If a site is having problems try unchecking &quot;*General Paywall Bypass*&quot; in Options.&lt;/li&gt; 
 &lt;li&gt;If none of these work, you can submit an issue &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing - Pull Requests&lt;/h3&gt; 
&lt;p&gt;PRs are welcome.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If making a PR to add a new site, confirm your changes actually bypass the paywall.&lt;/li&gt; 
 &lt;li&gt;At a minimum these files need to be updated: &lt;code&gt;README.md&lt;/code&gt;, &lt;code&gt;manifest-ff.json&lt;/code&gt;, &lt;code&gt;src/js/sites.js&lt;/code&gt;, and possibly &lt;code&gt;src/js/background.js&lt;/code&gt;, and/or &lt;code&gt;src/js/contentScript.js&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Follow existing code-style and use camelCase.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://github.com/standard/semistandard&quot;&gt;JavaScript Semi-Standard Style linter&lt;/a&gt;. Don&#39;t need to follow it exactly. There will be some errors (e.g., do not use it on &lt;code&gt;sites.js&lt;/code&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Show your support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow me on Twitter &lt;a href=&quot;https://twitter.com/iamadamdev&quot;&gt;@iamadamdev&lt;/a&gt; for updates.&lt;/li&gt; 
 &lt;li&gt;I do not ask for donations, all I ask is that you star this repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Disclaimer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This software is provided for educational purposes only and is provided &quot;AS IS&quot;, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>denysdovhan/wtfjs</title>
      <link>https://github.com/denysdovhan/wtfjs</link>
      <description>&lt;p&gt;🤪 A list of funny and tricky JavaScript examples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What the f*ck JavaScript?&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.wtfpl.net&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square&quot; alt=&quot;WTFPL 2.0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/wtfjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/wtfjs.svg?style=flat-square&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://patreon.com/denysdovhan&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/support-patreon-F96854.svg?style=flat-square&quot; alt=&quot;Patreon&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://patreon.com/denysdovhan&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/support-buymeacoffee-222222.svg?style=flat-square&quot; alt=&quot;Buy Me A Coffee&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A list of funny and tricky JavaScript examples&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;JavaScript is a great language. It has a simple syntax, large ecosystem and, what is most important, a great community.&lt;/p&gt; 
&lt;p&gt;At the same time, we all know that JavaScript is quite a funny language with tricky parts. Some of them can quickly turn our everyday job into hell, and some of them can make us laugh out loud.&lt;/p&gt; 
&lt;p&gt;The original idea for WTFJS belongs to &lt;a href=&quot;https://twitter.com/brianleroux&quot;&gt;Brian Leroux&lt;/a&gt;. This list is highly inspired by his talk &lt;a href=&quot;https://www.youtube.com/watch?v=et8xNAc2ic8&quot;&gt;&lt;strong&gt;“WTFJS”&lt;/strong&gt; at dotJS 2012&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=et8xNAc2ic8&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/et8xNAc2ic8/0.jpg&quot; alt=&quot;dotJS 2012 - Brian Leroux - WTFJS&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Node Packaged Manuscript&lt;/h1&gt; 
&lt;p&gt;You can install this handbook using &lt;code&gt;npm&lt;/code&gt;. Just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g wtfjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should be able to run &lt;code&gt;wtfjs&lt;/code&gt; at the command line now. This will open the manual in your selected &lt;code&gt;$PAGER&lt;/code&gt;. Otherwise, you may continue reading on here.&lt;/p&gt; 
&lt;p&gt;The source is available here: &lt;a href=&quot;https://github.com/denysdovhan/wtfjs&quot;&gt;https://github.com/denysdovhan/wtfjs&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Translations&lt;/h1&gt; 
&lt;p&gt;Currently, there are these translations of &lt;strong&gt;wtfjs&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-zh-cn.md&quot;&gt;中文版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-hi.md&quot;&gt;हिंदी&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-fr-fr.md&quot;&gt;Français&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pt-br.md&quot;&gt;Português do Brasil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pl-pl.md&quot;&gt;Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-it-it.md&quot;&gt;Italiano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://habr.com/ru/company/mailru/blog/335292/&quot;&gt;Russian&lt;/a&gt; (on Habr.com)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-kr.md&quot;&gt;한국어&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/denysdovhan/wtfjs/raw/master/CONTRIBUTING.md#translations&quot;&gt;&lt;strong&gt;Help translating to your language&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Translations are maintained by their translators. They may not contain every example, and existing examples may be outdated.&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-motivation&quot;&gt;💪🏻 Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-notation&quot;&gt;✍🏻 Notation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-examples&quot;&gt;👀 Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-equal-&quot;&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-not-equal--but-not-equal--too&quot;&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-false&quot;&gt;true is false&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#banana&quot;&gt;baNaNa&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#objectis-and--weird-cases&quot;&gt;&lt;code&gt;Object.is()&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; weird cases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#its-a-fail&quot;&gt;It&#39;s a fail&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true&quot;&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#null-is-falsy-but-not-false&quot;&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#documentall-is-an-object-but-it-is-undefined&quot;&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#minimal-value-is-greater-than-zero&quot;&gt;Minimal value is greater than zero&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#function-is-not-a-function&quot;&gt;function is not a function&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#adding-arrays&quot;&gt;Adding arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#trailing-commas-in-array&quot;&gt;Trailing commas in array&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#array-equality-is-a-monster&quot;&gt;Array equality is a monster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#undefined-and-number&quot;&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#parseint-is-a-bad-guy&quot;&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#math-with-true-and-false&quot;&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#html-comments-are-valid-in-javascript&quot;&gt;HTML comments are valid in JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-number&quot;&gt;&lt;code&gt;NaN&lt;/code&gt; is &lt;del&gt;not&lt;/del&gt; a number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-and-null-are-objects&quot;&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#magically-increasing-numbers&quot;&gt;Magically increasing numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#precision-of-01--02&quot;&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#patching-numbers&quot;&gt;Patching numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparison-of-three-numbers&quot;&gt;Comparison of three numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#funny-math&quot;&gt;Funny math&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#addition-of-regexps&quot;&gt;Addition of RegExps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#strings-arent-instances-of-string&quot;&gt;Strings aren&#39;t instances of &lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#calling-functions-with-backticks&quot;&gt;Calling functions with backticks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#call-call-call&quot;&gt;Call call call&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-constructor-property&quot;&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#object-as-a-key-of-objects-property&quot;&gt;Object as a key of object&#39;s property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-prototypes-with-__proto__&quot;&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-object-&quot;&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#destructuring-with-default-values&quot;&gt;Destructuring with default values&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#dots-and-spreading&quot;&gt;Dots and spreading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#labels&quot;&gt;Labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nested-labels&quot;&gt;Nested labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#insidious-trycatch&quot;&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#is-this-multiple-inheritance&quot;&gt;Is this multiple inheritance?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-generator-which-yields-itself&quot;&gt;A generator which yields itself&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-class-of-class&quot;&gt;A class of class&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-coercible-objects&quot;&gt;Non-coercible objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-arrow-functions&quot;&gt;Tricky arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arrow-functions-can-not-be-a-constructor&quot;&gt;Arrow functions can not be a constructor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-and-arrow-functions&quot;&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-return&quot;&gt;Tricky return&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#chaining-assignments-on-object&quot;&gt;Chaining assignments on object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-object-properties-with-arrays&quot;&gt;Accessing object properties with arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#null-and-relational-operators&quot;&gt;Null and Relational Operators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#numbertofixed-display-different-numbers&quot;&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#mathmax-less-than-mathmin&quot;&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparing-null-to-0&quot;&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#same-variable-redeclaration&quot;&gt;Same variable redeclaration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#default-behavior-arrayprototypesort&quot;&gt;Default behavior Array.prototype.sort()&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#resolve-wont-return-promise-instance&quot;&gt;resolve() won&#39;t return Promise instance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-undefined&quot;&gt;&lt;code&gt;{}{}&lt;/code&gt; is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#min-is-greater-than-max&quot;&gt;&lt;code&gt;min&lt;/code&gt; is greater than &lt;code&gt;max&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-binding&quot;&gt;&lt;code&gt;arguments&lt;/code&gt; binding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#an-alert-from-hell&quot;&gt;An &lt;code&gt;alert&lt;/code&gt; from hell&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#an-infinite-timeout&quot;&gt;An infinite timeout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-settimeout-object&quot;&gt;A &lt;code&gt;setTimeout&lt;/code&gt; object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#double-dot&quot;&gt;Double dot&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#extra-newness&quot;&gt;Extra Newness&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#why-you-should-use-semicolons&quot;&gt;Why you should use semicolons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#split-a-string-by-a-space&quot;&gt;Split a string by a space&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-stringified-string&quot;&gt;A stringified string&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-strict-comparison-of-a-number-to-true&quot;&gt;Non-strict comparison of a number to &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-other-resources&quot;&gt;📚 Other resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-supporting&quot;&gt;🤝 Supporting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-license&quot;&gt;🎓 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h1&gt;💪🏻 Motivation&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Just for fun&lt;/p&gt; 
 &lt;p&gt;— &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Just_for_Fun&quot;&gt;&lt;strong&gt;“Just for Fun: The Story of an Accidental Revolutionary”&lt;/strong&gt;&lt;/a&gt;, Linus Torvalds&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The primary goal of this list is to collect some crazy examples and explain how they work, if possible. Just because it&#39;s fun to learn something that we didn&#39;t know before.&lt;/p&gt; 
&lt;p&gt;If you are a beginner, you can use these notes to get a deeper dive into JavaScript. I hope these notes will motivate you to spend more time reading the specification.&lt;/p&gt; 
&lt;p&gt;If you are a professional developer, you can consider these examples as a great reference for all of the quirks and unexpected edges of our beloved JavaScript.&lt;/p&gt; 
&lt;p&gt;In any case, just read this. You&#39;re probably going to find something new.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Note:&lt;/strong&gt; If you enjoy reading this document, please, &lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-supporting&quot;&gt;consider supporting the author of this collection&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;✍🏻 Notation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// -&amp;gt;&lt;/code&gt;&lt;/strong&gt; is used to show the result of an expression. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;1 + 1; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// &amp;gt;&lt;/code&gt;&lt;/strong&gt; means the result of &lt;code&gt;console.log&lt;/code&gt; or another output. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;hello, world!&quot;); // &amp;gt; hello, world!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;//&lt;/code&gt;&lt;/strong&gt; is just a comment used for explanations. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Assigning a function to foo constant
const foo = function() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;👀 Examples&lt;/h1&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Array is equal not array:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[] == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The abstract equality operator converts both sides to numbers to compare them, and both sides become the number &lt;code&gt;0&lt;/code&gt; for different reasons. Arrays are truthy, so on the right, the opposite of a truthy value is &lt;code&gt;false&lt;/code&gt;, which is then coerced to &lt;code&gt;0&lt;/code&gt;. On the left, however, an empty array is coerced to a number without becoming a boolean first, and empty arrays are coerced to &lt;code&gt;0&lt;/code&gt;, despite being truthy.&lt;/p&gt; 
&lt;p&gt;Here is how this expression simplifies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;+[] == +![];
0 == +false;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true&quot;&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-logical-not-operator&quot;&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/h2&gt; 
&lt;p&gt;Array is not equal &lt;code&gt;true&lt;/code&gt;, but not Array is not equal &lt;code&gt;true&lt;/code&gt; too; Array is equal &lt;code&gt;false&lt;/code&gt;, not Array is equal &lt;code&gt;false&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

// According to the specification

true == []; // -&amp;gt; false

toNumber(true); // -&amp;gt; 1
toNumber([]); // -&amp;gt; 0

1 == 0; // -&amp;gt; false

true == ![]; // -&amp;gt; false

![]; // -&amp;gt; false

true == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true

// According to the specification

false == []; // -&amp;gt; true

toNumber(false); // -&amp;gt; 0
toNumber([]); // -&amp;gt; 0

0 == 0; // -&amp;gt; true

false == ![]; // -&amp;gt; true

![]; // -&amp;gt; false

false == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;true is false&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;!!&quot;false&quot; == !!&quot;true&quot;; // -&amp;gt; true
!!&quot;false&quot; === !!&quot;true&quot;; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Consider this step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// true is &#39;truthy&#39; and represented by value 1 (number), &#39;true&#39; in string form is NaN.
true == &quot;true&quot;; // -&amp;gt; false
false == &quot;false&quot;; // -&amp;gt; false

// &#39;false&#39; is not the empty string, so it&#39;s a truthy value
!!&quot;false&quot;; // -&amp;gt; true
!!&quot;true&quot;; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;baNaNa&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;b&quot; + &quot;a&quot; + +&quot;a&quot; + &quot;a&quot;; // -&amp;gt; &#39;baNaNa&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an old-school joke in JavaScript, but remastered. Here&#39;s the original one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;foo&quot; + +&quot;bar&quot;; // -&amp;gt; &#39;fooNaN&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The expression is evaluated as &lt;code&gt;&#39;foo&#39; + (+&#39;bar&#39;)&lt;/code&gt;, which converts &lt;code&gt;&#39;bar&#39;&lt;/code&gt; to not a number.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus&quot;&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator&quot;&gt;12.5.6 Unary + Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;NaN === NaN; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The specification strictly defines the logic behind this behavior:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is different from &lt;code&gt;Type(y)&lt;/code&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number, then 
   &lt;ol&gt; 
    &lt;li&gt;If &lt;code&gt;x&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;If &lt;code&gt;y&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;… … …&lt;/li&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison&quot;&gt;&lt;strong&gt;7.2.14&lt;/strong&gt; Strict Equality Comparison&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Following the definition of &lt;code&gt;NaN&lt;/code&gt; from the IEEE:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Four mutually exclusive relations are possible: less than, equal, greater than, and unordered. The last case arises when at least one operand is NaN. Every NaN shall compare unordered with everything, including itself.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://stackoverflow.com/questions/1565164/1573715#1573715&quot;&gt;“What is the rationale for all comparisons returning false for IEEE754 NaN values?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;code&gt;Object.is()&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; weird cases&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Object.is()&lt;/code&gt; determines if two values have the same value or not. It works similar to the &lt;code&gt;===&lt;/code&gt; operator but there are a few weird cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.is(NaN, NaN); // -&amp;gt; true
NaN === NaN; // -&amp;gt; false

Object.is(-0, 0); // -&amp;gt; false
-0 === 0; // -&amp;gt; true

Object.is(NaN, 0 / 0); // -&amp;gt; true
NaN === 0 / 0; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;In JavaScript lingo, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; are the same value but they&#39;re not strictly equal. &lt;code&gt;NaN === NaN&lt;/code&gt; being false is apparently due to historical reasons so it would probably be better to accept it as it is.&lt;/p&gt; 
&lt;p&gt;Similarly, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are strictly equal, but they&#39;re not the same value.&lt;/p&gt; 
&lt;p&gt;For more details about &lt;code&gt;NaN === NaN&lt;/code&gt;, see the above case.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.es/ecma262/#sec-object.is&quot;&gt;Here are the TC39 specs about Object.is&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;Equality comparisons and sameness&lt;/a&gt; on MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;It&#39;s a fail&lt;/h2&gt; 
&lt;p&gt;You would not believe, but …&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(![] + [])[+[]] +
  (![] + [])[+!+[]] +
  ([![]] + [][[]])[+!+[] + [+[]]] +
  (![] + [])[!+[] + !+[]];
// -&amp;gt; &#39;fail&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;By breaking that mass of symbols into pieces, we notice that the following pattern occurs often:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;![] + []; // -&amp;gt; &#39;false&#39;
![]; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So we try adding &lt;code&gt;[]&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. But due to a number of internal function calls (&lt;code&gt;binary + Operator&lt;/code&gt; -&amp;gt; &lt;code&gt;ToPrimitive&lt;/code&gt; -&amp;gt; &lt;code&gt;[[DefaultValue]]&lt;/code&gt;) we end up converting the right operand to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;![] + [].toString(); // &#39;false&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thinking of a string as an array we can access its first character via &lt;code&gt;[0]&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;false&quot;[0]; // -&amp;gt; &#39;f&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The rest is obvious, but the &lt;code&gt;i&lt;/code&gt; is tricky. The &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;fail&lt;/code&gt; is grabbed by generating the string &lt;code&gt;&#39;falseundefined&#39;&lt;/code&gt; and grabbing the element on index &lt;code&gt;[&#39;10&#39;]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;More examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;+![]          // -&amp;gt; 0
+!![]         // -&amp;gt; 1
!![]          // -&amp;gt; true
![]           // -&amp;gt; false
[][[]]        // -&amp;gt; undefined
+!![] / +![]  // -&amp;gt; Infinity
[] + {}       // -&amp;gt; &quot;[object Object]&quot;
+{}           // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://patriciopalladino.com/blog/2012/08/09/non-alphanumeric-javascript.html&quot;&gt;Brainfuck beware: JavaScript is after you!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bluewings.github.io/en/writing-a-sentence-without-using-the-alphabet/#weird-javascript-generator&quot;&gt;Writing a sentence without using the Alphabet&lt;/a&gt; — generate any phrase using JavaScript&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;An array is a truthy value, however, it&#39;s not equal to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;!![]       // -&amp;gt; true
[] == true // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Here are links to the corresponding sections in the ECMA-262 specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-logical-not-operator&quot;&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;null&lt;/code&gt; is a falsy value, it&#39;s not equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;!!null; // -&amp;gt; false
null == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, other falsy values, like &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;&#39;&#39;&lt;/code&gt; are equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;0 == false; // -&amp;gt; true
&quot;&quot; == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The explanation is the same as for previous example. Here&#39;s the corresponding link:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ This is part of the Browser API and won&#39;t work in a Node.js environment ⚠️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;document.all&lt;/code&gt; is an array-like object and it gives access to the DOM nodes in the page, it responds to the &lt;code&gt;typeof&lt;/code&gt; function as &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;document.all instanceof Object; // -&amp;gt; true
typeof document.all; // -&amp;gt; &#39;undefined&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, &lt;code&gt;document.all&lt;/code&gt; is not equal to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;document.all === undefined; // -&amp;gt; false
document.all === null; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But at the same time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;document.all == null; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;document.all&lt;/code&gt; used to be a way to access DOM elements, in particular with old versions of IE. While it has never been a standard it was broadly used in the old age JS code. When the standard progressed with new APIs (such as &lt;code&gt;document.getElementById&lt;/code&gt;) this API call became obsolete and the standard committee had to decide what to do with it. Because of its broad use they decided to keep the API but introduce a willful violation of the JavaScript specification. The reason why it responds to &lt;code&gt;false&lt;/code&gt; when using the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison&quot;&gt;Strict Equality Comparison&lt;/a&gt; with &lt;code&gt;undefined&lt;/code&gt; while &lt;code&gt;true&lt;/code&gt; when using the &lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; is due to the willful violation of the specification that explicitly allows that.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://html.spec.whatwg.org/multipage/obsolete.html#dom-document-all&quot;&gt;“Obsolete features - document.all”&lt;/a&gt; at WhatWG - HTML spec — &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/raw/0d79079b61dad953bbfde817a5893a49f7e889fb/types%20%26%20grammar/ch4.md#falsy-objects&quot;&gt;“Chapter 4 - ToBoolean - Falsy values”&lt;/a&gt; at YDKJS - Types &amp;amp; Grammar&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Minimal value is greater than zero&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is the smallest number, which is greater than zero:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number.MIN_VALUE &amp;gt; 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is &lt;code&gt;5e-324&lt;/code&gt;, i.e. the smallest positive number that can be represented within float precision, i.e. that&#39;s as close as you can get to zero. It defines the best resolution that floats can give you.&lt;/p&gt; 
 &lt;p&gt;Now the overall smallest value is &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; although it&#39;s not really numeric in a strict sense.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://stackoverflow.com/questions/26614728/why-is-0-less-than-number-min-value-in-javascript&quot;&gt;“Why is &lt;code&gt;0&lt;/code&gt; less than &lt;code&gt;Number.MIN_VALUE&lt;/code&gt; in JavaScript?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-number.min_value&quot;&gt;&lt;strong&gt;20.1.2.9&lt;/strong&gt; Number.MIN_VALUE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;function is not a function&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ A bug present in V8 v5.5 or lower (Node.js &amp;lt;=7) ⚠️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All of you know about the annoying &lt;em&gt;undefined is not a function&lt;/em&gt;, but what about this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declare a class which extends null
class Foo extends null {}
// -&amp;gt; [Function: Foo]

new Foo() instanceof null;
// &amp;gt; TypeError: function is not a function
// &amp;gt;     at … … …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a part of the specification. It&#39;s just a bug that has now been fixed, so there shouldn&#39;t be a problem with it in the future.&lt;/p&gt; 
&lt;h3&gt;Super constructor null of Foo is not a constructor&lt;/h3&gt; 
&lt;p&gt;It&#39;s continuation of story with previous bug in modern environment (tested with Chrome 71 and Node.js v11.8.0).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Foo extends null {}
new Foo() instanceof null;
// &amp;gt; TypeError: Super constructor null of Foo is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a bug because:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Object.getPrototypeOf(Foo.prototype); // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the class has no constructor the call from prototype chain. But in the parent has no constructor. Just in case, I’ll clarify that &lt;code&gt;null&lt;/code&gt; is an object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof null === &quot;object&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Therefore, you can inherit from it (although in the world of the OOP for such terms would have beaten me). So you can&#39;t call the null constructor. If you change this code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Foo extends null {
  constructor() {
    console.log(&quot;something&quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You see the error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ReferenceError: Must call super constructor in derived class before accessing &#39;this&#39; or returning from derived constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And if you add &lt;code&gt;super&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Foo extends null {
  constructor() {
    console.log(111);
    super();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JS throws an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TypeError: Super constructor null of Foo is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/denysdovhan/wtfjs/pull/102#discussion_r259143582&quot;&gt;An explanation of this issue&lt;/a&gt; by &lt;a href=&quot;https://github.com/geekjob&quot;&gt;@geekjob&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adding arrays&lt;/h2&gt; 
&lt;p&gt;What if you try to add two arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3] + [4, 5, 6]; // -&amp;gt; &#39;1,2,34,5,6&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The concatenation happens. Step-by-step, it looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3] +
  [4, 5, 6][
    // call toString()
    (1, 2, 3)
  ].toString() +
  [4, 5, 6].toString();
// concatenation
&quot;1,2,3&quot; + &quot;4,5,6&quot;;
// -&amp;gt;
(&quot;1,2,34,5,6&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trailing commas in array&lt;/h2&gt; 
&lt;p&gt;You&#39;ve created an array with 4 empty elements. Despite all, you&#39;ll get an array with three elements, because of trailing commas:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let a = [, , ,];
a.length; // -&amp;gt; 3
a.toString(); // -&amp;gt; &#39;,,&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Trailing commas&lt;/strong&gt; (sometimes called &quot;final commas&quot;) can be useful when adding new elements, parameters, or properties to JavaScript code. If you want to add a new property, you can simply add a new line without modifying the previously last line if that line already uses a trailing comma. This makes version-control diffs cleaner and editing code might be less troublesome.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas&quot;&gt;Trailing commas&lt;/a&gt; at MDN&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Array equality is a monster&lt;/h2&gt; 
&lt;p&gt;Array equality is a monster in JS, as you can see below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[] == &#39;&#39;   // -&amp;gt; true
[] == 0    // -&amp;gt; true
[&#39;&#39;] == &#39;&#39; // -&amp;gt; true
[0] == 0   // -&amp;gt; true
[0] == &#39;&#39;  // -&amp;gt; false
[&#39;&#39;] == 0  // -&amp;gt; true

[null] == &#39;&#39;      // true
[null] == 0       // true
[undefined] == &#39;&#39; // true
[undefined] == 0  // true

[[]] == 0  // true
[[]] == &#39;&#39; // true

[[[[[[]]]]]] == &#39;&#39; // true
[[[[[[]]]]]] == 0  // true

[[[[[[ null ]]]]]] == 0  // true
[[[[[[ null ]]]]]] == &#39;&#39; // true

[[[[[[ undefined ]]]]]] == 0  // true
[[[[[[ undefined ]]]]]] == &#39;&#39; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;You should watch very carefully for the above examples! The behaviour is described in section &lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt; of the specification.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;If we don&#39;t pass any arguments into the &lt;code&gt;Number&lt;/code&gt; constructor, we&#39;ll get &lt;code&gt;0&lt;/code&gt;. The value &lt;code&gt;undefined&lt;/code&gt; is assigned to formal arguments when there are no actual arguments, so you might expect that &lt;code&gt;Number&lt;/code&gt; without arguments takes &lt;code&gt;undefined&lt;/code&gt; as a value of its parameter. However, when we pass &lt;code&gt;undefined&lt;/code&gt;, we will get &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number(); // -&amp;gt; 0
Number(undefined); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If no arguments were passed to this function&#39;s invocation, let &lt;code&gt;n&lt;/code&gt; be &lt;code&gt;+0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Else, let &lt;code&gt;n&lt;/code&gt; be ? &lt;code&gt;ToNumber(value)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In case of &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;ToNumber(undefined)&lt;/code&gt; should return &lt;code&gt;NaN&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Here&#39;s the corresponding section:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-number-constructor&quot;&gt;&lt;strong&gt;20.1.1&lt;/strong&gt; The Number Constructor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-tonumber&quot;&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; is famous by its quirks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt(&quot;f*ck&quot;); // -&amp;gt; NaN
parseInt(&quot;f*ck&quot;, 16); // -&amp;gt; 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; This happens because &lt;code&gt;parseInt&lt;/code&gt; will continue parsing character-by-character until it hits a character it doesn&#39;t know. The &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;&#39;f*ck&#39;&lt;/code&gt; is the hexadecimal digit &lt;code&gt;15&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Parsing &lt;code&gt;Infinity&lt;/code&gt; to integer is something…&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
parseInt(&quot;Infinity&quot;, 10); // -&amp;gt; NaN
// ...
parseInt(&quot;Infinity&quot;, 18); // -&amp;gt; NaN...
parseInt(&quot;Infinity&quot;, 19); // -&amp;gt; 18
// ...
parseInt(&quot;Infinity&quot;, 23); // -&amp;gt; 18...
parseInt(&quot;Infinity&quot;, 24); // -&amp;gt; 151176378
// ...
parseInt(&quot;Infinity&quot;, 29); // -&amp;gt; 385849803
parseInt(&quot;Infinity&quot;, 30); // -&amp;gt; 13693557269
// ...
parseInt(&quot;Infinity&quot;, 34); // -&amp;gt; 28872273981
parseInt(&quot;Infinity&quot;, 35); // -&amp;gt; 1201203301724
parseInt(&quot;Infinity&quot;, 36); // -&amp;gt; 1461559270678...
parseInt(&quot;Infinity&quot;, 37); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful with parsing &lt;code&gt;null&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt(null, 24); // -&amp;gt; 23
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It&#39;s converting &lt;code&gt;null&lt;/code&gt; to the string &lt;code&gt;&quot;null&quot;&lt;/code&gt; and trying to convert it. For radixes 0 through 23, there are no numerals it can convert, so it returns NaN. At 24, &lt;code&gt;&quot;n&quot;&lt;/code&gt;, the 14th letter, is added to the numeral system. At 31, &lt;code&gt;&quot;u&quot;&lt;/code&gt;, the 21st letter, is added and the entire string can be decoded. At 37 on there is no longer any valid numeral set that can be generated and &lt;code&gt;NaN&lt;/code&gt; is returned.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://stackoverflow.com/questions/6459758/parseintnull-24-23-wait-what&quot;&gt;“parseInt(null, 24) === 23… wait, what?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Don&#39;t forget about octals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt(&quot;06&quot;); // 6
parseInt(&quot;08&quot;); // 8 if support ECMAScript 5
parseInt(&quot;08&quot;); // 0 if not support ECMAScript 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; If the input string begins with &quot;0&quot;, radix is eight (octal) or 10 (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet. For this reason always specify a radix when using &lt;code&gt;parseInt&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; always convert input to string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 2
Number({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful while parsing floating point values&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt(0.000001); // -&amp;gt; 0
parseInt(0.0000001); // -&amp;gt; 1
parseInt(1 / 1999999); // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; &lt;code&gt;ParseInt&lt;/code&gt; takes a string argument and returns an integer of the specified radix. &lt;code&gt;ParseInt&lt;/code&gt; also strips anything after and including the first non-digit in the string parameter. &lt;code&gt;0.000001&lt;/code&gt; is converted to a string &lt;code&gt;&quot;0.000001&quot;&lt;/code&gt; and the &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;. When &lt;code&gt;0.0000001&lt;/code&gt; is converted to a string it is treated as &lt;code&gt;&quot;1e-7&quot;&lt;/code&gt; and hence &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. &lt;code&gt;1/1999999&lt;/code&gt; is interpreted as &lt;code&gt;5.00000250000125e-7&lt;/code&gt; and &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;5&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Let&#39;s do some math:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true + true; // -&amp;gt; 2
(true + true) * (true + true) - true; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hmmm… 🤔&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;We can coerce values to numbers with the &lt;code&gt;Number&lt;/code&gt; constructor. It&#39;s quite obvious that &lt;code&gt;true&lt;/code&gt; will be coerced to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number(true); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The unary plus operator attempts to convert its value into a number. It can convert string representations of integers and floats, as well as the non-string values &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt;. If it cannot parse a particular value, it will evaluate to &lt;code&gt;NaN&lt;/code&gt;. That means we can coerce &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;+true; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you&#39;re performing addition or multiplication, the &lt;code&gt;ToNumber&lt;/code&gt; method is invoked. According to the specification, this method returns:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;true&lt;/strong&gt;, return &lt;strong&gt;1&lt;/strong&gt;. If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;false&lt;/strong&gt;, return &lt;strong&gt;+0&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;That&#39;s why we can add boolean values as regular numbers and get correct results.&lt;/p&gt; 
&lt;p&gt;Corresponding sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator&quot;&gt;&lt;strong&gt;12.5.6&lt;/strong&gt; Unary &lt;code&gt;+&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus&quot;&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-tonumber&quot;&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HTML comments are valid in JavaScript&lt;/h2&gt; 
&lt;p&gt;You will be impressed, but &lt;code&gt;&amp;lt;!--&lt;/code&gt; (which is known as HTML comment) is a valid comment in JavaScript.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// valid comment
&amp;lt;!-- valid comment too
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Impressed? HTML-like comments were intended to allow browsers that didn&#39;t understand the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to degrade gracefully. These browsers, e.g. Netscape 1.x are no longer popular. So there is really no point in putting HTML comments in your script tags anymore.&lt;/p&gt; 
&lt;p&gt;Since Node.js is based on the V8 engine, HTML-like comments are supported by the Node.js runtime too. Moreover, they&#39;re a part of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-html-like-comments&quot;&gt;&lt;strong&gt;B.1.3&lt;/strong&gt; HTML-like Comments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is &lt;del&gt;not&lt;/del&gt; a number&lt;/h2&gt; 
&lt;p&gt;Type of &lt;code&gt;NaN&lt;/code&gt; is a &lt;code&gt;&#39;number&#39;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof NaN; // -&amp;gt; &#39;number&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Explanations of how &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt; operators work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-typeof-operator&quot;&gt;&lt;strong&gt;12.5.5&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-instanceofoperator&quot;&gt;&lt;strong&gt;12.10.4&lt;/strong&gt; Runtime Semantics: InstanceofOperator(&lt;code&gt;O&lt;/code&gt;,&lt;code&gt;C&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof []; // -&amp;gt; &#39;object&#39;
typeof null; // -&amp;gt; &#39;object&#39;

// however
null instanceof Object; // false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The behavior of &lt;code&gt;typeof&lt;/code&gt; operator is defined in this section of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-typeof-operator&quot;&gt;&lt;strong&gt;12.5.5&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;According to the specification, the &lt;code&gt;typeof&lt;/code&gt; operator returns a string according to &lt;a href=&quot;https://www.ecma-international.org/ecma-262/#table-35&quot;&gt;Table 35: &lt;code&gt;typeof&lt;/code&gt; Operator Results&lt;/a&gt;. For &lt;code&gt;null&lt;/code&gt;, ordinary, standard exotic and non-standard exotic objects, which do not implement &lt;code&gt;[[Call]]&lt;/code&gt;, it returns the string &lt;code&gt;&quot;object&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;However, you can check the type of an object by using the &lt;code&gt;toString&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Object.prototype.toString.call([]);
// -&amp;gt; &#39;[object Array]&#39;

Object.prototype.toString.call(new Date());
// -&amp;gt; &#39;[object Date]&#39;

Object.prototype.toString.call(null);
// -&amp;gt; &#39;[object Null]&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Magically increasing numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;999999999999999; // -&amp;gt; 999999999999999
9999999999999999; // -&amp;gt; 10000000000000000

10000000000000000; // -&amp;gt; 10000000000000000
10000000000000000 + 1; // -&amp;gt; 10000000000000000
10000000000000000 + 1.1; // -&amp;gt; 10000000000000002
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is caused by IEEE 754-2008 standard for Binary Floating-Point Arithmetic. At this scale, it rounds to the nearest even number. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-ecmascript-language-types-number-type&quot;&gt;&lt;strong&gt;6.1.6&lt;/strong&gt; The Number Type&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754&lt;/a&gt; on Wikipedia&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;A well-known joke. An addition of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; is deadly precise:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;0.1 + 0.2; // -&amp;gt; 0.30000000000000004
0.1 + 0.2 === 0.3; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The answer for the &lt;a href=&quot;https://stackoverflow.com/questions/588004/is-floating-point-math-broken&quot;&gt;”Is floating point math broken?”&lt;/a&gt; question on StackOverflow:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The constants &lt;code&gt;0.2&lt;/code&gt; and &lt;code&gt;0.3&lt;/code&gt; in your program will also be approximations to their true values. It happens that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.2&lt;/code&gt; is larger than the rational number &lt;code&gt;0.2&lt;/code&gt; but that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.3&lt;/code&gt; is smaller than the rational number &lt;code&gt;0.3&lt;/code&gt;. The sum of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; winds up being larger than the rational number &lt;code&gt;0.3&lt;/code&gt; and hence disagreeing with the constant in your code.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This problem is so known that there is even a website called &lt;a href=&quot;http://0.30000000000000004.com/&quot;&gt;0.30000000000000004.com&lt;/a&gt;. It occurs in every language that uses floating-point math, not just JavaScript.&lt;/p&gt; 
&lt;h2&gt;Patching numbers&lt;/h2&gt; 
&lt;p&gt;You can add your own methods to wrapper objects like &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number.prototype.isOne = function() {
  return Number(this) === 1;
};

(1.0).isOne(); // -&amp;gt; true
(1).isOne(); // -&amp;gt; true
(2.0).isOne(); // -&amp;gt; false
(7).isOne(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Obviously, you can extend the &lt;code&gt;Number&lt;/code&gt; object like any other object in JavaScript. However, it&#39;s not recommended if the behavior of the defined method is not a part of the specification. Here is the list of &lt;code&gt;Number&lt;/code&gt;&#39;s properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-number-objects&quot;&gt;&lt;strong&gt;20.1&lt;/strong&gt; Number Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparison of three numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;1 &amp;lt; 2 &amp;lt; 3; // -&amp;gt; true
3 &amp;gt; 2 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work that way? Well, the problem is in the first part of an expression. Here&#39;s how it works:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;1 &amp;lt; 2 &amp;lt; 3; // 1 &amp;lt; 2 -&amp;gt; true
true &amp;lt; 3; // true -&amp;gt; 1
1 &amp;lt; 3; // -&amp;gt; true

3 &amp;gt; 2 &amp;gt; 1; // 3 &amp;gt; 2 -&amp;gt; true
true &amp;gt; 1; // true -&amp;gt; 1
1 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can fix this with &lt;em&gt;Greater than or equal operator (&lt;code&gt;&amp;gt;=&lt;/code&gt;)&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;3 &amp;gt; 2 &amp;gt;= 1; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about Relational operators in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-relational-operators&quot;&gt;&lt;strong&gt;12.10&lt;/strong&gt; Relational Operators&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Funny math&lt;/h2&gt; 
&lt;p&gt;Often the results of arithmetic operations in JavaScript might be quite unexpected. Consider these examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; 3  - 1  // -&amp;gt; 2
 3  + 1  // -&amp;gt; 4
&#39;3&#39; - 1  // -&amp;gt; 2
&#39;3&#39; + 1  // -&amp;gt; &#39;31&#39;

&#39;&#39; + &#39;&#39; // -&amp;gt; &#39;&#39;
[] + [] // -&amp;gt; &#39;&#39;
{} + [] // -&amp;gt; 0
[] + {} // -&amp;gt; &#39;[object Object]&#39;
{} + {} // -&amp;gt; &#39;[object Object][object Object]&#39;

&#39;222&#39; - -&#39;111&#39; // -&amp;gt; 333

[4] * [4]       // -&amp;gt; 16
[] * []         // -&amp;gt; 0
[4, 4] * [4, 4] // NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;What&#39;s happening in the first four examples? Here&#39;s a small table to understand addition in JavaScript:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Number  + Number  -&amp;gt; addition
Boolean + Number  -&amp;gt; addition
Boolean + Boolean -&amp;gt; addition
Number  + String  -&amp;gt; concatenation
String  + Boolean -&amp;gt; concatenation
String  + String  -&amp;gt; concatenation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about other examples? A &lt;code&gt;ToPrimitive&lt;/code&gt; and &lt;code&gt;ToString&lt;/code&gt; methods are being implicitly called for &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; before addition. Read more about evaluation process in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus&quot;&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-toprimitive&quot;&gt;&lt;strong&gt;7.1.1&lt;/strong&gt; ToPrimitive(&lt;code&gt;input&lt;/code&gt; [,&lt;code&gt;PreferredType&lt;/code&gt;])&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-tostring&quot;&gt;&lt;strong&gt;7.1.12&lt;/strong&gt; ToString(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Notably, &lt;code&gt;{} + []&lt;/code&gt; here is the exception. The reason why it differs from &lt;code&gt;[] + {}&lt;/code&gt; is that, without parenthesis, it is interpreted as a code block and then a unary +, converting &lt;code&gt;[]&lt;/code&gt; into a number. It sees the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  // a code block here
}
+[]; // -&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get the same output as &lt;code&gt;[] + {}&lt;/code&gt; we can wrap it in parenthesis.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;({} + []); // -&amp;gt; [object Object]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Addition of RegExps&lt;/h2&gt; 
&lt;p&gt;Did you know you can add numbers like this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Patch a toString method
RegExp.prototype.toString =
  function() {
    return this.source;
  } /
  7 /
  -/5/; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-get-regexp.prototype.source&quot;&gt;&lt;strong&gt;21.2.5.10&lt;/strong&gt; get RegExp.prototype.source&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Strings aren&#39;t instances of &lt;code&gt;String&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;str&quot;; // -&amp;gt; &#39;str&#39;
typeof &quot;str&quot;; // -&amp;gt; &#39;string&#39;
&quot;str&quot; instanceof String; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; constructor returns a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof String(&quot;str&quot;); // -&amp;gt; &#39;string&#39;
String(&quot;str&quot;); // -&amp;gt; &#39;str&#39;
String(&quot;str&quot;) == &quot;str&quot;; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let&#39;s try with a &lt;code&gt;new&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new String(&quot;str&quot;) == &quot;str&quot;; // -&amp;gt; true
typeof new String(&quot;str&quot;); // -&amp;gt; &#39;object&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Object? What&#39;s that?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new String(&quot;str&quot;); // -&amp;gt; [String: &#39;str&#39;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More information about the String constructor in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-string-constructor&quot;&gt;&lt;strong&gt;21.1.1&lt;/strong&gt; The String Constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Calling functions with backticks&lt;/h2&gt; 
&lt;p&gt;Let&#39;s declare a function which logs all params into the console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function f(...args) {
  return args;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No doubt, you know you can call this function like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;f(1, 2, 3); // -&amp;gt; [ 1, 2, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But did you know you can call any function with backticks?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;f`true is ${true}, false is ${false}, array is ${[1, 2, 3]}`;
// -&amp;gt; [ [ &#39;true is &#39;, &#39;, false is &#39;, &#39;, array is &#39;, &#39;&#39; ],
// -&amp;gt;   true,
// -&amp;gt;   false,
// -&amp;gt;   [ 1, 2, 3 ] ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Well, this is not magic at all if you&#39;re familiar with &lt;em&gt;Tagged template literals&lt;/em&gt;. In the example above, &lt;code&gt;f&lt;/code&gt; function is a tag for template literal. Tags before template literal allow you to parse template literals with a function. The first argument of a tag function contains an array of string values. The remaining arguments are related to the expressions. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function template(strings, ...keys) {
  // do something with strings and keys…
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href=&quot;http://mxstbr.blog/2016/11/styled-components-magic-explained/&quot;&gt;magic behind&lt;/a&gt; famous library called &lt;a href=&quot;https://www.styled-components.com/&quot;&gt;💅 styled-components&lt;/a&gt;, which is popular in the React community.&lt;/p&gt; 
&lt;p&gt;Link to the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-tagged-templates&quot;&gt;&lt;strong&gt;12.3.7&lt;/strong&gt; Tagged Templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Call call call&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Found by &lt;a href=&quot;http://twitter.com/cramforce&quot;&gt;@cramforce&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log.call.call.call.call.call.apply(a =&amp;gt; a, [1, 2]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Attention, it could break your mind! Try to reproduce this code in your head: we&#39;re applying the &lt;code&gt;call&lt;/code&gt; method using the &lt;code&gt;apply&lt;/code&gt; method. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-function.prototype.call&quot;&gt;&lt;strong&gt;19.2.3.3&lt;/strong&gt; Function.prototype.call(&lt;code&gt;thisArg&lt;/code&gt;, ...&lt;code&gt;args&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-function.prototype.apply&quot;&gt;**19.2.3.1 ** Function.prototype.apply(&lt;code&gt;thisArg&lt;/code&gt;, &lt;code&gt;argArray&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const c = &quot;constructor&quot;;
c[c][c](&#39;console.log(&quot;WTF?&quot;)&#39;)(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Let&#39;s consider this example step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declare a new constant which is a string &#39;constructor&#39;
const c = &quot;constructor&quot;;

// c is a string
c; // -&amp;gt; &#39;constructor&#39;

// Getting a constructor of string
c[c]; // -&amp;gt; [Function: String]

// Getting a constructor of constructor
c[c][c]; // -&amp;gt; [Function: Function]

// Call the Function constructor and pass
// the body of new function as an argument
c[c][c](&#39;console.log(&quot;WTF?&quot;)&#39;); // -&amp;gt; [Function: anonymous]

// And then call this anonymous function
// The result is console-logging a string &#39;WTF?&#39;
c[c][c](&#39;console.log(&quot;WTF?&quot;)&#39;)(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An &lt;code&gt;Object.prototype.constructor&lt;/code&gt; returns a reference to the &lt;code&gt;Object&lt;/code&gt; constructor function that created the instance object. In case with strings it is &lt;code&gt;String&lt;/code&gt;, in case with numbers it is &lt;code&gt;Number&lt;/code&gt; and so on.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor&quot;&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-object.prototype.constructor&quot;&gt;&lt;strong&gt;19.1.3.1&lt;/strong&gt; Object.prototype.constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Object as a key of object&#39;s property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ [{}]: {} } // -&amp;gt; { &#39;[object Object]&#39;: {} }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work so? Here we&#39;re using a &lt;em&gt;Computed property name&lt;/em&gt;. When you pass an object between those brackets, it coerces object to a string, so we get the property key &lt;code&gt;&#39;[object Object]&#39;&lt;/code&gt; and the value &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We can make &quot;brackets hell&quot; like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;({ [{}]: { [{}]: {} } }[{}][{}]); // -&amp;gt; {}

// structure:
// {
//   &#39;[object Object]&#39;: {
//     &#39;[object Object]&#39;: {}
//   }
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about object literals here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer&quot;&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer&quot;&gt;&lt;strong&gt;12.2.6&lt;/strong&gt; Object Initializer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As we know, primitives don&#39;t have prototypes. However, if we try to get a value of &lt;code&gt;__proto__&lt;/code&gt; for primitives, we would get this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This happens because when something doesn&#39;t have a prototype, it will be wrapped into a wrapper object using the &lt;code&gt;ToObject&lt;/code&gt; method. So, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(1).__proto__; // -&amp;gt; [Number: 0]
(1).__proto__.__proto__; // -&amp;gt; {}
(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is more information about &lt;code&gt;__proto__&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-object.prototype.__proto__&quot;&gt;&lt;strong&gt;B.2.2.1&lt;/strong&gt; Object.prototype.&lt;strong&gt;proto&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-toobject&quot;&gt;&lt;strong&gt;7.1.13&lt;/strong&gt; ToObject(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What is the result of the expression below?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;`${{ Object }}`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// -&amp;gt; &#39;[object Object]&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;We defined an object with a property &lt;code&gt;Object&lt;/code&gt; using &lt;em&gt;Shorthand property notation&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  Object: Object;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then we&#39;ve passed this object to the template literal, so the &lt;code&gt;toString&lt;/code&gt; method calls for that object. That&#39;s why we get the string &lt;code&gt;&#39;[object Object]&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-template-literals&quot;&gt;&lt;strong&gt;12.2.9&lt;/strong&gt; Template Literals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer&quot;&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Destructuring with default values&lt;/h2&gt; 
&lt;p&gt;Consider this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let x,
  { x: y = 1 } = { x };
y;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The example above is a great task for an interview. What the value of &lt;code&gt;y&lt;/code&gt;? The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let x,
  { x: y = 1 } = { x };
y;
//  ↑       ↑           ↑    ↑
//  1       3           2    4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the example above:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We declare &lt;code&gt;x&lt;/code&gt; with no value, so it&#39;s &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we pack the value of &lt;code&gt;x&lt;/code&gt; into the object property &lt;code&gt;x&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we extract the value of &lt;code&gt;x&lt;/code&gt; using destructuring and want to assign it to &lt;code&gt;y&lt;/code&gt;. If the value is not defined, then we&#39;re going to use &lt;code&gt;1&lt;/code&gt; as the default value.&lt;/li&gt; 
 &lt;li&gt;Return the value of &lt;code&gt;y&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer&quot;&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dots and spreading&lt;/h2&gt; 
&lt;p&gt;Interesting examples could be composed with spreading of arrays. Consider this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[...[...&quot;...&quot;]].length; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why &lt;code&gt;3&lt;/code&gt;? When we use the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-array-initializer&quot;&gt;spread operator&lt;/a&gt;, the &lt;code&gt;@@iterator&lt;/code&gt; method is called, and the returned iterator is used to obtain the values to be iterated. The default iterator for string spreads a string into characters. After spreading, we pack these characters into an array. Then we spread this array again and pack it back to an array.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;&#39;...&#39;&lt;/code&gt; string consists with three &lt;code&gt;.&lt;/code&gt; characters, so the length of resulting array is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Now, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[...&#39;...&#39;]             // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...&#39;...&#39;]]        // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...&#39;...&#39;]].length // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Obviously, we can spread and wrap the elements of an array as many times as we want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[...&#39;...&#39;]                 // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...&#39;...&#39;]]            // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...[...&#39;...&#39;]]]       // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...[...[...&#39;...&#39;]]]]  // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
// and so on …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Labels&lt;/h2&gt; 
&lt;p&gt;Not many programmers know about labels in JavaScript. They are kind of interesting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;foo: {
  console.log(&quot;first&quot;);
  break foo;
  console.log(&quot;second&quot;);
}

// &amp;gt; first
// -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The labeled statement is used with &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements. You can use a label to identify a loop, and then use the &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements to indicate whether a program should interrupt the loop or continue its execution.&lt;/p&gt; 
&lt;p&gt;In the example above, we identify a label &lt;code&gt;foo&lt;/code&gt;. After that &lt;code&gt;console.log(&#39;first&#39;);&lt;/code&gt; executes and then we interrupt the execution.&lt;/p&gt; 
&lt;p&gt;Read more about labels in JavaScript:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-labelled-statements&quot;&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label&quot;&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Nested labels&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;a: b: c: d: e: f: g: 1, 2, 3, 4, 5; // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Similar to previous examples, follow these links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-comma-operator&quot;&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-labelled-statements&quot;&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label&quot;&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What will this expression return? &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(() =&amp;gt; {
  try {
    return 2;
  } finally {
    return 3;
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is &lt;code&gt;3&lt;/code&gt;. Surprised?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-try-statement&quot;&gt;&lt;strong&gt;13.15&lt;/strong&gt; The &lt;code&gt;try&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Is this multiple inheritance?&lt;/h2&gt; 
&lt;p&gt;Take a look at the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new class F extends (String, Array) {}(); // -&amp;gt; F []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Is this a multiple inheritance? Nope.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The interesting part is the value of the &lt;code&gt;extends&lt;/code&gt; clause (&lt;code&gt;(String, Array)&lt;/code&gt;). The grouping operator always returns its last argument, so &lt;code&gt;(String, Array)&lt;/code&gt; is actually just &lt;code&gt;Array&lt;/code&gt;. That means we&#39;ve just created a class which extends &lt;code&gt;Array&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-class-definitions&quot;&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-comma-operator&quot;&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A generator which yields itself&lt;/h2&gt; 
&lt;p&gt;Consider this example of a generator which yields itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function* f() {
  yield f;
})().next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see, the returned value is an object with its &lt;code&gt;value&lt;/code&gt; equal to &lt;code&gt;f&lt;/code&gt;. In that case, we can do something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function* f() {
  yield f;
})()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()
  .value()
  .next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }

// and so on
// …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;To understand why this works that way, read these sections of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-control-abstraction-objects&quot;&gt;&lt;strong&gt;25&lt;/strong&gt; Control Abstraction Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-generator-objects&quot;&gt;&lt;strong&gt;25.3&lt;/strong&gt; Generator Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A class of class&lt;/h2&gt; 
&lt;p&gt;Consider this obfuscated syntax playing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof new class {
  class() {}
}(); // -&amp;gt; &#39;object&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It seems like we&#39;re declaring a class inside of class. Should be an error, however, we get the string &lt;code&gt;&#39;object&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Since ECMAScript 5 era, &lt;em&gt;keywords&lt;/em&gt; are allowed as &lt;em&gt;property names&lt;/em&gt;. So think about it as this simple object example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const foo = {
  class: function() {}
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And ES6 standardized shorthand method definitions. Also, classes can be anonymous. So if we drop &lt;code&gt;: function&lt;/code&gt; part, we&#39;re going to get:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class {
  class() {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of a default class is always a simple object. And its typeof should return &lt;code&gt;&#39;object&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Read more here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-method-definitions&quot;&gt;&lt;strong&gt;14.3&lt;/strong&gt; Method Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-class-definitions&quot;&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-coercible objects&lt;/h2&gt; 
&lt;p&gt;With well-known symbols, there&#39;s a way to get rid of type coercion. Take a look:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function nonCoercible(val) {
  if (val == null) {
    throw TypeError(&quot;nonCoercible should not be called with null or undefined&quot;);
  }

  const res = Object(val);

  res[Symbol.toPrimitive] = () =&amp;gt; {
    throw TypeError(&quot;Trying to coerce non-coercible object&quot;);
  };

  return res;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now we can use this like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// objects
const foo = nonCoercible({ foo: &quot;foo&quot; });

foo * 10; // -&amp;gt; TypeError: Trying to coerce non-coercible object
foo + &quot;evil&quot;; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// strings
const bar = nonCoercible(&quot;bar&quot;);

bar + &quot;1&quot;; // -&amp;gt; TypeError: Trying to coerce non-coercible object
bar.toString() + 1; // -&amp;gt; bar1
bar === &quot;bar&quot;; // -&amp;gt; false
bar.toString() === &quot;bar&quot;; // -&amp;gt; true
bar == &quot;bar&quot;; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// numbers
const baz = nonCoercible(1);

baz == 1; // -&amp;gt; TypeError: Trying to coerce non-coercible object
baz === 1; // -&amp;gt; false
baz.valueOf() === 1; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/chicoxyzzy/5dd24608e886adf5444499896dff1197&quot;&gt;A gist by Sergey Rubanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-well-known-symbols&quot;&gt;&lt;strong&gt;6.1.5.1&lt;/strong&gt; Well-Known Symbols&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; 10;
f(); // -&amp;gt; 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Okay, fine, but what about this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; {};
f(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;You might expect &lt;code&gt;{}&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt;. This is because the curly braces are part of the syntax of the arrow functions, so &lt;code&gt;f&lt;/code&gt; will return undefined. It is however possible to return the &lt;code&gt;{}&lt;/code&gt; object directly from an arrow function, by enclosing the return value with brackets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; ({});
f(); // -&amp;gt; {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Arrow functions can not be a constructor&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = function() {
  this.a = 1;
};
new f(); // -&amp;gt; f { &#39;a&#39;: 1 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; {
  this.a = 1;
};
new f(); // -&amp;gt; TypeError: f is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions cannot be used as constructors and will throw an error when used with new. Because has a lexical &lt;code&gt;this&lt;/code&gt;, and do not have a &lt;code&gt;prototype&lt;/code&gt; property, so it would not make much sense.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = function() {
  return arguments;
};
f(&quot;a&quot;); // -&amp;gt; { &#39;0&#39;: &#39;a&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; arguments;
f(&quot;a&quot;); // -&amp;gt; Uncaught ReferenceError: arguments is not defined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions are a lightweight version of regular functions with a focus on being short and lexical &lt;code&gt;this&lt;/code&gt;. At the same time arrow functions do not provide a binding for the &lt;code&gt;arguments&lt;/code&gt; object. As a valid alternative use the &lt;code&gt;rest parameters&lt;/code&gt; to achieve the same result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = (...args) =&amp;gt; args;
f(&quot;a&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;Arrow functions&lt;/a&gt; at MDN.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky return&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; statement is also tricky. Consider this:&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function() {
  return
  {
    b: 10;
  }
})(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; and the returned expression must be in the same line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function() {
  return {
    b: 10
  };
})(); // -&amp;gt; { b: 10 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because of a concept called Automatic Semicolon Insertion, which automagically inserts semicolons after most newlines. In the first example, there is a semicolon inserted between the &lt;code&gt;return&lt;/code&gt; statement and the object literal, so the function returns &lt;code&gt;undefined&lt;/code&gt; and the object literal is never evaluated.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-rules-of-automatic-semicolon-insertion&quot;&gt;&lt;strong&gt;11.9.1&lt;/strong&gt; Rules of Automatic Semicolon Insertion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-return-statement&quot;&gt;&lt;strong&gt;13.10&lt;/strong&gt; The &lt;code&gt;return&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chaining assignments on object&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var foo = { n: 1 };
var bar = foo;

foo.x = foo = { n: 2 };

foo.x; // -&amp;gt; undefined
foo; // -&amp;gt; {n: 2}
bar; // -&amp;gt; {n: 1, x: {n: 2}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From right to left, &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo, and the result of this assignment &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo.x, that&#39;s why bar is &lt;code&gt;{n: 1, x: {n: 2}}&lt;/code&gt; as bar is a reference to foo. But why foo.x is undefined while bar.x is not ?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Foo and bar references the same object &lt;code&gt;{n: 1}&lt;/code&gt;, and lvalues are resolved before assignations. &lt;code&gt;foo = {n: 2}&lt;/code&gt; is creating a new object, and so foo is updated to reference that new object. The trick here is foo in &lt;code&gt;foo.x = ...&lt;/code&gt; as a lvalue was resolved beforehand and still reference the old &lt;code&gt;foo = {n: 1}&lt;/code&gt; object and update it by adding the x value. After that chain assignments, bar still reference the old foo object, but foo reference the new &lt;code&gt;{n: 2}&lt;/code&gt; object, where x is not existing.&lt;/p&gt; 
&lt;p&gt;It&#39;s equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var foo = { n: 1 };
var bar = foo;

foo = { n: 2 }; // -&amp;gt; {n: 2}
bar.x = foo; // -&amp;gt; {n: 1, x: {n: 2}}
// bar.x point to the address of the new foo object
// it&#39;s not equivalent to: bar.x = {n: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Accessing object properties with arrays&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var obj = { property: 1 };
var array = [&quot;property&quot;];

obj[array]; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about pseudo-multidimensional arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var map = {};
var x = 1;
var y = 2;
var z = 3;

map[[x, y, z]] = true;
map[[x + 10, y, z]] = true;

map[&quot;1,2,3&quot;]; // -&amp;gt; true
map[&quot;11,2,3&quot;]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The brackets &lt;code&gt;[]&lt;/code&gt; operator converts the passed expression using &lt;code&gt;toString&lt;/code&gt;. Converting a one-element array to a string is akin to converting the contained element to the string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[&quot;property&quot;].toString(); // -&amp;gt; &#39;property&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Null and Relational Operators&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;null &amp;gt; 0; // false
null == 0; // false

null &amp;gt;= 0; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Long story short, if &lt;code&gt;null&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then &lt;code&gt;null &amp;gt;= 0&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Read in-depth explanation for this &lt;a href=&quot;https://blog.campvanilla.com/javascript-the-curious-case-of-null-0-7b131644e274&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; can behave a bit strange in different browsers. Check out this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(0.7875).toFixed(3);
// Firefox: -&amp;gt; 0.787
// Chrome: -&amp;gt; 0.787
// IE11: -&amp;gt; 0.788
(0.7876).toFixed(3);
// Firefox: -&amp;gt; 0.788
// Chrome: -&amp;gt; 0.788
// IE11: -&amp;gt; 0.788
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;While your first instinct may be that IE11 is correct and Firefox/Chrome are wrong, the reality is that Firefox/Chrome are more directly obeying standards for numbers (IEEE-754 Floating Point), while IE11 is minutely disobeying them in (what is probably) an effort to give clearer results.&lt;/p&gt; 
&lt;p&gt;You can see why this occurs with a few quick tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Confirm the odd result of rounding a 5 down
(0.7875).toFixed(3); // -&amp;gt; 0.787
// It looks like it&#39;s just a 5 when you expand to the
// limits of 64-bit (double-precision) float accuracy
(0.7875).toFixed(14); // -&amp;gt; 0.78750000000000
// But what if you go beyond the limit?
(0.7875).toFixed(20); // -&amp;gt; 0.78749999999999997780
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Floating point numbers are not stored as a list of decimal digits internally, but through a more complicated methodology that produces tiny inaccuracies that are usually rounded away by toString and similar calls, but are actually present internally.&lt;/p&gt; 
&lt;p&gt;In this case, that &quot;5&quot; on the end was actually an extremely tiny fraction below a true 5. Rounding it at any reasonable length will render it as a 5... but it is actually not a 5 internally.&lt;/p&gt; 
&lt;p&gt;IE11, however, will report the value input with only zeros appended to the end even in the toFixed(20) case, as it seems to be forcibly rounding the value to reduce the troubles from hardware limits.&lt;/p&gt; 
&lt;p&gt;See for reference &lt;code&gt;NOTE 2&lt;/code&gt; on the ECMA-262 definition for &lt;code&gt;toFixed&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262//#sec-number.prototype.tofixed&quot;&gt;&lt;strong&gt;20.1.3.3&lt;/strong&gt; Number.prototype.toFixed (&lt;code&gt;fractionDigits&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Math.min(1, 4, 7, 2); // -&amp;gt; 1
Math.max(1, 4, 7, 2); // -&amp;gt; 7
Math.min(); // -&amp;gt; Infinity
Math.max(); // -&amp;gt; -Infinity
Math.min() &amp;gt; Math.max(); // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://charlieharvey.org.uk/page/why_math_max_is_less_than_math_min&quot;&gt;Why is Math.max() less than Math.min()?&lt;/a&gt; by Charlie Harvey&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;The following expressions seem to introduce a contradiction:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;null == 0; // -&amp;gt; false
null &amp;gt; 0; // -&amp;gt; false
null &amp;gt;= 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;How can &lt;code&gt;null&lt;/code&gt; be neither equal to nor greater than &lt;code&gt;0&lt;/code&gt;, if &lt;code&gt;null &amp;gt;= 0&lt;/code&gt; is actually &lt;code&gt;true&lt;/code&gt;? (This also works with less than in the same way.)&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The way these three expressions are evaluated are all different and are responsible for producing this unexpected behavior.&lt;/p&gt; 
&lt;p&gt;First, the abstract equality comparison &lt;code&gt;null == 0&lt;/code&gt;. Normally, if this operator can&#39;t compare the values on either side properly, it converts both to numbers and compares the numbers. Then, you might expect the following behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// This is not what happens
(null == 0 + null) == +0;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, according to a close reading of the spec, the number conversion doesn&#39;t actually happen on a side that is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Therefore, if you have &lt;code&gt;null&lt;/code&gt; on one side of the equal sign, the other side must be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; for the expression to return &lt;code&gt;true&lt;/code&gt;. Since this is not the case, &lt;code&gt;false&lt;/code&gt; is returned.&lt;/p&gt; 
&lt;p&gt;Next, the relational comparison &lt;code&gt;null &amp;gt; 0&lt;/code&gt;. The algorithm here, unlike that of the abstract equality operator, &lt;em&gt;will&lt;/em&gt; convert &lt;code&gt;null&lt;/code&gt; to a number. Therefore, we get this behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;null &amp;gt; 0
+null = +0
0 &amp;gt; 0
false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, the relational comparison &lt;code&gt;null &amp;gt;= 0&lt;/code&gt;. You could argue that this expression should be the result of &lt;code&gt;null &amp;gt; 0 || null == 0&lt;/code&gt;; if this were the case, then the above results would mean that this would also be &lt;code&gt;false&lt;/code&gt;. However, the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator in fact works in a very different way, which is basically to take the opposite of the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. Because our example with the greater than operator above also holds for the less than operator, that means this expression is actually evaluated like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;null &amp;gt;= 0;
!(null &amp;lt; 0);
!(+null &amp;lt; +0);
!(0 &amp;lt; 0);
!false;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison&quot;&gt;&lt;strong&gt;7.2.12&lt;/strong&gt; Abstract Relational Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Same variable redeclaration&lt;/h2&gt; 
&lt;p&gt;JS allows to redeclare variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;a;
a;
// This is also valid
a, a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Works also in strict mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var a, a, a;
var a;
var a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;All definitions are merged into one definition.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-variable-statement&quot;&gt;&lt;strong&gt;13.3.2&lt;/strong&gt; Variable Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Default behavior Array.prototype.sort()&lt;/h2&gt; 
&lt;p&gt;Imagine that you need to sort an array of numbers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[10, 1, 3].sort(); // -&amp;gt; [ 1, 10, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The default sort order is built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-array.prototype.sort&quot;&gt;&lt;strong&gt;22.1.3.25&lt;/strong&gt; Array.prototype.sort ( comparefn )&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hint&lt;/h3&gt; 
&lt;p&gt;Pass &lt;code&gt;compareFn&lt;/code&gt; if you try to sort anything but string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[10, 1, 3].sort((a, b) =&amp;gt; a - b); // -&amp;gt; [ 1, 3, 10 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;resolve() won&#39;t return Promise instance&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const theObject = {
  a: 7
};
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // &amp;gt; true
  console.log(value); // &amp;gt; { a: 7 }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; which is resolved from &lt;code&gt;thePromise&lt;/code&gt; is exactly &lt;code&gt;theObject&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How about input another &lt;code&gt;Promise&lt;/code&gt; into the &lt;code&gt;resolve&lt;/code&gt; function?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const theObject = new Promise((resolve, reject) =&amp;gt; {
  resolve(7);
}); // Promise instance object
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // &amp;gt; false
  console.log(value); // &amp;gt; 7
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve&quot;&gt;Promise.resolve() on MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The specification is &lt;a href=&quot;https://tc39.es/ecma262/#sec-promise-resolve-functions&quot;&gt;ECMAScript 25.6.1.3.2 Promise Resolve Functions&lt;/a&gt;. But it is not quite human-friendly.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;{}{}&lt;/code&gt; is undefined&lt;/h2&gt; 
&lt;p&gt;Write them in the console. They will return the value defined in the last object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{}{}; // -&amp;gt; undefined
{}{}{}; // -&amp;gt; undefined
{}{}{}{}; // -&amp;gt; undefined
{foo: &#39;bar&#39;}{}; // -&amp;gt; &#39;bar&#39;
{}{foo: &#39;bar&#39;}; // -&amp;gt; &#39;bar&#39;
{}{foo: &#39;bar&#39;}{}; // -&amp;gt; &#39;bar&#39;
{a: &#39;b&#39;}{c:&#39; d&#39;}{}; // -&amp;gt; &#39;d&#39;
{a: &#39;b&#39;, c: &#39;d&#39;}{}; // &amp;gt; SyntaxError: Unexpected token &#39;:&#39;
({}{}); // &amp;gt; SyntaxError: Unexpected token &#39;{&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;When inspecting each &lt;code&gt;{}&lt;/code&gt;, they returns undefined. If you inspect &lt;code&gt;{foo: &#39;bar&#39;}{}&lt;/code&gt;, you will find &lt;code&gt;{foo: &#39;bar&#39;}&lt;/code&gt; is &lt;code&gt;&#39;bar&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There are two meanings for &lt;code&gt;{}&lt;/code&gt;: an object or a block. For example, the &lt;code&gt;{}&lt;/code&gt; in &lt;code&gt;() =&amp;gt; {}&lt;/code&gt; means block. So we need to use &lt;code&gt;() =&amp;gt; ({}&lt;/code&gt;) to return an object.&lt;/p&gt; 
&lt;p&gt;Let&#39;s use &lt;code&gt;{foo: &#39;bar&#39;}&lt;/code&gt; as a block. Write this snippet in your console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if (true) {
  foo: &quot;bar&quot;;
} // -&amp;gt; &#39;bar&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Surprisingly, it behaviors the same! You can guess here that &lt;code&gt;{foo: &#39;bar&#39;}{}&lt;/code&gt; is a block.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;min&lt;/code&gt; is greater than &lt;code&gt;max&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;I find this example hilarious:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Math.min() &amp;gt; Math.max(); // -&amp;gt; true
Math.min() &amp;lt; Math.max(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is a simple one. Let&#39;s consider each part of this expression separately:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Math.min(); // -&amp;gt; Infinity
Math.max(); // -&amp;gt; -Infinity
Infinity &amp;gt; -Infinity; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Why so? Well, &lt;code&gt;Math.max()&lt;/code&gt; is not the same thing as &lt;code&gt;Number.MAX_VALUE&lt;/code&gt;. It does not return the largest possible number.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Math.max&lt;/code&gt; takes arguments, tries to convert the to numbers, compares each one and then returns the largest remaining. If no arguments are given, the result is −∞. If any value is &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The opposite is happening for &lt;code&gt;Math.min&lt;/code&gt;. &lt;code&gt;Math.min&lt;/code&gt; returns ∞, if no arguments are given.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/5.1/#sec-15.8.2.11&quot;&gt;&lt;strong&gt;15.8.2.11&lt;/strong&gt; Math.max&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/5.1/#sec-15.8.2.12&quot;&gt;&lt;strong&gt;15.8.2.11&lt;/strong&gt; Math.min&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://charlieharvey.org.uk/page/why_math_max_is_less_than_math_min&quot;&gt;Why is &lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; binding&lt;/h2&gt; 
&lt;p&gt;Consider this function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function a(x) {
  arguments[0] = &quot;hello&quot;;
  console.log(x);
}

a(); // &amp;gt; undefined
a(1); // &amp;gt; &quot;hello&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;arguments&lt;/code&gt; is an Array-like object that contains the values of the arguments passed to that function. When no arguments are passed, then there&#39;s no &lt;code&gt;x&lt;/code&gt; to override.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments&quot;&gt;The arguments object&lt;/a&gt; on MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;An &lt;code&gt;alert&lt;/code&gt; from hell&lt;/h2&gt; 
&lt;p&gt;This on is literally from hell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[666][&quot;\155\141\160&quot;][&quot;\143\157\156\163\164\162\165\143\164\157\162&quot;](
  &quot;\141\154\145\162\164(666)&quot;
)(666); // alert(666)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This one is based on octal escape sequences and multiple strings.&lt;/p&gt; 
&lt;p&gt;Any character with a character code lower than 256 (i.e. any character in the extended ASCII range) can be escaped using its octal-encoded character code, prefixed with &lt;code&gt;\&lt;/code&gt;. An example above is basically and &lt;code&gt;alert&lt;/code&gt; ecoded by octal escape sequances.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/aemkei/status/897172907222237185&quot;&gt;Martin Kleppe tweet about it&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/javascript-escapes#octal&quot;&gt;JavaScript character escape sequences&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/multiline-javascript-strings&quot;&gt;Multi-Line JavaScript Strings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;An infinite timeout&lt;/h2&gt; 
&lt;p&gt;Guess what would happen if we set an infinite timeout?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;setTimeout(() =&amp;gt; console.log(&quot;called&quot;), Infinity); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; &#39;called&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will executed immediately instead of infinity delay.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Usually, runtime stores the delay as a 32-bit signed integer internally. This causes an integer overflow, resulting in the timeout being executed immediately.&lt;/p&gt; 
&lt;p&gt;For example, in Node.js we will get this warning:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;(node:1731) TimeoutOverflowWarning: Infinity does not fit into a 32-bit signed integer.
Timeout duration was set to 1.
(Use `node --trace-warnings ...` to show where the warning was created)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout&quot;&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; on MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org/api/timers.html#timers_settimeout_callback_delay_args&quot;&gt;Node.js Documentation on Timers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/2011/WD-html5-20110525/timers.html&quot;&gt;Timers&lt;/a&gt; on W3C&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;setTimeout&lt;/code&gt; object&lt;/h2&gt; 
&lt;p&gt;Guess what would happen if we set an callback that&#39;s not a function to &lt;code&gt;setTimeout&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;setTimeout(123, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; &#39;called&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is fine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;setTimeout(&#39;{a: 1}&#39;, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; &#39;called&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is also fine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;setTimeout({a: 1}, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; &#39;Uncaught SyntaxError: Unexpected identifier               setTimeout (async) (anonymous) @ VM__:1&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This throws an &lt;strong&gt;SyntaxError&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Note that this can easily happen if your function returns an object and you call it here instead of passing it! What if the content - policy is set to &lt;code&gt;self&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;setTimeout(123, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; console.error(&quot;[Report Only] Refused to evaluate a string as JavaScript because &#39;unsafe-eval&#39; is not an allowed source of script in the following Content Security Policy directive: &quot;script-src &#39;report-sample&#39; &#39;self&#39; &quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The console refuses to run it at all!&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt; can be called with &lt;code&gt;code&lt;/code&gt; as first argument, which will be passed on to &lt;code&gt;eval&lt;/code&gt;, which is bad. Eval will coerce her input to String, and evaluate what is produced, so Objects becomes &lt;code&gt;&#39;[object Object]&#39;&lt;/code&gt; which has hmmm ... an &lt;code&gt;&#39;Unexpected identifier&#39;&lt;/code&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;eval()&lt;/a&gt; on MDN (don&#39;t use this)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout&quot;&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; on MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&quot;&gt;Content Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/2011/WD-html5-20110525/timers.html&quot;&gt;Timers&lt;/a&gt; on W3C&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Double dot&lt;/h2&gt; 
&lt;p&gt;Let&#39;s try to coerce a number to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;27.toString() // &amp;gt; Uncaught SyntaxError: Invalid or unexpected token
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Maybe we should try with two dots?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;27..toString(); // -&amp;gt; &#39;27&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But why doesn&#39;t first example work?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;It&#39;s just a language grammar limitation.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;.&lt;/code&gt; character presents an ambiguity. It can be understood to be the member operator, or a decimal, depending on its placement.&lt;/p&gt; 
&lt;p&gt;The specification&#39;s interpretation of the &lt;code&gt;.&lt;/code&gt; character in that particular position is that it will be a decimal. This is defined by the numeric literal syntax of ECMAScript.&lt;/p&gt; 
&lt;p&gt;You must always use parenthesis or an addition dot to make such expression valid.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(27).toString(); // -&amp;gt; &#39;27&#39;
// or
27..toString(); // -&amp;gt; &#39;27&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6853865/usage-of-tostring-in-javascript/6853910#6853910&quot;&gt;Usage of toString in JavaScript&lt;/a&gt; on StackOverflow&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/13149282/why-does-10-tostring-work-but-10-tostring-does-not/13149301#13149301&quot;&gt;Why does 10..toString() work, but 10.toString() does not?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extra Newness&lt;/h2&gt; 
&lt;p&gt;I present this as an oddity for your amusement.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Foo extends Function {
  constructor(val) {
    super();
    this.prototype.val = val;
  }
}

new new Foo(&quot;:D&quot;)().val; // -&amp;gt; &#39;:D&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Constructors in JavaScript are just functions with some special treatment. By extending Function using the class syntax you create a class that, when instantiated, is now a function, which you can then additionally instantiate.&lt;/p&gt; 
&lt;p&gt;While not exhaustively tested, I believe the last statement can be analyzed thus:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new new Foo(&quot;:D&quot;)().val(new newFooInstance()).val;
veryNewFooInstance.val;
// -&amp;gt; &#39;:D&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a tiny addendum, doing &lt;code&gt;new Function(&#39;return &quot;bar&quot;;&#39;)&lt;/code&gt; of course creates a function with the body &lt;code&gt;return &quot;bar&quot;;&lt;/code&gt;. Since &lt;code&gt;super()&lt;/code&gt; in the constructor of our &lt;code&gt;Foo&lt;/code&gt; class is calling &lt;code&gt;Function&lt;/code&gt;&#39;s constructor, it should come as no surprise now to see that we can additionally manipulate things in there.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Foo extends Function {
  constructor(val) {
    super(`
      this.val = arguments[0];
    `);
    this.prototype.val = val;
  }
}

var foo = new new Foo(&quot;:D&quot;)(&quot;D:&quot;);
foo.val; // -&amp;gt; &#39;D:&#39;
delete foo.val; // remove the instance prop &#39;val&#39;, deferring back to the prototype&#39;s &#39;val&#39;.
foo.val; // -&amp;gt; &#39;:D&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/denysdovhan/wtfjs/issues/78&quot;&gt;Class Extends Function: Extra Newness&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why you should use semicolons&lt;/h2&gt; 
&lt;p&gt;Writing some standard JavaScript… and then BOOM!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class SomeClass {
  [&quot;array&quot;] = []
  [&quot;string&quot;] = &quot;str&quot;
}

new SomeClass().array; // -&amp;gt; &#39;str&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What the …?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Once again, this is all thanks to the Automatic Semicolon Insertion.&lt;/p&gt; 
&lt;p&gt;An example above is basically the same as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class SomeClass {
  [&quot;array&quot;] = ([][&quot;string&quot;] = &quot;str&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You basically assign a string &lt;code&gt;str&lt;/code&gt; into an &lt;code&gt;array&lt;/code&gt; property.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/SeaRyanC/status/1148726605222535168&quot;&gt;An original tweet with an example&lt;/a&gt; by Ryan Cavanaugh&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tc39/notes/raw/master/meetings/2017-09/sept-26.md&quot;&gt;TC39 meeting when they debated about it&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Split a string by a space&lt;/h2&gt; 
&lt;p&gt;Have you ever tried to split a string by a space?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;&quot;.split(&quot;&quot;); // -&amp;gt; []
// but…
&quot;&quot;.split(&quot; &quot;); // -&amp;gt; [&quot;&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is expected behaviour. It&#39;s responsibility is to divide the input string every time a separator occurs in that input string. When you pass in an empty string it&#39;ll never find a separator and thus return that string.&lt;/p&gt; 
&lt;p&gt;Let&#39;s quote the specification:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The substrings are determined by searching from left to right for occurrences of &lt;code&gt;separator&lt;/code&gt;; these occurrences are not part of any String in the returned array, but serve to divide up the String value.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.es/ecma262/#sec-string.prototype.split&quot;&gt;&lt;strong&gt;22.1.3.21&lt;/strong&gt; String.prototype.split&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/SeaRyanC/status/1331656278104440833&quot;&gt;An original tween with an example&lt;/a&gt; by Ryan Cavanaugh&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/kl13nt/status/1331742810932916227?s=20&quot;&gt;A tween with an explanation&lt;/a&gt; by Nabil Tharwat&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A stringified string&lt;/h2&gt; 
&lt;p&gt;This caused a bug that I&#39;ve been solving for a few days:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;JSON.stringify(&quot;production&quot;) === &quot;production&quot;; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Let&#39;s see what &lt;code&gt;JSON.stringify&lt;/code&gt; is returning:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;JSON.stringify(&quot;production&quot;); // -&amp;gt; &#39;&quot;production&quot;&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is actually a stringified string, so it&#39;s true:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;&quot;production&quot;&#39; === &quot;production&quot;; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.json.org/json-en.html&quot;&gt;ECMA-404 The JSON Data Interchange Standard.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-strict comparison of a number to &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;1 == true; // -&amp;gt; true
// but…
Boolean(1.1); // -&amp;gt; true
1.1 == true; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The comparison x == y, where x and y are values, produces true or false. Such a comparison is performed as follows:&lt;/p&gt; 
 &lt;ol start=&quot;4&quot;&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number and &lt;code&gt;Type(y)&lt;/code&gt; is String, return the result of the comparison &lt;code&gt;x == ! ToNumber(y)&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;So this comparison is performed like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;1 == true;
1 == Number(true);
1 == 1; // -&amp;gt; true
// but…
1.1 == true;
1.1 == Number(true);
1.1 == 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📚 Other resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wtfjs.com/&quot;&gt;wtfjs.com&lt;/a&gt; — a collection of those very special irregularities, inconsistencies and just plain painfully unintuitive moments for the language of the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.destroyallsoftware.com/talks/wat&quot;&gt;Wat&lt;/a&gt; — A lightning talk by Gary Bernhardt from CodeMash 2012&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2pL28CcEijU&quot;&gt;What the... JavaScript?&lt;/a&gt; — Kyle Simpsons talk for Forward 2 attempts to “pull out the crazy” from JavaScript. He wants to help you produce cleaner, more elegant, more readable code, then inspire people to contribute to the open source community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://zero.milosz.ca/&quot;&gt;Zeros in JavaScript&lt;/a&gt; — a comparison table of &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in JavaScript.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;🤝 Supporting&lt;/h1&gt; 
&lt;p&gt;Hi! I work on this project in my spare time, in addition to my primary job. I hope you enjoy reading it. If you do, please, consider supporting me 🙏.&lt;/p&gt; 
&lt;p&gt;Every single donation is important. Your donation is gonna make a clear statement: My work is valued.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🙏 Thank you for your support! 🙏&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Link&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Patreon&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://patreon.com/denysdovhan&quot;&gt;Become a patron&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://patreon.com/denysdovhan&quot;&gt;&lt;img src=&quot;https://c5.patreon.com/external/logo/become_a_patron_button@2x.png&quot; width=&quot;120px&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;BuyMeACoffee&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://patreon.com/denysdovhan&quot;&gt;Buy me a cup of ☕️ or 🥤&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://buymeacoffee.com/denysdovhan&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/default-black.png&quot; width=&quot;120px&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bitcoin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;1EJsKs6rPsqa7QLoVLpe3wgcdL9Q8WmDxE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3459374/107130426-0ae4f800-68d6-11eb-9b86-15bf33467615.png&quot; width=&quot;120px&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ethereum&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;0x6aF39C917359897ae6969Ad682C14110afe1a0a1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3459374/107130370-55b24000-68d5-11eb-93f5-075355c7fcd4.png&quot; width=&quot;120px&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Note:&lt;/strong&gt; I live in Ukraine and services like PayPal and Stripe don&#39;t work with Ukrainian bank accounts. This means there&#39;s no way for me to set up GitHub Sponsors, OpenCollective, or services relied on them. Sorry, those are the only ways you can support me for now.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;🎓 License&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.wtfpl.net&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square&quot; alt=&quot;CC 4.0&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;© &lt;a href=&quot;http://denysdovhan.com&quot;&gt;Denys Dovhan&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Zeeshanahmad4/OpenSea-Apis-NFT-Bulk-Make-Offer-Bot</title>
      <link>https://github.com/Zeeshanahmad4/OpenSea-Apis-NFT-Bulk-Make-Offer-Bot</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;OpenSea NFT Sniping Bot&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/Zeeshanahmad4/Facebook-Automation-bot-with-Multilogin-and-Proxies&quot;&gt; &lt;img src=&quot;https://github.com/Zeeshanahmad4/My-Path-to-Python/raw/master/multimedia/fullcrop.png&quot; alt=&quot;Logo&quot; width=&quot;140&quot; height=&quot;220&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://join.skype.com/invite/y8jt9Ecc32SF&quot;&gt; &lt;img align=&quot;center&quot; alt=&quot;Abhishek&#39;s Discord&quot; width=&quot;30px&quot; src=&quot;https://edent.github.io/SuperTinyIcons/images/svg/skype.svg?sanitize=true&quot;&gt; &lt;code&gt; zeeshan.ahmad400&lt;/code&gt; &lt;/a&gt; 
 &lt;span&gt; ┃ &lt;/span&gt; 
 &lt;a href=&quot;https://mail.google.com/mail/u/?authuser=ahmadzee26@gmail.com&quot;&gt; &lt;img align=&quot;center&quot; alt=&quot;Abhishek Naidu | Twitter&quot; width=&quot;30px&quot; src=&quot;https://edent.github.io/SuperTinyIcons/images/svg/gmail.svg?sanitize=true&quot;&gt; &lt;code&gt;ahmadzee26@gmail.com&lt;/code&gt; &lt;/a&gt; 
 &lt;span&gt; ┃ &lt;/span&gt; 
 &lt;a href=&quot;https://t.me/zeeshanahmad4&quot;&gt; &lt;img align=&quot;center&quot; alt=&quot;Abhishek&#39;s LinkedIN&quot; width=&quot;30px&quot; src=&quot;https://edent.github.io/SuperTinyIcons/images/svg/telegram.svg?sanitize=true&quot;&gt; &lt;code&gt;@zeeshanahmad4&lt;/code&gt; &lt;/a&gt; 
 &lt;span&gt;┃&lt;/span&gt; 
 &lt;a href=&quot;&quot; style=&quot;margin-top: 12px;&quot;&gt; &lt;img align=&quot;center&quot; alt=&quot;Abhishek&#39;s Discord&quot; width=&quot;30px&quot; src=&quot;https://raw.githubusercontent.com/peterthehan/peterthehan/master/assets/discord.svg?sanitize=true&quot;&gt; &lt;code&gt;Zee#0291&lt;/code&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;br&gt;  
 &lt;a href=&quot;https://www.upwork.com/freelancers/~0180a61cf01f9bc71d&quot; style=&quot;margin-top: 12px;&quot;&gt; &lt;img align=&quot;center&quot; alt=&quot;Abhishek&#39;s Discord&quot; width=&quot;40px&quot; src=&quot;https://logowik.com/content/uploads/images/upwork.jpg&quot;&gt; &lt;code&gt;zeeshanahmad44&lt;/code&gt; &lt;/a&gt; 
 &lt;!-- ![](https://visitor-badge.glitch.me/badge?page_id=.Zeeshanahmad4) --&gt; 
 &lt;!-- ![](https://api.visitorbadge.io/api/VisitorHit?user=Zeeshanahmad4&amp;repo=Facebook-Automation-bot-with-Multilogin-and-Proxies&amp;countColor=%237B1E7A) --&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;strong&gt;For Disscussion, Quries and Freelance work. Do reach me 👆👆👆&lt;/strong&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;h1&gt;Building a series of bots for OpenSea Market Place.&lt;/h1&gt; 
&lt;p&gt;To Dos.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Make Bulk Offer Bot&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; OpenSea Notification Bot - floor,sales,listings - Discord, Twitter,Telegram&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Art and Metadata Scraping Bot&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Bulk Auto deploy and Art Minting Bot&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Python Generative Art Bot&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Rarity Ranking Bot&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; These bots are not open Sources, Suggestions are welcome. #nft&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Make Bulk Offer Bot&lt;/h1&gt; 
&lt;p&gt;I have three bots for Making low ball Bulk offers Bot#1 using Browser Automation and Bot#2 is using Opensea Apis bot, Bot#3 is using Opensea Production apis .&lt;/p&gt; 
&lt;h3&gt;Bot Inputs-&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Collection URL&lt;/li&gt; 
 &lt;li&gt;Metamask&lt;/li&gt; 
 &lt;li&gt;Bid Amount&lt;/li&gt; 
 &lt;li&gt;Bid expiration time - only for Apis bot&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The Bot takes collection Url as input and starts making offers on arts of collection. I have built two kinds of bots.&lt;/p&gt; 
&lt;h2&gt;Bot#1 Browser Automation Bot&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build on Chrome browser automation - Python&lt;/li&gt; 
 &lt;li&gt;The Bot can be a single thread or Multithread depends open Your machine power.&lt;/li&gt; 
 &lt;li&gt;The Bot is slow because it uses using chrome browser to make offers on arts. The Bot needs to sign every transaction like humans.&lt;/li&gt; 
 &lt;li&gt;The Bot can not bid using a custom expiration date. It can only choose from 1,7,14,30 days.&lt;/li&gt; 
 &lt;li&gt;The Bot can break between making offers and requires a powerful machine to make offers on 5k arts because the chrome browser consumes many resources while running.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Pros &amp;amp; Cons of Browser Automation Bot&lt;/h3&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Stats&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;3-5 offers Per minute&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Miss a lot of offers.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Break Some times&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Can&#39;t Bid on Multiple Collections&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Not Customizable We can not add more functionalities into bot&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;Check more on the topic why the browsers consumes so many resources from &lt;a href=&quot;https://meta.stackoverflow.com/questions/362294/why-do-stale-stack-overflow-tabs-use-so-many-resources&quot;&gt;here&lt;/a&gt; &lt;br&gt; You can see the full Demo of the OpenSea Apis Bot from &lt;a href=&quot;https://www.youtube.com/watch?v=hGNHiymdzyA&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/Zeeshanahmad4/OpenSea-Apis-NFT-Bulk-Make-Offer-Bot/raw/main/Browser_automation_bot.gif&quot; alt=&quot;animated&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Bot#2 OpenSea Apis Bot&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build on Opensea Official Apis.&lt;/li&gt; 
 &lt;li&gt;The Bot is fast and robust - It does not need to sign transactions.&lt;/li&gt; 
 &lt;li&gt;The Bot can make offers with custom expiration time from 1 minute to 6months.&lt;/li&gt; 
 &lt;li&gt;The Bot will never break because its light weighted and uses open sea Offical Apis.&lt;/li&gt; 
 &lt;li&gt;The Bot can not make offers on multiple Collections in one run.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h3&gt;Pros &amp;amp; Cons of OpenSea Apis Bot&lt;/h3&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Stats&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;5-10 offers Per minute&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Does not miss Any offer&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Does not break but takes time to handle Rejections from Opensea&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Can Bid on Multiple Collections one after another&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Customizable We can add more functionalities into bot&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;You can see the full Demo of the OpenSea Apis Bot from &lt;a href=&quot;https://www.youtube.com/watch?v=hGNHiymdzyA&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/Zeeshanahmad4/OpenSea-Apis-NFT-Bulk-Make-Offer-Bot/raw/main/apis_bot.gif&quot; alt=&quot;animated&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Bot#3 OpenSea Production Env Apis Bot&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build on Opensea Official Apis Deploy and run in Production Env.&lt;/li&gt; 
 &lt;li&gt;The Bot is fast and robust - It does not need to sign transactions.&lt;/li&gt; 
 &lt;li&gt;The Bot can make offers with custom expiration time from 1 minute to 6months.&lt;/li&gt; 
 &lt;li&gt;The Bot will never break because its light weighted and uses open sea Offical Apis.&lt;/li&gt; 
 &lt;li&gt;The Bot can make offers on multiple Collections in one run.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h3&gt;Pros &amp;amp; Cons of OpenSea Production Env Apis Bot&lt;/h3&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Stats&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;30-40 offers Per minute Lighting Fast Speed&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Does not miss Any offer 100% success rate&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Does not break also no Rejections from Opensea&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Can Bid on Multiple Collections in one run alternatively on arts&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Customizable We can add more functionalities into bot&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Outbid bot - In Development&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>basir/next-amazona</title>
      <link>https://github.com/basir/next-amazona</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next Amazona&lt;/h1&gt; 
&lt;p&gt;Build ECommerce Website Like Amazon by Next.js&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Source Code&amp;nbsp; &amp;nbsp; :&amp;nbsp; &lt;a href=&quot;https://github.com/basir/next-amazona&quot;&gt;https://github.com/basir/next-amazona&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Demo Website :&amp;nbsp; &lt;a href=&quot;https://nextjs-amazona-final.vercel.app&quot;&gt;https://nextjs-amazona-final.vercel.app&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What you will learn&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;NextJS basics like setting up project, navigating between pages and data fetching&lt;/li&gt; 
 &lt;li&gt;NextJS advanced topics like dynamic routing, image optimization,&amp;nbsp; SSG and SSR&lt;/li&gt; 
 &lt;li&gt;MaterialUI framework to build responsive website using custom theme, animation and carousel&lt;/li&gt; 
 &lt;li&gt;ReactJS including decomposing components, context API and hooks&lt;/li&gt; 
 &lt;li&gt;Next Connect package to build backend API&lt;/li&gt; 
 &lt;li&gt;MongoDB and Mongoose to save and retrieve data like products, orders and users&lt;/li&gt; 
 &lt;li&gt;PayPal developer api to make online payment&lt;/li&gt; 
 &lt;li&gt;Deploy web applications on servers like Vercel and Netlify&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Full Course&lt;/h2&gt; 
&lt;p&gt;Learn building this ecommerce website on Udemy with 90% discount: &lt;a href=&quot;https://www.udemy.com/course/nextjs-ecommerce&quot;&gt;https://www.udemy.com/course/nextjs-ecommerce&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Run it Locally&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/basir/next-amazona
$ cd next-amazona
$ npm install
$ npm run dev
$ Open http://localhost:3000/api/seed
$ Open http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Lessons&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Introduction 
  &lt;ol&gt; 
   &lt;li&gt;What you will learn&lt;/li&gt; 
   &lt;li&gt;What you will build&lt;/li&gt; 
   &lt;li&gt;What Packages you will use&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Install Tools 
  &lt;ol&gt; 
   &lt;li&gt;VS Code&lt;/li&gt; 
   &lt;li&gt;Chrome&lt;/li&gt; 
   &lt;li&gt;Node.js&lt;/li&gt; 
   &lt;li&gt;MongoDB&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Next App 
  &lt;ol&gt; 
   &lt;li&gt;npx create-next-app&lt;/li&gt; 
   &lt;li&gt;add layout component&lt;/li&gt; 
   &lt;li&gt;add header, main and footer&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Add Styles 
  &lt;ol&gt; 
   &lt;li&gt;add css to header, main and footer&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Fix SSR Issue on MaterialUI 
  &lt;ol&gt; 
   &lt;li&gt;add _documents.js&lt;/li&gt; 
   &lt;li&gt;add code to fix styling issue&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;List Products 
  &lt;ol&gt; 
   &lt;li&gt;add data.js&lt;/li&gt; 
   &lt;li&gt;add images&lt;/li&gt; 
   &lt;li&gt;render products&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Add header links 
  &lt;ol&gt; 
   &lt;li&gt;Add cart and login link&lt;/li&gt; 
   &lt;li&gt;use next/link and mui/link&lt;/li&gt; 
   &lt;li&gt;add css classes for header links&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Route Product Details Page 
  &lt;ol&gt; 
   &lt;li&gt;Make Product cards linkable&lt;/li&gt; 
   &lt;li&gt;Create /product/[slug] route&lt;/li&gt; 
   &lt;li&gt;find product based on slug&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Product Details Page 
  &lt;ol&gt; 
   &lt;li&gt;Create 3 columns&lt;/li&gt; 
   &lt;li&gt;show image in first column&lt;/li&gt; 
   &lt;li&gt;show product info in second column&lt;/li&gt; 
   &lt;li&gt;show add to cart action on third column&lt;/li&gt; 
   &lt;li&gt;add styles&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Add MaterialUI Theme 
  &lt;ol&gt; 
   &lt;li&gt;create theme&lt;/li&gt; 
   &lt;li&gt;use theme provider&lt;/li&gt; 
   &lt;li&gt;add h1 and h2 styles&lt;/li&gt; 
   &lt;li&gt;set theme colors&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Application Context 
  &lt;ol&gt; 
   &lt;li&gt;define context and reducer&lt;/li&gt; 
   &lt;li&gt;set darkMode flag&lt;/li&gt; 
   &lt;li&gt;create store provider&lt;/li&gt; 
   &lt;li&gt;use it on layout&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Connect To MongoDB 
  &lt;ol&gt; 
   &lt;li&gt;install mongodb&lt;/li&gt; 
   &lt;li&gt;install mongoose&lt;/li&gt; 
   &lt;li&gt;define connect and disconnect&lt;/li&gt; 
   &lt;li&gt;use it in the api&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Products API 
  &lt;ol&gt; 
   &lt;li&gt;create product model&lt;/li&gt; 
   &lt;li&gt;seed sample data&lt;/li&gt; 
   &lt;li&gt;create /api/products/index.js&lt;/li&gt; 
   &lt;li&gt;create product api&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Fetch Products From API 
  &lt;ol&gt; 
   &lt;li&gt;use getServerSideProps()&lt;/li&gt; 
   &lt;li&gt;get product from db&lt;/li&gt; 
   &lt;li&gt;return data as props&lt;/li&gt; 
   &lt;li&gt;use it in product screen too&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Implement Add to cart 
  &lt;ol&gt; 
   &lt;li&gt;define cart in context&lt;/li&gt; 
   &lt;li&gt;dispatch add to cart action&lt;/li&gt; 
   &lt;li&gt;set click event handler for button&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Cart Screen 
  &lt;ol&gt; 
   &lt;li&gt;create cart.js&lt;/li&gt; 
   &lt;li&gt;redirect to cart screen&lt;/li&gt; 
   &lt;li&gt;use context to get cart items&lt;/li&gt; 
   &lt;li&gt;list items in cart items&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Use Dynamic Import In Cart Screen 
  &lt;ol&gt; 
   &lt;li&gt;Use next/dynamic&lt;/li&gt; 
   &lt;li&gt;Wrap cart in dynamic with out ssr&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Update Remove Items In Cart 
  &lt;ol&gt; 
   &lt;li&gt;Implement onChange for Select&lt;/li&gt; 
   &lt;li&gt;Show notification by notistack&lt;/li&gt; 
   &lt;li&gt;implement delete button handler&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Login Page 
  &lt;ol&gt; 
   &lt;li&gt;create form&lt;/li&gt; 
   &lt;li&gt;add email and password field&lt;/li&gt; 
   &lt;li&gt;add login button&lt;/li&gt; 
   &lt;li&gt;style form&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Sample Users 
  &lt;ol&gt; 
   &lt;li&gt;create user model&lt;/li&gt; 
   &lt;li&gt;add sample user in seed api&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Build Login API 3. use jsonwebtoken to sign token 4. implement login api&lt;/li&gt; 
 &lt;li&gt;Complete Login Page 
  &lt;ol&gt; 
   &lt;li&gt;handle form submission&lt;/li&gt; 
   &lt;li&gt;add userInfo to context&lt;/li&gt; 
   &lt;li&gt;save userInfo in cookies&lt;/li&gt; 
   &lt;li&gt;show user name in nav bar using menu&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Register Page 
  &lt;ol&gt; 
   &lt;li&gt;create form&lt;/li&gt; 
   &lt;li&gt;implement backend api&lt;/li&gt; 
   &lt;li&gt;redirect user to redirect page&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Login and Register Form Validation 
  &lt;ol&gt; 
   &lt;li&gt;install react-hook-form&lt;/li&gt; 
   &lt;li&gt;change input to controller&lt;/li&gt; 
   &lt;li&gt;use notistack to show errors&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Shipping Page 4. create form 5. add address fields 8. save address in context&lt;/li&gt; 
 &lt;li&gt;Create Payment Page 
  &lt;ol&gt; 
   &lt;li&gt;create form&lt;/li&gt; 
   &lt;li&gt;add radio button&lt;/li&gt; 
   &lt;li&gt;save method in context&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Place Order Page 
  &lt;ol&gt; 
   &lt;li&gt;display order info&lt;/li&gt; 
   &lt;li&gt;show order summary&lt;/li&gt; 
   &lt;li&gt;add place order button&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Implement Place Order Action 
  &lt;ol&gt; 
   &lt;li&gt;create click handler&lt;/li&gt; 
   &lt;li&gt;send ajax request&lt;/li&gt; 
   &lt;li&gt;clear cart&lt;/li&gt; 
   &lt;li&gt;redirect to order screen&lt;/li&gt; 
   &lt;li&gt;create backend api&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Order Details Page 
  &lt;ol&gt; 
   &lt;li&gt;create api to order info&lt;/li&gt; 
   &lt;li&gt;create payment, shipping and items&lt;/li&gt; 
   &lt;li&gt;create order summary&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Pay Order By PayPal 
  &lt;ol&gt; 
   &lt;li&gt;install paypal button&lt;/li&gt; 
   &lt;li&gt;use it in order screen&lt;/li&gt; 
   &lt;li&gt;implement pay order api&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Display Orders History 
  &lt;ol&gt; 
   &lt;li&gt;create orders api&lt;/li&gt; 
   &lt;li&gt;show orders in profile screen&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Update User Profile 1. create profile screen 2. create update profile api&lt;/li&gt; 
 &lt;li&gt;Create Admin Dashboard 1. Create Admin Menu 2. Add Admin Auth Middleware&lt;br&gt; 3. Implement admin summary api&lt;/li&gt; 
 &lt;li&gt;List Orders For Admin 
  &lt;ol&gt; 
   &lt;li&gt;fix isAdmin middleware&lt;/li&gt; 
   &lt;li&gt;create orders page&lt;/li&gt; 
   &lt;li&gt;create orders api&lt;/li&gt; 
   &lt;li&gt;use api in page&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Deliver Order For Admin 
  &lt;ol&gt; 
   &lt;li&gt;create deliver api&lt;/li&gt; 
   &lt;li&gt;add deliver button&lt;/li&gt; 
   &lt;li&gt;implement click handler&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;List Products For Admin 2. create products page 3. create products api 4. use api in page&lt;/li&gt; 
 &lt;li&gt;Create Product Edit Page 
  &lt;ol&gt; 
   &lt;li&gt;create edit page&lt;/li&gt; 
   &lt;li&gt;create api for product&lt;/li&gt; 
   &lt;li&gt;show product data in form&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Update Product 
  &lt;ol&gt; 
   &lt;li&gt;create form submit handler&lt;/li&gt; 
   &lt;li&gt;create backend api for update&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Upload Product Image 
  &lt;ol&gt; 
   &lt;li&gt;create cloudinary account&lt;/li&gt; 
   &lt;li&gt;get cloudinary keys&lt;/li&gt; 
   &lt;li&gt;create upload api&lt;/li&gt; 
   &lt;li&gt;upload files in edit page&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create And Delete Products 
  &lt;ol&gt; 
   &lt;li&gt;add create product button&lt;/li&gt; 
   &lt;li&gt;build new product api&lt;/li&gt; 
   &lt;li&gt;add handler for delete&lt;/li&gt; 
   &lt;li&gt;implement delete api&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;List Users For Admin 
  &lt;ol&gt; 
   &lt;li&gt;create users page&lt;/li&gt; 
   &lt;li&gt;create users api&lt;/li&gt; 
   &lt;li&gt;use api in page&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create User Edit Page 
  &lt;ol&gt; 
   &lt;li&gt;create edit page&lt;/li&gt; 
   &lt;li&gt;create api for user&lt;/li&gt; 
   &lt;li&gt;show user data in form&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Deploy on Vercel 
  &lt;ol&gt; 
   &lt;li&gt;create vercel account&lt;/li&gt; 
   &lt;li&gt;connect to github&lt;/li&gt; 
   &lt;li&gt;create altas mongodb db&lt;/li&gt; 
   &lt;li&gt;push code to github&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Review Products 
  &lt;ol&gt; 
   &lt;li&gt;add reviews model&lt;/li&gt; 
   &lt;li&gt;create api for reviews&lt;/li&gt; 
   &lt;li&gt;create review form&lt;/li&gt; 
   &lt;li&gt;show reviews on home screen&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Sidebar 
  &lt;ol&gt; 
   &lt;li&gt;add drawer&lt;/li&gt; 
   &lt;li&gt;list categories&lt;/li&gt; 
   &lt;li&gt;redirect to search screen&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Search Box 
  &lt;ol&gt; 
   &lt;li&gt;add form&lt;/li&gt; 
   &lt;li&gt;handle form submit&lt;/li&gt; 
   &lt;li&gt;redirect to search screen&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Create Search Page 
  &lt;ol&gt; 
   &lt;li&gt;create filters&lt;/li&gt; 
   &lt;li&gt;list products&lt;/li&gt; 
   &lt;li&gt;show filters&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Add Carousel 
  &lt;ol&gt; 
   &lt;li&gt;create featured products&lt;/li&gt; 
   &lt;li&gt;feed carousel data&lt;/li&gt; 
   &lt;li&gt;show popular products&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Choose Location on Map 
  &lt;ol&gt; 
   &lt;li&gt;add google map&lt;/li&gt; 
   &lt;li&gt;create map screen&lt;/li&gt; 
   &lt;li&gt;choose location&lt;/li&gt; 
   &lt;li&gt;show in order screen&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png&quot; alt=&quot;AWESOME CHEATSHEETS LOGO&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href=&quot;https://gist.github.com/LeCoupa&quot;&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I reorganized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; 
&lt;h3&gt;📃 Languages&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Command line interface&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh&quot;&gt;Bash&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Imperative&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt&quot;&gt;C&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt&quot;&gt;C#&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md&quot;&gt;Go&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md&quot;&gt;Java&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md&quot;&gt;Python&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Functional&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;📦 Backend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;PHP&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php&quot;&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Python&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py&quot;&gt;Django&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Javascript&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js&quot;&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js&quot;&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js&quot;&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js&quot;&gt;Sails.js&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🌐 Frontend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Basics&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html&quot;&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Frameworks&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js&quot;&gt;React.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js&quot;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css&quot;&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js&quot;&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js&quot;&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js&quot;&gt;AngularJS&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🗃️ Databases&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;SQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;NoSQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh&quot;&gt;Redis&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🔧 Tools&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Development&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh&quot;&gt;cURL&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh&quot;&gt;Drush&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md&quot;&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh&quot;&gt;Git&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js&quot;&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt&quot;&gt;VIM&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt&quot;&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Infrastructure&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh&quot;&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh&quot;&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml&quot;&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh&quot;&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh&quot;&gt;Ubuntu&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Marak/faker.js</title>
      <link>https://github.com/Marak/faker.js</link>
      <description>&lt;p&gt;generate massive amounts of realistic fake data in Node.js and the browser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;faker.js - generate massive amounts of fake data in the browser and node.js&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/logo.png&quot; alt=&quot;Faker.js&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/Marak/faker.js&quot;&gt;&lt;img src=&quot;https://travis-ci.org/Marak/faker.js.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/Marak/faker.js?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/Marak/faker.js/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://badge.fury.io/js/faker&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/faker.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backers/badge.svg?sanitize=true&quot; alt=&quot;OpenCollective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Marak/faker.js/master/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsors/badge.svg?sanitize=true&quot; alt=&quot;OpenCollective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/Faker-js/community&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/marak/faker.js.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://rawgit.com/Marak/faker.js/master/examples/browser/index.html&quot;&gt;https://rawgit.com/Marak/faker.js/master/examples/browser/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Faker Cloud&lt;/h3&gt; 
&lt;p&gt;Don&#39;t have a local development setup ready?&lt;/p&gt; 
&lt;p&gt;Try our hosted version of Faker at &lt;a href=&quot;https://fakercloud.com/api&quot;&gt;https://fakercloud.com/api&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/faker/faker-cloud&quot;&gt;https://github.com/faker/faker-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;    &amp;lt;script src = &quot;faker.js&quot; type = &quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
      var randomName = faker.name.findName(); // Caitlyn Kerluke
      var randomEmail = faker.internet.email(); // Rusty@arne.info
      var randomCard = faker.helpers.createCard(); // random contact card containing many properties
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Node.js&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;    var faker = require(&#39;faker&#39;);

    var randomName = faker.name.findName(); // Rowan Nikolaus
    var randomEmail = faker.internet.email(); // Kassandra.Haley@erich.biz
    var randomCard = faker.helpers.createCard(); // random contact card containing many properties
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;JSDoc API Browser&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;http://marak.github.io/faker.js/&quot;&gt;http://marak.github.io/faker.js/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;API Methods&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;address 
  &lt;ul&gt; 
   &lt;li&gt;zipCode&lt;/li&gt; 
   &lt;li&gt;zipCodeByState&lt;/li&gt; 
   &lt;li&gt;city&lt;/li&gt; 
   &lt;li&gt;cityPrefix&lt;/li&gt; 
   &lt;li&gt;citySuffix&lt;/li&gt; 
   &lt;li&gt;cityName&lt;/li&gt; 
   &lt;li&gt;streetName&lt;/li&gt; 
   &lt;li&gt;streetAddress&lt;/li&gt; 
   &lt;li&gt;streetSuffix&lt;/li&gt; 
   &lt;li&gt;streetPrefix&lt;/li&gt; 
   &lt;li&gt;secondaryAddress&lt;/li&gt; 
   &lt;li&gt;county&lt;/li&gt; 
   &lt;li&gt;country&lt;/li&gt; 
   &lt;li&gt;countryCode&lt;/li&gt; 
   &lt;li&gt;state&lt;/li&gt; 
   &lt;li&gt;stateAbbr&lt;/li&gt; 
   &lt;li&gt;latitude&lt;/li&gt; 
   &lt;li&gt;longitude&lt;/li&gt; 
   &lt;li&gt;direction&lt;/li&gt; 
   &lt;li&gt;cardinalDirection&lt;/li&gt; 
   &lt;li&gt;ordinalDirection&lt;/li&gt; 
   &lt;li&gt;nearbyGPSCoordinate&lt;/li&gt; 
   &lt;li&gt;timeZone&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;animal 
  &lt;ul&gt; 
   &lt;li&gt;dog&lt;/li&gt; 
   &lt;li&gt;cat&lt;/li&gt; 
   &lt;li&gt;snake&lt;/li&gt; 
   &lt;li&gt;bear&lt;/li&gt; 
   &lt;li&gt;lion&lt;/li&gt; 
   &lt;li&gt;cetacean&lt;/li&gt; 
   &lt;li&gt;horse&lt;/li&gt; 
   &lt;li&gt;bird&lt;/li&gt; 
   &lt;li&gt;cow&lt;/li&gt; 
   &lt;li&gt;fish&lt;/li&gt; 
   &lt;li&gt;crocodilia&lt;/li&gt; 
   &lt;li&gt;insect&lt;/li&gt; 
   &lt;li&gt;rabbit&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;commerce 
  &lt;ul&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;department&lt;/li&gt; 
   &lt;li&gt;productName&lt;/li&gt; 
   &lt;li&gt;price&lt;/li&gt; 
   &lt;li&gt;productAdjective&lt;/li&gt; 
   &lt;li&gt;productMaterial&lt;/li&gt; 
   &lt;li&gt;product&lt;/li&gt; 
   &lt;li&gt;productDescription&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;company 
  &lt;ul&gt; 
   &lt;li&gt;suffixes&lt;/li&gt; 
   &lt;li&gt;companyName&lt;/li&gt; 
   &lt;li&gt;companySuffix&lt;/li&gt; 
   &lt;li&gt;catchPhrase&lt;/li&gt; 
   &lt;li&gt;bs&lt;/li&gt; 
   &lt;li&gt;catchPhraseAdjective&lt;/li&gt; 
   &lt;li&gt;catchPhraseDescriptor&lt;/li&gt; 
   &lt;li&gt;catchPhraseNoun&lt;/li&gt; 
   &lt;li&gt;bsAdjective&lt;/li&gt; 
   &lt;li&gt;bsBuzz&lt;/li&gt; 
   &lt;li&gt;bsNoun&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;database 
  &lt;ul&gt; 
   &lt;li&gt;column&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
   &lt;li&gt;collation&lt;/li&gt; 
   &lt;li&gt;engine&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;datatype 
  &lt;ul&gt; 
   &lt;li&gt;number&lt;/li&gt; 
   &lt;li&gt;float&lt;/li&gt; 
   &lt;li&gt;datetime&lt;/li&gt; 
   &lt;li&gt;string&lt;/li&gt; 
   &lt;li&gt;uuid&lt;/li&gt; 
   &lt;li&gt;boolean&lt;/li&gt; 
   &lt;li&gt;hexaDecimal&lt;/li&gt; 
   &lt;li&gt;json&lt;/li&gt; 
   &lt;li&gt;array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;date 
  &lt;ul&gt; 
   &lt;li&gt;past&lt;/li&gt; 
   &lt;li&gt;future&lt;/li&gt; 
   &lt;li&gt;between&lt;/li&gt; 
   &lt;li&gt;betweens&lt;/li&gt; 
   &lt;li&gt;recent&lt;/li&gt; 
   &lt;li&gt;soon&lt;/li&gt; 
   &lt;li&gt;month&lt;/li&gt; 
   &lt;li&gt;weekday&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;fake&lt;/li&gt; 
 &lt;li&gt;finance 
  &lt;ul&gt; 
   &lt;li&gt;account&lt;/li&gt; 
   &lt;li&gt;accountName&lt;/li&gt; 
   &lt;li&gt;routingNumber&lt;/li&gt; 
   &lt;li&gt;mask&lt;/li&gt; 
   &lt;li&gt;amount&lt;/li&gt; 
   &lt;li&gt;transactionType&lt;/li&gt; 
   &lt;li&gt;currencyCode&lt;/li&gt; 
   &lt;li&gt;currencyName&lt;/li&gt; 
   &lt;li&gt;currencySymbol&lt;/li&gt; 
   &lt;li&gt;bitcoinAddress&lt;/li&gt; 
   &lt;li&gt;litecoinAddress&lt;/li&gt; 
   &lt;li&gt;creditCardNumber&lt;/li&gt; 
   &lt;li&gt;creditCardCVV&lt;/li&gt; 
   &lt;li&gt;ethereumAddress&lt;/li&gt; 
   &lt;li&gt;iban&lt;/li&gt; 
   &lt;li&gt;bic&lt;/li&gt; 
   &lt;li&gt;transactionDescription&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;git 
  &lt;ul&gt; 
   &lt;li&gt;branch&lt;/li&gt; 
   &lt;li&gt;commitEntry&lt;/li&gt; 
   &lt;li&gt;commitMessage&lt;/li&gt; 
   &lt;li&gt;commitSha&lt;/li&gt; 
   &lt;li&gt;shortSha&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;hacker 
  &lt;ul&gt; 
   &lt;li&gt;abbreviation&lt;/li&gt; 
   &lt;li&gt;adjective&lt;/li&gt; 
   &lt;li&gt;noun&lt;/li&gt; 
   &lt;li&gt;verb&lt;/li&gt; 
   &lt;li&gt;ingverb&lt;/li&gt; 
   &lt;li&gt;phrase&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;helpers 
  &lt;ul&gt; 
   &lt;li&gt;randomize&lt;/li&gt; 
   &lt;li&gt;slugify&lt;/li&gt; 
   &lt;li&gt;replaceSymbolWithNumber&lt;/li&gt; 
   &lt;li&gt;replaceSymbols&lt;/li&gt; 
   &lt;li&gt;replaceCreditCardSymbols&lt;/li&gt; 
   &lt;li&gt;repeatString&lt;/li&gt; 
   &lt;li&gt;regexpStyleStringParse&lt;/li&gt; 
   &lt;li&gt;shuffle&lt;/li&gt; 
   &lt;li&gt;mustache&lt;/li&gt; 
   &lt;li&gt;createCard&lt;/li&gt; 
   &lt;li&gt;contextualCard&lt;/li&gt; 
   &lt;li&gt;userCard&lt;/li&gt; 
   &lt;li&gt;createTransaction&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;image 
  &lt;ul&gt; 
   &lt;li&gt;image&lt;/li&gt; 
   &lt;li&gt;avatar&lt;/li&gt; 
   &lt;li&gt;imageUrl&lt;/li&gt; 
   &lt;li&gt;abstract&lt;/li&gt; 
   &lt;li&gt;animals&lt;/li&gt; 
   &lt;li&gt;business&lt;/li&gt; 
   &lt;li&gt;cats&lt;/li&gt; 
   &lt;li&gt;city&lt;/li&gt; 
   &lt;li&gt;food&lt;/li&gt; 
   &lt;li&gt;nightlife&lt;/li&gt; 
   &lt;li&gt;fashion&lt;/li&gt; 
   &lt;li&gt;people&lt;/li&gt; 
   &lt;li&gt;nature&lt;/li&gt; 
   &lt;li&gt;sports&lt;/li&gt; 
   &lt;li&gt;technics&lt;/li&gt; 
   &lt;li&gt;transport&lt;/li&gt; 
   &lt;li&gt;dataUri&lt;/li&gt; 
   &lt;li&gt;lorempixel&lt;/li&gt; 
   &lt;li&gt;unsplash&lt;/li&gt; 
   &lt;li&gt;lorempicsum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;internet 
  &lt;ul&gt; 
   &lt;li&gt;avatar&lt;/li&gt; 
   &lt;li&gt;email&lt;/li&gt; 
   &lt;li&gt;exampleEmail&lt;/li&gt; 
   &lt;li&gt;userName&lt;/li&gt; 
   &lt;li&gt;protocol&lt;/li&gt; 
   &lt;li&gt;httpMethod&lt;/li&gt; 
   &lt;li&gt;url&lt;/li&gt; 
   &lt;li&gt;domainName&lt;/li&gt; 
   &lt;li&gt;domainSuffix&lt;/li&gt; 
   &lt;li&gt;domainWord&lt;/li&gt; 
   &lt;li&gt;ip&lt;/li&gt; 
   &lt;li&gt;ipv6&lt;/li&gt; 
   &lt;li&gt;port&lt;/li&gt; 
   &lt;li&gt;userAgent&lt;/li&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;mac&lt;/li&gt; 
   &lt;li&gt;password&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;lorem 
  &lt;ul&gt; 
   &lt;li&gt;word&lt;/li&gt; 
   &lt;li&gt;words&lt;/li&gt; 
   &lt;li&gt;sentence&lt;/li&gt; 
   &lt;li&gt;slug&lt;/li&gt; 
   &lt;li&gt;sentences&lt;/li&gt; 
   &lt;li&gt;paragraph&lt;/li&gt; 
   &lt;li&gt;paragraphs&lt;/li&gt; 
   &lt;li&gt;text&lt;/li&gt; 
   &lt;li&gt;lines&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;mersenne 
  &lt;ul&gt; 
   &lt;li&gt;rand&lt;/li&gt; 
   &lt;li&gt;seed&lt;/li&gt; 
   &lt;li&gt;seed_array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;music 
  &lt;ul&gt; 
   &lt;li&gt;genre&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;name 
  &lt;ul&gt; 
   &lt;li&gt;firstName&lt;/li&gt; 
   &lt;li&gt;lastName&lt;/li&gt; 
   &lt;li&gt;middleName&lt;/li&gt; 
   &lt;li&gt;findName&lt;/li&gt; 
   &lt;li&gt;jobTitle&lt;/li&gt; 
   &lt;li&gt;gender&lt;/li&gt; 
   &lt;li&gt;prefix&lt;/li&gt; 
   &lt;li&gt;suffix&lt;/li&gt; 
   &lt;li&gt;title&lt;/li&gt; 
   &lt;li&gt;jobDescriptor&lt;/li&gt; 
   &lt;li&gt;jobArea&lt;/li&gt; 
   &lt;li&gt;jobType&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;phone 
  &lt;ul&gt; 
   &lt;li&gt;phoneNumber&lt;/li&gt; 
   &lt;li&gt;phoneNumberFormat&lt;/li&gt; 
   &lt;li&gt;phoneFormats&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;system 
  &lt;ul&gt; 
   &lt;li&gt;fileName&lt;/li&gt; 
   &lt;li&gt;commonFileName&lt;/li&gt; 
   &lt;li&gt;mimeType&lt;/li&gt; 
   &lt;li&gt;commonFileType&lt;/li&gt; 
   &lt;li&gt;commonFileExt&lt;/li&gt; 
   &lt;li&gt;fileType&lt;/li&gt; 
   &lt;li&gt;fileExt&lt;/li&gt; 
   &lt;li&gt;directoryPath&lt;/li&gt; 
   &lt;li&gt;filePath&lt;/li&gt; 
   &lt;li&gt;semver&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;time 
  &lt;ul&gt; 
   &lt;li&gt;recent&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;unique&lt;/li&gt; 
 &lt;li&gt;vehicle 
  &lt;ul&gt; 
   &lt;li&gt;vehicle&lt;/li&gt; 
   &lt;li&gt;manufacturer&lt;/li&gt; 
   &lt;li&gt;model&lt;/li&gt; 
   &lt;li&gt;type&lt;/li&gt; 
   &lt;li&gt;fuel&lt;/li&gt; 
   &lt;li&gt;vin&lt;/li&gt; 
   &lt;li&gt;color&lt;/li&gt; 
   &lt;li&gt;vrm&lt;/li&gt; 
   &lt;li&gt;bicycle&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Faker.fake()&lt;/h3&gt; 
&lt;p&gt;faker.js contains a super useful generator method &lt;code&gt;Faker.fake&lt;/code&gt; for combining faker API methods using a mustache string format.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(faker.fake(&quot;{{name.lastName}}, {{name.firstName}} {{name.suffix}}&quot;));
// outputs: &quot;Marks, Dean Sr.&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will interpolate the format string with the value of methods &lt;code&gt;name.lastName()&lt;/code&gt;, &lt;code&gt;name.firstName()&lt;/code&gt;, and &lt;code&gt;name.suffix()&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;As of version &lt;code&gt;v2.0.0&lt;/code&gt; faker.js has support for multiple localities.&lt;/p&gt; 
&lt;p&gt;The default language locale is set to English.&lt;/p&gt; 
&lt;p&gt;Setting a new locale is simple:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// sets locale to de
faker.locale = &quot;de&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;az&lt;/li&gt; 
 &lt;li&gt;ar&lt;/li&gt; 
 &lt;li&gt;cz&lt;/li&gt; 
 &lt;li&gt;de&lt;/li&gt; 
 &lt;li&gt;de_AT&lt;/li&gt; 
 &lt;li&gt;de_CH&lt;/li&gt; 
 &lt;li&gt;en&lt;/li&gt; 
 &lt;li&gt;en_AU&lt;/li&gt; 
 &lt;li&gt;en_AU_ocker&lt;/li&gt; 
 &lt;li&gt;en_BORK&lt;/li&gt; 
 &lt;li&gt;en_CA&lt;/li&gt; 
 &lt;li&gt;en_GB&lt;/li&gt; 
 &lt;li&gt;en_IE&lt;/li&gt; 
 &lt;li&gt;en_IND&lt;/li&gt; 
 &lt;li&gt;en_US&lt;/li&gt; 
 &lt;li&gt;en_ZA&lt;/li&gt; 
 &lt;li&gt;es&lt;/li&gt; 
 &lt;li&gt;es_MX&lt;/li&gt; 
 &lt;li&gt;fa&lt;/li&gt; 
 &lt;li&gt;fi&lt;/li&gt; 
 &lt;li&gt;fr&lt;/li&gt; 
 &lt;li&gt;fr_CA&lt;/li&gt; 
 &lt;li&gt;fr_CH&lt;/li&gt; 
 &lt;li&gt;ge&lt;/li&gt; 
 &lt;li&gt;hy&lt;/li&gt; 
 &lt;li&gt;hr&lt;/li&gt; 
 &lt;li&gt;id_ID&lt;/li&gt; 
 &lt;li&gt;it&lt;/li&gt; 
 &lt;li&gt;ja&lt;/li&gt; 
 &lt;li&gt;ko&lt;/li&gt; 
 &lt;li&gt;nb_NO&lt;/li&gt; 
 &lt;li&gt;ne&lt;/li&gt; 
 &lt;li&gt;nl&lt;/li&gt; 
 &lt;li&gt;nl_BE&lt;/li&gt; 
 &lt;li&gt;pl&lt;/li&gt; 
 &lt;li&gt;pt_BR&lt;/li&gt; 
 &lt;li&gt;pt_PT&lt;/li&gt; 
 &lt;li&gt;ro&lt;/li&gt; 
 &lt;li&gt;ru&lt;/li&gt; 
 &lt;li&gt;sk&lt;/li&gt; 
 &lt;li&gt;sv&lt;/li&gt; 
 &lt;li&gt;tr&lt;/li&gt; 
 &lt;li&gt;uk&lt;/li&gt; 
 &lt;li&gt;vi&lt;/li&gt; 
 &lt;li&gt;zh_CN&lt;/li&gt; 
 &lt;li&gt;zh_TW&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Individual Localization Packages&lt;/h3&gt; 
&lt;p&gt;faker.js supports incremental loading of locales.&lt;/p&gt; 
&lt;p&gt;By default, requiring &lt;code&gt;faker&lt;/code&gt; will include &lt;em&gt;all&lt;/em&gt; locale data.&lt;/p&gt; 
&lt;p&gt;In a production environment, you may only want to include the locale data for a specific set of locales.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// loads only de locale
var faker = require(&#39;faker/locale/de&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Setting a randomness seed&lt;/h2&gt; 
&lt;p&gt;If you want consistent results, you can set your own seed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;faker.seed(123);

var firstRandom = faker.datatype.number();

// Setting the seed again resets the sequence.
faker.seed(123);

var secondRandom = faker.datatype.number();

console.log(firstRandom === secondRandom);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install .
npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can view a code coverage report generated in coverage/lcov-report/index.html.&lt;/p&gt; 
&lt;h2&gt;Building faker.js&lt;/h2&gt; 
&lt;p&gt;faker uses &lt;a href=&quot;http://gulpjs.com/&quot;&gt;gulp&lt;/a&gt; to automate its build process. Each build operation is a separate task which can be run independently.&lt;/p&gt; 
&lt;h3&gt;Browser Bundle&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run browser
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building JSDocs&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://jsdoc.app/&quot;&gt;JSDOC&lt;/a&gt; v3 HTML API documentation&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run jsdoc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building ReadMe&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;ReadMe.md&lt;/code&gt; file for &lt;code&gt;faker.js&lt;/code&gt; is automatically generated and should not be modified directly. All updates to &lt;code&gt;ReadMe.md&lt;/code&gt; should be performed in &lt;code&gt;./build/src/docs.md&lt;/code&gt; and then the build script should be run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm run readme
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Version Release Schedule&lt;/h2&gt; 
&lt;p&gt;faker.js is a popular project used by many organizations and individuals in production settings. Major and Minor version releases are generally on a monthly schedule. Bugs fixes are addressed by severity and fixed as soon as possible.&lt;/p&gt; 
&lt;p&gt;If you require the absolute latest version of &lt;code&gt;faker.js&lt;/code&gt; the &lt;code&gt;master&lt;/code&gt; branch @ &lt;a href=&quot;http://github.com/marak/faker.js/&quot;&gt;http://github.com/marak/faker.js/&lt;/a&gt; should always be up to date and working.&lt;/p&gt; 
&lt;h2&gt;Maintainer&lt;/h2&gt; 
&lt;h4&gt;Marak Squires&lt;/h4&gt; 
&lt;p&gt;faker.js - Copyright (c) 2020 Marak Squires &lt;a href=&quot;http://www.marak.com&quot;&gt;www.marak.com&lt;/a&gt; &lt;a href=&quot;http://github.com/marak/faker.js/&quot;&gt;http://github.com/marak/faker.js/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;faker.js was inspired by and has used data definitions from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stympy/faker/&quot;&gt;https://github.com/stympy/faker/&lt;/a&gt; - Copyright (c) 2007-2010 Benjamin Curtis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://search.cpan.org/~jasonk/Data-Faker-0.07/&quot;&gt;http://search.cpan.org/~jasonk/Data-Faker-0.07/&lt;/a&gt; - Copyright 2004-2005 by Jason Kohles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&quot;https://opencollective.com/fakerjs#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/fakerjs/backer/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/10/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/11/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/12/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/13/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/14/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/15/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/16/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/17/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/18/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/19/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/20/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/21/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/22/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/23/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/24/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/25/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/26/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/27/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/28/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/backer/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/backer/29/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&quot;https://opencollective.com/fakerjs#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/10/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/11/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/12/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/13/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/14/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/15/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/16/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/17/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/18/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/19/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/20/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/21/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/22/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/23/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/24/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/25/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/26/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/27/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/28/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/fakerjs/sponsor/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/fakerjs/sponsor/29/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typescript-cheatsheets/react</title>
      <link>https://github.com/typescript-cheatsheets/react</link>
      <description>&lt;p&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;React+TypeScript Cheatsheets&lt;/h1&gt; 
 &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/81&quot;&gt; &lt;img height=&quot;90&quot; width=&quot;90&quot; alt=&quot;react + ts logo&quot; src=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot; align=&quot;left&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/setup&quot;&gt;&lt;strong&gt;Web docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/fi3ework/blog/tree/master/react-typescript-cheatsheet-cn&quot;&gt;中文翻译&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet-es&quot;&gt;&lt;strong&gt;Español&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-pt&quot;&gt;&lt;strong&gt;Português&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/CONTRIBUTING.md&quot;&gt;Contribute!&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;Ask!&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;span&gt;👋&lt;/span&gt; This repo is maintained by &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;@swyx&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ferdaber&quot;&gt;@ferdaber&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sebsilbermann&quot;&gt;@eps1lon&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jsjoeio&quot;&gt;@jsjoeio&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/_arvindone&quot;&gt;@arvind-one&lt;/a&gt;, we&#39;re so happy you want to try out TypeScript with React! If you see anything wrong or missing, please &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;file an issue&lt;/a&gt;! &lt;span&gt;👍&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/typescript-cheatsheets/react-typescript-cheatsheet?color=orange&amp;amp;style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/wTGS5z9&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/508357248330760243.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;http://twitter.com/home?status=Awesome%20%40Reactjs%20%2B%20%40TypeScript%20cheatsheet%20by%20%40ferdaber%2C%20%40sebsilbermann%2C%20%40swyx%20%26%20others!%20https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url?label=Help%20spread%20the%20word%21&amp;amp;style=social&amp;amp;url=https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot; alt=&quot;Tweet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;All React + TypeScript Cheatsheets&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;The Basic Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/README.md#basic-cheatsheet-table-of-contents&quot;&gt;&lt;code&gt;/README.md&lt;/code&gt;&lt;/a&gt;) is focused on helping React devs just start using TS in React &lt;strong&gt;apps&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Focus on opinionated best practices, copy+pastable examples.&lt;/li&gt; 
   &lt;li&gt;Explains some basic TS types usage and setup along the way.&lt;/li&gt; 
   &lt;li&gt;Answers the most Frequently Asked Questions.&lt;/li&gt; 
   &lt;li&gt;Does not cover generic type logic in detail. Instead we prefer to teach simple troubleshooting techniques for newbies.&lt;/li&gt; 
   &lt;li&gt;The goal is to get effective with TS without learning &lt;em&gt;too much&lt;/em&gt; TS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Advanced Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro&quot;&gt;&lt;code&gt;/ADVANCED.md&lt;/code&gt;&lt;/a&gt;) helps show and explain advanced usage of generic types for people writing reusable type utilities/functions/render prop/higher order components and TS+React &lt;strong&gt;libraries&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It also has miscellaneous tips and tricks for pro users.&lt;/li&gt; 
   &lt;li&gt;Advice for contributing to DefinitelyTyped.&lt;/li&gt; 
   &lt;li&gt;The goal is to take &lt;em&gt;full advantage&lt;/em&gt; of TypeScript.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Migrating Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/intro&quot;&gt;&lt;code&gt;/MIGRATING.md&lt;/code&gt;&lt;/a&gt;) helps collate advice for incrementally migrating large codebases from JS or Flow, &lt;strong&gt;from people who have done it&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;We do not try to convince people to switch, only to help people who have already decided.&lt;/li&gt; 
   &lt;li&gt;⚠️This is a new cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The HOC Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/hoc/intro&quot;&gt;&lt;code&gt;/HOC.md&lt;/code&gt;&lt;/a&gt;) specifically teaches people to write HOCs with examples. 
  &lt;ul&gt; 
   &lt;li&gt;Familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/generics.html&quot;&gt;Generics&lt;/a&gt; is necessary.&lt;/li&gt; 
   &lt;li&gt;⚠️This is the newest cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;Basic Cheatsheet Table of Contents&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Expand Table of Contents&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-1-setup-typescript-with-react&quot;&gt;Section 1: Setup TypeScript with React&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usestate&quot;&gt;useState&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usereducer&quot;&gt;useReducer&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useeffect&quot;&gt;useEffect&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useref&quot;&gt;useRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useimperativehandle&quot;&gt;useImperativeHandle&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#custom-hooks&quot;&gt;Custom Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#you-may-not-need-defaultprops&quot;&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#consuming-props-of-a-component-with-defaultprops&quot;&gt;Consuming Props of a Component with defaultProps&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#problem-statement&quot;&gt;Problem Statement&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#solution&quot;&gt;Solution&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#misc-discussions-and-knowledge&quot;&gt;Misc Discussions and Knowledge&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getderivedstatefromprops&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-example&quot;&gt;Basic Example&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#extended-example&quot;&gt;Extended Example&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#option-1-using-react-error-boundary&quot;&gt;Option 1: Using react-error-boundary&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#options-2-writing-your-custom-error-boundary-component&quot;&gt;Options 2: Writing your custom error boundary component&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-types&quot;&gt;Troubleshooting Handbook: Types&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilities&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-fixing-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-globals-images-and-other-non-ts-files&quot;&gt;Troubleshooting Handbook: Globals, Images and other non-TS files&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources-1&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;!--START-SECTION:setup-toc--&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#vs-code-extensions&quot;&gt;VS Code Extensions&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#video-tutorial&quot;&gt;Video Tutorial&lt;/a&gt;
     &lt;!--END-SECTION:setup-toc--&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing defaultProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#types-or-interfaces&quot;&gt;Types or Interfaces?&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getDerivedStateFromProps&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-troubleshooting-handbook-types&quot;&gt;Basic Troubleshooting Handbook: Types&lt;/a&gt; 
   &lt;!--START-SECTION:types-toc--&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#frequent-known-problems-with-typescript&quot;&gt;Frequent Known Problems with TypeScript&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typescript-doesnt-narrow-after-an-object-element-null-check&quot;&gt;TypeScript doesn&#39;t narrow after an object element null check&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typescript-doesnt-let-you-restrict-the-type-of-children&quot;&gt;TypeScript doesn&#39;t let you restrict the type of children&lt;/a&gt;
       &lt;!--END-SECTION:types-toc--&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilties&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Bugs in official typings&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-codebases-to-learn-from&quot;&gt;Recommended React + TypeScript codebases to learn from&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;!--START-SECTION:setup--&gt; 
&lt;h1&gt;Section 1: Setup TypeScript with React&lt;/h1&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;good understanding of &lt;a href=&quot;https://reactjs.org&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/2/everyday-types.html&quot;&gt;TypeScript Types&lt;/a&gt; (&lt;a href=&quot;http://2ality.com/2018/04/type-notation-typescript.html&quot;&gt;2ality&#39;s guide&lt;/a&gt; is helpful. If you’re an absolute beginner in TypeScript, check out &lt;a href=&quot;https://ts.chibicode.com/todo/&quot;&gt;chibicode’s tutorial&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;https://reactjs.org/docs/static-type-checking.html#typescript&quot;&gt;the TypeScript section in the official React docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=2&amp;amp;esModuleInterop=true&amp;amp;e=181#example/typescript-with-react&quot;&gt;the React section of the new TypeScript playground&lt;/a&gt; (optional: also step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This guide will always assume you are starting with the latest TypeScript version. Notes for older versions will be in expandable &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tags.&lt;/p&gt; 
&lt;h2&gt;VS Code Extensions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;refactoring help &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&quot;&gt;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;R+TS Code Snippets (there are a few...) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=infeng.vscode-react-typescript&quot;&gt;https://marketplace.visualstudio.com/items?itemName=infeng.vscode-react-typescript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/the-best-react-extension-for-vs-code&quot;&gt;https://www.digitalocean.com/community/tutorials/the-best-react-extension-for-vs-code&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;TypeScript official extension &lt;a href=&quot;https://code.visualstudio.com/docs/languages/typescript&quot;&gt;https://code.visualstudio.com/docs/languages/typescript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;React + TypeScript Starter Kits&lt;/h2&gt; 
&lt;p&gt;Cloud setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcA5FDvmQNwCwAUKJLHAN5wCuqWAyjMhhYANFx4BRAgSz44AXzhES5Snhi1GjLAA8W8XBAB2qeAGEInQ0KjjtycABsscALxwAFAEpXAPnaM4OANjeABtA0sYUR4Yc0iAXVcxPgEhdwAGT3oGAOTJaXx3L19-BkDAgBMIXE4QLCsAOhhgGCckgAMATQsgh2BcAGssCrgAEjYIqwVmutR27MC5LM0yuEoYTihDD1zAgB4K4AA3H13yvbAfbs5e-qGRiYspuBmsVD2Aekuz-YAjThgMCMcCMpj6gxcbGKLj8MTiVnck3gAGo4ABGTxyU6rcrlMF3OB1H5wT7-QFGbG4z6HE65ZYMOSMIA&quot;&gt;TypeScript Playground with React&lt;/a&gt; just if you are debugging types (and reporting issues), not for running code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ts.react.new&quot;&gt;CodeSandbox&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackblitz.com/edit/react-typescript-base&quot;&gt;Stackblitz&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Local dev setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextjs.org/docs/basic-features/typescript&quot;&gt;Next.js&lt;/a&gt;: &lt;code&gt;npx create-next-app -e with-typescript&lt;/code&gt; will create in your current folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/adding-typescript&quot;&gt;Create React App&lt;/a&gt;: &lt;code&gt;npx create-react-app name-of-app --template typescript&lt;/code&gt; will create in new folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guide.meteor.com/build-tool.html#typescript&quot;&gt;Meteor&lt;/a&gt;: &lt;code&gt;meteor create --typescript name-of-my-new-typescript-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/infinitered/ignite#use-ignite-andross-infinite-red-andross-boilerplate&quot;&gt;Ignite&lt;/a&gt; for React Native: &lt;code&gt;ignite new myapp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tsdx.io/&quot;&gt;TSDX&lt;/a&gt;: &lt;code&gt;npx tsdx create mylib&lt;/code&gt; for Creating React+TS &lt;em&gt;libraries&lt;/em&gt;. (in future: &lt;a href=&quot;https://twitter.com/jaredpalmer/status/1346217789942591488&quot;&gt;TurboRepo&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt; Other tools &lt;/summary&gt; 
 &lt;p&gt;Less mature tools still worth checking out:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/swyx/status/1282727239230996480?lang=en&quot;&gt;Vite&lt;/a&gt;: &lt;code&gt;npm init vite-app my-react-project --template react-ts&lt;/code&gt; (note - not yet v1.0, but very fast)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/#create-snowpack-app-(csa)&quot;&gt;Snowpack&lt;/a&gt;: &lt;code&gt;npx create-snowpack-app my-app --template app-template-react-typescript&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://v2.docusaurus.io/docs/installation&quot;&gt;Docusaurus v2&lt;/a&gt; with &lt;a href=&quot;https://v2.docusaurus.io/docs/typescript-support&quot;&gt;TypeScript Support&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://v2.parceljs.org/languages/typescript/&quot;&gt;Parcel&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/jpmorganchase/modular&quot;&gt;JP Morgan&#39;s &lt;code&gt;modular&lt;/code&gt;&lt;/a&gt;: CRA + TS + Yarn Workspaces toolkit. &lt;code&gt;yarn create modular-react-app &amp;lt;project-name&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Manual setup:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/basarat/typescript-react/tree/master/01%20bootstrap&quot;&gt;Basarat&#39;s guide&lt;/a&gt; for &lt;strong&gt;manual setup&lt;/strong&gt; of React + TypeScript + Webpack + Babel&lt;/li&gt; 
  &lt;li&gt;In particular, make sure that you have &lt;code&gt;@types/react&lt;/code&gt; and &lt;code&gt;@types/react-dom&lt;/code&gt; installed (&lt;a href=&quot;https://definitelytyped.org/&quot;&gt;Read more about the DefinitelyTyped project if you are unfamiliar&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;There are also many React + TypeScript boilerplates, please see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/recommended/resources/&quot;&gt;our Other Resources list&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Import React&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;
import * as ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href=&quot;https://www.reddit.com/r/reactjs/comments/iyehol/import_react_from_react_will_go_away_in_distant/&quot;&gt;most futureproof way&lt;/a&gt; to import React. If you set &lt;code&gt;--allowSyntheticDefaultImports&lt;/code&gt; (or add &lt;code&gt;&quot;allowSyntheticDefaultImports&quot;: true&lt;/code&gt;) in your &lt;code&gt;tsconfig.json&lt;/code&gt; you can use more familiar imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Explanation&lt;/summary&gt; 
 &lt;p&gt;Why &lt;code&gt;allowSyntheticDefaultImports&lt;/code&gt; over &lt;code&gt;esModuleInterop&lt;/code&gt;? &lt;a href=&quot;https://twitter.com/drosenwasser/status/1003097042653073408&quot;&gt;Daniel Rosenwasser&lt;/a&gt; has said that it&#39;s better for webpack/parcel. For more discussion check out &lt;a href=&quot;https://github.com/wmonk/create-react-app-typescript/issues/214&quot;&gt;https://github.com/wmonk/create-react-app-typescript/issues/214&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;You should also check &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;the new TypeScript docs for official descriptions between each compiler flag&lt;/a&gt;!&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Video Tutorial&lt;/h2&gt; 
&lt;p&gt;Have a look at the 7-part &quot;React Typescript Course&quot; video series below for an introduction to TypeScript with React.&lt;/p&gt; 
&lt;a href=&quot;https://www.youtube.com/watch?v=PL1NUl7fQ2I&amp;amp;list=PLG-Mk4wQm9_LyKE5EwoZz2_GGXR-zJ5Ml&quot;&gt; &lt;img width=&quot;200px&quot; alt=&quot;react typescript course video series&quot; src=&quot;https://i.imgur.com/IIG0Xu9.jpeg&quot;&gt; &lt;/a&gt; 
&lt;!--END-SECTION:setup--&gt; 
&lt;h1&gt;Section 2: Getting Started&lt;/h1&gt; 
&lt;!--START-SECTION:function-components--&gt; 
&lt;h2&gt;Function Components&lt;/h2&gt; 
&lt;p&gt;These can be written as normal functions that take a &lt;code&gt;props&lt;/code&gt; argument and return a JSX element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// Declaring type of props - see &quot;Typing Component Props&quot; for more examples
type AppProps = {
  message: string;
}; /* use `interface` if exporting so that consumers can extend */

// Easiest way to declare a Function Component; return type is inferred.
const App = ({ message }: AppProps) =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;

// you can choose annotate the return type so an error is raised if you accidentally return some other type
const App = ({ message }: AppProps): JSX.Element =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;

// you can also inline the type declaration; eliminates naming the prop types, but looks repetitive
const App = ({ message }: { message: string }) =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tip: You might use &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&quot;&gt;Paul Shen&#39;s VS Code Extension&lt;/a&gt; to automate the type destructure declaration (incl a &lt;a href=&quot;https://twitter.com/_paulshen/status/1392915279466745857?s=20&quot;&gt;keyboard shortcut&lt;/a&gt;).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why is `React.FC` discouraged? What about `React.FunctionComponent`/`React.VoidFunctionComponent`?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You may see this in many React+TypeScript codebases:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const App: React.FunctionComponent&amp;lt;{ message: string }&amp;gt; = ({ message }) =&amp;gt; (
  &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;However, the general consensus today is that &lt;code&gt;React.FunctionComponent&lt;/code&gt; (or the shorthand &lt;code&gt;React.FC&lt;/code&gt;) is &lt;a href=&quot;https://github.com/facebook/create-react-app/pull/8177&quot;&gt;discouraged&lt;/a&gt;. This is a nuanced opinion of course, but if you agree and want to remove &lt;code&gt;React.FC&lt;/code&gt; from your codebase, you can use &lt;a href=&quot;https://github.com/gndelia/codemod-replace-react-fc-typescript&quot;&gt;this jscodeshift codemod&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Some differences from the &quot;normal function&quot; version:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;React.FunctionComponent&lt;/code&gt; is explicit about the return type, while the normal function version is implicit (or else needs additional annotation).&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;It provides typechecking and autocomplete for static properties like &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;propTypes&lt;/code&gt;, and &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Note that there are some known issues using &lt;code&gt;defaultProps&lt;/code&gt; with &lt;code&gt;React.FunctionComponent&lt;/code&gt;. See &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&quot;&gt;this issue for details&lt;/a&gt;. We maintain a separate &lt;code&gt;defaultProps&lt;/code&gt; section you can also look up.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;It provides an implicit definition of &lt;code&gt;children&lt;/code&gt; (see below) - however there are some issues with the implicit &lt;code&gt;children&lt;/code&gt; type (e.g. &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33006&quot;&gt;DefinitelyTyped#33006&lt;/a&gt;), and it might be better to be explicit about components that consume &lt;code&gt;children&lt;/code&gt;, anyway.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const Title: React.FunctionComponent&amp;lt;{ title: string }&amp;gt; = ({
  children,
  title,
}) =&amp;gt; &amp;lt;div title={title}&amp;gt;{children}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;details&gt; 
  &lt;summary&gt;Using `React.VoidFunctionComponent` or `React.VFC` instead&lt;/summary&gt; 
  &lt;p&gt;As of &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46643&quot;&gt;@types/react 16.9.48&lt;/a&gt;, you can also use &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; type if you want to type &lt;code&gt;children&lt;/code&gt; explicitly. This is an interim solution until &lt;code&gt;FunctionComponent&lt;/code&gt; will accept no children by default (planned for &lt;code&gt;@types/react@^18.0.0&lt;/code&gt;).&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = { foo: string };

// OK now, in future, error
const FunctionComponent: React.FunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}: Props) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo} {children}
    &amp;lt;/div&amp;gt;
  ); // OK
};

// Error now, in future, deprecated
const VoidFunctionComponent: React.VoidFunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo}
      {children}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;/details&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;em&gt;In the future&lt;/em&gt;, it may&amp;nbsp;automatically mark props as &lt;code&gt;readonly&lt;/code&gt;, though that&#39;s a moot point if the props object is destructured in the parameter list.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;In most cases it makes very little difference which syntax is used, but you may prefer the more explicit nature of &lt;code&gt;React.FunctionComponent&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Minor Pitfalls&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;These patterns are not supported:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Conditional rendering&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyConditionalComponent = ({ shouldRender = false }) =&amp;gt;
  shouldRender ? &amp;lt;div /&amp;gt; : false; // don&#39;t do this in JS either
const el = &amp;lt;MyConditionalComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is because due to limitations in the compiler, function components cannot return anything other than a JSX expression or &lt;code&gt;null&lt;/code&gt;, otherwise it complains with a cryptic error message saying that the other type is not assignable to &lt;code&gt;Element&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Array.fill&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; Array(5).fill(&amp;lt;div /&amp;gt;);
const el2 = &amp;lt;MyArrayComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Unfortunately just annotating the function type will not help so if you really need to return other exotic types that React supports, you&#39;d need to perform a type assertion:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; (Array(5).fill(&amp;lt;div /&amp;gt;) as any) as JSX.Element;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:function-components--&gt; 
&lt;!--START-SECTION:hooks--&gt; 
&lt;h2&gt;Hooks&lt;/h2&gt; 
&lt;p&gt;Hooks are &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L800-L1031&quot;&gt;supported in &lt;code&gt;@types/react&lt;/code&gt; from v16.8 up&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;useState&lt;/h2&gt; 
&lt;p&gt;Type inference works very well for simple values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [val, toggle] = React.useState(false);
// `val` is inferred to be a boolean
// `toggle` only takes booleans
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also the &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/troubleshooting/types/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt; section if you need to use a complex type that you&#39;ve relied on inference for.&lt;/p&gt; 
&lt;p&gt;However, many hooks are initialized with null-ish default values, and you may wonder how to provide types. Explicitly declare the type, and use a union type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [user, setUser] = React.useState&amp;lt;IUser | null&amp;gt;(null);

// later...
setUser(newUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use type assertions if a state is initialized soon after setup and always has a value after:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [user, setUser] = React.useState&amp;lt;IUser&amp;gt;({} as IUser);

// later...
setUser(newUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This temporarily &quot;lies&quot; to the TypeScript compiler that &lt;code&gt;{}&lt;/code&gt; is of type &lt;code&gt;IUser&lt;/code&gt;. You should follow up by setting the &lt;code&gt;user&lt;/code&gt; state — if you don&#39;t, the rest of your code may rely on the fact that &lt;code&gt;user&lt;/code&gt; is of type &lt;code&gt;IUser&lt;/code&gt; and that may lead to runtime errors.&lt;/p&gt; 
&lt;h2&gt;useReducer&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; for reducer actions. Don&#39;t forget to define the return type of reducer, otherwise TypeScript will infer it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const initialState = { count: 0 };

type ACTIONTYPE =
  | { type: &quot;increment&quot;; payload: number }
  | { type: &quot;decrement&quot;; payload: string };

function reducer(state: typeof initialState, action: ACTIONTYPE) {
  switch (action.type) {
    case &quot;increment&quot;:
      return { count: state.count + action.payload };
    case &quot;decrement&quot;:
      return { count: state.count - Number(action.payload) };
    default:
      throw new Error();
  }
}

function Counter() {
  const [state, dispatch] = React.useReducer(reducer, initialState);
  return (
    &amp;lt;&amp;gt;
      Count: {state.count}
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;decrement&quot;, payload: &quot;5&quot; })}&amp;gt;
        -
      &amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;increment&quot;, payload: 5 })}&amp;gt;
        +
      &amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/LAKFEsFsAcHsCcAuACAVMghgZ2QJQKYYDGKAZvLJMgOTyEnUDcooRsAdliuO+IuBgA2AZUQZE+ZAF5kAbzYBXdogBcyAAwBfZmBCIAntEkBBAMIAVAJIB5AHLmAmgAUAotOShkyAD5zkBozVqHiI6SHxlagAaZGgMfUFYDAATNXYFSAAjfHhNDxAvX1l-Q3wg5PxQ-HDImLiEpNTkLngeAHM8ll1SJRJwDmQ6ZIUiHIAKLnEykqNYUmQePgERMQkY4n4ONTMrO0dXAEo5T2aAdz4iAAtkMY3+9gA6APwj2ROvImxJYPYqmsRqCp3l5BvhEAp4Ow5IplGpJhIHjCUABqTB9DgPeqJFLaYGfLDfCp-CIAoEFEFeOjgyHQ2BKVTNVb4RF05TIAC0yFsGWy8Fu6MeWMaB1x5K8FVIGAUglUwK8iEuFFOyHY+GVLngFD5Bx0Xk0oH13V6myhplZEm1x3JbE4KAA2vD8DFkuAsHFEFcALruAgbB4KAkEYajPlDEY5GKLfhCURTHUnKkQqFjYEAHgAfHLkGb6WpZI6WfTDRSvKnMgpEIgBhxTIJwEQANZSWRjI5SdPIF1u8RXMayZ7lSphEnRWLxbFNagAVmomhF6fZqYA9OXKxxM2KQWWK1WoTW643m63pB2u+7e-3SkEQsPamOGik1FO55p08jl6vdxuKcvv8h4yAmhAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Usage with `Reducer` from `redux`&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;In case you use the &lt;a href=&quot;https://github.com/reduxjs/redux&quot;&gt;redux&lt;/a&gt; library to write reducer function, It provides a convenient helper of the format &lt;code&gt;Reducer&amp;lt;State, Action&amp;gt;&lt;/code&gt; which takes care of the return type for you.&lt;/p&gt; 
 &lt;p&gt;So the above reducer example becomes:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Reducer } from &#39;redux&#39;;

export function reducer: Reducer&amp;lt;AppState, Action&amp;gt;() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;useEffect / useLayoutEffect&lt;/h2&gt; 
&lt;p&gt;Both of &lt;code&gt;useEffect&lt;/code&gt; and &lt;code&gt;useLayoutEffect&lt;/code&gt; are used for performing &lt;b&gt;side effects&lt;/b&gt; and return an optional cleanup function which means they don&#39;t deal with returning values, no types are necessary. When using &lt;code&gt;useEffect&lt;/code&gt;, take care not to return anything other than a function or &lt;code&gt;undefined&lt;/code&gt;, otherwise both TypeScript and React will yell at you. This can be subtle when using arrow functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(
    () =&amp;gt;
      setTimeout(() =&amp;gt; {
        /* do stuff */
      }, timerMs),
    [timerMs]
  );
  // bad example! setTimeout implicitly returns a number
  // because the arrow function body isn&#39;t wrapped in curly braces
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Solution to the above example &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(() =&amp;gt; {
    setTimeout(() =&amp;gt; {
      /* do stuff */
    }, timerMs);
  }, [timerMs]);
  // better; use the void keyword to make sure you return undefined
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;useRef&lt;/h2&gt; 
&lt;p&gt;In TypeScript, &lt;code&gt;useRef&lt;/code&gt; returns a reference that is either &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/abd69803c1b710db58d511f4544ec1b70bc9077c/types/react/v16/index.d.ts#L1025-L1039&quot;&gt;read-only&lt;/a&gt; or &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/abd69803c1b710db58d511f4544ec1b70bc9077c/types/react/v16/index.d.ts#L1012-L1023&quot;&gt;mutable&lt;/a&gt;, depends on whether your type argument fully covers the initial value or not. Choose one that suits your use case.&lt;/p&gt; 
&lt;h3&gt;Option 1: DOM element ref&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://reactjs.org/docs/refs-and-the-dom.html&quot;&gt;To access a DOM element&lt;/a&gt;:&lt;/strong&gt; provide only the element type as argument, and use &lt;code&gt;null&lt;/code&gt; as initial value. In this case, the returned reference will have a read-only &lt;code&gt;.current&lt;/code&gt; that is managed by React. TypeScript expects you to give this ref to an element&#39;s &lt;code&gt;ref&lt;/code&gt; prop:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function Foo() {
  // - If possible, prefer as specific as possible. For example, HTMLDivElement
  //   is better than HTMLElement and way better than Element.
  // - Technical-wise, this returns RefObject&amp;lt;HTMLDivElement&amp;gt;
  const divRef = useRef&amp;lt;HTMLDivElement&amp;gt;(null);

  useEffect(() =&amp;gt; {
    // Note that ref.current may be null. This is expected, because you may
    // conditionally render the ref-ed element, or you may forgot to assign it
    if (!divRef.current) throw Error(&quot;divRef is not assigned&quot;);

    // Now divRef.current is sure to be HTMLDivElement
    doSomethingWith(divRef.current);
  });

  // Give the ref to an element so React can manage it for you
  return &amp;lt;div ref={divRef}&amp;gt;etc&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are sure that &lt;code&gt;divRef.current&lt;/code&gt; will never be null, it is also possible to use the non-null assertion operator &lt;code&gt;!&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const divRef = useRef&amp;lt;HTMLDivElement&amp;gt;(null!);
// Later... No need to check if it is null
doSomethingWith(divRef.current);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you are opting out of type safety here - you will have a runtime error if you forget to assign the ref to an element in the render, or if the ref-ed element is conditionally rendered.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;Tip: Choosing which &lt;code&gt;HTMLElement&lt;/code&gt; to use&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;Refs demand specificity - it is not enough to just specify any old &lt;code&gt;HTMLElement&lt;/code&gt;. If you don&#39;t know the name of the element type you need, you can check &lt;a href=&quot;https://github.com/microsoft/TypeScript/raw/v3.9.5/lib/lib.dom.d.ts#L19224-L19343&quot;&gt;lib.dom.ts&lt;/a&gt; or make an intentional type error and let the language service tell you:&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6764957/116914284-1c436380-ac7d-11eb-9150-f52c571c5f07.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Option 2: Mutable value ref&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables&quot;&gt;To have a mutable value&lt;/a&gt;:&lt;/strong&gt; provide the type you want, and make sure the initial value fully belongs to that type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function Foo() {
  // Technical-wise, this returns MutableRefObject&amp;lt;number | null&amp;gt;
  const intervalRef = useRef&amp;lt;number | null&amp;gt;(null);

  // You manage the ref yourself (that&#39;s why it&#39;s called MutableRefObject!)
  useEffect(() =&amp;gt; {
    intervalRef.current = setInterval(...);
    return () =&amp;gt; clearInterval(intervalRef.current);
  }, []);

  // The ref is not passed to any element&#39;s &quot;ref&quot; prop
  return &amp;lt;button onClick={/* clearInterval the ref */}&amp;gt;Cancel timer&amp;lt;/button&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;See also&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/388&quot;&gt;Related issue by @rajivpunjabi&lt;/a&gt; - &lt;a href=&quot;https://www.typescriptlang.org/play#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwCwAUI7hAHarwCCYYcAvHAAUASn4A+OAG9GjOHAD0CBLLnKGcxHABiwKBzgQwMYGxS4WUACbBWAczgwIcSxFwBXEFlYxkxtgDoVTQBJVmBjZAAbOAA3KLcsOAB3YEjogCNE1jc0-zgAGQBPG3tHOAAVQrAsAGVcKGAjOHTCuDdUErhWNgBabLSUVFQsWBNWA2qoX2hA9VU4AGFKXyx0AFk3H3TIxOwCOAB5dIArLHwgpHcoSm84MGJJmFbgdG74ZcsDVkjC2Y01f7yFQsdjvLAEACM-EwVBg-naWD2AB4ABLlNb5GpgZCsACiO083jEgn6kQAhMJ6HMQfpKJCFpE2IkBNg8HCEci0RisTj8VhCTBiaSKVSVIoAaoLnBQuFgFFYvFEikBpkujkMps4FgAB7VfCdLmY7F4gleOFwAByEHg7U63VYfXVg2Go1MhhG0ygf3mAHVUtF6jgYLtwUdTvguta4Bstjs9mGznCpVcbvB7u7YM90B8vj9vYgLkDqWxaeCAEzQ1n4eHDTnoo2801EknqykyObii5SmpnNifA5GMZmCzWOwOJwudwC3xjKUyiLROKRBLJf3NLJO9KanV64xj0koVifQ08k38s1Sv0DJZBxIx5DbRGhk6J5Nua5mu4PEZPOAvSNgsgnxsHmXZzIgRZyDSYIEAAzJWsI1k+BCovWp58gKcAAD5qmkQqtqKHbyCexoYRecw7IQugcAs76ptCdIQv4KZmoRcjyMRaGkU28A4aSKiUXAwwgpYtEfrcAh0mWzF0ax7bsZx3Lceetx8eqAlYPAMAABa6KJskSXAdKwTJ4kwGxCjyKy-bfK05SrDA8mWVagHAbZeScOY0CjqUE6uOgqDaRAOSfKqOYgb8KiMaZ9GSeCEIMkyMVyUwRHWYc7nSvAgUQEk6AjMQXpReWyWGdFLHeBZHEuTCQEZT8xVwaV8BxZCzUWZQMDvuMghBHASJVnCWhTLYApiH1chIqgxpGeCfCSIxAC+Yj3o+8YvvgSLyNNOLjeBGhTTNdLzVJy3reGMBbTtrB7RoB3XbNBAneCsHLatcbPhdV3GrdB1WYhw3IKNZq-W2DCLYRO7QPAljgsgORcDwVJAA&quot;&gt;Playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react/hooks/#useref&quot;&gt;Example from Stefan Baumgartner&lt;/a&gt; - &lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgIilQ3wFgAoCzAVwDsNgJa4AVJADxgElaxqYA6sBgALAGIQ01AM4AhfjCYAKAJRwA3hThwA9DrjBaw4CgA2waUjgB3YSLi1qp0wBo4AI35wYSZ6wCeYEgAymhQwGDw1lYoRHCmEBAA1oYA5nCY0HAozAASLACyADI8fDAAoqZIIEi0MFpwaEzS8IZllXAAvIjEMAB0MkjImAA8+cWl-JXVtTAAfEqOzioA3A1NtC1wTPIwirQAwuZoSV1wql1zGg3aenAt4RgOTqaNIkgn0g5ISAAmcDJvBA3h9TsBMAZeFNXjl-lIoEQ6nAOBZ+jddPpPPAmGgrPDEfAUS1pG5hAYvhAITBAlZxiUoRUqjU6m5RIDhOi7iIUF9RFYaqIIP9MlJpABCOCAUHJ0eDzm1oXAAGSKyHtUx9fGzNSacjaPWq6Ea6gI2Z9EUyVRrXV6gC+DRtVu0RBgxuYSnRIzm6O06h0ACpIdlfr9jExSQyOkxTP5GjkPFZBv9bKIDYSmbNpH04ABNFD+CV+nR2636kby+BETCddTlyo27w0zr4HycfC6L0lvUjLH7baHY5Jas7BRMI7AE42uYSUXed6pkY6HtMDulnQruCrCg2oA&quot;&gt;Playground&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;useImperativeHandle&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;We don&#39;t have much here, but this is from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/106&quot;&gt;a discussion in our issues&lt;/a&gt;. Please contribute if you have anything to add!&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ListProps&amp;lt;ItemType&amp;gt; = {
  items: ItemType[];
  innerRef?: React.Ref&amp;lt;{ scrollToItem(item: ItemType): void }&amp;gt;;
};

function List&amp;lt;ItemType&amp;gt;(props: ListProps&amp;lt;ItemType&amp;gt;) {
  useImperativeHandle(props.innerRef, () =&amp;gt; ({
    scrollToItem() {},
  }));
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom Hooks&lt;/h2&gt; 
&lt;p&gt;If you are returning an array in your Custom Hook, you will want to avoid type inference as TypeScript will infer a union type (when you actually want different types in each position of the array). Instead, use &lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#const-assertions&quot;&gt;TS 3.4 const assertions&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?target=5&amp;amp;jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuRgZyQBkIKACbBmAcwAUASjgBvCnDhoO3eAG1g3AcNFiANHF4wAyjBQwkAXTgBeRMRgA6HklPmkEzCgA2vKQG4FJRV4b0EhWzgJFAAFHBBNJAAuODjcRIAeFGYATwA+GRs8uSDFIzcLCRgoRiQA0rgiGEYoTlj4xMdMUR9vHIlpW2Lys0qvXzr68kUAX0DpxqRm1rgNLXDdAzDhaxRuYOZVfzgAehO4UUwkKH21ACMICG9UZgMYHLAkCEw4baFrUSqVARb5RB5PF5wAA+cHen1BfykaksFBmQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This way, when you destructure you actually get the right types based on destructure position.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Alternative: Asserting a tuple return type&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;If you are &lt;a href=&quot;https://github.com/babel/babel/issues/9800&quot;&gt;having trouble with const assertions&lt;/a&gt;, you can also assert or define the function return types:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as [
    boolean,
    (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; Promise&amp;lt;any&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;A helper function that automatically types tuples can also be helpful if you write a lot of custom hooks:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function tuplify&amp;lt;T extends any[]&amp;gt;(...elements: T) {
  return elements;
}

function useArray() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return [numberValue, functionValue]; // type is (number | (() =&amp;gt; void))[]
}

function useTuple() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return tuplify(numberValue, functionValue); // type is [number, () =&amp;gt; void]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Note that the React team recommends that custom hooks that return more than two values should use proper objects instead of tuples, however.&lt;/p&gt; 
&lt;h2&gt;More Hooks + TypeScript reading:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@jrwebdev/react-hooks-in-typescript-88fce7001d0d&quot;&gt;https://medium.com/@jrwebdev/react-hooks-in-typescript-88fce7001d0d&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react/hooks/#useref&quot;&gt;https://fettblog.eu/typescript-react/hooks/#useref&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are writing a React Hooks library, don&#39;t forget that you should also expose your types for users to use.&lt;/p&gt; 
&lt;h2&gt;Example React Hooks + TypeScript Libraries:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mweststrate/use-st8&quot;&gt;https://github.com/mweststrate/use-st8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/the-platform&quot;&gt;https://github.com/palmerhq/the-platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sw-yx/hooks&quot;&gt;https://github.com/sw-yx/hooks&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:hooks--&gt; 
&lt;!--START-SECTION:class-components--&gt; 
&lt;h2&gt;Class Components&lt;/h2&gt; 
&lt;p&gt;Within TypeScript, &lt;code&gt;React.Component&lt;/code&gt; is a generic type (aka &lt;code&gt;React.Component&amp;lt;PropType, StateType&amp;gt;&lt;/code&gt;), so you want to provide it with (optional) prop and state type parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  // using `interface` is also ok
  message: string;
};
type MyState = {
  count: number; // like this
};
class App extends React.Component&amp;lt;MyProps, MyState&amp;gt; {
  state: MyState = {
    // optional second annotation for better type inference
    count: 0,
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgFlqAFHMAZzgF44BvCuHAD0QuAFd2wAHYBzOAANpMJFEzok8uME4oANuwhwIAawFwQSduxQykALjjsYUaTIDcFAL4fyNOo2oAZRgUZW4+MzQIMSkYBykxEAAjFTdhUV1gY3oYAAttLx80XRQrOABBMDA4JAAPZSkAE05kdBgAOgBhXEgpJFiAHiZWCA4AGgDg0KQAPgjyQSdphyYpsJ5+BcF0ozAYYAgpPUckKKa4FCkpCBD9w7hMaDgUmGUoOD96aUwVfrQkMyCKIxOJwAAMZm8ZiITRUAAoAJTzbZwIgwMRQKRwOGA7YDRrAABuM1xKN4eW07TAbHY7QsVhsSE8fAptKWynawNinlJcAGQgJxNxCJ8gh55E8QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Don&#39;t forget that you can export/import/extend these types/interfaces for reuse.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why annotate &lt;code&gt;state&lt;/code&gt; twice?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;It isn&#39;t strictly necessary to annotate the &lt;code&gt;state&lt;/code&gt; class property, but it allows better type inference when accessing &lt;code&gt;this.state&lt;/code&gt; and also initializing the state.&lt;/p&gt; 
 &lt;p&gt;This is because they work in two different ways, the 2nd generic type parameter will allow &lt;code&gt;this.setState()&lt;/code&gt; to work correctly, because that method comes from the base class, but initializing &lt;code&gt;state&lt;/code&gt; inside the component overrides the base implementation so you have to make sure that you tell the compiler that you&#39;re not actually doing anything different.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;No need for &lt;code&gt;readonly&lt;/code&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You often see sample code include &lt;code&gt;readonly&lt;/code&gt; to mark props and state immutable:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  readonly message: string;
};
type MyState = {
  readonly count: number;
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is not necessary as &lt;code&gt;React.Component&amp;lt;P,S&amp;gt;&lt;/code&gt; already marks them as immutable. (&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26813&quot;&gt;See PR and discussion!&lt;/a&gt;)&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;Class Methods&lt;/strong&gt;: Do it like normal, but just remember any arguments for your functions also need to be typed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{ message: string }, { count: number }&amp;gt; {
  state = { count: 0 };
  render() {
    return (
      &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
  increment = (amt: number) =&amp;gt; {
    // like this
    this.setState((state) =&amp;gt; ({
      count: state.count + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN5wQSBigDmSAFxw6MKMB5q4AXwA0cRWggBXHjG09rIAEZIoJgHwWKcHTBTccAC8FnBWtvZwAAwmANw+cET8bgAUAJTe5L6+RDDWUDxwKQnZcLJ8wABucBA8YtTAaADWQfLpwV4wABbAdCIGaETKdikAjGnGHiWlFt29ImA4YH3KqhrGsz19ugFIIuF2xtO+sgD0FZVTWdlp8ddH1wNDMsFFKCCRji5uGUFe8tNTqc4A0mkg4HM6NNISI6EgYABlfzcFI7QJ-IoA66lA6RNF7XFwADUcHeMGmxjStwSxjuxiAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Class Properties&lt;/strong&gt;: If you need to declare class properties for later use, just declare it like &lt;code&gt;state&lt;/code&gt;, but without assignment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  pointer: number; // like this
  componentDidMount() {
    this.pointer = 3;
  }
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} and {this.pointer}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN4U4cEEgYoA5kgBccOjCjAeGgNwUAvgD44i8sshHuUXTwCuIAEZIoJuAHo-OGpgAGskOBgAC2A6JTg0SQhpHhgAEWA+AFkIVxSACgBKGzjlKJiRBxTvOABeOABmMzs4cziifm9C4ublIhhXKB44PJLlOFk+YAA3S1GxmzK6CpwwJdV1LXM4FH4F6KXKp1aesdk-SZnRgqblY-MgA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Typing getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be implemented using hooks which can also help set up memoization.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:class-components--&gt; 
&lt;!--START-SECTION:default-props--&gt; 
&lt;h2&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As per &lt;a href=&quot;https://twitter.com/dan_abramov/status/1133878326358171650&quot;&gt;this tweet&lt;/a&gt;, defaultProps will eventually be deprecated. You can check the discussions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/hswolff/status/1133759319571345408&quot;&gt;https://twitter.com/hswolff/status/1133759319571345408&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The consensus is to use object default values.&lt;/p&gt; 
&lt;p&gt;Function Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = { age?: number };

const Greet = ({ age = 21 }: GreetProps) =&amp;gt; // etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Class Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = {
  age?: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  render() {
    const { age = 21 } = this.props;
    /*...*/
  }
}

let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Type inference improved greatly for &lt;code&gt;defaultProps&lt;/code&gt; in &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html&quot;&gt;TypeScript 3.0+&lt;/a&gt;, although &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/61&quot;&gt;some edge cases are still problematic&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Function Components&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// using typeof as a shortcut; note that it hoists!
// you can also declare the type of DefaultProps if you choose
// e.g. https://github.com/typescript-cheatsheets/react/issues/415#issuecomment-841223219
type GreetProps = { age: number } &amp;amp; typeof defaultProps;

const defaultProps = {
  age: 21,
};

const Greet = (props: GreetProps) =&amp;gt; {
  // etc
};
Greet.defaultProps = defaultProps;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAOKVYwAKxY6ALxwA3igDmWAFxwAdgFcQAIyxQ4AXzgAyOM1YQCcACZYCyeQBte-VPVwRZqeCbOXrEAXGEi6cCdLgAJgBGABo6dXo6e0d4TixuLzgACjAbGXjuPg9UAEovAD5RXzhKGHkoWTgAHiNgADcCkTScgDpkSTgAeiQFZVVELvVqrrrGiPpMmFaXcytsz2FZtwXbOiA&quot;&gt;See this in TS Playground&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;Class components&lt;/strong&gt;, there are &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/103#issuecomment-481061483&quot;&gt;a couple ways to do it&lt;/a&gt; (including using the &lt;code&gt;Pick&lt;/code&gt; utility type) but the recommendation is to &quot;reverse&quot; the props definition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = typeof Greet.defaultProps &amp;amp; {
  age: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = {
    age: 21,
  };
  /*...*/
}

// Type-checks! No type assertions needed!
let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;&lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; nuance for library authors&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;The above implementations work fine for App creators, but sometimes you want to be able to export &lt;code&gt;GreetProps&lt;/code&gt; so that others can consume it. The problem here is that the way &lt;code&gt;GreetProps&lt;/code&gt; is defined, &lt;code&gt;age&lt;/code&gt; is a required prop when it isn&#39;t because of &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;The insight to have here is that &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/66#issuecomment-453878710&quot;&gt;&lt;code&gt;GreetProps&lt;/code&gt; is the &lt;em&gt;internal&lt;/em&gt; contract for your component, not the &lt;em&gt;external&lt;/em&gt;, consumer facing contract&lt;/a&gt;. You could create a separate type specifically for export, or you could make use of the &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; utility:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// internal contract, should not be exported out
type GreetProps = {
  age: number;
};

class Greet extends Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = { age: 21 };
}

// external contract
export type ApparentGreetProps = JSX.LibraryManagedAttributes&amp;lt;
  typeof Greet,
  GreetProps
&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This will work properly, although hovering over&lt;code&gt;ApparentGreetProps&lt;/code&gt;may be a little intimidating. You can reduce this boilerplate with the&lt;code&gt;ComponentProps&lt;/code&gt; utility detailed below.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Consuming Props of a Component with defaultProps&lt;/h2&gt; 
&lt;p&gt;A component with &lt;code&gt;defaultProps&lt;/code&gt; may seem to have some required props that actually aren&#39;t.&lt;/p&gt; 
&lt;h3&gt;Problem Statement&lt;/h3&gt; 
&lt;p&gt;Here&#39;s what you want to do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface IProps {
  name: string;
}
const defaultProps = {
  age: 25,
};
const GreetComponent = ({ name, age }: IProps &amp;amp; typeof defaultProps) =&amp;gt; (
  &amp;lt;div&amp;gt;{`Hello, my name is ${name}, ${age}`}&amp;lt;/div&amp;gt;
);
GreetComponent.defaultProps = defaultProps;

const TestComponent = (props: React.ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// Property &#39;age&#39; is missing in type &#39;{ name: string; }&#39; but required in type &#39;{ age: number; }&#39;
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Solution&lt;/h3&gt; 
&lt;p&gt;Define a utility that applies &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ComponentProps&amp;lt;T&amp;gt; = T extends
  | React.ComponentType&amp;lt;infer P&amp;gt;
  | React.Component&amp;lt;infer P&amp;gt;
  ? JSX.LibraryManagedAttributes&amp;lt;T, P&amp;gt;
  : never;

const TestComponent = (props: ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// No error
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAMImQB2W3MABWJhUAHgAqAPjgBeOOLhYAHjD4ATdNjwwAdJ3ARe-cSyyjg3AlihwB0gD6Yqu-Tz4xzl67cl04cAH44ACkAZQANHQAZYAAjKGQoJgBZZG5kAHMsNQBBGBgoOIBXVTFxABofPzgALjheADdrejoLVSgCPDYASSEIETgAb2r0kCw61AKLDPoAXzpcQ0m4NSxOooAbQWF0OWH-TPG4ACYAVnK6WfpF7mWAcUosGFdDd1k4AApB+uQxysO4LM6r0dnAAGRwZisCAEFZrZCbbb9VAASlk0g+1VEamADUkgwABgAJLAbDYQSogJg-MZwYDoAAkg1GWFmlSZh1mBNmogA9Di8XQUfQHlgni8jLpVustn0BnJpQjZTsWrzeXANsh2gwbstxFhJhK3nIPmAdnUjfw5WIoVgYXBReKuK9+JI0TJpPs4JQYEUoNw4KIABYARjgvN8VwYargADkIIooMQoAslvBSe8JAbns7JTSsDIyAQIBAyOHJDQgA&quot;&gt;&lt;em&gt;See this in TS Playground&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Misc Discussions and Knowledge&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Why does React.FC break defaultProps?&lt;/summary&gt; 
 &lt;p&gt;You can check the discussions here:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680&quot;&gt;https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30695&quot;&gt;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30695&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&quot;&gt;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;This is just the current state and may be fixed in future.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;TypeScript 2.9 and earlier&lt;/summary&gt; 
 &lt;p&gt;For TypeScript 2.9 and earlier, there&#39;s more than one way to do it, but this is the best advice we&#39;ve yet seen:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = Required&amp;lt;typeof MyComponent.defaultProps&amp;gt; &amp;amp; {
  /* additional props here */
};

export class MyComponent extends React.Component&amp;lt;Props&amp;gt; {
  static defaultProps = {
    foo: &quot;foo&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Our former recommendation used the &lt;code&gt;Partial type&lt;/code&gt; feature in TypeScript, which means that the current interface will fulfill a partial version on the wrapped interface. In that way we can extend defaultProps without any changes in the types!&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface IMyComponentProps {
  firstProp?: string;
  secondProp: IPerson[];
}

export class MyComponent extends React.Component&amp;lt;IMyComponentProps&amp;gt; {
  public static defaultProps: Partial&amp;lt;IMyComponentProps&amp;gt; = {
    firstProp: &quot;default&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The problem with this approach is it causes complex issues with the type inference working with &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;. Basically it causes the compiler to think that when creating a JSX expression with that component, that all of its props are optional.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt; and &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/61&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:default-props--&gt; 
&lt;!--START-SECTION:basic-type-examples--&gt; 
&lt;h2&gt;Typing Component Props&lt;/h2&gt; 
&lt;p&gt;This is intended as a basic orientation and reference for React developers familiarizing with TypeScript.&lt;/p&gt; 
&lt;h2&gt;Basic Prop Types Examples&lt;/h2&gt; 
&lt;p&gt;A list of TypeScript types you will likely use in a React+TypeScript app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type AppProps = {
  message: string;
  count: number;
  disabled: boolean;
  /** array of a type! */
  names: string[];
  /** string literals to specify exact string values, with a union type to join them together */
  status: &quot;waiting&quot; | &quot;success&quot;;
  /** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */
  obj: object;
  obj2: {}; // almost the same as `object`, exactly the same as `Object`
  /** an object with any number of properties (PREFERRED) */
  obj3: {
    id: string;
    title: string;
  };
  /** array of objects! (common) */
  objArr: {
    id: string;
    title: string;
  }[];
  /** a dict object with any number of properties of the same type */
  dict1: {
    [key: string]: MyTypeHere;
  };
  dict2: Record&amp;lt;string, MyTypeHere&amp;gt;; // equivalent to dict1
  /** any function as long as you don&#39;t invoke it (not recommended) */
  onSomething: Function;
  /** function that doesn&#39;t take or return anything (VERY COMMON) */
  onClick: () =&amp;gt; void;
  /** function with named prop (VERY COMMON) */
  onChange: (id: number) =&amp;gt; void;
  /** alternative function type syntax that takes an event (VERY COMMON) */
  onClick(event: React.MouseEvent&amp;lt;HTMLButtonElement&amp;gt;): void;
  /** an optional prop (VERY COMMON!) */
  optional?: OptionalType;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice we have used the TSDoc &lt;code&gt;/** comment */&lt;/code&gt; style here on each prop. You can and are encouraged to leave descriptive comments on reusable components. For a fuller example and discussion, see our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/misc_concerns/#commenting-components&quot;&gt;Commenting Components&lt;/a&gt; section in the Advanced Cheatsheet.&lt;/p&gt; 
&lt;h2&gt;Useful React Prop Type Examples&lt;/h2&gt; 
&lt;p&gt;Relevant for components that accept other React components as props.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare interface AppProps {
  children1: JSX.Element; // bad, doesnt account for arrays
  children2: JSX.Element | JSX.Element[]; // meh, doesn&#39;t accept strings
  children3: React.ReactChildren; // despite the name, not at all an appropriate type; it is a utility
  children4: React.ReactChild[]; // better, accepts array children
  children: React.ReactNode; // best, accepts everything (see edge case below)
  functionChildren: (name: string) =&amp;gt; React.ReactNode; // recommended function as a child render prop type
  style?: React.CSSProperties; // to pass through style props
  onChange?: React.FormEventHandler&amp;lt;HTMLInputElement&amp;gt;; // form events! the generic parameter is the type of event.target
  //  more info: https://react-typescript-cheatsheet.netlify.app/docs/advanced/patterns_by_usecase/#wrappingmirroring
  props: Props &amp;amp; React.ComponentPropsWithoutRef&amp;lt;&quot;button&quot;&amp;gt;; // to impersonate all the props of a button element and explicitly not forwarding its ref
  props2: Props &amp;amp; React.ComponentPropsWithRef&amp;lt;MyButtonWithForwardRef&amp;gt;; // to impersonate all the props of MyButtonForwardedRef and explicitly forwarding its ref
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Small `React.ReactNode` edge case &lt;/summary&gt; 
 &lt;p&gt;This code typechecks but has a runtime error:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = {
  children: React.ReactNode;
};

function Comp({ children }: Props) {
  return &amp;lt;div&amp;gt;{children}&amp;lt;/div&amp;gt;;
}
function App() {
  return &amp;lt;Comp&amp;gt;{{}}&amp;lt;/Comp&amp;gt;; // Runtime Error: Objects not valid as React Child!
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is because &lt;code&gt;ReactNode&lt;/code&gt; includes &lt;code&gt;ReactFragment&lt;/code&gt; which allows a &lt;code&gt;{}&lt;/code&gt; type, which is &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/37596#issue-480260937&quot;&gt;too wide&lt;/a&gt;. Fixing this would break a lot of libraries, so for now you just have to be mindful that &lt;code&gt;ReactNode&lt;/code&gt; is not absolutely bulletproof.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/357&quot;&gt;Thanks @pomle for raising this.&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;JSX.Element vs React.ReactNode?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Quote &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;@ferdaber&lt;/a&gt;: A more technical explanation is that a valid React node is not the same thing as what is returned by &lt;code&gt;React.createElement&lt;/code&gt;. Regardless of what a component ends up rendering, &lt;code&gt;React.createElement&lt;/code&gt; always returns an object, which is the &lt;code&gt;JSX.Element&lt;/code&gt; interface, but &lt;code&gt;React.ReactNode&lt;/code&gt; is the set of all possible return values of a component.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;JSX.Element&lt;/code&gt; -&amp;gt; Return value of &lt;code&gt;React.createElement&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;React.ReactNode&lt;/code&gt; -&amp;gt; Return value of a component&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/129&quot;&gt;More discussion: Where ReactNode does not overlap with JSX.Element&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Types or Interfaces?&lt;/h2&gt; 
&lt;p&gt;You can use either Types or Interfaces to type Props and State, so naturally the question arises - which do you use?&lt;/p&gt; 
&lt;h3&gt;TL;DR&lt;/h3&gt; 
&lt;p&gt;Use Interface until You Need Type - &lt;a href=&quot;https://twitter.com/orta/status/1356129195835973632?s=20&quot;&gt;orta&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;More Advice&lt;/h3&gt; 
&lt;p&gt;Here&#39;s a helpful rule of thumb:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;always use &lt;code&gt;interface&lt;/code&gt; for public API&#39;s definition when authoring a library or 3rd party ambient type definitions, as this allows a consumer to extend them via &lt;em&gt;declaration merging&lt;/em&gt; if some definitions are missing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;consider using &lt;code&gt;type&lt;/code&gt; for your React Component Props and State, for consistency and because it is more constrained.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can read more about the reasoning behind this rule of thumb in &lt;a href=&quot;https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c&quot;&gt;Interface vs Type alias in TypeScript 2.7&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The TypeScript Handbook now also includes guidance on &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces&quot;&gt;Differences Between Type Aliases and Interfaces&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: At scale, there are performance reasons to prefer interfaces (&lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/Performance#preferring-interfaces-over-intersections&quot;&gt;see official Microsoft notes on this&lt;/a&gt;) but &lt;a href=&quot;https://news.ycombinator.com/item?id=25201887&quot;&gt;take this with a grain of salt&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Types are useful for union types (e.g. &lt;code&gt;type MyType = TypeA | TypeB&lt;/code&gt;) whereas Interfaces are better for declaring dictionary shapes and then &lt;code&gt;implementing&lt;/code&gt; or &lt;code&gt;extending&lt;/code&gt; them.&lt;/p&gt; 
&lt;h3&gt;Useful table for Types vs Interfaces&lt;/h3&gt; 
&lt;p&gt;It&#39;s a nuanced topic, don&#39;t get too hung up on it. Here&#39;s a handy table:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Aspect&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Type&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Interface&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe functions&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe constructors&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe tuples&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Interfaces can extend it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;⚠️&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Classes can extend it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Classes can implement it (&lt;code&gt;implements&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;⚠️&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can intersect another one of its kind&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;⚠️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can create a union with another one of its kind&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be used to create mapped types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be mapped over with mapped types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Expands in error messages and logs&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be augmented&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be recursive&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;⚠️&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;⚠️ In some cases&lt;/p&gt; 
&lt;p&gt;(source: &lt;a href=&quot;https://twitter.com/karoljmajewski/status/1082413696075382785&quot;&gt;Karol Majewski&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:basic-type-examples--&gt; 
&lt;!--START-SECTION:get-derived-state-from-props--&gt; 
&lt;h2&gt;getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be easily achieved using hooks which can also help set up memoization easily.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:get-derived-state-from-props--&gt; 
&lt;!--START-SECTION:forms-and-events--&gt; 
&lt;h2&gt;Forms and Events&lt;/h2&gt; 
&lt;p&gt;If performance is not an issue (and it usually isn&#39;t!), inlining handlers is easiest as you can just use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-typing&quot;&gt;type inference and contextual typing&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const el = (
  &amp;lt;button
    onClick={(event) =&amp;gt; {
      /* event will be correctly typed automatically! */
    }}
  /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But if you need to define your event handler separately, IDE tooling really comes in handy here, as the @type definitions come with a wealth of typing. Type what you are looking for and usually the autocomplete will help you out. Here is what it looks like for an &lt;code&gt;onChange&lt;/code&gt; for a form event:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type State = {
  text: string;
};
class App extends React.Component&amp;lt;Props, State&amp;gt; {
  state = {
    text: &quot;&quot;,
  };

  // typing on RIGHT hand side of =
  onChange = (e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void =&amp;gt; {
    this.setState({ text: e.currentTarget.value });
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input type=&quot;text&quot; value={this.state.text} onChange={this.onChange} /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2KA9Drg8IcMDjB1tcblwBccOjCjAeAcwDcmlRQB8W8ovso3HAAvL6KilYwtgBE0R7ulH5wepYAnmBOznAQPIgAkgDiABIAKnAAFij8dsB8SNmYIZo5YpUu9aEAFEi2QhgiAGLQIACiAG4ysqUAsgAyeTxgAK4wI9RIIDJeAJS2YxC1IT5KFjDlwHQidEgwAMowgUidSpacUewiaEtQRDwwJSgoM4biIxihqEt6iptglFCpYXBfnUoJ1tmFwkQYN9cp0LIpZHxgGMvHjwrInMt4DB0khgtFItE4GCIbSlGcLlcHtwRJEVNkeK0qsDgmzzpcWm1gXydCSkuE4LIdITiRYYR4KCogA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Instead of typing the arguments and return values with &lt;code&gt;React.FormEvent&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;void&lt;/code&gt;, you may alternatively apply types to the event handler itself (&lt;em&gt;contributed by @TomasHubelbauer&lt;/em&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;  // typing on LEFT hand side of =
  onChange: React.ChangeEventHandler&amp;lt;HTMLInputElement&amp;gt; = (e) =&amp;gt; {
    this.setState({text: e.currentTarget.value})
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why two ways to do the same thing?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The first method uses an inferred method signature &lt;code&gt;(e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void&lt;/code&gt; and the second method enforces a type of the delegate provided by &lt;code&gt;@types/react&lt;/code&gt;. So &lt;code&gt;React.ChangeEventHandler&amp;lt;&amp;gt;&lt;/code&gt; is simply a &quot;blessed&quot; typing by &lt;code&gt;@types/react&lt;/code&gt;, whereas you can think of the inferred method as more... &lt;em&gt;artisanally hand-rolled&lt;/em&gt;. Either way it&#39;s a good pattern to know. &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/24&quot;&gt;See our Github PR for more&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;Typing onSubmit, with Uncontrolled components in a Form&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you don&#39;t quite care about the type of the event, you can just use React.SyntheticEvent. If your target form has custom named inputs that you&#39;d like to access, you can use a type assertion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;form
  ref={formRef}
  onSubmit={(e: React.SyntheticEvent) =&amp;gt; {
    e.preventDefault();
    const target = e.target as typeof e.target &amp;amp; {
      email: { value: string };
      password: { value: string };
    };
    const email = target.email.value; // typechecks!
    const password = target.password.value; // typechecks!
    // etc...
  }}
&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Email:
      &amp;lt;input type=&quot;email&quot; name=&quot;email&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Password:
      &amp;lt;input type=&quot;password&quot; name=&quot;password&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;Log in&quot; /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGctoRlM4BeRYmAOgFc6kLABQBKClVoM4AMSbs4o9gD4FFOHAA8mJmrhFMbAN7aozJJgC+u2gGVeAIxDAYRoUgBcndDxsBPGjAAFkgwwGgAogBuSAEiynCGuupI3GBE0QEAIuYovAA2MKIA3Elw1PTwMChQAOYh8ilVtfUodHAwvmBIEKyN1XXwAGQJpckgKMB5noZwkSh5vB5wDFDANDVwFiXk6rtwYK10AO7QACbTs-OLnitrG1ulDzu75VJI45PyTQPc7xN53DmCyQRTgAHowe1Okg0ME0ABrOgAQlKr3gBzoxzOX36IVShxOUFOgKuIPBkI6XVhMMRKOe6ghcBCaG4rN0Fis5CUug0p2AkW59M0eRQ9iQeUFe3U4Q+U1GmjWYF4lWhbAARH9Jmq4DQUCAkOrNXltWDJbsNGCRWKJTywXyBTz7Wb1BoreLnbsAAoEs7ueUaRXKqFddUYrFE7W6-Whn0R8Eei1um3PC1Ox38hOBlUhtV0BxOGDaoGLdUAGQgGzWJrNqYzFAtJhAgpEQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Of course, if you&#39;re making any sort of significant form, &lt;a href=&quot;https://jaredpalmer.com/formik&quot;&gt;you should use Formik&lt;/a&gt; or &lt;a href=&quot;https://react-hook-form.com/&quot;&gt;React Hook Form&lt;/a&gt;, which are written in TypeScript.&lt;/p&gt; 
&lt;h3&gt;List of event types&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Event Type&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AnimationEvent&lt;/td&gt; 
   &lt;td&gt;CSS Animations.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ChangeEvent&lt;/td&gt; 
   &lt;td&gt;Changing the value of &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ClipboardEvent&lt;/td&gt; 
   &lt;td&gt;Using copy, paste and cut events.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CompositionEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user indirectly entering text (e.g. depending on Browser and PC setup, a popup window may appear with additional characters if you e.g. want to type Japanese on a US Keyboard)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DragEvent&lt;/td&gt; 
   &lt;td&gt;Drag and drop interaction with a pointer device (e.g. mouse).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FocusEvent&lt;/td&gt; 
   &lt;td&gt;Event that occurs when elements gets or loses focus.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FormEvent&lt;/td&gt; 
   &lt;td&gt;Event that occurs whenever a form or form element gets/loses focus, a form element value is changed or the form is submitted.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;InvalidEvent&lt;/td&gt; 
   &lt;td&gt;Fired when validity restrictions of an input fails (e.g &lt;code&gt;&amp;lt;input type=&quot;number&quot; max=&quot;10&quot;&amp;gt;&lt;/code&gt; and someone would insert number 20).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KeyboardEvent&lt;/td&gt; 
   &lt;td&gt;User interaction with the keyboard. Each event describes a single key interaction.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MouseEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user interacting with a pointing device (e.g. mouse)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PointerEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to user interaction with a variety pointing of devices such as mouse, pen/stylus, a touchscreen and which also supports multi-touch. Unless you develop for older browsers (IE10 or Safari 12), pointer events are recommended. Extends UIEvent.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TouchEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user interacting with a touch device. Extends UIEvent.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TransitionEvent&lt;/td&gt; 
   &lt;td&gt;CSS Transition. Not fully browser supported. Extends UIEvent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIEvent&lt;/td&gt; 
   &lt;td&gt;Base Event for Mouse, Touch and Pointer events.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WheelEvent&lt;/td&gt; 
   &lt;td&gt;Scrolling on a mouse wheel or similar input device. (Note: &lt;code&gt;wheel&lt;/code&gt; event should not be confused with the &lt;code&gt;scroll&lt;/code&gt; event)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SyntheticEvent&lt;/td&gt; 
   &lt;td&gt;The base event for all above events. Should be used when unsure about event type&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;&lt;strong&gt;What about &lt;code&gt;InputEvent&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;You&#39;ve probably noticed that there is no &lt;code&gt;InputEvent&lt;/code&gt;. This is because it is not supported by Typescript as the event itself has no fully browser support and may behave differently in different browsers. You can use &lt;code&gt;KeyboardEvent&lt;/code&gt; instead.&lt;/p&gt; 
 &lt;p&gt;Sources:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/29441&quot;&gt;https://github.com/microsoft/TypeScript/issues/29441&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/InputEvent&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/InputEvent&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:forms-and-events--&gt; 
&lt;!--START-SECTION:context--&gt; 
&lt;h2&gt;Context&lt;/h2&gt; 
&lt;h2&gt;Basic Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

interface AppContextInterface {
  name: string;
  author: string;
  url: string;
}

const AppCtx = React.createContext&amp;lt;AppContextInterface | null&amp;gt;(null);

// Provider in your app

const sampleAppContext: AppContextInterface = {
  name: &quot;Using React Context in a Typescript App&quot;,
  author: &quot;thehappybug&quot;,
  url: &quot;http://www.example.com&quot;,
};

export const App = () =&amp;gt; (
  &amp;lt;AppCtx.Provider value={sampleAppContext}&amp;gt;...&amp;lt;/AppCtx.Provider&amp;gt;
);

// Consume in your app

export const PostInfo = () =&amp;gt; {
  const appContext = React.useContext(AppCtx);
  return (
    &amp;lt;div&amp;gt;
      Name: {appContext.name}, Author: {appContext.author}, Url:{&quot; &quot;}
      {appContext.url}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;a href=&quot;https://reactjs.org/docs/context.html#classcontexttype&quot;&gt;Class.contextType&lt;/a&gt; or &lt;a href=&quot;https://reactjs.org/docs/context.html#contextconsumer&quot;&gt;Context.Consumer&lt;/a&gt; API, let us know if you have trouble with that.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/97&quot;&gt;Thanks to @AlvSovereign&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Extended Example&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; with an empty object as default value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ContextState {
  // set the type of state you want to handle with context e.g.
  name: string | null;
}
//set an empty object as default state
const Context = React.createContext({} as ContextState);
// set up context provider as you normally would in JavaScript [React Context API](https://reactjs.org/docs/context.html#api)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;strong&gt;no &lt;code&gt;defaultValue&lt;/code&gt;, yet no need to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import * as React from &quot;react&quot;;

const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);

function EnthusasticGreeting() {
  const currentUser = React.useContext(currentUserContext);
  return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;currentUserContext.Provider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/currentUserContext.Provider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice the explicit type arguments which we need because we don&#39;t have a default &lt;code&gt;string&lt;/code&gt; value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);
//                                             ^^^^^^^^^^^^^^^^^^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;along with the non-null assertion to tell TypeScript that &lt;code&gt;currentUser&lt;/code&gt; is definitely going to be there:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
//                              ^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is unfortunate because &lt;em&gt;we know&lt;/em&gt; that later in our app, a &lt;code&gt;Provider&lt;/code&gt; is going to fill in the context.&lt;/p&gt; 
&lt;p&gt;There are a few solutions for this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;You can get around this by asserting non null:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string&amp;gt;(undefined!);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(&lt;a href=&quot;https://www.typescriptlang.org/play/index.html?jsx=1#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQduEAdqvLgK5SXMwCqqLFADCLGFgAe8ALyYqMAHS5KycaN6SYAHjZRgzAOYA+ABQdmAEywF9WCwEIAlPQLn8wFnACivABYdUNBhgXABxSixgwxNHOABvOjg4JlZ2Lh5+QSg4WWw8RQCsdXEpE05uLF4BIWLNZ0S4ShguZjgtC2AANyMACS8AGX6AeXjyjOqoBRgIPjAwGrQsGIBfey0Aeg7u+mW6V2Z3TwBBOZj4hqaWtrHKzJqxTQUABWJO4CtszuQAGw4saTIAGVfMgAO7MMhGBpJLQ+GD+QJsELhLCRfQGODrKEw9Y3KpZWpSZ6vd5CIw7IA&quot;&gt;Playground here&lt;/a&gt;) This is a quick and easy fix, but this loses type-safety, and if you forget to supply a value to the Provider, you will get an error.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We can write a helper function called &lt;code&gt;createCtx&lt;/code&gt; that guards against accessing a &lt;code&gt;Context&lt;/code&gt; whose value wasn&#39;t provided. By doing this, API instead, &lt;strong&gt;we never have to provide a default and never have to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// Usage:

// We still have to specify a type, but no default!
export const [useCurrentUserName, CurrentUserProvider] = createCtx&amp;lt;string&amp;gt;();

function EnthusasticGreeting() {
  const currentUser = useCurrentUserName();
  return &amp;lt;div&amp;gt;HELLO {currentUser.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;CurrentUserProvider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/CurrentUserProvider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=1&amp;amp;ssl=1&amp;amp;ssc=1&amp;amp;pln=31&amp;amp;pc=2#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdA9AgnYnAIJwAWWANmCxQ4MCHFyVkMLCjgBhCADtpAD3jJFAEzgAFYgDdgmoXADuwGNziKxAVzBEl8YwWS2+8fcj62sAGhQtNiRzSwhbeG5kQ0UAcxExXF5cAGs4Amg4Wy0sAmBFLG1vPhFeEVAsADpgxjoCbPxgJXFJaTkYFQAeLiw1LC10AG8AXzgAH2t3PgA+AAoASjhBtnElVHh8FTgAXkwqGEqJHDanXphu8aycvILNOeyXfML5+jh0hpgmxSzULHaVBZLFZvXBrDY7PZ4A62X4KZRnWabF7AuDAAhwRE7ba7B65J6aRaWYimaxYEkAUSgxCgszIML+HTgIBh8AARjJ8qgjDJkLoDNzhKErLyvD4sGRkW83pQYLYoN9cK84MMVjK5d8ANr0-4BTaVPQQQzGKAAXRQ6FBinWNDgjEYcAA5GhVlaYA6mcgUlh0AAVACeggAyhJgGB4PkCCZebKwHwsHQVUx7QBVVDIWJYABcDDtcAA6jJ1sA+CUovoZKI4KhBLg0X7ZDAA-44KyItYxC43B4AIR0XqQWAu9ZwLWwuWUZSpoQAOWQIGbcnH-RgU6gBqNQjNuyOUgZXXWUHysTmyLqHy+cHJym4MLQn1wAHFKFhPnFAcsQWDxEvJ79hDixypZdV1necFiVNV5TgTpNGAfRpgACXJAAZZCAHkllwH8Vz-SpRGTMBBCgOQ0CwBZhm7TpGFg+D6ETepFEaZoOEI99VRfdVoMXIDfyEdcBTgUVfG2MhAyiUxFDIaYUU6K9LFvItH2fV94kYaS3io7iJxwvj+WNaY6KAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can go even further and combine this idea using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// usage

export const [useCtx, SettingProvider] = createCtx&amp;lt;string&amp;gt;(); // specify type, but no need to specify value upfront!
export function App() {
  const key = useCustomHook(&quot;key&quot;); // get a value from a hook, must be in a component
  return (
    &amp;lt;SettingProvider value={key}&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/SettingProvider&amp;gt;
  );
}
export function Component() {
  const key = useCtx(); // can still use without null check!
  return &amp;lt;div&amp;gt;{key}&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGd4BXOpAYWZlwAkIIBrOAF44ACj5IAngC44DKMBoBzAJRCAfHADeFOHGr14AbQYoYSADSykMAMoxTSALpDExGADpmSOw5GaAvso6cEQwjFA0svZmhuISjhT+FAD0yXpEDnq0ZgAe8ADuwDAAFnA0EHCMYNjZcAAmSJgojAA2MABqKC2MSClphSUQjPDFKABuCopwnPUVjDQNmApIdXrFSGgCXS3T69OgveSY8xjAtOmoZqwwOQA8AIJqIqra5Lr6DHo3LsjoHmgZK7ZJB5B5wAA+lQWjWWdSe80WsOUAG5gscaKdzl5rjlnlpgu9aJ80D83J4WKxgXkRBgciiCXBgJhRABCNCqEo4fJlJDcgCiUBwUBEACJsd8QBw4AAjJCM+jABpwFBwAAKOAmDSgcAGpRVYy6PRF9LeuhC1nCkTQqNNSVNoUtcEM4pyllp7nVEE1SCgzhQdCyBmRcFScBAKHEcAAKhIwN4AcAwPAFJgfcrplUWhYyhB4ChIihBSgJHAIMz5mdIjBY0g6IkKH1KnQUIpDhQQZBYIHPs6KTdLDZrDBJp7vb6XADLmwbrc5JMniiQ2k6HG0EyS9W45ZpcMczyVtMKiuNuu4AbunKqjUaDAWe2cp2sCdh+d7mAwHjXoSDHA4i5sRw3C8HwopxMawahq2eZnoaco1HgKrFMBliSp8sryum1DgLQSA3sEDoRKIDK3IOMDDkoo6Kmm549IImhxP4agMrotyUthNC4fAyRMaaLHJKR5GKJRWo8boJp2h20BPhiL6RGxkAcTen7BB88B-sILrPBBaRoPmUTAC0OxeDqRRIbuNCtDsaDrJsd72hahG3HUwBjGo9GSP4tzJM5rk2v4QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;code&gt;useContext&lt;/code&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;a href=&quot;https://github.com/jamiebuilds/unstated&quot;&gt;&lt;code&gt;unstated&lt;/code&gt;&lt;/a&gt;-like context setters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function createCtx&amp;lt;A&amp;gt;(defaultValue: A) {
  type UpdateType = React.Dispatch&amp;lt;
    React.SetStateAction&amp;lt;typeof defaultValue&amp;gt;
  &amp;gt;;
  const defaultUpdate: UpdateType = () =&amp;gt; defaultValue;
  const ctx = React.createContext({
    state: defaultValue,
    update: defaultUpdate,
  });
  function Provider(props: React.PropsWithChildren&amp;lt;{}&amp;gt;) {
    const [state, update] = React.useState(defaultValue);
    return &amp;lt;ctx.Provider value={{ state, update }} {...props} /&amp;gt;;
  }
  return [ctx, Provider] as const; // alternatively, [typeof ctx, typeof Provider]
}

// usage

const [ctx, TextProvider] = createCtx(&quot;someText&quot;);
export const TextContext = ctx;
export function App() {
  return (
    &amp;lt;TextProvider&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/TextProvider&amp;gt;
  );
}
export function Component() {
  const { state, update } = React.useContext(TextContext);
  return (
    &amp;lt;label&amp;gt;
      {state}
      &amp;lt;input type=&quot;text&quot; onChange={(e) =&amp;gt; update(e.target.value)} /&amp;gt;
    &amp;lt;/label&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuNIlGJAYRjUAPAEEAfAAoAJkkwpGAGxgA1FIsZIAXHFEBKOAG8KcODACeYJHACqYabyQAVS9YC8iYjAB0AEWAAzmC8aAAWwsjoPgDKSDDRMI6ibBzCFlYQmHCy8kqq6pri4gDcJlwcAfA5Csp2Dnw6dY4uVnAekgZu4tlyNfkaSKXkpmgV8BjUbZ5R3tyofPwcfNQwksbDpnCVjjrVeWoDADRlpoz2Oz25ted8ZQC+ekOmTKww7JwACjgAbsCyUJIwDgwAEdJEMN4vhAQQB1YAwUL8ULARTSIjMYSGO7iAzrTblZiVOAAbW2fEOcDO9SQAF0puCfIwAkgEo4ZL19gUkI8TnAiDBGFBOMIJpCfn8kFA4N8uW5DIYtolyZSbtY7ncjN4tUDoQENQB6Er3Mr8wWcYkTClQ37-OkoAIEyrFOD6-VwdR8IW8YDfJCKcwU4npJCZLhCCnB0PWiVQGkUO4UCiuykBFAAcyQifIo0J8At4bgThoMGjtqmc0cgmokgARAFcM5izWeeQaHRxmNC8XFsxlvAPBMhm3oFgWClOKIwGAOkYTXEzXBJLzhEWVqXJeJeaZhItwBwkL2XZuNtv9auS+L-sfTC2E63aCOGGO3hw4LvIMwD6tcWUc0SFWSSAUlSjhwBqHgMt4TICEsxaSOePZ9i2pimkKi7LooKAAEZ+te+JGIBd74XAwjAMwYCMPAwZuDWfY1nAHBIigzAZnK7jdCBfCSEg3iJFAGY+DKAx6AaeGnphOGKHht5AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A &lt;a href=&quot;https://gist.github.com/sw-yx/f18fe6dd4c43fddb3a4971e80114a052&quot;&gt;useReducer-based version&lt;/a&gt; may also be helpful.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Mutable Context Using a Class component wrapper&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;em&gt;Contributed by: &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/13&quot;&gt;@jpavon&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ProviderState {
  themeColor: string;
}

interface UpdateStateArg {
  key: keyof ProviderState;
  value: string;
}

interface ProviderStore {
  state: ProviderState;
  update: (arg: UpdateStateArg) =&amp;gt; void;
}

const Context = React.createContext({} as ProviderStore); // type assertion on empty object

class Provider extends React.Component&amp;lt;{}, ProviderState&amp;gt; {
  public readonly state = {
    themeColor: &quot;red&quot;,
  };

  private update = ({ key, value }: UpdateStateArg) =&amp;gt; {
    this.setState({ [key]: value });
  };

  public render() {
    const store: ProviderStore = {
      state: this.state,
      update: this.update,
    };

    return (
      &amp;lt;Context.Provider value={store}&amp;gt;{this.props.children}&amp;lt;/Context.Provider&amp;gt;
    );
  }
}

const Consumer = Context.Consumer;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:context--&gt; 
&lt;!--START-SECTION:forward-create-ref--&gt; 
&lt;h2&gt;forwardRef/createRef&lt;/h2&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/README.md#hooks&quot;&gt;Hooks section&lt;/a&gt; for &lt;code&gt;useRef&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;createRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class CssThemeProvider extends React.PureComponent&amp;lt;Props&amp;gt; {
  private rootRef = React.createRef&amp;lt;HTMLDivElement&amp;gt;(); // like this
  render() {
    return &amp;lt;div ref={this.rootRef}&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;forwardRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef&amp;lt;Ref, Props&amp;gt;((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;pre&gt;&lt;code&gt;Side note: the `ref` you get from `forwardRef` is mutable so you can assign to it if needed.
&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt; 
 &lt;p&gt;This was done &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43265/&quot;&gt;on purpose&lt;/a&gt;. You can make it immutable if you have to - assign &lt;code&gt;React.Ref&lt;/code&gt; if you want to ensure nobody reassigns it:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef((
  props: Props,
  ref: React.Ref&amp;lt;Ref&amp;gt; // &amp;lt;-- here!
) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;If you are grabbing the props of a component that forwards refs, use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More info: &lt;a href=&quot;https://medium.com/@martin_hotell/react-refs-with-typescript-a32d56c4d315&quot;&gt;https://medium.com/@martin_hotell/react-refs-with-typescript-a32d56c4d315&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also wish to do &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/167&quot;&gt;Conditional Rendering with &lt;code&gt;forwardRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:forward-create-ref--&gt; 
&lt;!--START-SECTION:portals--&gt; 
&lt;h2&gt;Portals&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;ReactDOM.createPortal&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const modalRoot = document.getElementById(&quot;modal-root&quot;) as HTMLElement;
// assuming in your html file has a div with id &#39;modal-root&#39;;

export class Modal extends React.Component {
  el: HTMLElement = document.createElement(&quot;div&quot;);

  componentDidMount() {
    modalRoot.appendChild(this.el);
  }

  componentWillUnmount() {
    modalRoot.removeChild(this.el);
  }

  render() {
    return ReactDOM.createPortal(this.props.children, this.el);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWRYmAEQHkBZObXAo9GAWgBNcZchTQQAdgGd4ICHxQAbBBAjwAvHAFoAriCRiYAOgDmSGAFF5SXfoBCATwCSfABQAiGXPk8cK1wEo4FAk4AAkAFWYAGQsrPRgAbgoAeiTAiQkdYDEjOCy4OwgtKDgACxgQeTZgS1KgwI1gADc4AHdgGBLcvgIPBW9lGHxE4XIkAA9qeDR5IODmWQU4cZg9PmDkbgMAYVxIMTi4AG8KOCX5AC5QiOjLazUNCG07gzQuFZi7tz4m-2GTuFE4HEcXowD48y0+mcAWO5FOp16igGBhQYDAqy2JWqLg6wAkBiQ8j8w1OAF8KP9AXs4gB1aryACqYhkkJg0KO-wRCyRKgMRBkjSQmOxzlx+MJxP+5JGpyIYj4SCg7Nh8LgRBgRTEtG4TGYLzeSAACtAYApRVj8WAcGB8WgsfI+HKADRwMUEokkuDS0lAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Using hooks&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Same as above but using hooks&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React, { useEffect, useRef } from &quot;react&quot;;
import { createPortal } from &quot;react-dom&quot;;

const modalRoot = document.querySelector(&quot;#modal-root&quot;) as HTMLElement;

const Modal: React.FC&amp;lt;{}&amp;gt; = ({ children }) =&amp;gt; {
  const el = useRef(document.createElement(&quot;div&quot;));

  useEffect(() =&amp;gt; {
    // Use this in case CRA throws an error about react-hooks/exhaustive-deps
    const current = el.current;

    // We assume `modalRoot` exists with &#39;!&#39;
    modalRoot!.appendChild(current);
    return () =&amp;gt; void modalRoot!.removeChild(current);
  }, []);

  return createPortal(children, el.current);
};

export default Modal;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOAbzjSJRiQAVoYUAbOAXzmy4CTDAFoAJrjLkKAellwUAZyUBXEMAB2Aczha4ATwiqocABYwQPTMC5JzyxXHHAAbnADuwGGb3iCIBDi3KI4EDD4ANwUFGgQmkrwALJB3ABciMQwAHQAYgDCADy0vAB8cAC8cAAU9GhmtuJEmnwAlJXltBRwcPJwAKIgqlzM9j72aCMqDLiQmkiaEUp6CZyaaPauKFDAKABGdp7evihwRJjdM6twSDxVyOg5qkpIyJjVkmjqCzmMqCz9OwgH7VABELlcoNarWiMnIPQeGGyzyQ-UwmCQGGq1XaFU6lx6fQA6vZlGpgXAAAaBYJcBAQcKUm4AD2AiWWXh8BAAhNIej04tcadx6eFKs4IF9gYtsgBHVRIKAGADKt0xMGgYIAxMKuKEGTAoYplgAJAAqSQAMoCkNKYLD+XBdaKYNzsigwGAFuJ8g0uOJqrdsl8oM0YDCCWckDATC0cR04K4IMB-M6DW6iIFXEhfY1A1xgyYwxH4XwADRwADaAF0S5c+gBJVaofwQTBU26UivjK6cLSKvTLHuU86F0M-SmXIgxqAtP6jdiwbjVeqNZoVoMh4uw3iwuQKZ4obRIGLkTCqdYwYDxOAAQU98a6pcFiSrSjMEA8KVpFZeMGVH5fqkXDVuKiJPC8yqcCw1SYNwLwlj006xjUkaFBCpSRoSChGKoDAoC08EQHAYCqPAPhsishjGKYiTMMAaDmJY1i2CepaOuhbh+BUoK6vq4SgqUhSyBhWF0O+n7ftwcAAGQyah7GOnAhRSVwmGKUpykQmJmmJAYdgVLQT6aSZzhsmAIwGBkoLaDs4igmWOkmRZ6BIA2LAgEo1kbIsioOU5mlmEgwDaBY1kAIwAAyRa4Zj+RpplHOIPgZPgUUxWY+COQlpl7OgADWtnGJo4jWVA2h5dUkVltVtXZOFrTxYlSkAF5NuISDMhkACc3XZc1PS8LwAVwOpA1wA2+B4KcurcrQoJwKCw05UphR7GRGotHpBlGXlaCFTgF6lYtYAegYKAeA0YBLfw8T5FwDH5YZ8Z4nAf4AZJwGwfBSCtGUkwQC8wnrTAm1jYlwmiStwmqeDjp-WJa0bTed0Pftz24uU72Aap1QwFACp-aUEkeHAqnA8jmhw-yfREK+bbUSYiiemhIluODrQULwQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Modal Component Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function App() {
  const [showModal, setShowModal] = React.useState(false);
  return (
    &amp;lt;div&amp;gt;
      // you can also put this in your static html file
      &amp;lt;div id=&quot;modal-root&quot;&amp;gt;&amp;lt;/div&amp;gt;
      {showModal &amp;amp;&amp;amp; (
        &amp;lt;Modal&amp;gt;
          &amp;lt;div
            style={{
              display: &quot;grid&quot;,
              placeItems: &quot;center&quot;,
              height: &quot;100vh&quot;,
              width: &quot;100vh&quot;,
              background: &quot;rgba(0,0,0,0.1)&quot;,
              zIndex: 99,
            }}
          &amp;gt;
            I&#39;m a modal!{&quot; &quot;}
            &amp;lt;button
              style={{ background: &quot;papyawhip&quot; }}
              onClick={() =&amp;gt; setShowModal(false)}
            &amp;gt;
              close
            &amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/Modal&amp;gt;
      )}
      &amp;lt;button onClick={() =&amp;gt; setShowModal(true)}&amp;gt;show Modal&amp;lt;/button&amp;gt;
      // rest of your app
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Context of Example&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;This example is based on the &lt;a href=&quot;https://reactjs.org/docs/portals.html#event-bubbling-through-portals&quot;&gt;Event Bubbling Through Portal&lt;/a&gt; example of React docs.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:portals--&gt; 
&lt;!--START-SECTION:error-boundaries--&gt; 
&lt;h2&gt;Error Boundaries&lt;/h2&gt; 
&lt;h3&gt;Option 1: Using react-error-boundary&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bvaughn/react-error-boundary&quot;&gt;React-error-boundary&lt;/a&gt; - is a lightweight package ready to use for this scenario with TS support built-in. This approach also lets you avoid class components that are not that popular anymore.&lt;/p&gt; 
&lt;h3&gt;Options 2: Writing your custom error boundary component&lt;/h3&gt; 
&lt;p&gt;If you don&#39;t want to add a new npm package for this, you can also write your own &lt;code&gt;ErrorBoundary&lt;/code&gt; component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React, { Component, ErrorInfo, ReactNode } from &quot;react&quot;;

interface Props {
  children: ReactNode;
}

interface State {
  hasError: boolean;
}

class ErrorBoundary extends Component&amp;lt;Props, State&amp;gt; {
  public state: State = {
    hasError: false
  };

  public static getDerivedStateFromError(_: Error): State {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    console.error(&quot;Uncaught error:&quot;, error, errorInfo);
  }

  public render() {
    if (this.state.hasError) {
      return &amp;lt;h1&amp;gt;Sorry.. there was an error&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}

export default ErrorBoundary;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:error-boundaries--&gt; 
&lt;!--START-SECTION:concurrent--&gt; 
&lt;h2&gt;Concurrent React/React Suspense&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Not written yet.&lt;/em&gt; watch &lt;a href=&quot;https://github.com/sw-yx/fresh-async-react&quot;&gt;https://github.com/sw-yx/fresh-async-react&lt;/a&gt; for more on React Suspense and Time Slicing.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:concurrent--&gt; 
&lt;!--START-SECTION:types--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Types&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ Have you read &lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/FAQ?&quot;&gt;the TypeScript FAQ&lt;/a&gt; Your answer might be there!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Facing weird type errors? You aren&#39;t alone. This is the hardest part of using TypeScript with React. Be patient - you are learning a new language after all. However, the more you get good at this, the less time you&#39;ll be working &lt;em&gt;against&lt;/em&gt; the compiler and the more the compiler will be working &lt;em&gt;for&lt;/em&gt; you!&lt;/p&gt; 
&lt;p&gt;Try to avoid typing with &lt;code&gt;any&lt;/code&gt; as much as possible to experience the full benefits of TypeScript. Instead, let&#39;s try to be familiar with some of the common strategies to solve these issues.&lt;/p&gt; 
&lt;h2&gt;Union Types and Type Guarding&lt;/h2&gt; 
&lt;p&gt;Union types are handy for solving some of these typing problems:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;
  {},
  {
    count: number | null; // like this
  }
&amp;gt; {
  state = {
    count: null,
  };
  render() {
    return &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;{this.state.count}&amp;lt;/div&amp;gt;;
  }
  increment = (amt: number) =&amp;gt; {
    this.setState((state) =&amp;gt; ({
      count: (state.count || 0) + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2K0EAK48YALjg89IAEZIocAD6m91agG44AejdxqwANZI4MAAWwHSaKhQAfFrkinQwKNxwALzRijr6hiZmTmHOmkT81gAUAJSpaUQwelA8cLJ8wABucBA8Yt5oPklKpclRQSEiwDxoRCAyRQCMJSoRSgN0InEJSCK6BjAqsm4NjRF5MXDhh8OjSOOGyXBFKCDGDpbWZUlRStoBwYt0SDAAyvHcIrLRIva5vQ5pODrTLXYGraHwWz2AAMZQA1HBbjB3ioSiUDooVAcVEA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Type Guarding&lt;/strong&gt;: Sometimes Union Types solve a problem in one area but create another downstream. If &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are both object types, &lt;code&gt;A | B&lt;/code&gt; isn&#39;t &quot;either A or B&quot;, it is &quot;A or B or both at once&quot;, which causes some confusion if you expected it to be the former. Learn how to write checks, guards, and assertions (also see the Conditional Rendering section below). For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface Admin {
  role: string;
}
interface User {
  email: string;
}

// Method 1: use `in` keyword
function redirect(user: Admin | User) {
  if (&quot;role&quot; in user) {
    // use the `in` operator for typeguards since TS 2.7+
    routeToAdminPage(user.role);
  } else {
    routeToHomePage(user.email);
  }
}

// Method 2: custom type guard, does the same thing in older TS versions or where `in` isnt enough
function isAdmin(user: Admin | User): user is Admin {
  return (user as any).role !== undefined;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoC4AOxiSk3STgEEATEGuAbwrjhwAbJAC44AZxhQaAcwDcFAL5Va9RmmYBVcfR584SECmCCxk6dXlKKFTAFdqGYBGoCIdugBUI7TtQAKKDJIABTiwDLUwJjA9ACUeuT80XBhEVExugC8OQR2OlAIEML4CbxJ-AJIMHZQrvi+NGQVinDWlOT2jjDOrjgeSN4AErhIgcFpkdGxUGX6KZMZM3A5WQSGxoKliZVVNXUEIyBIYEFIzfzK5FcUAPS3cACy1QAWEGxwAIxi+cwABjQ-nAANZIACeAHdoGxbA4nC4qmxgEQMCFflAxI1XAAfODaeI7ODREIAIiESBJRNc6LKcHucF+cBgL3+gLgEDA9BQMGgcEwvJgYM5MjsKCgbHEEhoGjgngAynAAEwAOgA7ABqfT8fpeHwcGjjULo5XkuIKFoGQQ6Qna9y6o5jM5ogrKjYmM36K43cj057M95KsRofI8vCCzlwEVitgAGjgbAgSElzOY4hQxyZL1kVPZgjYunlcAAbvRwi5JbyISyiHAAdQgcBxLQDNR3DIXrDur0ieIsc76Jj9Ti8QU4j8Cj3WEPCUR9q5+1A4ChJShqGC4ibiswAIS5Bz5mLUJAw65AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Method 2 is also known as &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards&quot;&gt;User-Defined Type Guards&lt;/a&gt; and can be really handy for readable code. This is how TS itself refines types with &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you need &lt;code&gt;if...else&lt;/code&gt; chains or the &lt;code&gt;switch&lt;/code&gt; statement instead, it should &quot;just work&quot;, but look up &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; if you need help. (See also: &lt;a href=&quot;https://basarat.gitbook.io/typescript/type-system/discriminated-unions&quot;&gt;Basarat&#39;s writeup&lt;/a&gt;). This is handy in typing reducers for &lt;code&gt;useReducer&lt;/code&gt; or Redux.&lt;/p&gt; 
&lt;h2&gt;Optional Types&lt;/h2&gt; 
&lt;p&gt;If a component has an optional prop, add a question mark and assign during destructure (or use defaultProps).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message?: string; // like this
}&amp;gt; {
  render() {
    const { message = &quot;default&quot; } = this.props;
    return &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use a &lt;code&gt;!&lt;/code&gt; character to assert that something is not undefined, but this is not encouraged.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Something to add? &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt; with your suggestions!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Enum Types&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We recommend avoiding using enums as far as possible&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Enums have a few &lt;a href=&quot;https://fettblog.eu/tidy-typescript-avoid-enums/&quot;&gt;documented issues&lt;/a&gt; (the TS team &lt;a href=&quot;https://twitter.com/orta/status/1348966323271987201?s=20&quot;&gt;agrees&lt;/a&gt;). A simpler alternative to enums is just declaring a union type of string literals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare type Position = &quot;left&quot; | &quot;right&quot; | &quot;top&quot; | &quot;bottom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you must use enums, remember that enums in TypeScript default to numbers. You will usually want to use them as strings instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export enum ButtonSizes {
  default = &quot;default&quot;,
  small = &quot;small&quot;,
  large = &quot;large&quot;,
}

// usage
export const PrimaryButton = (
  props: Props &amp;amp; React.HTMLProps&amp;lt;HTMLButtonElement&amp;gt;
) =&amp;gt; &amp;lt;Button size={ButtonSizes.default} {...props} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Type Assertion&lt;/h2&gt; 
&lt;p&gt;Sometimes you know better than TypeScript that the type you&#39;re using is narrower than it thinks, or union types need to be asserted to a more specific type to work with other APIs, so assert with the &lt;code&gt;as&lt;/code&gt; keyword. This tells the compiler you know better than it does.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  render() {
    const { message } = this.props;
    return (
      &amp;lt;Component2 message={message as SpecialMessageType}&amp;gt;{message}&amp;lt;/Component2&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgGU61gUAbAWSQGduUBzJABVa9ALwFuMKMAB2-fAG4KFOTCRRM6egAUcYbnADeFOHBA8+ggFxwpM+XAA+cAK6yAJkkxykH5eQAvirkaBCyUnAAwriQskiyMABMtsjoMAB0AGJRADx6EAYAfHASABRG5pYCSIEAlKUlZaZwuR7AAG5FLWa5ABYAjEVGFrw1gbkA9IPd5L2T7V0UdSFobCi8cBzUMeDhCfBIAB7qnoZpGBm7cQe5JnNVYzZ20nL8AYEl92ZEnhplDW+ZjgYQi8Eqoys9ECpTgMD6wG4GTA+m4AWBcCIMFcUFkcGaDwxuWu+0SSUeULEI2qgjgG0YzFYnBpwlEn2pT1qUxJ8TJswxdXRcGCQSAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note that you cannot assert your way to anything - basically it is only for refining types. Therefore it is not the same as &quot;casting&quot; a type.&lt;/p&gt; 
&lt;p&gt;You can also assert a property is non-null, when accessing it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;element.parentNode!.removeChild(element); // ! before the period
myFunction(document.getElementById(dialog.id!)!); // ! after the property accessing
let userID!: string; // definite assignment assertion... be careful!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, try to actually handle the null case instead of asserting :)&lt;/p&gt; 
&lt;h2&gt;Simulating Nominal Types&lt;/h2&gt; 
&lt;p&gt;TS&#39; structural typing is handy, until it is inconvenient. However you can simulate nominal typing with &lt;a href=&quot;https://basarat.gitbook.io/typescript/main-1/nominaltyping&quot;&gt;&lt;code&gt;type branding&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type OrderID = string &amp;amp; { readonly brand: unique symbol };
type UserID = string &amp;amp; { readonly brand: unique symbol };
type ID = OrderID | UserID;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can create these values with the Companion Object Pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function OrderID(id: string) {
  return id as OrderID;
}
function UserID(id: string) {
  return id as UserID;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now TypeScript will disallow you from using the wrong ID in the wrong place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function queryForUser(id: UserID) {
  // ...
}
queryForUser(OrderID(&quot;foobar&quot;)); // Error, Argument of type &#39;OrderID&#39; is not assignable to parameter of type &#39;UserID&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In future you can use the &lt;code&gt;unique&lt;/code&gt; keyword to brand. &lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/33038&quot;&gt;See this PR&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Intersection Types&lt;/h2&gt; 
&lt;p&gt;Adding two types together can be handy, for example when your component is supposed to mirror the props of a native component like a &lt;code&gt;button&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export interface PrimaryButtonProps {
  label: string;
}
export const PrimaryButton = (
  props: PrimaryButtonProps &amp;amp; React.ButtonHTMLAttributes&amp;lt;HTMLButtonElement&amp;gt;
) =&amp;gt; {
  // do custom buttony stuff
  return &amp;lt;button {...props}&amp;gt; {props.label} &amp;lt;/button&amp;gt;;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Playground &lt;a href=&quot;https://www.typescriptlang.org/play?ssl=4&amp;amp;ssc=1&amp;amp;pln=12&amp;amp;pc=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCipAD0ljmADsYkpN0k4AFKUFKAE8AQgFcYMCE14QwAZzgBvCnDgAbFACMkagFxw5MPkwDmAbgoBfanWjw0Uwzz4gBI8ZKZwAvHAAUKnBgOPL6vPxCYhJSMvJwAGSIxDAAdFGeABIAKgCyADIAghJ8muJIcgA82fnpUgCiakggSCwAfBQAlD6tSoEA9H1wACYQcGiihrhwpdFMggYwopiYgUSLUF4VM55KKXvBsnKWPYoH8ika2mqWcBV921KtFuSWQA&quot;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can also use Intersection Types to make reusable subsets of props for similar components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type BaseProps = {
   className?: string,
   style?: React.CSSProperties
   name: string // used in both
}
type DogProps = {
  tailsCount: number
}
type HumanProps = {
  handsCount: number
}
export const Human: React.FC&amp;lt;BaseProps &amp;amp; HumanProps&amp;gt; = // ...
export const Dog: React.FC&amp;lt;BaseProps &amp;amp; DogProps&amp;gt; = // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgCEUBnJABRzGbgF44BvCnGFoANi2YA5FCCQB+AFxxmMKMAB2AcwA0Q4Suqj5S5OhgA6AMIBlaxwh1YwJMz1x1MpEpVqtcAPT+cACurAAmcBpwAEYQMAAWFAC+VLT0ACIQmvZcvAJ6MCjAosyWEMHqMErqwSDRSFDJqXRwABK1KOo53HyC5MLxnWGl5ZXVtfWN5CnkSAAekLBwaBDqKm0d6ibEFgBilgA8TKzdcABkGyCd3QB8eQAUAJS8d-d6B2HAAG4BNxSPFAo80W8BWa3gmU02zM5n2RxY7E43AukNuD2ePFe70+P38f3IjyAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Make sure not to confuse Intersection Types (which are &lt;strong&gt;and&lt;/strong&gt; operations) with Union Types (which are &lt;strong&gt;or&lt;/strong&gt; operations).&lt;/p&gt; 
&lt;h2&gt;Union Types&lt;/h2&gt; 
&lt;p&gt;This section is yet to be written (please contribute!). Meanwhile, see our &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/README.md#union-types-and-type-guarding&quot;&gt;commentary on Union Types usecases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The ADVANCED cheatsheet also has information on Discriminated Union Types, which are helpful when TypeScript doesn&#39;t seem to be narrowing your union type as you expect.&lt;/p&gt; 
&lt;h2&gt;Overloading Function Types&lt;/h2&gt; 
&lt;p&gt;Specifically when it comes to functions, you may need to overload instead of union type. The most common way function types are written uses the shorthand:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type FunctionType1 = (x: string, y: number) =&amp;gt; number;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But this doesn&#39;t let you do any overloading. If you have the implementation, you can put them after each other with the function keyword:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function pickCard(x: { suit: string; card: number }[]): number;
function pickCard(x: number): { suit: string; card: number };
function pickCard(x): any {
  // implementation with combined signature
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, if you don&#39;t have an implementation and are just writing a &lt;code&gt;.d.ts&lt;/code&gt; definition file, this won&#39;t help you either. In this case you can forego any shorthand and write them the old-school way. The key thing to remember here is as far as TypeScript is concerned, &lt;code&gt;functions are just callable objects with no key&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type pickCard = {
  (x: { suit: string; card: number }[]): number;
  (x: number): { suit: string; card: number };
  // no need for combined signature in this form
  // you can also type static properties of functions here eg `pickCard.wasCalled`
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that when you implement the actual overloaded function, the implementation will need to declare the combined call signature that you&#39;ll be handling, it won&#39;t be inferred for you. You can see readily see examples of overloads in DOM APIs, e.g. &lt;code&gt;createElement&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/functions.html#overloads&quot;&gt;Read more about Overloading in the Handbook.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using Inferred Types&lt;/h2&gt; 
&lt;p&gt;Leaning on TypeScript&#39;s Type Inference is great... until you realize you need a type that was inferred, and have to go back and explicitly declare types/interfaces so you can export them for reuse.&lt;/p&gt; 
&lt;p&gt;Fortunately, with &lt;code&gt;typeof&lt;/code&gt;, you won&#39;t have to do that. Just use it on any value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

const someMethod = (obj: typeof state) =&amp;gt; {
  // grabbing the type of state even though it was inferred
  // some code using obj
  setState(obj); // this works
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Partial Types&lt;/h2&gt; 
&lt;p&gt;Working with slicing state and props is common in React. Again, you don&#39;t really have to go and explicitly redefine your types if you use the &lt;code&gt;Partial&lt;/code&gt; generic type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

// NOTE: stale state merging is not actually encouraged in React.useState
// we are just demonstrating how to use Partial here
const partialStateUpdate = (obj: Partial&amp;lt;typeof state&amp;gt;) =&amp;gt;
  setState({ ...state, ...obj });

// later on...
partialStateUpdate({ foo: 2 }); // this works
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Minor caveats on using &lt;code&gt;Partial&lt;/code&gt; &lt;/summary&gt; 
 &lt;p&gt;Note that there are some TS users who don&#39;t agree with using &lt;code&gt;Partial&lt;/code&gt; as it behaves today. See &lt;a href=&quot;https://twitter.com/ferdaber/status/1084798596027957248&quot;&gt;subtle pitfalls of the above example here&lt;/a&gt;, and check out this long discussion on &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365&quot;&gt;why @types/react uses Pick instead of Partial&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;The Types I need weren&#39;t exported!&lt;/h2&gt; 
&lt;p&gt;This can be annoying but here are ways to grab the types!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the Prop types of a component: Use &lt;code&gt;React.ComponentProps&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt;, and optionally &lt;code&gt;Omit&lt;/code&gt; any overlapping types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Button } from &quot;library&quot;; // but doesn&#39;t export ButtonProps! oh no!
type ButtonProps = React.ComponentProps&amp;lt;typeof Button&amp;gt;; // no problem! grab your own!
type AlertButtonProps = Omit&amp;lt;ButtonProps, &quot;onClick&quot;&amp;gt;; // modify
const AlertButton: React.FC&amp;lt;AlertButtonProps&amp;gt; = (props) =&amp;gt; (
  &amp;lt;Button onClick={() =&amp;gt; alert(&quot;hello&quot;)} {...props} /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L774&quot;&gt;&lt;code&gt;ComponentPropsWithoutRef&lt;/code&gt;&lt;/a&gt; (instead of ComponentProps) and &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt; (if your component specifically forwards refs)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the return type of a function: use &lt;code&gt;ReturnType&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// inside some library - return type { baz: number } is inferred but not exported
function foo(bar: string) {
  return { baz: 1 };
}

//  inside your app, if you need { baz: number }
type FooReturn = ReturnType&amp;lt;typeof foo&amp;gt;; // { baz: number }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In fact you can grab virtually anything public: &lt;a href=&quot;http://ikoshelev.azurewebsites.net/search/id/11/Pragmatic-uses-of-TypeScript-type-system-My-type-of-type&quot;&gt;see this blogpost from Ivan Koshelev&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function foo() {
  return {
    a: 1,
    b: 2,
    subInstArr: [
      {
        c: 3,
        d: 4,
      },
    ],
  };
}

type InstType = ReturnType&amp;lt;typeof foo&amp;gt;;
type SubInstArr = InstType[&quot;subInstArr&quot;];
type SubIsntType = SubInstArr[0];

let baz: SubIsntType = {
  c: 5,
  d: 6, // type checks ok!
};

//You could just write a one-liner,
//But please make sure it is forward-readable
//(you can understand it from reading once left-to-right with no jumps)
type SubIsntType2 = ReturnType&amp;lt;typeof foo&amp;gt;[&quot;subInstArr&quot;][0];
let baz2: SubIsntType2 = {
  c: 5,
  d: 6, // type checks ok!
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;TS also ships with a &lt;code&gt;Parameters&lt;/code&gt; utility type for extracting the parameters of a function&lt;/li&gt; 
 &lt;li&gt;for anything more &quot;custom&quot;, the &lt;code&gt;infer&lt;/code&gt; keyword is the basic building block for this, but takes a bit of getting used to. Look at the source code for the above utility types, and &lt;a href=&quot;https://twitter.com/mgechev/status/1211030455224422401?s=20&quot;&gt;this example&lt;/a&gt; to get the idea. Basarat &lt;a href=&quot;https://www.youtube.com/watch?v=ijK-1R-LFII&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=3&amp;amp;t=0s&quot;&gt;also has a good video on &lt;code&gt;infer&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The Types I need don&#39;t exist!&lt;/h2&gt; 
&lt;p&gt;What&#39;s more annoying than modules with unexported types? Modules that are &lt;strong&gt;untyped&lt;/strong&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Before you proceed - make sure you have checked that types don&#39;t exist in &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped&quot;&gt;DefinitelyTyped&lt;/a&gt; or &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Fret not! There are more than a couple of ways in which you can solve this problem.&lt;/p&gt; 
&lt;h3&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/h3&gt; 
&lt;p&gt;A &lt;strong&gt;lazier&lt;/strong&gt; way would be to create a new type declaration file, say &lt;code&gt;typedec.d.ts&lt;/code&gt;– if you don&#39;t already have one. Ensure that the path to file is resolvable by TypeScript by checking the &lt;code&gt;include&lt;/code&gt; array in the &lt;code&gt;tsconfig.json&lt;/code&gt; file at the root of your directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// inside tsconfig.json
{
  // ...
  &quot;include&quot;: [
    &quot;src&quot; // automatically resolves if the path to declaration is src/typedec.d.ts
  ]
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Within this file, add the &lt;code&gt;declare&lt;/code&gt; syntax for your desired module, say &lt;code&gt;my-untyped-module&lt;/code&gt;– to the declaration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// inside typedec.d.ts
declare module &quot;my-untyped-module&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This one-liner alone is enough if you just need it to work without errors. A even hackier, write-once-and-forget way would be to use &lt;code&gt;&quot;*&quot;&lt;/code&gt; instead which would then apply the &lt;code&gt;Any&lt;/code&gt; type for all existing and future untyped modules.&lt;/p&gt; 
&lt;p&gt;This solution works well as a workaround if you have less than a couple untyped modules. Anything more, you now have a ticking type-bomb in your hands. The only way of circumventing this problem would be to define the missing types for those untyped modules as explained in the following sections.&lt;/p&gt; 
&lt;h3&gt;Autogenerate types&lt;/h3&gt; 
&lt;p&gt;You can use TypeScript with &lt;code&gt;--allowJs&lt;/code&gt; and &lt;code&gt;--declaration&lt;/code&gt; to see TypeScript&#39;s &quot;best guess&quot; at the types of the library.&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work well enough, use &lt;a href=&quot;https://github.com/Microsoft/dts-gen&quot;&gt;&lt;code&gt;dts-gen&lt;/code&gt;&lt;/a&gt; to use the runtime shape of the object to accurately enumerate all available properties. This tends to be very accurate, BUT the tool does not yet support scraping JSDoc comments to populate additional types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g dts-gen
dts-gen -m &amp;lt;your-module&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are other automated JS to TS conversion tools and migration strategies - see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/from_js&quot;&gt;our MIGRATION cheatsheet&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Typing Exported Hooks&lt;/h3&gt; 
&lt;p&gt;Typing Hooks is just like typing pure functions.&lt;/p&gt; 
&lt;p&gt;The following steps work under two assumptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have already created a type declaration file as stated earlier in the section.&lt;/li&gt; 
 &lt;li&gt;You have access to the source code - specifically the code that directly exports the functions you will be using. In most cases, it would be housed in an &lt;code&gt;index.js&lt;/code&gt; file. Typically you need a minimum of &lt;strong&gt;two&lt;/strong&gt; type declarations (one for &lt;strong&gt;Input Prop&lt;/strong&gt; and the other for &lt;strong&gt;Return Prop&lt;/strong&gt;) to define a hook completely. Suppose the hook you wish to type follows the following structure,&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ...
const useUntypedHook = (prop) =&amp;gt; {
  // some processing happens here
  return {
    /* ReturnProps */
  };
};
export default useUntypedHook;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then, your type declaration should most likely follow the following syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &#39;use-untyped-hook&#39; {
  export interface InputProps { ... }   // type declaration for prop
  export interface ReturnProps { ... } // type declaration for return props
  export default function useUntypedHook(
    prop: InputProps
    // ...
  ): ReturnProps;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;For instance, the &lt;a href=&quot;https://github.com/donavon/use-dark-mode&quot;&gt;useDarkMode hook&lt;/a&gt; exports the functions that follows a similar structure.&lt;/p&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// inside src/index.js
const useDarkMode = (
  initialValue = false, // -&amp;gt; input props / config props to be exported
  {
    // -&amp;gt; input props / config props to be exported
    element,
    classNameDark,
    classNameLight,
    onChange,
    storageKey = &quot;darkMode&quot;,
    storageProvider,
    global,
  } = {}
) =&amp;gt; {
  // ...
  return {
    // -&amp;gt; return props to be exported
    value: state,
    enable: useCallback(() =&amp;gt; setState(true), [setState]),
    disable: useCallback(() =&amp;gt; setState(false), [setState]),
    toggle: useCallback(() =&amp;gt; setState((current) =&amp;gt; !current), [setState]),
  };
};
export default useDarkMode;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;As the comments suggest, exporting these config props and return props following the aforementioned structure will result in the following type export.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;use-dark-mode&quot; {
  /**
   * A config object allowing you to specify certain aspects of `useDarkMode`
   */
  export interface DarkModeConfig {
    classNameDark?: string; // A className to set &quot;dark mode&quot;. Default = &quot;dark-mode&quot;.
    classNameLight?: string; // A className to set &quot;light mode&quot;. Default = &quot;light-mode&quot;.
    element?: HTMLElement; // The element to apply the className. Default = `document.body`
    onChange?: (val?: boolean) =&amp;gt; void; // Override the default className handler with a custom callback.
    storageKey?: string; // Specify the `localStorage` key. Default = &quot;darkMode&quot;. Set to `null` to disable persistent storage.
    storageProvider?: WindowLocalStorage; // A storage provider. Default = `localStorage`.
    global?: Window; // The global object. Default = `window`.
  }
  /**
   * An object returned from a call to `useDarkMode`.
   */
  export interface DarkMode {
    readonly value: boolean;
    enable: () =&amp;gt; void;
    disable: () =&amp;gt; void;
    toggle: () =&amp;gt; void;
  }
  /**
   * A custom React Hook to help you implement a &quot;dark mode&quot; component for your application.
   */
  export default function useDarkMode(
    initialState?: boolean,
    config?: DarkModeConfig
  ): DarkMode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Typing Exported Components&lt;/h3&gt; 
&lt;p&gt;In case of typing untyped class components, there&#39;s almost no difference in approach except for the fact that after declaring the types, you export the extend the type using &lt;code&gt;class UntypedClassComponent extends React.Component&amp;lt;UntypedClassComponentProps, any&amp;gt; {}&lt;/code&gt; where &lt;code&gt;UntypedClassComponentProps&lt;/code&gt; holds the type declaration.&lt;/p&gt; 
&lt;p&gt;For instance, &lt;a href=&quot;https://gist.github.com/sw-yx/37a6a3d248c2d4031801f0d568904df8&quot;&gt;sw-yx&#39;s Gist on React Router 6 types&lt;/a&gt; implemented a similar method for typing the then untyped RR6.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;react-router-dom&quot; {
  import * as React from &#39;react&#39;;
  // ...
  type NavigateProps&amp;lt;T&amp;gt; = {
    to: string | number,
    replace?: boolean,
    state?: T
  }
  //...
  export class Navigate&amp;lt;T = any&amp;gt; extends React.Component&amp;lt;NavigateProps&amp;lt;T&amp;gt;&amp;gt;{}
  // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on creating type definitions for class components, you can refer to this &lt;a href=&quot;https://templecoding.com/blog/2016/03/31/creating-typescript-typings-for-existing-react-components&quot;&gt;post&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;h2&gt;Frequent Known Problems with TypeScript&lt;/h2&gt; 
&lt;p&gt;Just a list of stuff that React developers frequently run into, that TS has no solution for. Not necessarily TSX only.&lt;/p&gt; 
&lt;h3&gt;TypeScript doesn&#39;t narrow after an object element null check&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&quot;&gt;&lt;img src=&quot;https://pbs.twimg.com/media/E0u6b9uUUAAgwAk?format=jpg&amp;amp;name=medium&quot; alt=&quot;https://pbs.twimg.com/media/E0u6b9uUUAAgwAk?format=jpg&amp;amp;name=medium&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Ref: &lt;a href=&quot;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&quot;&gt;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&lt;/a&gt;. see also &lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/9998&quot;&gt;https://github.com/microsoft/TypeScript/issues/9998&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TypeScript doesn&#39;t let you restrict the type of children&lt;/h3&gt; 
&lt;p&gt;Guaranteeing typesafety for this kind of API isn&#39;t possible:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;Menu&amp;gt;
  &amp;lt;MenuItem/&amp;gt; {/* ok */}
  &amp;lt;MenuLink/&amp;gt; {/* ok */}
  &amp;lt;div&amp;gt; {/* error */}
&amp;lt;/Menu&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Source: &lt;a href=&quot;https://twitter.com/ryanflorence/status/1085745787982700544?s=20&quot;&gt;https://twitter.com/ryanflorence/status/1085745787982700544?s=20&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:types--&gt; 
&lt;!--START-SECTION:operators--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Operators&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: type query used for refinement&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keyof&lt;/code&gt;: get keys of an object. &lt;code&gt;keyof T&lt;/code&gt; is an operator to tell you what values of &lt;code&gt;k&lt;/code&gt; can be used for &lt;code&gt;obj[k]&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://twitter.com/SeaRyanC/status/1418678670739218438?s=20&quot;&gt;Some misconceptions here&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;O[K]&lt;/code&gt;: property lookup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[K in O]&lt;/code&gt;: mapped types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;: addition and subtraction and readonly and optional modifiers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;x ? Y : Z&lt;/code&gt;: Conditional types for generic types, type aliases, function parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;!&lt;/code&gt;: Nonnull assertion for nullable types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;=&lt;/code&gt;: Generic type parameter default for generic types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;as&lt;/code&gt;: type assertion&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;is&lt;/code&gt;: type guard for function return types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Conditional Types are a difficult topic to get around so here are some extra resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;fully walked through explanation &lt;a href=&quot;https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/&quot;&gt;https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Bailing out and other advanced topics &lt;a href=&quot;https://github.com/sw-yx/ts-spec/raw/master/conditional-types.md&quot;&gt;https://github.com/sw-yx/ts-spec/blob/master/conditional-types.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s video &lt;a href=&quot;https://www.youtube.com/watch?v=SbVgPQDealg&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=2&amp;amp;t=0s&quot;&gt;https://www.youtube.com/watch?v=SbVgPQDealg&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=2&amp;amp;t=0s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:operators--&gt; 
&lt;!--START-SECTION:utilities--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Utilities&lt;/h1&gt; 
&lt;p&gt;These are all built in, &lt;a href=&quot;https://github.com/microsoft/TypeScript/raw/2c458c0d1ccb96442bca9ce43aa987fb0becf8a9/src/lib/es5.d.ts#L1401-L1474&quot;&gt;see source in es5.d.ts&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ConstructorParameters&lt;/code&gt;: a tuple of class constructor&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Exclude&lt;/code&gt;: exclude a type from another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Extract&lt;/code&gt;: select a subtype that is assignable to another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;InstanceType&lt;/code&gt;: the instance type you get from a &lt;code&gt;new&lt;/code&gt;ing a class constructor&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NonNullable&lt;/code&gt;: exclude &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; from a type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Parameters&lt;/code&gt;: a tuple of a function&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Partial&lt;/code&gt;: Make all properties in an object optional&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Readonly&lt;/code&gt;: Make all properties in an object readonly&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReadonlyArray&lt;/code&gt;: Make an immutable array of the given type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pick&lt;/code&gt;: A subtype of an object type with a subset of its keys&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Record&lt;/code&gt;: A map from a key type to a value type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Required&lt;/code&gt;: Make all properties in an object required&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReturnType&lt;/code&gt;: A function&#39;s return type&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:utilities--&gt; 
&lt;!--START-SECTION:ts-config--&gt; 
&lt;h1&gt;Troubleshooting Handbook: tsconfig.json&lt;/h1&gt; 
&lt;p&gt;You can find &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;all the Compiler options in the TypeScript docs&lt;/a&gt;. &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;The new TS docs also has per-flag annotations of what each does&lt;/a&gt;. This is the setup I roll with for APPS (not libraries - for libraries you may wish to see the settings we use in &lt;code&gt;tsdx&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;incremental&quot;: true,
    &quot;outDir&quot;: &quot;build/lib&quot;,
    &quot;target&quot;: &quot;es5&quot;,
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;lib&quot;: [&quot;DOM&quot;, &quot;ESNext&quot;],
    &quot;sourceMap&quot;: true,
    &quot;importHelpers&quot;: true,
    &quot;declaration&quot;: true,
    &quot;rootDir&quot;: &quot;src&quot;,
    &quot;strict&quot;: true,
    &quot;noUnusedLocals&quot;: true,
    &quot;noUnusedParameters&quot;: true,
    &quot;noImplicitReturns&quot;: true,
    &quot;noFallthroughCasesInSwitch&quot;: true,
    &quot;allowJs&quot;: false,
    &quot;jsx&quot;: &quot;react&quot;,
    &quot;moduleResolution&quot;: &quot;node&quot;,
    &quot;baseUrl&quot;: &quot;src&quot;,
    &quot;forceConsistentCasingInFileNames&quot;: true,
    &quot;esModuleInterop&quot;: true,
    &quot;suppressImplicitAnyIndexErrors&quot;: true,
    &quot;allowSyntheticDefaultImports&quot;: true,
    &quot;experimentalDecorators&quot;: true
  },
  &quot;include&quot;: [&quot;src/**/*&quot;],
  &quot;exclude&quot;: [&quot;node_modules&quot;, &quot;build&quot;, &quot;scripts&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find more &lt;a href=&quot;https://github.com/tsconfig/bases&quot;&gt;recommended TS config here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please open an issue and discuss if there are better recommended choices for React.&lt;/p&gt; 
&lt;p&gt;Selected flags and why we like them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;esModuleInterop&lt;/code&gt;: disables namespace imports (&lt;code&gt;import * as foo from &quot;foo&quot;&lt;/code&gt;) and enables CJS/AMD/UMD style imports (&lt;code&gt;import fs from &quot;fs&quot;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strict&lt;/code&gt;: &lt;code&gt;strictPropertyInitialization&lt;/code&gt; forces you to initialize class properties or explicitly declare that they can be undefined. You can opt out of this with a definite assignment assertion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&quot;typeRoots&quot;: [&quot;./typings&quot;, &quot;./node_modules/@types&quot;]&lt;/code&gt;: By default, TypeScript looks in &lt;code&gt;node_modules/@types&lt;/code&gt; and parent folders for third party type declarations. You may wish to override this default resolution so you can put all your global type declarations in a special &lt;code&gt;typings&lt;/code&gt; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Compilation speed grows linearly with size of codebase. For large projects, you will want to use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/project-references.html&quot;&gt;Project References&lt;/a&gt;. See our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro/&quot;&gt;ADVANCED&lt;/a&gt; cheatsheet for commentary.&lt;/p&gt; 
&lt;!--END-SECTION:ts-config--&gt; 
&lt;!--START-SECTION:official-typings-bugs--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/h1&gt; 
&lt;p&gt;If you run into bugs with your library&#39;s official typings, you can copy them locally and tell TypeScript to use your local version using the &quot;paths&quot; field. In your &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;paths&quot;: {
      &quot;mobx-react&quot;: [&quot;../typings/modules/mobx-react&quot;]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/AdamRackis/status/1024827730452520963&quot;&gt;Thanks to @adamrackis for the tip.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you just need to add an interface, or add missing members to an existing interface, you don&#39;t need to copy the whole typing package. Instead, you can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-merging.html&quot;&gt;declaration merging&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot; {
  interface PlotlyHTMLElement {
    removeAllListeners(): void;
  }
}

// MyComponent.tsx
import { PlotlyHTMLElement } from &quot;plotly.js&quot;;

const f = (e: PlotlyHTMLElement) =&amp;gt; {
  e.removeAllListeners();
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You dont always have to implement the module, you can simply import the module as &lt;code&gt;any&lt;/code&gt; for a quick start:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot;; // each of its imports are `any`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Because you don&#39;t have to explicitly import this, this is known as an &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html#pitfalls-of-namespaces-and-modules&quot;&gt;ambient module declaration&lt;/a&gt;. You can do AMD&#39;s in a script-mode &lt;code&gt;.ts&lt;/code&gt; file (no imports or exports), or a &lt;code&gt;.d.ts&lt;/code&gt; file anywhere in your project.&lt;/p&gt; 
&lt;p&gt;You can also do ambient variable and ambient type declarations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// ambient utiltity type
type ToArray&amp;lt;T&amp;gt; = T extends unknown[] ? T : T[];
// ambient variable
declare let process: {
  env: {
    NODE_ENV: &quot;development&quot; | &quot;production&quot;;
  };
};
process = {
  env: {
    NODE_ENV: &quot;production&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see examples of these included in the built in type declarations in the &lt;code&gt;lib&lt;/code&gt; field of &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/p&gt; 
&lt;!--END-SECTION:official-typings-bugs--&gt; 
&lt;!--START-SECTION:non-ts-files--&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: &lt;a href=&quot;https://www.youtube.com/watch?v=ET4kT88JRXs&quot;&gt;https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: &lt;a href=&quot;https://blog.mariusschulz.com/series/typescript-evolution&quot;&gt;https://blog.mariusschulz.com/series/typescript-evolution&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: &lt;a href=&quot;https://basarat.gitbook.io/typescript/&quot;&gt;https://basarat.gitbook.io/typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Axel Rauschmeyer&#39;s &lt;a href=&quot;https://exploringjs.com/tackling-ts/&quot;&gt;Tackling TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:non-ts-files--&gt; 
&lt;!--START-SECTION:resources--&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/&quot;&gt;https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://startup-cto.net/10-bad-typescript-habits-to-break-this-year/&quot;&gt;10 Bad TypeScript Habits&lt;/a&gt;: 
  &lt;ol&gt; 
   &lt;li&gt;not using &lt;code&gt;&quot;strict&quot;: true&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;using &lt;code&gt;||&lt;/code&gt; for default values when we have &lt;code&gt;??&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Using &lt;code&gt;any&lt;/code&gt; instead of &lt;code&gt;unknown&lt;/code&gt; for API responses&lt;/li&gt; 
   &lt;li&gt;using &lt;code&gt;as&lt;/code&gt; assertion instead of Type Guards (&lt;code&gt;function isFoo(obj: unknown): obj is Foo {}&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;as any&lt;/code&gt; in tests&lt;/li&gt; 
   &lt;li&gt;Marking optional properties instead of modeling which combinations exist by extending interfaces&lt;/li&gt; 
   &lt;li&gt;One letter generics&lt;/li&gt; 
   &lt;li&gt;Non-boolean &lt;code&gt;if (nonboolean)&lt;/code&gt; checks&lt;/li&gt; 
   &lt;li&gt;bangbang checks &lt;code&gt;if (!!nonboolean)&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;!= null&lt;/code&gt; to check for &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/production-typescript/&quot;&gt;Mike North&#39;s Production TypeScript course on Frontend Masters (paid)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jenil.github.io/chota/&quot;&gt;TSX Guide&lt;/a&gt; by &lt;a href=&quot;https://github.com/gojutin/www.tsx.guide&quot;&gt;gojutin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:resources--&gt; 
&lt;!--START-SECTION:editor-integration--&gt; 
&lt;h1&gt;Editor Tooling and Integration&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;VSCode 
  &lt;ul&gt; 
   &lt;li&gt;swyx&#39;s VSCode Extension: &lt;a href=&quot;https://github.com/sw-yx/swyx-react-typescript-snippets&quot;&gt;https://github.com/sw-yx/swyx-react-typescript-snippets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;amVim: &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=auiworks.amvim&quot;&gt;https://marketplace.visualstudio.com/items?itemName=auiworks.amvim&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;VIM 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Quramy/tsuquyomi&quot;&gt;https://github.com/Quramy/tsuquyomi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;nvim-typescript?&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/leafgarland/typescript-vim&quot;&gt;https://github.com/leafgarland/typescript-vim&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;peitalin/vim-jsx-typescript&lt;/li&gt; 
   &lt;li&gt;NeoVim: &lt;a href=&quot;https://github.com/neoclide/coc.nvim&quot;&gt;https://github.com/neoclide/coc.nvim&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;other discussion: &lt;a href=&quot;https://mobile.twitter.com/ryanflorence/status/1085715595994095620&quot;&gt;https://mobile.twitter.com/ryanflorence/status/1085715595994095620&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You are free to use this repo&#39;s TSX logo if you wish:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot; alt=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also wish to use alternative logos - &lt;a href=&quot;https://github.com/Protectator/jsx-tsx-logos&quot;&gt;jsx-tsx-logos&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot; alt=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot;&gt;&lt;/p&gt; 
&lt;!--END-SECTION:editor-integration--&gt; 
&lt;!--START-SECTION:linting--&gt; 
&lt;h1&gt;Linting&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️Note that &lt;a href=&quot;https://medium.com/palantir/tslint-in-2019-1a144c2317a9&quot;&gt;TSLint is now in maintenance and you should try to use ESLint instead&lt;/a&gt;. If you are interested in TSLint tips, please check this PR from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/14&quot;&gt;@azdanov&lt;/a&gt;. The rest of this section just focuses on ESLint. &lt;a href=&quot;https://github.com/typescript-eslint/tslint-to-eslint-config&quot;&gt;You can convert TSlint to ESlint with this tool&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️This is an evolving topic. &lt;code&gt;typescript-eslint-parser&lt;/code&gt; is no longer maintained and &lt;a href=&quot;https://eslint.org/blog/2019/01/future-typescript-eslint&quot;&gt;work has recently begun on &lt;code&gt;typescript-eslint&lt;/code&gt; in the ESLint community&lt;/a&gt; to bring ESLint up to full parity and interop with TSLint.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow the TypeScript + ESLint docs at &lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint&quot;&gt;https://github.com/typescript-eslint/typescript-eslint&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;add a &lt;code&gt;lint&lt;/code&gt; script to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;scripts&quot;: {
    &quot;lint&quot;: &quot;eslint &#39;src/**/*.ts&#39;&quot;
  },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and a suitable &lt;code&gt;.eslintrc.js&lt;/code&gt; (using &lt;code&gt;.js&lt;/code&gt; over &lt;code&gt;.json&lt;/code&gt; here so we can add comments):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = {
  env: {
    es6: true,
    node: true,
    jest: true,
  },
  extends: &quot;eslint:recommended&quot;,
  parser: &quot;@typescript-eslint/parser&quot;,
  plugins: [&quot;@typescript-eslint&quot;],
  parserOptions: {
    ecmaVersion: 2017,
    sourceType: &quot;module&quot;,
  },
  rules: {
    indent: [&quot;error&quot;, 2],
    &quot;linebreak-style&quot;: [&quot;error&quot;, &quot;unix&quot;],
    quotes: [&quot;error&quot;, &quot;single&quot;],
    &quot;no-console&quot;: &quot;warn&quot;,
    &quot;no-unused-vars&quot;: &quot;off&quot;,
    &quot;@typescript-eslint/no-unused-vars&quot;: [
      &quot;error&quot;,
      { vars: &quot;all&quot;, args: &quot;after-used&quot;, ignoreRestSiblings: false },
    ],
    &quot;@typescript-eslint/explicit-function-return-type&quot;: &quot;warn&quot;, // Consider using explicit annotations for object literals and function return types even when they can be inferred.
    &quot;no-empty&quot;: &quot;warn&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Most of this is taken from &lt;a href=&quot;https://github.com/palmerhq/tsdx/pull/70/files&quot;&gt;the &lt;code&gt;tsdx&lt;/code&gt; PR&lt;/a&gt; which is for &lt;strong&gt;libraries&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;More &lt;code&gt;.eslintrc.json&lt;/code&gt; options to consider with more options you may want for &lt;strong&gt;apps&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: [
    &quot;airbnb&quot;,
    &quot;prettier&quot;,
    &quot;prettier/react&quot;,
    &quot;plugin:prettier/recommended&quot;,
    &quot;plugin:jest/recommended&quot;,
    &quot;plugin:unicorn/recommended&quot;
  ],
  &quot;plugins&quot;: [&quot;prettier&quot;, &quot;jest&quot;, &quot;unicorn&quot;],
  &quot;parserOptions&quot;: {
    &quot;sourceType&quot;: &quot;module&quot;,
    &quot;ecmaFeatures&quot;: {
      &quot;jsx&quot;: true
    }
  },
  &quot;env&quot;: {
    &quot;es6&quot;: true,
    &quot;browser&quot;: true,
    &quot;jest&quot;: true
  },
  &quot;settings&quot;: {
    &quot;import/resolver&quot;: {
      &quot;node&quot;: {
        &quot;extensions&quot;: [&quot;.js&quot;, &quot;.jsx&quot;, &quot;.ts&quot;, &quot;.tsx&quot;]
      }
    }
  },
  &quot;overrides&quot;: [
    {
      &quot;files&quot;: [&quot;**/*.ts&quot;, &quot;**/*.tsx&quot;],
      &quot;parser&quot;: &quot;typescript-eslint-parser&quot;,
      &quot;rules&quot;: {
        &quot;no-undef&quot;: &quot;off&quot;
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can read a &lt;a href=&quot;https://blog.matterhorn.dev/posts/learn-typescript-linting-part-1/&quot;&gt;fuller TypeScript + ESLint setup guide here&lt;/a&gt; from Matterhorn, in particular check &lt;a href=&quot;https://github.com/MatterhornDev/learn-typescript-linting&quot;&gt;https://github.com/MatterhornDev/learn-typescript-linting&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Another great resource is &lt;a href=&quot;https://dev.to/robertcoopercode/using-eslint-and-prettier-in-a-typescript-project-53jb&quot;&gt;&quot;Using ESLint and Prettier in a TypeScript Project&quot;&lt;/a&gt; by @robertcoopercode.&lt;/p&gt; 
&lt;p&gt;Wes Bos is also working on &lt;a href=&quot;https://github.com/wesbos/eslint-config-wesbos/issues/68&quot;&gt;TypeScript support for his eslint+prettier config.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you&#39;re looking for information on Prettier, check out the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/raw/main/docs/advanced/misc-concerns.md#prettier&quot;&gt;Prettier&lt;/a&gt; guide.&lt;/p&gt; 
&lt;!--END-SECTION:linting--&gt; 
&lt;!--START-SECTION:other-resources--&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react&quot;&gt;Stefan Baumgartner&#39;s TypeScript + React Guide&lt;/a&gt;, which serves as a side-by-side guide to the official docs with extra articles on styling, custom hooks and patterns&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react&quot;&gt;DefinitelyTyped React source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:other-resources--&gt; 
&lt;!--START-SECTION:talks--&gt; 
&lt;h1&gt;Recommended React + TypeScript talks&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_PBQ3if6Fmg&quot;&gt;Ultimate React Component Patterns with TypeScript&lt;/a&gt;, by Martin Hochel, GeeCon Prague 2018&lt;/li&gt; 
 &lt;li&gt;Please help contribute this new section!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:talks--&gt; 
&lt;!--START-SECTION:learn-ts--&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: &lt;a href=&quot;https://www.youtube.com/watch?v=ET4kT88JRXs&quot;&gt;https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: &lt;a href=&quot;https://blog.mariusschulz.com/series/typescript-evolution&quot;&gt;https://blog.mariusschulz.com/series/typescript-evolution&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: &lt;a href=&quot;https://basarat.gitbook.io/typescript/&quot;&gt;https://basarat.gitbook.io/typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Axel Rauschmeyer&#39;s &lt;a href=&quot;https://exploringjs.com/tackling-ts/&quot;&gt;Tackling TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:learn-ts--&gt; 
&lt;!--START-SECTION:examples--&gt; 
&lt;h1&gt;Example App&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laststance/create-react-app-typescript-todo-example-2021&quot;&gt;Create React App TypeScript Todo Example 2021&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=I6ypD7qv3Z8&quot;&gt;Ben Awad&#39;s 14 hour Fullstack React/GraphQL/TypeScript Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress-realworld-app&quot;&gt;Cypress Realworld App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:examples--&gt; 
&lt;h1&gt;My question isn&#39;t answered here!&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. See &lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;CONTRIBUTORS.md&lt;/a&gt; for the full list. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pedroslopez/whatsapp-web.js</title>
      <link>https://github.com/pedroslopez/whatsapp-web.js</link>
      <description>&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg?sanitize=true&quot; alt=&quot;Depfu&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.2126.14-brightgreen.svg?sanitize=true&quot; alt=&quot;WhatsApp_Web 2.2126.14&quot;&gt; &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;whatsapp-web.js&lt;/h1&gt; 
&lt;p&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/p&gt; 
&lt;p&gt;It uses Puppeteer to run a real instance of Whatsapp Web to avoid getting blocked.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I can&#39;t guarantee you will not be blocked by using this method, although it has worked for me. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#39;t be considered totally safe.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Please note that Node v12+ is required.&lt;/p&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;whatsapp-web.js&#39;);

const client = new Client();

client.on(&#39;qr&#39;, (qr) =&amp;gt; {
    // Generate and scan this code with your phone
    console.log(&#39;QR RECEIVED&#39;, qr);
});

client.on(&#39;ready&#39;, () =&amp;gt; {
    console.log(&#39;Client is ready!&#39;);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
    if (msg.body == &#39;!ping&#39;) {
        msg.reply(&#39;pong&#39;);
    }
});

client.initialize();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at &lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js/raw/master/example.js&quot;&gt;example.js&lt;/a&gt; for another example with more use cases.&lt;/p&gt; 
&lt;h2&gt;Remote Access&lt;/h2&gt; 
&lt;p&gt;You could also connect to any previously existing browser instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const client = new Client({ 
    puppeteer: {
        browserWSEndpoint: `ws://localhost:3000`
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Installing a browser using browserless:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker run \
  --rm \
  -p 3000:3000 \
  -e &quot;MAX_CONCURRENT_SESSIONS=1&quot; \
  browserless/chrome:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reference: &lt;a href=&quot;https://docs.browserless.io/docs/docker-quickstart.html&quot;&gt;https://docs.browserless.io/docs/docker-quickstart.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Remote Debugging&lt;/h3&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Running a browser with websocket remote debugging enabled:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;chrome.exe --remote-debugging-port=9222&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;After that check the following webpage and check &lt;a href=&quot;http://127.0.0.1:9220/json&quot;&gt;http://127.0.0.1:9220/json&lt;/a&gt; and get the &lt;strong&gt;webSocketDebuggerUrl&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Supported features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (images/audio/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (video)&lt;/td&gt; 
   &lt;td&gt;✅ &lt;a href=&quot;https://guide.wwebjs.dev/features/handling-attachments#caveat-for-sending-videos-and-gifs&quot;&gt;(requires google chrome)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send stickers&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive media (images/audio/video/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send contact cards&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Message replies&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join groups by invite&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get invite for group&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group info (subject, description)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group settings (send messages, edit info)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Add group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kick group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Promote/demote group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention users&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mute/unmute chats&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Block/unblock contacts&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get contact info&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get profile pictures&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Set user status message&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.wwebjs.dev/&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guide.wwebjs.dev/&quot;&gt;Guide&lt;/a&gt; &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.org/package/whatsapp-web.js&quot;&gt;npm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome! If you see something you&#39;d like to add, please do. For drastic changes, please open an issue first.&lt;/p&gt; 
&lt;h2&gt;Donating&lt;/h2&gt; 
&lt;p&gt;You can support the maintainer of this project through the link below&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.me/psla/&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg?sanitize=true&quot; alt=&quot;Support via PayPal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at &lt;a href=&quot;https://whatsapp.com&quot;&gt;https://whatsapp.com&lt;/a&gt;. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this project except in compliance with the License. You may obtain a copy of the License at &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bluxmit/alnoda-workspaces</title>
      <link>https://github.com/bluxmit/alnoda-workspaces</link>
      <description>&lt;p&gt;Development environments in docker&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Workspaces in docker&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Good engineers make, great engineers share.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Making a tool - environment ready for complex engineering, analytical, operations, data science, or other IT project - is not easy. If you&#39;ve made one, share it! It might be of great use for someone.&lt;/p&gt; 
&lt;p&gt;This project was created to share dockerized workspaces, and to set an example of how such workspaces can be developed.&lt;/p&gt; 
&lt;h3&gt;Contents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/#what-is-workspace-in-docker&quot;&gt;What is workspace In Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/#available-workspaces&quot;&gt;Available workspaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/#why-workspace-in-docker&quot;&gt;Why workspace In Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/#use-cases&quot;&gt;Use-cases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/#how-to-make-your-own-workspace&quot;&gt;How to make your own workspace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/#publications&quot;&gt;Publications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/#feedback-an-contribution&quot;&gt;Feedback and contribution&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is workspace In Docker&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;TLDR: Workspaces are toolsets designed for a specific project and packaged as docker images. They make it easy to switch between projects; can be moved between laptops, PCs, and cloud servers; can run in the cloud and be used from any device; have versions and backups; can be used by several users and make collaboration easier.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/img/wid-advantages.svg?sanitize=true&quot; alt=&quot;Htop&quot;&gt; &lt;/p&gt; 
&lt;p&gt;Essentially, workspace - is a toolset for a specific kind of work, packed in a docker image. It is a self-contained environment that is ready to use as soon as you execute &lt;code&gt;docker run&lt;/code&gt;. Dockerized workspaces do not require other tools to be set up on the host machine, apart from docker itself. You can use such workspace locally or launch it securely on any cloud server.&lt;/p&gt; 
&lt;p&gt;Workspace would typically include file browser, code editor, IDE, terminal, job scheduler, resource and process monitor, documentation solution. Designed for specific IT projects, workspaces could also include frameworks, linters, profilers, testing, and auto-documentation tools, tools to visualize and study data, report generators, task orchestrators, infrastructure visualization tools, interactive notebooks, simulation UIs, custom dashboards, etc.&lt;/p&gt; 
&lt;div align=&quot;center&quot; style=&quot;font-style: italic;&quot;&gt;
  Demo: Ansible-Terraform workspace 
&lt;/div&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/ansible-terraform-workspace/img/ansible-terraform-wid.gif&quot; alt=&quot;Htop&quot; width=&quot;900&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Available workspaces&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/ubuntu-workspace/README.md&quot;&gt;&lt;code&gt;Ubuntu-workspace&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Docker as a light-weight Virtual Machine. It provides isolation of environments, but uses less resources than VMs. Allows to start multiple processes inside the same docker container, has docker-in-docker, Python and Node.js, and a collection of common applications such as text editors, git, supervisord, z-shell etc. Ubuntu-workspace with browser-based terminal can be used on both local and remote server with the same experience. When it runs on the remote server, the access can be restricted with a password, and secured with TLS encryption.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name space-1 -d -p 8020-8030:8020-8030 alnoda/ubuntu-workspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/workspace-in-docker/README.md&quot;&gt;&lt;code&gt;Workspace-in-docker&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;General-purpose dockerized workspace - an environment fully isolated inside a docker container. It can run anywhere, can be started and stopped, moved to another machine, archived to file or restored, pushed to docker registry, started on a cloud server. This workspace has a powerful cod editor (browser-based VS-Code version), its own UI, and a collection of applications for more convenient work, such as File Browser to easily exchange files and folders with workspace, Cronicle - advanced job scheduler with great UI, MkDocs for documentation of the workspace and projects. Has all the features of the Base-workspace and Ubuntu-workspace.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name space-1 -d -p 8020-8035:8020-8035 alnoda/workspace-in-docker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/codeserver-workspace/README.md&quot;&gt;&lt;code&gt;Codeserver-Workspace&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;An alternative workspace to the workspace-in-docker. It has all the features ot the latter, except for the different implementation of the Visual Studio Code. While workspace-in-docker has &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Eclipse Theia IDE&lt;/a&gt;, Codeserver-Workspace includes &lt;a href=&quot;https://github.com/cdr/code-server&quot;&gt;Codeserver&lt;/a&gt; instead.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name space-1 -d -p 8020-8035:8020-8035 alnoda/codeserver-workspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/python-workspace/README.md&quot;&gt;&lt;code&gt;Python-Workspace&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Python development enviroment inside the isolated docker container. Includes VS-code IDE, job scheduler and other tools for linting, testing, auto-documentation and profiling. Start coding in Python rght away! Has all the features of the Base-workspace and Ubuntu-workspace.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name space-1 -d -p 8020-8035:8020-8035 alnoda/python-workspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/ansible-terraform-workspace/README.md&quot;&gt;&lt;code&gt;Ansible-Terraform-Workspace&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;This workspace - is a &quot;dockerized&quot; development environment with &lt;a href=&quot;https://docs.ansible.com/&quot;&gt;Ansible&lt;/a&gt;, &lt;a href=&quot;https://www.terraform.io/&quot;&gt;Terraform&lt;/a&gt; and lots of other stuff installed, so that you don&#39;t need to do it yourself. Create infrastructures with Terraform, and configure it with Ansible. Workspace will help to code and develop; visualize infrastructures and planned terraform changes; display ansible hosts plays; schedule and observe executions and more! Has all the features of the Base-workspace and Ubuntu-workspace.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name space-1 -d -p 8020-8035:8020-8035 -p 9000:9000 alnoda/ansible-terraform-workspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/mkdocs-magicspace/README.md&quot;&gt;&lt;code&gt;MkDocs-MagicSpace&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;All-in-one tool, carefully crafted to develop, build and serve awesome static websites, for the purpose of documentation, tutorials, and training. Has all the features of the Base-workspace and Ubuntu-workspace.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name space-1 -d -p 8020-8035:8020-8035 alnoda/mkdocs-magicspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Why workspace In Docker&lt;/h2&gt; 
&lt;p&gt;Compared to the local environment, where you can install any application with a nice native interface, dockerized workspaces are much less flexible. They contain only terminal-based or browser-based tools. Also, workspaces in docker have an overhead of running inside the docker container, which can result in some performance implications.&lt;/p&gt; 
&lt;p&gt;At the same time, dockerized workspaces have several very strong advantages, that local workspaces don&#39;t. Some workspace benefits come from docker itself:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Containerization.&lt;/strong&gt; Everything in the workspace is packed in a docker container.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Isolation.&lt;/strong&gt; Changes in one environment cannot affect another environment.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy-to-switch.&lt;/strong&gt; Start and stop workspaces with just one action.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shareability.&lt;/strong&gt; Share workspace as a whole (code, files, secrets, configuration, data, etc.) with your peers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Platform-agnostic.&lt;/strong&gt; Run on any system where docker can run.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Movability.&lt;/strong&gt; You can move the entire workspaces between laptops, PCs, and servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaboration.&lt;/strong&gt; Launch workspace in cloud, and use together with your peers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Versions and backups.&lt;/strong&gt; Commit workspaces to images, or save to files. Back up the entire workspace before making changes, keep versions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other features are coming from the concept of the workspace itself, and only satisfied if the workspace is done properly:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud-ready.&lt;/strong&gt; You work with workspace through browser-based or terminal-based interfaces. Hence workspace is ready to be launched on the remote server, container orchestration platform or Kubernetes, and be used from any of your devices.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feature-reach.&lt;/strong&gt; Workspace is not merely an IDE inside a docker container. It includes the whole toolkit necessary to solve the problem.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Readiness.&lt;/strong&gt; Tooling that is needed to tackle a specific problem is pre-selected, set up, and configured with sane defaults.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to use.&lt;/strong&gt; Workspace is convenient, it has UI, and tooling is well-documented.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Independence.&lt;/strong&gt; Workspace is fully open-source. It does not use any proprietary technology, it does not depend on any cloud.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Opinionated.&lt;/strong&gt; Workspace is an opinionated system of chosen tools and practices, that according to its creator, are best suited for the specific purpose.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Use-cases&lt;/h2&gt; 
&lt;p&gt;There are many problems that workspaces in docker can solve. Dockerized workspaces can be a good choice in situations when:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You need to get started fast.&lt;/strong&gt; The creation of a new workspace is a tedious task. You need to install a programming language, set up and configure multiple tools (this can take days). You&#39;d have to research, chose, and learn how to do such things as linting, testing, pre-commit hooks, debugging, and profiling (can take months). This workspace has those tools selected and set up. Documentation on how to use them is provided, with an example.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You are working on multiple projects.&lt;/strong&gt; If you are working on a serious IT project, the chances are that you are dealing with multiple Git branches, various configuration files, and environmental variables. There is a good chance Git branches have different dependencies and versions, so you also use virtual environments. It is likely that you also have different development and production environments, with the need to change the profile of a cloud provider, kubeconfig, use another ssh-key. Switching between such environments even of a single project requires several actions, which is terrible. Things become even less convenient when we are working with multiple IT projects. Managing such projects, and switching between them becomes a real overhead. When you are working in a dockerized workspace, the switch is just one action of stopping one container and starting another!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You need to move workspaces.&lt;/strong&gt; Let&#39;s assume you mostly work on a Linux/macOS laptop, but you have a powerful gaming PC at home, and might want to use it for builds, simulations, training ML models, etc. You might realize the algorithm you are using needs extra high resources or needs to run for many hours to finish, and a very powerful cloud server should be used. Dockerized workspace can be moved as-is from one machine to another within minutes, no matter if it is a laptop, PC, or virtual cloud server.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You need to put your work to production really fast.&lt;/strong&gt; You have developed a piece of code that must be running all the time. Or jobs that should run on schedule. You cannot keep your laptop running all the time. You need to quickly move to the cloud. If you don&#39;t have time or resources to build production-ready docker images, create CI/CD, configure servers, you can simply move your workspace to the cloud as-is. Depending on the situation, such &quot;rapid&quot; deployment might be well-justified for proofs-of-concept, experiments, scheduling supporting tasks, etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Yo need an environment to isolate an experiment.&lt;/strong&gt; You want to try a new framework, library, package, or simply update your dependencies to the latest version. Try to do it in a self-contained isolated environment first.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You require backups and versions for the entire workspace.&lt;/strong&gt; Your work may go well beyond the development-debugging-testing-deployment cycle. For example, if you are a data analyst, data scientist, researcher you make experiments, simulations, train ML models. Such work often involves frequent changes to your environment (updating packages, install new applications, change datasets, etc.). To reproduce analytics, experiment, or ML model training you need to have an exact version of your environment at a specific point in time. Dockerized workspaces in docker solve this problem very well! At any moment you can backup and save your entire workspace as an image, and launch it as a new workspace whenever and wherever you want.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Collaboration made simple.&lt;/strong&gt; You need a workspace that can be shared with your peers or colleagues. Launch it on the cloud server and use together.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You need to deliver results.&lt;/strong&gt; If you are a freelancer or contractor, you might want to send your client the whole workspace you worked in. This will help your client to reproduce results without bothering you with questions after the contract is closed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You want to improve team&#39;s productivity.&lt;/strong&gt; The workspace for a serious project includes a lot of tooling, standards and conventions, secrets and configurations, ssh keys, environmental variables, VPN, and much more. Your team probably would like to do it once. When everyone needs to make this work, it is such a waste of time! An how much easier it is to onboard new team members if they can use an environment where everything is ready to get started right away.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You need to onboard freelancer/contractor asap.&lt;/strong&gt; The time freelancer spends to set up the environment - is the time you are paying for. Use a workspace, customized for the tasks you typically hire an external workforce for. Let freelancers be able to start real work as soon as possible. Save time and money.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You are buildding internal development platform.&lt;/strong&gt; An Internal Developer Platform, or IDP, is a self-service layer that allows developers to interact independently with their organization&#39;s delivery setup, enabling them to self-serve environments, deployments, databases, logs, and anything else they need to run their applications. Customize workspaces for the specifics of your IDP. Support and maintain workspaces for your company, and let engineers do the real work rather than bothering how to configure and use your company&#39;s IDP.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;You want to help others.&lt;/strong&gt; You know how to tackle a complex project. You know how to use different tooling, practices, and standards, to be successful and efficient in the specific area or tasks. You spent months setting it up, you have tried different versions and package combinations. You have made scripts to automate work. Everything seems easy for you now, and you are ready to write a blog post to help others. You can go one step further! Fellow engineers, analysts, and scientists are months behind you. Create a workspace with everything set up and ready. Together with your publication, it will greatly help people who struggle with the same problem.&lt;/p&gt; 
&lt;h2&gt;How to make your own workspace&lt;/h2&gt; 
&lt;p&gt;This repo was created with the idea in mind - to set up basics for building custom workspaces. The workspaces, shared in this project are build based on each other. Some of the workspaces are highly customized, have a narrow scope, and focus on a specific task. Other workspaces are more general and intended to be used for further customization.&lt;/p&gt; 
&lt;p&gt;The most general workspace - is &lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/ubuntu-workspace/README.md&quot;&gt;&lt;code&gt;Ubuntu-workspace&lt;/code&gt;&lt;/a&gt;. It sets the basics for using docker in order to run multiple processes, adds cron, zsh, and other applications that will be used in most workspaces.&lt;/p&gt; 
&lt;p&gt;Other general workspaces are the &lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/base-workspace/README.md&quot;&gt;&lt;code&gt;Base-Workspace&lt;/code&gt;&lt;/a&gt;, which adds several browser-based applications,&lt;br&gt; like task scheduler, file browser, documentation framework and workspace own UI. &lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/workspace-in-docker/README.md&quot;&gt;&lt;code&gt;Workspace-in-docker&lt;/code&gt;&lt;/a&gt; adds &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Eclipse Theia&lt;/a&gt; to the Base-Workspace. Theia - is an open-source browser-based VS-Code version, making Workspace-in-docker to be a general base workspace, to be used in order to create workspaces for specific tasks (like Python workspace, or Ansible workspace).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bluxmit/alnoda-workspaces/main/workspaces/codeserver-workspace/README.md&quot;&gt;&lt;code&gt;Codeserver-Workspace&lt;/code&gt;&lt;/a&gt; - is an alternative to the Workspace-in-docker. It is also a general base workspace to build upon, but it has a different VS-Code version - &lt;a href=&quot;https://github.com/cdr/code-server&quot;&gt;Codeserver&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Publications&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@bluxmit/the-way-i-use-docker-as-interactive-environment-for-tries-and-experiments-52ac06c0ec69&quot;&gt;The way I use Docker as interactive environment for tries and experiments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@bluxmit/docker-as-a-lightweight-vm-docker-image-that-you-can-use-as-vm-substitute-164032e4ed0b&quot;&gt;Docker as a lightweight VM - docker image that you can use as VM substitute&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Feedback and contribution&lt;/h2&gt; 
&lt;p&gt;Workspaces in docker helped me to manage multiple projects in different clouds and k8s clusters. They made my work so much easier, and I hope they can be useful for other people too.&lt;/p&gt; 
&lt;p&gt;I will highly appreciate any suggestions, ideas for improvements, contribution or any other form of collaboration. Send me an email &lt;a href=&quot;mailto:bluxmit@gmail.com&quot;&gt;bluxmit@gmail.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/project_cryptoverse</title>
      <link>https://github.com/adrianhajdin/project_cryptoverse</link>
      <description>&lt;p&gt;Crpyocurrency App powered by RapidAPI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cryptoverse - Explore the World of Cryptocurrency&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/8gh5Jc8/image.png&quot; alt=&quot;Cryptoverse&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial.&lt;/p&gt; 
&lt;p&gt;In this video, we will create a cryptocurrency app. We&#39;re going to use React and multiple APIs powered by &lt;a href=&quot;https://rapidapi.com&quot;&gt;https://rapidapi.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By the end of this video, you will become the master of working with APIs.&lt;/p&gt; 
&lt;p&gt;Setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;run &lt;code&gt;npm i &amp;amp;&amp;amp; npm start&lt;/code&gt; to start the development server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stay up to date with new projects&lt;/h2&gt; 
&lt;p&gt;New major projects coming soon, subscribe to the mailing list to stay up to date &lt;a href=&quot;https://javascriptmastery.eo.page/mailing-list&quot;&gt;https://javascriptmastery.eo.page/mailing-list&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>30-seconds/30-seconds-of-code</title>
      <link>https://github.com/30-seconds/30-seconds-of-code</link>
      <description>&lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/logo.png&quot; alt=&quot;Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;30 seconds of code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit &lt;a href=&quot;https://30secondsofcode.org&quot;&gt;our website&lt;/a&gt; to view our snippet collection.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://30secondsofcode.org/search&quot;&gt;Search page&lt;/a&gt; to find snippets that suit your needs. You can search by name, tag, language or using a snippet&#39;s description. Just start typing a term and see what comes up.&lt;/li&gt; 
 &lt;li&gt;Browse the &lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;JavaScript Snippet collection&lt;/a&gt; to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.&lt;/li&gt; 
 &lt;li&gt;Click on each snippet card to view the whole snippet, including code, explanation and examples.&lt;/li&gt; 
 &lt;li&gt;You can use the button at the bottom of a snippet card to copy the code to clipboard.&lt;/li&gt; 
 &lt;li&gt;If you like the project, give it a star. It means a lot to the people maintaining it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Want to contribute?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to help us improve, take a minute to read the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/snippet-template.md&quot;&gt;Snippet Template&lt;/a&gt; to add new snippets to the collection.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with a specific snippet, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-of-code/issues/new&quot;&gt;open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with the website, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-web/issues/new&quot;&gt;report it in the web repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This repository is maintained by the &lt;a href=&quot;https://github.com/30-seconds&quot;&gt;30 seconds of code organization on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;All snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.&lt;/li&gt; 
 &lt;li&gt;Logos, names and trademarks are not to be used without the explicit consent of the owners of the 30 seconds of code GitHub organization.&lt;/li&gt; 
 &lt;li&gt;Our website is powered by &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ShenaniganDApp/brightid-discord-bot</title>
      <link>https://github.com/ShenaniganDApp/brightid-discord-bot</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BrightID Discord Bot&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;🤖&lt;/span&gt; BrightID Bot to verify users in Discord.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://bot.brightid.org&quot;&gt;Click here to Invite BrightID Bot to your server&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick end-user guide&lt;/h2&gt; 
&lt;p&gt;Interacting with the bot is simple; it offers 2 commands&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&quot;!verify&quot;: Sends a QR Code to link the BrightID app to Discord&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&quot;!me&quot;: Adds the &quot;Verified&quot; role to verified users&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;To use BrightID Bot:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Type !verify&lt;/li&gt; 
 &lt;li&gt;Scan the code (or click the link) BrightID Bot shows you&lt;/li&gt; 
 &lt;li&gt;Use an &lt;a href=&quot;https://apps.brightid.org&quot;&gt;app that has sponsorships&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Type !me&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developer quick start&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;npm run dev&lt;/code&gt; will launch the bot locally, with hot reloading included.&lt;/p&gt; 
&lt;p&gt;There are a few other scripts provided:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;start&lt;/code&gt;: Starts up the bot without hot reloading; used for the heroku deployment described below.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lint&lt;/code&gt;: Lints the project with ESLint.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;test&lt;/code&gt;: Runs all the tests! (If you contribute some code, please do write tests for it ⌨️!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;For the bot to run properly, it needs these variables, laid out in the &lt;code&gt;.env.sample&lt;/code&gt; file:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DISCORD_API_TOKEN&lt;/code&gt;: Your discord API token. &lt;a href=&quot;https://github.com/reactiflux/discord-irc/wiki/Creating-a-discord-bot-&amp;amp;-getting-a-token&quot;&gt;See this guide on how to obtain one&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;UUID_NAMESPACE&lt;/code&gt;: Generate a new one &lt;a href=&quot;https://www.uuidgenerator.net/version4&quot;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;WHITELISTED_CHANNELS&lt;/code&gt;: The whitelisted channels for the bot to read messages from, in the form of comma separated words, as in &lt;code&gt;bot,general,channel&lt;/code&gt;. If you want the bot to listen to all channels, set this variable to &lt;code&gt;*&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Deployment&lt;/h3&gt; 
&lt;p&gt;You&#39;ll need a service to host this bot 💆‍♀️ but do not despair! There&#39;s an easy, already configured way of doing this by deploying it to heroku! Just go through these steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new Heroku app and link it to GitHub&lt;/li&gt; 
 &lt;li&gt;Search for the repo and connect it&lt;/li&gt; 
 &lt;li&gt;Enable &quot;automatic deploys&quot; for the app&lt;/li&gt; 
 &lt;li&gt;BONUS: If you want to be able to run this bot 24/7, you can add link your billing info to Heroku, and will give you a 1000 hours for free, enough for a bot instance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Don&#39;t be shy to contribute even the smallest tweak. 🐲 There are still some dragons to be aware of, but we&#39;ll be here to help you get started!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CodingTrain/website</title>
      <link>https://github.com/CodingTrain/website</link>
      <description>&lt;p&gt;The train engine powering the Coding Train website&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;800&quot; alt=&quot;The Coding Train Logo&quot; src=&quot;https://github.com/CodingTrain/website/raw/main/.github/logo.png?raw=true&quot;&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;Hello and welcome to the GitHub repository for The Coding Train website! This houses all of the content at &lt;a href=&quot;https://thecodingtrain.com/&quot;&gt;thecodingtrain.com&lt;/a&gt; as well as source code for corresponding videos. The site welcomes contributions from the community in a variety of ways! More information at &lt;a href=&quot;https://raw.githubusercontent.com/CodingTrain/website/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Other links&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/thecodingtrain/&quot;&gt;The Coding Train on YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtube.com/thecodingtrain/join&quot;&gt;Become a YouTube Member&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CodingTrain/Rainbow-Topics/&quot;&gt;For topic suggestions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/hPuGy2g&quot;&gt;Join The Coding Train Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discourse.processing.org&quot;&gt;Coding questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Live Streams&lt;/h1&gt; 
&lt;p&gt;Live streams are announced as events on YouTube, &lt;a href=&quot;https://www.youtube.com/channel/UCvjgXvBlbQiydffZU7m1_aw/subscribe&quot;&gt;please subscribe to receive notifications for events&lt;/a&gt;!&lt;/p&gt; 
&lt;h1&gt;Add your own variation&lt;/h1&gt; 
&lt;p&gt;If you want to share your own variation based on a Coding Train video, visit the page corresponding to the video on our &lt;a href=&quot;http://thecodingtrain.com&quot;&gt;website&lt;/a&gt;. Check out the &lt;a href=&quot;https://thecodingtrain.com/Guides/community-contribution-guide.html&quot;&gt;Community Contributions Guide&lt;/a&gt; to see how it is done. It will then be featured right under the video on the website for everyone to see!&lt;/p&gt; 
&lt;h1&gt;Help adding pages for video tutorials&lt;/h1&gt; 
&lt;p&gt;We are currently in the process of migrating videos and community contributions to our new system. If you want to help with this, have a look at the &lt;a href=&quot;https://thecodingtrain.com/Guides/content-contribution-guide.html&quot;&gt;Content Contribution Guide&lt;/a&gt;. Thanks for helping us out!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>slow/nitro-sniper</title>
      <link>https://github.com/slow/nitro-sniper</link>
      <description>&lt;p&gt;A lightweight, fast and efficient discord nitro sniper, giveaway sniper &amp; invite sniper.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Nitro/Giveaway/Invite Sniper&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/slow/nitro-sniper/main/#&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/slow/nitro-sniper/badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/slow/nitro-sniper/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/slow/nitro-sniper?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/slow/nitro-sniper/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/slow/nitro-sniper?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://paypal.me/eternal404&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/donate-paypal-blue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/nitrosnipers&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/support-5c5c5c?logo=telegram&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; A lightweight, fast and efficient discord nitro sniper, giveaway sniper &amp;amp; invite sniper. &lt;br&gt; &lt;img src=&quot;https://media.wtf/11603354&quot;&gt; &lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Light, fast &amp;amp; efficient&lt;/li&gt; 
 &lt;li&gt;Nitro sniper&lt;/li&gt; 
 &lt;li&gt;Giveaway sniper&lt;/li&gt; 
 &lt;li&gt;Limit nitro redeems (e.g. 2 codes / 24 hours)&lt;/li&gt; 
 &lt;li&gt;Custom giveaway reaction delay (randomized between &lt;strong&gt;delay&lt;/strong&gt; and (&lt;strong&gt;delay&lt;/strong&gt; * 1.5))&lt;/li&gt; 
 &lt;li&gt;DM host on giveaway win&lt;/li&gt; 
 &lt;li&gt;Custom DM Delay&lt;/li&gt; 
 &lt;li&gt;Custom DM Message&lt;/li&gt; 
 &lt;li&gt;Status Changer&lt;/li&gt; 
 &lt;li&gt;One-click Deploy&lt;/li&gt; 
 &lt;li&gt;Duplicate Protection&lt;/li&gt; 
 &lt;li&gt;Fake Code Detection&lt;/li&gt; 
 &lt;li&gt;Multi-Account Support&lt;/li&gt; 
 &lt;li&gt;3 Modes - &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;alts&lt;/code&gt;, &lt;code&gt;both&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Webhook support (Giveaways &amp;amp; Nitro)&lt;/li&gt; 
 &lt;li&gt;Fully customizable webhook&lt;/li&gt; 
 &lt;li&gt;Ability to turn the webhook on/off for certain events&lt;/li&gt; 
 &lt;li&gt;Ability to decide when the webhook should ping @everyone&lt;/li&gt; 
 &lt;li&gt;Ability to turn the ping on/off for certain events&lt;/li&gt; 
 &lt;li&gt;Whitelist and blacklist words for the giveaway sniper&lt;/li&gt; 
 &lt;li&gt;Whitelist only mode for giveaway sniper (Blacklist still applies)&lt;/li&gt; 
 &lt;li&gt;Blacklist and whitelist servers from the giveaway sniper&lt;/li&gt; 
 &lt;li&gt;Announce nitro type on snipe&lt;/li&gt; 
 &lt;li&gt;Invite Sniper&lt;/li&gt; 
 &lt;li&gt;Minimum and maximum member count for invite sniper&lt;/li&gt; 
 &lt;li&gt;Limit invite joins (e.g. 10 invites / 6 hours)&lt;/li&gt; 
 &lt;li&gt;Minimum and maximum delay before sniping invite&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h4&gt;Repl.it (recommended)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Visit the &lt;a href=&quot;https://replit.com/~&quot;&gt;dashboard&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the &lt;code&gt;New Repl&lt;/code&gt; button as seen below.&lt;br&gt; &lt;img src=&quot;https://media.wtf/21365449&quot; alt=&quot;Image&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the &lt;code&gt;Import from GitHub&lt;/code&gt; tab&lt;br&gt; &lt;img src=&quot;https://media.wtf/63105027&quot; alt=&quot;Image&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Paste the following inside the box:&lt;br&gt; &lt;code&gt;https://github.com/slow/nitro-sniper&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After the process completes, visit the environment variables tab.&lt;br&gt; &lt;img src=&quot;https://media.wtf/52361997&quot; alt=&quot;Image&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set the key as &lt;code&gt;settings&lt;/code&gt; and paste &lt;a href=&quot;https://raw.githubusercontent.com/slow/nitro-sniper/main/#default-configuration&quot;&gt;this&lt;/a&gt; inside the value text box; proceed to edit your configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After you are done editing your configuration, click &lt;code&gt;Add new secret&lt;/code&gt;. (You can go back to that tab whenever to change your settings)&lt;br&gt; &lt;img src=&quot;https://media.wtf/49612563&quot; alt=&quot;Image&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can now use &lt;kbd&gt;CTRL&lt;/kbd&gt; + &lt;kbd&gt;ENTER&lt;/kbd&gt; or &lt;kbd&gt;CMD&lt;/kbd&gt; + &lt;kbd&gt;ENTER&lt;/kbd&gt; to start the sniper or by using the &lt;code&gt;Run&lt;/code&gt; button at the top of the page.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Tips:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you want to keep the sniper running 24/7 even when you shut down your PC, use &lt;a href=&quot;https://uptimerobot.com/&quot;&gt;uptime robot&lt;/a&gt; to ping the repl.it URL as seen here &lt;img src=&quot;https://media.wtf/88041379&quot; alt=&quot;Image&quot;&gt; &lt;br&gt;&lt;/li&gt; 
   &lt;li&gt;To see the output of the sniper, go to the &lt;code&gt;Console&lt;/code&gt; tab. &lt;br&gt; &lt;img src=&quot;https://media.wtf/37329719&quot; alt=&quot;Image&quot;&gt;&lt;/li&gt; 
   &lt;li&gt;If you wish to update the sniper when a new version is released you can run &lt;code&gt;git pull&lt;/code&gt; in the &lt;code&gt;Shell&lt;/code&gt; tab as seen in this screenshot: &lt;br&gt; &lt;img src=&quot;https://media.wtf/81080054&quot; alt=&quot;Image&quot;&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Local&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node v14+&lt;/a&gt; is installed on your system and open a command prompt/terminal.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;git clone https://github.com/slow/nitro-sniper nitro-sniper&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;cd nitro-sniper&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Edit the .env file.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;node .&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Default Configuration&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
   tokens: {
      // Main Token (ex: Nz...)
      main: &#39;&#39;,
      // Alt Tokens (ex: Nz...)
      alts: [
         &#39;&#39;,
      ],
   },
   // The mode to run the sniper in. Options: main (only main account), alts (only alts), both
   mode: &#39;both&#39;,
   /* 
      The status the accounts should be on.
      Options: online, dnd, idle, offline, default
      default means the status will not be modified.
   */
   status: {
      // The status the main account will have IF it&#39;s logged in
      main: &#39;default&#39;,
      // The status the logged in alts will have
      alts: &#39;default&#39;
   },
   nitro: {
      // The amount of nitros needed to be sniped for the cooldown to activate
      max: 2,
      // Cooldown to activate after max nitro has been hit (in hours)
      cooldown: 24
   },
   giveaway: {
      // Wether or not to activate the giveaway sniper (true/false)
      enabled: true,
      // Delay to react to the giveaway (in seconds)
      delay: 30,
      // DM the hoster on giveaway win (true/false)
      dm: true,
      // Message to DM the host
      dmMessage: &#39;Hey, i won the giveaway. Could i redeem my prize?&#39;,
      // How long to wait to DM (in seconds)
      dmDelay: 25,
      // Blacklisted words for giveaway prizes
      blacklistedWords: [
         &#39;bot&#39;,
         &#39;test&#39;,
         &#39;ban&#39;
      ],
      // Only react to whitelisted giveaway prizes (true/false)
      whitelistOnly: false,
      // Whitelisted words for giveaway prizes
      whitelistedWords: [
         &#39;nitro&#39;
      ],
      // Blacklisted Server IDs to not snipe giveaways on
      blacklistedServers: [
         &#39;&#39;
      ],
      // Only snipe giveaways on whitelisted servers (true/false)
      whitelistServersOnly: false,
      whitelistedServers: [
        &#39;&#39;
      ]
   },
   invite: {
      // Wether or not to activate the invite sniper (true/false)
      enabled: false,
      delay: {
         // Minimum delay to join the server (in seconds)
         min: 10,
         // Maximum delay to join the server (in seconds)
         max: 20
      },
      members: {
         // The minimum member count the server should have
         min: 1500,
         // The maximum member count the server should have
         max: 50000
      },
      // The amount of joined invites needed for the cooldown to activate
      max: 10,
      // Cooldown to activate after max joined invites has been hit (in hours)
      cooldown: 6,
      // Wether to allow the main token to snipe invites (true/false)
      onlyAlts: true
   },
   webhook: {
      // URL to fire webhook to for notifications (ex: https://discord.com/api/webhooks/.../...)
      url: &#39;&#39;,
      enabled: {
         // Fire webhook on invalid code (true/false)
         codeInvalid: false,
         // Fire webhook on already redeemed code (true/false)
         codeAlreadyRedeemed: false,
         // Fire webhook on sniped code (true/false)
         codeSuccess: true,
         // Fire webhook on giveaway enter (true/false)
         giveawayEntered: true,
         // Fire webhook on giveaway win (true/false)
         giveawayWin: true,
         // Fire webhook on invite join (true/false)
         inviteJoin: false,
         // Fire webhook on failure of sniping invite (true/false)
         inviteFail: false
      },
      mentionEveryone: {
         // Mention on invalid code (true/false)
         codeInvalid: false,
         // Mention on already redeemed code (true/false)
         codeAlreadyRedeemed: false,
         // Mention on sniped code (true/false)
         codeSuccess: true,
         // Mention on giveaway enter (true/false)
         giveawayEntered: false,
         // Mention on giveaway win (true/false)
         giveawayWin: true,
         // Mention on invite join (true/false)
         inviteJoin: false,
         // Mention on failure of sniping invite (true/false)
         inviteFail: false
      }
   }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;How to obtain your token&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/wiki/Obtaining-Token-and-Channel-IDs#how-to-get-a-user-token&quot;&gt;https://github.com/Tyrrrz/DiscordChatExporter/wiki/Obtaining-Token-and-Channel-IDs#how-to-get-a-user-token&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Tips&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Try to get a low latency to discord servers as there can be competition with other snipers.&lt;/li&gt; 
 &lt;li&gt;This is technically a self-bot: mentioning this in a discord chat is enough to make your account reportable to Trust &amp;amp; Safety.&lt;/li&gt; 
 &lt;li&gt;Running more than one instance or different snipers is an easy way to get your account deactivated.&lt;/li&gt; 
 &lt;li&gt;Before using, consider the moral implications of stealing gifts from communities you have nothing to do with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you enjoy my projects, please consider leaving a &lt;span&gt;⭐&lt;/span&gt; in the top right on the repo :)&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>DIYgod/RSSHub</title>
      <link>https://github.com/DIYgod/RSSHub</link>
      <description>&lt;p&gt;🍰 Everything is RSSible&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.loli.net/2019/04/23/5cbeb7e41414c.png&quot; alt=&quot;RSSHub&quot; width=&quot;100&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;RSSHub&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🍰 Everything is RSSible&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/rsshub&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-telegram-brightgreen.svg?style=flat-square&quot; alt=&quot;telegram&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/DIYgod/RSSHub&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/DIYgod/RSSHub/master.svg?style=flat-square&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/github/DIYgod/RSSHub?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/DIYgod/RSSHub.svg?style=flat-square&quot; alt=&quot;Test coverage&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;RSSHub is an open source, easy to use, and extensible RSS feed generator. It&#39;s capable of generating RSS feeds from pretty much everything.&lt;/p&gt; 
&lt;p&gt;RSSHub delivers millions of contents aggregated from all kinds of sources, our vibrant open source community is ensuring the deliver of RSSHub&#39;s new routes, new features and bug fixes.&lt;/p&gt; 
&lt;p&gt;RSSHub can be used with browser extension &lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; and mobile auxiliary app &lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt; (iOS) and &lt;a href=&quot;https://github.com/LeetaoGoooo/RSSAid&quot;&gt;RSSAid&lt;/a&gt; (Android)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app/en&quot;&gt;English docs&lt;/a&gt; | &lt;a href=&quot;https://t.me/rsshub&quot;&gt;Telegram Group&lt;/a&gt; | &lt;a href=&quot;https://t.me/awesomeRSSHub&quot;&gt;Telegram Channel&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容&lt;/p&gt; 
&lt;p&gt;可以配合浏览器扩展 &lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; 和 移动端辅助 App &lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt; (iOS) 与 &lt;a href=&quot;https://github.com/LeetaoGoooo/RSSAid&quot;&gt;RSSAid&lt;/a&gt; (Android) 食用&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app&quot;&gt;中文文档&lt;/a&gt; | &lt;a href=&quot;https://t.me/rsshub&quot;&gt;Telegram 群&lt;/a&gt; | &lt;a href=&quot;https://t.me/awesomeRSSHub&quot;&gt;Telegram 频道&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;h3&gt;Special Sponsors&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a href=&quot;https://rss3.io/&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;60px&quot; src=&quot;https://i.imgur.com/v7TF0jp.jpg&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 &lt;a href=&quot;https://sa.net/&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;60px&quot; src=&quot;https://i.imgur.com/3rM8nWI.png&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/SayoriStudio&quot;&gt;Sayori Studio&lt;/a&gt; . &lt;a href=&quot;https://blog.sion.moe&quot;&gt;Sion Kazama&lt;/a&gt; . &lt;a href=&quot;https://www.shaoyaoju.org/&quot;&gt;琚致远&lt;/a&gt; . &lt;a href=&quot;https://www.coolapk.com/apk/239500&quot;&gt;Rolly RSS 阅读器&lt;/a&gt; . &lt;a href=&quot;https://www.mokeyjay.com/&quot;&gt;mokeyjay&lt;/a&gt; . &lt;a href=&quot;https://www.moeunion.com&quot;&gt;萌开源联盟&lt;/a&gt; . &lt;a href=&quot;https://github.com/hooke007/MPV_lazy&quot;&gt;hooke007&lt;/a&gt; . &lt;a href=&quot;https://feeds.pub&quot;&gt;feeds.pub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app/en/support/&quot;&gt;&lt;img src=&quot;https://opencollective.com/static/images/become_sponsor.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/DIYgod/RSSHub/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/RSSHub/contributors.svg?width=890&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Logo designer &lt;a href=&quot;https://dribbble.com/sheldonrrr&quot;&gt;sheldonrrr&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.cloudflare.com&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;50px&quot; src=&quot;https://i.imgur.com/7Ph27Fq.png&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://www.netlify.com&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;40px&quot; src=&quot;https://i.imgur.com/cU01915.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; | 一个可以帮助你快速发现和订阅当前网站 RSS 和 RSSHub 的浏览器扩展&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt; (&lt;a href=&quot;https://testflight.apple.com/join/rjCVzzHP&quot;&gt;TestFlight 公测&lt;/a&gt;) | iOS 平台的 RSSHub Radar，专为移动生态优化&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeetaoGoooo/RSSAid&quot;&gt;RSSAid&lt;/a&gt; | 基于 Flutter 构建的 Android 平台的 RSSHub Radar&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join Us&lt;/h2&gt; 
&lt;p&gt;We welcome all pull requests. Suggestions and feedback are also welcomed &lt;a href=&quot;https://github.com/DIYgod/RSSHub/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/joinus/quick-start.html&quot;&gt;Join Us&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;见 &lt;a href=&quot;https://docs.rsshub.app/joinus/quick-start.html&quot;&gt;参与我们&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/install/&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;见 &lt;a href=&quot;https://docs.rsshub.app/install/&quot;&gt;部署&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support RSSHub&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/support/&quot;&gt;Support RSSHub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;见 &lt;a href=&quot;https://docs.rsshub.app/support/&quot;&gt;支持 RSSHub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RSSHub is open source and completely free under the MIT license. However, just like any other open source project, as the project grows, the hosting, development and maintenance requires funding support.&lt;/p&gt; 
&lt;p&gt;You can support RSSHub via donations.&lt;/p&gt; 
&lt;h3&gt;Recurring Donation&lt;/h3&gt; 
&lt;p&gt;Recurring donors will be rewarded via express issue response, or even have your name displayed on our GitHub page and website.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Become a Sponser on &lt;a href=&quot;https://www.patreon.com/DIYgod&quot;&gt;Patreon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Become a Sponser on &lt;a href=&quot;https://afdian.net/@diygod&quot;&gt;爱发电&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contact us directly: &lt;a href=&quot;mailto:i@diygod.me&quot;&gt;i@diygod.me&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;One-time Donation&lt;/h3&gt; 
&lt;p&gt;We accept donations via the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://diygod.me/images/wx.jpg&quot;&gt;WeChat Pay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://diygod.me/images/zfb.jpg&quot;&gt;Alipay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.me/DIYgod&quot;&gt;Paypal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;RSSHub&lt;/strong&gt; © &lt;a href=&quot;https://github.com/DIYgod&quot;&gt;DIYgod&lt;/a&gt;, Released under the &lt;a href=&quot;https://raw.githubusercontent.com/DIYgod/RSSHub/master/LICENSE&quot;&gt;MIT&lt;/a&gt; License.&lt;br&gt; Authored and maintained by DIYgod with help from contributors (&lt;a href=&quot;https://github.com/DIYgod/RSSHub/contributors&quot;&gt;list&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Blog &lt;a href=&quot;https://diygod.me&quot;&gt;@DIYgod&lt;/a&gt; · GitHub &lt;a href=&quot;https://github.com/DIYgod&quot;&gt;@DIYgod&lt;/a&gt; · Twitter &lt;a href=&quot;https://twitter.com/DIYgod&quot;&gt;@DIYgod&lt;/a&gt; · Telegram Channel &lt;a href=&quot;https://t.me/awesomeDIYgod&quot;&gt;@awesomeDIYgod&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>rolling-scopes-school/tasks</title>
      <link>https://github.com/rolling-scopes-school/tasks</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Курс JS/Frontend-разработка&lt;/h1&gt; 
&lt;p&gt;Это бесплатный курс по JavaScript / Front-end, проводимый сообществом с 2013 года. В RS School может учиться каждый, независимо от возраста, профессии, места жительства. Новый набор студентов стартует каждые полгода и насчитывает около 6000-7000 человек. Для продуктивного обучения студентам помогают 250+ менторов.&lt;/p&gt; 
&lt;p&gt;Цель курса — получение студентами знаний и опыта, достаточного для трудоустройства на позицию Junior Software Engineer в области JavaScript / Front-end.&lt;/p&gt; 
&lt;p&gt;За период с 1 октября 2020 по 1 июня 2021 только в компанию EPAM Systems трудоустроилось 208 выпускников нашего курса.&lt;/p&gt; 
&lt;p&gt;Больше информации о RS School находится тут: &lt;a href=&quot;https://docs.rs.school/#/&quot;&gt;https://docs.rs.school/#/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Продолжительность обучения&lt;/h3&gt; 
&lt;p&gt;5-7 месяцев. Для успешного прохождения программы вам потребуется 20-40 часов в неделю.&lt;/p&gt; 
&lt;h3&gt;Программа обучения&lt;/h3&gt; 
&lt;p&gt;Программа обучения находится &lt;a href=&quot;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/roadmap.md&quot;&gt;тут&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Регистрация&lt;/h1&gt; 
&lt;p&gt;Мы предлагаем два варианта регистрации в зависимости от уровня вашей подготовки.&lt;/p&gt; 
&lt;h3&gt;Регистрация на подготовительный курс&lt;/h3&gt; 
&lt;p&gt;Подготовительный курс предназначен для тех, кто мало знаком или незнаком с программированием, но хотел бы в дальнейшем учиться на основном курсе JavaScript / Front-end.&lt;/p&gt; 
&lt;p&gt;Программу обучения подготовительного курса можно посмотреть &lt;a href=&quot;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/stage0/&quot;&gt;тут&lt;/a&gt;. Регистрацию на ближайший запуск можно найти тут: &lt;a href=&quot;https://rs.school/js-stage0/&quot;&gt;https://rs.school/js-stage0/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Регистрация на основной курс JavaScript / Front-end&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Внимание!&lt;/strong&gt; Основной курс требует наличия у студентов базовых знаний:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;понимание основ HTML и CSS, наличие практических навыков вёрстки;&lt;/li&gt; 
 &lt;li&gt;знание основ JavaScript (типы данных, операторы, циклы, условные констуркции, функции);&lt;/li&gt; 
 &lt;li&gt;знание структуры данных и их организации (массив, список, стек, очередь, дерево и т.д.);&lt;/li&gt; 
 &lt;li&gt;умение реализовать достаточно простой алгоритм на языке программирования JavaScript. Например, сортировку или поиск элементов массива;&lt;/li&gt; 
 &lt;li&gt;умение решать задачи уровня 8-7 kyu на сайте &lt;a href=&quot;https://www.codewars.com/&quot;&gt;https://www.codewars.com/&lt;/a&gt;;&lt;/li&gt; 
 &lt;li&gt;(желательно) английский язык уровня Pre-intermediate.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Программу обучения можно посмотреть &lt;a href=&quot;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/roadmap.md&quot;&gt;тут&lt;/a&gt;. Регистрацию на ближайший запуск можно найти тут: &lt;a href=&quot;https://rs.school/js/&quot;&gt;https://rs.school/js/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Где можно задать вопрос?&lt;/h3&gt; 
&lt;p&gt;Вопросы можно задать в Discord чате: &lt;a href=&quot;https://discord.gg/8Dv4bAw6Hx&quot;&gt;https://discord.gg/8Dv4bAw6Hx&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Имеет ли значения город проживания? Можно ли пройти курс полностью онлайн?&lt;/h3&gt; 
&lt;p&gt;Город проживания значения не имеет. Все этапы обучения можно пройти онлайн.&lt;/p&gt; 
&lt;h3&gt;Что делать до старта обучения?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Выполнить задания и тесты &lt;a href=&quot;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/stage0/&quot;&gt;подготовительного курса&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Пойти на курсы английского языка до получения уровня Pre-Intermediate (Минимум A2).&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>APSL/react-native-keyboard-aware-scroll-view</title>
      <link>https://github.com/APSL/react-native-keyboard-aware-scroll-view</link>
      <description>&lt;p&gt;A ScrollView component that handles keyboard appearance and automatically scrolls to focused TextInput.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-native-keyboard-aware-scroll-view&lt;/h1&gt; 
&lt;p&gt; &lt;img src=&quot;https://travis-ci.org/APSL/react-native-keyboard-aware-scroll-view.svg?branch=master&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/dm/react-native-keyboard-aware-scroll-view.svg?sanitize=true&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/dt/react-native-keyboard-aware-scroll-view.svg?sanitize=true&quot;&gt; &lt;/p&gt; 
&lt;p&gt;A ScrollView component that handles keyboard appearance and automatically scrolls to focused &lt;code&gt;TextInput&lt;/code&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/wiki/APSL/react-native-keyboard-aware-scroll-view/kasv.gif&quot; alt=&quot;Scroll demo&quot; width=&quot;400&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Supported versions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;v0.4.0&lt;/code&gt; requires &lt;code&gt;RN&amp;gt;=0.48&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v0.2.0&lt;/code&gt; requires &lt;code&gt;RN&amp;gt;=0.32.0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v0.1.2&lt;/code&gt; requires &lt;code&gt;RN&amp;gt;=0.27.2&lt;/code&gt; but you should use &lt;code&gt;0.2.0&lt;/code&gt; in order to make it work with multiple scroll views.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v0.0.7&lt;/code&gt; requires &lt;code&gt;react-native&amp;gt;=0.25.0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;v0.0.6&lt;/code&gt; for older RN versions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Installation can be done through &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm i react-native-keyboard-aware-scroll-view --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn add react-native-keyboard-aware-scroll-view
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;You can use the &lt;code&gt;KeyboardAwareScrollView&lt;/code&gt;, &lt;code&gt;KeyboardAwareSectionList&lt;/code&gt; or the &lt;code&gt;KeyboardAwareFlatList&lt;/code&gt; components. They accept &lt;code&gt;ScrollView&lt;/code&gt;, &lt;code&gt;SectionList&lt;/code&gt; and &lt;code&gt;FlatList&lt;/code&gt; default props respectively and implement a custom high order component called &lt;code&gt;KeyboardAwareHOC&lt;/code&gt; to handle keyboard appearance. The high order component is also available if you want to use it in any other component.&lt;/p&gt; 
&lt;p&gt;Import &lt;code&gt;react-native-keyboard-aware-scroll-view&lt;/code&gt; and wrap your content inside it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { KeyboardAwareScrollView } from &#39;react-native-keyboard-aware-scroll-view&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;KeyboardAwareScrollView&amp;gt;
  &amp;lt;View&amp;gt;
    &amp;lt;TextInput /&amp;gt;
  &amp;lt;/View&amp;gt;
&amp;lt;/KeyboardAwareScrollView&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Auto-scroll in &lt;code&gt;TextInput&lt;/code&gt; fields&lt;/h2&gt; 
&lt;p&gt;As of &lt;code&gt;v0.1.0&lt;/code&gt;, the component auto scrolls to the focused &lt;code&gt;TextInput&lt;/code&gt; 😎. For versions &lt;code&gt;v0.0.7&lt;/code&gt; and older you can do the following.&lt;/p&gt; 
&lt;h3&gt;Programatically scroll to any &lt;code&gt;TextInput&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;In order to scroll to any &lt;code&gt;TextInput&lt;/code&gt; field, you can use the built-in method &lt;code&gt;scrollToFocusedInput&lt;/code&gt;. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;_scrollToInput (reactNode: any) {
  // Add a &#39;scroll&#39; ref to your ScrollView
  this.scroll.props.scrollToFocusedInput(reactNode)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;KeyboardAwareScrollView
  innerRef={ref =&amp;gt; {
    this.scroll = ref
  }}&amp;gt;
  &amp;lt;View&amp;gt;
    &amp;lt;TextInput
      onFocus={(event: Event) =&amp;gt; {
        // `bind` the function if you&#39;re using ES6 classes
        this._scrollToInput(ReactNative.findNodeHandle(event.target))
      }}
    /&amp;gt;
  &amp;lt;/View&amp;gt;
&amp;lt;/KeyboardAwareScrollView&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Programatically scroll to any position&lt;/h3&gt; 
&lt;p&gt;There&#39;s another built-in function that lets you programatically scroll to any position of the scroll view:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;this.scroll.props.scrollToPosition(0, 0)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Register to keyboard events&lt;/h2&gt; 
&lt;p&gt;You can register to &lt;code&gt;ScrollViewResponder&lt;/code&gt; events &lt;code&gt;onKeyboardWillShow&lt;/code&gt; and &lt;code&gt;onKeyboardWillHide&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;KeyboardAwareScrollView
  onKeyboardWillShow={(frames: Object) =&amp;gt; {
    console.log(&#39;Keyboard event&#39;, frames)
  }}&amp;gt;
  &amp;lt;View&amp;gt;
    &amp;lt;TextInput /&amp;gt;
  &amp;lt;/View&amp;gt;
&amp;lt;/KeyboardAwareScrollView&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Android Support&lt;/h2&gt; 
&lt;p&gt;First, Android natively has this feature, you can easily enable it by setting &lt;code&gt;windowSoftInputMode&lt;/code&gt; in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;. Check &lt;a href=&quot;https://developer.android.com/guide/topics/manifest/activity-element.html#wsoft&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;But if you want to use feature like &lt;code&gt;extraHeight&lt;/code&gt;, you need to enable Android Support with the following steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you are using react-native &lt;code&gt;0.46&lt;/code&gt; or above.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;windowSoftInputMode&lt;/code&gt; to &lt;code&gt;adjustPan&lt;/code&gt; in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;enableOnAndroid&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Android Support is not perfect, here is the supported list:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Prop&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Android Support&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;viewIsInsideTabBar&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;resetScrollToCoords&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;enableAutomaticScroll&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;extraHeight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;extraScrollHeight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;enableResetScrollToCoords&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;keyboardOpeningTime&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;Props&lt;/h3&gt; 
&lt;p&gt;All the &lt;code&gt;ScrollView&lt;/code&gt;/&lt;code&gt;FlatList&lt;/code&gt; props will be passed.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Prop&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Type&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;innerRef&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Catch the reference of the component.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;viewIsInsideTabBar&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Adds an extra offset that represents the &lt;code&gt;TabBarIOS&lt;/code&gt; height.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;resetScrollToCoords&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Object: {x: number, y: number}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Coordinates that will be used to reset the scroll when the keyboard hides.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;enableAutomaticScroll&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;When focus in &lt;code&gt;TextInput&lt;/code&gt; will scroll the position, default is enabled.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;extraHeight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Adds an extra offset when focusing the &lt;code&gt;TextInput&lt;/code&gt;s.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;extraScrollHeight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Adds an extra offset to the keyboard. Useful if you want to stick elements above the keyboard.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;enableResetScrollToCoords&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Lets the user enable or disable automatic resetScrollToCoords.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;keyboardOpeningTime&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the delay time before scrolling to new position, default is 250&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;enableOnAndroid&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable Android Support&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Methods&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;innerRef&lt;/code&gt; to get the component reference and use &lt;code&gt;this.scrollRef.props&lt;/code&gt; to access these methods.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Parameter&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;getScrollResponder&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;void&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Get &lt;code&gt;ScrollResponder&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;scrollToPosition&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;x: number, y: number, animated: bool = true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Scroll to specific position with or without animation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;scrollToEnd&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;animated?: bool = true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Scroll to end with or without animation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;scrollIntoView&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;element: React.Element&amp;lt;*&amp;gt;, options: { getScrollPosition: ?(parentLayout, childLayout, contentOffset) =&amp;gt; { x: number, y: number, animated: boolean } }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Scrolls an element inside a KeyboardAwareScrollView into view.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Using high order component&lt;/h3&gt; 
&lt;p&gt;Enabling any component to be keyboard-aware is very easy. Take a look at the code of &lt;code&gt;KeyboardAwareFlatList&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* @flow */

import { FlatList } from &#39;react-native&#39;
import listenToKeyboardEvents from &#39;./KeyboardAwareHOC&#39;

export default listenToKeyboardEvents(FlatList)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The HOC can also be configured. Sometimes it&#39;s more convenient to provide a static config than configuring the behavior with props. This HOC config can be overriden with props.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* @flow */

import { FlatList } from &#39;react-native&#39;
import listenToKeyboardEvents from &#39;./KeyboardAwareHOC&#39;

const config = {
  enableOnAndroid: true,
  enableAutomaticScroll: true
}

export default listenToKeyboardEvents(config)(FlatList)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The available config options are:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  enableOnAndroid: boolean,
  contentContainerStyle: ?Object,
  enableAutomaticScroll: boolean,
  extraHeight: number,
  extraScrollHeight: number,
  enableResetScrollToCoords: boolean,
  keyboardOpeningTime: number,
  viewIsInsideTabBar: boolean,
  refPropName: string,
  extractNativeRef: Function
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT.&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Álvaro Medina Ballester &lt;code&gt;&amp;lt;amedina at apsl.net&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Built with 💛 by &lt;a href=&quot;https://github.com/apsl&quot;&gt;APSL&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matt8707/hass-config</title>
      <link>https://github.com/matt8707/hass-config</link>
      <description>&lt;p&gt;A different take on designing a Lovelace UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Home Assistant Configuration&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.home-assistant.io/installation/#compare-installation-methods&quot;&gt;Home Assistant Container&lt;/a&gt; (&lt;a href=&quot;https://hub.docker.com/r/homeassistant/home-assistant&quot;&gt;Docker&lt;/a&gt;) on a NAS (&lt;a href=&quot;https://www.synology.com/products/DS918+&quot;&gt;Synology DiskStation DS918+&lt;/a&gt;). My use case is a &lt;a href=&quot;https://www.durable.eu/information-and-presentation/tablet-holder/wall-mounted-tablet-holder/tablet-holder-wall.html&quot;&gt;wall mounted&lt;/a&gt; tablet (&lt;a href=&quot;https://www.samsung.com/us/mobile/tablets/galaxy-tab-a/galaxy-tab-a-10-1-2019-32gb-black-wi-fi-sm-t510nzkaxar/&quot;&gt;Galaxy Tab A 10.1&lt;/a&gt;) using &lt;a href=&quot;https://www.ozerov.de/fully-kiosk-browser/&quot;&gt;Fully Kiosk Browser&lt;/a&gt;, and on desktop using &lt;a href=&quot;https://github.com/mrvnklm/homeassistant-desktop&quot;&gt;homeassistant-desktop&lt;/a&gt;. My configuration is exposed to HomeKit with Apple Tv acting as a hub for remote connection. I also support &lt;a href=&quot;https://www.nabucasa.com/&quot;&gt;Nabu Casa&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you like anything here be sure to &lt;span&gt;🌟&lt;/span&gt; my repo!&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/screenshot.png&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;August 2021&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Changed sidebar to a &lt;code&gt;vertical-stack&lt;/code&gt;, easier to add various cards&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;markdown&lt;/code&gt; → &lt;code&gt;custom:button-card&lt;/code&gt;, faster and easier to style&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Theme now only applies to dashboard and not other sections&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Optimization of styles and cross-browser compatibility&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Workaround for known issues:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;del&gt;card-mod randomly not applying markdown styling on 2021.6.0 &lt;a href=&quot;https://github.com/thomasloven/lovelace-card-mod/issues/130&quot;&gt;#130&lt;/a&gt;&lt;/del&gt; &lt;br&gt;&lt;code&gt;markdown&lt;/code&gt; → &lt;code&gt;custom:button-card&lt;/code&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/matt8707/hass-config/raw/c5ef7a9130cc347d5785773fda7437c05dc4bdb2/ui-lovelace.yaml#L52&quot;&gt;ui-lovelace#L52&lt;/a&gt;, &lt;a href=&quot;https://github.com/matt8707/hass-config/raw/c5ef7a9130cc347d5785773fda7437c05dc4bdb2/include/themes.yaml#L123&quot;&gt;themes#L123&lt;/a&gt;, &lt;a href=&quot;https://github.com/matt8707/hass-config/raw/c5ef7a9130cc347d5785773fda7437c05dc4bdb2/button_card_templates.yaml#L137&quot;&gt;button_card_templates#L137&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;del&gt;swipe-card not updating size unless resizing window &lt;a href=&quot;https://github.com/bramkragten/swipe-card/issues/32&quot;&gt;#32&lt;/a&gt; &lt;a href=&quot;https://github.com/thomasloven/lovelace-layout-card/issues/147&quot;&gt;#147&lt;/a&gt;&lt;/del&gt; &lt;br&gt;&lt;code&gt;horizontal-stack&lt;/code&gt; and &lt;code&gt;margin: 0&lt;/code&gt; &lt;br&gt;&lt;a href=&quot;https://github.com/matt8707/hass-config/raw/c5ef7a9130cc347d5785773fda7437c05dc4bdb2/ui-lovelace.yaml#L284&quot;&gt;ui-lovelace#L284&lt;/a&gt;, &lt;a href=&quot;https://github.com/matt8707/hass-config/raw/c5ef7a9130cc347d5785773fda7437c05dc4bdb2/include/themes.yaml#L110&quot;&gt;themes#L110&lt;/a&gt;, &lt;a href=&quot;https://github.com/matt8707/hass-config/raw/c5ef7a9130cc347d5785773fda7437c05dc4bdb2/button_card_templates.yaml#L769&quot;&gt;button_card_templates#L769&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;If you want, you can &lt;a href=&quot;https://www.buymeacoffee.com/matt8707&quot;&gt;buy me a beer&lt;/a&gt;&lt;/em&gt; &lt;span&gt;😊&lt;/span&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;hr&gt; 
 &lt;summary&gt;June 2021&lt;/summary&gt; 
 &lt;h3&gt;June 2021&lt;/h3&gt; 
 &lt;p&gt;While picture elements is still a valid card for layouts that doesn&#39;t follow a specific grid, this dashboard does. Instead of placing button cards using coordinates, it&#39;s now placed onto a grid that is responsive.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Layout&lt;/strong&gt; &lt;code&gt;custom:layout-card&lt;/code&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;CSS grid everything and as a bonus...&lt;/li&gt; 
  &lt;li&gt;Mobile and portrait dashboards&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/36163594/120789256-ad825000-c531-11eb-97c2-18904c48efdd.mp4&quot;&gt;https://user-images.githubusercontent.com/36163594/120789256-ad825000-c531-11eb-97c2-18904c48efdd.mp4&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Buttons&lt;/strong&gt; &lt;code&gt;custom:button-card&lt;/code&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Loader template doesn&#39;t need any &lt;code&gt;input_boolean&lt;/code&gt; helpers anymore&lt;/li&gt; 
  &lt;li&gt;Icons will only animate on state change to prevent all icons animating on dashboard refresh&lt;/li&gt; 
  &lt;li&gt;Some entity checks for undefined entities, no errors on restarts&lt;/li&gt; 
  &lt;li&gt;Added a bounce effect to the button when pressed&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;Theme&lt;/strong&gt; &lt;code&gt;custom:card-mod&lt;/code&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Reworked themes with focus on performance&lt;/li&gt; 
  &lt;li&gt;Wrote a tool to help with styling &lt;a href=&quot;https://matt8707.github.io/card-mod-helper/&quot;&gt;card-mod-helper&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;Deprecated&lt;/strong&gt; &lt;em&gt;If you&#39;re looking for picture elements, browse this repository before March 2021 &lt;a href=&quot;https://github.com/matt8707/hass-config/tree/c9dd19e04bd4fde2322e610a42f4e246b58ee19a&quot;&gt;https://github.com/matt8707/hass-config/tree/c9dd19e04bd4fde2322e610a42f4e246b58ee19a&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Includes&lt;/strong&gt; Since this configuration is split into several yaml files, I&#39;m using &lt;a href=&quot;https://github.com/akmolina28/lovelace-gulp-watch&quot;&gt;lovelace-gulp-watch&lt;/a&gt;, which auto updates lovelace if an included file is changed.&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A different take on designing a &lt;a href=&quot;https://www.home-assistant.io/lovelace/&quot;&gt;Lovelace UI&lt;/a&gt; using &lt;a href=&quot;https://github.com/thomasloven/lovelace-layout-card&quot;&gt;custom:layout-card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Achieving a less cluttered interface by displaying &lt;a href=&quot;https://github.com/thomasloven/hass-browser_mod#popup&quot;&gt;more information&lt;/a&gt; on a &lt;a href=&quot;https://www.home-assistant.io/lovelace/picture-elements/#hold_action&quot;&gt;long press&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading wheel for slow responding entities such as booting a computer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thomasloven/hass-browser_mod#media_player&quot;&gt;Adding sounds&lt;/a&gt; to the UI using automations listening for events&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/css/css3_animations.asp&quot;&gt;CSS Animations&lt;/a&gt; based on state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/animations.gif&quot; alt=&quot;animations&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;The sidebar&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Time and date with greeting based on time of day&lt;/li&gt; 
 &lt;li&gt;Lights and switches that are on, using natural language&lt;/li&gt; 
 &lt;li&gt;Temperature with emoji based on weather conditions&lt;/li&gt; 
 &lt;li&gt;Important calendar information&lt;/li&gt; 
 &lt;li&gt;Other conditional alerts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sidebar footer&lt;/h3&gt; 
&lt;p&gt;The three icons at the bottom in order:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Card to control &lt;a href=&quot;https://www.mi-store.se/en/smart-homes/robot-vacuum-cleaners/xiaomi-robot-vacuum-2-roborock&quot;&gt;robot vacuum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitor &lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt;, &lt;a href=&quot;https://www.samsung.com/us/mobile/tablets/galaxy-tab-a/galaxy-tab-a-10-1-2019-32gb-black-wi-fi-sm-t510nzkaxar/&quot;&gt;tablet&lt;/a&gt; and &lt;a href=&quot;https://www.synology.com/products/DS918+&quot;&gt;Network Attached Storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lists available HACS updates and release notes for Home Assistant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/info_2.png&quot; alt=&quot;info&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Media&lt;/h3&gt; 
&lt;p&gt;Conditionally displaying media player controls based on last active device such as &lt;a href=&quot;https://www.home-assistant.io/integrations/apple_tv/&quot;&gt;Apple TV&lt;/a&gt;, Spotify, &lt;a href=&quot;https://www.home-assistant.io/integrations/cast/&quot;&gt;Google Nest Mini&lt;/a&gt;. If nothing is active for 15 minutes then a poster of last downloaded movie/episode is shown (&lt;a href=&quot;https://github.com/Radarr/Radarr&quot;&gt;Radarr&lt;/a&gt;/&lt;a href=&quot;https://github.com/Sonarr/Sonarr&quot;&gt;Sonarr&lt;/a&gt;). Swipe to reveal other than last active media players.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/media.gif&quot; alt=&quot;media&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Lights and sensors&lt;/h3&gt; 
&lt;p&gt;All &lt;a href=&quot;https://www2.meethue.com&quot;&gt;Philips Hue&lt;/a&gt; lights with &lt;a href=&quot;https://www2.meethue.com/en-gb/p/hue-motion-sensor/8718696743171&quot;&gt;sensors&lt;/a&gt; in hallway, bathroom and walk-in closet.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/light.gif&quot; alt=&quot;light&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Switches&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.switch-bot.com/bot&quot;&gt;SwitchBot&lt;/a&gt; to cold boot computer with a raspberry as a &lt;a href=&quot;https://github.com/OpenWonderLabs/python-host&quot;&gt;hub&lt;/a&gt;. Numerous shell commands to monitor and control macOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.belkin.com/&quot;&gt;Belkin WeMo Switch&lt;/a&gt; to control studio monitors (speakers) with automations to apply &lt;a href=&quot;https://www.sonarworks.com/reference&quot;&gt;EQ calibration&lt;/a&gt; and volume control through AppleScript&lt;/li&gt; 
 &lt;li&gt;Control a pedestal fan, using &lt;a href=&quot;https://www.belkin.com/&quot;&gt;Belkin WeMo Switch&lt;/a&gt; and hue motion sensor temperature data to automate on summer nights&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ibroadlink.com/products/ir+rf&quot;&gt;Broadlink&lt;/a&gt; to control fan and air purifier with IR and &lt;a href=&quot;https://www.gosund.com/download/smart_plug/127.html&quot;&gt;Gosund Smart Wi-Fi Plug&lt;/a&gt; for power/state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/info_light_2.png&quot; alt=&quot;info_light&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Custom icons&lt;/h3&gt; 
&lt;p&gt;I made some custom icons located in &lt;code&gt;www/custom_icons.js&lt;/code&gt;. If you want to make your own I recommend reading the &lt;a href=&quot;https://material.io/design/iconography/system-icons.html#design-principles&quot;&gt;material design principles&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/custom_icons.png&quot; alt=&quot;custom_icons&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Misc&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/vacuum_2.png&quot; alt=&quot;vacuum&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/misc_2.png&quot; alt=&quot;misc&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/tracker_updates.png&quot; alt=&quot;tracker&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Home Assistant Community Topic&lt;/strong&gt;&lt;br&gt; &lt;a href=&quot;https://community.home-assistant.io/t/a-different-take-on-designing-a-lovelace-ui/162594&quot;&gt;https://community.home-assistant.io/t/a-different-take-on-designing-a-lovelace-ui/162594&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EddieHubCommunity/LinkFree</title>
      <link>https://github.com/EddieHubCommunity/LinkFree</link>
      <description>&lt;p&gt;Open source alternative to LinkTree&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EddieHub Members&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/EddieHubCommunity/LinkFree&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/60853067/133296120-dbdb1799-4cca-4708-81ce-05edc65e59c9.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Initially created on a YouTube live stream &lt;a href=&quot;https://www.youtube.com/watch?v=Jorl_vcp-Ew&quot;&gt;https://www.youtube.com/watch?v=Jorl_vcp-Ew&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork project&lt;/li&gt; 
 &lt;li&gt;Clone project&lt;/li&gt; 
 &lt;li&gt;Navigate to project directory &lt;code&gt;cd LinkFree&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies with &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;To add your profile&lt;/h3&gt; 
&lt;p&gt;Create a file &lt;code&gt;public/data/&amp;lt;your-username&amp;gt;.json&lt;/code&gt; with the following structure:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;Eddie Jaoude&quot;,
  &quot;bio&quot;: &quot;Founder of EddieHub&quot;,
  &quot;avatar&quot;: &quot;https://github.com/eddiejaoude.png&quot;,
  &quot;links&quot;: [
    {
      &quot;name&quot;: &quot;Follow me on GitHub&quot;,
      &quot;url&quot;: &quot;https://github.com/eddiejaoude&quot;,
      &quot;icon&quot;: &quot;github&quot;
    },
    {
      &quot;name&quot;: &quot;Follow me on Twitter&quot;,
      &quot;url&quot;: &quot;https://twitter.com/eddiejaoude&quot;,
      &quot;icon&quot;: &quot;twitter&quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Your url will be &lt;code&gt;http://linkfree.eddiehub.org/&amp;lt;yourusername&amp;gt;&lt;/code&gt;, for example &lt;a href=&quot;http://linkfree.eddiehub.org/eddiejaoude&quot;&gt;http://linkfree.eddiehub.org/eddiejaoude&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Your &lt;code&gt;avatar&lt;/code&gt; URL should take the format of &lt;code&gt;https://github.com/&amp;lt;yourusername&amp;gt;.png&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Home page profiles&lt;/h3&gt; 
&lt;p&gt;Your profile will automatically appear on the home page.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bradtraversy/react-crash-2021</title>
      <link>https://github.com/bradtraversy/react-crash-2021</link>
      <description>&lt;p&gt;Task tracking application from the React crash course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Crash Course 2021 (Task Tracker App)&lt;/h1&gt; 
&lt;p&gt;This is the project from the &lt;a href=&quot;https://www.youtube.com/watch?v=w7ejDZ8SWv8&quot;&gt;YouTube crash course&lt;/a&gt;. It includes the react ui as well as JSON-server for our mock backend&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Install dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run React dev server (&lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run the JSON server (&lt;a href=&quot;http://localhost:5000&quot;&gt;http://localhost:5000&lt;/a&gt;)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm run server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;To build for production&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>gatsbyjs/gatsby</title>
      <link>https://github.com/gatsbyjs/gatsby</link>
      <description>&lt;p&gt;Build blazing fast, modern apps and websites with React&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.gatsbyjs.com&quot;&gt; &lt;img alt=&quot;Gatsby&quot; src=&quot;https://www.gatsbyjs.com/Gatsby-Monogram.svg?sanitize=true&quot; width=&quot;60&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Gatsby v3 &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; ⚛️ 📄 🚀 &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt; Fast in every way that matters &lt;/strong&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Gatsby is a free and open source framework based on React that helps developers build blazing fast websites and apps &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/raw/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;Gatsby is released under the MIT license.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/gatsbyjs/gatsby&quot;&gt; &lt;img src=&quot;https://circleci.com/gh/gatsbyjs/gatsby.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/gatsby&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/gatsby.svg?sanitize=true&quot; alt=&quot;Current npm package version.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://npmcharts.com/compare/gatsby?minimal=true&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/dm/gatsby.svg?sanitize=true&quot; alt=&quot;Downloads per month on npm.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://npmcharts.com/compare/gatsby?minimal=true&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/dt/gatsby.svg?sanitize=true&quot; alt=&quot;Total downloads on npm.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://gatsbyjs.com/contributing/how-to-contribute/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome!&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=gatsbyjs&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/gatsbyjs.svg?label=Follow%20@gatsbyjs&quot; alt=&quot;Follow @GatsbyJS&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2 align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;Quickstart&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;Tutorial&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://www.gatsbyjs.com/plugins/&quot;&gt;Plugins&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://www.gatsbyjs.com/starters/&quot;&gt;Starters&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://www.gatsbyjs.com/showcase/&quot;&gt;Showcase&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://www.gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;Contribute&lt;/a&gt; &lt;br&gt; Support: &lt;a href=&quot;https://twitter.com/AskGatsbyJS&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/discussions&quot;&gt;Discussions&lt;/a&gt; &lt;span&gt; &amp;amp; &lt;/span&gt; &lt;a href=&quot;https://gatsby.dev/discord&quot;&gt;Discord&lt;/a&gt; &lt;/h2&gt; 
&lt;p&gt;Gatsby is a modern web framework for blazing fast websites.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Go Beyond Static Websites.&lt;/strong&gt; Get all the benefits of static websites with none of the limitations. Gatsby sites are fully functional React apps, so you can create high-quality, dynamic web apps, from blogs to e-commerce sites to user dashboards.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use a Modern Stack for Every Site.&lt;/strong&gt; No matter where the data comes from, Gatsby sites are built using React and GraphQL. Build a uniform workflow for you and your team, regardless of whether the data is coming from the same backend.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Load Data From Anywhere.&lt;/strong&gt; Gatsby pulls in data from any data source, whether it’s Markdown files, a headless CMS like Contentful or WordPress, or a REST or GraphQL API. Use source plugins to load your data, then develop using Gatsby’s uniform GraphQL interface.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance Is Baked In.&lt;/strong&gt; Ace your performance audits by default. Gatsby automates code splitting, image optimization, inlining critical styles, lazy-loading, prefetching resources, and more to ensure your site is fast — no manual tuning required.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Host at Scale for Pennies.&lt;/strong&gt; Gatsby sites don’t require servers, so you can host your entire site on a CDN for a fraction of the cost of a server-rendered site. Many Gatsby sites can be hosted entirely free on &lt;a href=&quot;https://www.gatsbyjs.com/cloud/&quot;&gt;Gatsby Cloud&lt;/a&gt; and other similar services.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;&lt;strong&gt;Learn how to use Gatsby for your next project.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What’s In This Document&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-get-up-and-running-in-5-minutes&quot;&gt;Get Up and Running in 5 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-learning-gatsby&quot;&gt;Learning Gatsby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-migration-guides&quot;&gt;Migration Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-thanks&quot;&gt;Thanks to Our Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Get Up and Running in 5 Minutes&lt;/h2&gt; 
&lt;p&gt;You can get a new Gatsby site up and running on your local dev environment in 5 minutes with these four steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install the Gatsby CLI.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install -g gatsby-cli
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Gatsby site from a Gatsby starter.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Get your Gatsby blog set up in a single command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# Create a new Gatsby site using the interactive setup wizard
# Give it this name: My Gatsby site
gatsby new
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the site in &lt;code&gt;develop&lt;/code&gt; mode.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Next, move into your new site’s directory and start it up:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd my-gatsby-site/
gatsby develop
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the source code and start editing!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Your site is now running at &lt;code&gt;http://localhost:8000&lt;/code&gt;. Open the &lt;code&gt;my-gatsby-site&lt;/code&gt; directory in your code editor of choice and edit &lt;code&gt;src/pages/index.js&lt;/code&gt;. Save your changes, and the browser will update in real time!&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;At this point, you’ve got a fully functional Gatsby website. For additional information on how you can customize your Gatsby site, see our &lt;a href=&quot;https://gatsbyjs.com/plugins/&quot;&gt;plugins&lt;/a&gt; and &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;the official tutorial&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🎓 Learning Gatsby&lt;/h2&gt; 
&lt;p&gt;Full documentation for Gatsby lives &lt;a href=&quot;https://www.gatsbyjs.com/&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For most developers, we recommend starting with our &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;in-depth tutorial for creating a site with Gatsby&lt;/a&gt;.&lt;/strong&gt; It starts with zero assumptions about your level of ability and walks through every step of the process.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;To dive straight into code samples head &lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;to our documentation&lt;/a&gt;.&lt;/strong&gt; In particular, check out the “&lt;i&gt;How-to Guides&lt;/i&gt;”, “&lt;i&gt;Reference&lt;/i&gt;”, and “&lt;i&gt;Conceptual Guides&lt;/i&gt;” sections in the sidebar.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We welcome suggestions for improving our docs. See the &lt;a href=&quot;https://www.gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;“how to contribute”&lt;/a&gt; documentation for more details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Start Learning Gatsby: &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;Follow the Tutorial&lt;/a&gt; · &lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;Read the Docs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;🚢 Release Notes&lt;/h2&gt; 
&lt;p&gt;Wondering what we&#39;ve shipped recently? Check out our &lt;a href=&quot;https://www.gatsbyjs.com/docs/reference/release-notes&quot;&gt;release notes&lt;/a&gt; for key highlights, performance improvements, new features, and notable bugfixes.&lt;/p&gt; 
&lt;h2&gt;💼 Migration Guides&lt;/h2&gt; 
&lt;p&gt;Already have a Gatsby site? These handy guides will help you add the improvements of Gatsby v3 to your site without starting from scratch!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v2-to-v3/&quot;&gt;Migrate from v2 to v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v1-to-v2/&quot;&gt;Migrate from v1 to v2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❗ Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Gatsby is dedicated to building a welcoming, diverse, safe community. We expect everyone participating in the Gatsby community to abide by our &lt;a href=&quot;https://www.gatsbyjs.com/contributing/code-of-conduct/&quot;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;. Please read it. Please follow it. In the Gatsby community, we work hard to build each other up and create amazing things together. 💪💜&lt;/p&gt; 
&lt;h2&gt;🤝 How to Contribute&lt;/h2&gt; 
&lt;p&gt;Whether you&#39;re helping us fix bugs, improve the docs, or spread the word, we&#39;d love to have you as part of the Gatsby community! &lt;span&gt;💪&lt;/span&gt;&lt;span&gt;💜&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://www.gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; for ideas on contributing and setup steps for getting our repositories up and running on your local machine.&lt;/p&gt; 
&lt;h3&gt;A note on how this repository is organized&lt;/h3&gt; 
&lt;p&gt;This repository is a &lt;a href=&quot;https://trunkbaseddevelopment.com/monorepos/&quot;&gt;monorepo&lt;/a&gt; managed using &lt;a href=&quot;https://github.com/lerna/lerna&quot;&gt;Lerna&lt;/a&gt;. This means there are &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages&quot;&gt;multiple packages&lt;/a&gt; managed in this codebase, even though we publish them to NPM as separate packages.&lt;/p&gt; 
&lt;h3&gt;Contributing to Gatsby v2&lt;/h3&gt; 
&lt;p&gt;We are only accepting critical security patches for Gatsby v2.&lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💜 Thanks&lt;/h2&gt; 
&lt;p&gt;Thanks go out to all our many contributors creating plugins, starters, videos, and blog posts. And a special appreciation for our community members helping with issues and PRs, or answering questions on Discord and GitHub Discussions.&lt;/p&gt; 
&lt;p&gt;A big part of what makes Gatsby great is each and every one of you in the community. Your contributions enrich the Gatsby experience and make it better every day.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WordPress/gutenberg</title>
      <link>https://github.com/WordPress/gutenberg</link>
      <description>&lt;p&gt;The Block Editor project for WordPress and beyond. Plugin is available from the official repository.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gutenberg&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22End-to-End+Tests%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/End-to-End%20Tests/badge.svg?sanitize=true&quot; alt=&quot;End-to-End Tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Static+Analysis+%28Linting%2C+License%2C+Type+checks...%29%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/Static%20Analysis%20(Linting,%20License,%20Type%20checks...)/badge.svg?sanitize=true&quot; alt=&quot;Static Analysis (Linting, License, Type checks...)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Unit+Tests%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/Unit%20Tests/badge.svg?sanitize=true&quot; alt=&quot;Unit Tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22Create+Block%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/Create%20Block/badge.svg?sanitize=true&quot; alt=&quot;Create Block&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28iOS%29%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(iOS)/badge.svg?sanitize=true&quot; alt=&quot;React Native E2E Tests (iOS)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/WordPress/gutenberg/actions?query=workflow%3A%22React+Native+E2E+Tests+%28Android%29%22+branch%3Atrunk&quot;&gt;&lt;img src=&quot;https://github.com/WordPress/gutenberg/workflows/React%20Native%20E2E%20Tests%20(Android)/badge.svg?sanitize=true&quot; alt=&quot;React Native E2E Tests (Android)&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://lerna.js.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;lerna&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1204802/100067796-fc3e8700-2e36-11eb-993b-6b80b4310b87.png&quot; alt=&quot;Screenshot of the Gutenberg Editor, editing a post in WordPress&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to the development hub for the WordPress Gutenberg project!&lt;/p&gt; 
&lt;p&gt;&quot;Gutenberg&quot; is a codename for a whole new paradigm in WordPress site building and publishing, that aims to revolutionize the entire publishing experience as much as Gutenberg did the printed word. Right now, the project is in the second phase of a four-phase process that will touch every piece of WordPress -- Editing, &lt;strong&gt;Customization&lt;/strong&gt; (which includes Full Site Editing, Block Patterns, Block Directory and Block based themes), Collaboration, and Multilingual -- and is focused on a new editing experience, the block editor.&lt;/p&gt; 
&lt;p&gt;The block editor introduces a modular approach to pages and posts: each piece of content in the editor, from a paragraph to an image gallery to a headline, is its own block. And just like physical blocks, WordPress blocks can be added, arranged, and rearranged, allowing WordPress users to create media-rich pages in a visually intuitive way -- and without work-arounds like shortcodes or custom HTML.&lt;/p&gt; 
&lt;p&gt;The block editor first became available in December 2018, and we&#39;re still hard at work refining the experience, creating more and better blocks, and laying the groundwork for the next three phases of work. The Gutenberg plugin gives you the latest version of the block editor so you can join us in testing bleeding-edge features, start playing with blocks, and maybe get inspired to build your own.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Get hands on: check out the &lt;a href=&quot;https://wordpress.org/gutenberg/&quot;&gt;block editor live demo&lt;/a&gt; to play with a test instance of the editor.&lt;/p&gt; 
&lt;h3&gt;Using Gutenberg&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt; To use the latest release of the Gutenberg plugin on your WordPress site: install from the plugins page in wp-admin, or &lt;a href=&quot;https://wordpress.org/plugins/gutenberg/&quot;&gt;download from the WordPress.org plugins repository&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User Documentation:&lt;/strong&gt; See the &lt;a href=&quot;https://wordpress.org/support/article/wordpress-editor/&quot;&gt;WordPress Editor documentation&lt;/a&gt; for detailed docs on using the editor as an author creating posts and pages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User Support:&lt;/strong&gt; If you have run into an issue, you should check the &lt;a href=&quot;https://wordpress.org/support/forums/&quot;&gt;Support Forums first&lt;/a&gt;. The forums are a great place to get help. If you have a bug to report, please &lt;a href=&quot;https://github.com/wordpress/gutenberg/issues&quot;&gt;submit it to the Gutenberg repository&lt;/a&gt;. Please search prior to creating a new bug to confirm its not a duplicate.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developing for Gutenberg&lt;/h3&gt; 
&lt;p&gt;Extending and customizing is at the heart of the WordPress platform, this is no different for the Gutenberg project. The editor and future products can be extended by third-party developers using plugins.&lt;/p&gt; 
&lt;p&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/WordPress/gutenberg/trunk/docs/getting-started/tutorials/create-block/README.md&quot;&gt;Create a Block tutorial&lt;/a&gt; for the fastest way to get started extending the block editor. See the &lt;a href=&quot;https://developer.wordpress.org/block-editor/#develop-for-the-block-editor&quot;&gt;Developer Documentation&lt;/a&gt; for extensive tutorials, documentation, and API references.&lt;/p&gt; 
&lt;h3&gt;Contribute to Gutenberg&lt;/h3&gt; 
&lt;p&gt;Gutenberg is an open-source project and welcomes all contributors from code to design, from documentation to triage. The project is built by many contributors and volunteers and we&#39;d love your help building it.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://developer.wordpress.org/block-editor/contributors/&quot;&gt;Contributors Handbook&lt;/a&gt; for all the details on how you can contribute. See &lt;a href=&quot;https://github.com/WordPress/gutenberg/raw/HEAD/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for the contributing guidelines.&lt;/p&gt; 
&lt;p&gt;As with all WordPress projects, we want to ensure a welcoming environment for everyone. With that in mind, all contributors are expected to follow our &lt;a href=&quot;https://github.com/WordPress/gutenberg/raw/HEAD/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;p&gt;You can join us in the &lt;code&gt;#core-editor&lt;/code&gt; channel in Slack, see the &lt;a href=&quot;https://make.wordpress.org/chat/&quot;&gt;WordPress Slack page&lt;/a&gt; for signup information; it is free to join.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Weekly meetings&lt;/strong&gt; The Editor Team meets weekly on Wednesdays at 14:00 UTC in Slack. If you can not join the meeting, agenda and notes are posted to the &lt;a href=&quot;https://make.wordpress.org/core/&quot;&gt;Make WordPress Blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WordPress is free software, and is released under the terms of the GNU General Public License version 2 or (at your option) any later version. See &lt;a href=&quot;https://raw.githubusercontent.com/WordPress/gutenberg/trunk/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt; for complete license.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://s.w.org/style/images/codeispoetry.png?1&quot; alt=&quot;Code is Poetry.&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>testing-library/react-testing-library</title>
      <link>https://github.com/testing-library/react-testing-library</link>
      <description>&lt;p&gt;🐐 Simple and complete React DOM testing utilities that encourage good testing practices.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;React Testing Library&lt;/h1&gt; 
 &lt;a href=&quot;https://www.emojione.com/emoji/1f410&quot;&gt; &lt;img height=&quot;80&quot; width=&quot;80&quot; alt=&quot;goat&quot; src=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/other/goat.png&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;Simple and complete React DOM testing utilities that encourage good testing practices.&lt;/p&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;a href=&quot;https://testing-library.com/react&quot;&gt;&lt;strong&gt;Read The Docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/testing-library/testing-library-docs&quot;&gt;Edit the docs&lt;/a&gt;&lt;/p&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/actions?query=workflow%3Avalidate&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/testing-library/react-testing-library/validate?logo=github&amp;amp;style=flat-square&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/github/testing-library/react-testing-library&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/testing-library/react-testing-library.svg?style=flat-square&quot; alt=&quot;Code Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@testing-library/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@testing-library/react.svg?style=flat-square&quot; alt=&quot;version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.npmtrends.com/@testing-library/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@testing-library/react.svg?style=flat-square&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/@testing-library/react.svg?style=flat-square&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/all-contributors/testing-library/react-testing-library?color=orange&amp;amp;style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/raw/main/CODE_OF_CONDUCT.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square&quot; alt=&quot;Code of Conduct&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/testing-library&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/723559267868737556.svg?color=7389D8&amp;amp;labelColor=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/watchers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/testing-library/react-testing-library.svg?style=social&quot; alt=&quot;Watch on GitHub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/testing-library/react-testing-library.svg?style=social&quot; alt=&quot;Star on GitHub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/tweet?text=Check%20out%20react-testing-library%20by%20%40@TestingLib%20https%3A%2F%2Fgithub.com%2Ftesting-library%2Freact-testing-library%20%F0%9F%91%8D&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url/https/github.com/testing-library/react-testing-library.svg?style=social&quot; alt=&quot;Tweet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://testingjavascript.com&quot;&gt; &lt;img width=&quot;500&quot; alt=&quot;TestingJavaScript.com Learn the smart, efficient way to test any JavaScript application.&quot; src=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/other/testingjavascript.jpg&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#the-problem&quot;&gt;The problem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#the-solution&quot;&gt;The solution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#suppressing-unnecessary-warnings-on-react-dom-168&quot;&gt;Suppressing unnecessary warnings on React DOM 16.8&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#examples&quot;&gt;Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#basic-example&quot;&gt;Basic Example&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#complex-example&quot;&gt;Complex Example&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#more-examples&quot;&gt;More Examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#guiding-principles&quot;&gt;Guiding Principles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#docs&quot;&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#issues&quot;&gt;Issues&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#-bugs&quot;&gt;🐛 Bugs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#-feature-requests&quot;&gt;💡 Feature Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#-questions&quot;&gt;❓ Questions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#license&quot;&gt;LICENSE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;The problem&lt;/h2&gt; 
&lt;p&gt;You want to write maintainable tests for your React components. As a part of this goal, you want your tests to avoid including implementation details of your components and rather focus on making your tests give you the confidence for which they are intended. As part of this, you want your testbase to be maintainable in the long run so refactors of your components (changes to implementation but not functionality) don&#39;t break your tests and slow you and your team down.&lt;/p&gt; 
&lt;h2&gt;The solution&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;React Testing Library&lt;/code&gt; is a very lightweight solution for testing React components. It provides light utility functions on top of &lt;code&gt;react-dom&lt;/code&gt; and &lt;code&gt;react-dom/test-utils&lt;/code&gt;, in a way that encourages better testing practices. Its primary guiding principle is:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://twitter.com/kentcdodds/status/977018512689455106&quot;&gt;The more your tests resemble the way your software is used, the more confidence they can give you.&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;This module is distributed via &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; which is bundled with &lt;a href=&quot;https://nodejs.org&quot;&gt;node&lt;/a&gt; and should be installed as one of your project&#39;s &lt;code&gt;devDependencies&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install --save-dev @testing-library/react
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;p&gt;for installation via &lt;a href=&quot;https://classic.yarnpkg.com&quot;&gt;yarn&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn add --dev @testing-library/react
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This library has &lt;code&gt;peerDependencies&lt;/code&gt; listings for &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You may also be interested in installing &lt;code&gt;@testing-library/jest-dom&lt;/code&gt; so you can use &lt;a href=&quot;https://github.com/testing-library/jest-dom&quot;&gt;the custom jest matchers&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://testing-library.com/react&quot;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Suppressing unnecessary warnings on React DOM 16.8&lt;/h3&gt; 
&lt;p&gt;There is a known compatibility issue with React DOM 16.8 where you will see the following warning:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Warning: An update to ComponentName inside a test was not wrapped in act(...).
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you cannot upgrade to React DOM 16.9, you may suppress the warnings by adding the following snippet to your test configuration (&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues/281&quot;&gt;learn more&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// this is just a little hack to silence a warning that we&#39;ll get until we
// upgrade to 16.9. See also: https://github.com/facebook/react/pull/14853
const originalError = console.error
beforeAll(() =&amp;gt; {
  console.error = (...args) =&amp;gt; {
    if (/Warning.*not wrapped in act/.test(args[0])) {
      return
    }
    originalError.call(console, ...args)
  }
})

afterAll(() =&amp;gt; {
  console.error = originalError
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;h3&gt;Basic Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;// hidden-message.js
import * as React from &#39;react&#39;

// NOTE: React Testing Library works well with React Hooks and classes.
// Your tests will be the same regardless of how you write your components.
function HiddenMessage({children}) {
  const [showMessage, setShowMessage] = React.useState(false)
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;label htmlFor=&quot;toggle&quot;&amp;gt;Show Message&amp;lt;/label&amp;gt;
      &amp;lt;input
        id=&quot;toggle&quot;
        type=&quot;checkbox&quot;
        onChange={e =&amp;gt; setShowMessage(e.target.checked)}
        checked={showMessage}
      /&amp;gt;
      {showMessage ? children : null}
    &amp;lt;/div&amp;gt;
  )
}

export default HiddenMessage
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;// __tests__/hidden-message.js
// these imports are something you&#39;d normally configure Jest to import for you
// automatically. Learn more in the setup docs: https://testing-library.com/docs/react-testing-library/setup#cleanup
import &#39;@testing-library/jest-dom&#39;
// NOTE: jest-dom adds handy assertions to Jest and is recommended, but not required

import * as React from &#39;react&#39;
import {render, fireEvent, screen} from &#39;@testing-library/react&#39;
import HiddenMessage from &#39;../hidden-message&#39;

test(&#39;shows the children when the checkbox is checked&#39;, () =&amp;gt; {
  const testMessage = &#39;Test Message&#39;
  render(&amp;lt;HiddenMessage&amp;gt;{testMessage}&amp;lt;/HiddenMessage&amp;gt;)

  // query* functions will return the element or null if it cannot be found
  // get* functions will return the element or throw an error if it cannot be found
  expect(screen.queryByText(testMessage)).toBeNull()

  // the queries can accept a regex to make your selectors more resilient to content tweaks and changes.
  fireEvent.click(screen.getByLabelText(/show/i))

  // .toBeInTheDocument() is an assertion that comes from jest-dom
  // otherwise you could use .toBeDefined()
  expect(screen.getByText(testMessage)).toBeInTheDocument()
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Complex Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;// login.js
import * as React from &#39;react&#39;

function Login() {
  const [state, setState] = React.useReducer((s, a) =&amp;gt; ({...s, ...a}), {
    resolved: false,
    loading: false,
    error: null,
  })

  function handleSubmit(event) {
    event.preventDefault()
    const {usernameInput, passwordInput} = event.target.elements

    setState({loading: true, resolved: false, error: null})

    window
      .fetch(&#39;/api/login&#39;, {
        method: &#39;POST&#39;,
        headers: {&#39;Content-Type&#39;: &#39;application/json&#39;},
        body: JSON.stringify({
          username: usernameInput.value,
          password: passwordInput.value,
        }),
      })
      .then(r =&amp;gt; r.json().then(data =&amp;gt; (r.ok ? data : Promise.reject(data))))
      .then(
        user =&amp;gt; {
          setState({loading: false, resolved: true, error: null})
          window.localStorage.setItem(&#39;token&#39;, user.token)
        },
        error =&amp;gt; {
          setState({loading: false, resolved: false, error: error.message})
        },
      )
  }

  return (
    &amp;lt;div&amp;gt;
      &amp;lt;form onSubmit={handleSubmit}&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;label htmlFor=&quot;usernameInput&quot;&amp;gt;Username&amp;lt;/label&amp;gt;
          &amp;lt;input id=&quot;usernameInput&quot; /&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;label htmlFor=&quot;passwordInput&quot;&amp;gt;Password&amp;lt;/label&amp;gt;
          &amp;lt;input id=&quot;passwordInput&quot; type=&quot;password&quot; /&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;button type=&quot;submit&quot;&amp;gt;Submit{state.loading ? &#39;...&#39; : null}&amp;lt;/button&amp;gt;
      &amp;lt;/form&amp;gt;
      {state.error ? &amp;lt;div role=&quot;alert&quot;&amp;gt;{state.error}&amp;lt;/div&amp;gt; : null}
      {state.resolved ? (
        &amp;lt;div role=&quot;alert&quot;&amp;gt;Congrats! You&#39;re signed in!&amp;lt;/div&amp;gt;
      ) : null}
    &amp;lt;/div&amp;gt;
  )
}

export default Login
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;// __tests__/login.js
// again, these first two imports are something you&#39;d normally handle in
// your testing framework configuration rather than importing them in every file.
import &#39;@testing-library/jest-dom&#39;
import * as React from &#39;react&#39;
// import API mocking utilities from Mock Service Worker.
import {rest} from &#39;msw&#39;
import {setupServer} from &#39;msw/node&#39;
// import testing utilities
import {render, fireEvent, screen} from &#39;@testing-library/react&#39;
import Login from &#39;../login&#39;

const fakeUserResponse = {token: &#39;fake_user_token&#39;}
const server = setupServer(
  rest.post(&#39;/api/login&#39;, (req, res, ctx) =&amp;gt; {
    return res(ctx.json(fakeUserResponse))
  }),
)

beforeAll(() =&amp;gt; server.listen())
afterEach(() =&amp;gt; {
  server.resetHandlers()
  window.localStorage.removeItem(&#39;token&#39;)
})
afterAll(() =&amp;gt; server.close())

test(&#39;allows the user to login successfully&#39;, async () =&amp;gt; {
  render(&amp;lt;Login /&amp;gt;)

  // fill out the form
  fireEvent.change(screen.getByLabelText(/username/i), {
    target: {value: &#39;chuck&#39;},
  })
  fireEvent.change(screen.getByLabelText(/password/i), {
    target: {value: &#39;norris&#39;},
  })

  fireEvent.click(screen.getByText(/submit/i))

  // just like a manual tester, we&#39;ll instruct our test to wait for the alert
  // to show up before continuing with our assertions.
  const alert = await screen.findByRole(&#39;alert&#39;)

  // .toHaveTextContent() comes from jest-dom&#39;s assertions
  // otherwise you could use expect(alert.textContent).toMatch(/congrats/i)
  // but jest-dom will give you better error messages which is why it&#39;s recommended
  expect(alert).toHaveTextContent(/congrats/i)
  expect(window.localStorage.getItem(&#39;token&#39;)).toEqual(fakeUserResponse.token)
})

test(&#39;handles server exceptions&#39;, async () =&amp;gt; {
  // mock the server error response for this test suite only.
  server.use(
    rest.post(&#39;/api/login&#39;, (req, res, ctx) =&amp;gt; {
      return res(ctx.status(500), ctx.json({message: &#39;Internal server error&#39;}))
    }),
  )

  render(&amp;lt;Login /&amp;gt;)

  // fill out the form
  fireEvent.change(screen.getByLabelText(/username/i), {
    target: {value: &#39;chuck&#39;},
  })
  fireEvent.change(screen.getByLabelText(/password/i), {
    target: {value: &#39;norris&#39;},
  })

  fireEvent.click(screen.getByText(/submit/i))

  // wait for the error message
  const alert = await screen.findByRole(&#39;alert&#39;)

  expect(alert).toHaveTextContent(/internal server error/i)
  expect(window.localStorage.getItem(&#39;token&#39;)).toBeNull()
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We recommend using &lt;a href=&quot;https://github.com/mswjs/msw&quot;&gt;Mock Service Worker&lt;/a&gt; library to declaratively mock API communication in your tests instead of stubbing &lt;code&gt;window.fetch&lt;/code&gt;, or relying on third-party adapters.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;More Examples&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We&#39;re in the process of moving examples to the &lt;a href=&quot;https://testing-library.com/docs/example-codesandbox&quot;&gt;docs site&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You&#39;ll find runnable examples of testing with different libraries in &lt;a href=&quot;https://codesandbox.io/s/github/kentcdodds/react-testing-library-examples&quot;&gt;the &lt;code&gt;react-testing-library-examples&lt;/code&gt; codesandbox&lt;/a&gt;. Some included are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codesandbox.io/s/github/kentcdodds/react-testing-library-examples/tree/main/?fontsize=14&amp;amp;module=%2Fsrc%2F__tests__%2Freact-redux.js&amp;amp;previewwindow=tests&quot;&gt;&lt;code&gt;react-redux&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codesandbox.io/s/github/kentcdodds/react-testing-library-examples/tree/main/?fontsize=14&amp;amp;module=%2Fsrc%2F__tests__%2Freact-router.js&amp;amp;previewwindow=tests&quot;&gt;&lt;code&gt;react-router&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codesandbox.io/s/github/kentcdodds/react-testing-library-examples/tree/main/?fontsize=14&amp;amp;module=%2Fsrc%2F__tests__%2Freact-context.js&amp;amp;previewwindow=tests&quot;&gt;&lt;code&gt;react-context&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also find React Testing Library examples at &lt;a href=&quot;https://react-testing-examples.com/jest-rtl/&quot;&gt;react-testing-examples.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Hooks&lt;/h2&gt; 
&lt;p&gt;If you are interested in testing a custom hook, check out &lt;a href=&quot;https://github.com/testing-library/react-hooks-testing-library&quot;&gt;React Hooks Testing Library&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: it is not recommended to test single-use custom hooks in isolation from the components where it&#39;s being used. It&#39;s better to test the component that&#39;s using the hook rather than the hook itself. The &lt;code&gt;React Hooks Testing Library&lt;/code&gt; is intended to be used for reusable hooks/libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Guiding Principles&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://twitter.com/kentcdodds/status/977018512689455106&quot;&gt;The more your tests resemble the way your software is used, the more confidence they can give you.&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We try to only expose methods and utilities that encourage you to write tests that closely resemble how your React components are used.&lt;/p&gt; 
&lt;p&gt;Utilities are included in this project based on the following guiding principles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If it relates to rendering components, it deals with DOM nodes rather than component instances, nor should it encourage dealing with component instances.&lt;/li&gt; 
 &lt;li&gt;It should be generally useful for testing individual React components or full React applications. While this library is focused on &lt;code&gt;react-dom&lt;/code&gt;, utilities could be included even if they don&#39;t directly relate to &lt;code&gt;react-dom&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Utility implementations and APIs should be simple and flexible.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Most importantly, we want React Testing Library to be pretty light-weight, simple, and easy to understand.&lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://testing-library.com/react&quot;&gt;&lt;strong&gt;Read The Docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/testing-library/testing-library-docs&quot;&gt;Edit the docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Looking to contribute? Look for the &lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3A%22good+first+issue%22+&quot;&gt;Good First Issue&lt;/a&gt; label.&lt;/p&gt; 
&lt;h3&gt;🐛 Bugs&lt;/h3&gt; 
&lt;p&gt;Please file an issue for bugs, missing documentation, or unexpected behavior.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=is%3Aissue+is%3Aopen+label%3Abug+sort%3Acreated-desc&quot;&gt;&lt;strong&gt;See Bugs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;💡 Feature Requests&lt;/h3&gt; 
&lt;p&gt;Please file an issue to suggest new features. Vote on feature requests by adding a 👍. This helps maintainers prioritize what to work on.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=is%3Aissue+sort%3Areactions-%2B1-desc+label%3Aenhancement+is%3Aopen&quot;&gt;&lt;strong&gt;See Feature Requests&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;❓ Questions&lt;/h3&gt; 
&lt;p&gt;For questions related to using the library, please visit a support community instead of filing an issue on GitHub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/testing-library&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/react-testing-library&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these people (&lt;a href=&quot;https://github.com/all-contributors/all-contributors#emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://kentcdodds.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1500684?v=3?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kent C. Dodds&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=kentcdodds&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=kentcdodds&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#infra-kentcdodds&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=kentcdodds&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://audiolion.github.io&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2430381?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Castner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=audiolion&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.dnlsandiego.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8008023?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Sandiego&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=dnlsandiego&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Miklet&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12592677?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paweł Mikołajczyk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=Miklet&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://co.linkedin.com/in/alejandronanez/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/464978?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Ñáñez Ortiz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=alejandronanez&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pbomb&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1402095?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt Parrish&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Apbomb&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=pbomb&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=pbomb&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=pbomb&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/wKovacs64&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1288694?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Justin Hall&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#platform-wKovacs64&quot; title=&quot;Packaging/porting to new platform&quot;&gt;📦&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/antoaravinth&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1241511?s=460&amp;amp;v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anto Aravinth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=antoaravinth&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=antoaravinth&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=antoaravinth&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JonahMoses&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3462296?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonah Moses&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=JonahMoses&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://team.thebrain.pro&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4002543?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Łukasz Gandecki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=lgandecki&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=lgandecki&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=lgandecki&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://sompylasar.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/498274?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ivan Babak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Asompylasar&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-sompylasar&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jday3&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4439618?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jesse Day&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jday3&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://gnapse.github.io&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/15199?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ernesto García&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#question-gnapse&quot; title=&quot;Answering Questions&quot;&gt;💬&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=gnapse&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=gnapse&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jomaxx.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2747424?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josef Maxx Blake&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jomaxx&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jomaxx&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jomaxx&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/baranovskim&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/29602306?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michal Baranowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#blog-mbaranovski&quot; title=&quot;Blogposts&quot;&gt;📝&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#tutorial-mbaranovski&quot; title=&quot;Tutorials&quot;&gt;✅&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aputhin&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13985684?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arthur Puthin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=aputhin&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/thchia&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/21194045?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas Chia&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=thchia&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=thchia&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ilegra.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20430611?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thiago Galvani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=thiagopaiva99&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://Chriswcs.github.io&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/19828824?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christian&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ChrisWcs&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://alexkrolick.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1571667?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Krolick&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#question-alexkrolick&quot; title=&quot;Answering Questions&quot;&gt;💬&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=alexkrolick&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#example-alexkrolick&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-alexkrolick&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/johann-sonntagbauer&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1239401?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Johann Hubert Sonntagbauer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=johann-sonntagbauer&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=johann-sonntagbauer&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=johann-sonntagbauer&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.maddijoyce.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2224291?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maddi Joyce&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=maddijoyce&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.vicesoftware.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/10080111?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Vice&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=RyanAtViceSoftware&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ianwilson.io&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7942604?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ian Wilson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#blog-iwilsonq&quot; title=&quot;Blogposts&quot;&gt;📝&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#tutorial-iwilsonq&quot; title=&quot;Tutorials&quot;&gt;✅&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/InExtremaRes&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1635491?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3AInExtremaRes&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=InExtremaRes&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Gpx&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/767959?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Giorgio Polvara&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3AGpx&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-Gpx&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jgoz&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/132233?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Gozde&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jgoz&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/SavePointSam&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8203211?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam Horton&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=SavePointSam&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#example-SavePointSam&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-SavePointSam&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.richardkotze.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/10452163?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Richard Kotze (mobile)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=rkotze&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sotobuild&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/10819833?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brahian E. Soto Mercedes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=sotobuild&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bdelaforest&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7151559?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benoit de La Forest&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=bdelaforest&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/thesalah&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/6624197?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Salah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=thesalah&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=thesalah&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://gordonizer.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/370054?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adam Gordon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Aicfantv&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=icfantv&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://silvenon.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/471278?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matija Marohnić&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=silvenon&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Dajust&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8015514?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Justice Mba&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=Dajust&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://markpollmann.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5286559?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mark Pollmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=MarkPollmann&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ehteshamkafeel&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1213123?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ehtesham Kafeel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ehteshamkafeel&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ehteshamkafeel&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jpavon.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1493505?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Julio Pavón&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jpavon&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.duncanleung.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1765048?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Duncan L&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=duncanleung&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#example-duncanleung&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/tyagow/?locale=en_US&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/700778?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tiago Almeida&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=tyagow&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://rbrtsmith.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4982001?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Robert Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Arbrtsmith&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://offbyone.tech&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1700355?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zach Green&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=zgreen&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dadamssg&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/881986?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dadamssg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=dadamssg&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.yaabed.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8734097?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yazan Aabed&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#blog-YazanAabeed&quot; title=&quot;Blogposts&quot;&gt;📝&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/timbonicus&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/556258?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Atimbonicus&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=timbonicus&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=timbonicus&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=timbonicus&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://divyanshu.xyz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/6682655?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Divyanshu Maithani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#tutorial-divyanshu013&quot; title=&quot;Tutorials&quot;&gt;✅&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#video-divyanshu013&quot; title=&quot;Videos&quot;&gt;📹&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/metagrover&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/9116042?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Deepak Grover&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#tutorial-metagrover&quot; title=&quot;Tutorials&quot;&gt;✅&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#video-metagrover&quot; title=&quot;Videos&quot;&gt;📹&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/eyalcohen4&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/16276358?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eyal Cohen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=eyalcohen4&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/petermakowski&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/7452681?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Makowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=petermakowski&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Michielnuyts&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/20361668?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michiel Nuyts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=Michielnuyts&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/joeynimu&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1195863?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Ng&#39;ethe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=joeynimu&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=joeynimu&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Enikol&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19998290?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kate&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=Enikol&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.seanrparker.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11980217?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=SeanRParker&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jlongster.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/17031?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Long&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-jlongster&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#platform-jlongster&quot; title=&quot;Packaging/porting to new platform&quot;&gt;📦&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hhagely&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10118777?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Herb Hagely&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#example-hhagely&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.wendtedesigns.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5779538?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Wendte&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#example-themostcolm&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.aboutmonica.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6998954?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Monica Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=M0nica&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://sivkoff.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2699953?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vitaly Sivkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=sivkoff&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/weyert&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/7049?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Weyert de Boer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-weyert&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Aweyert&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#design-weyert&quot; title=&quot;Design&quot;&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/EstebanMarin&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13613037?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;EstebanMarin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=EstebanMarin&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vctormb&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/13953703?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Victor Martins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=vctormb&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/RoystonS&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19773?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Royston Shufflebotham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3ARoystonS&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=RoystonS&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#example-RoystonS&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/chrbala&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6834804?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;chrbala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=chrbala&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://donavon.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/887639?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Donavon West&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=donavon&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=donavon&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-donavon&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=donavon&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/maisano&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/689081?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Richard Maisano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=maisano&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.marcobiedermann.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/5244986?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marco Biedermann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=marcobiedermann&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#maintenance-marcobiedermann&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=marcobiedermann&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alexzherdev&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/93752?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Zherdev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Aalexzherdev&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=alexzherdev&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Andrewmat&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/5133846?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;André Matulionis dos Santos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=Andrewmat&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#example-Andrewmat&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=Andrewmat&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/FredyC&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1096340?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel K.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3AFredyC&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=FredyC&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-FredyC&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=FredyC&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3AFredyC&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mohamedmagdy17593&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/40938625?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mohamedmagdy17593&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=mohamedmagdy17593&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://lorensr.me&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/251288?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Loren ☺️&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=lorensr&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MarkFalconbridge&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/20678943?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MarkFalconbridge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3AMarkFalconbridge&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=MarkFalconbridge&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/viniciusavieira&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2073019?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vinicius&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=viniciusavieira&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#example-viniciusavieira&quot; title=&quot;Examples&quot;&gt;💡&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pschyma&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2489928?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Schyma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=pschyma&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ianschmitz&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6355370?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ian Schmitz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ianschmitz&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/joual&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/157877?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joel Marcotte&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Ajoual&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=joual&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=joual&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://aledustet.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2413802?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Dustet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Aaledustet&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bcarroll22&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/11020406?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brandon Carroll&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=bcarroll22&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lucas0707&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/26284338?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Machado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=lucas0707&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://pascalduez.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/335467?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pascal Duez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#platform-pascalduez&quot; title=&quot;Packaging/porting to new platform&quot;&gt;📦&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/minh_ngvyen&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2852660?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Minh Nguyen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=NMinhNguyen&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://iababy46.blogspot.tw/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/11155585?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;LiaoJimmy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=LiaoJimmy&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/threepointone&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/18808?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sunil Pai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=threepointone&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=threepointone&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://twitter.com/dan_abramov&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/810438?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan Abramov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Agaearon&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ChristianMurphy&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3107513?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christian Murphy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#infra-ChristianMurphy&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jeetiss.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6726016?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ivakhnenko Dmitry&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jeetiss&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ghuser.io/jamesgeorge007&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/25279263?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James George&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jamesgeorge007&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://joaofernandes.me/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1075053?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;João Fernandes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=JSFernandes&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alejandroperea&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/6084749?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Perea&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Aalejandroperea&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://nickmccurdy.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/927220?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick McCurdy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Anickmccurdy&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#question-nickmccurdy&quot; title=&quot;Answering Questions&quot;&gt;💬&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#infra-nickmccurdy&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/sebsilbermann&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/12292047?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sebastian Silbermann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Aeps1lon&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://afontcu.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9197791?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrià Fontcuberta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Aafontcu&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=afontcu&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blog.johnnyreilly.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1010525?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Reilly&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Ajohnnyreilly&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://michaeldeboey.be&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/6643991?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michaël De Boey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3AMichaelDeBoey&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=MichaelDeBoey&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://cimbul.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/927923?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim Yates&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Acimbul&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/eventualbuddha&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1938?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brian Donovan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=eventualbuddha&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JaysQubeXon&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/18309230?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Noam Gabriel Jacobson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=JaysQubeXon&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rvdkooy&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4119960?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ronald van der Kooij&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=rvdkooy&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=rvdkooy&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aayushrajvanshi&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/14968551?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aayush Rajvanshi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=aayushrajvanshi&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://elyalamillo.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/24350492?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ely Alamillo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ely-alamillo&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ely-alamillo&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/danieljcafonso&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/35337607?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Afonso&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=danieljcafonso&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=danieljcafonso&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.laurensbosscher.nl&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/13363196?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Laurens Bosscher&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=LaurensBosscher&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/__sakito__&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/15010907?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sakito Mukai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=sakito21&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://turkerteke.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/12457162?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Türker Teke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=tteke&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/zachbrogan&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/319162?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zach Brogan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=zbrogz&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=zbrogz&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ryota-murakami.github.io/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5501268?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryota Murakami&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ryota-murakami&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hottmanmichael&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10534502?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Hottman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-hottmanmichael&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/stevenfitzpatrick&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/23268855?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Fitzpatrick&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Astevenfitzpatrick&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/juangl&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1887029?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Juan Je García&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=juangl&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ghuser.io/Ishaan28malik&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/27343592?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Championrunner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=Ishaan28malik&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/samtsai&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/225526?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam Tsai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=samtsai&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=samtsai&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=samtsai&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.echooff.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/149248?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christian Rackerseder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=screendriver&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/NiGhTTraX&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/485061?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrei Picus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3ANiGhTTraX&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3ANiGhTTraX&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://redd.one&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/14984911?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Artem Zakharchenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=kettanaito&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://michaelsiek.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/45568605?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=michael-siek&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://2dubbing.tistory.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/15885679?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Braden Lee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=2dubbing&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kamranicus.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/563819?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kamran Ayub&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=kamranayub&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=kamranayub&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/matanbobi&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12711091?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matan Borenkraout&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=MatanBobi&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ryanbigg.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2687?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Bigg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#maintenance-radar&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://antonhalim.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10498035?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anton Halim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=antonhalim&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://artmalko.ru&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1823689?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Artem Malko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=artem-malko&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://gerritalex.de&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/29307652?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gerrit Alex&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ljosberinn&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/karthick3018&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/47154512?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Karthick Raja&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=karthick3018&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/theashraf&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/39750790?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abdelrahman Ashraf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=theashraf&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lidoravitan&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/35113398?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lidor Avitan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=lidoravitan&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ljharb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/45469?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jordan Harband&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/pulls?q=is%3Apr+reviewed-by%3Aljharb&quot; title=&quot;Reviewed Pull Requests&quot;&gt;👀&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/#ideas-ljharb&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;🤔&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marcosvega91&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5365582?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marco Moretti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=marcosvega91&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sanchit121&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/30828115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sanchit121&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Asanchit121&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=sanchit121&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/solufa&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9402912?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Solufa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/issues?q=author%3Asolufa&quot; title=&quot;Bug reports&quot;&gt;🐛&lt;/a&gt; &lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=solufa&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://codepen.io/ariperkkio/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14806298?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ari Perkkiö&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=AriPerkkio&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jhnns&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/781746?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Johannes Ewald&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=jhnns&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/anpaopao&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44686792?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Angus J. Pope&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=anpaopao&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leschdom&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62334278?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dominik Lesch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=leschdom&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ImADrafter&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44379989?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcos Gómez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/testing-library/react-testing-library/commits?author=ImADrafter&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/testing-library/react-testing-library/main/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- prettier-ignore-end --&gt;</description>
    </item>
    
    <item>
      <title>mui-org/material-ui</title>
      <link>https://github.com/mui-org/material-ui</link>
      <description>&lt;p&gt;Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with Material Design.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://mui.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;150&quot; src=&quot;https://mui.com/static/logo.svg?sanitize=true&quot; alt=&quot;MUI logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;MUI&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;Quickly build beautiful &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; apps. MUI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with &lt;a href=&quot;https://material.io/design/introduction/&quot;&gt;Material Design&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/mui-org/material-ui/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@mui/material/latest.svg?sanitize=true&quot; alt=&quot;npm latest package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@mui/material/next.svg?sanitize=true&quot; alt=&quot;npm next package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@mui/material.svg?sanitize=true&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.circleci.com/pipelines/github/mui-org/material-ui?branch=next&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/mui-org/material-ui/next.svg?sanitize=true&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/mui-org/material-ui/branch/next&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/mui-org/material-ui/next.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/MaterialUI&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/MaterialUI.svg?label=follow+Material-UI&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mui-org/material-ui/issues/27062&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/renovate-enabled-brightgreen.svg?sanitize=true&quot; alt=&quot;Renovate status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://isitmaintained.com/project/mui-org/material-ui&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;https://isitmaintained.com/badge/resolution/mui-org/material-ui.svg?sanitize=true&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://translate.mui.com/project/material-ui-docs&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/material-ui-docs/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/material-ui&quot; alt=&quot;Open Collective backers and sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;MUI is available as an &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;npm package&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://mui.com/&quot;&gt;Stable channel v5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @mui/material @emotion/react @emotion/styled

// with yarn
yarn add @mui/material @emotion/react @emotion/styled
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Older versions&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v4.mui.com/&quot;&gt;v4.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://mui.com/guides/migration-v4/&quot;&gt;Migration from v4 to v5&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v3.mui.com/&quot;&gt;v3.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://mui.com/guides/migration-v3/&quot;&gt;Migration from v3 to v4&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v0.mui.com/&quot;&gt;v0.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://mui.com/guides/migration-v0x/&quot;&gt;Migration to v1&lt;/a&gt;)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;Please note that &lt;code&gt;@next&lt;/code&gt; will only point to pre-releases; to get the latest stable release use &lt;code&gt;@latest&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Who sponsors MUI?&lt;/h2&gt; 
&lt;h3&gt;Diamond 💎&lt;/h3&gt; 
&lt;p style=&quot;display: flex; justify-content: center;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;octopus&quot; href=&quot;https://octopus.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://avatars3.githubusercontent.com/u/1287123?s=256&quot; alt=&quot;octopus&quot; title=&quot;Repeatable, reliable deployments&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;doit-intl&quot; href=&quot;https://www.doit-intl.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://avatars3.githubusercontent.com/u/8424863?s=256&quot; alt=&quot;doit-intl&quot; title=&quot;Management Platform for Google Cloud and AWS&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Diamond Sponsors are those who have pledged $1,500/month or more to MUI.&lt;/p&gt; 
&lt;h3&gt;Gold 🏆&lt;/h3&gt; 
&lt;p&gt;via &lt;a href=&quot;https://www.patreon.com/oliviertassinari&quot;&gt;Patreon&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;tidelift&quot; href=&quot;https://tidelift.com/subscription/pkg/npm-material-ui?utm_source=npm-material-ui&amp;amp;utm_medium=referral&amp;amp;utm_campaign=homepage&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://github.com/tidelift.png?size=192&quot; alt=&quot;tidelift&quot; title=&quot;Enterprise-ready open-source software&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;bitsrc&quot; href=&quot;https://bit.dev/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://github.com/teambit.png?size=192&quot; alt=&quot;bitsrc&quot; title=&quot;The fastest way to share code&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;movavi&quot; href=&quot;https://spicefactory.co/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://avatars.githubusercontent.com/u/13365608?s=192&quot; alt=&quot;Next gen digital product studio.&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;via &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;OpenCollective&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center; flex-wrap: wrap;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;textemall&quot; href=&quot;https://www.text-em-all.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/callemall/a6946da/logo/192.png&quot; alt=&quot;call-em-all&quot; title=&quot;Mass Text Messaging &amp;amp; Automated Calling&quot; height=&quot;96&quot; width=&quot;96&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;hoodiebees&quot; href=&quot;https://hoodiebees.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/hoodiebees1/617b451/logo/192.png&quot; alt=&quot;hoodiebees&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;movavi&quot; href=&quot;https://www.movavi.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/movavi-software/a1d0167/logo/192.png&quot; alt=&quot;Screen recorder for Mac&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Direct&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center; flex-wrap: wrap;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;elevator&quot; href=&quot;https://www.elevatormag.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img src=&quot;https://mui.com/static/sponsors/elevator.png&quot; alt=&quot;elevator&quot; title=&quot;The dopest new hip hop, upcoming artists, music news, culture, and style&quot; height=&quot;57&quot; width=&quot;191&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Gold Sponsors are those who have pledged $500/month or more to MUI.&lt;/p&gt; 
&lt;h3&gt;There is more!&lt;/h3&gt; 
&lt;p&gt;See the full list of &lt;a href=&quot;https://mui.com/discover-more/backers/&quot;&gt;our backers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Here is a quick example to get you started, &lt;strong&gt;it&#39;s all you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import * as React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import Button from &#39;@mui/material/Button&#39;;

function App() {
  return &amp;lt;Button variant=&quot;contained&quot;&amp;gt;Hello World&amp;lt;/Button&amp;gt;;
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.querySelector(&#39;#app&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Yes, it&#39;s really all you need to get started as you can see in this live and interactive demo:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/4j7m47vlm4&quot;&gt;&lt;img src=&quot;https://codesandbox.io/static/img/play-codesandbox.svg?sanitize=true&quot; alt=&quot;Edit Button&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For &lt;em&gt;how-to&lt;/em&gt; questions and other non-issues, please use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/material-ui&quot;&gt;StackOverflow&lt;/a&gt; instead of GitHub issues. There is a StackOverflow tag called &quot;material-ui&quot; that you can use to tag your questions.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Are you looking for an example project to get started? &lt;a href=&quot;https://mui.com/getting-started/example-projects/&quot;&gt;We host some&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://mui.com/&quot;&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Premium Themes&lt;/h2&gt; 
&lt;p&gt;You can find complete templates &amp;amp; themes in the &lt;a href=&quot;https://material-ui.com/store/?utm_source=docs&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme-store&quot;&gt;MUI store&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/master/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to MUI.&lt;/p&gt; 
&lt;p&gt;Notice that contributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on MUI, we also are thrilled to receive a variety of &lt;a href=&quot;https://mui.com/getting-started/faq/#material-ui-is-awesome-how-can-i-support-the-project&quot;&gt;other contributions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;If you have recently updated, please read the &lt;a href=&quot;https://github.com/mui-org/material-ui/releases&quot;&gt;changelog&lt;/a&gt; for details of what has changed.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The future plans and high priority features and enhancements can be found in the &lt;a href=&quot;https://mui.com/discover-more/roadmap/&quot;&gt;roadmap&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsoring services&lt;/h2&gt; 
&lt;p&gt;These great services sponsor MUI&#39;s core infrastructure:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;GitHub&quot; src=&quot;https://github.githubassets.com/images/modules/logos_page/GitHub-Logo.png&quot; height=&quot;25&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub allows us to host the Git repository and coordinate contributions.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;Netlify&quot; src=&quot;https://cdn.netlify.com/15ecf59b59c9d04b88097c6b5d2c7e8a7d1302d0/1b6d6/img/press/logos/full-logo-light.svg?sanitize=true&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Netlify allows us to distribute the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://crowdin.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;CrowdIn&quot; src=&quot;https://support.crowdin.com/assets/logos/crowdin-logo1-small.png&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CrowdIn allows us to translate the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;BrowserStack&quot; src=&quot;https://www.browserstack.com/images/mail/browserstack-logo-footer.png&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;BrowserStack allows us to test in real browsers.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;CodeCov&quot; src=&quot;https://github.com/codecov.png?size=70&quot; width=&quot;35&quot; height=&quot;35&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CodeCov allows us to monitor the test coverage.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
