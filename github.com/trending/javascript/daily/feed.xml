<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Wed, 03 Mar 2021 01:33:44 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>flow-typed/flow-typed</title>
      <link>https://github.com/flow-typed/flow-typed</link>
      <description>&lt;p&gt;A central repository for Flow library definitions&lt;/p&gt;&lt;hr&gt;&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/flow-typed/flow-typed/workflows/CI/badge.svg&quot; alt=&quot;Build&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/flow-typed&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/flow-typed.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discordapp.com/invite/8ezwRUK&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/539606376339734558.svg?label=discord&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Join the chat at https://discordapp.com/invite/8ezwRUK&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;flow-typed&lt;/code&gt; is a &lt;a href=&quot;https://github.com/flow-typed/flow-typed/tree/master/definitions&quot;&gt;repository&lt;/a&gt; of third-party &lt;a href=&quot;https://flow.org/en/docs/libdefs&quot;&gt;library interface definitions&lt;/a&gt; for use with &lt;a href=&quot;http://flow.org&quot;&gt;Flow&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can grab definitions directly from this GitHub repo, or you can use the CLI (currently in beta) to install a libdef for a given library:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ yarn global add flow-typed

$ cd /path/to/my/project
$ yarn install
$ flow-typed install rxjs@5.0.x
&#39;rxjs_v5.0.x.js&#39; installed at /path/to/my/project/flow-typed/npm/rxjs_v5.0.x.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Huh?&lt;/h2&gt; 
&lt;p&gt;When you start a project with Flow, &lt;strong&gt;you likely want to use some third-party libraries that were &lt;em&gt;not&lt;/em&gt; written with Flow&lt;/strong&gt;. By default, Flow will just ignore these libraries &lt;strong&gt;leaving them untyped&lt;/strong&gt;. As a result, Flow can&#39;t give errors if you accidentally mis-use the library (nor will it be able to auto-complete the library).&lt;/p&gt; 
&lt;p&gt;To address this, &lt;strong&gt;Flow supports &lt;a href=&quot;https://flow.org/en/docs/libdefs&quot;&gt;library definitions&lt;/a&gt;&lt;/strong&gt; which allow you to describe the interface of a module or library separate from the implementation of that module/library.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The &lt;code&gt;flow-typed&lt;/code&gt; repo is a collection of high-quality library definitions&lt;/strong&gt;, tests to ensure that definitions remain high quality, and tooling to make it as easy as possible to import them into your project.&lt;/p&gt; 
&lt;p&gt;All you have to do when you add one or more new dependencies to your project is run &lt;code&gt;flow-typed install&lt;/code&gt;. This will search the libdef repo and download all the libdefs that are relevant for your project and install them for you. After that, &lt;strong&gt;simply check them in&lt;/strong&gt; and be on your way!&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://github.com/flow-typed/flow-typed/wiki/Importing-And-Using-Type-Definitions&quot;&gt;Importing And Using Type Definitions&lt;/a&gt; in the wiki. It will walk you through using typedefs installed through flow-typed, as well as writing and including your own.&lt;/p&gt; 
&lt;h2&gt;FAQs&lt;/h2&gt; 
&lt;p&gt;Before opening an issue, take a look at the &lt;a href=&quot;https://github.com/flow-typed/flow-typed/wiki/FAQs&quot;&gt;FAQs&lt;/a&gt;. Chances are your question has already been answered! If not, don&#39;t hesitate to &lt;a href=&quot;https://github.com/flow-typed/flow-typed/issues/new&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How Do I Contribute Library Definitions?&lt;/h2&gt; 
&lt;p&gt;Just send a pull request! The wiki on &lt;a href=&quot;https://github.com/flow-typed/flow-typed/wiki/Contributing-Library-Definitions&quot;&gt;Contributing Library Definitions&lt;/a&gt; details the format of new contributions. Contributions should follow the best practices outline on &lt;a href=&quot;https://github.com/flow-typed/flow-typed/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Contributing to the CLI&lt;/h4&gt; 
&lt;p&gt;Bugfixes and improvements to the core CLI are welcome. If you&#39;d like to contribute a new feature, consider opening an issue first to discuss it.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;flow-typed&lt;/code&gt; CLI&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;flow-typed&lt;/code&gt; npm package provides a CLI that includes several commands for working with this repository. The full list of commands is available at &lt;a href=&quot;https://github.com/flow-typed/flow-typed/wiki/CLI-Commands-and-Flags&quot;&gt;CLI Commands &amp;amp; Flags&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;flow-typed install [package-specification] [--ignoreDeps deps]&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Installs libdefs from looking at your package.json.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;package-specification&lt;/code&gt; was specified, only that one libdef will be installed. If the &lt;code&gt;--ignoreDeps&lt;/code&gt; flag was specified, the libdefs for the specified deps will be ignored. i.e: &lt;code&gt;--ignoreDeps dev bundled peer&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;flow-typed install foo@1.2.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;code&gt;flow-typed validate-defs&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Verifies that all files under the &lt;code&gt;/definitions/&lt;/code&gt; directory are structured and named properly. &lt;strong&gt;It does not run tests&lt;/strong&gt;, it only asserts that file and directory names match the expected conventions.&lt;/p&gt; 
&lt;p&gt;This command is run during CI.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;flow-typed run-tests [optional-pattern]&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;For each libdef, find each test and run it with all compatible versions of Flow. If any errors arise that are not &lt;em&gt;&lt;code&gt;// $FlowExpectedError&lt;/code&gt;&lt;/em&gt;, the test has failed.&lt;/p&gt; 
&lt;p&gt;Note that this command assumes that the &lt;code&gt;/definitions/&lt;/code&gt; directory is correctly structured. It should be run &lt;em&gt;after&lt;/em&gt; running &lt;code&gt;flow-typed validate-defs&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;flow-typed update-cache [--debug]&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;By default flow-typed retrieves all available libdefs from its related upstream repository. To make this process more efficient, those libdefs are cached once on your local filesystem. Usually, the cache will automatically be updated after a short grace period during a libdef installation, but sometimes it is useful to do this update manually. Use this command if you want to download the most recent definitions into the cache for yourself.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;flow-typed create-stub package-specification [--typescript]&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Creates &lt;code&gt;any&lt;/code&gt;-typed libdef that you can fill in.&lt;/p&gt; 
&lt;p&gt;If the &lt;code&gt;--typescript&lt;/code&gt; flag was set to &lt;code&gt;true&lt;/code&gt;, TypeScript definition would be converted to flow-typed libdef format if possible. Please report any issues that you have encountered to &lt;a href=&quot;https://github.com/joarwilk/flowgen/issues&quot;&gt;flowgen&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/joarwilk/flowgen&quot;&gt;flowgen&lt;/a&gt; supports most of the TypeScript syntax, however, in some cases manual changes may be needed before use. You can check out supported syntax constructs in flowgen&#39;s &lt;a href=&quot;https://github.com/joarwilk/flowgen#the-state-of-the-converter&quot;&gt;“The state of converter” section&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After you have edited these files, consider &lt;a href=&quot;https://raw.githubusercontent.com/flow-typed/flow-typed/master/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; them back to flow-typed.&lt;/p&gt; 
&lt;h2&gt;Active Maintenance Team&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/andrewsouthpaw&quot;&gt;&lt;img src=&quot;https://github.com/andrewsouthpaw.png?size=100&quot; alt=&quot;Andrew Smith&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gantoine&quot;&gt;&lt;img src=&quot;https://github.com/gantoine.png?size=100&quot; alt=&quot;Georges-Antoine Assi&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/pascalduez&quot;&gt;&lt;img src=&quot;https://github.com/pascalduez.png?size=100&quot; alt=&quot;Pascal Duez&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/villesau&quot;&gt;&lt;img src=&quot;https://github.com/villesau.png?size=100&quot; alt=&quot;Ville Saukkonen&quot;&gt;&lt;/a&gt; :---:|:---:|:---:|:---: &lt;a href=&quot;https://github.com/andrewsouthpaw&quot;&gt;@AndrewSouthpaw&lt;/a&gt; | &lt;a href=&quot;https://github.com/gantoine&quot;&gt;@GAntoine&lt;/a&gt; | &lt;a href=&quot;https://github.com/pascalduez&quot;&gt;@pascalduez&lt;/a&gt; | &lt;a href=&quot;https://github.com/villesau&quot;&gt;@villesau&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>single-spa/single-spa</title>
      <link>https://github.com/single-spa/single-spa</link>
      <description>&lt;p&gt;The router for easy microfrontends&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.org/package/single-spa&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/single-spa.svg?style=flat-square&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/npm/single-spa&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/single-spa/badge&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/single-spa&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/dm/single-spa&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;single-spa&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://join.slack.com/t/single-spa/shared_invite/zt-mafdeybq-0v1aIm3KKaqyVCT2xeny3Q&quot;&gt;Join the chat on Slack&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/single-spa&quot;&gt;Donate to this project&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;A javascript framework for front-end microservices&lt;/h2&gt; 
&lt;p&gt;Build micro frontends that coexist and can (&lt;a href=&quot;https://single-spa.js.org/docs/faq.html#can-i-use-more-than-one-framework&quot;&gt;but don&#39;t need to&lt;/a&gt;) be written with their own framework. This allows you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/single-spa/single-spa/master/docs/single-spa-ecosystem.md#help-for-frameworks&quot;&gt;Use multiple frameworks&lt;/a&gt; on the same page &lt;a href=&quot;https://raw.githubusercontent.com/single-spa/single-spa/master/docs/applications.md&quot;&gt;without refreshing the page&lt;/a&gt; (&lt;a href=&quot;https://github.com/single-spa/single-spa-react&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/single-spa/single-spa-angularjs&quot;&gt;AngularJS&lt;/a&gt;, &lt;a href=&quot;https://github.com/single-spa/single-spa-angular&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://github.com/single-spa/single-spa-ember&quot;&gt;Ember&lt;/a&gt;, or whatever you&#39;re using)&lt;/li&gt; 
 &lt;li&gt;Write new code, possibly with a new framework, without rewriting your existing app&lt;/li&gt; 
 &lt;li&gt;Lazy load code for improved initial load time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the single-spa documentation &lt;a href=&quot;https://single-spa.js.org/&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://single-spa.js.org/docs/getting-started-overview.html&quot;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;h2&gt;Demo and examples&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://single-spa.js.org/docs/examples.html&quot;&gt;examples page&lt;/a&gt; on the website.&lt;/p&gt; 
&lt;h2&gt;Want to help?&lt;/h2&gt; 
&lt;p&gt;Want to file a bug, contribute some code, or improve documentation? Excellent! Read up on our guidelines for &lt;a href=&quot;https://single-spa.js.org/docs/contributing-overview.html&quot;&gt;contributing&lt;/a&gt; on the &lt;a href=&quot;https://single-spa.js.org&quot;&gt;single-spa website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue to evolve single-spa, making it better and easier to use. Development of single-spa, and the &lt;a href=&quot;https://single-spa.js.org/docs/ecosystem.html&quot;&gt;single-spa ecosystem&lt;/a&gt; happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving single-spa.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://single-spa.js.org/docs/code-of-conduct.html&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Single-spa has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&quot;https://single-spa.js.org/docs/code-of-conduct.html&quot;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://single-spa.js.org/docs/contributing-overview.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://single-spa.js.org/docs/contributing-overview.html&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to single-spa.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KhronosGroup/Vulkan-Docs</title>
      <link>https://github.com/KhronosGroup/Vulkan-Docs</link>
      <description>&lt;p&gt;The Vulkan API Specification and related tools&lt;/p&gt;&lt;hr&gt;&lt;p&gt;// Copyright 2017-2021 The Khronos Group Inc. // // SPDX-License-Identifier: CC-BY-4.0&lt;/p&gt; 
&lt;p&gt;ifdef::env-github[] :note-caption: :information_source: endif::[]&lt;/p&gt; 
&lt;p&gt;= Vulkan^(R)^ API Documentation Project&lt;/p&gt; 
&lt;p&gt;This repository contains sources for the formal documentation of the Vulkan API. This includes:&lt;/p&gt; 
&lt;p&gt;[options=&quot;compact&quot;]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The Vulkan API Specification&lt;/li&gt; 
 &lt;li&gt;Specification of Vulkan extensions&lt;/li&gt; 
 &lt;li&gt;API reference (&quot;&lt;code&gt;man&lt;/code&gt;&quot;) pages&lt;/li&gt; 
 &lt;li&gt;The XML API Registry (also mirrored at link:https://github.com/KhronosGroup/Vulkan-Headers[Vulkan-Headers])&lt;/li&gt; 
 &lt;li&gt;Vulkan header files (also mirrored at link:https://github.com/KhronosGroup/Vulkan-Headers[Vulkan-Headers])&lt;/li&gt; 
 &lt;li&gt;Related tools and scripts.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The authoritative public repository is located at link:https://github.com/KhronosGroup/Vulkan-Docs/[Vulkan-Docs]. It hosts a public Issue tracker, and outside developers can file proposed changes (Pull Requests) against the Specification, subject to approval by Khronos.&lt;/p&gt; 
&lt;p&gt;If in doubt where to submit your Issue, consult the link:https://github.com/KhronosGroup/Vulkan-Ecosystem[Vulkan-Ecosystem] repository.&lt;/p&gt; 
&lt;p&gt;== External Contributions&lt;/p&gt; 
&lt;p&gt;Khronos welcomes feedback in Github Issues, and proposed changes in Github Pull Requests (PRs), but will not necessarily accept all such changes.&lt;/p&gt; 
&lt;p&gt;Please keep your issues and pull requests focused on solving a single problem. Broader feedback that tries to solve multiple problems, or touches many parts of the Specification at once, is difficult for the Vulkan Working Group to review in a timely fashion.&lt;/p&gt; 
&lt;p&gt;== Branch Structure&lt;/p&gt; 
&lt;p&gt;The current Specification is maintained in the default branch (currently &lt;code&gt;main&lt;/code&gt;) of the repository. From this branch it is possible to generate Specifications for any published version of Vulkan (1.2, 1.1, and 1.0), and incorporating any desired set of extensions. Each published update is tagged in the form &lt;code&gt;1.2.*release*&lt;/code&gt; where &lt;em&gt;release&lt;/em&gt; is a constantly incrementing release number and &lt;code&gt;1.2&lt;/code&gt; is the latest published version of the API. The last public spec update prior to Vulkan 1.2 is tagged &lt;code&gt;v1.1.130&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The last state of the default branch in Khronos&#39; internal gitlab server, before 1.2 content was merged into it, is tagged &lt;code&gt;1.1-archive&lt;/code&gt; (this tag is not in github).&lt;/p&gt; 
&lt;p&gt;== Directory Structure&lt;/p&gt; 
&lt;p&gt;The directory structure is as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;README.adoc           This file
BUILD.adoc            Documents how to build the specifications and reference pages
CONTRIBUTING.adoc     Requirements for external contributions to the repository
COPYING.adoc          Copyright and licensing information
CODE_OF_CONDUCT.adoc  Code of Conduct
LICENSE.adoc          Summary of licenses used by files in the repository
ChangeLog.txt         Change log summary for each public spec update
Makefile, make*       Makefile and helper build scripts (see BUILD.adoc)
appendices/           Specification appendices
chapters/             Specification chapters
config/               Asciidoctor configuration, CSS, and index generator
images/               Images (figures, diagrams, icons)
gen/out/              Default directory for the generated documents
scripts/              Helper scripts used in specification, header, and reference page generation
style/                Sources for &quot;styleguide&quot; (Vulkan Documentation and Extensions: Procedures and Conventions)
xml/                  XML API Registry (vk.xml)
registry.txt          Sources for documentation of the vk.xml format
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;== Building the Specification and Reference Pages&lt;/p&gt; 
&lt;p&gt;The document sources are marked up in Asciidoctor format, and we use &lt;code&gt;asciidoctor&lt;/code&gt; and related toolchain components to generate output documents. See link:BUILD.adoc[BUILD.adoc] for more information on installing the toolchain and building the Specification.&lt;/p&gt; 
&lt;p&gt;== Generating Headers and Related Files&lt;/p&gt; 
&lt;p&gt;See link:xml/README.adoc[xml/README.adoc].&lt;/p&gt; 
&lt;p&gt;The header files (&lt;code&gt;include/vulkan/vulkan*.h&lt;/code&gt;) and many parts of the specification and reference page documents are generated from descriptions in the XML API Registry (link:xml/vk.xml[&lt;code&gt;xml/vk.xml&lt;/code&gt;]). The generated files are not checked into the repository. If you change &lt;code&gt;vk.xml&lt;/code&gt;, you can regenerate the headers by going into &lt;code&gt;xml/&lt;/code&gt; and running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ make clean install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The other generated files are built as required via dependencies in the top-level &lt;code&gt;Makefile&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jaredpalmer/razzle</title>
      <link>https://github.com/jaredpalmer/razzle</link>
      <description>&lt;p&gt;✨ Create server-rendered universal JavaScript applications with no configuration&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/4060187/28923990-050a32d4-782e-11e7-9da7-574ce5a8b455.png&quot; alt=&quot;repo-banner&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://badge.fury.io/js/razzle&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/razzle.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/razzle&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/razzle&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/jaredpalmer/razzle/workflows/Node%20CI/badge.svg&quot; alt=&quot;Node CI&quot;&gt; &lt;a href=&quot;https://snyk.io/test/github/jaredpalmer/razzle?targetFile=package.json&quot;&gt;&lt;img src=&quot;https://snyk.io/test/github/jaredpalmer/razzle/badge.svg?targetFile=package.json&quot; alt=&quot;Known Vulnerabilities&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://david-dm.org/jaredpalmer/razzle.svg?path=packages/razzle&quot; alt=&quot;Razzle-status&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jaredpalmer/razzle/master/LICENSE&quot;&gt;&lt;img src=&quot;https://badgen.now.sh/badge/license/MIT&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.com/invite/RevdZTYMzr&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/769256827007139912?label=%F0%9F%92%AC%20%20join%20us%20on%20discord&amp;amp;style=plastic&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Universal JavaScript applications are tough to setup. Either you buy into a framework like &lt;a href=&quot;https://github.com/zeit/next.js&quot;&gt;Next.js&lt;/a&gt; or &lt;a href=&quot;https://github.com/redfin/react-server&quot;&gt;react-server&lt;/a&gt;, fork a boilerplate, or set things up yourself. Aiming to fill this void, Razzle is a tool that abstracts all complex configuration needed for SSR into a single dependency--giving you the awesome developer experience of &lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot;&gt;create-react-app&lt;/a&gt;, but then leaving the rest of your app&#39;s architectural decisions about frameworks, routing, and data fetching up to you. With this approach, Razzle not only works with React, but also Reason, Elm, Vue, Angular, and most importantly......whatever comes next.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit 
 &lt;!-- raw HTML omitted --&gt;https://razzlejs.org/getting-started
 &lt;!-- raw HTML omitted --&gt; to get started with Razzle.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit 
 &lt;!-- raw HTML omitted --&gt;https://razzlejs.org/
 &lt;!-- raw HTML omitted --&gt; to view the documentation.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/jaredpalmer/razzle/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;If you get stuck, check out Razzle&#39;s &lt;a href=&quot;https://github.com/jaredpalmer/razzle/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;. In addition, #razzle-afterjs on the &lt;a href=&quot;https://discord.gg/pJSg287&quot;&gt;Formium Community Discord Server&lt;/a&gt; is a great way to get help quickly too.&lt;/p&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jaredpalmer/backpack&quot;&gt;jaredpalmer/backpack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nytimes/kyt&quot;&gt;nytimes/kyt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot;&gt;facebookincubator/create-react-app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humblespark/sambell&quot;&gt;humblespark/sambell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zeit/next.js&quot;&gt;zeit/next.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Author&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/jaredpalmer&quot;&gt;Jared Palmer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://github.com/kentcdodds/all-contributors#emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Jared Palmer&lt;/strong&gt; - &lt;a href=&quot;http://jaredpalmer.com&quot;&gt;@jaredpalmer&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; question, code, design, doc, example, ideas, review, test, tool&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nima Arefi&lt;/strong&gt; - &lt;a href=&quot;https://github.com/Nimaa77&quot;&gt;@Nimaa77&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; question, code, doc, example, ideas, review, test, tool&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Øyvind Saltvik&lt;/strong&gt; - &lt;a href=&quot;https://github.com/fivethreeo/&quot;&gt;@fivethreeo&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; question, code, example, ideas, review, test, tool&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jari Zwarts&lt;/strong&gt; - &lt;a href=&quot;https://jari.io&quot;&gt;@jariz&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; question, code, ideas, plugin, review&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dan Abramov&lt;/strong&gt; - &lt;a href=&quot;http://twitter.com/dan_abramov&quot;&gt;@gaearon&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; code, ideas&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Eric Clemmons&lt;/strong&gt; - &lt;a href=&quot;http://ericclemmons.github.com/&quot;&gt;@ericclemmons&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; code, ideas&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zino Hofmann&lt;/strong&gt; - &lt;a href=&quot;https://www.linkedin.com/in/zinohofmann/&quot;&gt;@HofmannZ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; example&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lucas Terra&lt;/strong&gt; - &lt;a href=&quot;https://www.linkedin.com/in/lucasterra7/&quot;&gt;@lucasterra&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; code, example, plugin&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ray Andrew&lt;/strong&gt; - &lt;a href=&quot;https://www.linkedin.com/in/ray-andrew/&quot;&gt;@rayandrews&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Contributions:&lt;/strong&gt; code, example, plugin&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/kentcdodds/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;MIT License&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ajaxorg/ace-builds</title>
      <link>https://github.com/ajaxorg/ace-builds</link>
      <description>&lt;p&gt;Packaged version of Ace code editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ace (Ajax.org Cloud9 Editor)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://cdnjs.com/libraries/ace&quot;&gt;&lt;img src=&quot;https://img.shields.io/cdnjs/v/ace.svg&quot; alt=&quot;CDNJS&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/ace-builds&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/ace-builds.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Ace is a code editor written in JavaScript.&lt;/p&gt; 
&lt;p&gt;This repository has only generated files. If you want to work on ace please go to https://github.com/ajaxorg/ace instead.&lt;/p&gt; 
&lt;p&gt;here you can find pre-built files for convenience of embedding. it contains 4 versions&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ajaxorg/ace-builds/tree/master/src&quot;&gt;src&lt;/a&gt; concatenated but not minified&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ajaxorg/ace-builds/tree/master/src-min&quot;&gt;src-min&lt;/a&gt; concatenated and minified with uglify.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ajaxorg/ace-builds/tree/master/src-noconflict&quot;&gt;src-noconflict&lt;/a&gt; uses ace.require instead of require&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ajaxorg/ace-builds/tree/master/src-min-noconflict&quot;&gt;src-min-noconflict&lt;/a&gt; concatenated, minified with uglify.js, and uses ace.require instead of require&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a simple way of embedding ace into webpage see &lt;a href=&quot;https://github.com/ajaxorg/ace-builds/blob/master/editor.html&quot;&gt;editor.html&lt;/a&gt; or list of other &lt;a href=&quot;https://github.com/ajaxorg/ace-builds/tree/master/demo&quot;&gt;simple examples&lt;/a&gt; To see ace in action go to &lt;a href=&quot;http://ajaxorg.github.com/ace-builds/kitchen-sink.html&quot;&gt;kitchen-sink-demo&lt;/a&gt;, &lt;a href=&quot;http://ajaxorg.github.com/ace-builds/demo/scrollable-page.html&quot;&gt;scrollable-page-demo&lt;/a&gt; or &lt;a href=&quot;http://ajaxorg.github.com/ace-builds/editor.html&quot;&gt;minimal demo&lt;/a&gt;,&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>woocommerce/FlexSlider</title>
      <link>https://github.com/woocommerce/FlexSlider</link>
      <description>&lt;p&gt;An awesome, fully responsive jQuery slider plugin&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://gitter.im/woothemes/FlexSlider&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/woothemes/FlexSlider.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;FlexSlider 2.7.2&lt;/h1&gt; 
&lt;p&gt;http://www.woocommerce.com/flexslider/ - Copyright (c) 2015 WooThemes&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; branch of this repository is always the latest development version of FlexSlider. Please view the &lt;a href=&quot;https://github.com/woocommerce/FlexSlider/releases&quot;&gt;Releases&lt;/a&gt; section for a list of official FlexSlider builds.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We encourage contributions to FlexSlider and will review all pull requests submitted.&lt;/p&gt; 
&lt;p&gt;Before contributing, please see our &lt;a href=&quot;https://github.com/woocommerce/FlexSlider/blob/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Roadmap&lt;/h3&gt; 
&lt;p&gt;To keep up to date with how FlexSlider&#39;s development roadmap looks, please see our &lt;a href=&quot;https://github.com/woocommerce/FlexSlider/wiki/Roadmap&quot;&gt;development roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;p&gt;** Version 2.7.2 **&lt;/p&gt; 
&lt;p&gt;** Refactor jQuery HTML output for img attributes.&lt;/p&gt; 
&lt;p&gt;** Version 2.7.1 **&lt;/p&gt; 
&lt;p&gt;** RTL fixes for Firefox browser.&lt;/p&gt; 
&lt;p&gt;** Version 2.7.0 **&lt;/p&gt; 
&lt;p&gt;** Fixes resize method call for orientationchange. Adds RTL feature - param &quot;rtl&quot; added. **&lt;/p&gt; 
&lt;p&gt;** Version 2.6.3 **&lt;/p&gt; 
&lt;p&gt;** Rollback fade fixes, due to harsh fade reports. **&lt;/p&gt; 
&lt;p&gt;** Version 2.6.2 **&lt;/p&gt; 
&lt;p&gt;** Minor update to fix issues with varying heights and overflow onto content below the slider. Fixes the visibility of the pagination and the navigation in the &quot;fade&quot; mode. **&lt;/p&gt; 
&lt;p&gt;** Version 2.6.1 **&lt;/p&gt; 
&lt;p&gt;** SmoothHeight now uses innerHeight() instead of height() to account for padding in calculation. Defining var altText to prevent error. bower.json add fonts folder on main field. Changed true to false in order to make sure whether or not to allow a slider comprised of a single slide. **&lt;/p&gt; 
&lt;p&gt;** Version 2.6.0 **&lt;/p&gt; 
&lt;p&gt;** Adds composer json file, scope fix for focused keyword, fixes bower demo folder exclusion, z-index fix for disabled nav arrow, play/pause accessibility fix, itemMargin fix for slider items, fixes accessibility for in focus elements and pagination controls, firefox fix for text selection on slider carousel, adds data-thumb-alt image alt attribute. **&lt;/p&gt; 
&lt;p&gt;** Version 2.5.0 **&lt;/p&gt; 
&lt;p&gt;** Bumped compatibility support starting with jQuery 1.7+. pausePlay icon fix. Firefox touch event fix. Adds customDirectionNav param. **&lt;/p&gt; 
&lt;p&gt;** Version 2.4.0 **&lt;/p&gt; 
&lt;p&gt;** Update for improved standards. Adds classes to li nav elements. Reset for li elements in stylesheet. **&lt;/p&gt; 
&lt;p&gt;** Version 2.3.0 **&lt;/p&gt; 
&lt;p&gt;** Fixes pauseInvisible attribute issue with Chrome and the Page Visibility API. **&lt;/p&gt; 
&lt;p&gt;** Version 2.2.2 **&lt;/p&gt; 
&lt;p&gt;** Fixes minified JavaScript file to remove merge conflicts. **&lt;/p&gt; 
&lt;p&gt;** Version 2.2.0 **&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed event handler conflicts with devices that are both click and touch enabled. e.g., Windows 8.&lt;/li&gt; 
 &lt;li&gt;Made all slider variables public, stored in &lt;code&gt;slider.vars&lt;/code&gt;. This allows manipulation of &lt;code&gt;slider.vars.minItems&lt;/code&gt; and &lt;code&gt;slider.vars.maxItems&lt;/code&gt; on the fly to create different fluid grids at certain breakpoints. &lt;a href=&quot;http://flexslider.woothemes.com/dynamic-carousel-min-max.html&quot;&gt;Check out this example demonstrating a basic technique&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fixed calculations that were causing strange issues with paging and certain FlexSliders to move out of alignment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Be sure to test v2.2.0 with your current slider, before pushing live, to ensure everything is playing nicely.&lt;/em&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;General Notes&lt;/h2&gt; 
&lt;p&gt;FlexSlider is no longer licensed under the MIT license. FlexSlider now uses the license, GPLv2 and later.&lt;/p&gt; 
&lt;p&gt;In an effort to move the plugin forward, support for jQuery 1.4.2 has been dropped. The plugin now requires jQuery 1.7.0+. If you don&#39;t have access to the later versions of jQuery, &lt;a href=&quot;https://github.com/woocommerce/FlexSlider/tree/flexslider1&quot;&gt;FlexSlider 1.8&lt;/a&gt; should be a perfectly suitable substitute for your needs!&lt;/p&gt; 
&lt;p&gt;Your old styles and properties &lt;em&gt;might not work out of the box&lt;/em&gt;. Some property names have been changed, noted below, as well as namespacing prefixes being applied to all elements. This means that &lt;code&gt;.flex-direction-nav .next&lt;/code&gt; is now &lt;code&gt;.flex-direction-nav .flex-next&lt;/code&gt; by default. The namespacing property is exposed, free for you to change.&lt;/p&gt; 
&lt;p&gt;No more overflow hidden woes! The plugin now generates a viewport element to handle the tedious task of working around overflow hidden. Yay!&lt;/p&gt; 
&lt;p&gt;The slider element is now accessible outside of the callback API via the jQuery .data() method. Example use: &lt;code&gt;$(&#39;#slider&#39;).data(&#39;flexslider&#39;)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Helper strings have been added for performing actions quickly on FlexSlider elements. Example uses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;$(&#39;#slider&#39;).flexslider(&quot;play&quot;) //Play slideshow&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$(&#39;#slider&#39;).flexslider(&quot;pause&quot;) //Pause slideshow&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$(&#39;#slider&#39;).flexslider(&quot;stop&quot;) //Stop slideshow&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$(&#39;#slider&#39;).flexslider(&quot;next&quot;) //Go to next slide&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$(&#39;#slider&#39;).flexslider(&quot;prev&quot;) //Go to previous slide&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$(&#39;#slider&#39;).flexslider(3) //Go fourth slide&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Two new methods are available for adding/removing slides, &lt;code&gt;slider.addSlide()&lt;/code&gt; and &lt;code&gt;slider.removeSlide()&lt;/code&gt;. More details about this coming soon.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;slider.addSlide(obj, pos)&lt;/code&gt; accepts two parameters, a string/jQuery object and an index.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;slider.removeSlide(obj)&lt;/code&gt; accepts one parameter, either an object to be removed, or an index.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/&quot;&gt;Basic Slider&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/basic-slider-with-custom-direction-nav.html&quot;&gt;Basic Slider customDirectionNav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/basic-slider-with-caption.html&quot;&gt;Basic Slider with Simple Caption&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/thumbnail-controlnav.html&quot;&gt;Slider w/thumbnail controlNav pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/thumbnail-slider.html&quot;&gt;Slider w/thumbnail slider&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/basic-carousel.html&quot;&gt;Basic Carousel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/carousel-min-max.html&quot;&gt;Carousel with min and max ranges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/dynamic-carousel-min-max.html&quot;&gt;Carousel with min and max ranges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/video.html&quot;&gt;Video with Vimeo API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/video-wistia.html&quot;&gt;Video with Wistia API&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RTL Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/index-rtl.html&quot;&gt;Basic Slider&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/asnavfor-rtl.html&quot;&gt;Slider with Simple Caption w/thumbnail slider&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://flexslider.woothemes.com/basic-carousel-rtl.html&quot;&gt;Basic Slider with Simple Caption&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;h3&gt;namespace: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;namespace&lt;/code&gt; controls the prefixes attached to elements created by the plugin. In previous releases, only certain elements were tagged with a prefix class, which was causing class generalization issues for some users. FlexSlider now prefixes all generated elements with the appropriate namespace.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Hint: &lt;code&gt;namespace&lt;/code&gt; can be an empty string.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;selector: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;The markup structure for FlexSlider has been limited to a &quot;ul.slide li&quot; pattern in previous versions of FlexSlider; no longer. You can now take full control of the markup structure used for your FlexSlider. The &lt;code&gt;selector&lt;/code&gt; pattern &quot;{container} &amp;gt; {slide}&quot; is mandatory, allowing the plugin to predictably interpret the selector property. Omitting the &quot;&amp;gt;&quot; from the selector is not suggested, but is possible if your markup doesn&#39;t follow the immediate descendant pattern.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Examples: &quot;section &amp;gt; article&quot;, &quot;.slides &amp;gt; .slide&quot;, &quot;#hero .slide&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;easing: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;easing&lt;/code&gt; allows support for jQuery easing! Default options provided by jQuery are &quot;swing&quot; and &quot;linear,&quot; but more can be used by included the jQuery Easing plugin. &lt;em&gt;If you chose a non-existent easing method, the slider will break.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: You need to set &lt;code&gt;useCSS: false&lt;/code&gt; to force transitions in browsers that support translate3d.&lt;/em&gt; &lt;em&gt;Optional: &lt;a href=&quot;http://gsgd.co.uk/sandbox/jquery/easing/&quot;&gt;jQuery Easing Plugin&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;direction: &lt;em&gt;{changed}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Previously called &quot;slideDirection&quot; in v1.8 and below.&lt;/p&gt; 
&lt;h3&gt;reverse: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;reverse&lt;/code&gt; will reverse the animation direction of the slider. Meaning, horizontal sliders can move from right to left, and vertical sliders can move bottom to top.&lt;/p&gt; 
&lt;h3&gt;smoothHeight: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;smoothHeight&lt;/code&gt; allows for smooth height transitions between slides. This property currently works for the fade and horizontal slide animation. The property has no effect on horizontal sliding carousels, however.&lt;/p&gt; 
&lt;h3&gt;startAt: &lt;em&gt;{changed}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Previously called &quot;slideToStart&quot; in v1.8 and below.&lt;/p&gt; 
&lt;h3&gt;animationSpeed: &lt;em&gt;{changed}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Previously called &quot;animationDuration&quot; in v1.8 and below.&lt;/p&gt; 
&lt;h3&gt;initDelay: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;initDelay&lt;/code&gt; will delay the initial slideshow of a slider, given in milliseconds. The slider will still initialize, generating controls and displaying the first image, but the slideshow will wait until the &lt;code&gt;initDelay&lt;/code&gt; time has completed before starting the slideshow.&lt;/p&gt; 
&lt;h3&gt;useCSS: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;useCSS&lt;/code&gt; allow users to override using CSS3 for animation. Translate3d still has numerous bugs that can crop up and wreak havoc, so this is a great property to play with if you are experiencing unexplainable issues in Webkit browsers.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Hint: Use conditionals to enable/disable the use of CSS3 on desktops and mobile devices. Mobile devices, in my experience, do not share many of the translate3d bugs seen on desktop browsers.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;touch: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;touch&lt;/code&gt; allows users to exclude touch swipe functionality from their sliders.&lt;/p&gt; 
&lt;h3&gt;keyboard: &lt;em&gt;{changed}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Previously called &quot;keyboardNav&quot; in v1.8 and below.&lt;/p&gt; 
&lt;h3&gt;multipleKeyboard &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;multipleKeyboard&lt;/code&gt; allows users to override the default plugin keyboard behavior, enabling keyboard control of more than one slider on the page. This means that all visible sliders will animate, at the same time, via keyboard input.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Hint: You can use &lt;code&gt;multipleKeyboard&lt;/code&gt; to allow keyboard navigation on pages where multiple sliders are present, but only one is visible.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;mousewheel: &lt;em&gt;{updated}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;mousewheel&lt;/code&gt; now requires the jQuery Mousewheel plugin. There are a few reasons for this, but primarily because there is no need for FlexSlider itself to reinvent the awkward complexity of mousewheel interactivity that is handled perfectly by the Mousewheel plugin.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Required: &lt;a href=&quot;https://github.com/brandonaaron/jquery-mousewheel&quot;&gt;jQuery Mousewheel Plugin&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;controlsContainer: &lt;em&gt;{updated}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;controlsContainer&lt;/code&gt; is one of the more painstaking, potentially confusing properties within FlexSlider. First, the property is no longer required to workaround &lt;code&gt;overflow: hidden&lt;/code&gt; on slide animation. Second, the property now accepts a &lt;strong&gt;jQuery object&lt;/strong&gt;, giving you precise control over the object you want. The plugin no longer attempts to guess what element you are selecting.&lt;/p&gt; 
&lt;h3&gt;customDirectionNav: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;customDirectionNav&lt;/code&gt; allows the ability to add custom directional navigation elements. Can be used in conjunction with controlsContainer for pagination controls container.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://flexslider.woothemes.com/basic-slider-with-custom-direction-nav.html&quot;&gt;Example of customDirectionNav being used&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;sync: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;sync&lt;/code&gt; is a new property that will allow other slider(s) to hook into the current slider via a given selector. The selector should describe an object that has already been initialized as a FlexSlider. Right now, &lt;code&gt;sync&lt;/code&gt; will synchronize animation, play, and pause behaviors. More behaviors can be added in the future as the property matures.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://flex.madebymufffin.com/examples/basic-carousel.html&quot;&gt;Example of sync being used&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;asNavFor: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Description to be added.&lt;/p&gt; 
&lt;h3&gt;itemWidth: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;itemWidth&lt;/code&gt; is the primary property for the new carousel options. Without this property, your slider is not considered a carousel. To use &lt;code&gt;itemWidth&lt;/code&gt;, give an integer value of the width of your individual slides. This should include borders and paddings applied to your slides; a total width measurement.&lt;/p&gt; 
&lt;h3&gt;itemMargin: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;itemMargin&lt;/code&gt; describes the gutter between the slide elements. If each slide has a margin-left of 10px, your itemMargin value would be 10. If elements have margin: 0 10px, your itemMargin would be 20.&lt;/p&gt; 
&lt;h3&gt;minItems: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;minItems&lt;/code&gt; describes the minimum number of slide elements that should be visible in the carousel. When the slider reaches the minimum item count, the slides will resize fluidly with the slider.&lt;/p&gt; 
&lt;h3&gt;maxItems: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;maxItems&lt;/code&gt; describes the maximum number of slide elements that should be visible in the carousel. When the slider reaches the maximum item count, the slides will resize fluidly with the sider.&lt;/p&gt; 
&lt;h3&gt;move: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;move&lt;/code&gt; determines how many slides should be animated within the carousel. When left at 0, the slider will animate the number of visible slides. If any value greater than 0 is given, the slider will animate that number of slides in the carousel on each animation interval.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Hint: The move property will be ignored if the value is higher than the number of visible slides, which can be utilized in responsive design.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;added: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;added()&lt;/code&gt; is a new callback event fired in the new slider.addSlide() function.&lt;/p&gt; 
&lt;h3&gt;removed: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;removed()&lt;/code&gt; is a new callback event fired in the new slider.removeSlide() function.&lt;/p&gt; 
&lt;h3&gt;allowOneSlide: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Boolean. Whether or not you&#39;d like FlexSlider to initialize as usual if only one slide is present.&lt;/p&gt; 
&lt;h3&gt;rtl: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Boolean. False by default. Supports RTL functionality in the slider. &lt;em&gt;Note: you must add &lt;code&gt;style=&quot;direction:rtl&quot;&lt;/code&gt; to your container div in order for this to work.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;isFirefox: &lt;em&gt;{new}&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;Boolean. False by default. Set to true if the Firefox browser is in use. &lt;em&gt;Note: used for RTL compatibility logic.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>software-mansion/react-native-reanimated</title>
      <link>https://github.com/software-mansion/react-native-reanimated</link>
      <description>&lt;p&gt;React Native&#39;s Animated library reimplemented&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;Reanimated 2 is here! Check out our &lt;a href=&quot;https://docs.swmansion.com/react-native-reanimated/&quot;&gt;documentation page&lt;/a&gt; for more information&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;React Native Reanimated provides a more comprehensive, low level abstraction for the Animated library API to be built on top of and hence allow for much greater flexibility especially when it comes to gesture based interactions.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://docs.swmansion.com/react-native-reanimated/docs/installation&quot;&gt;installation&lt;/a&gt; section of our docs for the detailed installation instructions.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out our dedicated documentation page for info about this library, API reference and more: &lt;a href=&quot;https://docs.swmansion.com/react-native-reanimated/docs/&quot;&gt;https://docs.swmansion.com/react-native-reanimated/docs/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;The source code for the example (showcase) app is under the &lt;a href=&quot;https://github.com/software-mansion/react-native-reanimated/blob/master/Example/&quot;&gt;&lt;code&gt;Example/&lt;/code&gt;&lt;/a&gt; directory. If you want to play with the API but don&#39;t feel like trying it on a real app, you can run the example project. Check Example/ directory README for installation instructions.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Reanimated library is licensed under &lt;a href=&quot;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/master/LICENSE&quot;&gt;The MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;This project has been build and is maintained thanks to the support from &lt;a href=&quot;https://shopify.com&quot;&gt;Shopify&lt;/a&gt;, &lt;a href=&quot;https://expo.io&quot;&gt;Expo.io&lt;/a&gt; and &lt;a href=&quot;https://swmansion.com&quot;&gt;Software Mansion&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://shopify.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/8085?v=3&amp;amp;s=100&quot; alt=&quot;shopify&quot; title=&quot;Shopify.com&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://expo.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12504344?v=3&amp;amp;s=100&quot; alt=&quot;expo&quot; title=&quot;Expo.io&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://swmansion.com&quot;&gt;&lt;img src=&quot;https://logo.swmansion.com/logo?color=white&amp;amp;variant=desktop&amp;amp;width=150&amp;amp;tag=react-native-reanimated-github&quot; alt=&quot;swm&quot; title=&quot;Software Mansion&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mengshukeji/Luckysheet</title>
      <link>https://github.com/mengshukeji/Luckysheet</link>
      <description>&lt;p&gt;Luckysheet is an online spreadsheet like excel that is powerful, simple to configure, and completely open source.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mengshukeji/Luckysheet/master/docs/.vuepress/public/img/logo_text.png&quot; alt=&quot;logo&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/mengshukeji/Luckysheet?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/mengshukeji/Luckysheet.svg&quot; alt=&quot;Join the chat at https://gitter.im/mengshukeji/Luckysheet&quot;&gt;&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;English| &lt;a href=&quot;https://raw.githubusercontent.com/mengshukeji/Luckysheet/master/README-zh.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;🚀Luckysheet is an online spreadsheet like excel that is powerful, simple to configure, and completely open source.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;p&gt;| Source Code | Documentation | Demo | Plugins Demo | Forum | | ------ | -------- | ------ | ------ | ------ | | &lt;a href=&quot;https://github.com/mengshukeji/Luckysheet&quot;&gt;Github&lt;/a&gt;| &lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDocs/&quot;&gt;Online Documentation&lt;/a&gt; | &lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDemo&quot;&gt;Online Demo&lt;/a&gt; / &lt;a href=&quot;http://luckysheet.lashuju.com/demo/&quot;&gt;Cooperative editing demo&lt;/a&gt; | &lt;a href=&quot;https://mengshukeji.github.io/LuckyexcelDemo/&quot;&gt;Import Excel Demo&lt;/a&gt; | &lt;a href=&quot;https://support.qq.com/product/288322&quot;&gt;Chinese Forum&lt;/a&gt; | | &lt;a href=&quot;https://gitee.com/mengshukeji/Luckysheet&quot;&gt;Gitee Mirror&lt;/a&gt;| &lt;a href=&quot;https://mengshukeji.gitee.io/LuckysheetDocs/&quot;&gt;Gitee Online Documentation&lt;/a&gt; | &lt;a href=&quot;https://mengshukeji.gitee.io/luckysheetdemo/&quot;&gt;Gitee Online Demo&lt;/a&gt; | &lt;a href=&quot;https://mengshukeji.gitee.io/luckyexceldemo/&quot;&gt;Gitee Import Excel Demo&lt;/a&gt; | &lt;a href=&quot;https://groups.google.com/g/luckysheet&quot;&gt;Google Group&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mengshukeji/Luckysheet/master/docs/.vuepress/public/img/LuckysheetDemo.gif&quot; alt=&quot;Demo&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mengshukeji/Luckyexcel&quot;&gt;Luckyexcel&lt;/a&gt;: Excel import and export library&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mengshukeji/chartMix&quot;&gt;chartMix&lt;/a&gt;: Chart plugin&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;| Project | Description | |---------|-------------| | &lt;a href=&quot;https://github.com/mengshukeji/luckysheet-vue&quot;&gt;Luckysheet Vue&lt;/a&gt; | Luckysheet and Luckyexcel in a vue cli3 project | | &lt;a href=&quot;https://github.com/mengshukeji/luckysheet-react&quot;&gt;Luckysheet React&lt;/a&gt; | Luckysheet in a React project | | &lt;a href=&quot;https://github.com/mengshukeji/Luckyexcel-node&quot;&gt;Luckyexcel Node&lt;/a&gt; | Use Luckyexcel in koa2 | | &lt;a href=&quot;https://github.com/mengshukeji/LuckysheetServer&quot;&gt;Luckysheet Server&lt;/a&gt; | Java backend Luckysheet Server | | &lt;a href=&quot;https://github.com/mengshukeji/LuckysheetServerStarter&quot;&gt;Luckysheet Server Starter&lt;/a&gt; | LuckysheetServer docker deployment startup template |&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Formatting&lt;/strong&gt;: style, conditional formatting, text alignment and rotation, text truncation, overflow, automatic line wrapping, multiple data types, cell segmentation style&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cells&lt;/strong&gt;: drag and drop, fill handle, multiple selection, find and replace, location, merge cells, data verification&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Row &amp;amp; column&lt;/strong&gt;: hide, insert, delete rows or columns, freeze, and split text&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Operation&lt;/strong&gt;: undo, redo, copy, paste, cut, hot key, format painter, drag and drop selection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Formulas &amp;amp; Functions&lt;/strong&gt;: Built-in, remote and custom formulas&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tables&lt;/strong&gt;: filter, sort&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced functions&lt;/strong&gt;: Pivot tables, charts, comments, cooperative editing, insert picture, matrix calculations, screenshots, copying to other formats, EXCEL import and export, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a more detailed feature list, please refer to: &lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDocs/guide/#features&quot;&gt;Features&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📖 Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Priority reading for new users: &lt;a href=&quot;https://github.com/mengshukeji/Luckysheet/wiki/User-Guide&quot;&gt;User Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;For the tutorials, learning materials and supporting solutions provided by the community, please refer to: &lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDocs/guide/resource.html&quot;&gt;Tutorials and Resources&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📜 Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&quot;https://raw.githubusercontent.com/mengshukeji/Luckysheet/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;❗️ Issues&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDocs/guide/contribute.html#how-to-submit-issues&quot;&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; 
&lt;h2&gt;✅ TODO&lt;/h2&gt; 
&lt;p&gt;Managed with &lt;a href=&quot;https://github.com/mengshukeji/Luckysheet/projects/1&quot;&gt;GitHub Projects&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💪Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the&lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDocs/guide/contribute.html&quot;&gt; Contributing Guide&lt;/a&gt; before making a pull request.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;First step&lt;/h3&gt; 
&lt;p&gt;Introduce dependencies through CDN&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&#39;stylesheet&#39; href=&#39;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/plugins/css/pluginsCss.css&#39; /&amp;gt;
&amp;lt;link rel=&#39;stylesheet&#39; href=&#39;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/plugins/plugins.css&#39; /&amp;gt;
&amp;lt;link rel=&#39;stylesheet&#39; href=&#39;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/css/luckysheet.css&#39; /&amp;gt;
&amp;lt;link rel=&#39;stylesheet&#39; href=&#39;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/assets/iconfont/iconfont.css&#39; /&amp;gt;
&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/plugins/js/plugin.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/luckysheet@latest/dist/luckysheet.umd.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Second step&lt;/h3&gt; 
&lt;p&gt;Specify a table container&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&quot;luckysheet&quot; style=&quot;margin:0px;padding:0px;position:absolute;width:100%;height:100%;left: 0px;top: 0px;&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Third step&lt;/h3&gt; 
&lt;p&gt;Create a table&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    $(function () {
        //Configuration item
        var options = {
            container: &#39;luckysheet&#39; //luckysheet is the container id
        }
        luckysheet.create(options)
    })
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; Version &amp;gt;= 6&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm install
npm install gulp -g
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Package&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Partner project&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ly525/luban-h5&quot;&gt;luban-h5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/360EntSecGroup-Skylar/excelize&quot;&gt;excelize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MrXujiang/h5-Dooring&quot;&gt;h5-Dooring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/monksoul/Furion&quot;&gt;Furion&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mengshukeji/Luckysheet/discussions&quot;&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/mengshukeji/Luckysheet&quot;&gt;Gitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mengshukeji/Luckysheet/master/README-zh.md&quot;&gt;Chinese community&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;Luckysheet is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDocs/about/sponsor.html#sponsors-list&quot;&gt;backers&lt;/a&gt;. If you&#39;d like to join them, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/mengshukeji&quot;&gt;Become a backer or sponsor on Patreon&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/luckysheet&quot;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;One-time donation via PayPal, WeChat or Alipay&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;| PayPal | WeChat | Alipay | |---|---|---| | &lt;a href=&quot;https://www.paypal.me/wbfsa&quot;&gt;Paypal Me&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;| 
 &lt;!-- raw HTML omitted --&gt; |&lt;/p&gt; 
&lt;h3&gt;What&#39;s the difference between Patreon and OpenCollective?&lt;/h3&gt; 
&lt;p&gt;Funds donated via Patreon go directly to support mengshukeji&#39;s work on Luckysheet. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.&lt;/p&gt; 
&lt;h2&gt;Sponsors List&lt;/h2&gt; 
&lt;p&gt;(Sort by time)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;*勇 ¥ 30&lt;/li&gt; 
 &lt;li&gt;虚我 ¥ 200&lt;/li&gt; 
 &lt;li&gt;甜党 ¥ 50&lt;/li&gt; 
 &lt;li&gt;Alphabet(Google)-gcf ¥ 1&lt;/li&gt; 
 &lt;li&gt;**平 ¥ 100&lt;/li&gt; 
 &lt;li&gt;**东 ¥ 10&lt;/li&gt; 
 &lt;li&gt;debugger ¥ 20&lt;/li&gt; 
 &lt;li&gt;烦了烦 ¥ 10&lt;/li&gt; 
 &lt;li&gt;文顶顶 ¥ 200&lt;/li&gt; 
 &lt;li&gt;yangxshn ¥ 10&lt;/li&gt; 
 &lt;li&gt;爱乐 ¥ 100&lt;/li&gt; 
 &lt;li&gt;小李飞刀刀 ¥ 66&lt;/li&gt; 
 &lt;li&gt;张铭 ¥ 200&lt;/li&gt; 
 &lt;li&gt;曹治军 ¥ 1&lt;/li&gt; 
 &lt;li&gt;*特 ¥ 10&lt;/li&gt; 
 &lt;li&gt;**权 ¥ 9.9&lt;/li&gt; 
 &lt;li&gt;**sdmq ¥ 20&lt;/li&gt; 
 &lt;li&gt;*旭 ¥ 10&lt;/li&gt; 
 &lt;li&gt;Quentin ¥ 20&lt;/li&gt; 
 &lt;li&gt;周宇凡 ¥ 100&lt;/li&gt; 
 &lt;li&gt;*超 ¥ 10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Authors and acknowledgment&lt;/h2&gt; 
&lt;h3&gt;Active Core Team Members&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wbfsa&quot;&gt;@wbfsa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iamxuchen800117&quot;&gt;@iamxuchen800117&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wpxp123456&quot;&gt;@wpxp123456&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tonytonychopper123&quot;&gt;@tonytonychopper123&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Dushusir&quot;&gt;@Dushusir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weibo.com/u/3884623955&quot;&gt;@c19c19i&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zhangchen915&quot;&gt;@zhangchen915&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jerry-f&quot;&gt;@jerry-f&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/flowerField&quot;&gt;@flowerField&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community Partners&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielcai1987&quot;&gt;@danielcai1987&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qq6690876&quot;&gt;@qq6690876&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/javahuang&quot;&gt;@javahuang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimerGang&quot;&gt;@TimerGang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gsw945&quot;&gt;@gsw945&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swen-xiong&quot;&gt;@swen-xiong&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lzmch&quot;&gt;@lzmch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kdevilpf&quot;&gt;@kdevilpf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WJWM0316&quot;&gt;@WJWM0316&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2020-present, mengshukeji&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vakata/jstree</title>
      <link>https://github.com/vakata/jstree</link>
      <description>&lt;p&gt;jquery tree plugin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jstree&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.jstree.com/&quot;&gt;jsTree&lt;/a&gt; is jquery plugin, that provides interactive trees. It is absolutely free, &lt;a href=&quot;https://github.com/vakata/jstree&quot;&gt;open source&lt;/a&gt; and distributed under the MIT license.&lt;/p&gt; 
&lt;p&gt;jsTree is easily extendable, themable and configurable, it supports HTML &amp;amp; JSON data sources, AJAX &amp;amp; async callback loading.&lt;/p&gt; 
&lt;p&gt;jsTree functions properly in either box-model (content-box or border-box), can be loaded as an AMD module, and has a built in mobile theme for responsive design, that can easily be customized. It uses jQuery&#39;s event system, so binding callbacks on various events in the tree is familiar and easy.&lt;/p&gt; 
&lt;p&gt;You also get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;drag &amp;amp; drop support&lt;/li&gt; 
 &lt;li&gt;keyboard navigation&lt;/li&gt; 
 &lt;li&gt;inline edit, create and delete&lt;/li&gt; 
 &lt;li&gt;tri-state checkboxes&lt;/li&gt; 
 &lt;li&gt;fuzzy searching&lt;/li&gt; 
 &lt;li&gt;customizable node types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;For more information, examples and API docs head on over to &lt;a href=&quot;https://github.com/vakata/jstree/wiki&quot;&gt;the wiki page&lt;/a&gt; and &lt;a href=&quot;http://www.jstree.com&quot;&gt;jstree.com&lt;/a&gt;&lt;/em&gt;. &lt;em&gt;Feel free to ask any questions on the &lt;a href=&quot;https://github.com/vakata/jstree/discussions&quot;&gt;discussions board&lt;/a&gt;.&lt;/em&gt; &lt;em&gt;The PHP demos are now in a &lt;a href=&quot;https://github.com/vakata/jstree-php-demos&quot;&gt;separate repository&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;License &amp;amp; Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Please do NOT edit files in the &quot;dist&quot; subdirectory as they are generated via grunt. You&#39;ll find source code in the &quot;src&quot; subdirectory!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;If you want to you can always &lt;a href=&quot;https://github.com/sponsors/vakata&quot;&gt;sponsor me&lt;/a&gt; or &lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&amp;amp;business=paypal@vakata.com&amp;amp;currency_code=USD&amp;amp;amount=&amp;amp;return=http://jstree.com/donation&amp;amp;item_name=Buy+me+a+coffee+for+jsTree&quot;&gt;donate a small amount&lt;/a&gt; to help the development of jstree.&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2020 Ivan Bozhanov (http://vakata.com)&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>odoo/odoo</title>
      <link>https://github.com/odoo/odoo</link>
      <description>&lt;p&gt;Odoo. Open Source Apps To Grow Your Business.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;http://runbot.odoo.com/runbot&quot;&gt;&lt;img src=&quot;http://runbot.odoo.com/runbot/badge/flat/1/master.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.odoo.com/documentation/master&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-docs-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Tech Doc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.odoo.com/forum/help-1&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-help-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Help&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://nightly.odoo.com/&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-nightly-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Nightly Builds&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Odoo&lt;/h2&gt; 
&lt;p&gt;Odoo is a suite of web based open source business apps.&lt;/p&gt; 
&lt;p&gt;The main Odoo Apps include an 
 &lt;!-- raw HTML omitted --&gt;Open Source CRM
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;Website Builder
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;eCommerce
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;Warehouse Management
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;Project Management
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;Billing &amp;amp; Accounting
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;Point of Sale
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;Human Resources
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;Marketing
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;Manufacturing
 &lt;!-- raw HTML omitted --&gt;, 
 &lt;!-- raw HTML omitted --&gt;...
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Odoo Apps can be used as stand-alone applications, but they also integrate seamlessly so you get a full-featured 
 &lt;!-- raw HTML omitted --&gt;Open Source ERP
 &lt;!-- raw HTML omitted --&gt; when you install several Apps.&lt;/p&gt; 
&lt;h2&gt;Getting started with Odoo&lt;/h2&gt; 
&lt;p&gt;For a standard installation please follow the 
 &lt;!-- raw HTML omitted --&gt;Setup instructions
 &lt;!-- raw HTML omitted --&gt; from the documentation.&lt;/p&gt; 
&lt;p&gt;To learn the software, we recommend the 
 &lt;!-- raw HTML omitted --&gt;Odoo eLearning
 &lt;!-- raw HTML omitted --&gt;, or 
 &lt;!-- raw HTML omitted --&gt;Scale-up
 &lt;!-- raw HTML omitted --&gt;, the 
 &lt;!-- raw HTML omitted --&gt;business game
 &lt;!-- raw HTML omitted --&gt;. Developers can start with 
 &lt;!-- raw HTML omitted --&gt;the developer tutorials
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>benmosher/eslint-plugin-import</title>
      <link>https://github.com/benmosher/eslint-plugin-import</link>
      <description>&lt;p&gt;ESLint plugin with rules that help validate proper imports.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eslint-plugin-import&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/benmosher/eslint-plugin-import&quot;&gt;&lt;img src=&quot;https://travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/benmosher/eslint-plugin-import?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/benmosher/eslint-plugin-import/branch/master&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master?svg=true&quot; alt=&quot;win32 build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-import&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/eslint-plugin-import.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.npmtrends.com/eslint-plugin-import&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/eslint-plugin-import.svg?maxAge=2592000&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This plugin intends to support linting of ES2015+ (ES6+) import/export syntax, and prevent issues with misspelling of file paths and import names. All the goodness that the ES2015+ static module syntax intends to provide, marked up in your editor.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IF YOU ARE USING THIS WITH SUBLIME&lt;/strong&gt;: see the &lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/#sublimelinter-eslint&quot;&gt;bottom section&lt;/a&gt; for important info.&lt;/p&gt; 
&lt;h2&gt;Rules&lt;/h2&gt; 
&lt;h3&gt;Static analysis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ensure imports point to a file/module that can be resolved. (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-unresolved.md&quot;&gt;&lt;code&gt;no-unresolved&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ensure named imports correspond to a named export in the remote file. (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/named.md&quot;&gt;&lt;code&gt;named&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ensure a default export is present, given a default import. (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/default.md&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ensure imported namespaces contain dereferenced properties as they are dereferenced. (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/namespace.md&quot;&gt;&lt;code&gt;namespace&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Restrict which files can be imported in a given folder (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-restricted-paths.md&quot;&gt;&lt;code&gt;no-restricted-paths&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid import of modules using absolute paths (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-absolute-path.md&quot;&gt;&lt;code&gt;no-absolute-path&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid &lt;code&gt;require()&lt;/code&gt; calls with expressions (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-dynamic-require.md&quot;&gt;&lt;code&gt;no-dynamic-require&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Prevent importing the submodules of other modules (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-internal-modules.md&quot;&gt;&lt;code&gt;no-internal-modules&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid webpack loader syntax in imports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid a module from importing itself (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-self-import.md&quot;&gt;&lt;code&gt;no-self-import&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid a module from importing a module with a dependency path back to itself (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-cycle.md&quot;&gt;&lt;code&gt;no-cycle&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Prevent unnecessary path segments in import and require statements (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-useless-path-segments.md&quot;&gt;&lt;code&gt;no-useless-path-segments&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid importing modules from parent directories (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-relative-parent-imports.md&quot;&gt;&lt;code&gt;no-relative-parent-imports&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Helpful warnings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report any invalid exports, i.e. re-export of the same name (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/export.md&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Report use of exported name as identifier of default export (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-named-as-default.md&quot;&gt;&lt;code&gt;no-named-as-default&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Report use of exported name as property of default export (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-named-as-default-member.md&quot;&gt;&lt;code&gt;no-named-as-default-member&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Report imported names marked with &lt;code&gt;@deprecated&lt;/code&gt; documentation tag (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-deprecated.md&quot;&gt;&lt;code&gt;no-deprecated&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid the use of extraneous packages (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-extraneous-dependencies.md&quot;&gt;&lt;code&gt;no-extraneous-dependencies&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid the use of mutable exports with &lt;code&gt;var&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt;. (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;no-mutable-exports&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Report modules without exports, or exports without matching import in another module (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-unused-modules.md&quot;&gt;&lt;code&gt;no-unused-modules&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Module systems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report potentially ambiguous parse goal (&lt;code&gt;script&lt;/code&gt; vs. &lt;code&gt;module&lt;/code&gt;) (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/unambiguous.md&quot;&gt;&lt;code&gt;unambiguous&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Report CommonJS &lt;code&gt;require&lt;/code&gt; calls and &lt;code&gt;module.exports&lt;/code&gt; or &lt;code&gt;exports.*&lt;/code&gt;. (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-commonjs.md&quot;&gt;&lt;code&gt;no-commonjs&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Report AMD &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;define&lt;/code&gt; calls. (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-amd.md&quot;&gt;&lt;code&gt;no-amd&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;No Node.js builtin modules. (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-nodejs-modules.md&quot;&gt;&lt;code&gt;no-nodejs-modules&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid imports with CommonJS exports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-import-module-exports.md&quot;&gt;&lt;code&gt;no-import-module-exports&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Style guide&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ensure all imports appear before other statements (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/first.md&quot;&gt;&lt;code&gt;first&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ensure all exports appear after other statements (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/exports-last.md&quot;&gt;&lt;code&gt;exports-last&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Report repeated import of the same module in multiple places (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-duplicates.md&quot;&gt;&lt;code&gt;no-duplicates&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid namespace (a.k.a. &quot;wildcard&quot; &lt;code&gt;*&lt;/code&gt;) imports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-namespace.md&quot;&gt;&lt;code&gt;no-namespace&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ensure consistent use of file extension within the import path (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;extensions&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Enforce a convention in module import order (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/order.md&quot;&gt;&lt;code&gt;order&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Enforce a newline after import statements (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/newline-after-import.md&quot;&gt;&lt;code&gt;newline-after-import&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Prefer a default export if module exports a single name (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;prefer-default-export&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Limit the maximum number of dependencies a module can have (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/max-dependencies.md&quot;&gt;&lt;code&gt;max-dependencies&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid unassigned imports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-unassigned-import.md&quot;&gt;&lt;code&gt;no-unassigned-import&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid named default exports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-named-default.md&quot;&gt;&lt;code&gt;no-named-default&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid default exports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-default-export.md&quot;&gt;&lt;code&gt;no-default-export&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid named exports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-named-export.md&quot;&gt;&lt;code&gt;no-named-export&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Forbid anonymous values as default exports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-anonymous-default-export.md&quot;&gt;&lt;code&gt;no-anonymous-default-export&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Prefer named exports to be grouped together in a single export declaration (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/group-exports.md&quot;&gt;&lt;code&gt;group-exports&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Enforce a leading comment with the webpackChunkName for dynamic imports (&lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/dynamic-import-chunkname.md&quot;&gt;&lt;code&gt;dynamic-import-chunkname&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;eslint-plugin-import&lt;/code&gt; for enterprise&lt;/h2&gt; 
&lt;p&gt;Available as part of the Tidelift Subscription.&lt;/p&gt; 
&lt;p&gt;The maintainers of &lt;code&gt;eslint-plugin-import&lt;/code&gt; and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href=&quot;https://tidelift.com/subscription/pkg/npm-eslint-plugin-import?utm_source=npm-eslint-plugin-import&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&amp;amp;utm_term=repo&quot;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install eslint-plugin-import -g
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or if you manage ESLint as a dev dependency:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# inside your project&#39;s working tree
npm install eslint-plugin-import --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All rules are off by default. However, you may configure them manually in your &lt;code&gt;.eslintrc.(yml|json|js)&lt;/code&gt;, or extend one of the canned configs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;---
extends:
  - eslint:recommended
  - plugin:import/errors
  - plugin:import/warnings

# or configure manually:
plugins:
  - import

rules:
  import/no-unresolved: [2, {commonjs: true, amd: true}]
  import/named: 2
  import/namespace: 2
  import/default: 2
  import/export: 2
  # etc...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;TypeScript&lt;/h1&gt; 
&lt;p&gt;You may use the following shortcut or assemble your own config using the granular settings described below.&lt;/p&gt; 
&lt;p&gt;Make sure you have installed &lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser&quot;&gt;&lt;code&gt;@typescript-eslint/parser&lt;/code&gt;&lt;/a&gt; which is used in the following configuration. Unfortunately NPM does not allow to list optional peer dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;extends:
  - eslint:recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:import/typescript # this line does the trick
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Resolvers&lt;/h1&gt; 
&lt;p&gt;With the advent of module bundlers and the current state of modules and module syntax specs, it&#39;s not always obvious where &lt;code&gt;import x from &#39;module&#39;&lt;/code&gt; should look to find the file behind &lt;code&gt;module&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Up through v0.10ish, this plugin has directly used substack&#39;s &lt;a href=&quot;https://www.npmjs.com/package/resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; plugin, which implements Node&#39;s import behavior. This works pretty well in most cases.&lt;/p&gt; 
&lt;p&gt;However, webpack allows a number of things in import module source strings that Node does not, such as loaders (&lt;code&gt;import &#39;file!./whatever&#39;&lt;/code&gt;) and a number of aliasing schemes, such as &lt;a href=&quot;http://webpack.github.io/docs/library-and-externals.html&quot;&gt;&lt;code&gt;externals&lt;/code&gt;&lt;/a&gt;: mapping a module id to a global name at runtime (allowing some modules to be included more traditionally via script tags).&lt;/p&gt; 
&lt;p&gt;In the interest of supporting both of these, v0.11 introduces resolvers.&lt;/p&gt; 
&lt;p&gt;Currently &lt;a href=&quot;https://www.npmjs.com/package/eslint-import-resolver-node&quot;&gt;Node&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/eslint-import-resolver-webpack&quot;&gt;webpack&lt;/a&gt; resolution have been implemented, but the resolvers are just npm packages, so &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/wiki/Resolvers&quot;&gt;third party packages are supported&lt;/a&gt; (and encouraged!).&lt;/p&gt; 
&lt;p&gt;You can reference resolvers in several ways (in order of precedence):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;as a conventional &lt;code&gt;eslint-import-resolver&lt;/code&gt; name, like &lt;code&gt;eslint-import-resolver-foo&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# .eslintrc.yml
settings:
  # uses &#39;eslint-import-resolver-foo&#39;:
  import/resolver: foo
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// .eslintrc.js
module.exports = {
  settings: {
    &#39;import/resolver&#39;: {
      foo: { someConfig: value }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;with a full npm module name, like &lt;code&gt;my-awesome-npm-module&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# .eslintrc.yml
settings:
  import/resolver: &#39;my-awesome-npm-module&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// .eslintrc.js
module.exports = {
  settings: {
    &#39;import/resolver&#39;: {
      &#39;my-awesome-npm-module&#39;: { someConfig: value }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;with a filesystem path to resolver, defined in this example as a &lt;code&gt;computed property&lt;/code&gt; name:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// .eslintrc.js
module.exports = {
  settings: {
    &#39;import/resolver&#39;: {
      [path.resolve(&#39;../../../my-resolver&#39;)]: { someConfig: value }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Relative paths will be resolved relative to the source&#39;s nearest &lt;code&gt;package.json&lt;/code&gt; or the process&#39;s current working directory if no &lt;code&gt;package.json&lt;/code&gt; is found.&lt;/p&gt; 
&lt;p&gt;If you are interesting in writing a resolver, see the &lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/resolvers/README.md&quot;&gt;spec&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h1&gt;Settings&lt;/h1&gt; 
&lt;p&gt;You may set the following settings in your &lt;code&gt;.eslintrc&lt;/code&gt;:&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A list of file extensions that will be parsed as modules and inspected for &lt;code&gt;export&lt;/code&gt;s.&lt;/p&gt; 
&lt;p&gt;This defaults to &lt;code&gt;[&#39;.js&#39;]&lt;/code&gt;, unless you are using the &lt;code&gt;react&lt;/code&gt; shared config, in which case it is specified as &lt;code&gt;[&#39;.js&#39;, &#39;.jsx&#39;]&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;settings&quot;: {
  &quot;import/extensions&quot;: [
    &quot;.js&quot;,
    &quot;.jsx&quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you require more granular extension definitions, you can use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;settings&quot;: {
  &quot;import/resolver&quot;: {
    &quot;node&quot;: {
      &quot;extensions&quot;: [
        &quot;.js&quot;,
        &quot;.jsx&quot;
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that this is different from (and likely a subset of) any &lt;code&gt;import/resolver&lt;/code&gt; extensions settings, which may include &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.coffee&lt;/code&gt;, etc. which will still factor into the &lt;code&gt;no-unresolved&lt;/code&gt; rule.&lt;/p&gt; 
&lt;p&gt;Also, the following &lt;code&gt;import/ignore&lt;/code&gt; patterns will overrule this list.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;import/ignore&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A list of regex strings that, if matched by a path, will not report the matching module if no &lt;code&gt;export&lt;/code&gt;s are found. In practice, this means rules other than &lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-unresolved.md#ignore&quot;&gt;&lt;code&gt;no-unresolved&lt;/code&gt;&lt;/a&gt; will not report on any &lt;code&gt;import&lt;/code&gt;s with (absolute filesystem) paths matching this pattern.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;no-unresolved&lt;/code&gt; has its own &lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/docs/rules/no-unresolved.md#ignore&quot;&gt;&lt;code&gt;ignore&lt;/code&gt;&lt;/a&gt; setting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;settings:
  import/ignore:
    - \.coffee$          # fraught with parse errors
    - \.(scss|less|css)$ # can&#39;t parse unprocessed CSS modules, either
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;import/core-modules&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;An array of additional modules to consider as &quot;core&quot; modules--modules that should be considered resolved but have no path on the filesystem. Your resolver may already define some of these (for example, the Node resolver knows about &lt;code&gt;fs&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;), so you need not redefine those.&lt;/p&gt; 
&lt;p&gt;For example, Electron exposes an &lt;code&gt;electron&lt;/code&gt; module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;electron&#39;  // without extra config, will be flagged as unresolved!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;that would otherwise be unresolved. To avoid this, you may provide &lt;code&gt;electron&lt;/code&gt; as a core module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# .eslintrc.yml
settings:
  import/core-modules: [ electron ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Electron&#39;s specific case, there is a shared config named &lt;code&gt;electron&lt;/code&gt; that specifies this for you.&lt;/p&gt; 
&lt;p&gt;Contribution of more such shared configs for other platforms are welcome!&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;import/external-module-folders&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;An array of folders. Resolved modules only from those folders will be considered as &quot;external&quot;. By default - &lt;code&gt;[&quot;node_modules&quot;]&lt;/code&gt;. Makes sense if you have configured your path or webpack to handle your internal paths differently and want to consider modules from some folders, for example &lt;code&gt;bower_components&lt;/code&gt; or &lt;code&gt;jspm_modules&lt;/code&gt;, as &quot;external&quot;.&lt;/p&gt; 
&lt;p&gt;This option is also useful in a monorepo setup: list here all directories that contain monorepo&#39;s packages and they will be treated as external ones no matter which resolver is used.&lt;/p&gt; 
&lt;p&gt;Each item in this array is either a folder&#39;s name, its subpath, or its absolute prefix path:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;jspm_modules&lt;/code&gt; will match any file or folder named &lt;code&gt;jspm_modules&lt;/code&gt; or which has a direct or non-direct parent named &lt;code&gt;jspm_modules&lt;/code&gt;, e.g. &lt;code&gt;/home/me/project/jspm_modules&lt;/code&gt; or &lt;code&gt;/home/me/project/jspm_modules/some-pkg/index.js&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/core&lt;/code&gt; will match any path that contains these two segments, for example &lt;code&gt;/home/me/project/packages/core/src/utils.js&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;/home/me/project/packages&lt;/code&gt; will only match files and directories inside this directory, and the directory itself.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please note that incomplete names are not allowed here so &lt;code&gt;components&lt;/code&gt; won&#39;t match &lt;code&gt;bower_components&lt;/code&gt; and &lt;code&gt;packages/ui&lt;/code&gt; won&#39;t match &lt;code&gt;packages/ui-utils&lt;/code&gt; (but will match &lt;code&gt;packages/ui/utils&lt;/code&gt;).&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;import/parsers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A map from parsers to file extension arrays. If a file extension is matched, the dependency parser will require and use the map key as the parser instead of the configured ESLint parser. This is useful if you&#39;re inter-op-ing with TypeScript directly using webpack, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# .eslintrc.yml
settings:
  import/parsers:
    @typescript-eslint/parser: [ .ts, .tsx ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this case, &lt;a href=&quot;https://www.npmjs.com/package/@typescript-eslint/parser&quot;&gt;&lt;code&gt;@typescript-eslint/parser&lt;/code&gt;&lt;/a&gt; must be installed and require-able from the running &lt;code&gt;eslint&lt;/code&gt; module&#39;s location (i.e., install it as a peer of ESLint).&lt;/p&gt; 
&lt;p&gt;This is currently only tested with &lt;code&gt;@typescript-eslint/parser&lt;/code&gt; (and its predecessor, &lt;code&gt;typescript-eslint-parser&lt;/code&gt;) but should theoretically work with any moderately ESTree-compliant parser.&lt;/p&gt; 
&lt;p&gt;It&#39;s difficult to say how well various plugin features will be supported, too, depending on how far down the rabbit hole goes. Submit an issue if you find strange behavior beyond here, but steel your heart against the likely outcome of closing with &lt;code&gt;wontfix&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;import/resolver&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/#resolvers&quot;&gt;resolvers&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;import/cache&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Settings for cache behavior. Memoization is used at various levels to avoid the copious amount of &lt;code&gt;fs.statSync&lt;/code&gt;/module parse calls required to correctly report errors.&lt;/p&gt; 
&lt;p&gt;For normal &lt;code&gt;eslint&lt;/code&gt; console runs, the cache lifetime is irrelevant, as we can strongly assume that files should not be changing during the lifetime of the linter process (and thus, the cache in memory)&lt;/p&gt; 
&lt;p&gt;For long-lasting processes, like &lt;a href=&quot;https://www.npmjs.com/package/eslint_d&quot;&gt;&lt;code&gt;eslint_d&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/eslint-loader&quot;&gt;&lt;code&gt;eslint-loader&lt;/code&gt;&lt;/a&gt;, however, it&#39;s important that there be some notion of staleness.&lt;/p&gt; 
&lt;p&gt;If you never use &lt;a href=&quot;https://www.npmjs.com/package/eslint_d&quot;&gt;&lt;code&gt;eslint_d&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/eslint-loader&quot;&gt;&lt;code&gt;eslint-loader&lt;/code&gt;&lt;/a&gt;, you may set the cache lifetime to &lt;code&gt;Infinity&lt;/code&gt; and everything should be fine:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# .eslintrc.yml
settings:
  import/cache:
    lifetime: ∞  # or Infinity
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Otherwise, set some integer, and cache entries will be evicted after that many seconds have elapsed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# .eslintrc.yml
settings:
  import/cache:
    lifetime: 5  # 30 is the default
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;import/internal-regex&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A regex for packages should be treated as internal. Useful when you are utilizing a monorepo setup or developing a set of packages that depend on each other.&lt;/p&gt; 
&lt;p&gt;By default, any package referenced from &lt;a href=&quot;https://raw.githubusercontent.com/benmosher/eslint-plugin-import/master/#importexternal-module-folders&quot;&gt;&lt;code&gt;import/external-module-folders&lt;/code&gt;&lt;/a&gt; will be considered as &quot;external&quot;, including packages in a monorepo like yarn workspace or lerna environment. If you want to mark these packages as &quot;internal&quot; this will be useful.&lt;/p&gt; 
&lt;p&gt;For example, if your packages in a monorepo are all in &lt;code&gt;@scope&lt;/code&gt;, you can configure &lt;code&gt;import/internal-regex&lt;/code&gt; like this&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# .eslintrc.yml
settings:
  import/internal-regex: ^@scope/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;SublimeLinter-eslint&lt;/h2&gt; 
&lt;p&gt;SublimeLinter-eslint introduced a change to support &lt;code&gt;.eslintignore&lt;/code&gt; files which altered the way file paths are passed to ESLint when linting during editing. This change sends a relative path instead of the absolute path to the file (as ESLint normally provides), which can make it impossible for this plugin to resolve dependencies on the filesystem.&lt;/p&gt; 
&lt;p&gt;This workaround should no longer be necessary with the release of ESLint 2.0, when &lt;code&gt;.eslintignore&lt;/code&gt; will be updated to work more like a &lt;code&gt;.gitignore&lt;/code&gt;, which should support proper ignoring of absolute paths via &lt;code&gt;--stdin-filename&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the meantime, see &lt;a href=&quot;https://github.com/roadhump/SublimeLinter-eslint/issues/58&quot;&gt;roadhump/SublimeLinter-eslint#58&lt;/a&gt; for more details and discussion, but essentially, you may find you need to add the following &lt;code&gt;SublimeLinter&lt;/code&gt; config to your Sublime project file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;folders&quot;:
    [
        {
            &quot;path&quot;: &quot;code&quot;
        }
    ],
    &quot;SublimeLinter&quot;:
    {
        &quot;linters&quot;:
        {
            &quot;eslint&quot;:
            {
                &quot;chdir&quot;: &quot;${project}/code&quot;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that &lt;code&gt;${project}/code&lt;/code&gt; matches the &lt;code&gt;code&lt;/code&gt; provided at &lt;code&gt;folders[0].path&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The purpose of the &lt;code&gt;chdir&lt;/code&gt; setting, in this case, is to set the working directory from which ESLint is executed to be the same as the directory on which SublimeLinter-eslint bases the relative path it provides.&lt;/p&gt; 
&lt;p&gt;See the SublimeLinter docs on &lt;a href=&quot;http://www.sublimelinter.com/en/latest/linter_settings.html#chdir&quot;&gt;&lt;code&gt;chdir&lt;/code&gt;&lt;/a&gt; for more information, in case this does not work with your project.&lt;/p&gt; 
&lt;p&gt;If you are not using &lt;code&gt;.eslintignore&lt;/code&gt;, or don&#39;t have a Sublime project file, you can also do the following via a &lt;code&gt;.sublimelinterrc&lt;/code&gt; file in some ancestor directory of your code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;linters&quot;: {
    &quot;eslint&quot;: {
      &quot;args&quot;: [&quot;--stdin-filename&quot;, &quot;@&quot;]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;I also found that I needed to set &lt;code&gt;rc_search_limit&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;, which removes the file hierarchy search limit when looking up the directory tree for &lt;code&gt;.sublimelinterrc&lt;/code&gt;:&lt;/p&gt; 
&lt;p&gt;In Package Settings / SublimeLinter / User Settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;user&quot;: {
    &quot;rc_search_limit&quot;: null
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;I believe this defaults to &lt;code&gt;3&lt;/code&gt;, so you may not need to alter it depending on your project folder max depth.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cypress-io/cypress</title>
      <link>https://github.com/cypress-io/cypress</link>
      <description>&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What is Cypress?&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://badge.fury.io/js/cypress&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/cypress.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Install Cypress for Mac, Linux, or Windows, then &lt;a href=&quot;https://docs.cypress.io/guides/getting-started/installing-cypress.html&quot;&gt;get started&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cypress --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add cypress --dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif&quot; alt=&quot;installing-cli e1693232&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;develop&lt;/code&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/CONTRIBUTING.md&quot;&gt;Contributing Guideline&lt;/a&gt; which explains repo organization, linting, testing, and other steps.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green.svg&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;Let the world know your project is using Cypress.io to test with this cool badge&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.cypress.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg&quot; alt=&quot;Cypress.io&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>fnando/i18n-js</title>
      <link>https://github.com/fnando/i18n-js</link>
      <description>&lt;p&gt;It&#39;s a small library to provide the I18n translations on the Javascript. It comes with Rails support.&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p&gt;Features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pluralization&lt;/li&gt; 
 &lt;li&gt;Date/Time localization&lt;/li&gt; 
 &lt;li&gt;Number localization&lt;/li&gt; 
 &lt;li&gt;Locale fallback&lt;/li&gt; 
 &lt;li&gt;Asset pipeline support&lt;/li&gt; 
 &lt;li&gt;Lots more! :)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Version Notice&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; branch (including this README) is for latest &lt;code&gt;3.0.0&lt;/code&gt; instead of &lt;code&gt;2.x&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;h4&gt;Rails app&lt;/h4&gt; 
&lt;p&gt;Add the gem to your Gemfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem &quot;i18n-js&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Rails with &lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;webpacker&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;If you&#39;re using &lt;code&gt;webpacker&lt;/code&gt;, you may need to add the dependencies to your client with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn add i18n-js
# or, if you&#39;re using npm,
npm install i18n-js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details, see &lt;a href=&quot;https://gist.github.com/bazzel/ecdff4718962e57c2d5569cf01d332fe&quot;&gt;this gist&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Rails app with &lt;a href=&quot;http://guides.rubyonrails.org/asset_pipeline.html&quot;&gt;Asset Pipeline&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;If you&#39;re using the &lt;a href=&quot;http://guides.rubyonrails.org/asset_pipeline.html&quot;&gt;asset pipeline&lt;/a&gt;, then you must add the following line to your &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//
// This is optional (in case you have `I18n is not defined` error)
// If you want to put this line, you must put it BEFORE `i18n/translations`
//= require i18n
// Some people even need to add the extension to make it work, see https://github.com/fnando/i18n-js/issues/283
//= require i18n.js
//
// This is a must
//= require i18n/translations
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Rails app without &lt;a href=&quot;http://guides.rubyonrails.org/asset_pipeline.html&quot;&gt;Asset Pipeline&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;First, put this in your &lt;code&gt;application.html&lt;/code&gt; (layout file). Then get the JS files following the instructions below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-erb&quot;&gt;&amp;lt;%# This is just an example, you can put `i18n.js` and `translations.js` anywhere you like %&amp;gt;
&amp;lt;%# Unlike the Asset Pipeline example, you need to require both **in order** %&amp;gt;
&amp;lt;%= javascript_include_tag &quot;i18n&quot; %&amp;gt;
&amp;lt;%= javascript_include_tag &quot;translations&quot;, skip_pipeline: true %&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;There are two ways to get &lt;code&gt;translations.js&lt;/code&gt; (For Rails app without Asset Pipeline).&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;This &lt;code&gt;translations.js&lt;/code&gt; file can be automatically generated by the &lt;code&gt;I18n::JS::Middleware&lt;/code&gt;. Just add &lt;code&gt;config.middleware.use I18n::JS::Middleware&lt;/code&gt; to your &lt;code&gt;config/application.rb&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;If you can&#39;t or prefer not to generate this file, you can move the middleware line to your &lt;code&gt;config/environments/development.rb&lt;/code&gt; file and run &lt;code&gt;rake i18n:js:export&lt;/code&gt; before deploying. This will export all translation files, including the custom scopes you may have defined on &lt;code&gt;config/i18n-js.yml&lt;/code&gt;. If &lt;code&gt;I18n.available_locales&lt;/code&gt; is set (e.g. in your Rails &lt;code&gt;config/application.rb&lt;/code&gt; file) then only the specified locales will be exported. Current version of &lt;code&gt;i18n.js&lt;/code&gt; will also be exported to avoid version mismatching by downloading.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Export Configuration (For translations)&lt;/h4&gt; 
&lt;p&gt;Exported translation files generated by &lt;code&gt;I18n::JS::Middleware&lt;/code&gt; or &lt;code&gt;rake i18n:js:export&lt;/code&gt; can be customized with config file &lt;code&gt;config/i18n-js.yml&lt;/code&gt; (use &lt;code&gt;rails generate i18n:js:config&lt;/code&gt; to create it). You can even get more files generated to different folders and with different translations to best suit your needs. The config file also affects developers using Asset Pipeline to require translations. Except the option &lt;code&gt;file&lt;/code&gt;, since all translations are required by adding &lt;code&gt;//= require i18n/translations&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;translations:
  - file: &quot;public/javascripts/path-to-your-messages-file.js&quot;
    only: &quot;*.date.formats&quot;
  - file: &quot;public/javascripts/path-to-your-second-file.js&quot;
    only: [&quot;*.activerecord&quot;, &quot;*.admin.*.title&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;only&lt;/code&gt; is omitted all the translations will be saved. Also, make sure you add that initial &lt;code&gt;*&lt;/code&gt;; it specifies that all languages will be exported. If you want to export only one language, you can do something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;translations:
  - file: &quot;public/javascripts/en.js&quot;
    only: &quot;en.*&quot;
  - file: &quot;public/javascripts/pt-BR.js&quot;
    only: &quot;pt-BR.*&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optionally, you can auto generate a translation file per available locale if you specify the &lt;code&gt;%{locale}&lt;/code&gt; placeholder.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;translations:
  - file: &quot;public/javascripts/i18n/%{locale}.js&quot;
    only: &quot;*&quot;
  - file: &quot;public/javascripts/frontend/i18n/%{locale}.js&quot;
    only: [&quot;*.frontend&quot;, &quot;*.users.*&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also include ERB in your config file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;translations:
&amp;lt;% Widgets.each do |widget| %&amp;gt;
- file: &amp;lt;%= &quot;&#39;#{widget.file}&#39;&quot; %&amp;gt;
  only: &amp;lt;%= &quot;&#39;#{widget.only}&#39;&quot; %&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You are able to exclude certain phrases or whole groups of phrases by specifying the YAML key(s) in the &lt;code&gt;except&lt;/code&gt; configuration option. The outputted JS translations file (exported or generated by the middleware) will omit any keys listed in &lt;code&gt;except&lt;/code&gt; configuration param:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;translations:
  - except: [&quot;*.active_admin&quot;, &quot;*.ransack&quot;, &quot;*.activerecord.errors&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Export Configuration (For other things)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;I18n::JS.config_file_path&lt;/code&gt; Expected Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;config/i18n-js.yml&lt;/code&gt; Behaviour: Try to read the config file from that location&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;I18n::JS.export_i18n_js_dir_path&lt;/code&gt; Expected Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;public/javascripts&lt;/code&gt; Behaviour:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Any &lt;code&gt;String&lt;/code&gt;: considered as a relative path for a folder to &lt;code&gt;Rails.root&lt;/code&gt; and export &lt;code&gt;i18n.js&lt;/code&gt; to that folder for &lt;code&gt;rake i18n:js:export&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Any non-&lt;code&gt;String&lt;/code&gt; (&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;:none&lt;/code&gt;, etc): Disable &lt;code&gt;i18n.js&lt;/code&gt; exporting&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;I18n::JS.sort_translation_keys&lt;/code&gt; Expected Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt; Behaviour:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Sets whether or not to deep sort all translation keys in order to generate identical output for the same translations&lt;/li&gt; 
   &lt;li&gt;Set to true to ensure identical asset fingerprints for the asset pipeline&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You may also set &lt;code&gt;export_i18n_js&lt;/code&gt; and &lt;code&gt;sort_translation_keys&lt;/code&gt; in your config file, e.g.:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;export_i18n_js: false
# OR
export_i18n_js: &quot;my/path&quot;

sort_translation_keys: false

translations:
  - ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To find more examples on how to use the configuration file please refer to the tests.&lt;/p&gt; 
&lt;h4&gt;Fallbacks&lt;/h4&gt; 
&lt;p&gt;If you specify the &lt;code&gt;fallbacks&lt;/code&gt; option, you will be able to fill missing translations with those inside fallback locale(s). Default value is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;fallbacks: true

translations:
  - file: &quot;public/javascripts/i18n/%{locale}.js&quot;
    only: &quot;*&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will enable merging fallbacks into each file. (set to &lt;code&gt;false&lt;/code&gt; to disable). If you use &lt;code&gt;I18n&lt;/code&gt; with fallbacks, the fallbacks defined there will be used. Otherwise &lt;code&gt;I18n.default_locale&lt;/code&gt; will be used.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;fallbacks: :de

translations:
  - file: &quot;public/javascripts/i18n/%{locale}.js&quot;
    only: &quot;*&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, the specified locale &lt;code&gt;:de&lt;/code&gt; will be used as fallback for all locales.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;fallbacks:
  fr: [&quot;de&quot;, &quot;en&quot;]
  de: &quot;en&quot;

translations:
  - file: &quot;public/javascripts/i18n/%{locale}.js&quot;
    only: &quot;*&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fallbacks defined will be used, if not defined (e.g. &lt;code&gt;:pl&lt;/code&gt;) &lt;code&gt;I18n.fallbacks&lt;/code&gt; or &lt;code&gt;I18n.default_locale&lt;/code&gt; will be used.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;fallbacks: :default_locale

translations:
  - file: &quot;public/javascripts/i18n/%{locale}.js&quot;
    only: &quot;*&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Setting the option to &lt;code&gt;:default_locale&lt;/code&gt; will enforce the fallback to use the &lt;code&gt;I18n.default_locale&lt;/code&gt;, ignoring &lt;code&gt;I18n.fallbacks&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;fallbacks: false

translations:
  - file: &quot;public/javascripts/i18n/%{locale}.js&quot;
    only: &quot;*&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You must disable this feature by setting the option to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To find more examples on how to use the configuration file please refer to the tests.&lt;/p&gt; 
&lt;h4&gt;Namespace&lt;/h4&gt; 
&lt;p&gt;Setting the &lt;code&gt;namespace&lt;/code&gt; option will change the namespace of the output Javascript file to something other than &lt;code&gt;I18n&lt;/code&gt;. This can be useful in no-conflict scenarios. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;translations:
  - file: &quot;public/javascripts/i18n/translations.js&quot;
    namespace: &quot;MyNamespace&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will create:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;MyNamespace.translations || (MyNamespace.translations = {});
MyNamespace.translations[&quot;en&quot;] = { ... }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding prefix &amp;amp; suffix to the translations file(s)&lt;/h3&gt; 
&lt;p&gt;Setting the &lt;code&gt;prefix: &quot;import I18n from &#39;i18n-js&#39;;\n&quot;&lt;/code&gt; option will add the line at the beginning of the resultant translation file. This can be useful to use this gem with the &lt;a href=&quot;https://www.npmjs.com/package/i18n-js&quot;&gt;i18n-js&lt;/a&gt; npm package, which is quite useful to use it with webpack. The user should provide the semi-colon and the newline character if needed.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;translations:
  - file: &quot;public/javascripts/i18n/translations.js&quot;
    prefix: &quot;import I18n from &#39;i18n-js&#39;;\n&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will create:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import I18n from &#39;i18n-js&#39;;
I18n.translations || (I18n.translations = {});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;suffix&lt;/code&gt; option is added in https://github.com/fnando/i18n-js/pull/561.&lt;br&gt; It&#39;s similar to &lt;code&gt;prefix&lt;/code&gt; so won&#39;t explain it in details.&lt;/p&gt; 
&lt;h4&gt;Pretty Print&lt;/h4&gt; 
&lt;p&gt;Set the &lt;code&gt;pretty_print&lt;/code&gt; option if you would like whitespace and indentation in your output file (default: false)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;translations:
  - file: &quot;public/javascripts/i18n/translations.js&quot;
    pretty_print: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Javascript Deep Merge (:js_extend option)&lt;/h4&gt; 
&lt;p&gt;By default, the output file Javascript will call the &lt;code&gt;I18n.extend&lt;/code&gt; method to ensure that newly loaded locale files are deep-merged with any locale data already in memory. To disable this either globally or per-file, set the &lt;code&gt;js_extend&lt;/code&gt; option to false&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;js_extend: false # this will disable Javascript I18n.extend globally
translations:
  - file: &quot;public/javascripts/i18n/translations.js&quot;
    js_extend: false # this will disable Javascript I18n.extend for this file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Vanilla JavaScript&lt;/h4&gt; 
&lt;p&gt;Just add the &lt;code&gt;i18n.js&lt;/code&gt; file to your page. You&#39;ll have to build the translations object by hand or using your favorite programming language. More info below.&lt;/p&gt; 
&lt;h4&gt;Via NPM with webpack and CommonJS&lt;/h4&gt; 
&lt;p&gt;Add the following line to your package.json dependencies where version is the version you want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;i18n-js&quot;: &quot;{version_constraint}&quot;

// Or if you want unreleased version
// npm install requires it to be the gzipped tarball, see [npm install](https://www.npmjs.org/doc/cli/npm-install.html)
&quot;i18n-js&quot;: &quot;https://github.com/fnando/i18n-js/archive/{tag_name_or_branch_name_or_commit_sha}.tar.gz&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run npm install then use via&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var i18n = require(&quot;i18n-js&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setting up&lt;/h3&gt; 
&lt;p&gt;You &lt;strong&gt;don&#39;t&lt;/strong&gt; need to set up a thing. The default settings will work just okay. But if you want to split translations into several files or specify contexts, you can follow the rest of this setting up section.&lt;/p&gt; 
&lt;p&gt;Set your locale is easy as&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.defaultLocale = &quot;pt-BR&quot;;
I18n.locale = &quot;pt-BR&quot;;
I18n.currentLocale();
// pt-BR
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You can now apply your configuration &lt;strong&gt;before I18n&lt;/strong&gt; is loaded like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n = {}; // You must define this object in top namespace, which should be `window`
I18n.defaultLocale = &quot;pt-BR&quot;;
I18n.locale = &quot;pt-BR&quot;;

// Load I18n from `i18n.js`, `application.js` or whatever

I18n.currentLocale();
// pt-BR
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In practice, you&#39;ll have something like the following in your &lt;code&gt;application.html.erb&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-erb&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
  I18n.defaultLocale = &quot;&amp;lt;%= I18n.default_locale %&amp;gt;&quot;;
  I18n.locale = &quot;&amp;lt;%= I18n.locale %&amp;gt;&quot;;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use translate your messages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.t(&quot;some.scoped.translation&quot;);
// or translate with explicit setting of locale
I18n.t(&quot;some.scoped.translation&quot;, { locale: &quot;fr&quot; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also interpolate values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// You need the `translations` object setup first
I18n.translations[&quot;en&quot;] = {
  greeting: &quot;Hello %{name}&quot;,
};

I18n.t(&quot;greeting&quot;, { name: &quot;John Doe&quot; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can set default values for missing scopes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// simple translation
I18n.t(&quot;some.missing.scope&quot;, { defaultValue: &quot;A default message&quot; });

// with interpolation
I18n.t(&quot;noun&quot;, { defaultValue: &quot;I&#39;m a {{noun}}&quot;, noun: &quot;Mac&quot; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also provide a list of default fallbacks for missing scopes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// As a scope
I18n.t(&quot;some.missing.scope&quot;, { defaults: [{ scope: &quot;some.existing.scope&quot; }] });

// As a simple translation
I18n.t(&quot;some.missing.scope&quot;, { defaults: [{ message: &quot;Some message&quot; }] });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Default values must be provided as an array of hashes where the key is the type of translation desired, a &lt;code&gt;scope&lt;/code&gt; or a &lt;code&gt;message&lt;/code&gt;. The translation returned will be either the first scope recognized, or the first message defined.&lt;/p&gt; 
&lt;p&gt;The translation will fallback to the &lt;code&gt;defaultValue&lt;/code&gt; translation if no scope in &lt;code&gt;defaults&lt;/code&gt; matches and if no default of type &lt;code&gt;message&lt;/code&gt; is found.&lt;/p&gt; 
&lt;p&gt;Translation fallback can be enabled by enabling the &lt;code&gt;I18n.fallbacks&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-erb&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
  I18n.fallbacks = true;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default missing translations will first be looked for in less specific versions of the requested locale and if that fails by taking them from your &lt;code&gt;I18n.defaultLocale&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// if I18n.defaultLocale = &quot;en&quot; and translation doesn&#39;t exist
// for I18n.locale = &quot;de-DE&quot; this key will be taken from &quot;de&quot; locale scope
// or, if that also doesn&#39;t exist, from &quot;en&quot; locale scope
I18n.t(&quot;some.missing.scope&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Custom fallback rules can also be specified for a particular language. There are three different ways of doing it so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.locales.no = [&quot;nb&quot;, &quot;en&quot;];
I18n.locales.no = &quot;nb&quot;;
I18n.locales.no = function (locale) {
  return [&quot;nb&quot;];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default a missing translation will be displayed as&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[missing &quot;name of scope&quot; translation]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While you are developing or if you do not want to provide a translation in the default language you can set&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.missingBehaviour = &quot;guess&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;this will take the last section of your scope and guess the intended value. Camel case becomes lower cased text and underscores are replaced with space&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;questionnaire.whatIsYourFavorite_ChristmasPresent
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;becomes &quot;what is your favorite Christmas present&quot;&lt;/p&gt; 
&lt;p&gt;In order to still detect untranslated strings, you can set &lt;code&gt;i18n.missingTranslationPrefix&lt;/code&gt; to something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.missingTranslationPrefix = &quot;EE: &quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And result will be:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;EE: what is your favorite Christmas present&quot;;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will help you doing automated tests against your localisation assets.&lt;/p&gt; 
&lt;p&gt;Some people prefer returning &lt;code&gt;null&lt;/code&gt; for missing translation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.missingTranslation = function () {
  return undefined;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pluralization is possible as well and by default provides English rules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.t(&quot;inbox.counting&quot;, { count: 10 }); // You have 10 messages
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The sample above expects the following translation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;en:
  inbox:
    counting:
      one: You have 1 new message
      other: You have {{count}} new messages
      zero: You have no messages
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Rails I18n recognizes the &lt;code&gt;zero&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;If you need special rules just define them for your language, for example Russian, just add a new pluralizer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.pluralization[&quot;ru&quot;] = function (count) {
  var key =
    count % 10 == 1 &amp;amp;&amp;amp; count % 100 != 11
      ? &quot;one&quot;
      : [2, 3, 4].indexOf(count % 10) &amp;gt;= 0 &amp;amp;&amp;amp;
        [12, 13, 14].indexOf(count % 100) &amp;lt; 0
      ? &quot;few&quot;
      : count % 10 == 0 ||
        [5, 6, 7, 8, 9].indexOf(count % 10) &amp;gt;= 0 ||
        [11, 12, 13, 14].indexOf(count % 100) &amp;gt;= 0
      ? &quot;many&quot;
      : &quot;other&quot;;
  return [key];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find all rules on &lt;a href=&quot;https://unicode-org.github.io/cldr-staging/charts/37/supplemental/language_plural_rules.html&quot;&gt;https://unicode-org.github.io/cldr-staging/charts/37/supplemental/language_plural_rules.html&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re using the same scope over and over again, you may use the &lt;code&gt;scope&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var options = { scope: &quot;activerecord.attributes.user&quot; };

I18n.t(&quot;name&quot;, options);
I18n.t(&quot;email&quot;, options);
I18n.t(&quot;username&quot;, options);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also provide an array as scope.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// use the greetings.hello scope
I18n.t([&quot;greetings&quot;, &quot;hello&quot;]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Number formatting&lt;/h4&gt; 
&lt;p&gt;Similar to Rails helpers, you have localized number and currency formatting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.l(&quot;currency&quot;, 1990.99);
// $1,990.99

I18n.l(&quot;number&quot;, 1990.99);
// 1,990.99

I18n.l(&quot;percentage&quot;, 123.45);
// 123.450%
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To have more control over number formatting, you can use the &lt;code&gt;I18n.toNumber&lt;/code&gt;, &lt;code&gt;I18n.toPercentage&lt;/code&gt;, &lt;code&gt;I18n.toCurrency&lt;/code&gt; and &lt;code&gt;I18n.toHumanSize&lt;/code&gt; functions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.toNumber(1000); // 1,000.000
I18n.toCurrency(1000); // $1,000.00
I18n.toPercentage(100); // 100.000%
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;toNumber&lt;/code&gt; and &lt;code&gt;toPercentage&lt;/code&gt; functions accept the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;precision&lt;/code&gt;: defaults to &lt;code&gt;3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;separator&lt;/code&gt;: defaults to &lt;code&gt;.&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;delimiter&lt;/code&gt;: defaults to &lt;code&gt;,&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strip_insignificant_zeros&lt;/code&gt;: defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See some number formatting examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.toNumber(1000, { precision: 0 }); // 1,000
I18n.toNumber(1000, { delimiter: &quot;.&quot;, separator: &quot;,&quot; }); // 1.000,000
I18n.toNumber(1000, { delimiter: &quot;.&quot;, precision: 0 }); // 1.000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;toCurrency&lt;/code&gt; function accepts the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;precision&lt;/code&gt;: sets the level of precision&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;separator&lt;/code&gt;: sets the separator between the units&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;delimiter&lt;/code&gt;: sets the thousands delimiter&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;format&lt;/code&gt;: sets the format of the output string&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unit&lt;/code&gt;: sets the denomination of the currency&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strip_insignificant_zeros&lt;/code&gt;: defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sign_first&lt;/code&gt;: defaults to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can provide only the options you want to override:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.toCurrency(1000, { precision: 0 }); // $1,000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;toHumanSize&lt;/code&gt; function accepts the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;precision&lt;/code&gt;: defaults to &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;separator&lt;/code&gt;: defaults to &lt;code&gt;.&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;delimiter&lt;/code&gt;: defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strip_insignificant_zeros&lt;/code&gt;: defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;format&lt;/code&gt;: defaults to &lt;code&gt;%n%u&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scope&lt;/code&gt;: defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.toHumanSize(1234); // 1KB
I18n.toHumanSize(1234 * 1024); // 1MB
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Date formatting&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// accepted formats
I18n.l(&quot;date.formats.short&quot;, &quot;2009-09-18&quot;); // yyyy-mm-dd
I18n.l(&quot;time.formats.short&quot;, &quot;2009-09-18 23:12:43&quot;); // yyyy-mm-dd hh:mm:ss
I18n.l(&quot;time.formats.short&quot;, &quot;2009-11-09T18:10:34&quot;); // JSON format with local Timezone (part of ISO-8601)
I18n.l(&quot;time.formats.short&quot;, &quot;2009-11-09T18:10:34Z&quot;); // JSON format in UTC (part of ISO-8601)
I18n.l(&quot;date.formats.short&quot;, 1251862029000); // Epoch time
I18n.l(&quot;date.formats.short&quot;, &quot;09/18/2009&quot;); // mm/dd/yyyy
I18n.l(&quot;date.formats.short&quot;, new Date()); // Date object
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also add placeholders to the date format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.translations[&quot;en&quot;] = {
  date: {
    formats: {
      ordinal_day: &quot;%B %{day}&quot;,
    },
  },
};

I18n.l(&quot;date.formats.ordinal_day&quot;, &quot;2009-09-18&quot;, { day: &quot;18th&quot; }); // Sep 18th
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you prefer, you can use the &lt;code&gt;I18n.toTime&lt;/code&gt; and &lt;code&gt;I18n.strftime&lt;/code&gt; functions to format dates.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var date = new Date();
I18n.toTime(&quot;date.formats.short&quot;, &quot;2009-09-18&quot;);
I18n.toTime(&quot;date.formats.short&quot;, date);
I18n.strftime(date, &quot;%d/%m/%Y&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The accepted formats for &lt;code&gt;I18n.strftime&lt;/code&gt; are:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;%a     - The abbreviated weekday name (Sun)
%A     - The full weekday name (Sunday)
%b     - The abbreviated month name (Jan)
%B     - The full month name (January)
%c     - The preferred local date and time representation
%d     - Day of the month (01..31)
%-d    - Day of the month (1..31)
%H     - Hour of the day, 24-hour clock (00..23)
%-H/%k - Hour of the day, 24-hour clock (0..23)
%I     - Hour of the day, 12-hour clock (01..12)
%-I/%l - Hour of the day, 12-hour clock (1..12)
%m     - Month of the year (01..12)
%-m    - Month of the year (1..12)
%M     - Minute of the hour (00..59)
%-M    - Minute of the hour (0..59)
%p     - Meridian indicator (AM  or  PM)
%P     - Meridian indicator (am  or  pm)
%S     - Second of the minute (00..60)
%-S    - Second of the minute (0..60)
%w     - Day of the week (Sunday is 0, 0..6)
%y     - Year without a century (00..99)
%-y    - Year without a century (0..99)
%Y     - Year with century
%z/%Z  - Timezone offset (+0545)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out &lt;code&gt;spec/*.spec.js&lt;/code&gt; files for more examples!&lt;/p&gt; 
&lt;h4&gt;Using pluralization and number formatting together&lt;/h4&gt; 
&lt;p&gt;Sometimes you might want to display translation with formatted number, like adding thousand delimiters to displayed number You can do this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;en&quot;: {
    &quot;point&quot;: {
      &quot;one&quot;: &quot;1 Point&quot;,
      &quot;other&quot;: &quot;{{formatted_number}} Points&quot;,
      &quot;zero&quot;: &quot;0 Points&quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var point_in_number = 1000;
I18n.t(&quot;point&quot;, {
  count: point_in_number,
  formatted_number: I18n.toNumber(point_in_number),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Output should be &lt;code&gt;1,000 points&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Using multiple exported translation files on a page.&lt;/h2&gt; 
&lt;p&gt;This method is useful for very large apps where a single contained translations.js file is not desirable. Examples would be a global translations file and a more specific route translation file.&lt;/p&gt; 
&lt;h3&gt;Rails without asset pipeline&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Setup your &lt;code&gt;config/i18n-js.yml&lt;/code&gt; to have multiple files and try to minimize any overlap.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;sort_translation_keys: true
fallbacks: false

translations:
  + file: &quot;app/assets/javascript/nls/welcome.js&quot;
    only:
      + &#39;*.welcome.*&#39;

  + file: &quot;app/assets/javascript/nls/albums.js&quot;
    only:
      + &#39;*.albums.*&#39;

  + file: &quot;app/assets/javascript/nls/global.js&quot;
    only:
      + &#39;*&#39;
    # Exempt any routes specific translations from being
    # included in the global translation file
    except:
      + &#39;*.welcome.*&#39;
      + &#39;*.albums.*&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When &lt;code&gt;rake i18n:js:export&lt;/code&gt; is executed it will create 3 translations files that can be loaded via the &lt;code&gt;javascript_include_tag&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Add the &lt;code&gt;javascript_include_tag&lt;/code&gt; to your layout and to any route specific files that will require it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;  # views/layouts/application.html.erb
  &amp;lt;%= javascript_include_tag(
        &quot;i18n&quot;
        &quot;nls/global&quot;
      ) %&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and in the route specific&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;  # views/welcome/index.html.erb
  &amp;lt;%= javascript_include_tag(
        &quot;nls/welcome&quot;
      ) %&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Make sure that you add these files to your &lt;code&gt;config/application.rb&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;  config.assets.precompile += %w(
    i18n
    nls/*
  )
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using require.js / r.js&lt;/h3&gt; 
&lt;p&gt;To use this with require.js we are only going to change a few things from above.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;In your &lt;code&gt;config/i18n-js.yml&lt;/code&gt; we need to add a better location for the i18n to be exported to. You want to use this location so that it can be properly precompiled by r.js.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;export_i18n_js: &quot;app/assets/javascript/nls&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;In your &lt;code&gt;config/require.yml&lt;/code&gt; we need to add a map, shim all the translations, and include them into the appropriate modules&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# In your maps add (if you do not have this you will need to add it)
map:
  &#39;*&#39;:
    i18n: &#39;nls/i18n&#39;

# In your shims
shims:
  nls/welcome:
    deps:
      + i18n

  nls/global:
    deps:
      + i18n

# Finally in your modules
modules:
  + name: &#39;application&#39;
    include:
      + i18n
      + &#39;nls/global&#39;

  + name: &#39;welcome&#39;
    exclude:
      + application
    include:
      + &#39;nls/welcome&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When &lt;code&gt;rake assets:precompile&lt;/code&gt; is executed it will optimize the translations into the correct modules so they are loaded with their assigned module, and loading them with requirejs is as simple as requiring any other shim.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;define([&quot;welcome/other_asset&quot;, &quot;nls/welcome&quot;], function (otherAsset) {
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;(optional) As an additional configuration we can make a task to be run before the requirejs optimizer. This will allow any automated scripts that run the requirejs optimizer to export the strings before we run r.js.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rake&quot;&gt;# lib/tasks/i18n.rake
Rake::Task[:&#39;i18n:js:export&#39;].prerequisites.clear
task :&#39;i18n:js:export&#39; =&amp;gt; :&#39;i18n:js:before_export&#39;
task :&#39;requirejs:precompile:external&#39; =&amp;gt; :&#39;i18n:js:export&#39;

namespace :i18n do
  namespace :js do
    task :before_export =&amp;gt; :&#39;assets:environment&#39; do
      I18n.load_path += Dir[Rails.root.join(&#39;config&#39;, &#39;locales&#39;, &#39;*.{yml,rb}&#39;)]
      I18n.backend.load_translations
    end
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using I18n.js with other languages (Python, PHP, ...)&lt;/h2&gt; 
&lt;p&gt;The JavaScript library is language agnostic; so you can use it with PHP, Python, [your favorite language here]. The only requirement is that you need to set the &lt;code&gt;translations&lt;/code&gt; attribute like following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;I18n.translations = {};

I18n.translations[&quot;en&quot;] = {
  message: &quot;Some special message for you&quot;,
};

I18n.translations[&quot;pt-BR&quot;] = {
  message: &quot;Uma mensagem especial para você&quot;,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Known Issues&lt;/h2&gt; 
&lt;h3&gt;Missing translations in precompiled file(s) after adding any new locale file&lt;/h3&gt; 
&lt;p&gt;Due to the design of &lt;code&gt;sprockets&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;depend_on&lt;/code&gt; only takes file paths, not directory paths&lt;/li&gt; 
 &lt;li&gt;registered &lt;code&gt;preprocessors&lt;/code&gt; are only run when the fingerprint of any asset file, including &lt;code&gt;.erb&lt;/code&gt; files, is changed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This means that new locale files will not be detected, and so they will not trigger a i18n-js refresh. There are a few approaches to work around this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;You can force i18n-js to update its translations by completely clearing the assets cache. Use one of the following:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ rake assets:clobber
# Or, with older versions of Rails:
$ rake tmp:cache:clear
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These commands will remove &lt;em&gt;all&lt;/em&gt; fingerprinted assets, and you will have to recompile them with&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ rake assets:precompile
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or similar commands. If you are precompiling assets on the target machine(s), cached pages may be broken by this, so they will need to be refreshed.&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt; &lt;p&gt;You can change something in a different locale file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, you can change &lt;code&gt;config.assets.version&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; See issue &lt;a href=&quot;https://github.com/fnando/i18n-js/issues/213&quot;&gt;#213&lt;/a&gt; for more details and discussion of this issue.&lt;/p&gt; 
&lt;h3&gt;Translations in JS are not updated when Sprockets not loaded before this gem&lt;/h3&gt; 
&lt;p&gt;The &quot;rails engine&quot; declaration will try to detect existence of &quot;sprockets&quot; before adding the initailizer If sprockets is loaded after this gem, the preprocessor for making JS translations file cache to depend on content of locale files will not be hooked. So ensure sprockets is loaded before this gem by moving the entry of sprockets in the Gemfile or adding &quot;require&quot; statements for sprockets somewhere.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; See issue &lt;a href=&quot;https://github.com/fnando/i18n-js/issues/404&quot;&gt;#404&lt;/a&gt; for more details and discussion of this issue.&lt;/p&gt; 
&lt;h3&gt;JS &lt;code&gt;I18n.toCurrency&lt;/code&gt; &amp;amp; &lt;code&gt;I18n.toNumber&lt;/code&gt; cannot handle large integers&lt;/h3&gt; 
&lt;p&gt;The above methods use &lt;code&gt;toFixed&lt;/code&gt; and it only supports 53 bit integers. Ref: http://2ality.com/2012/07/large-integers.html&lt;/p&gt; 
&lt;p&gt;Feel free to find &amp;amp; discuss possible solution(s) at issue &lt;a href=&quot;https://github.com/fnando/i18n-js/issues/511&quot;&gt;#511&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Only works with &lt;code&gt;Simple&lt;/code&gt; backend&lt;/h3&gt; 
&lt;p&gt;If you set &lt;code&gt;I18n.backend&lt;/code&gt; to something other than the default &lt;code&gt;Simple&lt;/code&gt; backend, you will likely get an exception like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Undefined method &#39;initialized?&#39; for &amp;lt;your backend class&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For now, i18n-js is only compatible with the &lt;code&gt;Simple&lt;/code&gt; backend. If you need a more sophisticated backend for your rails application, like &lt;code&gt;I18n::Backend::ActiveRecord&lt;/code&gt;, you can setup i18n-js to get translations from a separate &lt;code&gt;Simple&lt;/code&gt; backend, by adding the following in an initializer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;I18n::JS.backend = I18n.backend
I18n.backend = I18n::Backend::Chain.new(&amp;lt;your other backend(s)&amp;gt;, I18n.backend)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will use your backend with the default &lt;code&gt;Simple&lt;/code&gt; backend as fallback, while i18n-js only sees and uses the simple backend. This means however, that only translations from your static locale files will be present in JavaScript.&lt;/p&gt; 
&lt;p&gt;If you do cannot use a &lt;code&gt;Chain&lt;/code&gt;-Backend for some reason, you can also set&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;I18n::JS.backend = I18n::Backend::Simple.new
I18n.backend = &amp;lt;something different&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, the automatic reloading of translations in developement will not work in this case. This is because Rails calls &lt;code&gt;I18n.reload!&lt;/code&gt; for each request in development, but &lt;code&gt;reload!&lt;/code&gt; will not be called on &lt;code&gt;I18n::JS.backend&lt;/code&gt;, since it is a different object. One option would be to patch &lt;code&gt;I18n.reload!&lt;/code&gt; in an initializer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;module I18n
  def self.reload!
    I18n::JS.backend.reload!
    super
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See issue &lt;a href=&quot;https://github.com/fnando/i18n-js/issues/428&quot;&gt;#428&lt;/a&gt; for more details and discussion of this issue.&lt;/p&gt; 
&lt;h2&gt;Maintainer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Nando Vieira - &lt;a href=&quot;http://nandovieira.com&quot;&gt;http://nandovieira.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Once you&#39;ve made your great commits:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;http://help.github.com/forking/&quot;&gt;Fork&lt;/a&gt; I18n.js&lt;/li&gt; 
 &lt;li&gt;Create a branch with a clear name&lt;/li&gt; 
 &lt;li&gt;Make your changes (Please also add/change spec, README and CHANGELOG if applicable)&lt;/li&gt; 
 &lt;li&gt;Push changes to the created branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://github.com/fnando/i18n-js/pulls&quot;&gt;Create an Pull Request&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;That&#39;s it!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please respect the indentation rules and code style. And use 2 spaces, not tabs. And don&#39;t touch the versioning thing.&lt;/p&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;p&gt;You can run I18n tests using Node.js or your browser.&lt;/p&gt; 
&lt;p&gt;To use Node.js, install the &lt;code&gt;jasmine-node&lt;/code&gt; library:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install jasmine-node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then execute the following command from the lib&#39;s root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run using your browser, just open the &lt;code&gt;spec/js/specs.html&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;You can run both Ruby and JavaScript specs with &lt;code&gt;rake spec&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>karlhadwen/netflix</title>
      <link>https://github.com/karlhadwen/netflix</link>
      <description>&lt;p&gt;Subscribe to my YouTube channel: https://bit.ly/CognitiveSurge - Building Netflix Using React&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Building Netflix from Scratch Using React (Custom Hooks, Context, Portals), Firebase, Compound &amp;amp; Styled Components (10 Hour Tutorial Here: https://www.youtube.com/watch?v=x_EEwGe-a9o)&lt;/h2&gt; 
&lt;p&gt;This application (a Netflix clone) was built using React (Custom Hooks, Context), Firebase &amp;amp; Styled Components. I have built the following pages within this application: sign in, sign up, browse &amp;amp; lastly the homepage. There are four different pages, some using protected routes with auth listeners. Firebase firestore handles all the data and that data is retrieved using a custom hook; authentication is used on all pages, which is handled by Firebase as well.&lt;/p&gt; 
&lt;p&gt;I used compound components (just a design pattern) to build my components, and there&#39;s over 10 examples as to how these are used. The styling is all handled via styled components. Using compound components made my actual dumb components really easy to test.&lt;/p&gt; 
&lt;p&gt;Subscribe to my YouTube channel here: http://bit.ly/CognitiveSurge where I build projects like this! And don&#39;t forget, you can contribute to this project (highly encouraged!).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/karlhadwen/netflix/master/netflix-preview.png?raw=true&quot; alt=&quot;Preview&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mysqljs/mysql</title>
      <link>https://github.com/mysqljs/mysql</link>
      <description>&lt;p&gt;A pure node.js JavaScript Client implementing the MySQL protocol.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mysql&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/mysql&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/v/mysql&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/mysql&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/dm/mysql&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/node/mysql&quot; alt=&quot;Node.js Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/mysqljs/mysql&quot;&gt;&lt;img src=&quot;https://badgen.net/travis/mysqljs/mysql/master&quot; alt=&quot;Linux Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/dougwilson/node-mysql&quot;&gt;&lt;img src=&quot;https://badgen.net/appveyor/ci/dougwilson/node-mysql/master?label=windows&quot; alt=&quot;Windows Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/mysqljs/mysql?branch=master&quot;&gt;&lt;img src=&quot;https://badgen.net/coveralls/c/github/mysqljs/mysql/master&quot; alt=&quot;Test Coverage&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#install&quot;&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#sponsors&quot;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#establishing-connections&quot;&gt;Establishing connections&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#connection-options&quot;&gt;Connection options&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#ssl-options&quot;&gt;SSL options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#connection-flags&quot;&gt;Connection flags&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#terminating-connections&quot;&gt;Terminating connections&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#pooling-connections&quot;&gt;Pooling connections&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#pool-options&quot;&gt;Pool options&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#pool-events&quot;&gt;Pool events&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#acquire&quot;&gt;acquire&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#connection&quot;&gt;connection&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#enqueue&quot;&gt;enqueue&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#release&quot;&gt;release&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#closing-all-the-connections-in-a-pool&quot;&gt;Closing all the connections in a pool&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#poolcluster&quot;&gt;PoolCluster&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#poolcluster-options&quot;&gt;PoolCluster options&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#switching-users-and-altering-connection-state&quot;&gt;Switching users and altering connection state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#server-disconnects&quot;&gt;Server disconnects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#performing-queries&quot;&gt;Performing queries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#escaping-query-values&quot;&gt;Escaping query values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#escaping-query-identifiers&quot;&gt;Escaping query identifiers&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#preparing-queries&quot;&gt;Preparing Queries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#custom-format&quot;&gt;Custom format&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#getting-the-id-of-an-inserted-row&quot;&gt;Getting the id of an inserted row&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#getting-the-number-of-affected-rows&quot;&gt;Getting the number of affected rows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#getting-the-number-of-changed-rows&quot;&gt;Getting the number of changed rows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#getting-the-connection-id&quot;&gt;Getting the connection ID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#executing-queries-in-parallel&quot;&gt;Executing queries in parallel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#streaming-query-rows&quot;&gt;Streaming query rows&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#piping-results-with-streams&quot;&gt;Piping results with Streams&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#multiple-statement-queries&quot;&gt;Multiple statement queries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#stored-procedures&quot;&gt;Stored procedures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#joins-with-overlapping-column-names&quot;&gt;Joins with overlapping column names&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#transactions&quot;&gt;Transactions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#ping&quot;&gt;Ping&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#timeouts&quot;&gt;Timeouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#error-handling&quot;&gt;Error handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#exception-safety&quot;&gt;Exception Safety&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#type-casting&quot;&gt;Type casting&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#number&quot;&gt;Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#date&quot;&gt;Date&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#string&quot;&gt;String&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#custom-type-casting&quot;&gt;Custom type casting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#debugging-and-reporting-problems&quot;&gt;Debugging and reporting problems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#security-issues&quot;&gt;Security issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#running-tests&quot;&gt;Running tests&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#running-unit-tests&quot;&gt;Running unit tests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#running-integration-tests&quot;&gt;Running integration tests&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#todo&quot;&gt;Todo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;This is a &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; module available through the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm registry&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before installing, &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;download and install Node.js&lt;/a&gt;. Node.js 0.6 or higher is required.&lt;/p&gt; 
&lt;p&gt;Installation is done using the &lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-npm-packages-locally&quot;&gt;&lt;code&gt;npm install&lt;/code&gt; command&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npm install mysql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For information about the previous 0.9.x releases, visit the &lt;a href=&quot;https://github.com/mysqljs/mysql/tree/v0.9&quot;&gt;v0.9 branch&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sometimes I may also ask you to install the latest version from Github to check if a bugfix is working. In this case, please do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npm install mysqljs/mysql
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a node.js driver for mysql. It is written in JavaScript, does not require compiling, and is 100% MIT licensed.&lt;/p&gt; 
&lt;p&gt;Here is an example on how to use it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var mysql      = require(&#39;mysql&#39;);
var connection = mysql.createConnection({
  host     : &#39;localhost&#39;,
  user     : &#39;me&#39;,
  password : &#39;secret&#39;,
  database : &#39;my_db&#39;
});

connection.connect();

connection.query(&#39;SELECT 1 + 1 AS solution&#39;, function (error, results, fields) {
  if (error) throw error;
  console.log(&#39;The solution is: &#39;, results[0].solution);
});

connection.end();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From this example, you can learn the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every method you invoke on a connection is queued and executed in sequence.&lt;/li&gt; 
 &lt;li&gt;Closing the connection is done using &lt;code&gt;end()&lt;/code&gt; which makes sure all remaining queries are executed before sending a quit packet to the mysql server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to the people who have contributed code to this module, see the &lt;a href=&quot;https://github.com/mysqljs/mysql/graphs/contributors&quot;&gt;GitHub Contributors page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally I&#39;d like to thank the following people:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://andrey.hristov.com/&quot;&gt;Andrey Hristov&lt;/a&gt; (Oracle) - for helping me with protocol questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.ulf-wendel.de/&quot;&gt;Ulf Wendel&lt;/a&gt; (Oracle) - for helping me with protocol questions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;The following companies have supported this project financially, allowing me to spend more time on it (ordered by time of contribution):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://transloadit.com&quot;&gt;Transloadit&lt;/a&gt; (my startup, we do file uploading &amp;amp; video encoding as a service, check it out)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.joyent.com/&quot;&gt;Joyent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pinkbike.com/&quot;&gt;pinkbike.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.holidayextras.com/&quot;&gt;Holiday Extras&lt;/a&gt; (they are &lt;a href=&quot;https://join.holidayextras.co.uk/&quot;&gt;hiring&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://newscope.com/&quot;&gt;Newscope&lt;/a&gt; (they are &lt;a href=&quot;https://newscope.com/unternehmen/jobs/&quot;&gt;hiring&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;If you&#39;d like to discuss this module, or ask questions about it, please use one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Mailing list&lt;/strong&gt;: https://groups.google.com/forum/#!forum/node-mysql&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IRC Channel&lt;/strong&gt;: #node.js (on freenode.net, I pay attention to any message including the term &lt;code&gt;mysql&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Establishing connections&lt;/h2&gt; 
&lt;p&gt;The recommended way to establish a connection is this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var mysql      = require(&#39;mysql&#39;);
var connection = mysql.createConnection({
  host     : &#39;example.org&#39;,
  user     : &#39;bob&#39;,
  password : &#39;secret&#39;
});

connection.connect(function(err) {
  if (err) {
    console.error(&#39;error connecting: &#39; + err.stack);
    return;
  }

  console.log(&#39;connected as id &#39; + connection.threadId);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, a connection can also be implicitly established by invoking a query:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var mysql      = require(&#39;mysql&#39;);
var connection = mysql.createConnection(...);

connection.query(&#39;SELECT 1&#39;, function (error, results, fields) {
  if (error) throw error;
  // connected!
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Depending on how you like to handle your errors, either method may be appropriate. Any type of connection error (handshake or network) is considered a fatal error, see the &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#error-handling&quot;&gt;Error Handling&lt;/a&gt; section for more information.&lt;/p&gt; 
&lt;h2&gt;Connection options&lt;/h2&gt; 
&lt;p&gt;When establishing a connection, you can set the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;host&lt;/code&gt;: The hostname of the database you are connecting to. (Default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;port&lt;/code&gt;: The port number to connect to. (Default: &lt;code&gt;3306&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;localAddress&lt;/code&gt;: The source IP address to use for TCP connection. (Optional)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;socketPath&lt;/code&gt;: The path to a unix domain socket to connect to. When used &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; are ignored.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;user&lt;/code&gt;: The MySQL user to authenticate as.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;password&lt;/code&gt;: The password of that MySQL user.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;database&lt;/code&gt;: Name of the database to use for this connection (Optional).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;charset&lt;/code&gt;: The charset for the connection. This is called &quot;collation&quot; in the SQL-level of MySQL (like &lt;code&gt;utf8_general_ci&lt;/code&gt;). If a SQL-level charset is specified (like &lt;code&gt;utf8mb4&lt;/code&gt;) then the default collation for that charset is used. (Default: &lt;code&gt;&#39;UTF8_GENERAL_CI&#39;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;timezone&lt;/code&gt;: The timezone configured on the MySQL server. This is used to type cast server date/time values to JavaScript &lt;code&gt;Date&lt;/code&gt; object and vice versa. This can be &lt;code&gt;&#39;local&#39;&lt;/code&gt;, &lt;code&gt;&#39;Z&#39;&lt;/code&gt;, or an offset in the form &lt;code&gt;+HH:MM&lt;/code&gt; or &lt;code&gt;-HH:MM&lt;/code&gt;. (Default: &lt;code&gt;&#39;local&#39;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;connectTimeout&lt;/code&gt;: The milliseconds before a timeout occurs during the initial connection to the MySQL server. (Default: &lt;code&gt;10000&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stringifyObjects&lt;/code&gt;: Stringify objects instead of converting to values. See issue &lt;a href=&quot;https://github.com/mysqljs/mysql/issues/501&quot;&gt;#501&lt;/a&gt;. (Default: &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;insecureAuth&lt;/code&gt;: Allow connecting to MySQL instances that ask for the old (insecure) authentication method. (Default: &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;typeCast&lt;/code&gt;: Determines if column values should be converted to native JavaScript types. (Default: &lt;code&gt;true&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;queryFormat&lt;/code&gt;: A custom query format function. See &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#custom-format&quot;&gt;Custom format&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;supportBigNumbers&lt;/code&gt;: When dealing with big numbers (BIGINT and DECIMAL columns) in the database, you should enable this option (Default: &lt;code&gt;false&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bigNumberStrings&lt;/code&gt;: Enabling both &lt;code&gt;supportBigNumbers&lt;/code&gt; and &lt;code&gt;bigNumberStrings&lt;/code&gt; forces big numbers (BIGINT and DECIMAL columns) to be always returned as JavaScript String objects (Default: &lt;code&gt;false&lt;/code&gt;). Enabling &lt;code&gt;supportBigNumbers&lt;/code&gt; but leaving &lt;code&gt;bigNumberStrings&lt;/code&gt; disabled will return big numbers as String objects only when they cannot be accurately represented with [JavaScript Number objects] (http://ecma262-5.com/ELS5_HTML.htm#Section_8.5) (which happens when they exceed the [-2^53, +2^53] range), otherwise they will be returned as Number objects. This option is ignored if &lt;code&gt;supportBigNumbers&lt;/code&gt; is disabled.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dateStrings&lt;/code&gt;: Force date types (TIMESTAMP, DATETIME, DATE) to be returned as strings rather than inflated into JavaScript Date objects. Can be &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; or an array of type names to keep as strings. (Default: &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;debug&lt;/code&gt;: Prints protocol details to stdout. Can be &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; or an array of packet type names that should be printed. (Default: &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trace&lt;/code&gt;: Generates stack traces on &lt;code&gt;Error&lt;/code&gt; to include call site of library entrance (&quot;long stack traces&quot;). Slight performance penalty for most calls. (Default: &lt;code&gt;true&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;localInfile&lt;/code&gt;: Allow &lt;code&gt;LOAD DATA INFILE&lt;/code&gt; to use the &lt;code&gt;LOCAL&lt;/code&gt; modifier. (Default: &lt;code&gt;true&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;multipleStatements&lt;/code&gt;: Allow multiple mysql statements per query. Be careful with this, it could increase the scope of SQL injection attacks. (Default: &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;flags&lt;/code&gt;: List of connection flags to use other than the default ones. It is also possible to blacklist default ones. For more information, check &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#connection-flags&quot;&gt;Connection Flags&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ssl&lt;/code&gt;: object with ssl parameters or a string containing name of ssl profile. See &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#ssl-options&quot;&gt;SSL options&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In addition to passing these options as an object, you can also use a url string. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = mysql.createConnection(&#39;mysql://user:pass@host/db?debug=true&amp;amp;charset=BIG5_CHINESE_CI&amp;amp;timezone=-0700&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: The query values are first attempted to be parsed as JSON, and if that fails assumed to be plaintext strings.&lt;/p&gt; 
&lt;h3&gt;SSL options&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;ssl&lt;/code&gt; option in the connection options takes a string or an object. When given a string, it uses one of the predefined SSL profiles included. The following profiles are included:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&quot;Amazon RDS&quot;&lt;/code&gt;: this profile is for connecting to an Amazon RDS server and contains the certificates from https://rds.amazonaws.com/doc/rds-ssl-ca-cert.pem and https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When connecting to other servers, you will need to provide an object of options, in the same format as &lt;a href=&quot;https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options&quot;&gt;tls.createSecureContext&lt;/a&gt;. Please note the arguments expect a string of the certificate, not a file name to the certificate. Here is a simple example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = mysql.createConnection({
  host : &#39;localhost&#39;,
  ssl  : {
    ca : fs.readFileSync(__dirname + &#39;/mysql-ca.crt&#39;)
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also connect to a MySQL server without properly providing the appropriate CA to trust. &lt;em&gt;You should not do this&lt;/em&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = mysql.createConnection({
  host : &#39;localhost&#39;,
  ssl  : {
    // DO NOT DO THIS
    // set up your ca correctly to trust the connection
    rejectUnauthorized: false
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Connection flags&lt;/h3&gt; 
&lt;p&gt;If, for any reason, you would like to change the default connection flags, you can use the connection option &lt;code&gt;flags&lt;/code&gt;. Pass a string with a comma separated list of items to add to the default flags. If you don&#39;t want a default flag to be used prepend the flag with a minus sign. To add a flag that is not in the default list, just write the flag name, or prefix it with a plus (case insensitive).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = mysql.createConnection({
  // disable FOUND_ROWS flag, enable IGNORE_SPACE flag
  flags: &#39;-FOUND_ROWS,IGNORE_SPACE&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following flags are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;COMPRESS&lt;/code&gt; - Enable protocol compression. This feature is not currently supported by the Node.js implementation so cannot be turned on. (Default off)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CONNECT_WITH_DB&lt;/code&gt; - Ability to specify the database on connection. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FOUND_ROWS&lt;/code&gt; - Send the found rows instead of the affected rows as &lt;code&gt;affectedRows&lt;/code&gt;. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IGNORE_SIGPIPE&lt;/code&gt; - Don&#39;t issue SIGPIPE if network failures. This flag has no effect on this Node.js implementation. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IGNORE_SPACE&lt;/code&gt; - Let the parser ignore spaces before the &lt;code&gt;(&lt;/code&gt; in queries. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;INTERACTIVE&lt;/code&gt; - Indicates to the MySQL server this is an &quot;interactive&quot; client. This will use the interactive timeouts on the MySQL server and report as interactive in the process list. (Default off)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOCAL_FILES&lt;/code&gt; - Can use &lt;code&gt;LOAD DATA LOCAL&lt;/code&gt;. This flag is controlled by the connection option &lt;code&gt;localInfile&lt;/code&gt;. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LONG_FLAG&lt;/code&gt; - Longer flags in Protocol::ColumnDefinition320. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LONG_PASSWORD&lt;/code&gt; - Use the improved version of Old Password Authentication. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MULTI_RESULTS&lt;/code&gt; - Can handle multiple resultsets for queries. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MULTI_STATEMENTS&lt;/code&gt; - The client may send multiple statement per query or statement prepare (separated by &lt;code&gt;;&lt;/code&gt;). This flag is controlled by the connection option &lt;code&gt;multipleStatements&lt;/code&gt;. (Default off)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NO_SCHEMA&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ODBC&lt;/code&gt; Special handling of ODBC behaviour. This flag has no effect on this Node.js implementation. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PLUGIN_AUTH&lt;/code&gt; - Uses the plugin authentication mechanism when connecting to the MySQL server. This feature is not currently supported by the Node.js implementation so cannot be turned on. (Default off)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PROTOCOL_41&lt;/code&gt; - Uses the 4.1 protocol. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PS_MULTI_RESULTS&lt;/code&gt; - Can handle multiple resultsets for execute. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;REMEMBER_OPTIONS&lt;/code&gt; - This is specific to the C client, and has no effect on this Node.js implementation. (Default off)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RESERVED&lt;/code&gt; - Old flag for the 4.1 protocol. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SECURE_CONNECTION&lt;/code&gt; - Support native 4.1 authentication. (Default on)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SSL&lt;/code&gt; - Use SSL after handshake to encrypt data in transport. This feature is controlled though the &lt;code&gt;ssl&lt;/code&gt; connection option, so the flag has no effect. (Default off)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SSL_VERIFY_SERVER_CERT&lt;/code&gt; - Verify the server certificate during SSL set up. This feature is controlled though the &lt;code&gt;ssl.rejectUnauthorized&lt;/code&gt; connection option, so the flag has no effect. (Default off)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TRANSACTIONS&lt;/code&gt; - Asks for the transaction status flags. (Default on)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Terminating connections&lt;/h2&gt; 
&lt;p&gt;There are two ways to end a connection. Terminating a connection gracefully is done by calling the &lt;code&gt;end()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.end(function(err) {
  // The connection is terminated now
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will make sure all previously enqueued queries are still before sending a &lt;code&gt;COM_QUIT&lt;/code&gt; packet to the MySQL server. If a fatal error occurs before the &lt;code&gt;COM_QUIT&lt;/code&gt; packet can be sent, an &lt;code&gt;err&lt;/code&gt; argument will be provided to the callback, but the connection will be terminated regardless of that.&lt;/p&gt; 
&lt;p&gt;An alternative way to end the connection is to call the &lt;code&gt;destroy()&lt;/code&gt; method. This will cause an immediate termination of the underlying socket. Additionally &lt;code&gt;destroy()&lt;/code&gt; guarantees that no more events or callbacks will be triggered for the connection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.destroy();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unlike &lt;code&gt;end()&lt;/code&gt; the &lt;code&gt;destroy()&lt;/code&gt; method does not take a callback argument.&lt;/p&gt; 
&lt;h2&gt;Pooling connections&lt;/h2&gt; 
&lt;p&gt;Rather than creating and managing connections one-by-one, this module also provides built-in connection pooling using &lt;code&gt;mysql.createPool(config)&lt;/code&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Connection_pool&quot;&gt;Read more about connection pooling&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Create a pool and use it directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var mysql = require(&#39;mysql&#39;);
var pool  = mysql.createPool({
  connectionLimit : 10,
  host            : &#39;example.org&#39;,
  user            : &#39;bob&#39;,
  password        : &#39;secret&#39;,
  database        : &#39;my_db&#39;
});

pool.query(&#39;SELECT 1 + 1 AS solution&#39;, function (error, results, fields) {
  if (error) throw error;
  console.log(&#39;The solution is: &#39;, results[0].solution);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is a shortcut for the &lt;code&gt;pool.getConnection()&lt;/code&gt; -&amp;gt; &lt;code&gt;connection.query()&lt;/code&gt; -&amp;gt; &lt;code&gt;connection.release()&lt;/code&gt; code flow. Using &lt;code&gt;pool.getConnection()&lt;/code&gt; is useful to share connection state for subsequent queries. This is because two calls to &lt;code&gt;pool.query()&lt;/code&gt; may use two different connections and run in parallel. This is the basic structure:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var mysql = require(&#39;mysql&#39;);
var pool  = mysql.createPool(...);

pool.getConnection(function(err, connection) {
  if (err) throw err; // not connected!

  // Use the connection
  connection.query(&#39;SELECT something FROM sometable&#39;, function (error, results, fields) {
    // When done with the connection, release it.
    connection.release();

    // Handle error after the release.
    if (error) throw error;

    // Don&#39;t use the connection here, it has been returned to the pool.
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you would like to close the connection and remove it from the pool, use &lt;code&gt;connection.destroy()&lt;/code&gt; instead. The pool will create a new connection the next time one is needed.&lt;/p&gt; 
&lt;p&gt;Connections are lazily created by the pool. If you configure the pool to allow up to 100 connections, but only ever use 5 simultaneously, only 5 connections will be made. Connections are also cycled round-robin style, with connections being taken from the top of the pool and returning to the bottom.&lt;/p&gt; 
&lt;p&gt;When a previous connection is retrieved from the pool, a ping packet is sent to the server to check if the connection is still good.&lt;/p&gt; 
&lt;h2&gt;Pool options&lt;/h2&gt; 
&lt;p&gt;Pools accept all the same &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#connection-options&quot;&gt;options as a connection&lt;/a&gt;. When creating a new connection, the options are simply passed to the connection constructor. In addition to those options pools accept a few extras:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;acquireTimeout&lt;/code&gt;: The milliseconds before a timeout occurs during the connection acquisition. This is slightly different from &lt;code&gt;connectTimeout&lt;/code&gt;, because acquiring a pool connection does not always involve making a connection. If a connection request is queued, the time the request spends in the queue does not count towards this timeout. (Default: &lt;code&gt;10000&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;waitForConnections&lt;/code&gt;: Determines the pool&#39;s action when no connections are available and the limit has been reached. If &lt;code&gt;true&lt;/code&gt;, the pool will queue the connection request and call it when one becomes available. If &lt;code&gt;false&lt;/code&gt;, the pool will immediately call back with an error. (Default: &lt;code&gt;true&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;connectionLimit&lt;/code&gt;: The maximum number of connections to create at once. (Default: &lt;code&gt;10&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;queueLimit&lt;/code&gt;: The maximum number of connection requests the pool will queue before returning an error from &lt;code&gt;getConnection&lt;/code&gt;. If set to &lt;code&gt;0&lt;/code&gt;, there is no limit to the number of queued connection requests. (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pool events&lt;/h2&gt; 
&lt;h3&gt;acquire&lt;/h3&gt; 
&lt;p&gt;The pool will emit an &lt;code&gt;acquire&lt;/code&gt; event when a connection is acquired from the pool. This is called after all acquiring activity has been performed on the connection, right before the connection is handed to the callback of the acquiring code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;pool.on(&#39;acquire&#39;, function (connection) {
  console.log(&#39;Connection %d acquired&#39;, connection.threadId);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;connection&lt;/h3&gt; 
&lt;p&gt;The pool will emit a &lt;code&gt;connection&lt;/code&gt; event when a new connection is made within the pool. If you need to set session variables on the connection before it gets used, you can listen to the &lt;code&gt;connection&lt;/code&gt; event.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;pool.on(&#39;connection&#39;, function (connection) {
  connection.query(&#39;SET SESSION auto_increment_increment=1&#39;)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;enqueue&lt;/h3&gt; 
&lt;p&gt;The pool will emit an &lt;code&gt;enqueue&lt;/code&gt; event when a callback has been queued to wait for an available connection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;pool.on(&#39;enqueue&#39;, function () {
  console.log(&#39;Waiting for available connection slot&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;release&lt;/h3&gt; 
&lt;p&gt;The pool will emit a &lt;code&gt;release&lt;/code&gt; event when a connection is released back to the pool. This is called after all release activity has been performed on the connection, so the connection will be listed as free at the time of the event.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;pool.on(&#39;release&#39;, function (connection) {
  console.log(&#39;Connection %d released&#39;, connection.threadId);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Closing all the connections in a pool&lt;/h2&gt; 
&lt;p&gt;When you are done using the pool, you have to end all the connections or the Node.js event loop will stay active until the connections are closed by the MySQL server. This is typically done if the pool is used in a script or when trying to gracefully shutdown a server. To end all the connections in the pool, use the &lt;code&gt;end&lt;/code&gt; method on the pool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;pool.end(function (err) {
  // all connections in the pool have ended
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;end&lt;/code&gt; method takes an &lt;em&gt;optional&lt;/em&gt; callback that you can use to know when all the connections are ended.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Once &lt;code&gt;pool.end&lt;/code&gt; is called, &lt;code&gt;pool.getConnection&lt;/code&gt; and other operations can no longer be performed.&lt;/strong&gt; Wait until all connections in the pool are released before calling &lt;code&gt;pool.end&lt;/code&gt;. If you use the shortcut method &lt;code&gt;pool.query&lt;/code&gt;, in place of &lt;code&gt;pool.getConnection&lt;/code&gt; → &lt;code&gt;connection.query&lt;/code&gt; → &lt;code&gt;connection.release&lt;/code&gt;, wait until it completes.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pool.end&lt;/code&gt; calls &lt;code&gt;connection.end&lt;/code&gt; on every active connection in the pool. This queues a &lt;code&gt;QUIT&lt;/code&gt; packet on the connection and sets a flag to prevent &lt;code&gt;pool.getConnection&lt;/code&gt; from creating new connections. All commands / queries already in progress will complete, but new commands won&#39;t execute.&lt;/p&gt; 
&lt;h2&gt;PoolCluster&lt;/h2&gt; 
&lt;p&gt;PoolCluster provides multiple hosts connection. (group &amp;amp; retry &amp;amp; selector)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// create
var poolCluster = mysql.createPoolCluster();

// add configurations (the config is a pool config object)
poolCluster.add(config); // add configuration with automatic name
poolCluster.add(&#39;MASTER&#39;, masterConfig); // add a named configuration
poolCluster.add(&#39;SLAVE1&#39;, slave1Config);
poolCluster.add(&#39;SLAVE2&#39;, slave2Config);

// remove configurations
poolCluster.remove(&#39;SLAVE2&#39;); // By nodeId
poolCluster.remove(&#39;SLAVE*&#39;); // By target group : SLAVE1-2

// Target Group : ALL(anonymous, MASTER, SLAVE1-2), Selector : round-robin(default)
poolCluster.getConnection(function (err, connection) {});

// Target Group : MASTER, Selector : round-robin
poolCluster.getConnection(&#39;MASTER&#39;, function (err, connection) {});

// Target Group : SLAVE1-2, Selector : order
// If can&#39;t connect to SLAVE1, return SLAVE2. (remove SLAVE1 in the cluster)
poolCluster.on(&#39;remove&#39;, function (nodeId) {
  console.log(&#39;REMOVED NODE : &#39; + nodeId); // nodeId = SLAVE1
});

// A pattern can be passed with *  as wildcard
poolCluster.getConnection(&#39;SLAVE*&#39;, &#39;ORDER&#39;, function (err, connection) {});

// The pattern can also be a regular expression
poolCluster.getConnection(/^SLAVE[12]$/, function (err, connection) {});

// of namespace : of(pattern, selector)
poolCluster.of(&#39;*&#39;).getConnection(function (err, connection) {});

var pool = poolCluster.of(&#39;SLAVE*&#39;, &#39;RANDOM&#39;);
pool.getConnection(function (err, connection) {});
pool.getConnection(function (err, connection) {});
pool.query(function (error, results, fields) {});

// close all connections
poolCluster.end(function (err) {
  // all connections in the pool cluster have ended
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PoolCluster options&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;canRetry&lt;/code&gt;: If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;PoolCluster&lt;/code&gt; will attempt to reconnect when connection fails. (Default: &lt;code&gt;true&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;removeNodeErrorCount&lt;/code&gt;: If connection fails, node&#39;s &lt;code&gt;errorCount&lt;/code&gt; increases. When &lt;code&gt;errorCount&lt;/code&gt; is greater than &lt;code&gt;removeNodeErrorCount&lt;/code&gt;, remove a node in the &lt;code&gt;PoolCluster&lt;/code&gt;. (Default: &lt;code&gt;5&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;restoreNodeTimeout&lt;/code&gt;: If connection fails, specifies the number of milliseconds before another connection attempt will be made. If set to &lt;code&gt;0&lt;/code&gt;, then node will be removed instead and never re-used. (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;defaultSelector&lt;/code&gt;: The default selector. (Default: &lt;code&gt;RR&lt;/code&gt;) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;RR&lt;/code&gt;: Select one alternately. (Round-Robin)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;RANDOM&lt;/code&gt;: Select the node by random function.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ORDER&lt;/code&gt;: Select the first node available unconditionally.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var clusterConfig = {
  removeNodeErrorCount: 1, // Remove the node immediately when connection fails.
  defaultSelector: &#39;ORDER&#39;
};

var poolCluster = mysql.createPoolCluster(clusterConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Switching users and altering connection state&lt;/h2&gt; 
&lt;p&gt;MySQL offers a changeUser command that allows you to alter the current user and other aspects of the connection without shutting down the underlying socket:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.changeUser({user : &#39;john&#39;}, function(err) {
  if (err) throw err;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The available options for this feature are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;user&lt;/code&gt;: The name of the new user (defaults to the previous one).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;password&lt;/code&gt;: The password of the new user (defaults to the previous one).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;charset&lt;/code&gt;: The new charset (defaults to the previous one).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;database&lt;/code&gt;: The new database (defaults to the previous one).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A sometimes useful side effect of this functionality is that this function also resets any connection state (variables, transactions, etc.).&lt;/p&gt; 
&lt;p&gt;Errors encountered during this operation are treated as fatal connection errors by this module.&lt;/p&gt; 
&lt;h2&gt;Server disconnects&lt;/h2&gt; 
&lt;p&gt;You may lose the connection to a MySQL server due to network problems, the server timing you out, the server being restarted, or crashing. All of these events are considered fatal errors, and will have the &lt;code&gt;err.code = &#39;PROTOCOL_CONNECTION_LOST&#39;&lt;/code&gt;. See the &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#error-handling&quot;&gt;Error Handling&lt;/a&gt; section for more information.&lt;/p&gt; 
&lt;p&gt;Re-connecting a connection is done by establishing a new connection. Once terminated, an existing connection object cannot be re-connected by design.&lt;/p&gt; 
&lt;p&gt;With Pool, disconnected connections will be removed from the pool freeing up space for a new connection to be created on the next getConnection call.&lt;/p&gt; 
&lt;p&gt;With PoolCluster, disconnected connections will count as errors against the related node, incrementing the error code for that node. Once there are more than &lt;code&gt;removeNodeErrorCount&lt;/code&gt; errors on a given node, it is removed from the cluster. When this occurs, the PoolCluster may emit a &lt;code&gt;POOL_NONEONLINE&lt;/code&gt; error if there are no longer any matching nodes for the pattern. The &lt;code&gt;restoreNodeTimeout&lt;/code&gt; config can be set to restore offline nodes after a given timeout.&lt;/p&gt; 
&lt;h2&gt;Performing queries&lt;/h2&gt; 
&lt;p&gt;The most basic way to perform a query is to call the &lt;code&gt;.query()&lt;/code&gt; method on an object (like a &lt;code&gt;Connection&lt;/code&gt;, &lt;code&gt;Pool&lt;/code&gt;, or &lt;code&gt;PoolNamespace&lt;/code&gt; instance).&lt;/p&gt; 
&lt;p&gt;The simplest form of .&lt;code&gt;query()&lt;/code&gt; is &lt;code&gt;.query(sqlString, callback)&lt;/code&gt;, where a SQL string is the first argument and the second is a callback:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;SELECT * FROM `books` WHERE `author` = &quot;David&quot;&#39;, function (error, results, fields) {
  // error will be an Error if one occurred during the query
  // results will contain the results of the query
  // fields will contain information about the returned results fields (if any)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The second form &lt;code&gt;.query(sqlString, values, callback)&lt;/code&gt; comes when using placeholder values (see &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#escaping-query-values&quot;&gt;escaping query values&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;SELECT * FROM `books` WHERE `author` = ?&#39;, [&#39;David&#39;], function (error, results, fields) {
  // error will be an Error if one occurred during the query
  // results will contain the results of the query
  // fields will contain information about the returned results fields (if any)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The third form &lt;code&gt;.query(options, callback)&lt;/code&gt; comes when using various advanced options on the query, like &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#escaping-query-values&quot;&gt;escaping query values&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#joins-with-overlapping-column-names&quot;&gt;joins with overlapping column names&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#timeouts&quot;&gt;timeouts&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#type-casting&quot;&gt;type casting&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query({
  sql: &#39;SELECT * FROM `books` WHERE `author` = ?&#39;,
  timeout: 40000, // 40s
  values: [&#39;David&#39;]
}, function (error, results, fields) {
  // error will be an Error if one occurred during the query
  // results will contain the results of the query
  // fields will contain information about the returned results fields (if any)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that a combination of the second and third forms can be used where the placeholder values are passed as an argument and not in the options object. The &lt;code&gt;values&lt;/code&gt; argument will override the &lt;code&gt;values&lt;/code&gt; in the option object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query({
    sql: &#39;SELECT * FROM `books` WHERE `author` = ?&#39;,
    timeout: 40000, // 40s
  },
  [&#39;David&#39;],
  function (error, results, fields) {
    // error will be an Error if one occurred during the query
    // results will contain the results of the query
    // fields will contain information about the returned results fields (if any)
  }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the query only has a single replacement character (&lt;code&gt;?&lt;/code&gt;), and the value is not &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, or an array, it can be passed directly as the second argument to &lt;code&gt;.query&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(
  &#39;SELECT * FROM `books` WHERE `author` = ?&#39;,
  &#39;David&#39;,
  function (error, results, fields) {
    // error will be an Error if one occurred during the query
    // results will contain the results of the query
    // fields will contain information about the returned results fields (if any)
  }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Escaping query values&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt; These methods of escaping values only works when the &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_no_backslash_escapes&quot;&gt;NO_BACKSLASH_ESCAPES&lt;/a&gt; SQL mode is disabled (which is the default state for MySQL servers).&lt;/p&gt; 
&lt;p&gt;In order to avoid SQL Injection attacks, you should always escape any user provided data before using it inside a SQL query. You can do so using the &lt;code&gt;mysql.escape()&lt;/code&gt;, &lt;code&gt;connection.escape()&lt;/code&gt; or &lt;code&gt;pool.escape()&lt;/code&gt; methods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var userId = &#39;some user provided value&#39;;
var sql    = &#39;SELECT * FROM users WHERE id = &#39; + connection.escape(userId);
connection.query(sql, function (error, results, fields) {
  if (error) throw error;
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use &lt;code&gt;?&lt;/code&gt; characters as placeholders for values you would like to have escaped like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;SELECT * FROM users WHERE id = ?&#39;, [userId], function (error, results, fields) {
  if (error) throw error;
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiple placeholders are mapped to values in the same order as passed. For example, in the following query &lt;code&gt;foo&lt;/code&gt; equals &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt; equals &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;baz&lt;/code&gt; equals &lt;code&gt;c&lt;/code&gt;, and &lt;code&gt;id&lt;/code&gt; will be &lt;code&gt;userId&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;UPDATE users SET foo = ?, bar = ?, baz = ? WHERE id = ?&#39;, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, userId], function (error, results, fields) {
  if (error) throw error;
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This looks similar to prepared statements in MySQL, however it really just uses the same &lt;code&gt;connection.escape()&lt;/code&gt; method internally.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt; This also differs from prepared statements in that all &lt;code&gt;?&lt;/code&gt; are replaced, even those contained in comments and strings.&lt;/p&gt; 
&lt;p&gt;Different value types are escaped differently, here is how:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Numbers are left untouched&lt;/li&gt; 
 &lt;li&gt;Booleans are converted to &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Date objects are converted to &lt;code&gt;&#39;YYYY-mm-dd HH:ii:ss&#39;&lt;/code&gt; strings&lt;/li&gt; 
 &lt;li&gt;Buffers are converted to hex strings, e.g. &lt;code&gt;X&#39;0fa5&#39;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Strings are safely escaped&lt;/li&gt; 
 &lt;li&gt;Arrays are turned into list, e.g. &lt;code&gt;[&#39;a&#39;, &#39;b&#39;]&lt;/code&gt; turns into &lt;code&gt;&#39;a&#39;, &#39;b&#39;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Nested arrays are turned into grouped lists (for bulk inserts), e.g. &lt;code&gt;[[&#39;a&#39;, &#39;b&#39;], [&#39;c&#39;, &#39;d&#39;]]&lt;/code&gt; turns into &lt;code&gt;(&#39;a&#39;, &#39;b&#39;), (&#39;c&#39;, &#39;d&#39;)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Objects that have a &lt;code&gt;toSqlString&lt;/code&gt; method will have &lt;code&gt;.toSqlString()&lt;/code&gt; called and the returned value is used as the raw SQL.&lt;/li&gt; 
 &lt;li&gt;Objects are turned into &lt;code&gt;key = &#39;val&#39;&lt;/code&gt; pairs for each enumerable property on the object. If the property&#39;s value is a function, it is skipped; if the property&#39;s value is an object, toString() is called on it and the returned value is used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt; / &lt;code&gt;null&lt;/code&gt; are converted to &lt;code&gt;NULL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NaN&lt;/code&gt; / &lt;code&gt;Infinity&lt;/code&gt; are left as-is. MySQL does not support these, and trying to insert them as values will trigger MySQL errors until they implement support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This escaping allows you to do neat things like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var post  = {id: 1, title: &#39;Hello MySQL&#39;};
var query = connection.query(&#39;INSERT INTO posts SET ?&#39;, post, function (error, results, fields) {
  if (error) throw error;
  // Neat!
});
console.log(query.sql); // INSERT INTO posts SET `id` = 1, `title` = &#39;Hello MySQL&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And the &lt;code&gt;toSqlString&lt;/code&gt; method allows you to form complex queries with functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var CURRENT_TIMESTAMP = { toSqlString: function() { return &#39;CURRENT_TIMESTAMP()&#39;; } };
var sql = mysql.format(&#39;UPDATE posts SET modified = ? WHERE id = ?&#39;, [CURRENT_TIMESTAMP, 42]);
console.log(sql); // UPDATE posts SET modified = CURRENT_TIMESTAMP() WHERE id = 42
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To generate objects with a &lt;code&gt;toSqlString&lt;/code&gt; method, the &lt;code&gt;mysql.raw()&lt;/code&gt; method can be used. This creates an object that will be left un-touched when using in a &lt;code&gt;?&lt;/code&gt; placeholder, useful for using functions as dynamic values:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt; The string provided to &lt;code&gt;mysql.raw()&lt;/code&gt; will skip all escaping functions when used, so be careful when passing in unvalidated input.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var CURRENT_TIMESTAMP = mysql.raw(&#39;CURRENT_TIMESTAMP()&#39;);
var sql = mysql.format(&#39;UPDATE posts SET modified = ? WHERE id = ?&#39;, [CURRENT_TIMESTAMP, 42]);
console.log(sql); // UPDATE posts SET modified = CURRENT_TIMESTAMP() WHERE id = 42
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you feel the need to escape queries by yourself, you can also use the escaping function directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var query = &quot;SELECT * FROM posts WHERE title=&quot; + mysql.escape(&quot;Hello MySQL&quot;);

console.log(query); // SELECT * FROM posts WHERE title=&#39;Hello MySQL&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Escaping query identifiers&lt;/h2&gt; 
&lt;p&gt;If you can&#39;t trust an SQL identifier (database / table / column name) because it is provided by a user, you should escape it with &lt;code&gt;mysql.escapeId(identifier)&lt;/code&gt;, &lt;code&gt;connection.escapeId(identifier)&lt;/code&gt; or &lt;code&gt;pool.escapeId(identifier)&lt;/code&gt; like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var sorter = &#39;date&#39;;
var sql    = &#39;SELECT * FROM posts ORDER BY &#39; + connection.escapeId(sorter);
connection.query(sql, function (error, results, fields) {
  if (error) throw error;
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It also supports adding qualified identifiers. It will escape both parts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var sorter = &#39;date&#39;;
var sql    = &#39;SELECT * FROM posts ORDER BY &#39; + connection.escapeId(&#39;posts.&#39; + sorter);
// -&amp;gt; SELECT * FROM posts ORDER BY `posts`.`date`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do not want to treat &lt;code&gt;.&lt;/code&gt; as qualified identifiers, you can set the second argument to &lt;code&gt;true&lt;/code&gt; in order to keep the string as a literal identifier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var sorter = &#39;date.2&#39;;
var sql    = &#39;SELECT * FROM posts ORDER BY &#39; + connection.escapeId(sorter, true);
// -&amp;gt; SELECT * FROM posts ORDER BY `date.2`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use &lt;code&gt;??&lt;/code&gt; characters as placeholders for identifiers you would like to have escaped like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var userId = 1;
var columns = [&#39;username&#39;, &#39;email&#39;];
var query = connection.query(&#39;SELECT ?? FROM ?? WHERE id = ?&#39;, [columns, &#39;users&#39;, userId], function (error, results, fields) {
  if (error) throw error;
  // ...
});

console.log(query.sql); // SELECT `username`, `email` FROM `users` WHERE id = 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Please note that this last character sequence is experimental and syntax might change&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;When you pass an Object to &lt;code&gt;.escape()&lt;/code&gt; or &lt;code&gt;.query()&lt;/code&gt;, &lt;code&gt;.escapeId()&lt;/code&gt; is used to avoid SQL injection in object keys.&lt;/p&gt; 
&lt;h3&gt;Preparing Queries&lt;/h3&gt; 
&lt;p&gt;You can use mysql.format to prepare a query with multiple insertion points, utilizing the proper escaping for ids and values. A simple example of this follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var sql = &quot;SELECT * FROM ?? WHERE ?? = ?&quot;;
var inserts = [&#39;users&#39;, &#39;id&#39;, userId];
sql = mysql.format(sql, inserts);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Following this you then have a valid, escaped query that you can then send to the database safely. This is useful if you are looking to prepare the query before actually sending it to the database. As mysql.format is exposed from SqlString.format you also have the option (but are not required) to pass in stringifyObject and timezone, allowing you provide a custom means of turning objects into strings, as well as a location-specific/timezone-aware Date.&lt;/p&gt; 
&lt;h3&gt;Custom format&lt;/h3&gt; 
&lt;p&gt;If you prefer to have another type of query escape format, there&#39;s a connection configuration option you can use to define a custom format function. You can access the connection object if you want to use the built-in &lt;code&gt;.escape()&lt;/code&gt; or any other connection function.&lt;/p&gt; 
&lt;p&gt;Here&#39;s an example of how to implement another format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.config.queryFormat = function (query, values) {
  if (!values) return query;
  return query.replace(/\:(\w+)/g, function (txt, key) {
    if (values.hasOwnProperty(key)) {
      return this.escape(values[key]);
    }
    return txt;
  }.bind(this));
};

connection.query(&quot;UPDATE posts SET title = :title&quot;, { title: &quot;Hello MySQL&quot; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting the id of an inserted row&lt;/h2&gt; 
&lt;p&gt;If you are inserting a row into a table with an auto increment primary key, you can retrieve the insert id like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;INSERT INTO posts SET ?&#39;, {title: &#39;test&#39;}, function (error, results, fields) {
  if (error) throw error;
  console.log(results.insertId);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When dealing with big numbers (above JavaScript Number precision limit), you should consider enabling &lt;code&gt;supportBigNumbers&lt;/code&gt; option to be able to read the insert id as a string, otherwise it will throw an error.&lt;/p&gt; 
&lt;p&gt;This option is also required when fetching big numbers from the database, otherwise you will get values rounded to hundreds or thousands due to the precision limit.&lt;/p&gt; 
&lt;h2&gt;Getting the number of affected rows&lt;/h2&gt; 
&lt;p&gt;You can get the number of affected rows from an insert, update or delete statement.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;DELETE FROM posts WHERE title = &quot;wrong&quot;&#39;, function (error, results, fields) {
  if (error) throw error;
  console.log(&#39;deleted &#39; + results.affectedRows + &#39; rows&#39;);
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting the number of changed rows&lt;/h2&gt; 
&lt;p&gt;You can get the number of changed rows from an update statement.&lt;/p&gt; 
&lt;p&gt;&quot;changedRows&quot; differs from &quot;affectedRows&quot; in that it does not count updated rows whose values were not changed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;UPDATE posts SET ...&#39;, function (error, results, fields) {
  if (error) throw error;
  console.log(&#39;changed &#39; + results.changedRows + &#39; rows&#39;);
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting the connection ID&lt;/h2&gt; 
&lt;p&gt;You can get the MySQL connection ID (&quot;thread ID&quot;) of a given connection using the &lt;code&gt;threadId&lt;/code&gt; property.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.connect(function(err) {
  if (err) throw err;
  console.log(&#39;connected as id &#39; + connection.threadId);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Executing queries in parallel&lt;/h2&gt; 
&lt;p&gt;The MySQL protocol is sequential, this means that you need multiple connections to execute queries in parallel. You can use a Pool to manage connections, one simple approach is to create one connection per incoming http request.&lt;/p&gt; 
&lt;h2&gt;Streaming query rows&lt;/h2&gt; 
&lt;p&gt;Sometimes you may want to select large quantities of rows and process each of them as they are received. This can be done like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var query = connection.query(&#39;SELECT * FROM posts&#39;);
query
  .on(&#39;error&#39;, function(err) {
    // Handle error, an &#39;end&#39; event will be emitted after this as well
  })
  .on(&#39;fields&#39;, function(fields) {
    // the field packets for the rows to follow
  })
  .on(&#39;result&#39;, function(row) {
    // Pausing the connnection is useful if your processing involves I/O
    connection.pause();

    processRow(row, function() {
      connection.resume();
    });
  })
  .on(&#39;end&#39;, function() {
    // all rows have been received
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note a few things about the example above:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usually you will want to receive a certain amount of rows before starting to throttle the connection using &lt;code&gt;pause()&lt;/code&gt;. This number will depend on the amount and size of your rows.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pause()&lt;/code&gt; / &lt;code&gt;resume()&lt;/code&gt; operate on the underlying socket and parser. You are guaranteed that no more &lt;code&gt;&#39;result&#39;&lt;/code&gt; events will fire after calling &lt;code&gt;pause()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;You MUST NOT provide a callback to the &lt;code&gt;query()&lt;/code&gt; method when streaming rows.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;&#39;result&#39;&lt;/code&gt; event will fire for both rows as well as OK packets confirming the success of a INSERT/UPDATE query.&lt;/li&gt; 
 &lt;li&gt;It is very important not to leave the result paused too long, or you may encounter &lt;code&gt;Error: Connection lost: The server closed the connection.&lt;/code&gt; The time limit for this is determined by the &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_net_write_timeout&quot;&gt;net_write_timeout setting&lt;/a&gt; on your MySQL server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additionally you may be interested to know that it is currently not possible to stream individual row columns, they will always be buffered up entirely. If you have a good use case for streaming large fields to and from MySQL, I&#39;d love to get your thoughts and contributions on this.&lt;/p&gt; 
&lt;h3&gt;Piping results with Streams&lt;/h3&gt; 
&lt;p&gt;The query object provides a convenience method &lt;code&gt;.stream([options])&lt;/code&gt; that wraps query events into a &lt;a href=&quot;http://nodejs.org/api/stream.html#stream_class_stream_readable&quot;&gt;Readable Stream&lt;/a&gt; object. This stream can easily be piped downstream and provides automatic pause/resume, based on downstream congestion and the optional &lt;code&gt;highWaterMark&lt;/code&gt;. The &lt;code&gt;objectMode&lt;/code&gt; parameter of the stream is set to &lt;code&gt;true&lt;/code&gt; and cannot be changed (if you need a byte stream, you will need to use a transform stream, like &lt;a href=&quot;https://www.npmjs.com/package/objstream&quot;&gt;objstream&lt;/a&gt; for example).&lt;/p&gt; 
&lt;p&gt;For example, piping query results into another stream (with a max buffer of 5 objects) is simply:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;SELECT * FROM posts&#39;)
  .stream({highWaterMark: 5})
  .pipe(...);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Multiple statement queries&lt;/h2&gt; 
&lt;p&gt;Support for multiple statements is disabled for security reasons (it allows for SQL injection attacks if values are not properly escaped). To use this feature you have to enable it for your connection:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = mysql.createConnection({multipleStatements: true});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once enabled, you can execute multiple statement queries like any other query:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;SELECT 1; SELECT 2&#39;, function (error, results, fields) {
  if (error) throw error;
  // `results` is an array with one element for every statement in the query:
  console.log(results[0]); // [{1: 1}]
  console.log(results[1]); // [{2: 2}]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally you can also stream the results of multiple statement queries:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var query = connection.query(&#39;SELECT 1; SELECT 2&#39;);

query
  .on(&#39;fields&#39;, function(fields, index) {
    // the fields for the result rows that follow
  })
  .on(&#39;result&#39;, function(row, index) {
    // index refers to the statement this result belongs to (starts at 0)
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If one of the statements in your query causes an error, the resulting Error object contains a &lt;code&gt;err.index&lt;/code&gt; property which tells you which statement caused it. MySQL will also stop executing any remaining statements when an error occurs.&lt;/p&gt; 
&lt;p&gt;Please note that the interface for streaming multiple statement queries is experimental and I am looking forward to feedback on it.&lt;/p&gt; 
&lt;h2&gt;Stored procedures&lt;/h2&gt; 
&lt;p&gt;You can call stored procedures from your queries as with any other mysql driver. If the stored procedure produces several result sets, they are exposed to you the same way as the results for multiple statement queries.&lt;/p&gt; 
&lt;h2&gt;Joins with overlapping column names&lt;/h2&gt; 
&lt;p&gt;When executing joins, you are likely to get result sets with overlapping column names.&lt;/p&gt; 
&lt;p&gt;By default, node-mysql will overwrite colliding column names in the order the columns are received from MySQL, causing some of the received values to be unavailable.&lt;/p&gt; 
&lt;p&gt;However, you can also specify that you want your columns to be nested below the table name like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var options = {sql: &#39;...&#39;, nestTables: true};
connection.query(options, function (error, results, fields) {
  if (error) throw error;
  /* results will be an array like this now:
  [{
    table1: {
      fieldA: &#39;...&#39;,
      fieldB: &#39;...&#39;,
    },
    table2: {
      fieldA: &#39;...&#39;,
      fieldB: &#39;...&#39;,
    },
  }, ...]
  */
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use a string separator to have your results merged.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var options = {sql: &#39;...&#39;, nestTables: &#39;_&#39;};
connection.query(options, function (error, results, fields) {
  if (error) throw error;
  /* results will be an array like this now:
  [{
    table1_fieldA: &#39;...&#39;,
    table1_fieldB: &#39;...&#39;,
    table2_fieldA: &#39;...&#39;,
    table2_fieldB: &#39;...&#39;,
  }, ...]
  */
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Transactions&lt;/h2&gt; 
&lt;p&gt;Simple transaction support is available at the connection level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.beginTransaction(function(err) {
  if (err) { throw err; }
  connection.query(&#39;INSERT INTO posts SET title=?&#39;, title, function (error, results, fields) {
    if (error) {
      return connection.rollback(function() {
        throw error;
      });
    }

    var log = &#39;Post &#39; + results.insertId + &#39; added&#39;;

    connection.query(&#39;INSERT INTO log SET data=?&#39;, log, function (error, results, fields) {
      if (error) {
        return connection.rollback(function() {
          throw error;
        });
      }
      connection.commit(function(err) {
        if (err) {
          return connection.rollback(function() {
            throw err;
          });
        }
        console.log(&#39;success!&#39;);
      });
    });
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that beginTransaction(), commit() and rollback() are simply convenience functions that execute the START TRANSACTION, COMMIT, and ROLLBACK commands respectively. It is important to understand that many commands in MySQL can cause an implicit commit, as described &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/implicit-commit.html&quot;&gt;in the MySQL documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Ping&lt;/h2&gt; 
&lt;p&gt;A ping packet can be sent over a connection using the &lt;code&gt;connection.ping&lt;/code&gt; method. This method will send a ping packet to the server and when the server responds, the callback will fire. If an error occurred, the callback will fire with an error argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.ping(function (err) {
  if (err) throw err;
  console.log(&#39;Server responded to ping&#39;);
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Timeouts&lt;/h2&gt; 
&lt;p&gt;Every operation takes an optional inactivity timeout option. This allows you to specify appropriate timeouts for operations. It is important to note that these timeouts are not part of the MySQL protocol, and rather timeout operations through the client. This means that when a timeout is reached, the connection it occurred on will be destroyed and no further operations can be performed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Kill query after 60s
connection.query({sql: &#39;SELECT COUNT(*) AS count FROM big_table&#39;, timeout: 60000}, function (error, results, fields) {
  if (error &amp;amp;&amp;amp; error.code === &#39;PROTOCOL_SEQUENCE_TIMEOUT&#39;) {
    throw new Error(&#39;too long to count table rows!&#39;);
  }

  if (error) {
    throw error;
  }

  console.log(results[0].count + &#39; rows&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Error handling&lt;/h2&gt; 
&lt;p&gt;This module comes with a consistent approach to error handling that you should review carefully in order to write solid applications.&lt;/p&gt; 
&lt;p&gt;Most errors created by this module are instances of the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error&quot;&gt;Error&lt;/a&gt; object. Additionally they typically come with two extra properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;err.code&lt;/code&gt;: String, contains the MySQL server error symbol if the error is a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.5/en/server-error-reference.html&quot;&gt;MySQL server error&lt;/a&gt; (e.g. &lt;code&gt;&#39;ER_ACCESS_DENIED_ERROR&#39;&lt;/code&gt;), a Node.js error code if it is a Node.js error (e.g. &lt;code&gt;&#39;ECONNREFUSED&#39;&lt;/code&gt;), or an internal error code (e.g. &lt;code&gt;&#39;PROTOCOL_CONNECTION_LOST&#39;&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;err.errno&lt;/code&gt;: Number, contains the MySQL server error number. Only populated from &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.5/en/server-error-reference.html&quot;&gt;MySQL server error&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;err.fatal&lt;/code&gt;: Boolean, indicating if this error is terminal to the connection object. If the error is not from a MySQL protocol operation, this property will not be defined.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;err.sql&lt;/code&gt;: String, contains the full SQL of the failed query. This can be useful when using a higher level interface like an ORM that is generating the queries.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;err.sqlState&lt;/code&gt;: String, contains the five-character SQLSTATE value. Only populated from &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.5/en/server-error-reference.html&quot;&gt;MySQL server error&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;err.sqlMessage&lt;/code&gt;: String, contains the message string that provides a textual description of the error. Only populated from &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.5/en/server-error-reference.html&quot;&gt;MySQL server error&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Fatal errors are propagated to &lt;em&gt;all&lt;/em&gt; pending callbacks. In the example below, a fatal error is triggered by trying to connect to an invalid port. Therefore the error object is propagated to both pending callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = require(&#39;mysql&#39;).createConnection({
  port: 84943, // WRONG PORT
});

connection.connect(function(err) {
  console.log(err.code); // &#39;ECONNREFUSED&#39;
  console.log(err.fatal); // true
});

connection.query(&#39;SELECT 1&#39;, function (error, results, fields) {
  console.log(error.code); // &#39;ECONNREFUSED&#39;
  console.log(error.fatal); // true
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Normal errors however are only delegated to the callback they belong to. So in the example below, only the first callback receives an error, the second query works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.query(&#39;USE name_of_db_that_does_not_exist&#39;, function (error, results, fields) {
  console.log(error.code); // &#39;ER_BAD_DB_ERROR&#39;
});

connection.query(&#39;SELECT 1&#39;, function (error, results, fields) {
  console.log(error); // null
  console.log(results.length); // 1
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Last but not least: If a fatal errors occurs and there are no pending callbacks, or a normal error occurs which has no callback belonging to it, the error is emitted as an &lt;code&gt;&#39;error&#39;&lt;/code&gt; event on the connection object. This is demonstrated in the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection.on(&#39;error&#39;, function(err) {
  console.log(err.code); // &#39;ER_BAD_DB_ERROR&#39;
});

connection.query(&#39;USE name_of_db_that_does_not_exist&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: &lt;code&gt;&#39;error&#39;&lt;/code&gt; events are special in node. If they occur without an attached listener, a stack trace is printed and your process is killed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; This module does not want you to deal with silent failures. You should always provide callbacks to your method calls. If you want to ignore this advice and suppress unhandled errors, you can do this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// I am Chuck Norris:
connection.on(&#39;error&#39;, function() {});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Exception Safety&lt;/h2&gt; 
&lt;p&gt;This module is exception safe. That means you can continue to use it, even if one of your callback functions throws an error which you&#39;re catching using &#39;uncaughtException&#39; or a domain.&lt;/p&gt; 
&lt;h2&gt;Type casting&lt;/h2&gt; 
&lt;p&gt;For your convenience, this driver will cast mysql types into native JavaScript types by default. The following mappings exist:&lt;/p&gt; 
&lt;h3&gt;Number&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;TINYINT&lt;/li&gt; 
 &lt;li&gt;SMALLINT&lt;/li&gt; 
 &lt;li&gt;INT&lt;/li&gt; 
 &lt;li&gt;MEDIUMINT&lt;/li&gt; 
 &lt;li&gt;YEAR&lt;/li&gt; 
 &lt;li&gt;FLOAT&lt;/li&gt; 
 &lt;li&gt;DOUBLE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Date&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;TIMESTAMP&lt;/li&gt; 
 &lt;li&gt;DATE&lt;/li&gt; 
 &lt;li&gt;DATETIME&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Buffer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;TINYBLOB&lt;/li&gt; 
 &lt;li&gt;MEDIUMBLOB&lt;/li&gt; 
 &lt;li&gt;LONGBLOB&lt;/li&gt; 
 &lt;li&gt;BLOB&lt;/li&gt; 
 &lt;li&gt;BINARY&lt;/li&gt; 
 &lt;li&gt;VARBINARY&lt;/li&gt; 
 &lt;li&gt;BIT (last byte will be filled with 0 bits as necessary)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;String&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; text in the binary character set is returned as &lt;code&gt;Buffer&lt;/code&gt;, rather than a string.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CHAR&lt;/li&gt; 
 &lt;li&gt;VARCHAR&lt;/li&gt; 
 &lt;li&gt;TINYTEXT&lt;/li&gt; 
 &lt;li&gt;MEDIUMTEXT&lt;/li&gt; 
 &lt;li&gt;LONGTEXT&lt;/li&gt; 
 &lt;li&gt;TEXT&lt;/li&gt; 
 &lt;li&gt;ENUM&lt;/li&gt; 
 &lt;li&gt;SET&lt;/li&gt; 
 &lt;li&gt;DECIMAL (may exceed float precision)&lt;/li&gt; 
 &lt;li&gt;BIGINT (may exceed float precision)&lt;/li&gt; 
 &lt;li&gt;TIME (could be mapped to Date, but what date would be set?)&lt;/li&gt; 
 &lt;li&gt;GEOMETRY (never used those, get in touch if you do)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is not recommended (and may go away / change in the future) to disable type casting, but you can currently do so on either the connection:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = require(&#39;mysql&#39;).createConnection({typeCast: false});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or on the query level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var options = {sql: &#39;...&#39;, typeCast: false};
var query = connection.query(options, function (error, results, fields) {
  if (error) throw error;
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom type casting&lt;/h3&gt; 
&lt;p&gt;You can also pass a function and handle type casting yourself. You&#39;re given some column information like database, table and name and also type and length. If you just want to apply a custom type casting to a specific type you can do it and then fallback to the default.&lt;/p&gt; 
&lt;p&gt;The function is provided two arguments &lt;code&gt;field&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; and is expected to return the value for the given field by invoking the parser functions through the &lt;code&gt;field&lt;/code&gt; object.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;field&lt;/code&gt; argument is a &lt;code&gt;Field&lt;/code&gt; object and contains data about the field that need to be parsed. The following are some of the properties on a &lt;code&gt;Field&lt;/code&gt; object:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;db&lt;/code&gt; - a string of the database the field came from.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;table&lt;/code&gt; - a string of the table the field came from.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;name&lt;/code&gt; - a string of the field name.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt; - a string of the field type in all caps.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;length&lt;/code&gt; - a number of the field length, as given by the database.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;next&lt;/code&gt; argument is a &lt;code&gt;function&lt;/code&gt; that, when called, will return the default type conversion for the given field.&lt;/p&gt; 
&lt;p&gt;When getting the field data, the following helper methods are present on the &lt;code&gt;field&lt;/code&gt; object:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;.string()&lt;/code&gt; - parse the field into a string.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.buffer()&lt;/code&gt; - parse the field into a &lt;code&gt;Buffer&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.geometry()&lt;/code&gt; - parse the field as a geometry value.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The MySQL protocol is a text-based protocol. This means that over the wire, all field types are represented as a string, which is why only string-like functions are available on the &lt;code&gt;field&lt;/code&gt; object. Based on the type information (like &lt;code&gt;INT&lt;/code&gt;), the type cast should convert the string field into a different JavaScript type (like a &lt;code&gt;number&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Here&#39;s an example of converting &lt;code&gt;TINYINT(1)&lt;/code&gt; to boolean:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;connection = mysql.createConnection({
  typeCast: function (field, next) {
    if (field.type === &#39;TINY&#39; &amp;amp;&amp;amp; field.length === 1) {
      return (field.string() === &#39;1&#39;); // 1 = true, 0 = false
    } else {
      return next();
    }
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;WARNING: YOU MUST INVOKE the parser using one of these three field functions in your custom typeCast callback. They can only be called once.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Debugging and reporting problems&lt;/h2&gt; 
&lt;p&gt;If you are running into problems, one thing that may help is enabling the &lt;code&gt;debug&lt;/code&gt; mode for the connection:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = mysql.createConnection({debug: true});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will print all incoming and outgoing packets on stdout. You can also restrict debugging to packet types by passing an array of types to debug:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var connection = mysql.createConnection({debug: [&#39;ComQueryPacket&#39;, &#39;RowDataPacket&#39;]});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to restrict debugging to the query and data packets.&lt;/p&gt; 
&lt;p&gt;If that does not help, feel free to open a GitHub issue. A good GitHub issue will have:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The minimal amount of code required to reproduce the problem (if possible)&lt;/li&gt; 
 &lt;li&gt;As much debugging output and information about your environment (mysql version, node version, os, etc.) as you can gather.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security issues&lt;/h2&gt; 
&lt;p&gt;Security issues should not be first reported through GitHub or another public forum, but kept private in order for the collaborators to assess the report and either (a) devise a fix and plan a release date or (b) assert that it is not a security issue (in which case it can be posted in a public forum, like a GitHub issue).&lt;/p&gt; 
&lt;p&gt;The primary private forum is email, either by emailing the module&#39;s author or opening a GitHub issue simply asking to whom a security issues should be addressed to without disclosing the issue or type of issue.&lt;/p&gt; 
&lt;p&gt;An ideal report would include a clear indication of what the security issue is and how it would be exploited, ideally with an accompanying proof of concept (&quot;PoC&quot;) for collaborators to work against and validate potentional fixes against.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions from the community. Contributions are accepted using GitHub pull requests. If you&#39;re not familiar with making GitHub pull requests, please refer to the &lt;a href=&quot;https://help.github.com/articles/creating-a-pull-request/&quot;&gt;GitHub documentation &quot;Creating a pull request&quot;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a good pull request, we ask you provide the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Try to include a clear description of your pull request in the description. It should include the basic &quot;what&quot; and &quot;why&quot;s for the request.&lt;/li&gt; 
 &lt;li&gt;The tests should pass as best as you can. See the &lt;a href=&quot;https://raw.githubusercontent.com/mysqljs/mysql/master/#running-tests&quot;&gt;Running tests&lt;/a&gt; section on how to run the different tests. GitHub will automatically run the tests as well, to act as a safety net.&lt;/li&gt; 
 &lt;li&gt;The pull request should include tests for the change. A new feature should have tests for the new feature and bug fixes should include a test that fails without the corresponding code change and passes after they are applied. The command &lt;code&gt;npm run test-cov&lt;/code&gt; will generate a &lt;code&gt;coverage/&lt;/code&gt; folder that contains HTML pages of the code coverage, to better understand if everything you&#39;re adding is being tested.&lt;/li&gt; 
 &lt;li&gt;If the pull request is a new feature, please be sure to include all appropriate documentation additions in the &lt;code&gt;Readme.md&lt;/code&gt; file as well.&lt;/li&gt; 
 &lt;li&gt;To help ensure that your code is similar in style to the existing code, run the command &lt;code&gt;npm run lint&lt;/code&gt; and fix any displayed issues.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;p&gt;The test suite is split into two parts: unit tests and integration tests. The unit tests run on any machine while the integration tests require a MySQL server instance to be setup.&lt;/p&gt; 
&lt;h3&gt;Running unit tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ FILTER=unit npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running integration tests&lt;/h3&gt; 
&lt;p&gt;Set the environment variables &lt;code&gt;MYSQL_DATABASE&lt;/code&gt;, &lt;code&gt;MYSQL_HOST&lt;/code&gt;, &lt;code&gt;MYSQL_PORT&lt;/code&gt;, &lt;code&gt;MYSQL_USER&lt;/code&gt; and &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;. &lt;code&gt;MYSQL_SOCKET&lt;/code&gt; can also be used in place of &lt;code&gt;MYSQL_HOST&lt;/code&gt; and &lt;code&gt;MYSQL_PORT&lt;/code&gt; to connect over a UNIX socket. Then run &lt;code&gt;npm test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example, if you have an installation of mysql running on localhost:3306 and no password set for the &lt;code&gt;root&lt;/code&gt; user, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ mysql -u root -e &quot;CREATE DATABASE IF NOT EXISTS node_mysql_test&quot;
$ MYSQL_HOST=localhost MYSQL_PORT=3306 MYSQL_DATABASE=node_mysql_test MYSQL_USER=root MYSQL_PASSWORD= FILTER=integration npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Todo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prepared statements&lt;/li&gt; 
 &lt;li&gt;Support for encodings other than UTF-8 / ASCII&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>winstonjs/winston</title>
      <link>https://github.com/winstonjs/winston</link>
      <description>&lt;p&gt;A logger for just about everything.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;winston&lt;/h1&gt; 
&lt;p&gt;A logger for just about everything.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/winston&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/winston.svg?style=flat-square&quot; alt=&quot;Version npm&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://npmcharts.com/compare/winston?minimal=true&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/winston.svg?style=flat-square&quot; alt=&quot;npm Downloads&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://travis-ci.org/winstonjs/winston&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/winstonjs/winston/master.svg?style=flat-square&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://david-dm.org/winstonjs/winston&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/winstonjs/winston.svg?style=flat-square&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodei.co/npm/winston/&quot;&gt;&lt;img src=&quot;https://nodei.co/npm/winston.png?downloads=true&amp;amp;downloadRank=true&quot; alt=&quot;NPM&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/winstonjs/winston?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg&quot; alt=&quot;Join the chat at https://gitter.im/winstonjs/winston&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;winston@3&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/UPGRADE-3.0.md&quot;&gt;Upgrade Guide&lt;/a&gt; for more information. Bug reports and PRs welcome!&lt;/p&gt; 
&lt;h2&gt;Looking for &lt;code&gt;winston@2.x&lt;/code&gt; documentation?&lt;/h2&gt; 
&lt;p&gt;Please note that the documentation below is for &lt;code&gt;winston@3&lt;/code&gt;. &lt;a href=&quot;https://github.com/winstonjs/winston/tree/2.x&quot;&gt;Read the &lt;code&gt;winston@2.x&lt;/code&gt; documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;winston&lt;/code&gt; is designed to be a simple and universal logging library with support for multiple transports. A transport is essentially a storage device for your logs. Each &lt;code&gt;winston&lt;/code&gt; logger can have multiple transports (see: &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#transports&quot;&gt;Transports&lt;/a&gt;) configured at different levels (see: &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#logging-levels&quot;&gt;Logging levels&lt;/a&gt;). For example, one may want error logs to be stored in a persistent remote location (like a database), but all logs output to the console or a local file.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;winston&lt;/code&gt; aims to decouple parts of the logging process to make it more flexible and extensible. Attention is given to supporting flexibility in log formatting (see: &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#formats&quot;&gt;Formats&lt;/a&gt;) &amp;amp; levels (see: &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#using-custom-logging-levels&quot;&gt;Using custom logging levels&lt;/a&gt;), and ensuring those APIs decoupled from the implementation of transport logging (i.e. how the logs are stored / indexed, see: &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#adding-custom-transports&quot;&gt;Adding Custom Transports&lt;/a&gt;) to the API that they exposed to the programmer.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;TL;DR? Check out the &lt;a href=&quot;https://github.com/winstonjs/winston/blob/master/examples/quick-start.js&quot;&gt;quick start example&lt;/a&gt; in &lt;code&gt;./examples/&lt;/code&gt;. There are a number of other examples in &lt;a href=&quot;https://github.com/winstonjs/winston/tree/master/examples&quot;&gt;&lt;code&gt;./examples/*.js&lt;/code&gt;&lt;/a&gt;. Don&#39;t see an example you think should be there? Submit a pull request to add it!&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The recommended way to use &lt;code&gt;winston&lt;/code&gt; is to create your own logger. The simplest way to do this is using &lt;code&gt;winston.createLogger&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const winston = require(&#39;winston&#39;);

const logger = winston.createLogger({
  level: &#39;info&#39;,
  format: winston.format.json(),
  defaultMeta: { service: &#39;user-service&#39; },
  transports: [
    //
    // - Write all logs with level `error` and below to `error.log`
    // - Write all logs with level `info` and below to `combined.log`
    //
    new winston.transports.File({ filename: &#39;error.log&#39;, level: &#39;error&#39; }),
    new winston.transports.File({ filename: &#39;combined.log&#39; }),
  ],
});

//
// If we&#39;re not in production then log to the `console` with the format:
// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `
//
if (process.env.NODE_ENV !== &#39;production&#39;) {
  logger.add(new winston.transports.Console({
    format: winston.format.simple(),
  }));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also log directly via the default logger exposed by &lt;code&gt;require(&#39;winston&#39;)&lt;/code&gt;, but this merely intended to be a convenient shared logger to use throughout your application if you so choose.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#motivation&quot;&gt;Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#quick-start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#usage&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#logging&quot;&gt;Logging&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#creating-your-own-logger&quot;&gt;Creating your logger&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#streams-objectmode-and-info-objects&quot;&gt;Streams, &lt;code&gt;objectMode&lt;/code&gt;, and &lt;code&gt;info&lt;/code&gt; objects&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#formats&quot;&gt;Formats&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#combining-formats&quot;&gt;Combining formats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#string-interpolation&quot;&gt;String interpolation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#filtering-info-objects&quot;&gt;Filtering &lt;code&gt;info&lt;/code&gt; Objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#creating-custom-formats&quot;&gt;Creating custom formats&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#logging-levels&quot;&gt;Logging levels&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#using-logging-levels&quot;&gt;Using logging levels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#using-custom-logging-levels&quot;&gt;Using custom logging levels&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#transports&quot;&gt;Transports&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#multiple-transports-of-the-same-type&quot;&gt;Multiple transports of the same type&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#adding-custom-transports&quot;&gt;Adding Custom Transports&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#common-transport-options&quot;&gt;Common Transport options&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#exceptions&quot;&gt;Exceptions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#handling-uncaught-exceptions-with-winston&quot;&gt;Handling Uncaught Exceptions with winston&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#to-exit-or-not-to-exit&quot;&gt;To Exit or Not to Exit&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#rejections&quot;&gt;Rejections&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#handling-uncaught-promise-rejections-with-winston&quot;&gt;Handling Uncaught Promise Rejections with winston&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#profiling&quot;&gt;Profiling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#streaming-logs&quot;&gt;Streaming Logs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#querying-logs&quot;&gt;Querying Logs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#further-reading&quot;&gt;Further Reading&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#using-the-default-logger&quot;&gt;Using the default logger&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#awaiting-logs-to-be-written-in-winston&quot;&gt;Awaiting logs to be written in &lt;code&gt;winston&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#working-with-multiple-loggers-in-winston&quot;&gt;Working with multiple Loggers in &lt;code&gt;winston&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#run-tests&quot;&gt;Run Tests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Logging levels in &lt;code&gt;winston&lt;/code&gt; conform to the severity ordering specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC5424&lt;/a&gt;: &lt;em&gt;severity of all levels is assumed to be numerically &lt;strong&gt;ascending&lt;/strong&gt; from most important to least important.&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const levels = { 
  error: 0,
  warn: 1,
  info: 2,
  http: 3,
  verbose: 4,
  debug: 5,
  silly: 6
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating your own Logger&lt;/h3&gt; 
&lt;p&gt;You get started by creating a logger using &lt;code&gt;winston.createLogger&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  transports: [
    new winston.transports.Console(),
    new winston.transports.File({ filename: &#39;combined.log&#39; })
  ]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A logger accepts&amp;nbsp;the following parameters:&lt;/p&gt; 
&lt;p&gt;| Name | Default | Description | | ------------- | --------------------------- | --------------- | | &lt;code&gt;level&lt;/code&gt; | &lt;code&gt;&#39;info&#39;&lt;/code&gt; | Log only if &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#streams-objectmode-and-info-objects&quot;&gt;&lt;code&gt;info.level&lt;/code&gt;&lt;/a&gt; less than or equal to this level |&lt;br&gt; | &lt;code&gt;levels&lt;/code&gt; | &lt;code&gt;winston.config.npm.levels&lt;/code&gt; | Levels (and colors) representing log priorities | | &lt;code&gt;format&lt;/code&gt; | &lt;code&gt;winston.format.json&lt;/code&gt; | Formatting for &lt;code&gt;info&lt;/code&gt; messages (see: &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#formats&quot;&gt;Formats&lt;/a&gt;) | | &lt;code&gt;transports&lt;/code&gt; | &lt;code&gt;[]&lt;/code&gt; &lt;em&gt;(No transports)&lt;/em&gt; | Set of logging targets for &lt;code&gt;info&lt;/code&gt; messages | | &lt;code&gt;exitOnError&lt;/code&gt; | &lt;code&gt;true&lt;/code&gt; | If false, handled exceptions will not cause &lt;code&gt;process.exit&lt;/code&gt; | | &lt;code&gt;silent&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt; | If true, all logs are suppressed |&lt;/p&gt; 
&lt;p&gt;The levels provided to &lt;code&gt;createLogger&lt;/code&gt; will be defined as convenience methods on the &lt;code&gt;logger&lt;/code&gt; returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
// Logging
//
logger.log({
  level: &#39;info&#39;,
  message: &#39;Hello distributed log files!&#39;
});

logger.info(&#39;Hello again distributed logs&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can add or remove transports from the &lt;code&gt;logger&lt;/code&gt; once it has been provided to you from &lt;code&gt;winston.createLogger&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const files = new winston.transports.File({ filename: &#39;combined.log&#39; });
const console = new winston.transports.Console();

logger
  .clear()          // Remove all transports
  .add(console)     // Add console transport
  .add(files)       // Add file transport
  .remove(console); // Remove console transport
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also wholesale reconfigure a &lt;code&gt;winston.Logger&lt;/code&gt; instance using the &lt;code&gt;configure&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  level: &#39;info&#39;,
  transports: [
    new winston.transports.Console(),
    new winston.transports.File({ filename: &#39;combined.log&#39; })
  ]
});

//
// Replaces the previous transports with those in the
// new configuration wholesale.
//
const DailyRotateFile = require(&#39;winston-daily-rotate-file&#39;);
logger.configure({
  level: &#39;verbose&#39;,
  transports: [
    new DailyRotateFile(opts)
  ]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating child loggers&lt;/h3&gt; 
&lt;p&gt;You can create child loggers from existing loggers to pass metadata overrides:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  transports: [
    new winston.transports.Console(),
  ]
});

const childLogger = logger.child({ requestId: &#39;451&#39; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Streams, &lt;code&gt;objectMode&lt;/code&gt;, and &lt;code&gt;info&lt;/code&gt; objects&lt;/h3&gt; 
&lt;p&gt;In &lt;code&gt;winston&lt;/code&gt;, both &lt;code&gt;Logger&lt;/code&gt; and &lt;code&gt;Transport&lt;/code&gt; instances are treated as &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_object_mode&quot;&gt;&lt;code&gt;objectMode&lt;/code&gt;&lt;/a&gt; streams that accept an &lt;code&gt;info&lt;/code&gt; object.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;info&lt;/code&gt; parameter provided to a given format represents a single log message. The object itself is mutable. Every &lt;code&gt;info&lt;/code&gt; must have at least the &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; properties:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const info = {
  level: &#39;info&#39;,                 // Level of the logging message  
  message: &#39;Hey! Log something?&#39; // Descriptive message being logged.
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Properties &lt;strong&gt;besides level and message&lt;/strong&gt; are considered as &quot;&lt;code&gt;meta&lt;/code&gt;&quot;. i.e.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { level, message, ...meta } = info;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Several of the formats in &lt;code&gt;logform&lt;/code&gt; itself add additional properties:&lt;/p&gt; 
&lt;p&gt;| Property | Format added by | Description | | ----------- | --------------- | ----------- | | &lt;code&gt;splat&lt;/code&gt; | &lt;code&gt;splat()&lt;/code&gt; | String interpolation splat for &lt;code&gt;%d %s&lt;/code&gt;-style messages. | | &lt;code&gt;timestamp&lt;/code&gt; | &lt;code&gt;timestamp()&lt;/code&gt; | timestamp the message was received. | | &lt;code&gt;label&lt;/code&gt; | &lt;code&gt;label()&lt;/code&gt; | Custom label associated with each message. | | &lt;code&gt;ms&lt;/code&gt; | &lt;code&gt;ms()&lt;/code&gt; | Number of milliseconds since the previous log message. |&lt;/p&gt; 
&lt;p&gt;As a consumer you may add whatever properties you wish –&amp;nbsp;&lt;em&gt;internal state is maintained by &lt;code&gt;Symbol&lt;/code&gt; properties:&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Symbol.for(&#39;level&#39;)&lt;/code&gt; &lt;em&gt;&lt;strong&gt;(READ-ONLY)&lt;/strong&gt;:&lt;/em&gt; equal to &lt;code&gt;level&lt;/code&gt; property. &lt;strong&gt;Is treated as immutable by all code.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Symbol.for(&#39;message&#39;):&lt;/code&gt; complete string message set by &quot;finalizing formats&quot;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;json&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;logstash&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;prettyPrint&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;simple&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Symbol.for(&#39;splat&#39;)&lt;/code&gt;: additional string interpolation arguments. &lt;em&gt;Used exclusively by &lt;code&gt;splat()&lt;/code&gt; format.&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These Symbols are stored in another package: &lt;code&gt;triple-beam&lt;/code&gt; so that all consumers of &lt;code&gt;logform&lt;/code&gt; can have the same Symbol reference. i.e.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { LEVEL, MESSAGE, SPLAT } = require(&#39;triple-beam&#39;);

console.log(LEVEL === Symbol.for(&#39;level&#39;));
// true

console.log(MESSAGE === Symbol.for(&#39;message&#39;));
// true

console.log(SPLAT === Symbol.for(&#39;splat&#39;));
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; any &lt;code&gt;{ message&amp;nbsp;}&lt;/code&gt; property in a &lt;code&gt;meta&lt;/code&gt; object provided will automatically be concatenated to any &lt;code&gt;msg&lt;/code&gt; already provided: For example the below will concatenate &#39;world&#39; onto &#39;hello&#39;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;logger.log(&#39;error&#39;, &#39;hello&#39;, { message: &#39;world&#39; });
logger.info(&#39;hello&#39;, { message: &#39;world&#39; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Formats&lt;/h2&gt; 
&lt;p&gt;Formats in &lt;code&gt;winston&lt;/code&gt; can be accessed from &lt;code&gt;winston.format&lt;/code&gt;. They are implemented in &lt;a href=&quot;https://github.com/winstonjs/logform&quot;&gt;&lt;code&gt;logform&lt;/code&gt;&lt;/a&gt;, a separate module from &lt;code&gt;winston&lt;/code&gt;. This allows flexibility when writing your own transports in case you wish to include a default format with your transport.&lt;/p&gt; 
&lt;p&gt;In modern versions of &lt;code&gt;node&lt;/code&gt; template strings are very performant and are the recommended way for doing most end-user formatting. If you want to bespoke format your logs, &lt;code&gt;winston.format.printf&lt;/code&gt; is for you:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { createLogger, format, transports } = require(&#39;winston&#39;);
const { combine, timestamp, label, printf } = format;

const myFormat = printf(({ level, message, label, timestamp }) =&amp;gt; {
  return `${timestamp} [${label}] ${level}: ${message}`;
});

const logger = createLogger({
  format: combine(
    label({ label: &#39;right meow!&#39; }),
    timestamp(),
    myFormat
  ),
  transports: [new transports.Console()]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see what built-in formats are available and learn more about creating your own custom logging formats, see &lt;a href=&quot;https://github.com/winstonjs/logform#readme&quot;&gt;&lt;code&gt;logform&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Combining formats&lt;/h3&gt; 
&lt;p&gt;Any number of formats may be combined into a single format using &lt;code&gt;format.combine&lt;/code&gt;. Since &lt;code&gt;format.combine&lt;/code&gt; takes no &lt;code&gt;opts&lt;/code&gt;, as a convenience it returns pre-created instance of the combined format.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { createLogger, format, transports } = require(&#39;winston&#39;);
const { combine, timestamp, label, prettyPrint } = format;

const logger = createLogger({
  format: combine(
    label({ label: &#39;right meow!&#39; }),
    timestamp(),
    prettyPrint()
  ),
  transports: [new transports.Console()]
})

logger.log({
  level: &#39;info&#39;,
  message: &#39;What time is the testing at?&#39;
});
// Outputs:
// { level: &#39;info&#39;,
//   message: &#39;What time is the testing at?&#39;,
//   label: &#39;right meow!&#39;,
//   timestamp: &#39;2017-09-30T03:57:26.875Z&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;String interpolation&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;log&lt;/code&gt; method provides the string interpolation using &lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/util.html#util_util_format_format_args&quot;&gt;util.format&lt;/a&gt;. &lt;strong&gt;It must be enabled using &lt;code&gt;format.splat()&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Below is an example that defines a format with string interpolation of messages using &lt;code&gt;format.splat&lt;/code&gt; and then serializes the entire &lt;code&gt;info&lt;/code&gt; message using &lt;code&gt;format.simple&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { createLogger, format, transports } = require(&#39;winston&#39;);
const logger = createLogger({
  format: format.combine(
    format.splat(),
    format.simple()
  ),
  transports: [new transports.Console()]
});

//&amp;nbsp;info: test message my string {}
logger.log(&#39;info&#39;, &#39;test message %s&#39;, &#39;my string&#39;);

//&amp;nbsp;info: test message 123 {}
logger.log(&#39;info&#39;, &#39;test message %d&#39;, 123);

// info: test message first second {number: 123}
logger.log(&#39;info&#39;, &#39;test message %s, %s&#39;, &#39;first&#39;, &#39;second&#39;, { number: 123 });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Filtering &lt;code&gt;info&lt;/code&gt; Objects&lt;/h3&gt; 
&lt;p&gt;If you wish to filter out a given &lt;code&gt;info&lt;/code&gt; Object completely when logging then simply return a falsey value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { createLogger, format, transports } = require(&#39;winston&#39;);

// Ignore log messages if they have { private: true }
const ignorePrivate = format((info, opts) =&amp;gt; {
  if (info.private) { return false; }
  return info;
});

const logger = createLogger({
  format: format.combine(
    ignorePrivate(),
    format.json()
  ),
  transports: [new transports.Console()]
});

// Outputs: {&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;Public error to share&quot;}
logger.log({
  level: &#39;error&#39;,
  message: &#39;Public error to share&#39;
});

// Messages with { private: true } will not be written when logged.
logger.log({
  private: true,
  level: &#39;error&#39;,
  message: &#39;This is super secret - hide it.&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use of &lt;code&gt;format.combine&lt;/code&gt; will respect any falsey values return and stop evaluation of later formats in the series. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { format } = require(&#39;winston&#39;);
const { combine, timestamp, label } = format;

const willNeverThrow = format.combine(
  format(info =&amp;gt; { return false })(), // Ignores everything
  format(info =&amp;gt; { throw new Error(&#39;Never reached&#39;) })()
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating custom formats&lt;/h3&gt; 
&lt;p&gt;Formats are prototypal objects (i.e. class instances) that define a single method: &lt;code&gt;transform(info, opts)&lt;/code&gt; and return the mutated &lt;code&gt;info&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;info&lt;/code&gt;: an object representing the log message.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opts&lt;/code&gt;: setting specific to the current instance of the format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;They are expected to return one of two things:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;An &lt;code&gt;info&lt;/code&gt; Object&lt;/strong&gt; representing the modified &lt;code&gt;info&lt;/code&gt; argument. Object references need not be preserved&amp;nbsp;if immutability is preferred. All current built-in formats consider &lt;code&gt;info&lt;/code&gt; mutable, but [immutablejs] is being considered for future releases.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A falsey value&lt;/strong&gt; indicating that the &lt;code&gt;info&lt;/code&gt; argument should be ignored by the caller. (See: &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/#filtering-info-objects&quot;&gt;Filtering &lt;code&gt;info&lt;/code&gt; Objects&lt;/a&gt;) below.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;winston.format&lt;/code&gt; is designed to be as simple as possible. To define a new format simple pass it a &lt;code&gt;transform(info, opts)&lt;/code&gt; function to get a new &lt;code&gt;Format&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The named &lt;code&gt;Format&lt;/code&gt; returned can be used to create as many copies of the given &lt;code&gt;Format&lt;/code&gt; as desired:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { format } = require(&#39;winston&#39;);

const volume = format((info, opts) =&amp;gt; {
  if (opts.yell) {
    info.message = info.message.toUpperCase();
  } else if (opts.whisper) {
    info.message = info.message.toLowerCase();
  }

  return info;
});

// `volume` is now a function that returns instances of the format.
const scream = volume({ yell: true });
console.dir(scream.transform({
  level: &#39;info&#39;,
  message: `sorry for making you YELL in your head!`
}, scream.options));
// {
//   level: &#39;info&#39;
//   message: &#39;SORRY FOR MAKING YOU YELL IN YOUR HEAD!&#39;
// }

// `volume` can be used multiple times to create different formats.
const whisper = volume({ whisper: true });
console.dir(whisper.transform({
  level: &#39;info&#39;,
  message: `WHY ARE THEY MAKING US YELL SO MUCH!`
}, whisper.options));
// {
//   level: &#39;info&#39;
//   message: &#39;why are they making us yell so much!&#39;
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Logging Levels&lt;/h2&gt; 
&lt;p&gt;Logging levels in &lt;code&gt;winston&lt;/code&gt; conform to the severity ordering specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC5424&lt;/a&gt;: &lt;em&gt;severity of all levels is assumed to be numerically &lt;strong&gt;ascending&lt;/strong&gt; from most important to least important.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;level&lt;/code&gt; is given a specific integer priority. The higher the priority the more important the message is considered to be, and the lower the corresponding integer priority. For example, as specified exactly in RFC5424 the &lt;code&gt;syslog&lt;/code&gt; levels are prioritized from 0 to 7 (highest to lowest).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ 
  emerg: 0, 
  alert: 1, 
  crit: 2, 
  error: 3, 
  warning: 4, 
  notice: 5, 
  info: 6, 
  debug: 7
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Similarly, &lt;code&gt;npm&lt;/code&gt; logging levels are prioritized from 0 to 6 (highest to lowest):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ 
  error: 0, 
  warn: 1, 
  info: 2, 
  http: 3,
  verbose: 4, 
  debug: 5, 
  silly: 6 
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do not explicitly define the levels that &lt;code&gt;winston&lt;/code&gt; should use, the &lt;code&gt;npm&lt;/code&gt; levels above will be used.&lt;/p&gt; 
&lt;h3&gt;Using Logging Levels&lt;/h3&gt; 
&lt;p&gt;Setting the level for your logging message can be accomplished in one of two ways. You can pass a string representing the logging level to the log() method or use the level specified methods defined on every winston Logger.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
// Any logger instance
//
logger.log(&#39;silly&#39;, &quot;127.0.0.1 - there&#39;s no place like home&quot;);
logger.log(&#39;debug&#39;, &quot;127.0.0.1 - there&#39;s no place like home&quot;);
logger.log(&#39;verbose&#39;, &quot;127.0.0.1 - there&#39;s no place like home&quot;);
logger.log(&#39;info&#39;, &quot;127.0.0.1 - there&#39;s no place like home&quot;);
logger.log(&#39;warn&#39;, &quot;127.0.0.1 - there&#39;s no place like home&quot;);
logger.log(&#39;error&#39;, &quot;127.0.0.1 - there&#39;s no place like home&quot;);
logger.info(&quot;127.0.0.1 - there&#39;s no place like home&quot;);
logger.warn(&quot;127.0.0.1 - there&#39;s no place like home&quot;);
logger.error(&quot;127.0.0.1 - there&#39;s no place like home&quot;);

//
// Default logger
//
winston.log(&#39;info&#39;, &quot;127.0.0.1 - there&#39;s no place like home&quot;);
winston.info(&quot;127.0.0.1 - there&#39;s no place like home&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;winston&lt;/code&gt; allows you to define a &lt;code&gt;level&lt;/code&gt; property on each transport which specifies the &lt;strong&gt;maximum&lt;/strong&gt; level of messages that a transport should log. For example, using the &lt;code&gt;syslog&lt;/code&gt; levels you could log only &lt;code&gt;error&lt;/code&gt; messages to the console and everything &lt;code&gt;info&lt;/code&gt; and below to a file (which includes &lt;code&gt;error&lt;/code&gt; messages):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  levels: winston.config.syslog.levels,
  transports: [
    new winston.transports.Console({ level: &#39;error&#39; }),
    new winston.transports.File({
      filename: &#39;combined.log&#39;,
      level: &#39;info&#39;
    })
  ]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also dynamically change the log level of a transport:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const transports = {
  console: new winston.transports.Console({ level: &#39;warn&#39; }),
  file: new winston.transports.File({ filename: &#39;combined.log&#39;, level: &#39;error&#39; })
};

const logger = winston.createLogger({
  transports: [
    transports.console,
    transports.file
  ]
});

logger.info(&#39;Will not be logged in either transport!&#39;);
transports.console.level = &#39;info&#39;;
transports.file.level = &#39;info&#39;;
logger.info(&#39;Will be logged in both transports!&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;winston&lt;/code&gt; supports customizable logging levels, defaulting to npm style logging levels. Levels must be specified at the time of creating your logger.&lt;/p&gt; 
&lt;h3&gt;Using Custom Logging Levels&lt;/h3&gt; 
&lt;p&gt;In addition to the predefined &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;syslog&lt;/code&gt;, and &lt;code&gt;cli&lt;/code&gt; levels available in &lt;code&gt;winston&lt;/code&gt;, you can also choose to define your own:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const myCustomLevels = {
  levels: {
    foo: 0,
    bar: 1,
    baz: 2,
    foobar: 3
  },
  colors: {
    foo: &#39;blue&#39;,
    bar: &#39;green&#39;,
    baz: &#39;yellow&#39;,
    foobar: &#39;red&#39;
  }
};

const customLevelLogger = winston.createLogger({
  levels: myCustomLevels.levels
});

customLevelLogger.foobar(&#39;some foobar level-ed message&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Although there is slight repetition in this data structure, it enables simple encapsulation if you do not want to have colors. If you do wish to have colors, in addition to passing the levels to the Logger itself, you must make winston aware of them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;winston.addColors(myCustomLevels.colors);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This enables loggers using the &lt;code&gt;colorize&lt;/code&gt; formatter to appropriately color and style the output of custom levels.&lt;/p&gt; 
&lt;p&gt;Additionally, you can also change background color and font style. For example,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;baz: &#39;italic yellow&#39;,
foobar: &#39;bold red cyanBG&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Possible options are below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Font styles: &lt;code&gt;bold&lt;/code&gt;, &lt;code&gt;dim&lt;/code&gt;, &lt;code&gt;italic&lt;/code&gt;, &lt;code&gt;underline&lt;/code&gt;, &lt;code&gt;inverse&lt;/code&gt;, &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;strikethrough&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Font foreground colors: &lt;code&gt;black&lt;/code&gt;, &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;yellow&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;magenta&lt;/code&gt;, &lt;code&gt;cyan&lt;/code&gt;, &lt;code&gt;white&lt;/code&gt;, &lt;code&gt;gray&lt;/code&gt;, &lt;code&gt;grey&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Background colors: &lt;code&gt;blackBG&lt;/code&gt;, &lt;code&gt;redBG&lt;/code&gt;, &lt;code&gt;greenBG&lt;/code&gt;, &lt;code&gt;yellowBG&lt;/code&gt;, &lt;code&gt;blueBG&lt;/code&gt; &lt;code&gt;magentaBG&lt;/code&gt;, &lt;code&gt;cyanBG&lt;/code&gt;, &lt;code&gt;whiteBG&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Colorizing Standard logging levels&lt;/h3&gt; 
&lt;p&gt;To colorize the standard logging level add&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;winston.format.combine(
  winston.format.colorize(),
  winston.format.json()
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;winston.format.json()&lt;/code&gt; is whatever other formatter you want to use. The &lt;code&gt;colorize&lt;/code&gt; formatter must come before any formatters adding text you wish to color.&lt;/p&gt; 
&lt;h2&gt;Transports&lt;/h2&gt; 
&lt;p&gt;There are several &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/docs/transports.md#winston-core&quot;&gt;core transports&lt;/a&gt; included in &lt;code&gt;winston&lt;/code&gt;, which leverage the built-in networking and file I/O offered by Node.js core. In addition, there are &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/docs/transports.md#additional-transports&quot;&gt;additional transports&lt;/a&gt; written by members of the community.&lt;/p&gt; 
&lt;h2&gt;Multiple transports of the same type&lt;/h2&gt; 
&lt;p&gt;It is possible to use multiple transports of the same type e.g. &lt;code&gt;winston.transports.File&lt;/code&gt; when you construct the transport.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  transports: [
    new winston.transports.File({
      filename: &#39;combined.log&#39;,
      level: &#39;info&#39;
    }),
    new winston.transports.File({
      filename: &#39;errors.log&#39;,
      level: &#39;error&#39;
    })
  ]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you later want to remove one of these transports you can do so by using the transport itself. e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const combinedLogs = logger.transports.find(transport =&amp;gt; {
  return transport.filename === &#39;combined.log&#39;
});

logger.remove(combinedLogs);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Adding Custom Transports&lt;/h2&gt; 
&lt;p&gt;Adding a custom transport is easy. All you need to do is accept any options you need, implement a log() method, and consume it with &lt;code&gt;winston&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const Transport = require(&#39;winston-transport&#39;);
const util = require(&#39;util&#39;);

//
// Inherit from `winston-transport` so you can take advantage
// of the base functionality and `.exceptions.handle()`.
//
module.exports = class YourCustomTransport extends Transport {
  constructor(opts) {
    super(opts);
    //
    // Consume any custom options here. e.g.:
    // - Connection information for databases
    // - Authentication information for APIs (e.g. loggly, papertrail, 
    //   logentries, etc.).
    //
  }

  log(info, callback) {
    setImmediate(() =&amp;gt; {
      this.emit(&#39;logged&#39;, info);
    });

    // Perform the writing to the remote service
    callback();
  }
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Common Transport options&lt;/h2&gt; 
&lt;p&gt;As every transport inherits from &lt;a href=&quot;https://github.com/winstonjs/winston-transport&quot;&gt;winston-transport&lt;/a&gt;, it&#39;s possible to set a custom format and a custom log level on each transport separately:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  transports: [
    new winston.transports.File({
      filename: &#39;error.log&#39;,
      level: &#39;error&#39;,
      format: winston.format.json()
    }),
    new transports.Http({
      level: &#39;warn&#39;,
      format: winston.format.json()
    }),
    new transports.Console({
      level: &#39;info&#39;,
      format: winston.format.combine(
        winston.format.colorize(),
        winston.format.simple()
      )
    })
  ]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Exceptions&lt;/h2&gt; 
&lt;h3&gt;Handling Uncaught Exceptions with winston&lt;/h3&gt; 
&lt;p&gt;With &lt;code&gt;winston&lt;/code&gt;, it is possible to catch and log &lt;code&gt;uncaughtException&lt;/code&gt; events from your process. With your own logger instance you can enable this behavior when it&#39;s created or later on in your applications lifecycle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { createLogger, transports } = require(&#39;winston&#39;);

// Enable exception handling when you create your logger.
const logger = createLogger({
  transports: [
    new transports.File({ filename: &#39;combined.log&#39; }) 
  ],
  exceptionHandlers: [
    new transports.File({ filename: &#39;exceptions.log&#39; })
  ]
});

// Or enable it later on by adding a transport or using `.exceptions.handle`
const logger = createLogger({
  transports: [
    new transports.File({ filename: &#39;combined.log&#39; }) 
  ]
});

// Call exceptions.handle with a transport to handle exceptions
logger.exceptions.handle(
  new transports.File({ filename: &#39;exceptions.log&#39; })
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use this feature with the default logger, simply call &lt;code&gt;.exceptions.handle()&lt;/code&gt; with a transport instance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
// You can add a separate exception logger by passing it to `.exceptions.handle`
//
winston.exceptions.handle(
  new winston.transports.File({ filename: &#39;path/to/exceptions.log&#39; })
);

//
// Alternatively you can set `handleExceptions` to true when adding transports
// to winston.
//
winston.add(new winston.transports.File({
  filename: &#39;path/to/combined.log&#39;,
  handleExceptions: true
}));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;To Exit or Not to Exit&lt;/h3&gt; 
&lt;p&gt;By default, winston will exit after logging an uncaughtException. If this is not the behavior you want, set &lt;code&gt;exitOnError = false&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({ exitOnError: false });

//
// or, like this:
//
logger.exitOnError = false;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When working with custom logger instances, you can pass in separate transports to the &lt;code&gt;exceptionHandlers&lt;/code&gt; property or set &lt;code&gt;handleExceptions&lt;/code&gt; on any transport.&lt;/p&gt; 
&lt;h5&gt;Example 1&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  transports: [
    new winston.transports.File({ filename: &#39;path/to/combined.log&#39; })
  ],
  exceptionHandlers: [
    new winston.transports.File({ filename: &#39;path/to/exceptions.log&#39; })
  ]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Example 2&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  transports: [
    new winston.transports.Console({
      handleExceptions: true
    })
  ],
  exitOnError: false
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;exitOnError&lt;/code&gt; option can also be a function to prevent exit on only certain types of errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function ignoreEpipe(err) {
  return err.code !== &#39;EPIPE&#39;;
}

const logger = winston.createLogger({ exitOnError: ignoreEpipe });

//
// or, like this:
//
logger.exitOnError = ignoreEpipe;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Rejections&lt;/h2&gt; 
&lt;h3&gt;Handling Uncaught Promise Rejections with winston&lt;/h3&gt; 
&lt;p&gt;With &lt;code&gt;winston&lt;/code&gt;, it is possible to catch and log &lt;code&gt;uncaughtRejection&lt;/code&gt; events from your process. With your own logger instance you can enable this behavior when it&#39;s created or later on in your applications lifecycle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { createLogger, transports } = require(&#39;winston&#39;);

// Enable rejection handling when you create your logger.
const logger = createLogger({
  transports: [
    new transports.File({ filename: &#39;combined.log&#39; }) 
  ],
  rejectionHandlers: [
    new transports.File({ filename: &#39;rejections.log&#39; })
  ]
});

// Or enable it later on by adding a transport or using `.rejections.handle`
const logger = createLogger({
  transports: [
    new transports.File({ filename: &#39;combined.log&#39; }) 
  ]
});

// Call rejections.handle with a transport to handle rejections
logger.rejections.handle(
  new transports.File({ filename: &#39;rejections.log&#39; })
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use this feature with the default logger, simply call &lt;code&gt;.rejections.handle()&lt;/code&gt; with a transport instance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
// You can add a separate rejection logger by passing it to `.rejections.handle`
//
winston.rejections.handle(
  new winston.transports.File({ filename: &#39;path/to/rejections.log&#39; })
);

//
// Alternatively you can set `handleRejections` to true when adding transports
// to winston.
//
winston.add(new winston.transports.File({
  filename: &#39;path/to/combined.log&#39;,
  handleRejections: true
}));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Profiling&lt;/h2&gt; 
&lt;p&gt;In addition to logging messages and metadata, &lt;code&gt;winston&lt;/code&gt; also has a simple profiling mechanism implemented for any logger:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
// Start profile of &#39;test&#39;
//
logger.profile(&#39;test&#39;);

setTimeout(function () {
  //
  // Stop profile of &#39;test&#39;. Logging will now take place:
  //   &#39;17 Jan 21:00:00 - info: test duration=1000ms&#39;
  //
  logger.profile(&#39;test&#39;);
}, 1000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also you can start a timer and keep a reference that you can call `.done()`` on:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; // Returns an object corresponding to a specific timing. When done
 // is called the timer will finish and log the duration. e.g.:
 //
 const profiler = logger.startTimer();
 setTimeout(function () {
   profiler.done({ message: &#39;Logging message&#39; });
 }, 1000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All profile messages are set to &#39;info&#39; level by default, and both message and metadata are optional. For individual profile messages, you can override the default log level by supplying a metadata object with a &lt;code&gt;level&lt;/code&gt; property:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;logger.profile(&#39;test&#39;, { level: &#39;debug&#39; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Querying Logs&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;winston&lt;/code&gt; supports querying of logs with Loggly-like options. &lt;a href=&quot;https://www.loggly.com/docs/api-retrieving-data/&quot;&gt;See Loggly Search API&lt;/a&gt;. Specifically: &lt;code&gt;File&lt;/code&gt;, &lt;code&gt;Couchdb&lt;/code&gt;, &lt;code&gt;Redis&lt;/code&gt;, &lt;code&gt;Loggly&lt;/code&gt;, &lt;code&gt;Nssocket&lt;/code&gt;, and &lt;code&gt;Http&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const options = {
  from: new Date() - (24 * 60 * 60 * 1000),
  until: new Date(),
  limit: 10,
  start: 0,
  order: &#39;desc&#39;,
  fields: [&#39;message&#39;]
};

//
// Find items logged between today and yesterday.
//
logger.query(options, function (err, results) {
  if (err) {
    /* TODO: handle me */
    throw err;
  }

  console.log(results);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Streaming Logs&lt;/h2&gt; 
&lt;p&gt;Streaming allows you to stream your logs back from your chosen transport.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
// Start at the end.
//
winston.stream({ start: -1 }).on(&#39;log&#39;, function(log) {
  console.log(log);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Further Reading&lt;/h2&gt; 
&lt;h3&gt;Using the Default Logger&lt;/h3&gt; 
&lt;p&gt;The default logger is accessible through the &lt;code&gt;winston&lt;/code&gt; module directly. Any method that you could call on an instance of a logger is available on the default logger:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const winston = require(&#39;winston&#39;);

winston.log(&#39;info&#39;, &#39;Hello distributed log files!&#39;);
winston.info(&#39;Hello again distributed logs&#39;);

winston.level = &#39;debug&#39;;
winston.log(&#39;debug&#39;, &#39;Now my debug messages are written to console!&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, no transports are set on the default logger. You must add or remove transports via the &lt;code&gt;add()&lt;/code&gt; and &lt;code&gt;remove()&lt;/code&gt; methods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const files = new winston.transports.File({ filename: &#39;combined.log&#39; });
const console = new winston.transports.Console();

winston.add(console);
winston.add(files);
winston.remove(console);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or do it with one call to configure():&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;winston.configure({
  transports: [
    new winston.transports.File({ filename: &#39;somefile.log&#39; })
  ]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more documentation about working with each individual transport supported by &lt;code&gt;winston&lt;/code&gt; see the &lt;a href=&quot;https://raw.githubusercontent.com/winstonjs/winston/master/docs/transports.md&quot;&gt;&lt;code&gt;winston&lt;/code&gt; Transports&lt;/a&gt; document.&lt;/p&gt; 
&lt;h3&gt;Awaiting logs to be written in &lt;code&gt;winston&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Often it is useful to wait for your logs to be written before exiting the process. Each instance of &lt;code&gt;winston.Logger&lt;/code&gt; is also a [Node.js stream]. A &lt;code&gt;finish&lt;/code&gt; event will be raised when all logs have flushed to all transports after the stream has been ended.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const transport = new winston.transports.Console();
const logger = winston.createLogger({
  transports: [transport]
});

logger.on(&#39;finish&#39;, function (info) {
  // All `info` log messages has now been logged
});

logger.info(&#39;CHILL WINSTON!&#39;, { seriously: true });
logger.end();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is also worth mentioning that the logger also emits an &#39;error&#39; event which you should handle or suppress if you don&#39;t want unhandled exceptions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
// Handle errors
//
logger.on(&#39;error&#39;, function (err) { /* Do Something */ });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Working with multiple Loggers in winston&lt;/h3&gt; 
&lt;p&gt;Often in larger, more complex, applications it is necessary to have multiple logger instances with different settings. Each logger is responsible for a different feature area (or category). This is exposed in &lt;code&gt;winston&lt;/code&gt; in two ways: through &lt;code&gt;winston.loggers&lt;/code&gt; and instances of &lt;code&gt;winston.Container&lt;/code&gt;. In fact, &lt;code&gt;winston.loggers&lt;/code&gt; is just a predefined instance of &lt;code&gt;winston.Container&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const winston = require(&#39;winston&#39;);
const { format } = winston;
const { combine, label, json } = format;

//
// Configure the logger for `category1`
//
winston.loggers.add(&#39;category1&#39;, {
  format: combine(
    label({ label: &#39;category one&#39; }),
    json()
  ),
  transports: [
    new winston.transports.Console({ level: &#39;silly&#39; }),
    new winston.transports.File({ filename: &#39;somefile.log&#39; })
  ]
});

//
// Configure the logger for `category2`
//
winston.loggers.add(&#39;category2&#39;, {
  format: combine(
    label({ label: &#39;category two&#39; }),
    json()
  ),
  transports: [
    new winston.transports.Http({ host: &#39;localhost&#39;, port:8080 })
  ]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now that your loggers are setup, you can require winston &lt;em&gt;in any file in your application&lt;/em&gt; and access these pre-configured loggers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const winston = require(&#39;winston&#39;);

//
// Grab your preconfigured loggers
//
const category1 = winston.loggers.get(&#39;category1&#39;);
const category2 = winston.loggers.get(&#39;category2&#39;);

category1.info(&#39;logging to file and console transports&#39;);
category2.info(&#39;logging to http transport&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you prefer to manage the &lt;code&gt;Container&lt;/code&gt; yourself, you can simply instantiate one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const winston = require(&#39;winston&#39;);
const { format } = winston;
const { combine, label, json } = format;

const container = new winston.Container();

container.add(&#39;category1&#39;, {
  format: combine(
    label({ label: &#39;category one&#39; }),
    json()
  ),
  transports: [
    new winston.transports.Console({ level: &#39;silly&#39; }),
    new winston.transports.File({ filename: &#39;somefile.log&#39; })
  ]
});

const category1 = container.get(&#39;category1&#39;);
category1.info(&#39;logging to file and console transports&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install winston
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add winston
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Run Tests&lt;/h2&gt; 
&lt;p&gt;All of the winston tests are written with &lt;a href=&quot;https://mochajs.org&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;&lt;code&gt;nyc&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/bigpipe/assume&quot;&gt;&lt;code&gt;assume&lt;/code&gt;&lt;/a&gt;. They can be run with &lt;code&gt;npm&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Author: &lt;a href=&quot;http://github.com/indexzero&quot;&gt;Charlie Robbins&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;Contributors: &lt;a href=&quot;https://github.com/jcrugzz&quot;&gt;Jarrett Cruger&lt;/a&gt;, &lt;a href=&quot;https://github.com/dabh&quot;&gt;David Hyde&lt;/a&gt;, &lt;a href=&quot;https://github.com/chrisalderson&quot;&gt;Chris Alderson&lt;/a&gt;&lt;/h4&gt;</description>
    </item>
    
    <item>
      <title>fengyuanchen/cropper</title>
      <link>https://github.com/fengyuanchen/cropper</link>
      <description>&lt;p&gt;⚠️ [Deprecated] No longer maintained, please use https://github.com/fengyuanchen/jquery-cropper&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cropper&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/fengyuanchen/cropper&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/fengyuanchen/cropper.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/cropper&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/cropper.svg&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/cropper&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/cropper.svg&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/cropper&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/fengyuanchen/cropper.svg&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A simple jQuery image cropping plugin. As of v4.0.0, the core code of Cropper is replaced with &lt;a href=&quot;https://github.com/fengyuanchen/cropperjs&quot;&gt;Cropper.js&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fengyuanchen.github.io/cropper&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fengyuanchen/cropperjs&quot;&gt;Cropper.js&lt;/a&gt; - JavaScript image cropper (&lt;strong&gt;recommended&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fengyuanchen/jquery-cropper&quot;&gt;jquery-cropper&lt;/a&gt; - A jQuery plugin wrapper for Cropper.js (&lt;strong&gt;recommended&lt;/strong&gt; for jQuery users to use this instead of Cropper)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Main&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;dist/
├── cropper.css
├── cropper.min.css   (compressed)
├── cropper.js        (UMD)
├── cropper.min.js    (UMD, compressed)
├── cropper.common.js (CommonJS, default)
└── cropper.esm.js    (ES Module)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install cropper jquery
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Include files:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;/path/to/jquery.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;!-- jQuery is required --&amp;gt;
&amp;lt;link  href=&quot;/path/to/cropper.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&amp;lt;script src=&quot;/path/to/cropper.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Initialize with &lt;code&gt;$.fn.cropper&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Wrap the image or canvas element with a block element (container) --&amp;gt;
&amp;lt;div&amp;gt;
  &amp;lt;img id=&quot;image&quot; src=&quot;picture.jpg&quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;/* Limit image width to avoid overflow the container */
img {
  max-width: 100%; /* This rule is very important, please do not ignore this! */
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var $image = $(&#39;#image&#39;);

$image.cropper({
  aspectRatio: 16 / 9,
  crop: function(event) {
    console.log(event.detail.x);
    console.log(event.detail.y);
    console.log(event.detail.width);
    console.log(event.detail.height);
    console.log(event.detail.rotate);
    console.log(event.detail.scaleX);
    console.log(event.detail.scaleY);
  }
});

// Get the Cropper.js instance after initialized
var cropper = $image.data(&#39;cropper&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Options&lt;/h2&gt; 
&lt;p&gt;See the available &lt;a href=&quot;https://github.com/fengyuanchen/cropperjs#options&quot;&gt;options&lt;/a&gt; of Cropper.js.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&#39;img&#39;).cropper(options);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Methods&lt;/h2&gt; 
&lt;p&gt;See the available &lt;a href=&quot;https://github.com/fengyuanchen/cropperjs#methods&quot;&gt;methods&lt;/a&gt; of Cropper.js.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&#39;img&#39;).once(&#39;ready&#39;, function () {
  $(this).cropper(&#39;method&#39;, argument1, , argument2, ..., argumentN);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;See the available &lt;a href=&quot;https://github.com/fengyuanchen/cropperjs#events&quot;&gt;events&lt;/a&gt; of Cropper.js.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$(&#39;img&#39;).on(&#39;event&#39;, handler);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;No conflict&lt;/h2&gt; 
&lt;p&gt;If you have to use other plugin with the same namespace, just call the &lt;code&gt;$.fn.cropper.noConflict&lt;/code&gt; method to revert to it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;other-plugin.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;cropper.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  $.fn.cropper.noConflict();
  // Code that uses other plugin&#39;s &quot;$(&#39;img&#39;).cropper&quot; can follow here.
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Browser support&lt;/h2&gt; 
&lt;p&gt;It is the same as the &lt;a href=&quot;https://github.com/fengyuanchen/cropperjs#browser-support&quot;&gt;browser support of Cropper.js&lt;/a&gt;. As a jQuery plugin, you also need to see the &lt;a href=&quot;https://jquery.com/browser-support/&quot;&gt;jQuery Browser Support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href=&quot;https://raw.githubusercontent.com/fengyuanchen/cropper/master/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;Maintained under the &lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt; © &lt;a href=&quot;https://chenfengyuan.com/&quot;&gt;Chen Fengyuan&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mattermost/mattermost-webapp</title>
      <link>https://github.com/mattermost/mattermost-webapp</link>
      <description>&lt;p&gt;Webapp of Mattermost server: https://github.com/mattermost/mattermost-server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mattermost&lt;/h1&gt; 
&lt;p&gt;Mattermost is an open source, self-hosted Slack-alternative from &lt;a href=&quot;https://mattermost.org&quot;&gt;https://mattermost.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It&#39;s written in Golang and React and runs as a single Linux binary with MySQL or Postgres. Every month on the 16th &lt;a href=&quot;https://www.mattermost.org/download/&quot;&gt;a new compiled version is released under an MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project hosts the webapp client code. Please file issues at &lt;a href=&quot;https://github.com/mattermost/mattermost-server&quot;&gt;/mattermost-server&lt;/a&gt;, which hosts the server code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.mattermost.com/&quot;&gt;Review product documentation&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.mattermost.com/&quot;&gt;Review developer documentation&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.org/download&quot;&gt;Download compiled version&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Try out Mattermost:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://community.mattermost.com&quot;&gt;Join the Mattermost Contributor&#39;s server&lt;/a&gt; to join community discussions about contributions, development and more&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://customers.mattermost.com/cloud/signup&quot;&gt;Get started with Mattermost Cloud&lt;/a&gt; to try out Mattermost&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Deploy on Heroku&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/mattermost/mattermost-heroku&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; alt=&quot;Deploy a Preview&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: Heroku preview does not include email or persistent storage&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Install on your own machine:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.mattermost.com/install/docker-local-machine.html#one-line-docker-install&quot;&gt;One-line Docker Preview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/developer/dev-setup.html&quot;&gt;Developer Machine Setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mattermost.org/installation/&quot;&gt;Production Install Guides using Linux Binary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.mattermost.com/install/prod-docker.html&quot;&gt;Production Docker Install&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Get Involved:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.mattermost.com/developer/contribution-guide.html&quot;&gt;Contribute Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/pl/help-wanted&quot;&gt;Find &quot;Help Wanted&quot; projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://community.mattermost.com/core/channels/tickets&quot;&gt;Join Developer Discussion on a Mattermost Server for contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mattermost.org/filing-issues/&quot;&gt;File Bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mattermost.org/feature-requests/&quot;&gt;Share Feature Ideas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.mattermost.org/t/how-to-use-the-troubleshooting-forum/150&quot;&gt;Get Troubleshooting Help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn More:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.mattermost.com/developer/api.html&quot;&gt;API Options - webhooks, slash commands, drivers and web service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.mattermost.com/developer/localization.html#translation-process&quot;&gt;Localization Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Get the Latest News:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt; - Follow &lt;a href=&quot;https://twitter.com/Mattermost&quot;&gt;Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt; - Subscribe to our &lt;a href=&quot;http://mattermost.us11.list-manage.com/subscribe?u=6cdba22349ae374e188e7ab8e&amp;amp;id=2add1c8034&quot;&gt;newsletter&lt;/a&gt; (1 or 2 per month)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IRC&lt;/strong&gt; - Join the #matterbridge channel on &lt;a href=&quot;https://freenode.net/&quot;&gt;Freenode&lt;/a&gt; (thanks to &lt;a href=&quot;https://github.com/42wim/matterircd&quot;&gt;matterircd&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Any other questions, mail us at info@mattermost.com. We&#39;d love to meet you!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rjsf-team/react-jsonschema-form</title>
      <link>https://github.com/rjsf-team/react-jsonschema-form</link>
      <description>&lt;p&gt;A React component for building Web forms from JSON Schema.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/rjsf-team/react-jsonschema-form/actions&quot;&gt;&lt;img src=&quot;https://github.com/rjsf-team/react-jsonschema-form/workflows/CI/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rjsf-team/react-jsonschema-form/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/rjsf-team/react-jsonschema-form.svg&quot; alt=&quot;Contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://choosealicense.com/licenses/apache-2.0/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-Apache%202.0-blue.svg?style=flat-square&quot; alt=&quot;Apache 2.0 License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://rjsf-team.github.io/react-jsonschema-form/&quot;&gt;&lt;img src=&quot;https://i.imgur.com/M8ZCES5.gif&quot; alt=&quot;playground animation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Supported Themes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rjsf-team/react-jsonschema-form/tree/master/packages/antd&quot;&gt;Ant Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rjsf-team/react-jsonschema-form/tree/master/packages/core&quot;&gt;Bootstrap 3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rjsf-team/react-jsonschema-form/tree/master/packages/bootstrap-4&quot;&gt;Bootstrap 4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rjsf-team/react-jsonschema-form/tree/master/packages/fluent-ui&quot;&gt;Fluent UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rjsf-team/react-jsonschema-form/tree/master/packages/material-ui&quot;&gt;Material UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rjsf-team/react-jsonschema-form/tree/master/packages/semantic-ui&quot;&gt;Semantic UI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://react-jsonschema-form.readthedocs.io/en/latest/&quot;&gt;documentation&lt;/a&gt; on Read the Docs.&lt;/p&gt; 
&lt;h2&gt;Live Playground&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://rjsf-team.github.io/react-jsonschema-form/&quot;&gt;live playground&lt;/a&gt; is hosted on gh-pages.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://react-jsonschema-form.readthedocs.io/en/latest/contributing/&quot;&gt;contributors&#39; guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Testing powered by BrowserStack
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>umijs/father</title>
      <link>https://github.com/umijs/father</link>
      <description>&lt;p&gt;Library toolkit based on rollup and babel.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;father&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Library toolkit based on rollup, docz, storybook, jest, prettier and eslint.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/gh/umijs/father&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/umijs/father/branch/master/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/father&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/father.svg?style=flat&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/umijs/father/tree/master&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/umijs/father/tree/master.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/umijs/father&quot;&gt;&lt;img src=&quot;https://github.com/umijs/father/workflows/Node%20CI/badge.svg&quot; alt=&quot;GitHub Actions status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/father&quot;&gt;&lt;img src=&quot;http://img.shields.io/npm/dm/father.svg?style=flat&quot; alt=&quot;NPM downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lernajs.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg&quot; alt=&quot;lerna&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/av47853431&quot;&gt;视频教程：利用 umi-library（father） 做组件打包&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;✔︎ 基于 &lt;a href=&quot;https://www.docz.site/&quot;&gt;docz&lt;/a&gt; 的文档功能&lt;/li&gt; 
 &lt;li&gt;✔︎ 基于 &lt;a href=&quot;http://rollupjs.org/&quot;&gt;rollup&lt;/a&gt; 和 babel 的组件打包功能&lt;/li&gt; 
 &lt;li&gt;✔︎ 支持 TypeScript&lt;/li&gt; 
 &lt;li&gt;✔︎ 支持 cjs、esm 和 umd 三种格式的打包&lt;/li&gt; 
 &lt;li&gt;✔︎ esm 支持生成 mjs，直接为浏览器使用&lt;/li&gt; 
 &lt;li&gt;✔︎ 支持用 babel 或 rollup 打包 cjs 和 esm&lt;/li&gt; 
 &lt;li&gt;✔︎ 支持多 entry&lt;/li&gt; 
 &lt;li&gt;✔︎ 支持 lerna&lt;/li&gt; 
 &lt;li&gt;✔︎ 支持 css 和 less，支持开启 css modules&lt;/li&gt; 
 &lt;li&gt;✔︎ 支持 test&lt;/li&gt; 
 &lt;li&gt;✔︎ 支持用 prettier 和 eslint 做 pre-commit 检查&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install &lt;code&gt;father&lt;/code&gt; via yarn or npm.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果只做组件打包，不需要文档，可安装 father-build，使用和配置同 father。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ yarn add father
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Bundle library
$ father build

# dev with doc
$ father doc dev

# build doc
$ father doc build

# deploy doc to github.io
$ father doc deploy

# test
$ father test
$ father test --coverage
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Cli&lt;/h2&gt; 
&lt;h3&gt;build&lt;/h3&gt; 
&lt;p&gt;打包库，输出多种格式的文件。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Normal build
$ father build

# Bundle src/foo.js with esm=rollup, cjs=rollup and umd, and specify the output filename with bar
$ father build --esm --cjs --umd --file bar src/foo.js
Success!
$ tree ./dist
./dist
  - bar.js
  - bar.esm.js
  - bar.umd.js
  - bar.umd.min.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;doc&lt;/h3&gt; 
&lt;p&gt;doc 包含 dev 和 build 两个子命令。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ father doc dev
$ father doc build
$ father doc deploy
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;所有的命令行参数会透传给 docz，详见 &lt;a href=&quot;https://www.docz.site/docs/project-configuration&quot;&gt;docz.site#project-configuration&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;注：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;不能传 &lt;code&gt;--config&lt;/code&gt; 参数，通过 &lt;code&gt;--config&lt;/code&gt; 指定的文件内容可全部配置在 &lt;code&gt;.fatherrc.js&lt;/code&gt; 的 &lt;a href=&quot;https://raw.githubusercontent.com/umijs/father/master/#doc&quot;&gt;doc&lt;/a&gt; 配置里。&lt;/li&gt; 
 &lt;li&gt;使用 &lt;code&gt;deploy&lt;/code&gt; 之前请先执行 &lt;code&gt;build&lt;/code&gt; 命令，文档部署后域名为：&lt;code&gt;https://yourname.github.io/your-repo&lt;/code&gt;。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Config&lt;/h2&gt; 
&lt;p&gt;新建 &lt;code&gt;.fatherrc.js&lt;/code&gt; 文件进行配置。&lt;/p&gt; 
&lt;p&gt;比如：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  entry: &#39;src/foo.js&#39;,
  doc: {
    themeConfig: { mode: &#39;dark&#39; },
    base: &#39;/your-repo&#39;
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;注意：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;lerna 项目可以为每个 package 单独配，并且可以继承根目录的 &lt;code&gt;.fatherrc.js&lt;/code&gt; 配置&lt;/li&gt; 
 &lt;li&gt;配置文件支持 es6 和 TypeScript&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;h4&gt;entry&lt;/h4&gt; 
&lt;p&gt;指定入口文件。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;string | string[]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default：&lt;code&gt;src/index.js&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;注：事实上，我们会依次找 &lt;code&gt;src/index.tsx&lt;/code&gt;, &lt;code&gt;src/index.ts&lt;/code&gt;, &lt;code&gt;src/index.jsx&lt;/code&gt;, &lt;code&gt;src/index.js&lt;/code&gt;，如果存在，则会作为默认的 entry。如果库文件为 &lt;code&gt;typescript&lt;/code&gt;，则需要在根目录配置&lt;code&gt;tsconfig.json&lt;/code&gt;，否则会编译错误。&lt;/p&gt; 
&lt;h4&gt;file&lt;/h4&gt; 
&lt;p&gt;指定输出文件。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: 与 entry 相同的文件名，esm 会加 &lt;code&gt;.esm.js&lt;/code&gt; 后缀，umd 会加 &lt;code&gt;.umd[.min].js&lt;/code&gt; 后缀&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;注：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;entry 为数组时，不可配置 file，因为不能多个 entry 输出到同一个文件&lt;/li&gt; 
 &lt;li&gt;为不同 entry 指定不同的输出文件名时，可通过 &lt;a href=&quot;https://raw.githubusercontent.com/umijs/father/master/#overridesbyentry&quot;&gt;overridesByEntry&lt;/a&gt; 实现&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;esm&lt;/h4&gt; 
&lt;p&gt;是否输出 esm 格式，以及指定 esm 格式的打包方式等。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;&quot;rollup&quot; | &quot;babel&quot; | { type, file, mjs } | false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;esm 为 &lt;code&gt;rollup&lt;/code&gt; 或 &lt;code&gt;babel&lt;/code&gt; 时，等同于配置了 &lt;code&gt;{ type: &quot;rollup&quot; | &quot;babel&quot; }&lt;/code&gt;。&lt;/p&gt; 
&lt;h4&gt;esm.type&lt;/h4&gt; 
&lt;p&gt;指定 esm 的打包类型，可选 &lt;code&gt;rollup&lt;/code&gt; 或 &lt;code&gt;babel&lt;/code&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;&quot;rollup&quot; | &quot;babel&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;esm.file&lt;/h4&gt; 
&lt;p&gt;指定 esm 的输出文件名。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;esm.mjs&lt;/h4&gt; 
&lt;p&gt;是否同时输出一份给浏览器用的 esm，以 &lt;code&gt;.mjs&lt;/code&gt; 为后缀。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;注：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;mjs 目前不通用，除非你知道这是什么，否则不要配置。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;esm.minify&lt;/h4&gt; 
&lt;p&gt;是否压缩 esm 格式。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通常不需要配置，除非你发布到 npm 的代码需要保密。&lt;/p&gt; 
&lt;h4&gt;esm.importLibToEs&lt;/h4&gt; 
&lt;p&gt;是否在 esm 模式下把 import 项里的 &lt;code&gt;/lib/&lt;/code&gt; 转换为 &lt;code&gt;/es/&lt;/code&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;比如 &lt;code&gt;import &#39;foo/lib/button&#39;;&lt;/code&gt;，在 cjs 模式下会保持原样，在 esm 模式下会编译成 &lt;code&gt;import &#39;foo/es/button&#39;;&lt;/code&gt;。&lt;/p&gt; 
&lt;h4&gt;cjs&lt;/h4&gt; 
&lt;p&gt;是否输出 cjs 格式，以及指定 cjs 格式的打包方式等。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;&quot;rollup&quot; | &quot;babel&quot; | { type, file } | false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;cjs 为 &lt;code&gt;rollup&lt;/code&gt; 或 &lt;code&gt;babel&lt;/code&gt; 时，等同于配置了 &lt;code&gt;{ type: &quot;rollup&quot; | &quot;babel&quot; }&lt;/code&gt;。&lt;/p&gt; 
&lt;h4&gt;cjs.type&lt;/h4&gt; 
&lt;p&gt;指定 cjs 的打包类型，可选 &lt;code&gt;rollup&lt;/code&gt; 或 &lt;code&gt;babel&lt;/code&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;&quot;rollup&quot; | &quot;babel&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;cjs.file&lt;/h4&gt; 
&lt;p&gt;指定 cjs 的输出文件名。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;cjs.minify&lt;/h4&gt; 
&lt;p&gt;是否压缩 cjs 格式。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通常不需要配置，除非你发布到 npm 的代码需要保密。&lt;/p&gt; 
&lt;h4&gt;cjs.lazy&lt;/h4&gt; 
&lt;p&gt;是否开启 lazy require。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;对于工具来说推荐开启，可加速命令行执行速度，同时减少依赖和耦合。&lt;/p&gt; 
&lt;h4&gt;umd&lt;/h4&gt; 
&lt;p&gt;是否输出 umd 格式，以及指定 umd 的相关配置。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;{ globals, name, minFile, file, sourcemap } | false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;umd.globals&lt;/h4&gt; 
&lt;p&gt;指定 rollup 的 &lt;a href=&quot;https://rollupjs.org/guide/en#output-globals&quot;&gt;globals&lt;/a&gt; 配置。&lt;/p&gt; 
&lt;h4&gt;umd.name&lt;/h4&gt; 
&lt;p&gt;指定 rollup 的 &lt;a href=&quot;https://rollupjs.org/guide/en#output-name&quot;&gt;name&lt;/a&gt; 配置。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;${camelCase(basename(pkg.name))}&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;umd.minFile&lt;/h4&gt; 
&lt;p&gt;是否为 umd 生成压缩后的版本。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;umd.file&lt;/h4&gt; 
&lt;p&gt;指定 umd 的输出文件名。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;umd.sourcemap&lt;/h4&gt; 
&lt;p&gt;是否同步输出sourcemap。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;autoprefixer&lt;/h4&gt; 
&lt;p&gt;配置参数传给 autoprefixer，详见 &lt;a href=&quot;https://github.com/postcss/autoprefixer#options&quot;&gt;autoprefixer#options&lt;/a&gt;，常用的有 &lt;code&gt;flexbox&lt;/code&gt; 和 &lt;code&gt;browsers&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;比如：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  autoprefixer: {
    browsers: [
      &#39;ie&amp;gt;8&#39;,
      &#39;Safari &amp;gt;= 6&#39;,
    ],
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;cssModules&lt;/h4&gt; 
&lt;p&gt;配置是否开启 css modules。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean | object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;默认是 &lt;code&gt;.module.css&lt;/code&gt; 走 css modules，&lt;code&gt;.css&lt;/code&gt; 不走 css modules。配置 &lt;code&gt;cssModules&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 后，全部 css 文件都走 css modules。（less 文件同理）&lt;/p&gt; 
&lt;p&gt;如果配置了 object，会被透传给 &lt;a href=&quot;https://github.com/css-modules/postcss-modules&quot;&gt;postcss-modules&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;比如，要定制 css modules 的样式名前缀，&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  cssModules: {
    generateScopedName: &#39;foo-bar_[name]__[local]___[hash:base64:5]&#39;,
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;extractCSS&lt;/h4&gt; 
&lt;p&gt;配置是否提取 css 为单独文件。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;injectCSS&lt;/h4&gt; 
&lt;p&gt;是否在 &amp;lt;head&amp;gt;里注入css, 如果&lt;code&gt;extractCSS: true&lt;/code&gt;，则为&lt;code&gt;false&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;extraBabelPresets&lt;/h4&gt; 
&lt;p&gt;配置额外的 babel preset。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;extraBabelPlugins&lt;/h4&gt; 
&lt;p&gt;配置额外的 babel plugin。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;比如配置 babel-plugin-import 按需加载 antd，&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  extraBabelPlugins: [
    [&#39;babel-plugin-import&#39;, {
      libraryName: &#39;antd&#39;,
      libraryDirectory: &#39;es&#39;,
      style: true,
    }],
  ],
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;extraPostCSSPlugins&lt;/h4&gt; 
&lt;p&gt;配置额外的 postcss plugin。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;extraRollupPlugins&lt;/h4&gt; 
&lt;p&gt;配置额外的 rollup plugin。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import url from &#39;rollup-plugin-url&#39;;

export default {
  extraRollupPlugins:[url()],
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;extraExternals&lt;/h4&gt; 
&lt;p&gt;为 rollup 模式配置额外的 external，但不推荐这么做，external 可通过 dependencies 和 peerDependencies 的约定实现。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;string[]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;externalsExclude&lt;/h4&gt; 
&lt;p&gt;配置一些依赖不走 externals。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;string[]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;比如 &#39;foo&#39; 走 externals，而 &lt;code&gt;foo/bar&lt;/code&gt; 不走，可以这么配，&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  extraExternals: [&#39;foo&#39;],
  externalsExclude: [&#39;foo/bar&#39;],
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;include&lt;/h4&gt; 
&lt;p&gt;配置 rollup-plugin-commonjs 的 [include][https://github.com/rollup/rollup-plugin-commonjs#usage]。&lt;/p&gt; 
&lt;h4&gt;nodeResolveOpts&lt;/h4&gt; 
&lt;p&gt;配置 &lt;a href=&quot;https://github.com/rollup/rollup-plugin-node-resolve&quot;&gt;rollup-plugin-node-resolve&lt;/a&gt; 参数。&lt;/p&gt; 
&lt;h4&gt;disableTypeCheck&lt;/h4&gt; 
&lt;p&gt;是否禁用类型检测。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;target&lt;/h4&gt; 
&lt;p&gt;配置是 node 库还是 browser 库，只作用于语法层。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;&quot;node&quot; | &quot;browser&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;&quot;browser&quot;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;如果为 &lt;code&gt;node&lt;/code&gt;，兼容到 node@6；如果为 &lt;code&gt;browser&lt;/code&gt;，兼容到 &lt;code&gt;[&#39;last 2 versions&#39;, &#39;IE 10&#39;]&lt;/code&gt;，所以肯定会是 es5 的语法。&lt;/p&gt; 
&lt;h4&gt;browserFiles&lt;/h4&gt; 
&lt;p&gt;target 为 &lt;code&gt;node&lt;/code&gt; 时，配置例外文件走 &lt;code&gt;browser&lt;/code&gt; target。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;[string]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;注：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;所有 &lt;code&gt;.tsx&lt;/code&gt; 和 &lt;code&gt;.jsx&lt;/code&gt; 文件始终走 &lt;code&gt;browser&lt;/code&gt; target。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;nodeFiles&lt;/h4&gt; 
&lt;p&gt;target 为 &lt;code&gt;browser&lt;/code&gt; 时，配置例外文件走 &lt;code&gt;node&lt;/code&gt; target。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;[string]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;runtimeHelpers&lt;/h4&gt; 
&lt;p&gt;是否把 helper 方法提取到 &lt;code&gt;@babel/runtime&lt;/code&gt; 里。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;注：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;推荐开启，能节约不少尺寸&lt;/li&gt; 
 &lt;li&gt;配置了 &lt;code&gt;runtimeHelpers&lt;/code&gt;，一定要在 dependencies 里有 &lt;code&gt;@babel/runtime&lt;/code&gt; 依赖&lt;/li&gt; 
 &lt;li&gt;runtimeHelpers 只对 esm 有效，cjs 下无效，因为 cjs 已经不给浏览器用了，只在 ssr 时会用到，无需关心小的尺寸差异&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;replace&lt;/h4&gt; 
&lt;p&gt;配置需要替换的内容，基于 &lt;a href=&quot;https://github.com/rollup/rollup-plugin-replace&quot;&gt;rollup-plugin-replace&lt;/a&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;注：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;babel 模式下暂不支持&lt;/li&gt; 
 &lt;li&gt;如果要输出字符串，值的部分用 &lt;code&gt;JSON.stringify()&lt;/code&gt; 转下&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;比如：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  replace: {
    VERSION: JSON.stringify(require(&#39;./package&#39;).version),
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;inject&lt;/h4&gt; 
&lt;p&gt;配置需要替换成依赖引用的全局变量 Map，基于 &lt;a href=&quot;https://github.com/rollup/rollup-plugin-inject&quot;&gt;rollup-plugin-inject&lt;/a&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;比如：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  inject: {
    &#39;window.foo&#39;: &#39;foo&#39;,
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;那么，&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(window.foo);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;会被编译成，&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import $inject_window_foo from &#39;foo&#39;;
console.log($inject_window_foo);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;lessInRollupMode&lt;/h4&gt; 
&lt;p&gt;在 rollup 模式下做 less 编译，支持配置 less 在编译过程中的 Options&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;可以配置 modifyVars 等， 详见 less 的 &lt;a href=&quot;http://lesscss.org/usage/#less-options&quot;&gt;Options 文档&lt;/a&gt;。&lt;/p&gt; 
&lt;h4&gt;lessInBabelMode&lt;/h4&gt; 
&lt;p&gt;在 babel 模式下做 less 编译，基于 &lt;a href=&quot;https://github.com/gulp-community/gulp-less&quot;&gt;gulp-less&lt;/a&gt;，默认不开启。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt; | &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;可以配置 paths 和 plugins，详见 gulp-less 的 Options 文档。&lt;/p&gt; 
&lt;p&gt;若配置 lessInBabelMode 为 &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy&quot;&gt;truthy&lt;/a&gt;，则会将&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;./index.less&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;转换成&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;./index.css&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;sassInRollupMode&lt;/h4&gt; 
&lt;p&gt;在 rollup 模式下做 sass 编译，支持配置 sass 在编译过程中的 Options。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注：使用此功能需手动安装 node-sass 依赖。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详见 sass 的 &lt;a href=&quot;https://www.npmjs.com/package/node-sass#options&quot;&gt;Options 文档&lt;/a&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;Boolean&lt;/code&gt; | &lt;code&gt;Object&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;nodeVersion&lt;/h4&gt; 
&lt;p&gt;指定 node 版本。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type: &lt;code&gt;Number&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default: &lt;code&gt;6&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;比如：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  target: &#39;node&#39;,
  nodeVersion: 8,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;overridesByEntry&lt;/h4&gt; 
&lt;p&gt;根据 entry 覆盖配置。&lt;/p&gt; 
&lt;p&gt;比如要为不同的 entry 配置不同的输出文件名，&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  entry: [&#39;foo.js&#39;, &#39;bar.js&#39;],
  overridesByEntry: {
    &#39;foo.js&#39;: {
      file: &#39;bar&#39;,
    },
    &#39;bar.js&#39;: {
      file: &#39;foo&#39;,
    },
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;overridesByEntry 里的配置会和外面的配置进行 shadow 合并，比如：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  umd: { globals: { jquery: &#39;window.jQuery&#39; } }
  entry: [&#39;foo.js&#39;, &#39;bar.js&#39;],
  overridesByEntry: {
    &#39;foo.js&#39;: {
      umd: { name: &#39;foo&#39; },
    },
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;则 &lt;code&gt;foo.js&lt;/code&gt; 的 umd 配置为 &lt;code&gt;{ globals: { jquery: &#39;window.jQuery&#39; }, name: &#39;foo&#39; }&lt;/code&gt;。&lt;/p&gt; 
&lt;h4&gt;doc&lt;/h4&gt; 
&lt;p&gt;透传配置给 &lt;a href=&quot;https://www.docz.site/documentation/project-configuration&quot;&gt;docz&lt;/a&gt;，可以有 &lt;code&gt;title&lt;/code&gt;、&lt;code&gt;theme&lt;/code&gt;、&lt;code&gt;themeConfig&lt;/code&gt; 等。&lt;/p&gt; 
&lt;p&gt;比如要切换默认主题为 dark 模式：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  doc: { themeConfig: { mode: &#39;dark&#39; } },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;doc.htmlContext&lt;/h4&gt; 
&lt;p&gt;此配置在 docz 中没有标明，但是却是支持的，可用于扩展 html 模板。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  doc: {
    htmlContext: {
      head: {
        favicon: &#39;&#39;,
        meta: [],
        links: [
          { rel: &#39;stylesheet&#39;, href: &#39;foo.css&#39; },
        ],
        scripts: [
          { src: &#39;bar.js&#39; },
        ],
      },
      body: {
        scripts: [
          { src: &#39;hoo.js&#39; },
        ],
      },
    },
  }
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;pkgs&lt;/h3&gt; 
&lt;p&gt;在 lerna 构建中，有可能出现组件间有构建先后的需求，比如在有两个包 &lt;code&gt;packages/father-a&lt;/code&gt; 和 &lt;code&gt;packages/father-util&lt;/code&gt;，在 &lt;code&gt;father-a&lt;/code&gt; 中对 &lt;code&gt;father-util&lt;/code&gt; 有依赖，此时需要先构建 &lt;code&gt;father-util&lt;/code&gt; 才能保证构建的正确性&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pkgs&lt;/code&gt; 允许你自定义 packages 目录下的构建顺序，如以上场景对应的配置为&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export default {
  pkgs: [
    &#39;father-util&#39;,
    &#39;father-a&#39;,
  ],
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bonus&lt;/h2&gt; 
&lt;p&gt;一些小贴士：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;通常只要配置 &lt;code&gt;esm: &quot;rollup&quot;&lt;/code&gt; 就够了&lt;/li&gt; 
 &lt;li&gt;cjs 和 esm 支持 rollup 和 babel 两种打包方式，rollup 是跟进 entry 把项目依赖打包在一起输出一个文件，babel 是把 src 目录转化成 lib（cjs） 或 es（esm）&lt;/li&gt; 
 &lt;li&gt;如果要考虑 ssr，再配上 &lt;code&gt;cjs: &quot;rollup&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;package.json&lt;/code&gt; 里配上 &lt;code&gt;sideEffects: false | string[]&lt;/code&gt;，会让 webpack 的 &lt;a href=&quot;https://webpack.js.org/guides/tree-shaking/&quot;&gt;tree-shaking&lt;/a&gt; 更高效&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;关于 dependencies、peerDependencies 和 external&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;cjs 和 esm 格式打包方式选 rollup 时有个约定，dependencies 和 peerDependencies 里的内容会被 external&lt;/li&gt; 
 &lt;li&gt;esm.mjs 和 umd 格式，只有 peerDenendencies 会被 external&lt;/li&gt; 
 &lt;li&gt;打包方式 babel 时无需考虑 external，因为是文件到文件的编译，不处理文件合并&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;关于 babel 模式&lt;/h3&gt; 
&lt;p&gt;babel 模式下一些文件不会被编译到 es 和 lib 下，包含：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;__test__&lt;/code&gt; 目录&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fixtures&lt;/code&gt; 目录&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;demos&lt;/code&gt; 目录&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mdx&lt;/code&gt; 文件&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;md&lt;/code&gt; 文件&lt;/li&gt; 
 &lt;li&gt;测试文件，比如 &lt;code&gt;test.js&lt;/code&gt;、&lt;code&gt;spec.js&lt;/code&gt;、&lt;code&gt;e2e.js&lt;/code&gt;，后缀还支持 &lt;code&gt;jsx&lt;/code&gt;、&lt;code&gt;ts&lt;/code&gt; 和 &lt;code&gt;tsx&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;环境变量&lt;/h2&gt; 
&lt;h3&gt;LERNA&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;LERNA=none&lt;/code&gt; 时强制不走 lerna 方式的构建。&lt;/p&gt; 
&lt;h3&gt;PACKAGE&lt;/h3&gt; 
&lt;p&gt;lerna 模式下，指定 package 只构建一个，调试时用于提效。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 只构建 packages/foo
$ PACKAGE=foo father build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>meliorence/react-native-render-html</title>
      <link>https://github.com/meliorence/react-native-render-html</link>
      <description>&lt;p&gt;iOS/Android pure javascript react-native component that renders your HTML into 100% native views&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/platforms-Android%20%7C%20iOS-brightgreen.svg?colorB=191A17&quot; alt=&quot;platforms&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react-native-render-html&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-native-render-html/latest&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react-native-render-html&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-native-render-html/next&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://semver.org/spec/v2.0.0.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/semver-2.0.0-e10079.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/meliorence/react-native-render-html&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/gh/meliorence/react-native-render-html&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/meliorence/react-native-render-html/actions?query=branch%3Amaster+workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/meliorence/react-native-render-html/workflows/CI/badge.svg?branch=master&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react-native-render-html&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/react-native-render-html.svg?colorB=007ec6&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/meliorence/react-native-render-html/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/meliorence/react-native-render-html.svg&quot; alt=&quot;github issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/meliorence/react-native-render-html/issues?q=is%3Aissue+is%3Aclosed&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-closed/meliorence/react-native-render-html.svg?colorB=44cc11&quot; alt=&quot;github closed issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/dbEMMJM&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/736906960041148476?label=discord&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#react-native-render-html&quot;&gt;react-native-render-html&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#versions&quot;&gt;Versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#install&quot;&gt;Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#basic-usage&quot;&gt;Basic usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#props&quot;&gt;Props&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#demo&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#creating-custom-renderers&quot;&gt;Creating custom renderers&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#custom-html-tags&quot;&gt;Custom HTML tags&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#making-your-custom-component-block-or-inline&quot;&gt;Making your custom component block or inline&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#lists-prefixes&quot;&gt;Lists prefixes&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#styling&quot;&gt;Styling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#images&quot;&gt;Images&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#altering-content&quot;&gt;Altering content&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#alterdata&quot;&gt;alterData&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#alterchildren&quot;&gt;alterChildren&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#alternode&quot;&gt;alterNode&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#onparsed&quot;&gt;onParsed&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#ignoring-html-content&quot;&gt;Ignoring HTML content&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#useful-functions&quot;&gt;Utilities&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#help&quot;&gt;Help&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;:warning: &lt;strong&gt;You are on the master branch which is home for the latest development.&lt;/strong&gt; Check the table bellow to get documentation for your exact version. Because the patch version is irrelevant regarding the features of one version, we will point to the last patch release of a minor version. You can read our full branching policy in the &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/MAINTAINING.adoc#branching&quot;&gt;MAINTAINING.adoc&lt;/a&gt; file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Stable releases&lt;/h3&gt; 
&lt;p&gt;| Minor | Branch | Documentation | Test Status | Latest | | ----- | --------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------ | | 5.0&amp;nbsp;&amp;nbsp; | &amp;nbsp;&lt;a href=&quot;https://github.com/meliorence/react-native-render-html/tree/release/5.0&quot;&gt;release/5.0&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &lt;a href=&quot;https://github.com/meliorence/react-native-render-html/blob/release/5.0/README.md&quot;&gt;release/5.0/README.md&lt;/a&gt; | &lt;img src=&quot;https://github.com/meliorence/react-native-render-html/workflows/CI/badge.svg?branch=release%2F5.0&quot; alt=&quot;CI&quot;&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-native-render-html/release/5.0&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; | | 4.2&amp;nbsp;&amp;nbsp; | &amp;nbsp;&lt;a href=&quot;https://github.com/meliorence/react-native-render-html/tree/release/4.2&quot;&gt;release/4.2&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &lt;a href=&quot;https://github.com/meliorence/react-native-render-html/blob/release/4.2/README.md&quot;&gt;release/4.2/README.md&lt;/a&gt; | &lt;img src=&quot;https://github.com/meliorence/react-native-render-html/workflows/CI/badge.svg?branch=release%2F4.2&quot; alt=&quot;CI&quot;&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-native-render-html/release/4.2&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Pre-releases&lt;/h3&gt; 
&lt;p&gt;| Tag | Branch | Test Status | Latest | | ------- | ----------- | ------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------- | | next | dev/5.x | &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#&quot;&gt;&lt;img src=&quot;https://github.com/meliorence/react-native-render-html/workflows/CI/badge.svg?branch=dev%2f5.x&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-native-render-html/next&quot; alt=&quot;&quot;&gt;&lt;/a&gt; | | foundry | dev/foundry | &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#&quot;&gt;&lt;img src=&quot;https://github.com/meliorence/react-native-render-html/workflows/CI/badge.svg?branch=dev%2ffoundry&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-native-render-html/foundry&quot; alt=&quot;&quot;&gt;&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install react-native-render-html
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;:city_sunrise: To try out pre-releases up-to-date with development, including many fixes, you are encouraged to install the &lt;code&gt;next&lt;/code&gt; tag versions. With our test-first approach, the fixes and features in this branch will have been tested, so the chances you encounter a bug is pretty low. If you encounter any issue on a pre-release, you don&#39;t need to fill a full bug report. Just &lt;a href=&quot;https://github.com/meliorence/react-native-render-html/issues?q=is%3Aissue+is%3Aopen+label%3Arelease&quot;&gt;comment our latest release thread&lt;/a&gt;. To install the &lt;code&gt;next&lt;/code&gt; version: 
  &lt;!-- raw HTML omitted --&gt;npm install react-native-render-html@next
  &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
 &lt;p&gt;If you wish, you can also try directly the master branch:&lt;/p&gt; 
 &lt;!-- raw HTML omitted --&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Basic usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &quot;react&quot;;
import { ScrollView, useWindowDimensions } from &quot;react-native&quot;;
import HTML from &quot;react-native-render-html&quot;;

const htmlContent = `
    &amp;lt;h1&amp;gt;This HTML snippet is now rendered with native components !&amp;lt;/h1&amp;gt;
    &amp;lt;h2&amp;gt;Enjoy a webview-free and blazing fast application&amp;lt;/h2&amp;gt;
    &amp;lt;img src=&quot;https://i.imgur.com/dHLmxfO.jpg?2&quot; /&amp;gt;
    &amp;lt;em style=&quot;textAlign: center;&quot;&amp;gt;Look at how happy this native cat is&amp;lt;/em&amp;gt;
`;

export default function Demo() {
  const contentWidth = useWindowDimensions().width;
  return (
    &amp;lt;ScrollView style={{ flex: 1 }}&amp;gt;
      &amp;lt;HTML source={{ html: htmlContent }} contentWidth={contentWidth} /&amp;gt;
    &amp;lt;/ScrollView&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Props&lt;/h2&gt; 
&lt;p&gt;| Prop | Description | Type | Required/Default | | -------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------- | ------------------------------------------------------------ | | &lt;code&gt;renderers&lt;/code&gt; | Your &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#creating-custom-renderers&quot;&gt;custom renderers&lt;/a&gt; | &lt;code&gt;object&lt;/code&gt; | Optional, some default ones are supplied (&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;...) | | &lt;code&gt;renderersProps&lt;/code&gt; | Set of props accessible into your &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#creating-custom-renderers&quot;&gt;custom renderers&lt;/a&gt; in &lt;code&gt;passProps&lt;/code&gt; (4th argument) | &lt;code&gt;object&lt;/code&gt; | Optional | | &lt;code&gt;source&lt;/code&gt; | The source to render. | &lt;code&gt;{ uri, method, body, headers }&lt;/code&gt; or &lt;code&gt;{ html }&lt;/code&gt; | Required | | &lt;code&gt;htmlParserOptions&lt;/code&gt; | Partial ParserOptions for &lt;a href=&quot;https://github.com/fb55/htmlparser2/wiki/Parser-options&quot;&gt;htmlparser2&lt;/a&gt; | &lt;code&gt;object&lt;/code&gt; | Optional, defaults to &lt;code&gt;{ decodeEntities: true }&lt;/code&gt; | | &lt;code&gt;computeEmbeddedMaxWidth&lt;/code&gt; | A function which takes &lt;code&gt;contentWidth&lt;/code&gt; as argument and returns a new max width. Can return &lt;code&gt;Infinity&lt;/code&gt; to denote unconstrained widths. Works for images, iframes (with module) | f(number,&amp;nbsp;string) → number | Optional, defaults to the identity function | | &lt;code&gt;contentWidth&lt;/code&gt; | The width of the HTML content to display. If you don&#39;t pass this prop, images might overflow horizontally and take up to all their physical width. The recommended practice is to pass &lt;code&gt;useWindowDimensions().width&lt;/code&gt; minus any padding or margins. | &lt;code&gt;number&lt;/code&gt; | Optional, defaults to &lt;code&gt;Dimensions.window().width&lt;/code&gt; | | &lt;code&gt;enableExperimentalPercentWidth&lt;/code&gt; | Support for relative percent-widths. Currently, it only works for images. | &lt;code&gt;boolean&lt;/code&gt; | Optional, defaults to &lt;code&gt;false&lt;/code&gt; | | &lt;code&gt;imagesInitialDimensions&lt;/code&gt; | Default width and height to display while image&#39;s dimensions are being retrieved, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#images&quot;&gt;images&lt;/a&gt; | &lt;code&gt;{ width: 100, height: 100 }&lt;/code&gt; | Optional | | &lt;code&gt;onLinkPress&lt;/code&gt; | Fired with the event, the href and an object with all attributes of the tag as its arguments when tapping a link | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;onParsed&lt;/code&gt; | Fired when your HTML content has been parsed. Also useful to tweak your rendering, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#onparsed&quot;&gt;onParsed&lt;/a&gt; | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;tagsStyles&lt;/code&gt; | Provide your styles for specific HTML tags, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#styling&quot;&gt;styling&lt;/a&gt; | &lt;code&gt;object&lt;/code&gt; | Optional | | &lt;code&gt;classesStyles&lt;/code&gt; | Provide your styles for specific HTML classes, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#styling&quot;&gt;styling&lt;/a&gt; | &lt;code&gt;object&lt;/code&gt; | Optional | | &lt;code&gt;listsPrefixesRenderers&lt;/code&gt; | Your custom renderers from &lt;code&gt;ul&lt;/code&gt; and &lt;code&gt;ol&lt;/code&gt; bullets, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#lists-prefixes&quot;&gt;lists prefixes&lt;/a&gt; | &lt;code&gt;object&lt;/code&gt; | Optional | | &lt;code&gt;containerStyle&lt;/code&gt; | Custom style for the default container of the renderered HTML | &lt;code&gt;object&lt;/code&gt; | Optional | | &lt;code&gt;customWrapper&lt;/code&gt; | Replace the default wrapper with a function that takes your content as the first parameter | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;remoteLoadingView&lt;/code&gt; | Replace the default loader while fetching a remote website&#39;s content | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;remoteErrorView&lt;/code&gt; | Replace the default error if a remote website&#39;s content could not be fetched | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;emSize&lt;/code&gt; | The default value in pixels for &lt;code&gt;1em&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | &lt;code&gt;14&lt;/code&gt; | | &lt;code&gt;ptSize&lt;/code&gt; | The default value in pixels for &lt;code&gt;1pt&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | &lt;code&gt;1.3&lt;/code&gt; | | &lt;code&gt;baseFontStyle&lt;/code&gt; | The default style applied to &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt; components | &lt;code&gt;object&lt;/code&gt; | &lt;code&gt;{ fontSize: 14 }&lt;/code&gt; | | &lt;code&gt;defaultTextProps&lt;/code&gt; | Default props for Text elements in the render tree. | &lt;code&gt;object&lt;/code&gt; | Optional | | &lt;code&gt;defaultWebViewProps&lt;/code&gt; | Default props for WebView elements in the render tree used by plugins. | &lt;code&gt;object&lt;/code&gt; | Optional | | &lt;code&gt;alterData&lt;/code&gt; | Target some specific texts and change their content, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#altering-content&quot;&gt;altering content&lt;/a&gt; | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;alterChildren&lt;/code&gt; | Target some specific nested children and change them, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#altering-content&quot;&gt;altering content&lt;/a&gt; | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;alterNode&lt;/code&gt; | Target a specific node and change it, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#altering-content&quot;&gt;altering content&lt;/a&gt; | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;ignoredTags&lt;/code&gt; | HTML tags you don&#39;t want rendered, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#ignoring-html-content&quot;&gt;ignoring HTML content&lt;/a&gt; | &lt;code&gt;array&lt;/code&gt; | Optional, &lt;code&gt;[&#39;head&#39;, &#39;script&#39;, ...]&lt;/code&gt; | | &lt;code&gt;allowedStyles&lt;/code&gt; | Allow render only certain CSS style properties and ignore every other. If you have some property both in &lt;code&gt;allowedStyles&lt;/code&gt; and &lt;code&gt;ignoredStyles&lt;/code&gt;, it will be ignored anyway. | &lt;code&gt;array&lt;/code&gt; | Optional, everything is allowed by default | | &lt;code&gt;ignoredStyles&lt;/code&gt; | CSS styles from the &lt;code&gt;style&lt;/code&gt; attribute you don&#39;t want rendered, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#ignoring-html-content&quot;&gt;ignoring HTML content&lt;/a&gt; | &lt;code&gt;array&lt;/code&gt; | Optional | | &lt;code&gt;ignoreNodesFunction&lt;/code&gt; | Return true in this custom function to ignore nodes very precisely, see &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#ignoring-html-content&quot;&gt;ignoring HTML content&lt;/a&gt; | &lt;code&gt;function&lt;/code&gt; | Optional | | &lt;code&gt;debug&lt;/code&gt; | Prints the parsing result from htmlparser2 and render-html after the initial render | &lt;code&gt;bool&lt;/code&gt; | Optional, defaults to &lt;code&gt;false&lt;/code&gt; | | &lt;code&gt;WebView&lt;/code&gt; | The WebView component used by plugins (iframe, table)... See &lt;a href=&quot;https://github.com/native-html/plugins&quot;&gt;@native-html/plugins&lt;/a&gt;. | &lt;code&gt;ComponentType&lt;/code&gt; | Optional | | &lt;code&gt;allowWhitespaceNodes&lt;/code&gt; | Allows the rendering of nodes that consist of only whitespace characters | &lt;code&gt;bool&lt;/code&gt; | Optional, defaults to &lt;code&gt;false&lt;/code&gt; |&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;This component comes with a demo that showcases every feature presented here. It&#39;s very useful to keep track of bugs and rendering differences between the different versions of react-native.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;It is mandatory&lt;/strong&gt; to refer to an example of the demo or to provide one when submitting an issue or a pull request for a new feature.&lt;/p&gt; 
&lt;p&gt;Feel free to write more advanced examples and submit a pull-request for it, it will probably be very useful for other users.&lt;/p&gt; 
&lt;h2&gt;Creating custom renderers&lt;/h2&gt; 
&lt;p&gt;This is very useful if you want to make some very specific styling of your HTML content, or even implement custom HTML tags.&lt;/p&gt; 
&lt;h3&gt;Custom HTML tags&lt;/h3&gt; 
&lt;p&gt;Just pass an object to the &lt;code&gt;renderers&lt;/code&gt; prop with the tag name as the key, an a function as its value, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;renderers: {
  hr: (htmlAttribs, children, convertedCSSStyles, passProps) =&amp;gt; (
    &amp;lt;View style={{ width: &quot;100%&quot;, height: 1, backgroundColor: &quot;blue&quot; }} /&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, we have overriden the default &lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt; renderer and made it a blue line.&lt;/p&gt; 
&lt;p&gt;You can also create your own tags and use them in your HTML content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const content = `&amp;lt;bluecircle&amp;gt;&amp;lt;/bluecircle&amp;gt;`;
...

renderers: {
    bluecircle: (htmlAttribs, children, convertedCSSStyles, passProps) =&amp;gt; (
      &amp;lt;View style={{ width: 20, height: 20, borderRadius: 10, backgroundColor: &#39;blue&#39; }} /&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Your renderers functions receive several arguments that will be very useful to make some very specific rendering.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;htmlAttribs&lt;/code&gt;: attributes attached to the node, parsed in a react-native way&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;children&lt;/code&gt;: array with the children of the node&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;convertedCSSStyles&lt;/code&gt;: conversion of the &lt;code&gt;style&lt;/code&gt; attribute from CSS to react-native&#39;s stylesheet&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;passProps&lt;/code&gt;: various useful information: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;renderersProps&lt;/code&gt; - the prop of the same name passed to the HTML component&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;nodeIndex&lt;/code&gt; - the index of the position relative to parent&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;transientChildren&lt;/code&gt; - the list of transient children (was previously known as &lt;code&gt;rawChildren&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;domNode&lt;/code&gt; - the DOM node&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;parentWrapper&lt;/code&gt; - Text or View?&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;data&lt;/code&gt; - for dom Text elements&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;key&lt;/code&gt; - the key for this renderer instance&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;parentTag&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onLinkPress&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;tagsStyles&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;classesStyles&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;defaultTextProps&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;defaultWebViewProps&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;computeEmbeddedMaxWidth&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;contentWidth&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Making your custom component block or inline&lt;/h3&gt; 
&lt;p&gt;By default, a custom renderer behaves like a block. So if you&#39;re rendering it between texts inside a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, you&#39;ll break your line.&lt;/p&gt; 
&lt;p&gt;If you want it to be inline, you can slightly change the way you declare it, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;renderers: {
    mytag: { renderer: myTagRenderer, wrapper: &#39;Text&#39; }, // new way, is inline
    myothertag: myOtherTagRenderer // old regular way (still valid, behaves like a block)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: the only values for &lt;code&gt;wrapper&lt;/code&gt; are &lt;code&gt;Text&lt;/code&gt; or &lt;code&gt;View&lt;/code&gt; (default). Those don&#39;t represent the &lt;code&gt;&amp;lt;View&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt; component of react-native but are instead used in the parser to prevent crashes and properly render every HTML markup.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Lists prefixes&lt;/h3&gt; 
&lt;p&gt;The default renderer of the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; tags will either render a bullet or the count of your elements. If you wish to change this without having to re-write the whole list rendering implementation, you can use the &lt;code&gt;listsPrefixesRenderers&lt;/code&gt; prop.&lt;/p&gt; 
&lt;p&gt;Just like with the &lt;code&gt;renderers&lt;/code&gt; prop, supply an object with &lt;code&gt;ul&lt;/code&gt; and/or &lt;code&gt;ul&lt;/code&gt; as functions that receive the &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#custom-html-tags&quot;&gt;same arguments as your custom HTML tags&lt;/a&gt;. For instance, you can swap the default black bullet of &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; with a blue cross:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// ... your props
ul: (htmlAttribs, children, convertedCSSStyles, passProps) =&amp;gt; {
  return &amp;lt;Text style={{ color: &quot;blue&quot;, fontSize: 16 }}&amp;gt;+&amp;lt;/Text&amp;gt;;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Styling&lt;/h2&gt; 
&lt;p&gt;In addition to your custom renderers, you can apply specific styles to HTML tags (&lt;code&gt;tagsStyles&lt;/code&gt;) or HTML classes (&lt;code&gt;classesStyles&lt;/code&gt;). You can also combine these styles with your custom renderers.&lt;/p&gt; 
&lt;p&gt;Styling options override themselves, so you might render a custom HTML tag with a &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#creating-custom-renderers&quot;&gt;custom renderer&lt;/a&gt; like &lt;code&gt;&amp;lt;bluecircle&amp;gt;&lt;/code&gt;, make it green with a class &lt;code&gt;&amp;lt;bluecircle class=&quot;make-me-green&quot;&amp;gt;&lt;/code&gt; or make it red by styling the tag itself.&lt;/p&gt; 
&lt;p&gt;The default style of your custom renderer will be merged to the one from your &lt;code&gt;classesStyles&lt;/code&gt; which will also be merged by the &lt;code&gt;style&lt;/code&gt; attribute.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;IMPORTANT NOTE: Do NOT use the &lt;code&gt;StyleSheet&lt;/code&gt; API to create the styles you&#39;re going to feed to &lt;code&gt;tagsStyle&lt;/code&gt; and &lt;code&gt;classesStyles&lt;/code&gt;. Although it might look like it&#39;s working at first, the caching logic of &lt;code&gt;react-native&lt;/code&gt; makes it impossible for this module to deep check each of your style to properly apply the precedence and priorities of your nested tags&#39; styles.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Here&#39;s a usage example&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// props
    tagsStyles: { i: { textAlign: &#39;center&#39;, fontStyle: &#39;italic&#39;, color: &#39;grey&#39; } },
    classesStyles: { &#39;last-paragraph&#39;: { textAlign: &#39;right&#39;, color: &#39;teal&#39;, fontWeight: &#39;800&#39; } }

const html = `
    &amp;lt;i&amp;gt;Here, we have a style set on the &quot;i&quot; tag with the &quot;tagsStyles&quot; prop.&amp;lt;/i&amp;gt;
    &amp;lt;p class=&quot;last-paragraph&quot;&amp;gt;Finally, this paragraph is styled through the classesStyles prop&amp;lt;/p&amp;gt;`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://puu.sh/xF7Jx/e4b395975d.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Images&lt;/h2&gt; 
&lt;p&gt;Since release 5.0, images are automatically scaled down to the available width, while preserving their aspect ratio.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For the scaling to work, you &lt;strong&gt;must&lt;/strong&gt; provide &lt;code&gt;contentWidth&lt;/code&gt; prop.&lt;/li&gt; 
 &lt;li&gt;If you need to define a maximum width for an image, use &lt;code&gt;computeEmbeddedMaxWidth&lt;/code&gt; prop.&lt;/li&gt; 
 &lt;li&gt;If you don&#39;t want scaling, set &lt;code&gt;computeEmbeddedMaxWidth&lt;/code&gt; prop to a function returning &lt;code&gt;Infinity&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In the below example, images maximum width will be the minimum between &lt;code&gt;500&lt;/code&gt; and the available width. Note that this function also works for other embedded, such as iframes (given that you installed the iframe plugin).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &quot;react&quot;;
import { ScrollView, useWindowDimensions } from &quot;react-native&quot;;
import HTML from &quot;react-native-render-html&quot;;

const htmlContent = &#39;&amp;lt;img src=&quot;https://i.imgur.com/dHLmxfO.jpg?2&quot; /&amp;gt;&#39;;

export default function Demo() {
  const contentWidth = useWindowDimensions().width;
  const computeEmbeddedMaxWidth = (availableWidth) =&amp;gt; {
    return Math.min(availableWidth, 500);
  };
  return (
    &amp;lt;ScrollView style={{ flex: 1 }}&amp;gt;
      &amp;lt;HTML
        souce={{ html: htmlContent }}
        contentWidth={contentWidth}
        computeEmbeddedMaxWidth={computeEmbeddedMaxWidth}
      /&amp;gt;
    &amp;lt;/ScrollView&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read the RFC document &lt;a href=&quot;https://github.com/meliorence/react-native-render-html/blob/master/rfc/001-A-deterministic-approach-to-embedded-content-scaling.adoc&quot;&gt;“A Deterministic Approach to Embedded Content Scaling”&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Altering content&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;alterData&lt;/code&gt; and &lt;code&gt;alterChildren&lt;/code&gt; props are very useful to make some modifications on the structure of your HTML before it&#39;s actually rendered with react components.&lt;/p&gt; 
&lt;p&gt;They both are functions that receive the parsed &lt;code&gt;node&lt;/code&gt; as their first and only parameter. You must return your changes: a &lt;code&gt;string&lt;/code&gt; with &lt;code&gt;alterData&lt;/code&gt; and an &lt;code&gt;array&lt;/code&gt; with &lt;code&gt;alterChildren&lt;/code&gt; or a falsy value if you don&#39;t need to change anything.&lt;/p&gt; 
&lt;h3&gt;alterData&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;alterData&lt;/code&gt; allows you to change the text content of your nodes. For instance, you can customize the content of &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; to render your titles in uppercase.&lt;/p&gt; 
&lt;p&gt;Here&#39;s how you would do that:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// ... your props
alterData: (node) =&amp;gt; {
  let { parent, data } = node;
  if (parent &amp;amp;&amp;amp; parent.name === &quot;h1&quot;) {
    // Texts elements are always children of wrappers, this is why we check the tag
    // with &quot;parent.name&quot; and not &quot;name&quot;
    return data.toUpperCase();
  }
  // Don&#39;t return anything (eg a falsy value) for anything else than the &amp;lt;h1&amp;gt; tag so nothing is altered
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;alterChildren&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;alterChildren&lt;/code&gt; allows you to change the children wrapped in any node. For instance, you might want to change the content of a list.&lt;/p&gt; 
&lt;p&gt;Here&#39;s an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// ... your props
alterChildren: (node) =&amp;gt; {
  const { children, name } = node;
  if (name === &quot;ol&quot; &amp;amp;&amp;amp; children &amp;amp;&amp;amp; children.length) {
    // Keep only the first two elements of the list
    return children.splice(0, 2);
  }
  // Don&#39;t return anything (eg a falsy value) for anything else than the &amp;lt;ol&amp;gt; tag so nothing is altered
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;alterNode&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;alterNode&lt;/code&gt; allows you to change the values parsed from your HTML before it&#39;s rendered. It&#39;s extremely powerful as a last resort to add some very specific styling or circumvent rendering problems.&lt;/p&gt; 
&lt;p&gt;Here&#39;s an advanced example where you would change the color of links inside a &lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;alterNode: (node) =&amp;gt; {
  const { name, parent } = node;
  // If the tag is an &amp;lt;a&amp;gt; and we&#39;ve found a parent to be a blockquote
  // (see the utils part of this documentation to know more about getParentsTagsRecursively)
  if (
    name === &quot;a&quot; &amp;amp;&amp;amp;
    getParentsTagsRecursively(parent).indexOf(&quot;blockquote&quot;) !== -1
  ) {
    // Let&#39;s assign a specific color to the node&#39;s attribs (if there already are)
    node.attribs = { ...(node.attribs || {}), style: `color:lightblue;` };
    return node;
  }
  // Don&#39;t return anything (eg a falsy value) for anything else so nothing is altered
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;onParsed&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;onParsed&lt;/code&gt; is a callback and lets you know when your HTML has been parsed. Its first argument is the &lt;code&gt;dom&lt;/code&gt; array from htmlparser2, its second is &lt;code&gt;RNElements&lt;/code&gt; which is the result of the parsing of this module.&lt;/p&gt; 
&lt;p&gt;If you want to tweak the parsed values, you can change &lt;code&gt;RNElements&lt;/code&gt; and return it. For instance, you could insert one of your custom component although it was not in your HTML content, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;onHTMLParsed = (dom, RNElements) =&amp;gt; {
  // Find the index of the first paragraph
  const ad = {
    wrapper: &quot;View&quot;,
    tagName: &quot;mycustomblock&quot;,
    attribs: {},
    parent: false,
    parentTag: false,
    nodeIndex: 4,
  };
  // Insert the component
  RNElements.splice(4, 0, ad);
  return RNElements;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Ignoring HTML content&lt;/h2&gt; 
&lt;p&gt;You can&#39;t expect native components to be able to render &lt;em&gt;everything&lt;/em&gt; you can find in your browser. And you might not entirely trust your contributors, so here are 3 props allowing you to prevent disasters without sanitizing your HTML on the server-side (that doesn&#39;t mean you shouldn&#39;t !).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ignoredTags&lt;/code&gt;: array of ignored HTML tags, by default &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;scripts&lt;/code&gt; are removed&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ignoredStyles&lt;/code&gt;: array of ignored CSS rules. Nothing is ignored by default&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ignoreNodesFunction&lt;/code&gt;: this is a cumbersome, yet powerful, way of ignoring very specific stuff.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt; that if you supply &lt;code&gt;ignoredTags&lt;/code&gt;, you will override the default ignored ones. There are &lt;em&gt;a lot&lt;/em&gt; of them, if you want to keep them and add your own, you can do something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { IGNORED_TAGS } from &#39;react-native-render-html&#39;;
...

// your props
ignoredTags={[ ...IGNORED_TAGS, &#39;tag1&#39;, &#39;tag2&#39;]}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;ignoreNodesFunction&lt;/code&gt; receives 3 parameters: &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;parentTagName&lt;/code&gt; and &lt;code&gt;parentIsText&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;node&lt;/code&gt; is the result of the HTML parsing, which allows you to look for children, check the parent&#39;s markup and much more. &lt;code&gt;parentTagName&lt;/code&gt; is a convenient way to access the parent of your node, and &lt;code&gt;parentIsText&lt;/code&gt; is a great way to make sure you won&#39;t be rendering a &lt;code&gt;&amp;lt;View&amp;gt;&lt;/code&gt; inside a &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt; which, right now, makes react-native crash.&lt;/p&gt; 
&lt;h2&gt;Utilities&lt;/h2&gt; 
&lt;p&gt;The API is exposing some functions you can use to write advanced behaviors more easily. You can import them like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { functionName } from &quot;react-native-render-html&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;getParentsTagsRecursively(node)&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Description&lt;/em&gt;: Returns an array with the tagname of every parent of a node or an empty array if nothing is found.&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Parameters&lt;/em&gt;: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: a parsed HTML node from &lt;code&gt;alterChildren&lt;/code&gt; for example&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Returns&lt;/em&gt;: An empty array or an array of strings.&lt;/li&gt; 
   &lt;li&gt;Notes: this is very useful to check if a node is nested in a specific parent. See &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/#alterNode&quot;&gt;alterNode&lt;/a&gt; for an advanced example.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;getClosestNodeParentByTag(node, tag)&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Description&lt;/em&gt;: Returns the closest parent of a node with a specific tag.&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Parameters&lt;/em&gt;: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: a parsed HTML node from &lt;code&gt;alterChildren&lt;/code&gt; for example&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Returns&lt;/em&gt;: An HTML node if found.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;constructStyles(params)&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Description&lt;/em&gt;: Create styles for a node to render.&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Parameters&lt;/em&gt;: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;params&lt;/code&gt;: an object with requirements to assemble styles (see Type definitions)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Returns&lt;/em&gt;: A styles array (style prop).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;domNodeToHTMLString(node, reporter)&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Description&lt;/em&gt;: Convert a DOM node to its HTML representation.&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Parameters&lt;/em&gt;: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: The DOM node stringify.&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;reporter(node, depth, html)&lt;/code&gt;: An optional function which takes every parsed node as 1st argument, the node depth as 2d argument, the transformed HTML for this node as 3d argument.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Returns&lt;/em&gt;: An HTML string converted from the DOM node.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If you&#39;re facing issues whit this library, &lt;a href=&quot;https://raw.githubusercontent.com/meliorence/react-native-render-html/master/HELP.adoc&quot;&gt;take a look at our dedicated document&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>APSL/react-native-keyboard-aware-scroll-view</title>
      <link>https://github.com/APSL/react-native-keyboard-aware-scroll-view</link>
      <description>&lt;p&gt;A ScrollView component that handles keyboard appearance and automatically scrolls to focused TextInput.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-native-keyboard-aware-scroll-view&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;A ScrollView component that handles keyboard appearance and automatically scrolls to focused &lt;code&gt;TextInput&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Supported versions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;v0.4.0&lt;/code&gt; requires &lt;code&gt;RN&amp;gt;=0.48&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v0.2.0&lt;/code&gt; requires &lt;code&gt;RN&amp;gt;=0.32.0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v0.1.2&lt;/code&gt; requires &lt;code&gt;RN&amp;gt;=0.27.2&lt;/code&gt; but you should use &lt;code&gt;0.2.0&lt;/code&gt; in order to make it work with multiple scroll views.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v0.0.7&lt;/code&gt; requires &lt;code&gt;react-native&amp;gt;=0.25.0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;v0.0.6&lt;/code&gt; for older RN versions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Installation can be done through &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm i react-native-keyboard-aware-scroll-view --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn add react-native-keyboard-aware-scroll-view
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;You can use the &lt;code&gt;KeyboardAwareScrollView&lt;/code&gt;, &lt;code&gt;KeyboardAwareSectionList&lt;/code&gt; or the &lt;code&gt;KeyboardAwareFlatList&lt;/code&gt; components. They accept &lt;code&gt;ScrollView&lt;/code&gt;, &lt;code&gt;SectionList&lt;/code&gt; and &lt;code&gt;FlatList&lt;/code&gt; default props respectively and implement a custom high order component called &lt;code&gt;KeyboardAwareHOC&lt;/code&gt; to handle keyboard appearance. The high order component is also available if you want to use it in any other component.&lt;/p&gt; 
&lt;p&gt;Import &lt;code&gt;react-native-keyboard-aware-scroll-view&lt;/code&gt; and wrap your content inside it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { KeyboardAwareScrollView } from &#39;react-native-keyboard-aware-scroll-view&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;KeyboardAwareScrollView&amp;gt;
  &amp;lt;View&amp;gt;
    &amp;lt;TextInput /&amp;gt;
  &amp;lt;/View&amp;gt;
&amp;lt;/KeyboardAwareScrollView&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Auto-scroll in &lt;code&gt;TextInput&lt;/code&gt; fields&lt;/h2&gt; 
&lt;p&gt;As of &lt;code&gt;v0.1.0&lt;/code&gt;, the component auto scrolls to the focused &lt;code&gt;TextInput&lt;/code&gt; 😎. For versions &lt;code&gt;v0.0.7&lt;/code&gt; and older you can do the following.&lt;/p&gt; 
&lt;h3&gt;Programatically scroll to any &lt;code&gt;TextInput&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;In order to scroll to any &lt;code&gt;TextInput&lt;/code&gt; field, you can use the built-in method &lt;code&gt;scrollToFocusedInput&lt;/code&gt;. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;_scrollToInput (reactNode: any) {
  // Add a &#39;scroll&#39; ref to your ScrollView
  this.scroll.props.scrollToFocusedInput(reactNode)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;KeyboardAwareScrollView
  innerRef={ref =&amp;gt; {
    this.scroll = ref
  }}&amp;gt;
  &amp;lt;View&amp;gt;
    &amp;lt;TextInput
      onFocus={(event: Event) =&amp;gt; {
        // `bind` the function if you&#39;re using ES6 classes
        this._scrollToInput(ReactNative.findNodeHandle(event.target))
      }}
    /&amp;gt;
  &amp;lt;/View&amp;gt;
&amp;lt;/KeyboardAwareScrollView&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Programatically scroll to any position&lt;/h3&gt; 
&lt;p&gt;There&#39;s another built-in function that lets you programatically scroll to any position of the scroll view:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;this.scroll.props.scrollToPosition(0, 0)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Register to keyboard events&lt;/h2&gt; 
&lt;p&gt;You can register to &lt;code&gt;ScrollViewResponder&lt;/code&gt; events &lt;code&gt;onKeyboardWillShow&lt;/code&gt; and &lt;code&gt;onKeyboardWillHide&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;KeyboardAwareScrollView
  onKeyboardWillShow={(frames: Object) =&amp;gt; {
    console.log(&#39;Keyboard event&#39;, frames)
  }}&amp;gt;
  &amp;lt;View&amp;gt;
    &amp;lt;TextInput /&amp;gt;
  &amp;lt;/View&amp;gt;
&amp;lt;/KeyboardAwareScrollView&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Android Support&lt;/h2&gt; 
&lt;p&gt;First, Android natively has this feature, you can easily enable it by setting &lt;code&gt;windowSoftInputMode&lt;/code&gt; in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;. Check &lt;a href=&quot;https://developer.android.com/guide/topics/manifest/activity-element.html#wsoft&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;But if you want to use feature like &lt;code&gt;extraHeight&lt;/code&gt;, you need to enable Android Support with the following steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you are using react-native &lt;code&gt;0.46&lt;/code&gt; or above.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;windowSoftInputMode&lt;/code&gt; to &lt;code&gt;adjustPan&lt;/code&gt; in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;enableOnAndroid&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Android Support is not perfect, here is the supported list:&lt;/p&gt; 
&lt;p&gt;| &lt;strong&gt;Prop&lt;/strong&gt; | &lt;strong&gt;Android Support&lt;/strong&gt; | | --------------------------- | ------------------- | | &lt;code&gt;viewIsInsideTabBar&lt;/code&gt; | Yes | | &lt;code&gt;resetScrollToCoords&lt;/code&gt; | Yes | | &lt;code&gt;enableAutomaticScroll&lt;/code&gt; | Yes | | &lt;code&gt;extraHeight&lt;/code&gt; | Yes | | &lt;code&gt;extraScrollHeight&lt;/code&gt; | Yes | | &lt;code&gt;enableResetScrollToCoords&lt;/code&gt; | Yes | | &lt;code&gt;keyboardOpeningTime&lt;/code&gt; | No |&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;Props&lt;/h3&gt; 
&lt;p&gt;All the &lt;code&gt;ScrollView&lt;/code&gt;/&lt;code&gt;FlatList&lt;/code&gt; props will be passed.&lt;/p&gt; 
&lt;p&gt;| &lt;strong&gt;Prop&lt;/strong&gt; | &lt;strong&gt;Type&lt;/strong&gt; | &lt;strong&gt;Description&lt;/strong&gt; | | --------------------------- | -------------------------------- | ---------------------------------------------------------------------------------------------- | | &lt;code&gt;innerRef&lt;/code&gt; | &lt;code&gt;Function&lt;/code&gt; | Catch the reference of the component. | | &lt;code&gt;viewIsInsideTabBar&lt;/code&gt; | &lt;code&gt;boolean&lt;/code&gt; | Adds an extra offset that represents the &lt;code&gt;TabBarIOS&lt;/code&gt; height. | | &lt;code&gt;resetScrollToCoords&lt;/code&gt; | &lt;code&gt;Object: {x: number, y: number}&lt;/code&gt; | Coordinates that will be used to reset the scroll when the keyboard hides. | | &lt;code&gt;enableAutomaticScroll&lt;/code&gt; | &lt;code&gt;boolean&lt;/code&gt; | When focus in &lt;code&gt;TextInput&lt;/code&gt; will scroll the position, default is enabled. | | &lt;code&gt;extraHeight&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | Adds an extra offset when focusing the &lt;code&gt;TextInput&lt;/code&gt;s. | | &lt;code&gt;extraScrollHeight&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | Adds an extra offset to the keyboard. Useful if you want to stick elements above the keyboard. | | &lt;code&gt;enableResetScrollToCoords&lt;/code&gt; | &lt;code&gt;boolean&lt;/code&gt; | Lets the user enable or disable automatic resetScrollToCoords. | | &lt;code&gt;keyboardOpeningTime&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | Sets the delay time before scrolling to new position, default is 250 | | &lt;code&gt;enableOnAndroid&lt;/code&gt; | &lt;code&gt;boolean&lt;/code&gt; | Enable Android Support |&lt;/p&gt; 
&lt;h3&gt;Methods&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;innerRef&lt;/code&gt; to get the component reference and use &lt;code&gt;this.scrollRef.props&lt;/code&gt; to access these methods.&lt;/p&gt; 
&lt;p&gt;| &lt;strong&gt;Method&lt;/strong&gt; | &lt;strong&gt;Parameter&lt;/strong&gt; | &lt;strong&gt;Description&lt;/strong&gt; | | -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------- | | &lt;code&gt;getScrollResponder&lt;/code&gt; | &lt;code&gt;void&lt;/code&gt; | Get &lt;code&gt;ScrollResponder&lt;/code&gt; | | &lt;code&gt;scrollToPosition&lt;/code&gt; | &lt;code&gt;x: number, y: number, animated: bool = true&lt;/code&gt; | Scroll to specific position with or without animation. | | &lt;code&gt;scrollToEnd&lt;/code&gt; | &lt;code&gt;animated?: bool = true&lt;/code&gt; | Scroll to end with or without animation. | | &lt;code&gt;scrollIntoView&lt;/code&gt; | &lt;code&gt;element: React.Element&amp;lt;*&amp;gt;, options: { getScrollPosition: ?(parentLayout, childLayout, contentOffset) =&amp;gt; { x: number, y: number, animated: boolean } }&lt;/code&gt; | Scrolls an element inside a KeyboardAwareScrollView into view. |&lt;/p&gt; 
&lt;h3&gt;Using high order component&lt;/h3&gt; 
&lt;p&gt;Enabling any component to be keyboard-aware is very easy. Take a look at the code of &lt;code&gt;KeyboardAwareFlatList&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* @flow */

import { FlatList } from &#39;react-native&#39;
import listenToKeyboardEvents from &#39;./KeyboardAwareHOC&#39;

export default listenToKeyboardEvents(FlatList)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The HOC can also be configured. Sometimes it&#39;s more convenient to provide a static config than configuring the behavior with props. This HOC config can be overriden with props.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* @flow */

import { FlatList } from &#39;react-native&#39;
import listenToKeyboardEvents from &#39;./KeyboardAwareHOC&#39;

const config = {
  enableOnAndroid: true,
  enableAutomaticScroll: true
}

export default listenToKeyboardEvents(config)(FlatList)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The available config options are:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  enableOnAndroid: boolean,
  contentContainerStyle: ?Object,
  enableAutomaticScroll: boolean,
  extraHeight: number,
  extraScrollHeight: number,
  enableResetScrollToCoords: boolean,
  keyboardOpeningTime: number,
  viewIsInsideTabBar: boolean,
  refPropName: string,
  extractNativeRef: Function
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT.&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Álvaro Medina Ballester &lt;code&gt;&amp;lt;amedina at apsl.net&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Built with 💛 by &lt;a href=&quot;https://github.com/apsl&quot;&gt;APSL&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>grommet/grommet</title>
      <link>https://github.com/grommet/grommet</link>
      <description>&lt;p&gt;a react-based framework that provides accessibility, modularity, responsiveness, and theming in a tidy package&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Grommet: focus on the essential experience&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/grommet/grommet/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/pr&#39;s-welcome-7d4cdb.svg&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://slack-invite.grommet.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/join%20the%20community-slack-fd6fff.svg&quot; alt=&quot;slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/grommet_io&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/grommet_io.svg?label=follow%20&amp;amp;style=social&quot; alt=&quot;follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://medium.com/grommet-io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/view%20blogs%20on-medium-000000.svg&quot; alt=&quot;blogs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/grommet&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/grommet.svg?color=ffca58&quot; alt=&quot;npm package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/grommet&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/grommet.svg?color=3d138d&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/styled_with-prettier-ff69b4.svg&quot; alt=&quot;styled with prettier&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit the &lt;a href=&quot;https://grommet.io/&quot;&gt;Grommet&lt;/a&gt; website for more information.&lt;/p&gt; 
&lt;h2&gt;Support / Contributing&lt;/h2&gt; 
&lt;p&gt;Before opening an issue or pull request, please read the &lt;a href=&quot;https://raw.githubusercontent.com/grommet/grommet/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;You can install Grommet using either of the methods given below.&lt;/p&gt; 
&lt;p&gt;For npm users:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;  $ npm install grommet styled-components --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Yarn users:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;  $ yarn add grommet styled-components
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are more detailed instructions in the &lt;a href=&quot;https://github.com/grommet/grommet-starter-new-app&quot;&gt;Grommet Starter&lt;/a&gt; app tutorial for new apps. For incorporating Grommet into an existing app, see the &lt;a href=&quot;https://github.com/grommet/grommet-starter-existing-app&quot;&gt;Existing App&lt;/a&gt; version.&lt;/p&gt; 
&lt;h2&gt;Explore&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://storybook.grommet.io&quot;&gt;Storybook&lt;/a&gt; examples per component, you can create them locally by running:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;  $ npm run storybook
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;  $ yarn storybook
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Basic &lt;a href=&quot;https://codesandbox.io/s/github/grommet/grommet-sandbox&quot;&gt;code-sandbox playgrounds&lt;/a&gt; for each component.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://codesandbox.io/u/grommetux/sandboxes&quot;&gt;Templates, patterns, and starters&lt;/a&gt;: feel free to share with us more pattern ideas on &lt;a href=&quot;https://slack-invite.grommet.io&quot;&gt;Slack&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;End-to-end project examples from our community in the &lt;a href=&quot;https://slack-invite.grommet.io&quot;&gt;#i-made-this Slack channel&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Read more from the Grommet team on &lt;a href=&quot;https://medium.com/grommet-io&quot;&gt;Medium&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Stable&lt;/h2&gt; 
&lt;p&gt;grommet is also available on a stable branch that is built with the content of the &#39;master&#39; branch. From your package.json point to stable.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&quot;grommet&quot;: &quot;https://github.com/grommet/grommet/tarball/stable&quot;,
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more info, read the &lt;a href=&quot;https://github.com/grommet/grommet/wiki/What-is-grommet-stable-and-how-to-use-it%3F&quot;&gt;stable wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release History&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/grommet/grommet/wiki/Change-Log&quot;&gt;Change Log&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tools Behind Grommet&lt;/h2&gt; 
&lt;p&gt;Grommet is produced using this great tool:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; for browser emulators and simulators.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/grommet/grommet/&quot;&gt;Circle CI&lt;/a&gt; for continuous integration.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mochajs/mocha</title>
      <link>https://github.com/mochajs/mocha</link>
      <description>&lt;p&gt;☕️ simple, flexible, fun javascript test framework for node.js &amp; the browser&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://mochajs.org/&quot;&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/CHANGELOG.md&quot;&gt;Release Notes / History / Changes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/.github/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/mochajs/mocha&quot;&gt;Gitter Chatroom&lt;/a&gt; (ask questions here!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://groups.google.com/group/mochajs&quot;&gt;Google Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/issues&quot;&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/mochajs#backer&quot;&gt;Become a backer&lt;/a&gt; and show your support to our open source project.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/mochajs/backer/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/0/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/1/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/2/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/3/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/4/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/5/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/6/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/7/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/8/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/9/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/10/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/10/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/11/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/11/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/12/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/12/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/13/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/13/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/14/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/14/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/15/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/15/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/16/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/16/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/17/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/17/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/18/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/18/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/19/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/19/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/20/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/20/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/21/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/21/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/22/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/22/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/23/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/23/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/24/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/24/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/25/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/25/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/26/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/26/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/27/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/27/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/28/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/28/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/backer/29/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/backer/29/avatar&quot; alt=&quot;MochaJS Backer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Does your company use Mocha? Ask your manager or marketing team if your company would be interested in supporting our project. Support will allow the maintainers to dedicate more time for maintenance and new features for everyone. Also, your company&#39;s logo will show &lt;a href=&quot;https://github.com/mochajs/mocha#readme&quot;&gt;on GitHub&lt;/a&gt; and on &lt;a href=&quot;https://mochajs.org&quot;&gt;our site&lt;/a&gt; - who doesn&#39;t want a little extra exposure? &lt;a href=&quot;https://opencollective.com/mochajs#sponsor&quot;&gt;Here&#39;s the info&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/mochajs/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/0/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/1/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/2/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/3/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/4/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/5/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/6/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/7/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/8/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/9/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/10/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/10/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/11/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/11/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/12/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/12/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/13/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/13/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/14/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/14/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/15/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/15/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/16/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/16/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/17/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/17/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/18/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/18/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/mochajs/sponsor/19/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/mochajs/sponsor/19/avatar&quot; alt=&quot;MochaJS Sponsor&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;You might want to know that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mocha is the &lt;em&gt;most-depended-upon&lt;/em&gt; module on npm (source: &lt;a href=&quot;https://libraries.io/search?order=desc&amp;amp;platforms=NPM&amp;amp;sort=dependents_count&quot;&gt;libraries.io&lt;/a&gt;), and&lt;/li&gt; 
 &lt;li&gt;Mocha is an &lt;em&gt;independent&lt;/em&gt; open-source project, maintained exclusively by volunteers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You might want to help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;New to contributing to Mocha? Check out this list of &lt;a href=&quot;https://github.com/mochajs/mocha/issues?q=is%3Aissue+is%3Aopen+label%3Agood-first-issue&quot;&gt;good first issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mocha could use a hand with &lt;a href=&quot;https://github.com/mochajs/mocha/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;these issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/MAINTAINERS.md&quot;&gt;maintainer&#39;s handbook&lt;/a&gt; explains how things get done&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Finally, come &lt;a href=&quot;https://gitter.im/mochajs/contributors&quot;&gt;chat with the maintainers&lt;/a&gt; on Gitter if you want to help with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Triaging issues, answering questions&lt;/li&gt; 
 &lt;li&gt;Review, merging, and closing pull requests&lt;/li&gt; 
 &lt;li&gt;Other project-maintenance-y things&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2011-2021 OpenJS Foundation and contributors. Licensed &lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>parse-community/parse-server</title>
      <link>https://github.com/parse-community/parse-server</link>
      <description>&lt;p&gt;API server module for Node/Express&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Parse Server works with the Express web application framework. It can be added to existing web applications, or run by itself.&lt;/p&gt; 
&lt;p&gt;The full documentation for Parse Server is available in the &lt;a href=&quot;https://github.com/parse-community/parse-server/wiki&quot;&gt;wiki&lt;/a&gt;. The &lt;a href=&quot;http://docs.parseplatform.org/parse-server/guide/&quot;&gt;Parse Server guide&lt;/a&gt; is a good place to get started. An &lt;a href=&quot;http://parseplatform.org/parse-server/api/&quot;&gt;API reference&lt;/a&gt; and &lt;a href=&quot;https://docs.parseplatform.org/cloudcode/guide/&quot;&gt;Cloud Code guide&lt;/a&gt; are also available. If you&#39;re interested in developing for Parse Server, the &lt;a href=&quot;http://docs.parseplatform.org/parse-server/guide/#development-guide&quot;&gt;Development guide&lt;/a&gt; will help you get set up.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#running-parse-server&quot;&gt;Running Parse Server&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#compatibility&quot;&gt;Compatibility&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#nodejs&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#mongodb&quot;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#postgresql&quot;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#locally&quot;&gt;Locally&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#docker-container&quot;&gt;Docker Container&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#saving-an-object&quot;&gt;Saving an Object&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#connect-an-sdk&quot;&gt;Connect an SDK&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#running-parse-server-elsewhere&quot;&gt;Running Parse Server elsewhere&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#sample-application&quot;&gt;Sample Application&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#parse-server--express&quot;&gt;Parse Server + Express&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#configuration&quot;&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#basic-options&quot;&gt;Basic Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#client-key-options&quot;&gt;Client Key Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#email-verification-and-password-reset&quot;&gt;Email Verification and Password Reset&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#custom-pages&quot;&gt;Custom Pages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#using-environment-variables&quot;&gt;Using Environment Variables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#available-adapters&quot;&gt;Available Adapters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#configuring-file-adapters&quot;&gt;Configuring File Adapters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#idempotency-enforcement&quot;&gt;Idempotency Enforcement&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#localization&quot;&gt;Localization&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#pages&quot;&gt;Pages&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#localization-with-directory-structure&quot;&gt;Localization with Directory Structure&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#localization-with-json-resource&quot;&gt;Localization with JSON Resource&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#parameters&quot;&gt;Parameters&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#logging&quot;&gt;Logging&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#live-query&quot;&gt;Live Query&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#graphql&quot;&gt;GraphQL&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#running&quot;&gt;Running&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#using-the-cli&quot;&gt;Using the CLI&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#using-docker&quot;&gt;Using Docker&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#using-expressjs&quot;&gt;Using Express.js&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#checking-the-api-health&quot;&gt;Checking the API health&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#creating-your-first-class&quot;&gt;Creating your first class&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#using-automatically-generated-operations&quot;&gt;Using automatically generated operations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#customizing-your-graphql-schema&quot;&gt;Customizing your GraphQL Schema&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#learning-more&quot;&gt;Learning more&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#upgrading-to-300&quot;&gt;Upgrading to 3.0.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#want-to-ride-the-bleeding-edge&quot;&gt;Want to ride the bleeding edge?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#sponsors&quot;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#backers&quot;&gt;Backers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;The fastest and easiest way to get started is to run MongoDB and Parse Server locally.&lt;/p&gt; 
&lt;h2&gt;Running Parse Server&lt;/h2&gt; 
&lt;p&gt;Before you start make sure you have installed:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NodeJS&lt;/a&gt; that includes &lt;code&gt;npm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/&quot;&gt;MongoDB&lt;/a&gt; or &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;(with &lt;a href=&quot;https://postgis.net&quot;&gt;PostGIS&lt;/a&gt; 2.2.0 or higher)&lt;/li&gt; 
 &lt;li&gt;Optionally &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;h4&gt;Node.js&lt;/h4&gt; 
&lt;p&gt;Parse Server is continuously tested with the most recent releases of Node.js to ensure compatibility. We follow the &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;Node.js Long Term Support plan&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date.&lt;/p&gt; 
&lt;p&gt;| Version | Latest Patch Version | End-of-Life Date | Compatibility | |------------|----------------------|------------------|--------------------| | Node.js 10 | 10.24.0 | April 2021 | ✅ Fully compatible | | Node.js 12 | 12.21.0 | April 2022 | ✅ Fully compatible | | Node.js 14 | 14.16.0 | April 2023 | ✅ Fully compatible | | Node.js 15 | 15.10.0 | June 2021 | ✅ Fully compatible |&lt;/p&gt; 
&lt;h4&gt;MongoDB&lt;/h4&gt; 
&lt;p&gt;Parse Server is continuously tested with the most recent releases of MongoDB to ensure compatibility. We follow the &lt;a href=&quot;https://www.mongodb.com/support-policy&quot;&gt;MongoDB support schedule&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date.&lt;/p&gt; 
&lt;p&gt;| Version | Latest Patch Version | End-of-Life Date | Compatibility | |-------------|----------------------|------------------|--------------------| | MongoDB 3.6 | 3.6.21 | April 2021 | ✅ Fully compatible | | MongoDB 4.0 | 4.0.23 | January 2022 | ✅ Fully compatible | | MongoDB 4.2 | 4.2.12 | TBD | ✅ Fully compatible | | MongoDB 4.4 | 4.4.4 | TBD | ✅ Fully compatible |&lt;/p&gt; 
&lt;h4&gt;PostgreSQL&lt;/h4&gt; 
&lt;p&gt;Parse Server is continuously tested with the most recent releases of PostgreSQL and PostGIS to ensure compatibility. We follow the &lt;a href=&quot;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;ordering=last_updated&quot;&gt;PostGIS docker tags&lt;/a&gt; and only test against versions that are officially supported and have not reached their end-of-life date.&lt;/p&gt; 
&lt;p&gt;| Version | PostGIS Version | End-of-Life Date | Compatibility | |------------------|-----------------|------------------|--------------------| | Postgres 10.x | 3.0.x, 3.1.x | November 2022 | ✅ Fully compatible | | Postgres 11.x | 3.0.x, 3.1.x | November 2023 | ✅ Fully compatible | | Postgres 12.x | 3.0.x, 3.1.x | November 2024 | ✅ Fully compatible | | Postgres 13.x | 3.0.x, 3.1.x | November 2025 | ✅ Fully compatible |&lt;/p&gt; 
&lt;h3&gt;Locally&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install -g parse-server mongodb-runner
$ mongodb-runner start
$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If installation with&lt;/em&gt; &lt;code&gt;-g&lt;/code&gt; &lt;em&gt;fails due to permission problems&lt;/em&gt; (&lt;code&gt;npm ERR! code &#39;EACCES&#39;&lt;/code&gt;), &lt;em&gt;please refer to &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;this link&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Docker Container&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone https://github.com/parse-community/parse-server
$ cd parse-server
$ docker build --tag parse-server .
$ docker run --name my-mongo -d mongo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Running the Parse Server Image 
 &lt;!-- raw HTML omitted --&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker run --name my-parse-server -v config-vol:/parse-server/config -p 1337:1337 --link my-mongo:mongo -d parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://mongo/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If you want to use &lt;a href=&quot;https://docs.parseplatform.org/cloudcode/guide/&quot;&gt;Cloud Code&lt;/a&gt;, add &lt;code&gt;-v cloud-code-vol:/parse-server/cloud --cloud /parse-server/cloud/main.js&lt;/code&gt; to the command above. Make sure &lt;code&gt;main.js&lt;/code&gt; is in the &lt;code&gt;cloud-code-vol&lt;/code&gt; directory before starting Parse Server.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can use any arbitrary string as your application id and master key. These will be used by your clients to authenticate with the Parse Server.&lt;/p&gt; 
&lt;p&gt;That&#39;s it! You are now running a standalone version of Parse Server on your machine.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Using a remote MongoDB?&lt;/strong&gt; Pass the &lt;code&gt;--databaseURI DATABASE_URI&lt;/code&gt; parameter when starting &lt;code&gt;parse-server&lt;/code&gt;. Learn more about configuring Parse Server &lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/#configuration&quot;&gt;here&lt;/a&gt;. For a full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Saving an Object&lt;/h3&gt; 
&lt;p&gt;Now that you&#39;re running Parse Server, it is time to save your first object. We&#39;ll use the &lt;a href=&quot;http://docs.parseplatform.org/rest/guide&quot;&gt;REST API&lt;/a&gt;, but you can easily do the same using any of the &lt;a href=&quot;http://parseplatform.org/#sdks&quot;&gt;Parse SDKs&lt;/a&gt;. Run the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ curl -X POST \
-H &quot;X-Parse-Application-Id: APPLICATION_ID&quot; \
-H &quot;Content-Type: application/json&quot; \
-d &#39;{&quot;score&quot;:1337,&quot;playerName&quot;:&quot;Sean Plott&quot;,&quot;cheatMode&quot;:false}&#39; \
http://localhost:1337/parse/classes/GameScore
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should get a response similar to this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &quot;objectId&quot;: &quot;2ntvSpRGIK&quot;,
  &quot;createdAt&quot;: &quot;2016-03-11T23:51:48.050Z&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can now retrieve this object directly (make sure to replace &lt;code&gt;2ntvSpRGIK&lt;/code&gt; with the actual &lt;code&gt;objectId&lt;/code&gt; you received when the object was created):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ curl -X GET \
  -H &quot;X-Parse-Application-Id: APPLICATION_ID&quot; \
  http://localhost:1337/parse/classes/GameScore/2ntvSpRGIK
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// Response
{
  &quot;objectId&quot;: &quot;2ntvSpRGIK&quot;,
  &quot;score&quot;: 1337,
  &quot;playerName&quot;: &quot;Sean Plott&quot;,
  &quot;cheatMode&quot;: false,
  &quot;updatedAt&quot;: &quot;2016-03-11T23:51:48.050Z&quot;,
  &quot;createdAt&quot;: &quot;2016-03-11T23:51:48.050Z&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Keeping tracks of individual object ids is not ideal, however. In most cases you will want to run a query over the collection, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ curl -X GET \
  -H &quot;X-Parse-Application-Id: APPLICATION_ID&quot; \
  http://localhost:1337/parse/classes/GameScore
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// The response will provide all the matching objects within the `results` array:
{
  &quot;results&quot;: [
    {
      &quot;objectId&quot;: &quot;2ntvSpRGIK&quot;,
      &quot;score&quot;: 1337,
      &quot;playerName&quot;: &quot;Sean Plott&quot;,
      &quot;cheatMode&quot;: false,
      &quot;updatedAt&quot;: &quot;2016-03-11T23:51:48.050Z&quot;,
      &quot;createdAt&quot;: &quot;2016-03-11T23:51:48.050Z&quot;
    }
  ]
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To learn more about using saving and querying objects on Parse Server, check out the &lt;a href=&quot;http://docs.parseplatform.org&quot;&gt;Parse documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Connect an SDK&lt;/h3&gt; 
&lt;p&gt;Parse provides SDKs for all the major platforms. Refer to the Parse Server guide to &lt;a href=&quot;https://docs.parseplatform.org/parse-server/guide/#using-parse-sdks-with-parse-server&quot;&gt;learn how to connect your app to Parse Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running Parse Server elsewhere&lt;/h2&gt; 
&lt;p&gt;Once you have a better understanding of how the project works, please refer to the &lt;a href=&quot;https://github.com/parse-community/parse-server/wiki&quot;&gt;Parse Server wiki&lt;/a&gt; for in-depth guides to deploy Parse Server to major infrastructure providers. Read on to learn more about additional ways of running Parse Server.&lt;/p&gt; 
&lt;h3&gt;Sample Application&lt;/h3&gt; 
&lt;p&gt;We have provided a basic &lt;a href=&quot;https://github.com/parse-community/parse-server-example&quot;&gt;Node.js application&lt;/a&gt; that uses the Parse Server module on Express and can be easily deployed to various infrastructure providers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/deploying-a-parse-server-to-heroku&quot;&gt;Heroku and mLab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mobile.awsblog.com/post/TxCD57GZLM2JR/How-to-set-up-Parse-Server-on-AWS-using-AWS-Elastic-Beanstalk&quot;&gt;AWS and Elastic Beanstalk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@justinbeckwith/deploying-parse-server-to-google-app-engine-6bc0b7451d50&quot;&gt;Google App Engine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/azure-welcomes-parse-developers/&quot;&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.sashido.io/tag/migration/&quot;&gt;SashiDo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-run-parse-server-on-ubuntu-14-04&quot;&gt;Digital Ocean&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cf-platform-eng/pws-parse-server&quot;&gt;Pivotal Web Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.back4app.com/2016/03/01/quick-wizard-migration/&quot;&gt;Back4app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glitch.com/edit/#!/parse-server&quot;&gt;Glitch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flynn.io/blog/parse-apps-on-flynn&quot;&gt;Flynn&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Parse Server + Express&lt;/h3&gt; 
&lt;p&gt;You can also create an instance of Parse Server, and mount it on a new or existing Express website:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;);
var ParseServer = require(&#39;parse-server&#39;).ParseServer;
var app = express();

var api = new ParseServer({
  databaseURI: &#39;mongodb://localhost:27017/dev&#39;, // Connection string for your MongoDB database
  cloud: &#39;./cloud/main.js&#39;, // Path to your Cloud Code
  appId: &#39;myAppId&#39;,
  masterKey: &#39;myMasterKey&#39;, // Keep this key secret!
  fileKey: &#39;optionalFileKey&#39;,
  serverURL: &#39;http://localhost:1337/parse&#39; // Don&#39;t forget to change to https if needed
});

// Serve the Parse API on the /parse URL prefix
app.use(&#39;/parse&#39;, api);

app.listen(1337, function() {
  console.log(&#39;parse-server-example running on port 1337.&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at &lt;a href=&quot;http://parseplatform.org/parse-server/api/master/ParseServerOptions.html&quot;&gt;Parse Server Configurations&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Configuration&lt;/h1&gt; 
&lt;p&gt;Parse Server can be configured using the following options. You may pass these as parameters when running a standalone &lt;code&gt;parse-server&lt;/code&gt;, or by loading a configuration file in JSON format using &lt;code&gt;parse-server path/to/configuration.json&lt;/code&gt;. If you&#39;re using Parse Server on Express, you may also pass these to the &lt;code&gt;ParseServer&lt;/code&gt; object as options.&lt;/p&gt; 
&lt;p&gt;For the full list of available options, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at &lt;a href=&quot;http://parseplatform.org/parse-server/api/master/ParseServerOptions.html&quot;&gt;Parse Server Configurations&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Basic Options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;appId&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The application id to host with this server instance. You can use any arbitrary string. For migrated apps, this should match your hosted Parse app.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;masterKey&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The master key to use for overriding ACL security. You can use any arbitrary string. Keep it secret! For migrated apps, this should match your hosted Parse app.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;databaseURI&lt;/code&gt; &lt;strong&gt;(required)&lt;/strong&gt; - The connection string for your database, i.e. &lt;code&gt;mongodb://user:pass@host.com/dbname&lt;/code&gt;. Be sure to &lt;a href=&quot;https://app.zencoder.com/docs/guides/getting-started/special-characters-in-usernames-and-passwords&quot;&gt;URL encode your password&lt;/a&gt; if your password has special characters.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;port&lt;/code&gt; - The default port is 1337, specify this parameter to use a different port.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;serverURL&lt;/code&gt; - URL to your Parse Server (don&#39;t forget to specify http:// or https://). This URL will be used when making requests to Parse Server from Cloud Code.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cloud&lt;/code&gt; - The absolute path to your cloud code &lt;code&gt;main.js&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;push&lt;/code&gt; - Configuration options for APNS and GCM push. See the &lt;a href=&quot;http://docs.parseplatform.org/parse-server/guide/#push-notifications_push-notifications-quick-start&quot;&gt;Push Notifications quick start&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Client Key Options&lt;/h2&gt; 
&lt;p&gt;The client keys used with Parse are no longer necessary with Parse Server. If you wish to still require them, perhaps to be able to refuse access to older clients, you can set the keys at initialization time. Setting any of these keys will require all requests to provide one of the configured keys.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;clientKey&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;javascriptKey&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;restAPIKey&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dotNetKey&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Email Verification and Password Reset&lt;/h2&gt; 
&lt;p&gt;Verifying user email addresses and enabling password reset via email requires an email adapter. As part of the &lt;code&gt;parse-server&lt;/code&gt; package we provide an adapter for sending email through Mailgun. To use it, sign up for Mailgun, and add this to your initialization code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var server = ParseServer({
  ...otherOptions,
  // Enable email verification
  verifyUserEmails: true,

  // if `verifyUserEmails` is `true` and
  //     if `emailVerifyTokenValidityDuration` is `undefined` then
  //        email verify token never expires
  //     else
  //        email verify token expires after `emailVerifyTokenValidityDuration`
  //
  // `emailVerifyTokenValidityDuration` defaults to `undefined`
  //
  // email verify token below expires in 2 hours (= 2 * 60 * 60 == 7200 seconds)
  emailVerifyTokenValidityDuration: 2 * 60 * 60, // in seconds (2 hours = 7200 seconds)

  // set preventLoginWithUnverifiedEmail to false to allow user to login without verifying their email
  // set preventLoginWithUnverifiedEmail to true to prevent user from login if their email is not verified
  preventLoginWithUnverifiedEmail: false, // defaults to false

  // The public URL of your app.
  // This will appear in the link that is used to verify email addresses and reset passwords.
  // Set the mount path as it is in serverURL
  publicServerURL: &#39;https://example.com/parse&#39;,
  // Your apps name. This will appear in the subject and body of the emails that are sent.
  appName: &#39;Parse App&#39;,
  // The email adapter
  emailAdapter: {
    module: &#39;@parse/simple-mailgun-adapter&#39;,
    options: {
      // The address that your emails come from
      fromAddress: &#39;parse@example.com&#39;,
      // Your domain from mailgun.com
      domain: &#39;example.com&#39;,
      // Your API key from mailgun.com
      apiKey: &#39;key-mykey&#39;,
    }
  },

  // account lockout policy setting (OPTIONAL) - defaults to undefined
  // if the account lockout policy is set and there are more than `threshold` number of failed login attempts then the `login` api call returns error code `Parse.Error.OBJECT_NOT_FOUND` with error message `Your account is locked due to multiple failed login attempts. Please try again after &amp;lt;duration&amp;gt; minute(s)`. After `duration` minutes of no login attempts, the application will allow the user to try login again.
  accountLockout: {
    duration: 5, // duration policy setting determines the number of minutes that a locked-out account remains locked out before automatically becoming unlocked. Set it to a value greater than 0 and less than 100000.
    threshold: 3, // threshold policy setting determines the number of failed sign-in attempts that will cause a user account to be locked. Set it to an integer value greater than 0 and less than 1000.
    unlockOnPasswordReset: true, // Is true if the account lock should be removed after a successful password reset. Default: false.
}
  },
  // optional settings to enforce password policies
  passwordPolicy: {
    // Two optional settings to enforce strong passwords. Either one or both can be specified.
    // If both are specified, both checks must pass to accept the password
    // 1. a RegExp object or a regex string representing the pattern to enforce
    validatorPattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/, // enforce password with at least 8 char with at least 1 lower case, 1 upper case and 1 digit
    // 2. a callback function to be invoked to validate the password
    validatorCallback: (password) =&amp;gt; { return validatePassword(password) },
    validationError: &#39;Password must contain at least 1 digit.&#39; // optional error message to be sent instead of the default &quot;Password does not meet the Password Policy requirements.&quot; message.
    doNotAllowUsername: true, // optional setting to disallow username in passwords
    maxPasswordAge: 90, // optional setting in days for password expiry. Login fails if user does not reset the password within this period after signup/last reset.
    maxPasswordHistory: 5, // optional setting to prevent reuse of previous n passwords. Maximum value that can be specified is 20. Not specifying it or specifying 0 will not enforce history.
    //optional setting to set a validity duration for password reset links (in seconds)
    resetTokenValidityDuration: 24*60*60, // expire after 24 hours
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use other email adapters contributed by the community such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-smtp-template&quot;&gt;parse-smtp-template (Multi Language and Multi Template)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-postmark-adapter&quot;&gt;parse-server-postmark-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-sendgrid-adapter&quot;&gt;parse-server-sendgrid-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-mandrill-adapter&quot;&gt;parse-server-mandrill-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-simple-ses-adapter&quot;&gt;parse-server-simple-ses-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-mailgun-adapter-template&quot;&gt;parse-server-mailgun-adapter-template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-sendinblue-adapter&quot;&gt;parse-server-sendinblue-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-mailjet-adapter&quot;&gt;parse-server-mailjet-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/simple-parse-smtp-adapter&quot;&gt;simple-parse-smtp-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-generic-email-adapter&quot;&gt;parse-server-generic-email-adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/parse-server-api-mail-adapter&quot;&gt;parse-server-api-mail-adapter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Custom Pages&lt;/h2&gt; 
&lt;p&gt;It’s possible to change the default pages of the app and redirect the user to another path or domain.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var server = ParseServer({
  ...otherOptions,

  customPages: {
    passwordResetSuccess: &quot;http://yourapp.com/passwordResetSuccess&quot;,
    verifyEmailSuccess: &quot;http://yourapp.com/verifyEmailSuccess&quot;,
    parseFrameURL: &quot;http://yourapp.com/parseFrameURL&quot;,
    linkSendSuccess: &quot;http://yourapp.com/linkSendSuccess&quot;,
    linkSendFail: &quot;http://yourapp.com/linkSendFail&quot;,
    invalidLink: &quot;http://yourapp.com/invalidLink&quot;,
    invalidVerificationLink: &quot;http://yourapp.com/invalidVerificationLink&quot;,
    choosePassword: &quot;http://yourapp.com/choosePassword&quot;
  }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Environment Variables&lt;/h2&gt; 
&lt;p&gt;You may configure the Parse Server using environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PORT
PARSE_SERVER_APPLICATION_ID
PARSE_SERVER_MASTER_KEY
PARSE_SERVER_DATABASE_URI
PARSE_SERVER_URL
PARSE_SERVER_CLOUD
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The default port is 1337, to use a different port set the PORT environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ PORT=8080 parse-server --appId APPLICATION_ID --masterKey MASTER_KEY
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full list of configurable environment variables, run &lt;code&gt;parse-server --help&lt;/code&gt; or take a look at &lt;a href=&quot;https://github.com/parse-community/parse-server/blob/master/src/Options/Definitions.js&quot;&gt;Parse Server Configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Available Adapters&lt;/h2&gt; 
&lt;p&gt;All official adapters are distributed as scoped packages on &lt;a href=&quot;https://www.npmjs.com/search?q=scope%3Aparse&quot;&gt;npm (@parse)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some well maintained adapters are also available on the &lt;a href=&quot;https://github.com/parse-server-modules&quot;&gt;Parse Server Modules&lt;/a&gt; organization.&lt;/p&gt; 
&lt;p&gt;You can also find more adapters maintained by the community by searching on &lt;a href=&quot;https://www.npmjs.com/search?q=parse-server%20adapter&amp;amp;page=1&amp;amp;ranking=optimal&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuring File Adapters&lt;/h2&gt; 
&lt;p&gt;Parse Server allows developers to choose from several options when hosting files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GridFSBucketAdapter&lt;/code&gt;, which is backed by MongoDB;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;S3Adapter&lt;/code&gt;, which is backed by &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;Amazon S3&lt;/a&gt;; or&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GCSAdapter&lt;/code&gt;, which is backed by &lt;a href=&quot;https://cloud.google.com/storage/&quot;&gt;Google Cloud Storage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;GridFSBucketAdapter&lt;/code&gt; is used by default and requires no setup, but if you&#39;re interested in using S3 or Google Cloud Storage, additional configuration information is available in the &lt;a href=&quot;http://docs.parseplatform.org/parse-server/guide/#configuring-file-adapters&quot;&gt;Parse Server guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Idempotency Enforcement&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This feature deduplicates identical requests that are received by Parse Server multiple times, typically due to network issues or network adapter access restrictions on mobile operating systems.&lt;/p&gt; 
&lt;p&gt;Identical requests are identified by their request header &lt;code&gt;X-Parse-Request-Id&lt;/code&gt;. Therefore a client request has to include this header for deduplication to be applied. Requests that do not contain this header cannot be deduplicated and are processed normally by Parse Server. This means rolling out this feature to clients is seamless as Parse Server still processes requests without this header when this feature is enabled.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This feature needs to be enabled on the client side to send the header and on the server to process the header. Refer to the specific Parse SDK docs to see whether the feature is supported yet.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Deduplication is only done for object creation and update (&lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; requests). Deduplication is not done for object finding and deletion (&lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; requests), as these operations are already idempotent by definition.&lt;/p&gt; 
&lt;h3&gt;Configuration example 
 &lt;!-- raw HTML omitted --&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;let api = new ParseServer({
    idempotencyOptions: {
        paths: [&quot;.*&quot;],       // enforce for all requests
        ttl: 120             // keep request IDs for 120s
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Parameters 
 &lt;!-- raw HTML omitted --&gt;&lt;/h3&gt; 
&lt;p&gt;| Parameter | Optional | Type | Default value | Example values | Environment variable | Description | |----------------------------|----------|-----------------|---------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | &lt;code&gt;idempotencyOptions&lt;/code&gt; | yes | &lt;code&gt;Object&lt;/code&gt; | &lt;code&gt;undefined&lt;/code&gt; | | PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_OPTIONS | Setting this enables idempotency enforcement for the specified paths. | | &lt;code&gt;idempotencyOptions.paths&lt;/code&gt; | yes | &lt;code&gt;Array&amp;lt;String&amp;gt;&lt;/code&gt; | &lt;code&gt;[]&lt;/code&gt; | &lt;code&gt;.*&lt;/code&gt; (all paths, includes the examples below), 
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;functions/.*&lt;/code&gt; (all functions), 
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;jobs/.*&lt;/code&gt; (all jobs), 
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;classes/.*&lt;/code&gt; (all classes), 
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;functions/.*&lt;/code&gt; (all functions), 
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;users&lt;/code&gt; (user creation / update), 
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;installations&lt;/code&gt; (installation creation / update) | PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_PATHS | An array of path patterns that have to match the request path for request deduplication to be enabled. The mount path must not be included, for example to match the request path &lt;code&gt;/parse/functions/myFunction&lt;/code&gt; specify the path pattern &lt;code&gt;functions/myFunction&lt;/code&gt;. A trailing slash of the request path is ignored, for example the path pattern &lt;code&gt;functions/myFunction&lt;/code&gt; matches both &lt;code&gt;/parse/functions/myFunction&lt;/code&gt; and &lt;code&gt;/parse/functions/myFunction/&lt;/code&gt;. | | &lt;code&gt;idempotencyOptions.ttl&lt;/code&gt; | yes | &lt;code&gt;Integer&lt;/code&gt; | &lt;code&gt;300&lt;/code&gt; | &lt;code&gt;60&lt;/code&gt; (60 seconds) | PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_TTL | The duration in seconds after which a request record is discarded from the database. Duplicate requests due to network issues can be expected to arrive within milliseconds up to several seconds. This value must be greater than &lt;code&gt;0&lt;/code&gt;. |&lt;/p&gt; 
&lt;h3&gt;Notes 
 &lt;!-- raw HTML omitted --&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This feature is currently only available for MongoDB and not for Postgres.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;h3&gt;Pages&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Custom pages as well as feature pages (e.g. password reset, email verification) can be localized with the &lt;code&gt;pages&lt;/code&gt; option in the Parse Server configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true, // Enables the experimental feature; required for localization
    enableLocalization: true,
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Localization is achieved by matching a request-supplied &lt;code&gt;locale&lt;/code&gt; parameter with localized page content. The locale can be supplied in either the request query, body or header with the following keys:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;query: &lt;code&gt;locale&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;body: &lt;code&gt;locale&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;header: &lt;code&gt;x-parse-page-param-locale&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, a password reset link with the locale parameter in the query could look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://example.com/parse/apps/[appId]/request_password_reset?token=[token]&amp;amp;username=[username]&amp;amp;locale=de-AT
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Localization is only available for pages in the pages directory as set with &lt;code&gt;pages.pagesPath&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Localization for feature pages (e.g. password reset, email verification) is disabled if &lt;code&gt;pages.customUrls&lt;/code&gt; are set, even if the custom URLs point to the pages within the pages path.&lt;/li&gt; 
 &lt;li&gt;Only &lt;code&gt;.html&lt;/code&gt; files are considered for localization when localizing custom pages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Pages can be localized in two ways:&lt;/p&gt; 
&lt;h4&gt;Localization with Directory Structure&lt;/h4&gt; 
&lt;p&gt;Pages are localized by using the corresponding file in the directory structure where the files are placed in subdirectories named after the locale or language. The file in the base directory is the default file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Directory Structure:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;root/
├── public/                  // pages base path
│   ├── example.html         // default file
│   └── de/                  // de language folder
│   │   └── example.html     // de localized file
│   └── de-AT/               // de-AT locale folder
│   │   └── example.html     // de-AT localized file
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Files are matched with the locale in the following order:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Locale match, e.g. locale &lt;code&gt;de-AT&lt;/code&gt; matches file in folder &lt;code&gt;de-AT&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Language match, e.g. locale &lt;code&gt;de-CH&lt;/code&gt; matches file in folder &lt;code&gt;de&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Default; file in base folder is returned.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true, // Enables the experimental feature; required for localization
    enableLocalization: true,
    customUrls: {
      passwordReset: &#39;https://example.com/page.html&#39;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pros:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All files are complete in their content and can be easily opened and previewed by viewing the file in a browser.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In most cases, a localized page differs only slightly from the default page, which could cause a lot of duplicate code that is difficult to maintain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Localization with JSON Resource&lt;/h4&gt; 
&lt;p&gt;Pages are localized by adding placeholders in the HTML files and providing a JSON resource that contains the translations to fill into the placeholders.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Directory Structure:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;root/
├── public/                  // pages base path
│   ├── example.html         // the page containing placeholders
├── private/                 // folder outside of public scope
│   └── translations.json    // JSON resource file
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The JSON resource file loosely follows the &lt;a href=&quot;https://github.com/i18next/i18next&quot;&gt;i18next&lt;/a&gt; syntax, which is a syntax that is often supported by translation platforms, making it easy to manage translations, exporting them for use in Parse Server, and even to automate this workflow.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example JSON Content:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;en&quot;: {               // resource for language `en` (English)
    &quot;translation&quot;: {
      &quot;greeting&quot;: &quot;Hello!&quot;
    }
  },
  &quot;de&quot;: {               // resource for language `de` (German)
    &quot;translation&quot;: {
      &quot;greeting&quot;: &quot;Hallo!&quot;
    }
  }
  &quot;de-AT&quot;: {            // resource for locale `de-AT` (Austrian German)
    &quot;translation&quot;: {
      &quot;greeting&quot;: &quot;Servus!&quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true, // Enables the experimental feature; required for localization
    enableLocalization: true,
    localizationJsonPath: &#39;./private/localization.json&#39;,
    localizationFallbackLocale: &#39;en&#39;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pros:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;There is only one HTML file to maintain that contains the placeholders that are filled with the translations according to the locale.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Files cannot be easily previewed by viewing the file in a browser because the content contains only placeholders and even HTML or CSS changes may be dynamically applied, e.g. when a localization requires a Right-To-Left layout direction.&lt;/li&gt; 
 &lt;li&gt;Style and other fundamental layout changes may be more difficult to apply.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Dynamic placeholders&lt;/h4&gt; 
&lt;p&gt;In addition to feature related default parameters such as &lt;code&gt;appId&lt;/code&gt; and the translations provided via JSON resource, it is possible to define custom dynamic placeholders as part of the router configuration. This works independently of localization and, also if &lt;code&gt;enableLocalization&lt;/code&gt; is disabled.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true, // Enables the experimental feature; required for localization
    placeholders: {
      exampleKey: &#39;exampleValue&#39;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The placeholders can also be provided as function or as async function, with the &lt;code&gt;locale&lt;/code&gt; and other feature related parameters passed through, to allow for dynamic placeholder values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const api = new ParseServer({
  ...otherOptions,

  pages: {
    enableRouter: true, // Enables the experimental feature; required for localization
    placeholders: async (params) =&amp;gt; {
      const value = await doSomething(params.locale);
      return {
        exampleKey: value
      };
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reserved Keys&lt;/h4&gt; 
&lt;p&gt;The following parameter and placeholder keys are reserved because they are used related to features such as password reset or email verification. They should not be used as translation keys in the JSON resource or as manually defined placeholder keys in the configuration: &lt;code&gt;appId&lt;/code&gt;, &lt;code&gt;appName&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;locale&lt;/code&gt;, &lt;code&gt;publicServerUrl&lt;/code&gt;, &lt;code&gt;token&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Parameters&lt;/h4&gt; 
&lt;p&gt;| Parameter | Optional | Type | Default value | Example values | Environment variable | Description | |-------------------------------------------------|----------|---------------------------------------|----------------------------------------|------------------------------------------------------|-----------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | &lt;code&gt;pages&lt;/code&gt; | yes | &lt;code&gt;Object&lt;/code&gt; | &lt;code&gt;undefined&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES&lt;/code&gt; | The options for pages such as password reset and email verification. | | &lt;code&gt;pages.enableRouter&lt;/code&gt; | yes | &lt;code&gt;Boolean&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_ENABLE_ROUTER&lt;/code&gt; | Is &lt;code&gt;true&lt;/code&gt; if the pages router should be enabled; this is required for any of the pages options to take effect. &lt;strong&gt;Caution, this is an experimental feature that may not be appropriate for production.&lt;/strong&gt; | | &lt;code&gt;pages.enableLocalization&lt;/code&gt; | yes | &lt;code&gt;Boolean&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_ENABLE_LOCALIZATION&lt;/code&gt; | Is true if pages should be localized; this has no effect on custom page redirects. | | &lt;code&gt;pages.localizationJsonPath&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;undefined&lt;/code&gt; | &lt;code&gt;./private/translations.json&lt;/code&gt; | &lt;code&gt;PARSE_SERVER_PAGES_LOCALIZATION_JSON_PATH&lt;/code&gt; | The path to the JSON file for localization; the translations will be used to fill template placeholders according to the locale. | | &lt;code&gt;pages.localizationFallbackLocale&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;en&lt;/code&gt; | &lt;code&gt;en&lt;/code&gt;, &lt;code&gt;en-GB&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt; | &lt;code&gt;PARSE_SERVER_PAGES_LOCALIZATION_FALLBACK_LOCALE&lt;/code&gt; | The fallback locale for localization if no matching translation is provided for the given locale. This is only relevant when providing translation resources via JSON file. | | &lt;code&gt;pages.placeholders&lt;/code&gt; | yes | &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;AsyncFunction&lt;/code&gt; | &lt;code&gt;undefined&lt;/code&gt; | &lt;code&gt;{ exampleKey: &#39;exampleValue&#39; }&lt;/code&gt; | &lt;code&gt;PARSE_SERVER_PAGES_PLACEHOLDERS&lt;/code&gt; | The placeholder keys and values which will be filled in pages; this can be a simple object or a callback function. | | &lt;code&gt;pages.forceRedirect&lt;/code&gt; | yes | &lt;code&gt;Boolean&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_FORCE_REDIRECT&lt;/code&gt; | Is &lt;code&gt;true&lt;/code&gt; if responses should always be redirects and never content, &lt;code&gt;false&lt;/code&gt; if the response type should depend on the request type (&lt;code&gt;GET&lt;/code&gt; request -&amp;gt; content response; &lt;code&gt;POST&lt;/code&gt; request -&amp;gt; redirect response). | | &lt;code&gt;pages.pagesPath&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;./public&lt;/code&gt; | &lt;code&gt;./files/pages&lt;/code&gt;, &lt;code&gt;../../pages&lt;/code&gt; | &lt;code&gt;PARSE_SERVER_PAGES_PAGES_PATH&lt;/code&gt; | The path to the pages directory; this also defines where the static endpoint &lt;code&gt;/apps&lt;/code&gt; points to. | | &lt;code&gt;pages.pagesEndpoint&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;apps&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_PAGES_ENDPOINT&lt;/code&gt; | The API endpoint for the pages. | | &lt;code&gt;pages.customUrls&lt;/code&gt; | yes | &lt;code&gt;Object&lt;/code&gt; | &lt;code&gt;{}&lt;/code&gt; | &lt;code&gt;{ passwordReset: &#39;https://example.com/page.html&#39; }&lt;/code&gt; | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URLS&lt;/code&gt; | The URLs to the custom pages | | &lt;code&gt;pages.customUrls.passwordReset&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;password_reset.html&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET&lt;/code&gt; | The URL to the custom page for password reset. | | &lt;code&gt;pages.customUrls.passwordResetSuccess&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;password_reset_success.html&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET_SUCCESS&lt;/code&gt; | The URL to the custom page for password reset -&amp;gt; success. | | &lt;code&gt;pages.customUrls.passwordResetLinkInvalid&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;password_reset_link_invalid.html&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET_LINK_INVALID&lt;/code&gt; | The URL to the custom page for password reset -&amp;gt; link invalid. | | &lt;code&gt;pages.customUrls.emailVerificationSuccess&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;email_verification_success.html&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SUCCESS&lt;/code&gt; | The URL to the custom page for email verification -&amp;gt; success. | | &lt;code&gt;pages.customUrls.emailVerificationSendFail&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;email_verification_send_fail.html&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SEND_FAIL&lt;/code&gt; | The URL to the custom page for email verification -&amp;gt; link send fail. | | &lt;code&gt;pages.customUrls.emailVerificationSendSuccess&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;email_verification_send_success.html&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SEND_SUCCESS&lt;/code&gt; | The URL to the custom page for email verification -&amp;gt; resend link -&amp;gt; success. | | &lt;code&gt;pages.customUrls.emailVerificationLinkInvalid&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;email_verification_link_invalid.html&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_LINK_INVALID&lt;/code&gt; | The URL to the custom page for email verification -&amp;gt; link invalid. | | &lt;code&gt;pages.customUrls.emailVerificationLinkExpired&lt;/code&gt; | yes | &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;email_verification_link_expired.html&lt;/code&gt; | - | &lt;code&gt;PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_LINK_EXPIRED&lt;/code&gt; | The URL to the custom page for email verification -&amp;gt; link expired. |&lt;/p&gt; 
&lt;h3&gt;Notes 
 &lt;!-- raw HTML omitted --&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;In combination with the &lt;a href=&quot;https://www.npmjs.com/package/parse-server-api-mail-adapter&quot;&gt;Parse Server API Mail Adapter&lt;/a&gt; Parse Server provides a fully localized flow (emails -&amp;gt; pages) for the user. The email adapter sends a localized email and adds a locale parameter to the password reset or email verification link, which is then used to respond with localized pages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Parse Server will, by default, log:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;to the console&lt;/li&gt; 
 &lt;li&gt;daily rotating files as new line delimited JSON&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Logs are also viewable in Parse Dashboard.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to log each request and response?&lt;/strong&gt; Set the &lt;code&gt;VERBOSE&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;VERBOSE=&#39;1&#39; parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want logs to be placed in a different folder?&lt;/strong&gt; Pass the &lt;code&gt;PARSE_SERVER_LOGS_FOLDER&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;PARSE_SERVER_LOGS_FOLDER=&#39;&amp;lt;path-to-logs-folder&amp;gt;&#39; parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to log specific levels?&lt;/strong&gt; Pass the &lt;code&gt;logLevel&lt;/code&gt; parameter when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --logLevel LOG_LEVEL&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want new line delimited JSON error logs (for consumption by CloudWatch, Google Cloud Logging, etc)?&lt;/strong&gt; Pass the &lt;code&gt;JSON_LOGS&lt;/code&gt; environment variable when starting &lt;code&gt;parse-server&lt;/code&gt;. Usage :- &lt;code&gt;JSON_LOGS=&#39;1&#39; parse-server --appId APPLICATION_ID --masterKey MASTER_KEY&lt;/code&gt;&lt;/p&gt; 
&lt;h1&gt;Live Query&lt;/h1&gt; 
&lt;p&gt;Live queries are meant to be used in real-time reactive applications, where just using the traditional query paradigm could cause several problems, like increased response time and high network and server usage. Live queries should be used in cases where you need to continuously update a page with fresh data coming from the database, which often happens in (but is not limited to) online games, messaging clients and shared to-do lists.&lt;/p&gt; 
&lt;p&gt;Take a look at &lt;a href=&quot;https://docs.parseplatform.org/parse-server/guide/#live-queries&quot;&gt;Live Query Guide&lt;/a&gt;, &lt;a href=&quot;https://docs.parseplatform.org/parse-server/guide/#scalability&quot;&gt;Live Query Server Setup Guide&lt;/a&gt; and &lt;a href=&quot;https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification&quot;&gt;Live Query Protocol Specification&lt;/a&gt;. You can setup a standalone server or multiple instances for scalability (recommended).&lt;/p&gt; 
&lt;h1&gt;GraphQL&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt;, developed by Facebook, is an open-source data query and manipulation language for APIs. In addition to the traditional REST API, Parse Server automatically generates a GraphQL API based on your current application schema. Parse Server also allows you to define your custom GraphQL queries and mutations, whose resolvers can be bound to your cloud code functions.&lt;/p&gt; 
&lt;h2&gt;Running&lt;/h2&gt; 
&lt;h3&gt;Using the CLI&lt;/h3&gt; 
&lt;p&gt;The easiest way to run the Parse GraphQL API is through the CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install -g parse-server mongodb-runner
$ mongodb-runner start
$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test --publicServerURL http://localhost:1337/parse --mountGraphQL --mountPlayground
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After starting the server, you can visit http://localhost:1337/playground in your browser to start playing with your GraphQL API.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; use --mountPlayground option in production. &lt;a href=&quot;https://github.com/parse-community/parse-dashboard&quot;&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;You can also run the Parse GraphQL API inside a Docker container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone https://github.com/parse-community/parse-server
$ cd parse-server
$ docker build --tag parse-server .
$ docker run --name my-mongo -d mongo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Running the Parse Server Image 
 &lt;!-- raw HTML omitted --&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ docker run --name my-parse-server --link my-mongo:mongo -v config-vol:/parse-server/config -p 1337:1337 -d parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://mongo/test --publicServerURL http://localhost:1337/parse --mountGraphQL --mountPlayground
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;If you want to use &lt;a href=&quot;https://docs.parseplatform.org/cloudcode/guide/&quot;&gt;Cloud Code&lt;/a&gt;, add &lt;code&gt;-v cloud-code-vol:/parse-server/cloud --cloud /parse-server/cloud/main.js&lt;/code&gt; to the command above. Make sure &lt;code&gt;main.js&lt;/code&gt; is in the &lt;code&gt;cloud-code-vol&lt;/code&gt; directory before starting Parse Server.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;After starting the server, you can visit http://localhost:1337/playground in your browser to start playing with your GraphQL API.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; use --mountPlayground option in production. &lt;a href=&quot;https://github.com/parse-community/parse-dashboard&quot;&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; 
&lt;h3&gt;Using Express.js&lt;/h3&gt; 
&lt;p&gt;You can also mount the GraphQL API in an Express.js application together with the REST API or solo. You first need to create a new project and install the required dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ mkdir my-app
$ cd my-app
$ npm install parse-server express --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, create an &lt;code&gt;index.js&lt;/code&gt; file with the following content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const express = require(&#39;express&#39;);
const { default: ParseServer, ParseGraphQLServer } = require(&#39;parse-server&#39;);

const app = express();

const parseServer = new ParseServer({
  databaseURI: &#39;mongodb://localhost:27017/test&#39;,
  appId: &#39;APPLICATION_ID&#39;,
  masterKey: &#39;MASTER_KEY&#39;,
  serverURL: &#39;http://localhost:1337/parse&#39;,
  publicServerURL: &#39;http://localhost:1337/parse&#39;
});

const parseGraphQLServer = new ParseGraphQLServer(
  parseServer,
  {
    graphQLPath: &#39;/graphql&#39;,
    playgroundPath: &#39;/playground&#39;
  }
);

app.use(&#39;/parse&#39;, parseServer.app); // (Optional) Mounts the REST API
parseGraphQLServer.applyGraphQL(app); // Mounts the GraphQL API
parseGraphQLServer.applyPlayground(app); // (Optional) Mounts the GraphQL Playground - do NOT use in Production

app.listen(1337, function() {
  console.log(&#39;REST API running on http://localhost:1337/parse&#39;);
  console.log(&#39;GraphQL API running on http://localhost:1337/graphql&#39;);
  console.log(&#39;GraphQL Playground running on http://localhost:1337/playground&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And finally start your app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npx mongodb-runner start
$ node index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After starting the app, you can visit http://localhost:1337/playground in your browser to start playing with your GraphQL API.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Do &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; mount the GraphQL Playground in production. &lt;a href=&quot;https://github.com/parse-community/parse-dashboard&quot;&gt;Parse Dashboard&lt;/a&gt; has a built-in GraphQL Playground and it is the recommended option for production apps.&lt;/p&gt; 
&lt;h2&gt;Checking the API health&lt;/h2&gt; 
&lt;p&gt;Run the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-graphql&quot;&gt;query Health {
  health
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive the following response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;data&quot;: {
    &quot;health&quot;: true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Creating your first class&lt;/h2&gt; 
&lt;p&gt;Since your application does not have any schema yet, you can use the &lt;code&gt;createClass&lt;/code&gt; mutation to create your first class. Run the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-graphql&quot;&gt;mutation CreateClass {
  createClass(
    name: &quot;GameScore&quot;
    schemaFields: {
      addStrings: [{ name: &quot;playerName&quot; }]
      addNumbers: [{ name: &quot;score&quot; }]
      addBooleans: [{ name: &quot;cheatMode&quot; }]
    }
  ) {
    name
    schemaFields {
      name
      __typename
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive the following response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;data&quot;: {
    &quot;createClass&quot;: {
      &quot;name&quot;: &quot;GameScore&quot;,
      &quot;schemaFields&quot;: [
        {
          &quot;name&quot;: &quot;objectId&quot;,
          &quot;__typename&quot;: &quot;SchemaStringField&quot;
        },
        {
          &quot;name&quot;: &quot;updatedAt&quot;,
          &quot;__typename&quot;: &quot;SchemaDateField&quot;
        },
        {
          &quot;name&quot;: &quot;createdAt&quot;,
          &quot;__typename&quot;: &quot;SchemaDateField&quot;
        },
        {
          &quot;name&quot;: &quot;playerName&quot;,
          &quot;__typename&quot;: &quot;SchemaStringField&quot;
        },
        {
          &quot;name&quot;: &quot;score&quot;,
          &quot;__typename&quot;: &quot;SchemaNumberField&quot;
        },
        {
          &quot;name&quot;: &quot;cheatMode&quot;,
          &quot;__typename&quot;: &quot;SchemaBooleanField&quot;
        },
        {
          &quot;name&quot;: &quot;ACL&quot;,
          &quot;__typename&quot;: &quot;SchemaACLField&quot;
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using automatically generated operations&lt;/h2&gt; 
&lt;p&gt;Parse Server learned from the first class that you created and now you have the &lt;code&gt;GameScore&lt;/code&gt; class in your schema. You can now start using the automatically generated operations!&lt;/p&gt; 
&lt;p&gt;Run the following to create your first object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-graphql&quot;&gt;mutation CreateGameScore {
  createGameScore(
    fields: {
      playerName: &quot;Sean Plott&quot;
      score: 1337
      cheatMode: false
    }
  ) {
    id
    updatedAt
    createdAt
    playerName
    score
    cheatMode
    ACL
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive a response similar to this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;data&quot;: {
    &quot;createGameScore&quot;: {
      &quot;id&quot;: &quot;XN75D94OBD&quot;,
      &quot;updatedAt&quot;: &quot;2019-09-17T06:50:26.357Z&quot;,
      &quot;createdAt&quot;: &quot;2019-09-17T06:50:26.357Z&quot;,
      &quot;playerName&quot;: &quot;Sean Plott&quot;,
      &quot;score&quot;: 1337,
      &quot;cheatMode&quot;: false,
      &quot;ACL&quot;: null
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also run a query to this new class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-graphql&quot;&gt;query GameScores {
  gameScores {
    results {
      id
      updatedAt
      createdAt
      playerName
      score
      cheatMode
      ACL
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive a response similar to this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;data&quot;: {
    &quot;gameScores&quot;: {
      &quot;results&quot;: [
        {
          &quot;id&quot;: &quot;XN75D94OBD&quot;,
          &quot;updatedAt&quot;: &quot;2019-09-17T06:50:26.357Z&quot;,
          &quot;createdAt&quot;: &quot;2019-09-17T06:50:26.357Z&quot;,
          &quot;playerName&quot;: &quot;Sean Plott&quot;,
          &quot;score&quot;: 1337,
          &quot;cheatMode&quot;: false,
          &quot;ACL&quot;: null
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Customizing your GraphQL Schema&lt;/h2&gt; 
&lt;p&gt;Parse GraphQL Server allows you to create a custom GraphQL schema with own queries and mutations to be merged with the auto-generated ones. You can resolve these operations using your regular cloud code functions.&lt;/p&gt; 
&lt;p&gt;To start creating your custom schema, you need to code a &lt;code&gt;schema.graphql&lt;/code&gt; file and initialize Parse Server with &lt;code&gt;--graphQLSchema&lt;/code&gt; and &lt;code&gt;--cloud&lt;/code&gt; options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ parse-server --appId APPLICATION_ID --masterKey MASTER_KEY --databaseURI mongodb://localhost/test --publicServerURL http://localhost:1337/parse --cloud ./cloud/main.js --graphQLSchema ./cloud/schema.graphql --mountGraphQL --mountPlayground
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating your first custom query 
 &lt;!-- raw HTML omitted --&gt;&lt;/h3&gt; 
&lt;p&gt;Use the code below for your &lt;code&gt;schema.graphql&lt;/code&gt; and &lt;code&gt;main.js&lt;/code&gt; files. Then restart your Parse Server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-graphql&quot;&gt;# schema.graphql
extend type Query {
  hello: String! @resolve
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// main.js
Parse.Cloud.define(&#39;hello&#39;, async () =&amp;gt; {
  return &#39;Hello world!&#39;;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can now run your custom query using GraphQL Playground:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-graphql&quot;&gt;query {
  hello
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should receive the response below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;data&quot;: {
    &quot;hello&quot;: &quot;Hello world!&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Learning more&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;http://docs.parseplatform.org/graphql/guide/&quot;&gt;Parse GraphQL Guide&lt;/a&gt; is a very good source for learning how to use the Parse GraphQL API.&lt;/p&gt; 
&lt;p&gt;You also have a very powerful tool inside your GraphQL Playground. Please look at the right side of your GraphQL Playground. You will see the &lt;code&gt;DOCS&lt;/code&gt; and &lt;code&gt;SCHEMA&lt;/code&gt; menus. They are automatically generated by analyzing your application schema. Please refer to them and learn more about everything that you can do with your Parse GraphQL API.&lt;/p&gt; 
&lt;p&gt;Additionally, the &lt;a href=&quot;https://graphql.org/learn/&quot;&gt;GraphQL Learn Section&lt;/a&gt; is a very good source to learn more about the power of the GraphQL language.&lt;/p&gt; 
&lt;h1&gt;Upgrading to 3.0.0&lt;/h1&gt; 
&lt;p&gt;Starting 3.0.0, parse-server uses the JS SDK version 2.0. In short, parse SDK v2.0 removes the backbone style callbacks as well as the Parse.Promise object in favor of native promises. All the Cloud Code interfaces also have been updated to reflect those changes, and all backbone style response objects are removed and replaced by Promise style resolution.&lt;/p&gt; 
&lt;p&gt;We have written up a &lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/3.0.0.md&quot;&gt;migration guide&lt;/a&gt;, hoping this will help you transition to the next major release.&lt;/p&gt; 
&lt;h1&gt;Want to ride the bleeding edge?&lt;/h1&gt; 
&lt;p&gt;It is recommend to use builds deployed npm for many reasons, but if you want to use the latest not-yet-released version of parse-server, you can do so by depending directly on this branch:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install parse-community/parse-server.git#master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Experimenting 
 &lt;!-- raw HTML omitted --&gt;&lt;/h2&gt; 
&lt;p&gt;You can also use your own forks, and work in progress branches by specifying them:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install github:myUsername/parse-server#my-awesome-feature
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And don&#39;t forget, if you plan to deploy it remotely, you should run &lt;code&gt;npm install&lt;/code&gt; with the &lt;code&gt;--save&lt;/code&gt; option.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;We really want Parse to be yours, to see it grow and thrive in the open source community. Please see the &lt;a href=&quot;https://raw.githubusercontent.com/parse-community/parse-server/master/CONTRIBUTING.md&quot;&gt;Contributing to Parse Server guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute... we&#39;d love to see your face on this list!&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;Sponsors&lt;/h1&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. &lt;a href=&quot;https://opencollective.com/parse-server#sponsor&quot;&gt;Become a sponsor!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;Backers&lt;/h1&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. &lt;a href=&quot;https://opencollective.com/parse-server#backer&quot;&gt;Become a backer!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;As of April 5, 2017, Parse, LLC has transferred this code to the parse-community organization, and will no longer be contributing to or distributing this code.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
