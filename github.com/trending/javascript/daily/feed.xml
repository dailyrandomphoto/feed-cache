<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Thu, 09 Sep 2021 01:53:07 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ErickWendel/semana-javascript-expert05</title>
      <link>https://github.com/ErickWendel/semana-javascript-expert05</link>
      <description>&lt;p&gt;Todas as aulas da Semana JS Expert 5.0 - Google Drive Clone&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Drive Clone - Semana JS Expert 5.0&lt;/h1&gt; 
&lt;p&gt;Seja bem vindo(a) √† quinta Semana Javascript Expert. Este √© o c√≥digo inicial para iniciar nossa jornada.&lt;/p&gt; 
&lt;p&gt;Marque esse projeto com uma estrela üåü&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ErickWendel/semana-javascript-expert05/main/resources/demo.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Checklist Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Web API&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[] Deve listar arquivos baixados&lt;/li&gt; 
   &lt;li&gt;[] Deve receber stream de arquivos e salvar em disco&lt;/li&gt; 
   &lt;li&gt;[] Deve notificar sobre progresso de armazenamento de arquivos em disco&lt;/li&gt; 
   &lt;li&gt;[] Deve permitir upload de arquivos em formato image, video ou audio&lt;/li&gt; 
   &lt;li&gt;[] Deve atingir 100% de cobertura de c√≥digo em testes&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Web App&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[] Deve listar arquivos baixados&lt;/li&gt; 
   &lt;li&gt;[] Deve permitir fazer upload de arquivos de qualquer tamanho&lt;/li&gt; 
   &lt;li&gt;[] Deve ter fun√ß√£o de upload via bot√£o&lt;/li&gt; 
   &lt;li&gt;[] Deve exibir progresso de upload&lt;/li&gt; 
   &lt;li&gt;[] Deve ter fun√ß√£o de upload via drag and drop&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Desafios para alunos p√≥s projeto&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;em&gt;Backend&lt;/em&gt;: Salvar o arquivo na AWS ou qualquer servi√ßo de storage 
  &lt;ul&gt; 
   &lt;li&gt;Nosso projeto hoje armazena arquivos em disco. o desafio √© voc√™ via Stream, fazer upload para algum servi√ßo na nuvem&lt;/li&gt; 
   &lt;li&gt;Como plus, manter 100% de code coverage, ou seja, crie testes para sua nova feature&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Frontend&lt;/em&gt;: Adicionar testes no frontend e alcan√ßar 100% de code coverage 
  &lt;ul&gt; 
   &lt;li&gt;Voc√™ aprendeu como fazer testes no backend. Usar o mesmo processo para criar testes unit√°rios no frontend com Jest&lt;/li&gt; 
   &lt;li&gt;Caso tenha duvidas, acesse o &lt;a href=&quot;https://github.com/ErickWendel/tdd-frontend-example&quot;&gt;exemplo&lt;/a&gt; e deixe uma estrela!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Infraestrutura&lt;/em&gt;: Publicar aplica√ß√£o com seu SSL customizado em m√°quina virtual 
  &lt;ul&gt; 
   &lt;li&gt;Voc√™ aprendeu a gerar SSL local, o desafio √© voc√™ criar um certificado (pode ser com o &lt;em&gt;Let&#39;s Encrypt&lt;/em&gt;) e adicionar na sua aplica√ß√£o&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Considera√ß√µes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Tire suas d√∫vidas sobre os desafios em nossa comunidade, o objetivo √© voc√™ aprender de forma divertida. Surgiu d√∫vidas? Pergunte por l√°!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ao completar qualquer um dos desafios, envie no canal &lt;strong&gt;#desafios&lt;/strong&gt; da comunidade no &lt;strong&gt;Discord&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Cr√©ditos ao Layout &amp;lt;3&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;O Layout foi adaptado a partir do projeto do brasileiro &lt;a href=&quot;https://github.com/leoespsanto&quot;&gt;Leonardo Santo&lt;/a&gt; disponibilizado no &lt;a href=&quot;https://codepen.io/leoespsanto/pen/KZMMKG&quot;&gt;codepen&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NODE_OPTIONS&lt;/code&gt; n√£o √© um comando reconhecido pelo sistema, o que fazer?&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Se voc√™ estiver no Windows, a forma de criar vari√°veis de ambiente √© diferente. Voc√™ deve usar a palavra &lt;code&gt;set&lt;/code&gt; antes do comando.&lt;/li&gt; 
   &lt;li&gt;Ex: &lt;code&gt; &quot;test&quot;: &quot;set NODE_OPTIONS=--experimental-vm-modules &amp;amp;&amp;amp; npx jest --runInBand&quot;,&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Certificado SSL √© inv√°lido, o que fazer?&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Esse erro acontece porque gerei um certificado atrelado ao usu√°rio da minha m√°quina.&lt;/li&gt; 
   &lt;li&gt;Voc√™ pode clicar em prosseguir no browser e usar o certificado invalido que o projeto vai continuar funcionando, mas se quiser gerar o seu pr√≥prio, escrevi o passo a passo em &lt;a href=&quot;https://raw.githubusercontent.com/ErickWendel/semana-javascript-expert05/main/certificates&quot;&gt;./certificates&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rodei &lt;code&gt;npm test&lt;/code&gt; mas nada acontece, o que fazer?&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Verifique a vers√£o do seu Node.js. Estamos usando na vers√£o 16.8. Entre no &lt;a href=&quot;https://nodejs.org&quot;&gt;site do node.js&lt;/a&gt; e baixe a vers√£o mais recente.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>30-seconds/30-seconds-of-code</title>
      <link>https://github.com/30-seconds/30-seconds-of-code</link>
      <description>&lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/logo.png&quot; alt=&quot;Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;30 seconds of code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit &lt;a href=&quot;https://30secondsofcode.org&quot;&gt;our website&lt;/a&gt; to view our snippet collection.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://30secondsofcode.org/search&quot;&gt;Search page&lt;/a&gt; to find snippets that suit your needs. You can search by name, tag, language or using a snippet&#39;s description. Just start typing a term and see what comes up.&lt;/li&gt; 
 &lt;li&gt;Browse the &lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;JavaScript Snippet collection&lt;/a&gt; to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.&lt;/li&gt; 
 &lt;li&gt;Click on each snippet card to view the whole snippet, including code, explanation and examples.&lt;/li&gt; 
 &lt;li&gt;You can use the button at the bottom of a snippet card to copy the code to clipboard.&lt;/li&gt; 
 &lt;li&gt;If you like the project, give it a star. It means a lot to the people maintaining it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Want to contribute?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to help us improve, take a minute to read the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/snippet-template.md&quot;&gt;Snippet Template&lt;/a&gt; to add new snippets to the collection.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with a specific snippet, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-of-code/issues/new&quot;&gt;open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with the website, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-web/issues/new&quot;&gt;report it in the web repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This repository is maintained by the &lt;a href=&quot;https://github.com/30-seconds&quot;&gt;30 seconds of code organization on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;All snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.&lt;/li&gt; 
 &lt;li&gt;Logos, names and trademarks are not to be used without the explicit consent of the owners of the 30 seconds of code GitHub organization.&lt;/li&gt; 
 &lt;li&gt;Our website is powered by &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>HashLips/generative-art-opensource</title>
      <link>https://github.com/HashLips/generative-art-opensource</link>
      <description>&lt;p&gt;Create generative art by using the canvas api and node js, feel free to contribute to this repo with new ideas.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;generative-art-opensource&lt;/h1&gt; 
&lt;p&gt;Create generative art by using the canvas api and node js, feel free to contribute to this repo with new ideas.&lt;/p&gt; 
&lt;h1&gt;Project Setup&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;install &lt;code&gt;node.js&lt;/code&gt; on your local system (&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;https://nodejs.org/en/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;clone the repository to your local system &lt;code&gt;git@github.com:HashLips/generative-art-opensource.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn add all&lt;/code&gt; to install dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;How to use&lt;/h1&gt; 
&lt;h2&gt;Run the code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;node index.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the &lt;code&gt;./output&lt;/code&gt; folder to find your generated images to use as NFTs, as well as the metadata to use for NFT marketplaces.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Adjust the provided configuration and resources&lt;/h2&gt; 
&lt;h3&gt;Configuration file&lt;/h3&gt; 
&lt;p&gt;The file &lt;code&gt;./input/config.js&lt;/code&gt; contains the following properties that can be adjusted to your preference in order to change the behavior of the NFT generation procedure:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;width: - of your image in pixels. Default: &lt;code&gt;1000px&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;height: - of your image in pixels. Default: &lt;code&gt;1000px&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;dir: - where image parts are stored. Default: &lt;code&gt;./input&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;description: - of your generated NFT. Default: &lt;code&gt;This is an NFT made by the coolest generative code.&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;baseImageUri: - URL base to access your NFTs from. This will be used by platforms to find your image resource. This expects the image to be accessible by it&#39;s id like &lt;code&gt;${baseImageUri}/${id}&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;startEditionFrom: - number (int) to start naming NFTs from. Default: &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;editionSize: - number (int) to end edition at. Default: &lt;code&gt;10&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;editionDnaPrefix: - value (number or string) that indicates which dna from an edition is used there. I.e. dna &lt;code&gt;0&lt;/code&gt; from to independent batches in the same edition may differ, and can be differentiated using this. Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;rarityWeights: - allows to provide rarity categories and how many of each type to include in an edition. Default: &lt;code&gt;1 super_rare, 4 rare, 5 original&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;layers: list of layers that should be used to render the image. See next section for detail.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image layers&lt;/h3&gt; 
&lt;p&gt;The image layers are different parts that make up a full image by overlaying on top of each other. E.g. in the example input content of this repository we start with the eyeball and layer features like the eye lids or iris on top to create the completed and unique eye, which we can then use as part of our NFT collection. To ensure uniqueness, we want to add various features and multiple options for each of them in order to allow enough permutations for the amount of unique images we require.&lt;/p&gt; 
&lt;p&gt;To start, copy the layers/features and their images in a flat hierarchy at a directory of your choice (by default we expect them in &lt;code&gt;./input/&lt;/code&gt;). The features should contain options for each rarity that is provided via the config file.&lt;/p&gt; 
&lt;p&gt;After adding the &lt;code&gt;layers&lt;/code&gt;, adjust them accordingly in the &lt;code&gt;config.js&lt;/code&gt; by providing the directory path, positioning and sizes. Use the existing &lt;code&gt;addLayers&lt;/code&gt; calls as guidance for how to add layers. This can either only use the name of the layer and will use default positioning (x=0, y=0) and sizes (width=configured width, height=configure height), or positioning and sizes can be provided for more flexibility.&lt;/p&gt; 
&lt;h3&gt;Allowing different rarities for certain rarity/layer combinations&lt;/h3&gt; 
&lt;p&gt;It is possible to provide a percentage at which e.g. a rare item would contain a rare vs. common part in a given layer. This can be done via the &lt;code&gt;addRarityPercentForLayer&lt;/code&gt; that can be found in the &lt;code&gt;config.js&lt;/code&gt; as well. This allows for more fine grained control over how much randomness there should be during the generation process, and allows a combination of common and rare parts.&lt;/p&gt; 
&lt;h1&gt;Development suggestions&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preferably use VSCode with the prettifier plugin for a consistent coding style (or equivalent js formatting rules)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>khanhas/spicetify-cli</title>
      <link>https://github.com/khanhas/spicetify-cli</link>
      <description>&lt;p&gt;Commandline tool to customize Spotify client. Supports Windows, MacOS and Linux.&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&quot;center&quot;&gt;&lt;img src=&quot;https://i.imgur.com/iwcLITQ.png&quot; width=&quot;600px&quot;&gt;&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/khanhas/spicetify-cli&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/khanhas/spicetify-cli&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/khanhas/spicetify-cli/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/khanhas/spicetify-cli/all.svg?colorB=97CA00?label=version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/khanhas/spicetify-cli/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/khanhas/spicetify-cli/total.svg?colorB=97CA00&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/VnevqPp2Rr&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/842219447716151306?label=Chat&amp;amp;logo=discord&amp;amp;logoColor=discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.reddit.com/r/spicetify&quot;&gt;&lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/spicetify?style=social&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Command-line tool to customize new Spotify client (v1.1.58 or later). Supports Windows, MacOS and Linux.&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/26436809/118751529-d0abcf00-b8a4-11eb-9876-8b15f930a691.png&quot; alt=&quot;img&quot; align=&quot;right&quot; width=&quot;500px&quot;&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change colors whole UI&lt;/li&gt; 
 &lt;li&gt;Inject CSS for advanced customization&lt;/li&gt; 
 &lt;li&gt;Inject Extensions (Javascript script) to extend functionalities, manipulate UI and control player.&lt;/li&gt; 
 &lt;li&gt;Inject Custom apps&lt;/li&gt; 
 &lt;li&gt;Remove bloated components to improve performance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Installation&quot;&gt;Installation&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Basic-Usage&quot;&gt;Basic Usage&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Customization&quot;&gt;Customization&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Custom-Apps&quot;&gt;Custom Apps&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/h4&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/project_e_commerce</title>
      <link>https://github.com/adrianhajdin/project_e_commerce</link>
      <description>&lt;p&gt;This is a code repository for the corresponding video tutorial. In this video, we&#39;re going to build a fully functional eCommerce application using commerce.js.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;E-Commerce&lt;/h1&gt; 
&lt;h3&gt;&lt;a href=&quot;https://commerce-js.netlify.app/&quot;&gt;Live Site&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/mH9SNNq/Build-an-e-commerce-1.png&quot; alt=&quot;eCommerce&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Stay up to date with new projects&lt;/h2&gt; 
&lt;p&gt;New major projects coming soon, subscribe to the mailing list to stay up to date &lt;a href=&quot;https://javascriptmastery.eo.page/mailing-list&quot;&gt;https://javascriptmastery.eo.page/mailing-list&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial.&lt;/p&gt; 
&lt;p&gt;In this video, we&#39;re going to build a fully functional eCommerce application using commerce.js.&lt;/p&gt; 
&lt;p&gt;While building it you&#39;re going to learn many advanced React &amp;amp; JavaScript topics, as well as how to use Stripe for card transactions. On top of that, at the end of the video, you will have this unique and complex webshop app that you will be able to add to your portfolio. And trust me, e-commerce applications are impressive.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>X1a0He/jd_scripts_fixed</title>
      <link>https://github.com/X1a0He/jd_scripts_fixed</link>
      <description>&lt;p&gt;Áî±Êú¨‰∫∫‰øÆÂ§çÁöÑ‰∫¨‰∏úÁ±ªËÑöÊú¨ÔºåÂºïÁî®ËØ∑Ê≥®ÊòéÊù•Ê∫ê&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Áî±Êú¨‰∫∫‰øÆÂ§çÁöÑ‰∫¨‰∏úÁ±ªËÑöÊú¨ÔºåÂºïÁî®ËØ∑Ê≥®ÊòéÊù•Ê∫ê&lt;/h1&gt; 
&lt;p&gt;ÊîØÊåÅ‰∏î‰ªÖÊîØÊåÅNode.jsÔºåÈùíÈæôÈù¢ÊùøÔºåÊàëÊòØÊµãËØïËøáËÉΩË∑ëÊâç‰ºöÊîæ‰∏äÊù•ÁöÑ&lt;/p&gt; 
&lt;p&gt;Ê≤°ÊúâÊãâÂ∫ìÂëΩ‰ª§ÔºåËá™Â∑±Êâæ&lt;/p&gt; 
&lt;p&gt;ÂèØËÉΩ‰∏ÄÂ§©‰ºöcommitÂá†ÂçÅÊ¨°&lt;/p&gt; 
&lt;p&gt;Âõ†‰∏∫ÊúâÁ©∫ÁöÑËØù‰øÆÂæóÈ¢ëÁπÅÔºåÊúâÊó∂ÂèØËÉΩÊòØÁùÄÊÄ•‰∫ÜÊ≤°ÊÉ≥Â§™Â§öÈöè‰æø‰øÆ‰øÆÂ∞±commitÁöÑ&lt;/p&gt; 
&lt;p&gt;ËÆæÁΩÆ‰∫Ü‰ªÄ‰πàcommitÈÄöÁü•ÁöÑÂÖ≥‰∫ÜÂêßÔºåÂà´ÁõëÊéßËøô‰∏™Â∫ì‰∫Ü&lt;/p&gt; 
&lt;h2&gt;ContactÔºö&lt;a href=&quot;https://t.me/X1a0He&quot;&gt;X1a0He&lt;/a&gt; (ÈúÄË¶ÅÁßëÂ≠¶‰∏äÁΩë)&lt;/h2&gt; 
&lt;h1&gt;Fixlog&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-08 17:24 Fix &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_try_xh.js&quot;&gt;jd_try_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;ÊîØÊåÅÈªëÂêçÂçïËøáÊª§ÂÖ≥ÈîÆËØçÊó∂ ËæìÂá∫ÂØπÂ∫îÂÖ≥ÈîÆËØç
ÂØπÂ∫îË¥¶Âè∑ÈÅáÂà∞403È£éÊéßÂêéÂ∞Ü‰∏ç‰ºöÂÜçÊâßË°å
Êú™Âà∞Áî≥ËØ∑Êó∂Èó¥ÁöÑÂïÜÂìÅ‰ºöËá™Âä®Ë∑≥Ëøá
‰øÆÂ§çÂΩìtabIdÁªÑÈÅçÂéÜÂÆåÊØïÂêétabIdÂèòÊàêundefinedÁöÑÈóÆÈ¢ò
‰∏∫‰∫ÜÈò≤Ê≠¢È£éÊéßÔºåÂ∞ÜÈÅçÂéÜÊï∞ÊçÆÁöÑÈªòËÆ§Èó¥ÈöîÊèêÂçáÂà∞2000ÊØ´Áßí
Ë∞ÉÊï¥ÈªòËÆ§ËØïÁî®ÁªÑÈïøÂ∫¶‰∏∫50
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-07 12:15 Fix &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_islogin_xh.js&quot;&gt;jd_islogin_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;‰øÆÂ§ç‰∫ÜÊ≤°ÊúâÈÄöÁü•ÁöÑÈóÆÈ¢ò
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-06 22:03 Fix &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_car_exchange_xh.js&quot;&gt;jd_car_exchange_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;‰øÆÂ§çÂÖëÊç¢api
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-06 20:08 Fix &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_unsubscribe_xh.js&quot;&gt;jd_unsubscribe_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;‰øÆÂ§çÂèñÂÖ≥Â∫óÈì∫ÈÅáÂà∞ÂÖ≥ÈîÆÂ≠ó‰ºöËøõÂÖ•Ê≠ªÂæ™ÁéØÁöÑÈóÆÈ¢ò
ÈáçÂÜôÊâÄÊúâÂèòÈáèÔºåÊîØÊåÅÁéØÂ¢ÉÂèòÈáèÊéßÂà∂ÂÜÖÈÉ®ÂèòÈáè
‰∏çÂú®ÊîØÊåÅQuantumultXÊàñÂÖ∂‰ªñÔºåÊîØÊåÅ‰∏î‰ªÖÊîØÊåÅNode.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-06 20:08 Fix &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_try_xh.js&quot;&gt;jd_try_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;‰øÆÂ§ç‰∏çÂ≠òÂú®Â∏ÉÂ∞îÂûãÁéØÂ¢ÉÂèòÈáèÊó∂ÔºåÂÜÖÈÉ®ËØªÂèñÁ±ªÂûãÈîôËØØ‰∏îÁõ∏ÂÖ≥ÈªòËÆ§ÂÄº‰∏çÁîüÊïàÁöÑÈóÆÈ¢ò
Êñ∞Â¢ûÁôΩÂêçÂçïÂäüËÉΩÔºåËØ¶ÊÉÖËØ∑Êü•ÁúãËÑöÊú¨ÂÜÖÊ≥®Èáä
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-06 16:47 Fix &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_try_xh.js&quot;&gt;jd_try_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;‰øÆÂ§çtrialActivityIdListÂíåtrialActivityTitleListÂøòËÆ∞ÈáçÁΩÆÂØºËá¥ÈÉ®ÂàÜÊÉÖÂÜµÊâßË°åÂêé‰∏ã‰∏ÄË¥¶Âè∑Êó†Ê≥ïÊâßË°åÁöÑÈóÆÈ¢ò
‰øÆÂ§çÊó†Ê≥ïËØªÂèñÊàñËØªÂèñÁéØÂ¢ÉÂèòÈáèÈîôËØØÁöÑÈóÆÈ¢ò
Êó•ÂøóÊñ∞Â¢û‰∫ÜÂêÑ‰∏™ÁéØÂ¢ÉÂèòÈáèÁöÑÁ±ªÂûãÔºåÊúâÈóÆÈ¢òËØ∑Â∏¶Êó•ÂøóÂèçÈ¶à
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-06 15:58 Fix &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_try_xh.js&quot;&gt;jd_try_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;‰øÆÂ§çtabListÂáΩÊï∞Êó†Ê≥ïËæìÂá∫tabIdÂíåÂØπÂ∫îtabNameÁöÑÈóÆÈ¢ò
‰øÆÂ§çÂõ†$.isPushÊú™ÊèêÂâçÂÆö‰πâÂØºËá¥ËøáÊª§Êó∂ÊèêÈÜískuTitleËß£ÊûêÂºÇÂ∏∏ÁöÑÈóÆÈ¢ò
‰øÆÂ§çÂΩìËææÂà∞Áî≥ËØ∑Ê¨°Êï∞‰∏äÈôê300Ê¨°ÁöÑÊó∂ÂÄô‰∏ç‰ºöËá™Âä®ÂÅúÊ≠¢ÁöÑÈóÆÈ¢ò
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-06 14:20 Fix &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_try_xh.js&quot;&gt;jd_try_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;Êõ¥ÊîπtabIdÁöÑÁ±ªÂûã‰∏∫Êï∞ÁªÑ
Â¢ûÂä†ÁßçËçâÂÆòËøáÊª§ËßÑÂàô
Â¢ûÂä†ÊòØÂê¶ËæìÂá∫Âà∞Êó•Âøó
‰øÆÂ§çÂΩìmaxLengthËøáÂ§ßÁöÑÊó∂ÂÄôÔºå‰ºöÂá∫Áé∞Ëá™Âä®ÂÅúÊ≠¢ÁöÑÈóÆÈ¢ò
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;ToDo&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; About &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_try_xh.js&quot;&gt;jd_try_xh.js&lt;/a&gt; &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/issues/2&quot;&gt;#2&lt;/a&gt; &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/issues/3&quot;&gt;#3&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;ÊîØÊåÅÈªëÂêçÂçïËøáÊª§ÂÖ≥ÈîÆËØçÊó∂ ËæìÂá∫ÂØπÂ∫îÂÖ≥ÈîÆËØç
ÂØπÂ∫îË¥¶Âè∑ÈÅáÂà∞403È£éÊéßÂêéÂ∞Ü‰∏ç‰ºöÂÜçÊâßË°å
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ÁÆÄÂåñjd_bean_change.js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;ÂàùÊ≠•ÊûÑÊÄùÔºåÊØè‰∏§‰∏™Ë¥¶Âè∑Êé®ÈÄÅ‰∏ÄÈÅçÔºåÈò≤Ê≠¢ÈïøÂ∫¶ËøáÈïøÊó†Ê≥ïÊé®ÈÄÅÔºå‰æãÂ¶ÇBarkÂ∞±ÊòØ3‰∏™Ë¥¶Âè∑Êé®ÈÄÅ‰∏ç‰∫Ü
ÊàëÁúãÁúãÊÄéÊ†∑Âú®ÂéüÊúâÊï∞ÊçÆÁöÑÂü∫Á°Ä‰∏äÁÆÄÂåñ‰∏Ä‰∏ãÔºåÊúâÂ•ΩideaÁöÑÂèØ‰ª•ËÅîÁ≥ªÊàë
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Fixed:ÂèñÂÖ≥Â∫óÈì∫ÈÅáÂà∞ÂÖ≥ÈîÆÂ≠ó‰ºöËøõÂÖ•Ê≠ªÂæ™ÁéØ &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/issues/1&quot;&gt;#1&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;UpdateLog&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-07 23:43 Update &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_bean_change_xh.js&quot;&gt;jd_bean_change_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;ÁÆÄÂåñ‰∫Ü‰∫¨‰∏úÊó•ËµÑ‰∫ßÈÄöÁü•
Â¢ûÂä†ÂèØÈÄöËøáÁéØÂ¢ÉÂèòÈáèÊù•ÊéßÂà∂ÊØèÊ¨°ÂèëÈÄÅÁöÑË¥¶Âè∑Êï∞Èáè
JD_BEAN_CHANGE_SENDNUM ÈªòËÆ§‰∏∫2
ÊïàÊûúÂ¶Ç‰∏ã
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/9ea74bcdcd3560f70e77a50210d52ccfdea6f8ac4019ba419b863523a119549c/68747470733a2f2f7777772e7831613068652e636f6d2f77702d636f6e74656e742f75706c6f6164732f323032312f30392f576563686174494d4736382e6a706567&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-07 12:02 Update &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jd_islogin_xh.js&quot;&gt;jd_islogin_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;Ê£ÄÊµãCookieÊòØÂê¶ÊúâÊïà
[‰∫¨‰∏úË¥¶Âè∑1 xxxxxxxxxx] Ê≠£Âú®Ê£ÄÊµã...
[‰∫¨‰∏úË¥¶Âè∑1 xxxxxxxxxx] ‚úÖCookieÊúâÊïà

[‰∫¨‰∏úË¥¶Âè∑2 xxxxxxxxxx] Ê≠£Âú®Ê£ÄÊµã...
[‰∫¨‰∏úË¥¶Âè∑2 xxxxxxxxxx] ‚ùåCookieÂ§±Êïà‰∫Ü...
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-09-06 22:09 Update &lt;a href=&quot;https://github.com/X1a0He/jd_scripts_fixed/raw/main/jdCookie_xh.js&quot;&gt;jdCookie_xh.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;ÂéüÊñá‰ª∂ÁöÑËæìÂá∫Â§™ÈïøÔºåÊàëËá™Â∑±ÊîπÊàê‰∫Ü‰∏ãÈù¢ÁöÑÂΩ¢Âºè
‰∏çÂñúÂãø‰∏ã
[2021-09-06 22:07:40] ËØªÂèñÂà∞3‰∏™‰∫¨‰∏úË¥¶Âè∑Cookie
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;‰ΩøÁî®ÂâçÂøÖËØª&lt;/h1&gt; 
&lt;p&gt;Â∫ìÂ¶ÇÂÖ∂ÂêçÔºåËøôÈáåÊòØ‰∏Ä‰∫õÁî±Êàë‰∫≤Ëá™‰øÆÂ§çÁöÑ‰∫¨‰∏úÁ±ªËÑöÊú¨Ôºå‰Ω†ÂÆåÂÖ®ÂèØ‰ª•Âú®NodejsÁéØÂ¢É‰∏ãÊ≠£Â∏∏ËøêË°åÔºå‰ΩÜ‰∏çÊéíÈô§‰ºöÊúâÈÄªËæëÊÄßÈîôËØØ&lt;/p&gt; 
&lt;p&gt;‰∏çË¶ÅÂ∏¶ÁùÄËÄÅËÑöÊú¨ÁöÑÊÄùÊÉ≥Êù•Áî®Êàë‰øÆÂ§çÂêéÁöÑËÑöÊú¨&lt;/p&gt; 
&lt;p&gt;Âõ†‰∏∫ËøôÈáåÁöÑËÑöÊú¨Âü∫Êú¨‰∏äÂíåËÄÅËÑöÊú¨‰∏ç‰∏ÄÊ†∑ÔºåÊàëËÉΩÈáçÂÜôÁöÑÈÉΩ‰ºöÈáçÂÜô&lt;/p&gt; 
&lt;p&gt;ÊâÄ‰ª•‰ª•ÂâçÁöÑÊñπÂºèÊòØÊÄéÊ†∑ÔºåÊµÅÁ®ãÊòØÊÄéÊ†∑ÊàëÂπ∂‰∏çÊ∏ÖÊ•ö&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†ÊÉ≥Â∞ΩÂèØËÉΩËøòÂéü‰ª•ÂâçÁöÑ‰ΩìÈ™åÔºåÊàëÈùûÂ∏∏Ê¨¢Ëøé‰Ω†Êù•Ë∑üÊàë‰∫§ÊµÅ&lt;/p&gt; 
&lt;h1&gt;Ê≥®ÊÑè‰∫ãÈ°π&lt;/h1&gt; 
&lt;p&gt;Âõ†Êú¨‰∫∫Ê∞¥Âπ≥ÊúâÈôêÔºåÈöæÂÖç‰ºöÂá∫Áé∞‰∏Ä‰∫õÈÄªËæëÊÄßÈîôËØØÔºåÂ¶ÇÊûú‰Ω†ÂèëÁé∞‰∫ÜÊàë‰øÆÂ§çÂêéËøòÂá∫Áé∞ÈÄªËæëÈîôËØØ&lt;/p&gt; 
&lt;p&gt;ÂèàÊàñËÄÖ‰Ω†ÊúâÊõ¥Â•ΩÁöÑÂ§ÑÁêÜÊÄùË∑ØÊàñÊúâÊõ¥Â•ΩÁöÑidea&lt;/p&gt; 
&lt;p&gt;ÂèØ‰ª•Ë∑üÊàë‰∫§ÊµÅ&lt;/p&gt; 
&lt;p&gt;‰ΩÜ‰ΩøÁî®ÂâçËØ∑Á°Æ‰øù‰Ω†ËÆ§ÁúüÁúã‰∫ÜËÑöÊú¨ÂÜÖÁöÑÊ≥®ÈáäÔºåÊàëÂú®ÊØè‰∏™ËÑöÊú¨Èöæ‰ª•ÁêÜËß£ÁöÑÂú∞ÊñπÈÉΩ‰ºöÂä†‰∏ä‰∫ÜÊ≥®Èáä&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NotLuksus/nft-art-generator</title>
      <link>https://github.com/NotLuksus/nft-art-generator</link>
      <description>&lt;p&gt;A tool to generate generative NFT art projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NFT ART GENERATOR&lt;/h1&gt; 
&lt;p&gt;This tool generates generative NFT art, based of all available traits.&lt;br&gt; It was made with the intention to make the generative art field more accessible to anyone.&lt;br&gt; With this tool you don&#39;t need to be a programmer to create generative art.&lt;/p&gt; 
&lt;p&gt;If you are interested in the creation of a full project, containing smart contract, website and image generation, please DM me on &lt;a href=&quot;https://twitter.com/notluksus3D&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generate Images of an infinite amount of traits&lt;/li&gt; 
 &lt;li&gt;Weight traits for different rarities&lt;/li&gt; 
 &lt;li&gt;Remove duplicated combinations&lt;/li&gt; 
 &lt;li&gt;Generate metadata for direct use on OpenSea&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt; &lt;code&gt;npm install -g nft-art-generator&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt; &lt;code&gt;nft-generate [--save-config]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Options&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;save-config: saves all entered values to a config.json file, which gets used in future runs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Before you start, make sure your file structure looks something like this:&lt;/p&gt; 
&lt;p&gt;YOUR_PROJECT/&lt;br&gt; ‚îú‚îÄ images/&lt;br&gt; ‚îÇ ‚îú‚îÄ trait1_name/&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ file1.png&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ file2.png&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ file3.png&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ ...&lt;br&gt; ‚îÇ ‚îú‚îÄ trait2_name/&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ file4.png&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ file5.png&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ ...&lt;br&gt; ‚îÇ ‚îú‚îÄ trait3_name/&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ file6.png&lt;br&gt; ‚îÇ ‚îÇ ‚îú‚îÄ ...&lt;br&gt; ‚îÇ ‚îú‚îÄ ...&lt;/p&gt; 
&lt;p&gt;This is really important, since the scripts imports the traits based on the folder structure.&lt;/p&gt; 
&lt;p&gt;The first input allows you to select where your images are located.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current directory: Will look for an images folder inside the directory the script has been run in.&lt;/li&gt; 
 &lt;li&gt;Somewhere else on my computer: Will let you enter an absolute filepath to your images folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In the next step you are able to select where your files should be outputted to.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current directory: Will create a folder called output inside the current location and output all images there.&lt;/li&gt; 
 &lt;li&gt;Somewhere else on my computer: Will let you enter an absolute filepath to your preferred output folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The next input lets you decide if you want to allow duplicates or not.&lt;/p&gt; 
&lt;p&gt;The next input lets you decide if you want to generate metadata or not.&lt;/p&gt; 
&lt;p&gt;If you want metadata to be generated the script will ask you for a name, a description and an image url.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Name: Enter the name you want to be saved in the metadata.&lt;br&gt; Example: If you enter Crypto Punk, the script would output Crypto Punk#ID to the metadata&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Description: The description that should be saved in the metadata.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Image URL: Enter the base url of your images.&lt;br&gt; Example: If you enter &lt;a href=&quot;https://google.com/api/cryptopunks/&quot;&gt;https://google.com/api/cryptopunks/&lt;/a&gt;, the script will output &lt;a href=&quot;https://google.com/api/cryptopunks/ID&quot;&gt;https://google.com/api/cryptopunks/ID&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After that the script will output a list of all traits it could find, and asks you to select your background trait.&lt;br&gt; When you did this the script, will continue to ask you which trait should be the next layer.&lt;br&gt; Imagine it like the different layers in Photoshop and you are selecting the order of those.&lt;/p&gt; 
&lt;p&gt;Next you will enter a name for all you files.&lt;br&gt; This names will be used in the Metadata as well as in the script to make weighting the traits easier.&lt;br&gt; Example: If you have a file name bg1.png the script will ask you to name it. If its just a white background you could name it &quot;White&quot;.&lt;/p&gt; 
&lt;p&gt;The next step is the weighting of your traits.&lt;br&gt; You can enter the amount you want to have of the listed trait.&lt;br&gt; Please make sure that all traits end up with the same amount of images, otherwise there will be issues.&lt;br&gt; Example: You want 50 total images. You enter 50 White background, 25 red balls and 25 blue balls.&lt;br&gt; That would result in 50 total spheres and 50 total background.&lt;/p&gt; 
&lt;p&gt;Please note that if you selected the option to remove duplicates there might be less images then expected.&lt;/p&gt; 
&lt;p&gt;That&#39;s it check your output folder for your images and metadata file.&lt;/p&gt; 
&lt;p&gt;If you encounter any issues feel free to sent me a DM on my Twitter &lt;a href=&quot;https://twitter.com/notluksus3D&quot;&gt;@notluksus3D&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Known issues&lt;/strong&gt; Some special characters may resolve in some &quot;File couldnt be loaded&quot; errors. Try to remove any special characters from your file paths to resolve.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bradtraversy/vanillawebprojects</title>
      <link>https://github.com/bradtraversy/vanillawebprojects</link>
      <description>&lt;p&gt;Mini projects built with HTML5, CSS &amp; JavaScript. No frameworks or libraries&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;20+ Web Projects With Vanilla JavaScript&lt;/h1&gt; 
&lt;p&gt;This is the main repository for all of the projects in the course.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/web-projects-with-vanilla-javascript/?referralCode=F9B7C7FED834F91ADE75&quot;&gt;Course Link&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vanillawebprojects.com&quot;&gt;Course Info Website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;#&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Project&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Live Demo&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/form-validator&quot;&gt;Form Validator&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/form-validator/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/movie-seat-booking&quot;&gt;Movie Seat Booking&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/movie-seat-booking/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/custom-video-player&quot;&gt;Custom Video Player&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/custom-video-player/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/exchange-rate&quot;&gt;Exchange Rate Calculator&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/exchange-rate/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/dom-array-methods&quot;&gt;DOM Array Methods Project&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/dom-array-methods/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/modal-menu-slider&quot;&gt;Menu Slider &amp;amp; Modal&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/modal-menu-slider/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/hangman&quot;&gt;Hangman Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/hangman/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/meal-finder&quot;&gt;Mealfinder App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/meal-finder/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/expense-tracker&quot;&gt;Expense Tracker&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/expense-tracker/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/music-player&quot;&gt;Music Player&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/music-player/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/infinite_scroll_blog&quot;&gt;Infinite Scrolling&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/infinite_scroll_blog/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/typing-game&quot;&gt;Typing Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/typing-game/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/speech-text-reader&quot;&gt;Speech Text Reader&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/speech-text-reader/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/memory-cards&quot;&gt;Memory Cards&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/memory-cards/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/lyrics-search&quot;&gt;LyricsSearch App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/lyrics-search/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/relaxer-app&quot;&gt;Relaxer App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects//relaxer-app/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/breakout-game&quot;&gt;Breakout Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/breakout-game/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/new-year-countdown&quot;&gt;New Year Countdown&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/new-year-countdown/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/sortable-list&quot;&gt;Sortable List&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/sortable-list/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/speak-number-guess&quot;&gt;Speak Number Guessing Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vanillawebprojects.com/projects/speak-number-guess/&quot;&gt;Live Demo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;NOTE ON PULL REQUESTS: All of these projects are part of the course. While I do appreciate people trying to make some things prettier or adding new features, we are only accepting pull requests and looking at issues for bug fixes so that the code stays inline with the course&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Peppermint-Lab/Peppermint</title>
      <link>https://github.com/Peppermint-Lab/Peppermint</link>
      <description>&lt;p&gt;A ticket management system which aims to have a nice UI with easy to use features, lightweight infrastructure &amp; the ability to run on any hardware you want üçµ&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Welcome to Peppermint Ticket Management üçµ&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Peppermint-Lab/Peppermint/master/images/logo.png&quot; alt=&quot;Logo&quot;&gt; &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Version&quot; src=&quot;https://img.shields.io/badge/version-0.1.7.5-blue.svg?cacheSeconds=2592000&quot;&gt; &lt;a target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Github Stars: &quot; src=&quot;https://img.shields.io/github/stars/jwandrews99/winter?style=social&quot;&gt; &lt;/a&gt; &lt;img src=&quot;https://img.shields.io/docker/pulls/pepperlabs/peppermint&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;This project is supported by:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt; &lt;img src=&quot;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg?sanitize=true&quot; width=&quot;201px&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.buymeacoffee.com/peppermintlabs&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-green.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 15px !important;width: 75px !important;&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ticket Management System in order to help helpdesks &amp;amp; service desks manage internal staff &amp;amp; customer requests&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Currently only linux has been verified as working but we are open to the idea of supporting windows eventually as well.&lt;/p&gt; 
&lt;p&gt;Keep in mind, this is an alpha so the risk of data loss is real and it may not be stable, we do not recommend anyone runs this in a production enviroment.&lt;/p&gt; 
&lt;p&gt;Check out the getting started guide if this is the first time you&#39;ve used Peppermint:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;version: &quot;3.1&quot;

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    volumes:
      - ./docker-data/db:/data/db
    environment: 
      POSTGRES_USER: peppermint
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: peppermint

  client:
    container_name: peppermint
    image: pepperlabs/peppermint:latest
    ports:
      - 5000:5000
    restart: on-failure
    depends_on:
      - postgres
    environment:
      JWT_SECRET: &#39;ZwfJtS3muY65CaeZ&#39; 
      PORT: 5000
      DB_USERNAME: peppermint
      DB_PASSWORD: 1234
      DB_HOST: &#39;postgres&#39;


&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions, issues and feature requests are welcome!&lt;br&gt;Feel free to check &lt;a href=&quot;https://github.com/Peppermint-Lab/Peppermint/issues&quot;&gt;issues page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Show your support&lt;/h2&gt; 
&lt;p&gt;Give a ‚≠êÔ∏è if this project helped you!&lt;/p&gt; 
&lt;h3&gt;Setting up postgres on Macos in a container for local development&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;docker run --rm -P -p 127.0.0.1:5432:5432 -e POSTGRES_PASSWORD=&quot;1234&quot; --name pg postgres:alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;One click installers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We are now on linode marketplace we can be viewed here &lt;a href=&quot;https://www.linode.com/marketplace/apps/peppermint-lab/peppermint/&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Environment Variables&lt;/h2&gt; 
&lt;p&gt;You can utilize the following environment variables in Peppermint. None of them are manditory.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PUID&lt;/td&gt; 
   &lt;td&gt;Set userid that the container will run as.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PGID&lt;/td&gt; 
   &lt;td&gt;Set groupid that the container will run as.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JWT_SECRET&lt;/td&gt; 
   &lt;td&gt;Keep your passwords and user logins secure with a JWT SECRET&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DB_USERNAME&lt;/td&gt; 
   &lt;td&gt;Enter database username here&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DB_PASSWORD&lt;/td&gt; 
   &lt;td&gt;Enter database password here&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PORT&lt;/td&gt; 
   &lt;td&gt;Choose a custom port to run the app on rather than the default 5000&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üíª Demo&lt;/h2&gt; 
&lt;p&gt;If you&#39;re interested in trying out Peppermint we currently have a demo working &lt;a href=&quot;https://demo.pmint.dev/&quot;&gt;here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The credentials are&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;email: admin@admin.com
password: 1234
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üí° &lt;strong&gt;Job Logging&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;üìú &lt;strong&gt;Client History&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;üíé &lt;strong&gt;Notes creation &amp;amp; Todo List&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;üìê &lt;strong&gt;Admin Page&lt;/strong&gt;: Admin Dashboard for easy webUI changes and analytics&lt;/li&gt; 
 &lt;li&gt;üì± &lt;strong&gt;Responsive&lt;/strong&gt;: Designed for variable screen sizes from mobile up to 4k&lt;/li&gt; 
 &lt;li&gt;‚öôÔ∏è &lt;strong&gt;Docker-Ready&lt;/strong&gt;: Quickly deploy using docker&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Usage&lt;/strong&gt;: No barriers to use with complete documentation on how to complete tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap for new features&lt;/h2&gt; 
&lt;p&gt;There is currently a trello roadmap available which is updated daily - &lt;a href=&quot;https://trello.com/b/tOMsptar/peppermint&quot;&gt;https://trello.com/b/tOMsptar/peppermint&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;We have started working on creating documentation for peppermint which covers development to general usage. Click &lt;a href=&quot;https://docs.peppermint.sh&quot;&gt;here&lt;/a&gt; to be taken directly there.&lt;/p&gt; 
&lt;h2&gt;Installing locally for development&lt;/h2&gt; 
&lt;p&gt;If you&#39;re interested in developing for Peppermint, wether that be a bug fix or locally we have a guide on our &lt;a href=&quot;https://docs.pmint.dev/contributions/&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Notes for ARM devices&lt;/h2&gt; 
&lt;p&gt;We currently have an image for arm devices but are seeing issues with mongoDB so we do not offically support 32 bit or 64 bit as of this time.&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;üë§ &lt;strong&gt;Jack Andrews&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href=&quot;https://pmint.dev/&quot;&gt;pmint.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/andrewsjack18&quot;&gt;@andrewsjack18 &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Github: &lt;a href=&quot;https://github.com/jwandrews99&quot;&gt;@potts99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;LinkedIn: &lt;a href=&quot;https://linkedin.com/in/jack-andrews-146852131&quot;&gt;@jack-andrews-146852131&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jgraph/drawio-desktop</title>
      <link>https://github.com/jgraph/drawio-desktop</link>
      <description>&lt;p&gt;Official electron build of diagrams.net&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;drawio-desktop&lt;/strong&gt; is a &lt;strong&gt;diagrams.net&lt;/strong&gt; desktop app based on &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;. draw.io is the old name for diagrams.net, we just don&#39;t want the hassle of changing all the binary&#39;s names.&lt;/p&gt; 
&lt;p&gt;Download built binaries from the &lt;a href=&quot;https://github.com/jgraph/drawio-desktop/releases&quot;&gt;releases section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.&lt;/p&gt; 
&lt;p&gt;No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;draw.io&lt;/strong&gt; is a git submodule of &lt;strong&gt;drawio-desktop&lt;/strong&gt;. To get both you need to clone recursively:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/jgraph/drawio-desktop.git&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To run this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the root directory of this repo)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the drawio directory of this repo &lt;code&gt;drawio/src/main/webapp&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;export DRAWIO_ENV=dev if you want to develop/debug in dev mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; runs the app.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To release:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Update the draw.io sub-module and push the change. Add version tag before pushing to origin.&lt;/li&gt; 
 &lt;li&gt;Wait for the builds to complete (&lt;a href=&quot;https://travis-ci.org/jgraph/drawio-desktop&quot;&gt;https://travis-ci.org/jgraph/drawio-desktop&lt;/a&gt; and &lt;a href=&quot;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&quot;&gt;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Go to &lt;a href=&quot;https://github.com/jgraph/drawio-desktop/releases&quot;&gt;https://github.com/jgraph/drawio-desktop/releases&lt;/a&gt;, edit the preview release.&lt;/li&gt; 
 &lt;li&gt;Download the windows exe and windows portable, sign them using &lt;code&gt;signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Re-upload signed file as &lt;code&gt;draw.io-windows-installer-x.y.z.exe&lt;/code&gt; and &lt;code&gt;draw.io-windows-no-installer-x.y.z.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add release notes&lt;/li&gt; 
 &lt;li&gt;Publish release&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>browserslist/browserslist</title>
      <link>https://github.com/browserslist/browserslist</link>
      <description>&lt;p&gt;ü¶î Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-preset-env&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Browserslist &lt;a href=&quot;https://cultofmartians.com/done.html&quot;&gt;&lt;img src=&quot;https://cultofmartians.com/assets/badges/badge.svg?sanitize=true&quot; alt=&quot;Cult Of Martians&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img width=&quot;120&quot; height=&quot;120&quot; alt=&quot;Browserslist logo by Anton Lovchikov&quot; src=&quot;https://browserslist.github.io/browserslist/logo.svg?sanitize=true&quot; align=&quot;right&quot;&gt;&lt;/p&gt; 
&lt;p&gt;The config to share target browsers and Node.js versions between different front-end tools. It is used in:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;Autoprefixer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-env&quot;&gt;Babel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonathantneal/postcss-preset-env&quot;&gt;postcss-preset-env&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amilajack/eslint-plugin-compat&quot;&gt;eslint-plugin-compat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ismay/stylelint-no-unsupported-browser-features&quot;&gt;stylelint-no-unsupported-browser-features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonathantneal/postcss-normalize&quot;&gt;postcss-normalize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ElemeFE/obsolete-webpack-plugin&quot;&gt;obsolete-webpack-plugin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All tools will find target browsers automatically, when&amp;nbsp;you&amp;nbsp;add&amp;nbsp;the&amp;nbsp;following to &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;browserslist&quot;: [
    &quot;defaults&quot;,
    &quot;not IE 11&quot;,
    &quot;maintained node versions&quot;
  ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in &lt;code&gt;.browserslistrc&lt;/code&gt; config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# Browsers that we support

defaults
not IE 11
maintained node versions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Developers set their version lists using queries like &lt;code&gt;last 2 versions&lt;/code&gt; to be free from updating versions manually. Browserslist&amp;nbsp;will&amp;nbsp;use &lt;a href=&quot;https://github.com/ben-eb/caniuse-lite&quot;&gt;&lt;code&gt;caniuse-lite&lt;/code&gt;&lt;/a&gt; with&amp;nbsp;&lt;a href=&quot;https://caniuse.com/&quot;&gt;Can I Use&lt;/a&gt; data for this queries.&lt;/p&gt; 
&lt;p&gt;Browserslist will take queries from tool option, &lt;code&gt;browserslist&lt;/code&gt; config, &lt;code&gt;.browserslistrc&lt;/code&gt; config, &lt;code&gt;browserslist&lt;/code&gt; section in&amp;nbsp;&lt;code&gt;package.json&lt;/code&gt; or&amp;nbsp;environment variables.&lt;/p&gt; 
&lt;a href=&quot;https://evilmartians.com/?utm_source=browserslist&quot;&gt; &lt;img src=&quot;https://evilmartians.com/badges/sponsored-by-evil-martians.svg?sanitize=true&quot; alt=&quot;Sponsored by Evil Martians&quot; width=&quot;236&quot; height=&quot;54&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#tools&quot;&gt;Tools&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#text-editors&quot;&gt;Text Editors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#best-practices&quot;&gt;Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#browsers-data-updating&quot;&gt;Browsers Data Updating&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#queries&quot;&gt;Queries&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#query-composition&quot;&gt;Query Composition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#full-list&quot;&gt;Full List&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#debug&quot;&gt;Debug&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#browsers&quot;&gt;Browsers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#config-file&quot;&gt;Config File&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#packagejson&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#browserslistrc&quot;&gt;&lt;code&gt;.browserslistrc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#shareable-configs&quot;&gt;Shareable Configs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#configuring-for-different-environments&quot;&gt;Configuring for Different Environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#custom-usage-data&quot;&gt;Custom Usage Data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#js-api&quot;&gt;JS API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#environment-variables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#cache&quot;&gt;Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#security-contact&quot;&gt;Security Contact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#for-enterprise&quot;&gt;For Enterprise&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://browserl.ist/&quot;&gt;&lt;code&gt;browserl.ist&lt;/code&gt;&lt;/a&gt; is an online tool to check what browsers will be selected by some query.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/browserslist/browserslist-ga&quot;&gt;&lt;code&gt;browserslist-ga&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/browserslist/browserslist-ga-export&quot;&gt;&lt;code&gt;browserslist-ga-export&lt;/code&gt;&lt;/a&gt; download your website browsers statistics to&amp;nbsp;use&amp;nbsp;it&amp;nbsp;in &lt;code&gt;&amp;gt; 0.5% in my stats&lt;/code&gt; query.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/browserslist/browserslist-useragent-regexp&quot;&gt;&lt;code&gt;browserslist-useragent-regexp&lt;/code&gt;&lt;/a&gt; compiles Browserslist query to a RegExp to test browser useragent.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/browserslist/browserslist-useragent-ruby&quot;&gt;&lt;code&gt;browserslist-useragent-ruby&lt;/code&gt;&lt;/a&gt; is a Ruby library to checks browser by user agent string to match Browserslist.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xeroxinteractive/browserslist-browserstack&quot;&gt;&lt;code&gt;browserslist-browserstack&lt;/code&gt;&lt;/a&gt; runs BrowserStack tests for all browsers in Browserslist config.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xeroxinteractive/browserslist-adobe-analytics&quot;&gt;&lt;code&gt;browserslist-adobe-analytics&lt;/code&gt;&lt;/a&gt; use Adobe Analytics data to target browsers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/syntactic-salt/browserslist-new-relic&quot;&gt;&lt;code&gt;browserslist-new-relic&lt;/code&gt;&lt;/a&gt; generate a custom usage data file for Browserslist from your New Relic Browser data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nyalab/caniuse-api&quot;&gt;&lt;code&gt;caniuse-api&lt;/code&gt;&lt;/a&gt; returns browsers which support some specific feature.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npx browserslist&lt;/code&gt; in your project directory to see project‚Äôs target browsers. This CLI tool is built-in and available in&amp;nbsp;any project with Autoprefixer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Text Editors&lt;/h3&gt; 
&lt;p&gt;These extensions will add syntax highlighting for &lt;code&gt;.browserslistrc&lt;/code&gt; files.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=webben.browserslist&quot;&gt;VS Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/browserslist/vim-browserslist&quot;&gt;Vim&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Best Practices&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;There is a &lt;code&gt;defaults&lt;/code&gt; query, which gives a reasonable configuration for most users:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;browserslist&quot;: [
    &quot;defaults&quot;
  ]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to change the default set of browsers, we recommend combining &lt;code&gt;last 2 versions&lt;/code&gt;, &lt;code&gt;not dead&lt;/code&gt; with a usage number like &lt;code&gt;&amp;gt; 0.2%&lt;/code&gt;. This is because &lt;code&gt;last n versions&lt;/code&gt; on its own does not add popular old versions, while only using a percentage above &lt;code&gt;0.2%&lt;/code&gt; will in the long run make popular browsers even more popular. We might run into a monopoly and stagnation situation, as we had with Internet Explorer 6. Please use this setting with caution.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select browsers directly (&lt;code&gt;last 2 Chrome versions&lt;/code&gt;) only if you are making a web app for a kiosk with one browser. There&amp;nbsp;are a lot of browsers on the market. If you are making general web app you should respect browsers diversity.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Don‚Äôt remove browsers just because you don‚Äôt know them. Opera Mini has 100 million users in Africa and it is more popular in the global market than Microsoft Edge. Chinese QQ Browsers has more market share than Firefox and desktop Safari combined.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Browsers Data Updating&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;npx browserslist@latest --update-db&lt;/code&gt; updates &lt;code&gt;caniuse-lite&lt;/code&gt; version in your npm, yarn or pnpm lock file.&lt;/p&gt; 
&lt;p&gt;You need to do it regularly for two reasons:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;To use the latest browser‚Äôs versions and statistics in queries like &lt;code&gt;last 2 versions&lt;/code&gt; or &lt;code&gt;&amp;gt;1%&lt;/code&gt;. For example, if you created your project 2 years ago and did not update your dependencies, &lt;code&gt;last 1 version&lt;/code&gt; will return 2 year old browsers.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;caniuse-lite&lt;/code&gt; deduplication: to synchronize version in different tools.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;What is deduplication?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Due to how npm architecture is setup, you may have a situation where you have multiple versions of a single dependency required.&lt;/p&gt; 
&lt;p&gt;Imagine you begin a project, and you add &lt;code&gt;autoprefixer&lt;/code&gt; as a dependency. npm looks for the latest &lt;code&gt;caniuse-lite&lt;/code&gt; version (1.0.30000700) and adds it to &lt;code&gt;package-lock.json&lt;/code&gt; under &lt;code&gt;autoprefixer&lt;/code&gt; dependencies.&lt;/p&gt; 
&lt;p&gt;A year later, you decide to add Babel. At this moment, we have a new version of &lt;code&gt;canuse-lite&lt;/code&gt; (1.0.30000900). npm took the latest version and added it to your lock file under &lt;code&gt;@babel/preset-env&lt;/code&gt; dependencies.&lt;/p&gt; 
&lt;p&gt;Now your lock file looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot;&gt;autoprefixer 7.1.4
  browserslist 3.1.1
    caniuse-lite 1.0.30000700
@babel/preset-env 7.10.0
  browserslist 4.13.0
    caniuse-lite 1.0.30000900
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see, we now have two versions of &lt;code&gt;caniuse-lite&lt;/code&gt; installed.&lt;/p&gt; 
&lt;h2&gt;Queries&lt;/h2&gt; 
&lt;p&gt;Browserslist will use browsers and Node.js versions query from one of these sources:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;browserslist&lt;/code&gt; key in &lt;code&gt;package.json&lt;/code&gt; file in current or parent directories. &lt;strong&gt;We recommend this way.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.browserslistrc&lt;/code&gt; config file in current or parent directories.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;browserslist&lt;/code&gt; config file in current or parent directories.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BROWSERSLIST&lt;/code&gt; environment variable.&lt;/li&gt; 
 &lt;li&gt;If the above methods did not produce a valid result Browserslist will use defaults: &lt;code&gt;&amp;gt; 0.5%, last 2 versions, Firefox ESR, not dead&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Query Composition&lt;/h3&gt; 
&lt;p&gt;An &lt;code&gt;or&lt;/code&gt; combiner can use the keyword &lt;code&gt;or&lt;/code&gt; as well as &lt;code&gt;,&lt;/code&gt;. &lt;code&gt;last 1 version or &amp;gt; 1%&lt;/code&gt; is equal to &lt;code&gt;last 1 version, &amp;gt; 1%&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;and&lt;/code&gt; query combinations are also supported to perform an intersection of all the previous queries: &lt;code&gt;last 1 version or chrome &amp;gt; 75 and &amp;gt; 1%&lt;/code&gt; will select (&lt;code&gt;browser last version&lt;/code&gt; or &lt;code&gt;Chrome since 76&lt;/code&gt;) and &lt;code&gt;more than 1% marketshare&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There are 3 different ways to combine queries as depicted below. First you start with a single query and then we combine the&amp;nbsp;queries to get our final list.&lt;/p&gt; 
&lt;p&gt;Obviously you can &lt;em&gt;not&lt;/em&gt; start with a &lt;code&gt;not&lt;/code&gt; combiner, since there is no left-hand side query to&amp;nbsp;combine&amp;nbsp;it&amp;nbsp;with. The left-hand is always resolved as &lt;code&gt;and&lt;/code&gt; combiner even if &lt;code&gt;or&lt;/code&gt; is used (this is an API implementation specificity).&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Query combiner type&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Illustration&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;or&lt;/code&gt;/&lt;code&gt;,&lt;/code&gt; combiner &lt;br&gt; (union)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/img/union.svg?sanitize=true&quot; alt=&quot;Union of queries&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;gt; .5% or last 2 versions&lt;/code&gt; &lt;br&gt; &lt;code&gt;&amp;gt; .5%, last 2 versions&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;and&lt;/code&gt; combiner &lt;br&gt; (intersection)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/img/intersection.svg?sanitize=true&quot; alt=&quot;intersection of queries&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;gt; .5% and last 2 versions&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;not&lt;/code&gt; combiner &lt;br&gt; (relative complement)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/img/complement.svg?sanitize=true&quot; alt=&quot;Relative complement of queries&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;All those three are equivalent to the first one &lt;br&gt; &lt;code&gt;&amp;gt; .5% and not last 2 versions&lt;/code&gt; &lt;br&gt; &lt;code&gt;&amp;gt; .5% or not last 2 versions&lt;/code&gt; &lt;br&gt; &lt;code&gt;&amp;gt; .5%, not last 2 versions&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;A quick way to test your query is to do &lt;code&gt;npx browserslist &#39;&amp;gt; 0.5%, not IE 11&#39;&lt;/code&gt; in your terminal.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Full List&lt;/h3&gt; 
&lt;p&gt;You can specify the browser and Node.js versions by queries (case insensitive):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;defaults&lt;/code&gt;: Browserslist‚Äôs default browsers (&lt;code&gt;&amp;gt; 0.5%, last 2 versions, Firefox ESR, not dead&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;By usage statistics: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;&amp;gt; 5%&lt;/code&gt;: browsers versions selected by global usage statistics. &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt; work too.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;gt; 5% in US&lt;/code&gt;: uses USA usage statistics. It accepts &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements&quot;&gt;two-letter country code&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;gt; 5% in alt-AS&lt;/code&gt;: uses Asia region usage statistics. List of all region codes can be found at &lt;a href=&quot;https://github.com/ben-eb/caniuse-lite/tree/master/data/regions&quot;&gt;&lt;code&gt;caniuse-lite/data/regions&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;gt; 5% in my stats&lt;/code&gt;: uses &lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#custom-usage-data&quot;&gt;custom usage data&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;gt; 5% in browserslist-config-mycompany stats&lt;/code&gt;: uses &lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#custom-usage-data&quot;&gt;custom usage data&lt;/a&gt; from &lt;code&gt;browserslist-config-mycompany/browserslist-stats.json&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cover 99.5%&lt;/code&gt;: most popular browsers that provide coverage.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cover 99.5% in US&lt;/code&gt;: same as above, with &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements&quot;&gt;two-letter country code&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cover 99.5% in my stats&lt;/code&gt;: uses &lt;a href=&quot;https://raw.githubusercontent.com/browserslist/browserslist/main/#custom-usage-data&quot;&gt;custom usage data&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Last versions: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;last 2 versions&lt;/code&gt;: the last 2 versions for &lt;em&gt;each&lt;/em&gt; browser.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;last 2 Chrome versions&lt;/code&gt;: the last 2 versions of Chrome browser.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;last 2 major versions&lt;/code&gt; or &lt;code&gt;last 2 iOS major versions&lt;/code&gt;: all minor/patch releases of last 2 major versions.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dead&lt;/code&gt;: browsers without official support or updates for 24 months. Right now it is &lt;code&gt;IE 10&lt;/code&gt;, &lt;code&gt;IE_Mob 11&lt;/code&gt;, &lt;code&gt;BlackBerry 10&lt;/code&gt;, &lt;code&gt;BlackBerry 7&lt;/code&gt;, &lt;code&gt;Samsung 4&lt;/code&gt; and &lt;code&gt;OperaMobile 12.1&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Node.js versions: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;node 10&lt;/code&gt; and &lt;code&gt;node 10.4&lt;/code&gt;: selects latest Node.js &lt;code&gt;10.x.x&lt;/code&gt; or &lt;code&gt;10.4.x&lt;/code&gt; release.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;current node&lt;/code&gt;: Node.js version used by Browserslist right now.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;maintained node versions&lt;/code&gt;: all Node.js versions, which are &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;still maintained&lt;/a&gt; by Node.js Foundation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Browsers versions: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;iOS 7&lt;/code&gt;: the iOS browser version 7 directly.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;Firefox &amp;gt; 20&lt;/code&gt;: versions of Firefox newer than 20. &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt; work too. It also works with Node.js.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ie 6-8&lt;/code&gt;: selects an inclusive range of versions.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;Firefox ESR&lt;/code&gt;: the latest &lt;a href=&quot;https://support.mozilla.org/en-US/kb/choosing-firefox-update-channel&quot;&gt;Firefox Extended Support Release&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PhantomJS 2.1&lt;/code&gt; and &lt;code&gt;PhantomJS 1.9&lt;/code&gt;: selects Safari versions similar to PhantomJS runtime.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;extends browserslist-config-mycompany&lt;/code&gt;: take queries from &lt;code&gt;browserslist-config-mycompany&lt;/code&gt; npm package.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;supports es6-module&lt;/code&gt;: browsers with support for specific features. &lt;code&gt;es6-module&lt;/code&gt; here is the &lt;code&gt;feat&lt;/code&gt; parameter at the URL of the &lt;a href=&quot;https://caniuse.com/&quot;&gt;Can I Use&lt;/a&gt; page. A list of all available features can be found at &lt;a href=&quot;https://github.com/ben-eb/caniuse-lite/tree/master/data/features&quot;&gt;&lt;code&gt;caniuse-lite/data/features&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;browserslist config&lt;/code&gt;: the browsers defined in Browserslist config. Useful in Differential Serving to modify user‚Äôs config like &lt;code&gt;browserslist config and supports es6-module&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;since 2015&lt;/code&gt; or &lt;code&gt;last 2 years&lt;/code&gt;: all versions released since year 2015 (also &lt;code&gt;since 2015-03&lt;/code&gt; and &lt;code&gt;since 2015-03-10&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unreleased versions&lt;/code&gt; or &lt;code&gt;unreleased Chrome versions&lt;/code&gt;: alpha and beta versions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;not ie &amp;lt;= 8&lt;/code&gt;: exclude IE 8 and lower from previous queries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can add &lt;code&gt;not &lt;/code&gt; to any query.&lt;/p&gt; 
&lt;h3&gt;Debug&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;npx browserslist&lt;/code&gt; in project directory to see what browsers was selected by your queries.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npx browserslist
and_chr 61
and_ff 56
and_qq 1.2
and_uc 11.4
android 56
baidu 7.12
bb 10
chrome 62
edge 16
firefox 56
ios_saf 11
opera 48
safari 11
samsung 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Browsers&lt;/h3&gt; 
&lt;p&gt;Names are case insensitive:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Android&lt;/code&gt; for Android WebView.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Baidu&lt;/code&gt; for Baidu Browser.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BlackBerry&lt;/code&gt; or &lt;code&gt;bb&lt;/code&gt; for Blackberry browser.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Chrome&lt;/code&gt; for Google Chrome.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ChromeAndroid&lt;/code&gt; or &lt;code&gt;and_chr&lt;/code&gt; for Chrome for Android&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Edge&lt;/code&gt; for Microsoft Edge.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Electron&lt;/code&gt; for Electron framework. It will be converted to Chrome version.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Explorer&lt;/code&gt; or &lt;code&gt;ie&lt;/code&gt; for Internet Explorer.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ExplorerMobile&lt;/code&gt; or &lt;code&gt;ie_mob&lt;/code&gt; for Internet Explorer Mobile.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Firefox&lt;/code&gt; or &lt;code&gt;ff&lt;/code&gt; for Mozilla Firefox.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FirefoxAndroid&lt;/code&gt; or &lt;code&gt;and_ff&lt;/code&gt; for Firefox for Android.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iOS&lt;/code&gt; or &lt;code&gt;ios_saf&lt;/code&gt; for iOS Safari.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Node&lt;/code&gt; for Node.js.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Opera&lt;/code&gt; for Opera.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OperaMini&lt;/code&gt; or &lt;code&gt;op_mini&lt;/code&gt; for Opera Mini.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OperaMobile&lt;/code&gt; or &lt;code&gt;op_mob&lt;/code&gt; for Opera Mobile.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;QQAndroid&lt;/code&gt; or &lt;code&gt;and_qq&lt;/code&gt; for QQ Browser for Android.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Safari&lt;/code&gt; for desktop Safari.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Samsung&lt;/code&gt; for Samsung Internet.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;UCAndroid&lt;/code&gt; or &lt;code&gt;and_uc&lt;/code&gt; for UC Browser for Android.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;kaios&lt;/code&gt; for KaiOS Browser.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Config File&lt;/h2&gt; 
&lt;h3&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to reduce config files in project root, you can specify browsers in &lt;code&gt;package.json&lt;/code&gt; with &lt;code&gt;browserslist&lt;/code&gt; key:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;private&quot;: true,
  &quot;dependencies&quot;: {
    &quot;autoprefixer&quot;: &quot;^6.5.4&quot;
  },
  &quot;browserslist&quot;: [
    &quot;last 1 version&quot;,
    &quot;&amp;gt; 1%&quot;,
    &quot;IE 10&quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;.browserslistrc&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Separated Browserslist config should be named &lt;code&gt;.browserslistrc&lt;/code&gt; and have browsers queries split by a new line. Each line is combined with the &lt;code&gt;or&lt;/code&gt; combiner. Comments&amp;nbsp;starts&amp;nbsp;with&amp;nbsp;&lt;code&gt;#&lt;/code&gt;&amp;nbsp;symbol:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# Browsers that we support

last 1 version
&amp;gt; 1%
IE 10 # sorry
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Browserslist will check config in every directory in &lt;code&gt;path&lt;/code&gt;. So, if tool process &lt;code&gt;app/styles/main.css&lt;/code&gt;, you can put config to root, &lt;code&gt;app/&lt;/code&gt; or &lt;code&gt;app/styles&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can specify direct path in &lt;code&gt;BROWSERSLIST_CONFIG&lt;/code&gt; environment variables.&lt;/p&gt; 
&lt;h2&gt;Shareable Configs&lt;/h2&gt; 
&lt;p&gt;You can use the following query to reference an exported Browserslist config from another package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;browserslist&quot;: [
    &quot;extends browserslist-config-mycompany&quot;
  ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For security reasons, external configuration only supports packages that have the &lt;code&gt;browserslist-config-&lt;/code&gt; prefix. npm scoped packages are also supported, by naming or prefixing the module with &lt;code&gt;@scope/browserslist-config&lt;/code&gt;, such as &lt;code&gt;@scope/browserslist-config&lt;/code&gt; or &lt;code&gt;@scope/browserslist-config-mycompany&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If&amp;nbsp;you&amp;nbsp;don‚Äôt&amp;nbsp;accept Browserslist queries from users, you can disable the validation by using the or &lt;code&gt;BROWSERSLIST_DANGEROUS_EXTEND&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;BROWSERSLIST_DANGEROUS_EXTEND=1 npx webpack
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Because this uses &lt;code&gt;npm&lt;/code&gt;&#39;s resolution, you can also reference specific files in a package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;browserslist&quot;: [
    &quot;extends browserslist-config-mycompany/desktop&quot;,
    &quot;extends browserslist-config-mycompany/mobile&quot;
  ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When writing a shared Browserslist package, just export an array. &lt;code&gt;browserslist-config-mycompany/index.js&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = [
  &#39;last 1 version&#39;,
  &#39;&amp;gt; 1%&#39;,
  &#39;ie 10&#39;
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also include a &lt;code&gt;browserslist-stats.json&lt;/code&gt; file as part of your shareable config at the root and query it using &lt;code&gt;&amp;gt; 5% in browserslist-config-mycompany stats&lt;/code&gt;. It uses the same format as &lt;code&gt;extends&lt;/code&gt; and the &lt;code&gt;dangerousExtend&lt;/code&gt; property as above.&lt;/p&gt; 
&lt;p&gt;You can export configs for different environments and select environment by &lt;code&gt;BROWSERSLIST_ENV&lt;/code&gt; or &lt;code&gt;env&lt;/code&gt; option in your tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = {
  development: [
    &#39;last 1 version&#39;
  ],
  production: [
    &#39;last 1 version&#39;,
    &#39;&amp;gt; 1%&#39;,
    &#39;ie 10&#39;
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuring for Different Environments&lt;/h2&gt; 
&lt;p&gt;You can also specify different browser queries for various environments. Browserslist will choose query according to&amp;nbsp;&lt;code&gt;BROWSERSLIST_ENV&lt;/code&gt; or &lt;code&gt;NODE_ENV&lt;/code&gt; variables. If none of them is declared, Browserslist will firstly look for &lt;code&gt;production&lt;/code&gt; queries and then use defaults.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  &quot;browserslist&quot;: {
    &quot;production&quot;: [
      &quot;&amp;gt; 1%&quot;,
      &quot;ie 10&quot;
    ],
    &quot;modern&quot;: [
      &quot;last 1 chrome version&quot;,
      &quot;last 1 firefox version&quot;
    ],
    &quot;ssr&quot;: [
      &quot;node 12&quot;
    ]
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;code&gt;.browserslistrc&lt;/code&gt; config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ini&quot;&gt;[production]
&amp;gt; 1%
ie 10

[modern]
last 1 chrome version
last 1 firefox version

[ssr]
node 12
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom Usage Data&lt;/h2&gt; 
&lt;p&gt;If you have a website, you can query against the usage statistics of your site. &lt;a href=&quot;https://github.com/browserslist/browserslist-ga&quot;&gt;&lt;code&gt;browserslist-ga&lt;/code&gt;&lt;/a&gt; will ask access to Google Analytics and then generate &lt;code&gt;browserslist-stats.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx browserslist-ga
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can use &lt;a href=&quot;https://github.com/browserslist/browserslist-ga-export&quot;&gt;&lt;code&gt;browserslist-ga-export&lt;/code&gt;&lt;/a&gt; to convert Google Analytics data without giving a password for Google account.&lt;/p&gt; 
&lt;p&gt;You can generate usage statistics file by any other method. File format should be like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &quot;ie&quot;: {
    &quot;6&quot;: 0.01,
    &quot;7&quot;: 0.4,
    &quot;8&quot;: 1.5
  },
  &quot;chrome&quot;: {
    ‚Ä¶
  },
  ‚Ä¶
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you can query against your custom usage data while also querying against global or regional data. For&amp;nbsp;example,&amp;nbsp;the query &lt;code&gt;&amp;gt; 1% in my stats, &amp;gt; 5% in US, 10%&lt;/code&gt; is permitted.&lt;/p&gt; 
&lt;h2&gt;JS API&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const browserslist = require(&#39;browserslist&#39;)

// Your CSS/JS build tool code
function process (source, opts) {
  const browsers = browserslist(opts.overrideBrowserslist, {
    stats: opts.stats,
    path:  opts.file,
    env:   opts.env
  })
  // Your code to add features for selected browsers
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Queries can be a string &lt;code&gt;&quot;&amp;gt; 1%, IE 10&quot;&lt;/code&gt; or an array &lt;code&gt;[&#39;&amp;gt; 1%&#39;, &#39;IE 10&#39;]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If a query is missing, Browserslist will look for a config file. You can provide a &lt;code&gt;path&lt;/code&gt; option (that&amp;nbsp;can&amp;nbsp;be&amp;nbsp;a&amp;nbsp;file) to&amp;nbsp;find&amp;nbsp;the&amp;nbsp;config&amp;nbsp;file relatively to it.&lt;/p&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: file or a directory path to look for config file. Default is &lt;code&gt;.&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;env&lt;/code&gt;: what environment section use from config. Default is &lt;code&gt;production&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stats&lt;/code&gt;: custom usage statistics data.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: path to config if you want to set it manually.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ignoreUnknownVersions&lt;/code&gt;: do not throw on direct query (like &lt;code&gt;ie 12&lt;/code&gt;). Default is &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dangerousExtend&lt;/code&gt;: Disable security checks for &lt;code&gt;extend&lt;/code&gt; query. Default is &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mobileToDesktop&lt;/code&gt;: Use desktop browsers if Can I Use doesn‚Äôt have data about this mobile version. For instance, Browserslist will return &lt;code&gt;chrome 20&lt;/code&gt; on &lt;code&gt;and_chr 20&lt;/code&gt; query (Can I Use has only data only about latest versions of mobile browsers). Default is &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For non-JS environment and debug purpose you can use CLI tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;browserslist &quot;&amp;gt; 1%, IE 10&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can get total users coverage for selected browsers by JS API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;browserslist.coverage(browserslist(&#39;&amp;gt; 1%&#39;))
//=&amp;gt; 81.4
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;browserslist.coverage(browserslist(&#39;&amp;gt; 1% in US&#39;), &#39;US&#39;)
//=&amp;gt; 83.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;browserslist.coverage(browserslist(&#39;&amp;gt; 1% in my stats&#39;), &#39;my stats&#39;)
//=&amp;gt; 83.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;browserslist.coverage(browserslist(&#39;&amp;gt; 1% in my stats&#39;, { stats }), stats)
//=&amp;gt; 82.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or by CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ browserslist --coverage &quot;&amp;gt; 1%&quot;
These browsers account for 81.4% of all users globally
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ browserslist --coverage=US &quot;&amp;gt; 1% in US&quot;
These browsers account for 83.1% of all users in the US
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ browserslist --coverage &quot;&amp;gt; 1% in my stats&quot;
These browsers account for 83.1% of all users in custom statistics
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ browserslist --coverage &quot;&amp;gt; 1% in my stats&quot; --stats=./stats.json
These browsers account for 83.1% of all users in custom statistics
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Environment Variables&lt;/h2&gt; 
&lt;p&gt;If a tool uses Browserslist inside, you can change the Browserslist settings with &lt;a href=&quot;https://en.wikipedia.org/wiki/Environment_variable&quot;&gt;environment variables&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST&lt;/code&gt; with browsers queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;BROWSERSLIST=&quot;&amp;gt; 5%&quot; npx webpack
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_CONFIG&lt;/code&gt; with path to config file.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;BROWSERSLIST_CONFIG=./config/browserslist npx webpack
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_ENV&lt;/code&gt; with environments string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;BROWSERSLIST_ENV=&quot;development&quot; npx webpack
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_STATS&lt;/code&gt; with path to the custom usage data for &lt;code&gt;&amp;gt; 1% in my stats&lt;/code&gt; query.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;BROWSERSLIST_STATS=./config/usage_data.json npx webpack
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_DISABLE_CACHE&lt;/code&gt; if you want to disable config reading cache.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;BROWSERSLIST_DISABLE_CACHE=1 npx webpack
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BROWSERSLIST_DANGEROUS_EXTEND&lt;/code&gt; to disable security shareable config name check.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;BROWSERSLIST_DANGEROUS_EXTEND=1 npx webpack
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Cache&lt;/h2&gt; 
&lt;p&gt;Browserslist caches the configuration it reads from &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;browserslist&lt;/code&gt; files, as well as knowledge about the existence of files, for the duration of the hosting process.&lt;/p&gt; 
&lt;p&gt;To clear these caches, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;browserslist.clearCaches()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To disable the caching altogether, set the &lt;code&gt;BROWSERSLIST_DISABLE_CACHE&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h2&gt;Security Contact&lt;/h2&gt; 
&lt;p&gt;To report a security vulnerability, please use the &lt;a href=&quot;https://tidelift.com/security&quot;&gt;Tidelift security contact&lt;/a&gt;. Tidelift will coordinate the fix and disclosure.&lt;/p&gt; 
&lt;h2&gt;For Enterprise&lt;/h2&gt; 
&lt;p&gt;Available as part of the Tidelift Subscription.&lt;/p&gt; 
&lt;p&gt;The maintainers of &lt;code&gt;browserslist&lt;/code&gt; and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href=&quot;https://tidelift.com/subscription/pkg/npm-browserslist?utm_source=npm-browserslist&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&amp;amp;utm_term=repo&quot;&gt;Learn more.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vuejs/vue</title>
      <link>https://github.com/vuejs/vue</link>
      <description>&lt;p&gt;üññ Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://vuejs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img width=&quot;100&quot; src=&quot;https://vuejs.org/images/logo.png&quot; alt=&quot;Vue logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://circleci.com/gh/vuejs/vue/tree/dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/github/vuejs/vue?branch=dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmcharts.com/compare/vue?minimal=true&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/vue.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vue&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue.svg?sanitize=true&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/vue&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/vue.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&quot; alt=&quot;Chat&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://app.saucelabs.com/builds/50f8372d79f743a3b25fb6ca4851ca4c&quot;&gt;&lt;img src=&quot;https://app.saucelabs.com/buildstatus/vuejs&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2 align=&quot;center&quot;&gt;Supporting Vue.js&lt;/h2&gt; 
&lt;p&gt;Vue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href=&quot;https://github.com/vuejs/vue/raw/dev/BACKERS.md&quot;&gt;backers&lt;/a&gt;. If you&#39;d like to join them, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/evanyou&quot;&gt;Become a backer or sponsor on Patreon&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/vuejs&quot;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/support-vuejs/#One-time-Donations&quot;&gt;One-time donation via PayPal or crypto-currencies&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What&#39;s the difference between Patreon and OpenCollective?&lt;/h4&gt; 
&lt;p&gt;Funds donated via Patreon go directly to support Evan You&#39;s full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.&lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Special Sponsors&lt;/h3&gt; 
&lt;!--special start--&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.dcloud.io/hbuilderx.html?hmsr=vue-en&amp;amp;hmpl=&amp;amp;hmcu=&amp;amp;hmkw=&amp;amp;hmci=&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;260px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/hbuilder.png&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!--special end--&gt; 
&lt;h3 align=&quot;center&quot;&gt;Platinum Sponsors&lt;/h3&gt; 
&lt;!--platinum start--&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://vueschool.io/?utm_source=Vuejs.org&amp;amp;utm_medium=Banner&amp;amp;utm_campaign=Sponsored%20Banner&amp;amp;utm_content=V1&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vueschool.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://vehikl.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vehikl.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://retool.com/?utm_source=sponsor&amp;amp;utm_campaign=vue&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/retool.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://passionatepeople.io/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/passionate_people.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.storyblok.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/storyblok.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://ionicframework.com/vue?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=vuesponsorship&amp;amp;utm_content=vuedocs&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/ionic.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://nuxtjs.org/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/nuxt.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.daskeyboard.com/?utm_source=vuejs&amp;amp;utm_medium=sponsorship&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/das_keyboard.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--platinum end--&gt; 
&lt;!--special-china start--&gt; 
&lt;h3 align=&quot;center&quot;&gt;Platinum Sponsors (China)&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.dcloud.io/?hmsr=vuejsorg&amp;amp;hmpl=&amp;amp;hmcu=&amp;amp;hmkw=&amp;amp;hmci=&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;177px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/dcloud.gif&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--special-china end--&gt; 
&lt;h3 align=&quot;center&quot;&gt;Gold Sponsors&lt;/h3&gt; 
&lt;!--gold start--&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.vuemastery.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vuemastery.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://laravel.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/laravel.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://htmlburger.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/html_burger.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.frontenddeveloperlove.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/frontendlove.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://neds.com.au/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/neds.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://icons8.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/icons_8.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://tidelift.com/subscription/npm/vue&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/tidelift.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.firesticktricks.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/firestick_tricks.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://intygrate.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/intygrate.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://en.shopware.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/shopware_ag.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.vpnranks.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vpnranks.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.bacancytechnology.com/hire-vuejs-developer&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/bacancy_technology.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.bestvpn.co/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/bestvpn_co.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.y8.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/y8.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://js.devexpress.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/devexpress.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://fastcoding.jp/javascript/ &quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/fastcoding_inc.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://usave.co.uk/utilities/broadband&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/usave.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://storekit.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/storekit.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.foo.software&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/foo.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://flatlogic.com/templates&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/flatlogic_templates.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.layer0.co&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/layer0.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://vpn-review.com/netflix-vpn&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vpn_review.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://cosmos.network/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/tendermint.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.okayhq.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/okay.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.vpsserver.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/vpsserver_com.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://aussiecasinohex.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/aussiecasinohex.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://litslink.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/litslink.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://newicon.net&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/newicon.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://lowdefy.com?k=w432&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/lowdefy.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://quickbookstoolhub.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/quickbooks_tool_hub.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://linecorp.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/line_corporation.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://exmax.it/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/exmax.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://plaid.co.jp/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/plaid__inc_.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://troypoint.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/troypoint.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://webreinvent.com?utm_source=vuejs.org&amp;amp;utm_medium=logo&amp;amp;utm_campaign=patreon-sponsors&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/webreinvent_technologies_pvt_ltd.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.dronahq.com/?ref=github_Vuejs&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;148px&quot; src=&quot;https://raw.githubusercontent.com/vuejs/vuejs.org/master/themes/vue/source/images/dronahq.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--gold end--&gt; 
&lt;h3 align=&quot;center&quot;&gt;Sponsors via &lt;a href=&quot;https://opencollective.com/vuejs&quot;&gt;Open Collective&lt;/a&gt;&lt;/h3&gt; 
&lt;h4 align=&quot;center&quot;&gt;Platinum&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/vuejs/tiers/platinum-sponsors/0/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/platinum-sponsors/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/platinum-sponsors/1/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/platinum-sponsors/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4 align=&quot;center&quot;&gt;Gold&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/0/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/0/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/1/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/1/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/2/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/2/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/3/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/3/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/4/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/4/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/5/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/5/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/6/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/6/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/7/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/7/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/8/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/8/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/9/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/9/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/10/website&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/tiers/gold-sponsors/10/avatar.svg?sanitize=true&quot; height=&quot;60px&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Vue (pronounced &lt;code&gt;/vjuÀê/&lt;/code&gt;, like view) is a &lt;strong&gt;progressive framework&lt;/strong&gt; for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.&lt;/p&gt; 
&lt;h4&gt;Browser Compatibility&lt;/h4&gt; 
&lt;p&gt;Vue.js supports all browsers that are &lt;a href=&quot;https://kangax.github.io/compat-table/es5/&quot;&gt;ES5-compliant&lt;/a&gt; (IE8 and below are not supported).&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-router&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-router.svg?sanitize=true&quot; alt=&quot;vue-router-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Single-page application routing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vuex&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vuex.svg?sanitize=true&quot; alt=&quot;vuex-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Large-scale state management&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;vue-cli&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/@vue/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@vue/cli.svg?sanitize=true&quot; alt=&quot;vue-cli-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Project scaffolding&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;vue-loader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-loader&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-loader.svg?sanitize=true&quot; alt=&quot;vue-loader-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Single File Component (&lt;code&gt;*.vue&lt;/code&gt; file) loader for webpack&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer&quot;&gt;vue-server-renderer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-server-renderer&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-server-renderer.svg?sanitize=true&quot; alt=&quot;vue-server-renderer-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Server-side rendering support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;vue-class-component&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-class-component&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-class-component.svg?sanitize=true&quot; alt=&quot;vue-class-component-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;TypeScript decorator for a class-based API&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-rx&quot;&gt;vue-rx&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://npmjs.com/package/vue-rx&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-rx.svg?sanitize=true&quot; alt=&quot;vue-rx-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RxJS integration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/v/nhdogjmejiglipccpnnnanhbledajbpd.svg?sanitize=true&quot; alt=&quot;vue-devtools-status&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Browser DevTools extension&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To check out &lt;a href=&quot;https://vuejs.org/v2/examples/&quot;&gt;live examples&lt;/a&gt; and docs, visit &lt;a href=&quot;https://vuejs.org&quot;&gt;vuejs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For questions and support please use &lt;a href=&quot;https://forum.vuejs.org&quot;&gt;the official forum&lt;/a&gt; or &lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;community chat&lt;/a&gt;. The issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/raw/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines&quot;&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&quot;https://github.com/vuejs/vue/releases&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay In Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/vuejs&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/the-vue-point&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejobs.com/?ref=vuejs&quot;&gt;Job Board&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/raw/dev/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to &lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already contributed to Vue!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/vuejs/contributors.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2013-present, Yuxi (Evan) You&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NervJS/taro</title>
      <link>https://github.com/NervJS/taro</link>
      <description>&lt;p&gt;ÂºÄÊîæÂºèË∑®Á´ØË∑®Ê°ÜÊû∂Ëß£ÂÜ≥ÊñπÊ°àÔºåÊîØÊåÅ‰ΩøÁî® React/Vue/Nerv Á≠âÊ°ÜÊû∂Êù•ÂºÄÂèëÂæÆ‰ø°/‰∫¨‰∏ú/ÁôæÂ∫¶/ÊîØ‰ªòÂÆù/Â≠óËäÇË∑≥Âä®/ QQ Â∞èÁ®ãÂ∫è/H5/React Native Á≠âÂ∫îÁî®„ÄÇ https://taro.zone/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Taro&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/node/v/@tarojs/cli.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@tarojs/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/@tarojs/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/NervJS/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/NervJS/taro.svg?style=flat-square&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/NervJS/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/NervJS/taro&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/NervJS/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/w/NervJS/taro&quot; alt=&quot;GitHub commit activity&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/NervJS/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-closed/NervJS/taro&quot; alt=&quot;GitHub closed issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/NervJS/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commits-since/NervJS/taro/latest/next&quot; alt=&quot;GitHub commits since latest release (by date)&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/NervJS/taro&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/NervJS/taro&quot; alt=&quot;GitHub Release Date&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NervJS/taro/next/README.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/NervJS/taro/next/README_EN.md&quot;&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üëΩ Taro[&#39;t…ë:ro ä]ÔºåÊ≥∞ÁΩó¬∑Â••ÁâπÊõºÔºåÂÆáÂÆôË≠¶Â§áÈòüÊÄªÊïôÂÆòÔºåÂÆûÂäõÊúÄÂº∫ÁöÑÂ••ÁâπÊõº„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ÁÆÄ‰ªã&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Taro&lt;/strong&gt; ÊòØ‰∏Ä‰∏™ÂºÄÊîæÂºèË∑®Á´ØË∑®Ê°ÜÊû∂Ëß£ÂÜ≥ÊñπÊ°àÔºåÊîØÊåÅ‰ΩøÁî® React/Vue/Nerv Á≠âÊ°ÜÊû∂Êù•ÂºÄÂèëÂæÆ‰ø°/‰∫¨‰∏ú/ÁôæÂ∫¶/ÊîØ‰ªòÂÆù/Â≠óËäÇË∑≥Âä®/ QQ Â∞èÁ®ãÂ∫è/H5 Á≠âÂ∫îÁî®„ÄÇÁé∞Â¶Ç‰ªäÂ∏ÇÈù¢‰∏äÁ´ØÁöÑÂΩ¢ÊÄÅÂ§öÁßçÂ§öÊ†∑ÔºåWeb„ÄÅReact Native„ÄÅÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁ≠âÂêÑÁßçÁ´ØÂ§ßË°åÂÖ∂ÈÅìÔºåÂΩì‰∏öÂä°Ë¶ÅÊ±ÇÂêåÊó∂Âú®‰∏çÂêåÁöÑÁ´ØÈÉΩË¶ÅÊ±ÇÊúâÊâÄË°®Áé∞ÁöÑÊó∂ÂÄôÔºåÈíàÂØπ‰∏çÂêåÁöÑÁ´ØÂéªÁºñÂÜôÂ§öÂ•ó‰ª£Á†ÅÁöÑÊàêÊú¨ÊòæÁÑ∂ÈùûÂ∏∏È´òÔºåËøôÊó∂ÂÄôÂè™ÁºñÂÜô‰∏ÄÂ•ó‰ª£Á†ÅÂ∞±ËÉΩÂ§üÈÄÇÈÖçÂà∞Â§öÁ´ØÁöÑËÉΩÂäõÂ∞±ÊòæÂæóÊûÅ‰∏∫ÈúÄË¶Å„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ÁâàÊú¨ËØ¥Êòé&lt;/h3&gt; 
&lt;p&gt;ÂΩìÂâç Taro Â∑≤ËøõÂÖ• 3.x Êó∂‰ª£ÔºåÁõ∏ËæÉ‰∫é Taro 1/2 ÈááÁî®‰∫ÜÈáçËøêË°åÊó∂ÁöÑÊû∂ÊûÑÔºåËÆ©ÂºÄÂèëËÄÖÂèØ‰ª•Ëé∑ÂæóÂÆåÊï¥ÁöÑ React/Vue Á≠âÊ°ÜÊû∂ÁöÑÂºÄÂèë‰ΩìÈ™åÔºåÂÖ∑‰ΩìËØ∑ÂèÇËÄÉ&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU3NDkzMTI3MA==&amp;amp;mid=2247483770&amp;amp;idx=1&amp;amp;sn=ba2cdea5256e1c4e7bb513aa4c837834&quot;&gt;„ÄäÂ∞èÁ®ãÂ∫èË∑®Ê°ÜÊû∂ÂºÄÂèëÁöÑÊé¢Á¥¢‰∏éÂÆûË∑µ„Äã&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†ÊÉ≥‰ΩøÁî® Taro 1/2ÔºåÂèØ‰ª•ËÆøÈóÆ&lt;a href=&quot;https://nervjs.github.io/taro/versions&quot;&gt;ÊñáÊ°£ÁâàÊú¨&lt;/a&gt;Ëé∑ÂæóÂ∏ÆÂä©„ÄÇ&lt;/p&gt; 
&lt;h2&gt;Â≠¶‰π†ËµÑÊ∫ê&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://taro-docs.jd.com/taro/docs/guide&quot;&gt;5 ÂàÜÈíü‰∏äÊâã Taro ÂºÄÂèë&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/awesome-taro&quot;&gt;awesome-taro&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ÊéòÈáëÂ∞èÂÜåÔºö&lt;a href=&quot;https://juejin.im/book/5b73a131f265da28065fb1cd?referrer=5ba228f16fb9a05d3251492d&quot;&gt;Taro Â§öÁ´ØÂºÄÂèëÂÆûÁé∞ÂéüÁêÜ‰∏éÂÆûÊàò&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Á§æÂå∫ÂÖ±‰∫´&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://taro-club.jd.com/&quot;&gt;Taro ‰∫§ÊµÅÁ§æÂå∫‚Äî‚ÄîËÆ©ÊØè‰∏ÄÊ¨°‰∫§ÊµÅÈÉΩË¢´Ê≤âÊ∑Ä&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://taro-ext.jd.com/&quot;&gt;Taro Áâ©ÊñôÂ∏ÇÂú∫‚Äî‚ÄîËÆ©ÊØè‰∏Ä‰∏™ËΩÆÂ≠ê‰∫ßÁîü‰ª∑ÂÄº&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;‰ΩøÁî®Ê°à‰æã&lt;/h2&gt; 
&lt;p&gt;Taro Â∑≤ÁªèÊäïÂÖ•‰∫ÜÊàë‰ª¨ÁöÑÁîü‰∫ßÁéØÂ¢É‰∏≠‰ΩøÁî®Ôºå‰∏öÁïå‰πüÂú®ÂπøÊ≥õÂú∞‰ΩøÁî® Taro ÂºÄÂèëÂ§öÁ´ØÂ∫îÁî®„ÄÇ&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://nervjs.github.io/taro-user-cases/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/NervJS/taro-user-cases/master/user-cases.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/244&quot;&gt;ÂæÅÈõÜÊõ¥Â§ö‰ºòÁßÄÊ°à‰æã&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Taro ÁâπÊÄß&lt;/h2&gt; 
&lt;h3&gt;Ê°ÜÊû∂ÊîØÊåÅ&lt;/h3&gt; 
&lt;h4&gt;React/Nerv ÊîØÊåÅ&lt;/h4&gt; 
&lt;p&gt;Âú® Taro 3 ‰∏≠ÂèØ‰ª•‰ΩøÁî®ÂÆåÊï¥ÁöÑ React/Nerv ÂºÄÂèë‰ΩìÈ™åÔºåÂÖ∑‰ΩìËØ∑ÂèÇËÄÉ&lt;a href=&quot;https://nervjs.github.io/taro/docs/react&quot;&gt;Âü∫Á°ÄÊïôÁ®ã‚Äî‚ÄîReact&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;‰ª£Á†ÅÁ§∫‰æã&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;
import { View, Text } from &#39;@tarojs/components&#39;

export default class Index extends Component {
  state = {
    msg: &#39;Hello WorldÔºÅ &#39;
  }
  componentWillUnmount () { }

  componentDidShow () { }

  componentDidHide () { }

  render () {
    return (
      &amp;lt;View className=&#39;index&#39;&amp;gt;
        &amp;lt;Text&amp;gt;{this.state.msg}&amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Vue ÊîØÊåÅ&lt;/h4&gt; 
&lt;p&gt;Âú® Taro 3 ‰∏≠ÂèØ‰ª•‰ΩøÁî®ÂÆåÊï¥ÁöÑ Vue ÂºÄÂèë‰ΩìÈ™åÔºåÂÖ∑‰ΩìËØ∑ÂèÇËÄÉ&lt;a href=&quot;https://nervjs.github.io/taro/docs/vue&quot;&gt;Âü∫Á°ÄÊïôÁ®ã‚Äî‚ÄîVue&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;‰ª£Á†ÅÁ§∫‰æã&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vue&quot;&gt;&amp;lt;template&amp;gt;
  &amp;lt;view class=&quot;index&quot;&amp;gt;
    &amp;lt;text&amp;gt;{{msg}}&amp;lt;/text&amp;gt;
  &amp;lt;/view&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
export default {
  data () {
    return {
      msg: &#39;Hello World!&#39;
    }
  },
  created () {},
  onShow () {},
  onHide () {}
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Â§öÁ´ØËΩ¨Êç¢ÊîØÊåÅ&lt;/h3&gt; 
&lt;p&gt;Taro ÊñπÊ°àÁöÑÂàùÂøÉÂ∞±ÊòØ‰∏∫‰∫ÜÊâìÈÄ†‰∏Ä‰∏™Â§öÁ´ØÂºÄÂèëÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇ&lt;/p&gt; 
&lt;p&gt;ÁõÆÂâç Taro 3 ÂèØ‰ª•ÊîØÊåÅËΩ¨Êç¢Âà∞ &lt;strong&gt;ÂæÆ‰ø°/‰∫¨‰∏ú/ÁôæÂ∫¶/ÊîØ‰ªòÂÆù/Â≠óËäÇË∑≥Âä®/QQ Â∞èÁ®ãÂ∫è&lt;/strong&gt; ‰ª•Âèä &lt;strong&gt;H5 Á´Ø&lt;/strong&gt;„ÄÇ&lt;/p&gt; 
&lt;h2&gt;Âä†ÂÖ•ÂÖ±Âª∫&lt;/h2&gt; 
&lt;h4&gt;Âä†ÂÖ• Taro Á§æÂå∫ÂÖ±Âª∫ÂÄ°ËÆÆ&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/4714&quot;&gt;Taro ÈÇÄ‰Ω†Âä†ÂÖ•Á§æÂå∫ÂÖ±Âª∫&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;‰∏∫ Taro Ë¥°ÁåÆ‰ª£Á†Å&lt;/h4&gt; 
&lt;p&gt;Taro ÈùûÂ∏∏Ê¨¢ËøéÁ§æÂå∫ÂºÄÂèëËÄÖ‰∏∫ Taro Ë¥°ÁåÆ‰ª£Á†ÅÔºåÂú®Ë¥°ÁåÆ‰πãÂâçËØ∑ÂÖàÈòÖËØª&lt;a href=&quot;https://nervjs.github.io/taro/docs/CONTRIBUTING.html&quot;&gt;Ë¥°ÁåÆÊåáÂçó&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†ÊÉ≥‰∏∫ Taro ÂÆûÁé∞‰∏Ä‰∏™ÈáçË¶ÅÂäüËÉΩÔºåÈúÄË¶ÅÂÖàÊí∞ÂÜô RFC ÊñáÊ°£ÔºåÊåâÁÖß Taro ÁöÑ&lt;a href=&quot;https://github.com/NervJS/taro-rfcs&quot;&gt;RFC Êú∫Âà∂&lt;/a&gt;ËøõË°åÊìç‰ΩúÔºåÂú®ÁªèËøáÁ§æÂå∫ËÆ®ËÆ∫ÂÆåÂñÑÂêéÊâçÂèØ‰ª•ËøõË°å‰ª£Á†ÅÁöÑÊèê‰∫§„ÄÇ&lt;/p&gt; 
&lt;h2&gt;ÈóÆÈ¢òÂèçÈ¶à‰∏éÂª∫ËÆÆ&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://nervjs.github.io/taro-issue-helper/&quot;&gt;Áªô Taro Êèê ISSUE&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Âº∫ÁÉàÊé®ËçêÈòÖËØª &lt;a href=&quot;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way&quot;&gt;„ÄäÊèêÈóÆÁöÑÊô∫ÊÖß„Äã&lt;/a&gt;„ÄÅ&lt;a href=&quot;https://github.com/seajs/seajs/issues/545&quot;&gt;„ÄäÂ¶Ç‰ΩïÂêëÂºÄÊ∫êÁ§æÂå∫ÊèêÈóÆÈ¢ò„Äã&lt;/a&gt; Âíå &lt;a href=&quot;http://www.chiark.greenend.org.uk/%7Esgtatham/bugs-cn.html&quot;&gt;„ÄäÂ¶Ç‰ΩïÊúâÊïàÂú∞Êä•Âëä Bug„Äã&lt;/a&gt;„ÄÅ&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25795393&quot;&gt;„ÄäÂ¶Ç‰ΩïÂêëÂºÄÊ∫êÈ°πÁõÆÊèê‰∫§Êó†Ê≥ïËß£Á≠îÁöÑÈóÆÈ¢ò„Äã&lt;/a&gt;ÔºåÊõ¥Â•ΩÁöÑÈóÆÈ¢òÊõ¥ÂÆπÊòìËé∑ÂæóÂ∏ÆÂä©„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://issuehunt.io/repos/128624453&quot;&gt;&lt;img src=&quot;https://issuehunt.io/static/embed/issuehunt-button-v1.svg?sanitize=true&quot; alt=&quot;Let&#39;s fund issues in this repository&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ÁâπÂà´È∏£Ë∞¢&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nanjingboy/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1390888?s=100&amp;amp;v=4&quot; alt=&quot;nanjingboy&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/js-newbee/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20449400?s=100&amp;amp;v=4&quot; alt=&quot;jsNewbee&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Qiyu8/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/15245051?s=100&amp;amp;v=4&quot; alt=&quot;Qiyu8&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Garfield550/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3471836?s=100&amp;amp;v=4&quot; alt=&quot;Garfield550&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nanjingboy/&quot;&gt;nanjingboy&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/js-newbee/&quot;&gt;jsNewbee&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Qiyu8/&quot;&gt;Qiyu8&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Garfield550/&quot;&gt;Garfield Lee&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Ë¥°ÁåÆËÄÖ‰ª¨&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/taro/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ÂºÄÂèëËÆ°Âàí&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/milestones&quot;&gt;Milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Êõ¥Êñ∞Êó•Âøó&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆÈÅµ‰ªé &lt;a href=&quot;https://gist.github.com/stephenparish/9941e89d80e2bc58a153&quot;&gt;Angular Style Commit Message Conventions&lt;/a&gt;ÔºåÊõ¥Êñ∞Êó•ÂøóËØ∑Êü•ÈòÖ &lt;a href=&quot;https://github.com/NervJS/taro/releases&quot;&gt;Release&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;h2&gt;ÂºÄÂèë‰∫§ÊµÅ&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/taro/issues/198&quot;&gt;ÂÆòÊñπ‰∫§ÊµÅÂæÆ‰ø°Áæ§&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;p&gt;Copyright (c) O2Team&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HyCore/ShulkerRoadCrypt</title>
      <link>https://github.com/HyCore/ShulkerRoadCrypt</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.imgur.com/wXp9xwZ.png&quot; height=&quot;50&quot; width=&quot;50&quot;&gt; ShulkerRoadCrypt‚Ñ¢ &lt;/h1&gt;
&lt;h3&gt;End-To-End File &amp;amp; Message Encryption For Discord, forked from DiscordCrypt&lt;/h3&gt;  
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ItVOlWd.png&quot; alt=&quot;Encrypted Message&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Discord message encryption plugin that enables client side end-to-end encryption for your messages and files with automatic key exchange, works without BetterDiscord.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;For &lt;code&gt;Chrome&lt;/code&gt; (and similar) &lt;a href=&quot;https://chrome.google.com/webstore/detail/shulkerroadcrypt/bgheoljmdcaomnakjefkdcpjeocgbgmo&quot;&gt;download the extension&lt;/a&gt; from Chrome Webstore &lt;br&gt; Or &lt;a href=&quot;https://github.com/HyCore/ShulkerRoadCrypt/archive/refs/heads/main.zip&quot;&gt;download the dev extension&lt;/a&gt; and unpack it. Click on &lt;strong&gt;Menu &amp;gt; More tools &amp;gt; Extensions&lt;/strong&gt;, enable &lt;strong&gt;Developer mode&lt;/strong&gt;, click on &lt;strong&gt;Load unpacked&lt;/strong&gt; and select the folder where you&#39;ve unpacked the downloaded file.&lt;br&gt; If you have &lt;code&gt;Discord installed&lt;/code&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/HyCore/ShulkerRoadCrypt/main/ShulkerRoadCrypt.ps1&quot;&gt;download the installer&lt;/a&gt;. Click the link and press &lt;strong&gt;Ctrl+S&lt;/strong&gt; to save it as file. Launch Powershell as administrator, enter this command: &lt;code&gt;Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass&lt;/code&gt; and enter the path to the file to execute it (i.e. &lt;code&gt;cd C:\Users\You\Downloads\ShulkerRoadCrypt.ps1&lt;/code&gt;).&lt;br&gt; For &lt;code&gt;mobile&lt;/code&gt; try &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.yandex.browser&quot;&gt;Yandex Browser&lt;/a&gt;. The browser is Chromium based and supports extensions.&lt;br&gt; For &lt;code&gt;Android&lt;/code&gt; install &lt;a href=&quot;https://auriane.eu/pages/img/SRDiscord.apk&quot;&gt;Discord APK&lt;/a&gt; and be sure to watch the tutorial. &lt;br&gt; Alternatively install it as &lt;a href=&quot;https://github.com/HyCore/ShulkerRoadCrypt/raw/main/ShulkerRoadCrypt.user.js&quot;&gt;userscript&lt;/a&gt; (with &lt;a href=&quot;https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo&quot;&gt;Tampermonkey&lt;/a&gt;) or include the js file somehow else.&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;supports Windows, MacOS and Linux.&lt;/li&gt; 
 &lt;li&gt;all messages in DMs, group DMs and channels can be configured to be end-to-end encrypted&lt;/li&gt; 
 &lt;li&gt;uses a dual encryption mode with multiple ciphers (defaults to AES-256 and Camellia-256)&lt;/li&gt; 
 &lt;li&gt;emojis (including animated) are supported even without Nitro&lt;/li&gt; 
 &lt;li&gt;encrypted and password protected database to store all keys&lt;/li&gt; 
 &lt;li&gt;ability to backup, restore and manage all key in the database&lt;/li&gt; 
 &lt;li&gt;strong and automatic key exchanges for DMs allowing you to easily secure sessions with your friends&lt;/li&gt; 
 &lt;li&gt;supports encrypted file uploads up to 50 MB which are automatically deleted after 7 days&lt;/li&gt; 
 &lt;li&gt;automatic updates that ensure having the latest features while staying secure&lt;/li&gt; 
 &lt;li&gt;blocks various known tracking elements used by Discord via SecureDiscord&lt;/li&gt; 
 &lt;li&gt;designed to provide the maximum security and privacy&lt;/li&gt; 
 &lt;li&gt;extensively tested for reliability and stability&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;How to use&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;Open the menu&lt;/code&gt; by right clicking on the &lt;strong&gt;lock icon&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Select&lt;/code&gt; the key you want to use in the drop down menu on top, next to the &lt;strong&gt;lock icon&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Toggle encryption&lt;/code&gt; by clicking the &lt;strong&gt;lock icon&lt;/strong&gt; or use the prefix &lt;code&gt;:ENC:&lt;/code&gt; or &lt;code&gt;ENC&lt;/code&gt; at the start of your message to force encryption. To send non encrypted messages in a channel where encryption is turned on, use the prefix &lt;code&gt;NOENC&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Download an encrypted image&lt;/code&gt; by middle clicking on the image.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Switch devices&lt;/code&gt; by exporting and importing your database. If you would like to use the plugin on multiple devices choose a main one, export the database (right click on &lt;strong&gt;lock icon &amp;gt; Export Database&lt;/strong&gt;), right click on the &lt;strong&gt;lock icon&lt;/strong&gt; (in on the secondary device) &lt;strong&gt;&amp;gt; New Database &amp;gt; Secondary&lt;/strong&gt;). Repeat this after adding new keys in your primary device.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ECDH P-521&lt;/code&gt; is used for the key exchange and &lt;code&gt;AES256-CBC&lt;/code&gt; for the messages offering the equivalent security of 256-bits&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitlab.com/leogx9r/DiscordCrypt&quot;&gt;Here&lt;/a&gt; you can find the original DiscordCrypt (discontinued).&lt;/p&gt; 
&lt;p&gt;If you have any questions come to my &lt;a href=&quot;https://discord.gg/kits&quot;&gt;Discord server&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Database&lt;/h1&gt; 
&lt;p&gt;The &lt;strong&gt;database password&lt;/strong&gt; is optional but the database isn&#39;t! The database stores your keys and channel settings.&lt;/p&gt; 
&lt;p&gt;It is recommended to have only one database, multiple databases will mess things up. In order to manage this, you should &lt;code&gt;keep backups&lt;/code&gt; by exporting your database regularly (right click on &lt;strong&gt;lock icon &amp;gt; Export Database&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;If you would like to use the plugin on multiple devices choose a main one, export the database from that and click on &lt;strong&gt;secondary&lt;/strong&gt; when importing. Repeat this after adding new keys.&lt;/p&gt; 
&lt;p&gt;If you import the database as secondary you can still export it and import it as primary database again. The difference is that a device with a secondary database will ignore key exchanges done on this device, which means you have to update your secondary devices with the new database.&lt;/p&gt; 
&lt;h5&gt;Cleaning the database&lt;/h5&gt; 
&lt;p&gt;&lt;sub&gt;You can paste these into the &lt;code&gt;Ctrl+Shift+I&lt;/code&gt; console (Sadly with last chrome update it became maybe deprecated)&lt;/sub&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;SdcClearChannels(filterFunc)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;deleteBefore = (now = new Date()).setMonth(now.getMonth() - 6);
SdcClearChannels((channel) =&amp;gt; (
    //Number(channel.lastseen) ms precision unix timestamp
    //String(channel.descriptor) descriptor from the channel manager
    //Boolean(channel.encrypted) is the encryption toggled on

    channel.lastseen &amp;lt; deleteBefore &amp;amp;&amp;amp; //not seen in 6 months
    /^DM with \d{17,20}$/.test(channel.descriptor) //name resolution failed

    //&#39;true&#39; return value deletes the record
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;SdcClearKeys(filterFunc)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;deleteBefore = (now = new Date()).setMonth(now.getMonth() - 6);
SdcClearKeys((key) =&amp;gt; (
    //Number(key.lastseen) ms precision unix timestamp
    //String(key.descriptor) descriptor from the key manager
    //Boolean(key.hidden) is the key hidden
    //String(key.type) one of [&#39;GROUP&#39;, &#39;CONVERSATION&#39;/*DM*/, &#39;PERSONAL&#39;]
    //Number(key.registered) when the key was added to the database

    key.lastseen &amp;lt; deleteBefore &amp;amp;&amp;amp; //not seen in 6 months
    /^(?:DM key with \d{17,20}|\d{17,20}&#39;s personal key)$/.test(key.descriptor)
    //name resolution failed if the id is used as name

    //&#39;true&#39; return value deletes the record
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h1&gt;Keys&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Keys&lt;/strong&gt; are used to encrypt messages. Additional to that there is &lt;strong&gt;database key&lt;/strong&gt; for encrypting the plugin&#39;s local database. You can &lt;code&gt;select&lt;/code&gt; which key to use for the channel at the top, besides the lock icon.&lt;/p&gt; 
&lt;h2&gt;Key Types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Personal key:&lt;/strong&gt; every user has a personal key (that is different for other users). It is used to encrypt messages in channels where are no other options available. It is shared with everyone you key-exchange with, so the security of it varies depending on the number of people you share it with.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Group key:&lt;/strong&gt; You can create a group key if you are in a group channel. Right click on the &lt;strong&gt;lock icon &amp;gt; Create Group Key&lt;/strong&gt;. It is advised to change the name of the key right away to spot if someone accidentally generated a different key for your channel. You can do this in the &lt;strong&gt;Key Manager&lt;/strong&gt;. After generating the group key, you can use it in other channels as well. If you set a group key in the &lt;strong&gt;Key Manager&lt;/strong&gt; as &lt;strong&gt;hidden&lt;/strong&gt; it will no longer show up in the drop down and it won&#39;t be automatically shared with your friends. If you really want to know if the other is using the same key as you, compare the first few characters (up to 16) of the encrypted message.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DM key:&lt;/strong&gt; These keys are generated by a Diffie-Hellman key exchange between two users, it provides a secure connection over an unsafe medium.&lt;br&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Key Exchanges&lt;/h1&gt; 
&lt;p&gt;If the plugin comes across a message with a key that you don&#39;t have it will attempt to get that key by a key exchange with the sender of the message. You need to be able to DM the other user for the key exchange.&lt;/p&gt; 
&lt;p&gt;If a group key isn&#39;t set as &lt;strong&gt;hidden&lt;/strong&gt; it will be shared automatically with a &lt;strong&gt;discord friend&lt;/strong&gt; if they ask for it. (key exchange)&lt;/p&gt; 
&lt;p&gt;In order to share a key you need to establish a secure connection with an initial key exchange, it is usually automatic or can be started manually by right clicking on the &lt;strong&gt;lock icon &amp;gt; Start Key Exchange&lt;/strong&gt; in the DM channel.&lt;/p&gt; 
&lt;p&gt;You can manually share keys by using the &lt;strong&gt;Share Keys&lt;/strong&gt; menu option. During a key share, the sharing party will suggest you channels to use so it&#39;s advised to &lt;strong&gt;not&lt;/strong&gt; set anything for the channel (or toggle encryption) before you have received the key for it.&lt;/p&gt; 
&lt;h1&gt;Key Rotation and Trusted Keys&lt;/h1&gt; 
&lt;p&gt;Key rotation periodically generates a new key and switches to it in all channels that use the rotated key. Use &lt;code&gt;SdcSetKeyRotation(7)&lt;/code&gt; in the console command to start a key rotation on the key of the current channel.&lt;/p&gt; 
&lt;p&gt;In the example above , the key changes every 7 days. By default this is aligned to arbitrary points so if you use the same command on your other primary devices (within a day, it will do the same). If the key is set to &lt;strong&gt;hidden&lt;/strong&gt;, the new key will be hidden too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Trusted Keys&lt;/strong&gt; can be enabled in the &lt;strong&gt;Key Visualizer&lt;/strong&gt; (in DM), this feature can be used to do &lt;strong&gt;automatic key exchange&lt;/strong&gt; for hidden keys and/or rotated keys.&lt;/p&gt; 
&lt;p&gt;Keys shared with &lt;code&gt;trusted keys&lt;/code&gt; can swap keys for channels automatically, which is &lt;strong&gt;useful for rotated keys&lt;/strong&gt;.&lt;/p&gt; 
&lt;h1&gt;Extras&lt;/h1&gt; 
&lt;p&gt;You can click on an already enlarged image to further enlarge it, you can also drag the enlarged image if it doesn&#39;t fit the screen. Use the &lt;strong&gt;arrow keys&lt;/strong&gt; to navigate like a gallery when zoomed in. You can use emojis (static and animated) in encrypted messages.&lt;/p&gt; 
&lt;p&gt;Encrypted messages above 1600 characters will be compressed, but this feature might have incompatibilities with future versions. This also means that the not encrypted messages can be 2000 character long if they are mostly made of normal characters. For large audio and video files, you can use &lt;a href=&quot;https://mega.io/&quot;&gt;Mega&lt;/a&gt;, it automatically embeds.&lt;/p&gt; 
&lt;p&gt;The encryption is completely secure unless someone at Discord replaces your messages right when you secure your DMs. To make sure you have the right keys, you can use the &lt;strong&gt;Key Visualizer&lt;/strong&gt; and compare your result with the other party.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Getting notifications on custom phrases&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;This feature should be a good compensation for no searches and role mentions. (You use the console to tell you what can ping you or not). Use the &lt;code&gt;SdcSetPingOn(regexStr)&lt;/code&gt; console command to set the match string or regular expressions (regex) for extra pings.&lt;/p&gt; 
 &lt;p&gt;For example &lt;code&gt;SdcSetPingOn(&#39;An0&#39;)&lt;/code&gt; will only ping if the message contains that &lt;strong&gt;exact word&lt;/strong&gt;, &lt;code&gt;SdcSetPingOn(/\bAn[0o]\b/i)&lt;/code&gt; will match &lt;strong&gt;every form of it&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Regex explanation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;/An0/&lt;/code&gt; only matches this exact expression&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;/An[0o]/&lt;/code&gt; will match &lt;code&gt;An0&lt;/code&gt; and &lt;code&gt;Ano&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;/An[0o]/i&lt;/code&gt; will be case insensitive, so it matches &lt;code&gt;ano&lt;/code&gt; and &lt;code&gt;ANO&lt;/code&gt; and everything in between`&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;\b&lt;/code&gt; means word border, which means &quot;start or end of word&quot;, so &lt;code&gt;/\bano\b/&lt;/code&gt; won&#39;t find a match in the word &#39;another&#39; (only works if you use letters, numbers or &#39;_&#39;) &lt;code&gt;/(?:An0|SimpleDiscordCrypt|SDC)/&lt;/code&gt; will match &lt;strong&gt;any of the three&lt;/strong&gt; smaller regexes between the &lt;code&gt;(?:)&lt;/code&gt; Please note that characters like &lt;code&gt;.\\+?*()[]$^&lt;/code&gt; etc. have a specific function in regex and should be escaped with &lt;code&gt;\&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;b&gt;Sample regex for role mentions:&lt;/b&gt; &lt;code&gt;/&amp;lt;@&amp;amp;(?:473998238156849152|474006463749160992)&amp;gt;/&lt;/code&gt; You can get the role ids with &lt;code&gt;\@Role&lt;/code&gt; in the chat&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;To uninstall, just delete it from %localappdata% and make new shortcuts.&lt;/p&gt; 
&lt;h1&gt;Credit&lt;/h1&gt; 
&lt;p&gt;Thanks to EnigmA_008#1505 for her help, she&#39;s an angel ! &lt;br&gt; ShulkerRoadCrypt by !!ExoRam!!#9430 forked from DiscordCrypt &amp;amp; SimpleDiscordCrypt&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/undici</title>
      <link>https://github.com/nodejs/undici</link>
      <description>&lt;p&gt;An HTTP/1.1 client, written from scratch for Node.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;undici&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/undici/actions/workflows/nodejs.yml&quot;&gt;&lt;img src=&quot;https://github.com/nodejs/undici/actions/workflows/nodejs.yml/badge.svg?sanitize=true&quot; alt=&quot;Node CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://standardjs.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat&quot; alt=&quot;js-standard-style&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/undici&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/undici.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/nodejs/undici&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/nodejs/undici/branch/main/graph/badge.svg?token=yZL6LtXkOA&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A HTTP/1.1 client, written from scratch for Node.js.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Undici means eleven in Italian. 1.1 -&amp;gt; 11 -&amp;gt; Eleven -&amp;gt; Undici. It is also a Stranger Things reference.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Have a question about using Undici? Open a &lt;a href=&quot;https://github.com/nodejs/undici/discussions/new&quot;&gt;Q&amp;amp;A Discussion&lt;/a&gt; or join our official OpenJS &lt;a href=&quot;https://openjs-foundation.slack.com/archives/C01QF9Q31QD&quot;&gt;Slack&lt;/a&gt; channel.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm i undici
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;The benchmark is a simple &lt;code&gt;hello world&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/benchmarks/benchmark.js&quot;&gt;example&lt;/a&gt; using a number of unix sockets (connections) with a pipelining depth of 10 running on Node 16. The benchmarks below have the &lt;a href=&quot;https://github.com/WebAssembly/simd&quot;&gt;simd&lt;/a&gt; feature enabled.&lt;/p&gt; 
&lt;h3&gt;Connections 1&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tests&lt;/th&gt; 
   &lt;th&gt;Samples&lt;/th&gt; 
   &lt;th&gt;Result&lt;/th&gt; 
   &lt;th&gt;Tolerance&lt;/th&gt; 
   &lt;th&gt;Difference with slowest&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;http - no keepalive&lt;/td&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;4.63 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.77 %&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;http - keepalive&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;4.81 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.16 %&lt;/td&gt; 
   &lt;td&gt;+ 3.94 %&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;undici - stream&lt;/td&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td&gt;62.22 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.67 %&lt;/td&gt; 
   &lt;td&gt;+ 1244.58 %&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;undici - dispatch&lt;/td&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;64.33 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.47 %&lt;/td&gt; 
   &lt;td&gt;+ 1290.24 %&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;undici - request&lt;/td&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;66.08 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.48 %&lt;/td&gt; 
   &lt;td&gt;+ 1327.88 %&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;undici - pipeline&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;66.13 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 1.39 %&lt;/td&gt; 
   &lt;td&gt;+ 1329.08 %&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Connections 50&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tests&lt;/th&gt; 
   &lt;th&gt;Samples&lt;/th&gt; 
   &lt;th&gt;Result&lt;/th&gt; 
   &lt;th&gt;Tolerance&lt;/th&gt; 
   &lt;th&gt;Difference with slowest&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;http - no keepalive&lt;/td&gt; 
   &lt;td&gt;50&lt;/td&gt; 
   &lt;td&gt;3546.49 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.90 %&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;http - keepalive&lt;/td&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;5692.67 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.48 %&lt;/td&gt; 
   &lt;td&gt;+ 60.52 %&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;undici - pipeline&lt;/td&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td&gt;8478.71 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.62 %&lt;/td&gt; 
   &lt;td&gt;+ 139.07 %&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;undici - request&lt;/td&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;9766.66 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.79 %&lt;/td&gt; 
   &lt;td&gt;+ 175.39 %&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;undici - stream&lt;/td&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;10109.74 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.94 %&lt;/td&gt; 
   &lt;td&gt;+ 185.06 %&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;undici - dispatch&lt;/td&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td&gt;10949.73 req/sec&lt;/td&gt; 
   &lt;td&gt;¬± 2.54 %&lt;/td&gt; 
   &lt;td&gt;+ 208.75 %&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { request } from &#39;undici&#39;

const {
  statusCode,
  headers,
  trailers,
  body
} = await request(&#39;http://localhost:3000/foo&#39;)

console.log(&#39;response received&#39;, statusCode)
console.log(&#39;headers&#39;, headers)

for await (const data of body) {
  console.log(&#39;data&#39;, data)
}

console.log(&#39;trailers&#39;, trailers)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;a href=&quot;https://fetch.spec.whatwg.org/#body-mixin&quot;&gt;the body mixin from the Fetch Standard&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { request } from &#39;undici&#39;

const {
  statusCode,
  headers,
  trailers,
  body
} = await request(&#39;http://localhost:3000/foo&#39;)

console.log(&#39;response received&#39;, statusCode)
console.log(&#39;headers&#39;, headers)
console.log(&#39;data&#39;, await body.json())
console.log(&#39;trailers&#39;, trailers)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Common API Methods&lt;/h2&gt; 
&lt;p&gt;This section documents our most commonly used API methods. Additional APIs are documented in their own files within the &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/&quot;&gt;docs&lt;/a&gt; folder and are accessible via the navigation list on the left side of the docs site.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.request([url, options]): Promise&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#parameter-requestoptions&quot;&gt;&lt;code&gt;RequestOptions&lt;/code&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcherdispatcher&quot;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt; &lt;code&gt;String&lt;/code&gt; - Default: &lt;code&gt;PUT&lt;/code&gt; if &lt;code&gt;options.body&lt;/code&gt;, otherwise &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;maxRedirections&lt;/strong&gt; &lt;code&gt;Integer&lt;/code&gt; - Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns a promise with the result of the &lt;code&gt;Dispatcher.request&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;Calls &lt;code&gt;options.dispatcher.request(options)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#dispatcherrequestoptions-callback&quot;&gt;Dispatcher.request&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.stream([url, options, ]factory): Promise&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#parameter-streamoptions&quot;&gt;&lt;code&gt;StreamOptions&lt;/code&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcherdispatcher&quot;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt; &lt;code&gt;String&lt;/code&gt; - Default: &lt;code&gt;PUT&lt;/code&gt; if &lt;code&gt;options.body&lt;/code&gt;, otherwise &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;maxRedirections&lt;/strong&gt; &lt;code&gt;Integer&lt;/code&gt; - Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;factory&lt;/strong&gt; &lt;code&gt;Dispatcher.stream.factory&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns a promise with the result of the &lt;code&gt;Dispatcher.stream&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;Calls &lt;code&gt;options.dispatcher.stream(options, factory)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#dispatcherstream&quot;&gt;Dispatcher.stream&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.pipeline([url, options, ]handler): Duplex&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#parameter-pipelineoptions&quot;&gt;&lt;code&gt;PipelineOptions&lt;/code&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcherdispatcher&quot;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt; &lt;code&gt;String&lt;/code&gt; - Default: &lt;code&gt;PUT&lt;/code&gt; if &lt;code&gt;options.body&lt;/code&gt;, otherwise &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;maxRedirections&lt;/strong&gt; &lt;code&gt;Integer&lt;/code&gt; - Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;handler&lt;/strong&gt; &lt;code&gt;Dispatcher.pipeline.handler&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns: &lt;code&gt;stream.Duplex&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Calls &lt;code&gt;options.dispatch.pipeline(options, handler)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#dispatcherpipeline&quot;&gt;Dispatcher.pipeline&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.connect([url, options]): Promise&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Starts two-way communications with the requested resource using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT&quot;&gt;HTTP CONNECT&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#parameter-connectoptions&quot;&gt;&lt;code&gt;ConnectOptions&lt;/code&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcherdispatcher&quot;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;maxRedirections&lt;/strong&gt; &lt;code&gt;Integer&lt;/code&gt; - Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;callback&lt;/strong&gt; &lt;code&gt;(err: Error | null, data: ConnectData | null) =&amp;gt; void&lt;/code&gt; (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns a promise with the result of the &lt;code&gt;Dispatcher.connect&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;Calls &lt;code&gt;options.dispatch.connect(options)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#dispatcherconnect&quot;&gt;Dispatcher.connect&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.fetch(input[, init]): Promise&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Implements &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;fetch&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;https://fetch.spec.whatwg.org/#fetch-method&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Only supported on Node 16+.&lt;/p&gt; 
&lt;p&gt;This is &lt;a href=&quot;https://nodejs.org/api/documentation.html#documentation_stability_index&quot;&gt;experimental&lt;/a&gt; and is not yet fully compliant with the Fetch Standard. We plan to ship breaking changes to this feature until it is out of experimental.&lt;/p&gt; 
&lt;h4&gt;Specification Compliance&lt;/h4&gt; 
&lt;p&gt;This section documents parts of the &lt;a href=&quot;https://fetch.spec.whatwg.org&quot;&gt;fetch specification&lt;/a&gt; which Undici does not support or does not fully implement.&lt;/p&gt; 
&lt;h5&gt;Garbage Collection&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fetch.spec.whatwg.org/#garbage-collection&quot;&gt;https://fetch.spec.whatwg.org/#garbage-collection&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The fetch specification allows users to skip consuming the response body by relying on garbage collection to release connection resources. Undici does the same. However, garbage collection in Node is less aggressive and deterministic (due to the lack of clear idle periods that browser have through the rendering refresh rate) which means that leaving the release of connection resources to the garbage collector can lead to excessive connection usage, reduced performance (due to less connection re-use), and even stalls or deadlocks when running out of connections. Therefore, it is highly recommended to always either consume or cancel the response body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Do
const headers = await fetch(url)
  .then(async res =&amp;gt; {
    for await (const chunk of res) {
      // force consumption of body
    }
    return res.headers
  })

// Do not
const headers = await fetch(url)
  .then(res =&amp;gt; res.headers)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;code&gt;undici.upgrade([url, options]): Promise&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Upgrade to a different protocol. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism&quot;&gt;MDN - HTTP - Protocol upgrade mechanism&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; &lt;code&gt;string | URL | UrlObject&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#parameter-upgradeoptions&quot;&gt;&lt;code&gt;UpgradeOptions&lt;/code&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;dispatcher&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt; - Default: &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/#undicigetglobaldispatcherdispatcher&quot;&gt;getGlobalDispatcher&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;maxRedirections&lt;/strong&gt; &lt;code&gt;Integer&lt;/code&gt; - Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;callback&lt;/strong&gt; &lt;code&gt;(error: Error | null, data: UpgradeData) =&amp;gt; void&lt;/code&gt; (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Returns a promise with the result of the &lt;code&gt;Dispatcher.upgrade&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;Calls &lt;code&gt;options.dispatcher.upgrade(options)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nodejs/undici/main/docs/api/Dispatcher.md#dispatcherupgradeoptions-callback&quot;&gt;Dispatcher.upgrade&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.setGlobalDispatcher(dispatcher)&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;dispatcher &lt;code&gt;Dispatcher&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sets the global dispatcher used by Common API Methods.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;undici.getGlobalDispatcher()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Gets the global dispatcher used by Common API Methods.&lt;/p&gt; 
&lt;p&gt;Returns: &lt;code&gt;Dispatcher&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;UrlObject&lt;/code&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;port&lt;/strong&gt; &lt;code&gt;string | number&lt;/code&gt; (optional)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;path&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;pathname&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;hostname&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;origin&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;search&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Specification Compliance&lt;/h2&gt; 
&lt;p&gt;This section documents parts of the HTTP/1.1 specification which Undici does not support or does not fully implement.&lt;/p&gt; 
&lt;h3&gt;Expect&lt;/h3&gt; 
&lt;p&gt;Undici does not support the &lt;code&gt;Expect&lt;/code&gt; request header field. The request body is always immediately sent and the &lt;code&gt;100 Continue&lt;/code&gt; response will be ignored.&lt;/p&gt; 
&lt;p&gt;Refs: &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-5.1.1&quot;&gt;https://tools.ietf.org/html/rfc7231#section-5.1.1&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Pipelining&lt;/h3&gt; 
&lt;p&gt;Undici will only use pipelining if configured with a &lt;code&gt;pipelining&lt;/code&gt; factor greater than &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Undici always assumes that connections are persistent and will immediately pipeline requests, without checking whether the connection is persistent. Hence, automatic fallback to HTTP/1.0 or HTTP/1.1 without pipelining is not supported.&lt;/p&gt; 
&lt;p&gt;Undici will immediately pipeline when retrying requests afters a failed connection. However, Undici will not retry the first remaining requests in the prior pipeline and instead error the corresponding callback/promise/stream.&lt;/p&gt; 
&lt;p&gt;Undici will abort all running requests in the pipeline when any of them are aborted.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Refs: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-8.1.2.2&quot;&gt;https://tools.ietf.org/html/rfc2616#section-8.1.2.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Refs: &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.3.2&quot;&gt;https://tools.ietf.org/html/rfc7230#section-6.3.2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Collaborators&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dnlup&quot;&gt;&lt;strong&gt;Daniele Belardi&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~dnlup&quot;&gt;https://www.npmjs.com/~dnlup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ethan-arrowood&quot;&gt;&lt;strong&gt;Ethan Arrowood&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~ethan_arrowood&quot;&gt;https://www.npmjs.com/~ethan_arrowood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcollina&quot;&gt;&lt;strong&gt;Matteo Collina&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~matteo.collina&quot;&gt;https://www.npmjs.com/~matteo.collina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronag&quot;&gt;&lt;strong&gt;Robert Nagy&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~ronag&quot;&gt;https://www.npmjs.com/~ronag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/szmarczak&quot;&gt;&lt;strong&gt;Szymon Marczak&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~szmarczak&quot;&gt;https://www.npmjs.com/~szmarczak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delvedor&quot;&gt;&lt;strong&gt;Tomas Della Vedova&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~delvedor&quot;&gt;https://www.npmjs.com/~delvedor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Releasers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ethan-arrowood&quot;&gt;&lt;strong&gt;Ethan Arrowood&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~ethan_arrowood&quot;&gt;https://www.npmjs.com/~ethan_arrowood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcollina&quot;&gt;&lt;strong&gt;Matteo Collina&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~matteo.collina&quot;&gt;https://www.npmjs.com/~matteo.collina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ronag&quot;&gt;&lt;strong&gt;Robert Nagy&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/~ronag&quot;&gt;https://www.npmjs.com/~ronag&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pmmmwh/react-refresh-webpack-plugin</title>
      <link>https://github.com/pmmmwh/react-refresh-webpack-plugin</link>
      <description>&lt;p&gt;A Webpack plugin to enable &quot;Fast Refresh&quot; (also previously known as Hot Reloading) for React components.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Refresh Webpack Plugin&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.circleci.com/pipelines/github/pmmmwh/react-refresh-webpack-plugin&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/pmmmwh/react-refresh-webpack-plugin/main&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/pmmmwh/react-refresh-webpack-plugin/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/pmmmwh/react-refresh-webpack-plugin&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@pmmmwh/react-refresh-webpack-plugin/v/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@pmmmwh/react-refresh-webpack-plugin/latest&quot; alt=&quot;Latest Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@pmmmwh/react-refresh-webpack-plugin/v/next&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@pmmmwh/react-refresh-webpack-plugin/next&quot; alt=&quot;Next Version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An &lt;strong&gt;EXPERIMENTAL&lt;/strong&gt; Webpack plugin to enable &quot;Fast Refresh&quot; (also known as &lt;em&gt;Hot Reloading&lt;/em&gt;) for React components.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This plugin is not 100% stable. We&#39;re hoping to land a v1 release soon - please help us by reporting any issues you&#39;ve encountered!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Ensure that you are using at least the minimum supported versions of this plugin&#39;s peer dependencies - older versions unfortunately do not contain code to orchestrate &quot;Fast Refresh&quot;, and thus cannot be made compatible.&lt;/p&gt; 
&lt;p&gt;We recommend using the following versions:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Dependency&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;react&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;16.13.0&lt;/code&gt;+ or &lt;code&gt;17.x&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;react-dom&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;16.13.0&lt;/code&gt;+ or &lt;code&gt;17.x&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;react-refresh&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0.10.0&lt;/code&gt;+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4.46.0&lt;/code&gt;+ or &lt;code&gt;5.2.0&lt;/code&gt;+&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;Minimum requirements&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Dependency&lt;/th&gt; 
    &lt;th&gt;Version&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;react&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;16.9.0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;react-dom&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;16.9.0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;react-refresh&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.10.0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;4.43.0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; Using custom renderers (e.g. &lt;code&gt;react-three-fiber&lt;/code&gt;, &lt;code&gt;react-pdf&lt;/code&gt;, &lt;code&gt;ink&lt;/code&gt;) &lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;To ensure full support of &quot;Fast Refresh&quot; with components rendered by custom renderers, you should ensure the renderer you&#39;re using depends on a recent version of &lt;code&gt;react-reconciler&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;We recommend version &lt;code&gt;0.25.0&lt;/code&gt; or above, but any versions above &lt;code&gt;0.22.0&lt;/code&gt; should work.&lt;/p&gt; 
 &lt;p&gt;If the renderer is not compatible, please file them an issue instead.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;With all prerequisites met, you can install this plugin using your package manager of choice:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# if you prefer npm
npm install -D @pmmmwh/react-refresh-webpack-plugin react-refresh

# if you prefer yarn
yarn add -D @pmmmwh/react-refresh-webpack-plugin react-refresh

# if you prefer pnpm
pnpm add -D @pmmmwh/react-refresh-webpack-plugin react-refresh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;react-refresh&lt;/code&gt; package (from the React team) is a required peer dependency of this plugin. We recommend using version &lt;code&gt;0.10.0&lt;/code&gt; or above.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Support for TypeScript&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;TypeScript support is available out-of-the-box for those who use &lt;code&gt;webpack.config.ts&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Our exported types however depends on &lt;code&gt;type-fest&lt;/code&gt;, so you&#39;ll have to add it as a &lt;code&gt;devDependency&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# if you prefer npm
npm install -D type-fest

# if you prefer yarn
yarn add -D type-fest

# if you prefer pnpm
pnpm add -D type-fest
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;For most setups, we recommend integrate using &lt;code&gt;babel-loader&lt;/code&gt;. It covers the most use cases and is officially supported by the React team.&lt;/p&gt; 
&lt;p&gt;The examples below will also assume you&#39;re using &lt;code&gt;webpack-dev-server&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you haven&#39;t done so, set up your development Webpack configuration for Hot Module Replacement (HMR).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const isDevelopment = process.env.NODE_ENV !== &#39;production&#39;;

module.exports = {
  mode: isDevelopment ? &#39;development&#39; : &#39;production&#39;,
  devServer: {
    hot: true,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Using &lt;code&gt;webpack-hot-middleware&lt;/code&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const webpack = require(&#39;webpack&#39;);

const isDevelopment = process.env.NODE_ENV !== &#39;production&#39;;

module.exports = {
  mode: isDevelopment ? &#39;development&#39; : &#39;production&#39;,
  plugins: [isDevelopment &amp;amp;&amp;amp; new webpack.HotModuleReplacementPlugin()].filter(Boolean),
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Using &lt;code&gt;webpack-plugin-serve&lt;/code&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { WebpackPluginServe } = require(&#39;webpack-plugin-serve&#39;);

const isDevelopment = process.env.NODE_ENV !== &#39;production&#39;;

module.exports = {
  mode: isDevelopment ? &#39;development&#39; : &#39;production&#39;,
  plugins: [isDevelopment &amp;amp;&amp;amp; new WebpackPluginServe()].filter(Boolean),
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;&lt;span&gt;üìù&lt;/span&gt; Note&lt;/strong&gt;: &lt;code&gt;webpack-plugin-serve&lt;/code&gt; officially only supports Webpack 4.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;p&gt;Then, add the &lt;code&gt;react-refresh/babel&lt;/code&gt; plugin to your Babel configuration and this plugin to your Webpack configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const ReactRefreshWebpackPlugin = require(&#39;@pmmmwh/react-refresh-webpack-plugin&#39;);

const isDevelopment = process.env.NODE_ENV !== &#39;production&#39;;

module.exports = {
  mode: isDevelopment ? &#39;development&#39; : &#39;production&#39;,
  module: {
    rules: [
      {
        test: /\.[jt]sx?$/,
        exclude: /node_modules/,
        use: [
          {
            loader: require.resolve(&#39;babel-loader&#39;),
            options: {
              plugins: [isDevelopment &amp;amp;&amp;amp; require.resolve(&#39;react-refresh/babel&#39;)].filter(Boolean),
            },
          },
        ],
      },
    ],
  },
  plugins: [isDevelopment &amp;amp;&amp;amp; new ReactRefreshWebpackPlugin()].filter(Boolean),
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;span&gt;üìù&lt;/span&gt; Note&lt;/strong&gt;:&lt;/p&gt; 
 &lt;p&gt;Even though both the Babel transform (&lt;code&gt;react-refresh/babel&lt;/code&gt;) and this plugin have optimisations to do nothing in &lt;code&gt;production&lt;/code&gt;, it is suggested to only have them both enabled in &lt;code&gt;development&lt;/code&gt; mode to prevent shipping any additional code accidentally.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;Using &lt;code&gt;ts-loader&lt;/code&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;&lt;span&gt;‚ö†&lt;/span&gt; Warning&lt;/strong&gt;: This is an un-official integration maintained by the community.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;Install &lt;a href=&quot;https://github.com/Jack-Works/react-refresh-transformer/tree/main/typescript&quot;&gt;&lt;code&gt;react-refresh-typescript&lt;/code&gt;&lt;/a&gt;. Ensure your TypeScript version is at least 4.0.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# if you prefer npm
npm install -D react-refresh-typescript

# if you prefer yarn
yarn add -D react-refresh-typescript

# if you prefer pnpm
pnpm add -D react-refresh-typescript
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then, instead of wiring up &lt;code&gt;react-refresh/babel&lt;/code&gt; via &lt;code&gt;babel-loader&lt;/code&gt;, you can wire-up &lt;code&gt;react-refresh-typescript&lt;/code&gt; with &lt;code&gt;ts-loader&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const ReactRefreshTypeScript = require(&#39;react-refresh-typescript&#39;);

const isDevelopment = process.env.NODE_ENV !== &#39;production&#39;;

module.exports = {
  module: {
    rules: [
      {
        test: /\.[jt]sx?$/,
        exclude: /node_modules/,
        use: [
          {
            loader: require.resolve(&#39;ts-loader&#39;),
            options: {
              getCustomTransformers: () =&amp;gt; ({
                before: [isDevelopment &amp;amp;&amp;amp; ReactRefreshTypeScript()].filter(Boolean),
              }),
              transpileOnly: isDevelopment,
            },
          },
        ],
      },
    ],
  },
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;code&gt;ts-loader&lt;/code&gt; won&#39;t work with HMR unless &lt;code&gt;transpileOnly&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. You should use &lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt; if you need typechecking during development.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Using &lt;code&gt;swc-loader&lt;/code&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;&lt;span&gt;‚ö†&lt;/span&gt; Warning&lt;/strong&gt;: This is an un-official integration maintained by the community.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;Ensure your &lt;code&gt;@swc/core&lt;/code&gt; version is at least &lt;code&gt;1.2.52&lt;/code&gt;. It is also recommended to use &lt;code&gt;swc-loader&lt;/code&gt; version &lt;code&gt;0.1.13&lt;/code&gt; or above.&lt;/p&gt; 
 &lt;p&gt;Then, instead of wiring up &lt;code&gt;react-refresh/babel&lt;/code&gt; via &lt;code&gt;babel-loader&lt;/code&gt;, you can wire-up &lt;code&gt;swc-loader&lt;/code&gt; and use the &lt;code&gt;refresh&lt;/code&gt; transform:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = {
  module: {
    rules: [
      {
        test: /\.[jt]sx?$/,
        exclude: /node_modules/,
        use: [
          {
            loader: require.resolve(&#39;swc-loader&#39;),
            options: {
              jsc: {
                transform: {
                  react: {
                    development: isDevelopment,
                    refresh: isDevelopment,
                  },
                },
              },
            },
          },
        ],
      },
    ],
  },
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Starting from version &lt;code&gt;0.1.13&lt;/code&gt;, &lt;code&gt;swc-loader&lt;/code&gt; will set the &lt;code&gt;development&lt;/code&gt; option based on Webpack&#39;s &lt;code&gt;mode&lt;/code&gt; option. &lt;code&gt;swc&lt;/code&gt; won&#39;t enable fast refresh when &lt;code&gt;development&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h3&gt;Overlay Integration&lt;/h3&gt; 
&lt;p&gt;This plugin integrates with the most common Webpack HMR solutions to surface errors during development - in the form of an error overlay.&lt;/p&gt; 
&lt;p&gt;By default, &lt;code&gt;webpack-dev-server&lt;/code&gt; is used, but you can set the &lt;a href=&quot;https://raw.githubusercontent.com/pmmmwh/react-refresh-webpack-plugin/main/docs/API.md#sockintegration&quot;&gt;&lt;code&gt;overlay.sockIntegration&lt;/code&gt;&lt;/a&gt; option to match what you&#39;re using.&lt;/p&gt; 
&lt;p&gt;The supported versions are as follows:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Dependency&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;wewbpack-dev-server&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;3.6.0&lt;/code&gt;+ or &lt;code&gt;4.x&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;webpack-hot-middleware&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2.x&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;webpack-plugin-serve&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0.x&lt;/code&gt; or &lt;code&gt;1.x&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/pmmmwh/react-refresh-webpack-plugin/main/docs/API.md&quot;&gt;the API docs&lt;/a&gt; for all available options.&lt;/p&gt; 
&lt;h2&gt;FAQs and Troubleshooting&lt;/h2&gt; 
&lt;p&gt;Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/pmmmwh/react-refresh-webpack-plugin/main/docs/TROUBLESHOOTING.md&quot;&gt;the Troubleshooting guide&lt;/a&gt; for FAQs and resolutions to common issues.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/pmmmwh/react-refresh-webpack-plugin/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;a href=&quot;https://jb.gg/OpenSource?from=ReactRefreshWebpackPlugin&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;JetBrains Logo&quot; src=&quot;https://user-images.githubusercontent.com/9338255/132110580-61d3dba5-f5c7-4479-bd8e-39cd65b42fc5.png&quot; width=&quot;120&quot;&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>jonasschmedtmann/complete-javascript-course</title>
      <link>https://github.com/jonasschmedtmann/complete-javascript-course</link>
      <description>&lt;p&gt;Starter files, final projects, and FAQ for my Complete JavaScript course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Course Material and FAQ for my Complete JavaScript Course&lt;/h1&gt; 
&lt;p&gt;This repo contains starter files and final code for all sections and projects contained in the course.&lt;/p&gt; 
&lt;p&gt;Use starter code to start each section, and &lt;strong&gt;final code to compare it with your own code whenever something doesn&#39;t work&lt;/strong&gt;!&lt;/p&gt; 
&lt;p&gt;üëá &lt;strong&gt;&lt;em&gt;Please read the following Frequently Asked Questions (FAQ) carefully before starting the course&lt;/em&gt;&lt;/strong&gt; üëá&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Q1: How do I download the files?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; If you&#39;re new to GitHub and just want to download the entire code, hit the green button saying &quot;Code&quot;, and then choose the &quot;Download ZIP&quot; option. If you can&#39;t see the button (on mobile), use &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/archive/master.zip&quot;&gt;this link&lt;/a&gt; instead.&lt;/p&gt; 
&lt;h3&gt;Q2: I&#39;m looking for the old course version (v1) files. Where can I find them?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; They are in this same repo, but in the &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1 branch&lt;/a&gt;. So just go to &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1&lt;/a&gt;, and download the code from there.&lt;/p&gt; 
&lt;h3&gt;Q3: I&#39;m stuck! Where do I get help?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Have you actually tried to fix the problem on your own? Have you compared your code to the final code? If you failed fixing your problem, please &lt;strong&gt;post a detailed description of the problem to the Q&amp;amp;A area of that video over at Udemy&lt;/strong&gt;, along with a &lt;a href=&quot;https://codepen.io/pen/&quot;&gt;codepen&lt;/a&gt; containing your code. You will get help there. Please don&#39;t send me a personal message or email to fix coding problems.&lt;/p&gt; 
&lt;h3&gt;Q4: What VSCode theme are you using?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; I use Monokai Pro for all my coding and course production. It&#39;s a paid theme (I&#39;, &lt;strong&gt;not&lt;/strong&gt; affiliated with them), but you can actually use the free demo version forever üòÖ&lt;/p&gt; 
&lt;h3&gt;Q5: Can I see a final version of the course projects?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Sure! Here you go:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pig-game-v2.netlify.app&quot;&gt;Pig Game&lt;/a&gt; (DOM Manipulation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist.netlify.app/&quot;&gt;Bankist&lt;/a&gt; (Arrays, Numbers, Dates, Timers. Fake &quot;log in&quot; with user &lt;code&gt;js&lt;/code&gt; and PIN &lt;code&gt;1111&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist-dom.netlify.app/&quot;&gt;Bankist Site&lt;/a&gt; (Advanced DOM and Events)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mapty.netlify.app/&quot;&gt;Mapty&lt;/a&gt; (OOP, Geolocation, Project planning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forkify-v2.netlify.app/&quot;&gt;forkify&lt;/a&gt; (Final advanced project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q6: Videos don&#39;t load, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Unfortunately, there is nothing I can do about it. The course is hosted on Udemy, and sometimes they have technical issues like this. Please just come back a bit later or &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact their support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q7: Videos are blurred / have low quality, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Please open video settings and change the quality from &#39;Auto&#39; to another value, for example 720p. If that doesn&#39;t help, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q8: Are the videos downloadable?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Yes! I made all videos downloadable from Udemy so you can learn even without an internet connection. To download a video, use the settings icon in the right bottom corner of the video player. Videos have to be downloaded individually.&lt;/p&gt; 
&lt;h3&gt;Q9: I want to put these projects in my portfolio. Is that allowed?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Absolutely! Just make sure you actually built them yourself by following the course, and that you understand what you did. What is &lt;strong&gt;not allowed&lt;/strong&gt; is that you create your own course/videos/articles based on this course&#39;s content!&lt;/p&gt; 
&lt;h3&gt;Q10: You mentioned your resources page. Where can I find it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; It&#39;s on my website at &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;http://codingheroes.io/resources&lt;/a&gt;. You can subscribe for updates üòâ&lt;/p&gt; 
&lt;h3&gt;Q11: I love your courses and want to get updates on new courses. How?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; First, you can subscribe to my email list &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;at my website&lt;/a&gt;. Plus, I make important announcements on twitter &lt;a href=&quot;https://twitter.com/jonasschmedtman&quot;&gt;@jonasschmedtman&lt;/a&gt;, so you should definitely follow me there üî•&lt;/p&gt; 
&lt;h3&gt;Q12: How do I get my certificate of completion?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; A certificate of completion is provided by Udemy after you complete 100% of the course. After completing the course, just click on the &quot;Your progress&quot; indicator in the top right-hand corner of the course page. If you want to change your name on the certificate, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q13: Can you add subtitles in my language?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No. I provide professional English captions, but Udemy is responsible for subtitles in all other languages (automatic translations). So please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt; to request your own language.&lt;/p&gt; 
&lt;h3&gt;Q14: Do you accept pull requests?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No, for the simple reason that I want this repository to contain the &lt;em&gt;exact&lt;/em&gt; same code that is shown in the videos. However, please feel free to add an issue if you found one.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HashLips/frontend_base_dapp</title>
      <link>https://github.com/HashLips/frontend_base_dapp</link>
      <description>&lt;p&gt;Base project for a dapp&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Base Dapp Frontend Layout&lt;/h1&gt; 
&lt;p&gt;A base project to start your dapp from.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AR-js-org/AR.js</title>
      <link>https://github.com/AR-js-org/AR.js</link>
      <description>&lt;p&gt;Image tracking, Location Based AR, Marker tracking. All on the Web.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AR.js - Augmented Reality on the Web&lt;/h1&gt; 
&lt;a href=&quot;https://xscode.com/nicolocarpignoli/AR.js&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AR-js-org/AR.js/master/AR-JS-banner.png&quot;&gt; &lt;/a&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/jeromeetienne/AR.js&quot;&gt;&lt;img src=&quot;https://travis-ci.org/jeromeetienne/AR.js.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/AR-js/Lobby&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/AR-js/Lobby.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/nicolocarp&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/nicolocarp.svg?style=plastic&amp;amp;label=nicolocarpignoli-twitter&amp;amp;style=plastic&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/jerome_etienne&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/jerome_etienne.svg?style=plastic&amp;amp;label=jeromeetienne-twitter&amp;amp;style=plastic&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;AR.js is a lightweight library for Augmented Reality on the Web, coming with features like Image Tracking, Location-based AR and Marker tracking.&lt;/p&gt; 
&lt;p&gt;Welcome to the official repository!&lt;/p&gt; 
&lt;p&gt;This project has been created by &lt;a href=&quot;https://github.com/jeromeetienne&quot;&gt;@jeromeetienne&lt;/a&gt;, previously managed by Nicol√≤ Carpignoli and it is now maintained by the AR.js org.&lt;/p&gt; 
&lt;p&gt;üöÄFor frequent updates on AR.js you can follow &lt;a href=&quot;https://twitter.com/ARjs_Library&quot;&gt;@the official Twitter account&lt;/a&gt; and Watch this repo!&lt;/p&gt; 
&lt;p&gt;Logo is courtesy of &lt;a href=&quot;https://twitter.com/viralinfo&quot;&gt; Simon Poulter &lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;You can get paid support and new features for AR.js. Check &lt;a href=&quot;https://xscode.com/nicolocarpignoli/AR.js&quot;&gt; this link. &lt;/a&gt;&lt;/h2&gt; 
&lt;hr&gt; 
&lt;h3&gt;‚ö°Ô∏èAR.js has now an official Documentation!‚ö°Ô∏è&lt;/h3&gt; 
&lt;h3&gt;Check it out: &lt;a href=&quot;https://ar-js-org.github.io/AR.js-Docs/&quot;&gt;AR.js Official Documentation&lt;/a&gt;.&lt;/h3&gt; 
&lt;p&gt;If you want to give a first look at AR.js potential, you can continue with this Readme.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;‚ö°Ô∏è AR.js is coming in two, different builds. They are both maintained. They are exclusive.&lt;/p&gt; 
&lt;p&gt;Please import the one you need for your project, not both:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AR.js with Image Tracking + Location Based AR:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;AFRAME version: &lt;a href=&quot;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js&quot;&gt;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;three.js version: &lt;a href=&quot;https://raw.githack.com/AR-js-org/AR.js/master/three.js/build/ar-nft.js&quot;&gt;https://raw.githack.com/AR-js-org/AR.js/master/three.js/build/ar-nft.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AR.js with Marker Tracking + Location Based AR:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;AFRAME version: &lt;a href=&quot;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js&quot;&gt;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;three.js version: &lt;a href=&quot;https://raw.githack.com/AR-js-org/AR.js/master/three.js/build/ar.js&quot;&gt;https://raw.githack.com/AR-js-org/AR.js/master/three.js/build/ar.js&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also import a specific version replacing &lt;code&gt;master&lt;/code&gt; keyword with version tag:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;  &amp;lt;script src=&quot;https://raw.githack.com/AR-js-org/AR.js/3.3.3/aframe/build/aframe-ar-nft.js&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;h3&gt;üñº &lt;strong&gt;Image Tracking&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Please follow these simple steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new project with the code below (or &lt;a href=&quot;https://ar-js-org.github.io/AR.js/aframe/examples/image-tracking/nft/&quot;&gt;open this live example&lt;/a&gt; and go directly to the last step)&lt;/li&gt; 
 &lt;li&gt;Run it on a server&lt;/li&gt; 
 &lt;li&gt;Open the website on your phone&lt;/li&gt; 
 &lt;li&gt;Scan &lt;a href=&quot;https://raw.githubusercontent.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex-image-big.jpeg&quot;&gt;this picture&lt;/a&gt; to see content through the camera.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/aframevr/aframe@1c2407b26c61958baa93967b5412487cd94b290b/dist/aframe-master.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
  .arjs-loader {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .arjs-loader div {
    text-align: center;
    font-size: 1.25em;
    color: white;
  }
&amp;lt;/style&amp;gt;

&amp;lt;body style=&quot;margin : 0px; overflow: hidden;&quot;&amp;gt;
  &amp;lt;!-- minimal loader shown until image descriptors are loaded --&amp;gt;
  &amp;lt;div class=&quot;arjs-loader&quot;&amp;gt;
    &amp;lt;div&amp;gt;Loading, please wait...&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;a-scene
    vr-mode-ui=&quot;enabled: false;&quot;
    renderer=&quot;logarithmicDepthBuffer: true;&quot;
    embedded
    arjs=&quot;trackingMethod: best; sourceType: webcam;debugUIEnabled: false;&quot;
  &amp;gt;
    &amp;lt;!-- we use cors proxy to avoid cross-origin problems ATTENTION! you need to set up your server --&amp;gt;
    &amp;lt;a-nft
      type=&quot;nft&quot;
      url=&quot;your-server/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/trex-image/trex&quot;
      smooth=&quot;true&quot;
      smoothCount=&quot;10&quot;
      smoothTolerance=&quot;.01&quot;
      smoothThreshold=&quot;5&quot;
    &amp;gt;
      &amp;lt;a-entity
        gltf-model=&quot;your-server/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf&quot;
        scale=&quot;5 5 5&quot;
        position=&quot;50 150 0&quot;
      &amp;gt;
      &amp;lt;/a-entity&amp;gt;
    &amp;lt;/a-nft&amp;gt;
    &amp;lt;a-entity camera&amp;gt;&amp;lt;/a-entity&amp;gt;
  &amp;lt;/a-scene&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üåçLocation Based Example&lt;/h3&gt; 
&lt;p&gt;Please follow these simple steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new project with the following snippet, and change &lt;code&gt;add-your-latitude&lt;/code&gt; and &lt;code&gt;add-your-longitude&lt;/code&gt; with your latitude and longitude, without the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Run it on a server&lt;/li&gt; 
 &lt;li&gt;Activate GPS on your phone and navigate to the example URL&lt;/li&gt; 
 &lt;li&gt;Look around. You should see the text looking at you, appearing in the requested position, even if you look around and move.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&amp;gt;
    &amp;lt;title&amp;gt;GeoAR.js demo&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;https://aframe.io/releases/1.0.4/aframe.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;https://unpkg.com/aframe-look-at-component@0.8.0/dist/aframe-look-at-component.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body style=&quot;margin: 0; overflow: hidden;&quot;&amp;gt;
    &amp;lt;a-scene
      vr-mode-ui=&quot;enabled: false&quot;
      embedded
      arjs=&quot;sourceType: webcam; debugUIEnabled: false;&quot;
    &amp;gt;
      &amp;lt;a-text
        value=&quot;This content will always face you.&quot;
        look-at=&quot;[gps-camera]&quot;
        scale=&quot;120 120 120&quot;
        gps-entity-place=&quot;latitude: &amp;lt;add-your-latitude&amp;gt;; longitude: &amp;lt;add-your-longitude&amp;gt;;&quot;
      &amp;gt;&amp;lt;/a-text&amp;gt;
      &amp;lt;a-camera gps-camera rotation-reader&amp;gt; &amp;lt;/a-camera&amp;gt;
    &amp;lt;/a-scene&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üî≤ Marker Based Example&lt;/h3&gt; 
&lt;p&gt;Please follow this simple steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new project with the code below (or &lt;a href=&quot;https://ar-js-org.github.io/AR.js/aframe/examples/marker-based/basic.html&quot;&gt;open this live example&lt;/a&gt; and go directly to the last step)&lt;/li&gt; 
 &lt;li&gt;Run it on a server&lt;/li&gt; 
 &lt;li&gt;Open the website on your phone&lt;/li&gt; 
 &lt;li&gt;Scan &lt;a href=&quot;https://raw.githubusercontent.com/AR-js-org/AR.js/master/data/images/hiro.png&quot;&gt;this picture&lt;/a&gt; to see content through the camera.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;script src=&quot;https://aframe.io/releases/1.0.0/aframe.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;!-- we import arjs version without NFT but with marker + location based support --&amp;gt;
    &amp;lt;script src=&quot;https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;body style=&quot;margin : 0px; overflow: hidden;&quot;&amp;gt;
        &amp;lt;a-scene embedded arjs&amp;gt;
        &amp;lt;a-marker preset=&quot;hiro&quot;&amp;gt;
            &amp;lt;!-- we use cors proxy to avoid cross-origin problems ATTENTION! you need to set up your server --&amp;gt;
            &amp;lt;a-entity
            position=&quot;0 -1 0&quot;
            scale=&quot;0.05 0.05 0.05&quot;
            gltf-model=&quot;your-server/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf&quot;
            &amp;gt;&amp;lt;/a-entity&amp;gt;
        &amp;lt;/a-marker&amp;gt;
        &amp;lt;a-entity camera&amp;gt;&amp;lt;/a-entity&amp;gt;
        &amp;lt;/a-scene&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Important! Be aware that if you are referring to external resources, in any app, especially those using NFT, you will encounter CORS problems if those resources are not in the same server of the code. If you can‚Äôt see the tracking, please open your Browser Dev Tools and check if you have CORS errors in the console. If so, you have to fix those errors in order to see your content. The correct fix is to place your resources on the same server of your code.&lt;/p&gt; 
&lt;p&gt;If you cannot do that, you can host a proxy anywhere server to solve that (&lt;a href=&quot;https://github.com/Rob--W/cors-anywhere&quot;&gt;https://github.com/Rob--W/cors-anywhere&lt;/a&gt;). Please note that several hosting services have policies that does not permit to use such server. Always check hosting services policies before using them to avoid account suspensions&lt;/p&gt; 
&lt;p&gt;Learn more on the &lt;a href=&quot;https://ar-js-org.github.io/AR.js-Docs/&quot;&gt;AR.js Official Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting, feature requests, community&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;You can find a lot of help on the old &lt;a href=&quot;https://github.com/jeromeetienne/AR.js/issues&quot;&gt;AR.js repositories issues&lt;/a&gt;. Please search on open/closed issues, you may find interesting stuff.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;From opening a bug report to creating a pull request: every contribution is appreciated and welcome. If you&#39;re planning to implement a new feature or change the api please create an issue first. This way we can ensure that your precious work is not in vain.&lt;/p&gt; 
&lt;h3&gt;Issues&lt;/h3&gt; 
&lt;p&gt;If you are having configuration or setup problems, please post a question to &lt;a href=&quot;https://stackoverflow.com/search?q=ar.js&quot;&gt;StackOverflow&lt;/a&gt;. You can also address the question to us in our &lt;a href=&quot;https://gitter.im/AR-js/Lobby&quot;&gt;Gitter chatroom&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you have discovered a bug or have a feature suggestion, feel free to create an issue on Github.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Submitting Changes&lt;/h3&gt; 
&lt;p&gt;After getting some feedback, push to your fork and submit a pull request. We may suggest some changes or improvements or alternatives, but for small changes your pull request should be accepted quickly.&lt;/p&gt; 
&lt;p&gt;Some things that will increase the chance that your pull request is accepted:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow the existing coding style&lt;/li&gt; 
 &lt;li&gt;Write a &lt;a href=&quot;http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&quot;&gt;good commit message&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;It is &lt;strong&gt;all open-source&lt;/strong&gt;! jsartoolkit5 is under LGPLv3 license and additional permission. And all my code in the AR.js repository is under MIT license. :)&lt;/p&gt; 
&lt;p&gt;For legal details, be sure to check &lt;a href=&quot;https://github.com/artoolkitx/jsartoolkit5/raw/master/LICENSE.txt&quot;&gt;jsartoolkit5 license&lt;/a&gt; and &lt;a href=&quot;https://github.com/AR-js-org/AR.js/raw/master/LICENSE&quot;&gt;AR.js license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Full Changelog: &lt;a href=&quot;https://github.com/AR-js-org/AR.js/raw/master/CHANGELOG.md&quot;&gt;AR.js changelog&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don‚Äôt support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can‚Äôt reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
  var c = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
console.log(c); // Prints 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ‡≤†_‡≤†
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt; &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It‚Äôs ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;functions--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it‚Äôs easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function‚Äôs definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it‚Äôs time to extract it to its own module! Don‚Äôt forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error‚Äôs call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--iife&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--in-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--note-on-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--arguments-shadow&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-rest&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-default-parameters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn‚Äôt mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--default-side-effects&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--defaults-last&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--constructor&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-spacing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn‚Äôt have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--mutate-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--reassign-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.13&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--spread-vs-apply&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.14&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs cleaner, you don‚Äôt need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-invocation-indentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--implicit-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--paren-wrap&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--one-arg-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It‚Äôs so long that we don‚Äôt want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It‚Äôs so long that we don‚Äôt want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--confusing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--implicit-arrow-linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--use-class&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--extends&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--chaining&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--tostring&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It‚Äôs okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--no-useless&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--no-duplicate-members&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--methods-use-this&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires using specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;modules--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let‚Äôs start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-wildcard&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-export-from-import&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-duplicate-imports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// ‚Ä¶ some other imports ‚Ä¶ //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-mutable-exports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--prefer-default-export&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--imports-first&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--multiline-imports-over-newlines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-webpack-loader-syntax&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--import-extensions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;iterators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don‚Äôt use iterators. Prefer JavaScript‚Äôs higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don‚Äôt use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don‚Äôt transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;properties--dot&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;properties--bracket&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es2016-properties--exponentiation-operator&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--one-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const-let-group&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--define-where-used&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-chain-assignment&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don‚Äôt chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--unary-increment-decrement&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-unused-vars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--about&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It‚Äôs important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn‚Äôt work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--anon-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--named-expresions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;hoisting--named-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--eqeqeq&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--if&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--shortcuts&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--moreinfo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--switch-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--nested-ternaries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--unneeded-ternary&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--no-mixed-operators&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer‚Äôs intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--cuddled-elses&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you‚Äôre using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block‚Äôs closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--no-else-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;control-statements&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;control-statement--value-selection&quot;&gt;&lt;/a&gt;&lt;a name=&quot;control-statements--value-selection&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comments--multiline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--singleline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it‚Äôs on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--actionitems&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you‚Äôre pointing out a problem that needs to be revisited, or if you‚Äôre suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--fixme&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn‚Äôt use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--todo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--spaces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
‚àô‚àô‚àô‚àôlet name;
}

// bad
function bar() {
‚àôlet name;
}

// good
function baz() {
‚àô‚àôlet name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--before-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--around-keywords&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--infix-ops&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--newline-at-end&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/raw/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;‚Üµ
‚Üµ
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;‚Üµ
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--chains&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
const svg = leds.enter().append(&#39;svg:svg&#39;);
svg.classed(&#39;led&#39;, true).attr(&#39;width&#39;, (radius + margin) * 2);
const g = svg.append(&#39;svg:g&#39;);
g.attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`).call(tron.led);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--after-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--padded-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-blanks&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-brackets&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--max-len&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--block-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--comma-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--computed-property-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--func-call-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--key-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-trailing-spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-empty-lines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;commas--leading-trailing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;commas--dangling&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don‚Äôt have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;semicolons--required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;20.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That‚Äôs impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That‚Äôs impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--explicit&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--strings&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn‚Äôt guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--numbers&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--comment-deviations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you‚Äôre doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--bitwise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--booleans&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;naming--descriptive&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--leading-underscore&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean ‚Äúprivate‚Äù, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won‚Äôt count as breaking, or that tests aren‚Äôt needed. tl;dr: if you want something to be ‚Äúprivate‚Äù, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--self-this&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don‚Äôt save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--filename-matches-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase-default-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function‚Äôs name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase-singleton&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--Acronyms-and-Initialisms&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--uppercase&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--not-required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--no-getters-setters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--boolean-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--consistent&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It‚Äôs okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;events--hash&quot;&gt;&lt;/a&gt;&lt;a name=&quot;24.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &quot;hash&quot;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--dollar-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--cache&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--queries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;http://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--find&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es5-compat--kangax&quot;&gt;&lt;/a&gt;&lt;a name=&quot;26.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;‚Äôs ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;ecmascript-6-styles&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es6-styles&quot;&gt;&lt;/a&gt;&lt;a name=&quot;27.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a name=&quot;tc39-proposals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isnan&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isfinite&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;testing--yup&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;testing--for-real&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it‚Äôs not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mob√¶k, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don‚Äôt Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AloPeyk&quot;&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/raw/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury‚Äôs Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team‚Äôs style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>microsoft/BotBuilder-Samples</title>
      <link>https://github.com/microsoft/BotBuilder-Samples</link>
      <description>&lt;p&gt;Welcome to the Bot Framework samples repository. Here you will find task-focused samples in C#, JavaScript and TypeScript to help you get started with the Bot Framework SDK!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/docs/media/BotFrameworkSamples_header.png&quot; alt=&quot;Bot Framework Samples&quot;&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/microsoft/botframework-sdk/raw/master/README.md&quot;&gt;Click here to find out what&#39;s new with Bot Framework&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This branch contains samples for the released version of the &lt;strong&gt;Microsoft Bot Framework V4 SDK&lt;/strong&gt; for &lt;a href=&quot;https://github.com/Microsoft/botbuilder-dotnet&quot;&gt;.NET&lt;/a&gt;, &lt;a href=&quot;https://github.com//microsoft/botbuilder-js&quot;&gt;JS&lt;/a&gt; and &lt;a href=&quot;https://github.com//microsoft/botbuilder-python&quot;&gt;Python&lt;/a&gt;. If you need samples for the Bot Framework &lt;em&gt;V3&lt;/em&gt; SDK, go &lt;a href=&quot;https://github.com/Microsoft/BotBuilder-Samples/tree/v3-sdk-samples&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting the samples&lt;/h2&gt; 
&lt;p&gt;To use the samples, clone this GitHub repository using Git.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;    git clone https://github.com/Microsoft/BotBuilder-Samples.git
    cd BotBuilder-Samples
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sample lists&lt;/h2&gt; 
&lt;p&gt;Samples are designed to illustrate functionality you&#39;ll need to implement to build great bots!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/#bot-essentials&quot;&gt;Bot essentials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/#advanced-bots&quot;&gt;Advanced bots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/#authentication-samples&quot;&gt;Authentication samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/#qna-maker-samples&quot;&gt;QnA Maker samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/#teams-samples&quot;&gt;Teams samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/#skills-samples&quot;&gt;Skills samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/#custom-adapter-samples&quot;&gt;Custom adapter samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/#experimental--preview-samples&quot;&gt;Experimental / preview samples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bot essentials&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Sample Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;JavaScript&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Python&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Java&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Echo bot&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to receive and send messages.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/02.echo-bot&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/02.echo-bot&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/typescript_nodejs/02.echo-bot&quot;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/02.echo-bot&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/02.echo-bot&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Welcome user&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Introduces activity types and provides a welcome message on conversation update activity.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/03.welcome-user&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/03.welcome-users&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/typescript_nodejs/03.welcome-users&quot;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/03.welcome-user&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/03.welcome-user&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Multi&amp;nbsp;turn&amp;nbsp;prompts&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to use waterfall dialog, prompts, and component dialog to create a simple interaction that asks the user for name, age, and prints back that information.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/05.multi-turn-prompt&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/05.multi-turn-prompt&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/typescript_nodejs/05.multi-turn-prompt&quot;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/05.multi-turn-prompt&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/05.multi-turn-prompt&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Using cards&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Introduces all card types including thumbnail, audio, media etc. Builds on Welcoming user + multi-prompt bot by presenting a card with buttons in welcome message that route to appropriate dialog.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/06.using-cards&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/06.using-cards&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/typescript_nodejs/06.using-cards&quot;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/06.using-cards&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/06.using-cards&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Adaptive cards&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how the multi-turn dialog can use a card to get user input for name and age.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/07.using-adaptive-cards&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/07.using-adaptive-cards&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/07.using-adaptive-cards&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/07.using-adaptive-cards&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;8&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Suggested actions&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to enable your bot to present buttons that the user can tap to provide input.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/08.suggested-actions&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/08.suggested-actions&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/08.suggested-actions&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/08.suggested-actions&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;13&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Core bot&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Core bot shows how to use cards, dialog, and Language Understanding (LUIS).&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/13.core-bot&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_webapi/13.core-bot&quot;&gt;.NET&amp;nbsp;Web&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/13.core-bot&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/typescript_nodejs/13.core-bot&quot;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/13.core-bot&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/13.core-bot&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;NLP with dispatch&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to dispatch across LUIS and QnA Maker.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/14.nlp-with-orchestrator&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/14.nlp-with-orchestrator&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/14.nlp-with-dispatch&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/14.nlp-with-dispatch&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;15&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Handling&amp;nbsp;attachments&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to listen for/handle user provided attachments.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/15.handling-attachments&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/15.handling-attachments&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/15.handling-attachments&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/15.handling-attachments&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;40&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;TIMEX resolution&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates various ways to parse and manipulate the TIMEX expressions you get from LUIS and the &lt;a href=&quot;https://github.com/Microsoft/recognizers-text&quot;&gt;DateTimeRecognizer&lt;/a&gt; used by the DateTimePrompt.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/40.timex-resolution&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/40.timex-resolution&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/40.timex-resolution&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/40.timex-resolution&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;43&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Complex dialogs&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates different ways for composing dialogs.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/43.complex-dialog&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/43.complex-dialog&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/43.complex-dialog&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/43.complex-dialog&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;45&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;State management&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to use state management and storage objects to manage and persist state.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/45.state-management&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/45.state-management&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/45.state-management&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/45.state-management&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Advanced bots&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Sample Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;JavaScript&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Python&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Java&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Console&amp;nbsp;echo&amp;nbsp;bot&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Introduces the concept of adapter and demonstrates a simple echo bot on console adapter and how to send a reply and access the incoming message.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/01.console-echo&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/01.console-echo&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/typescript_nodejs/01.console-echo&quot;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/01.console-echo&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Browser echo bot&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to host a bot in the browser using Web Chat and a custom Web Chat Adapter.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_es6/01.browser-echo&quot;&gt;ECMAScript&amp;nbsp;6&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;16&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Proactive&amp;nbsp;messages&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to send proactive messages to users.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/16.proactive-messages&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/16.proactive-messages&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/typescript_nodejs/16.proactive-messages&quot;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/16.proactive-messages&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/16.proactive-messages&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;17&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Multilingual bot&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Using translate middleware to support a multi-lingual bot. Demonstrates custom middleware.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/17.multilingual-bot&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/17.multilingual-bot&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/17.multilingual-bot&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/17.multilingual-bot&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;19&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Custom dialogs&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates complex conversation flow using the Dialogs library.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/19.custom-dialogs&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/19.custom-dialogs&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/19.custom-dialogs&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/19.custom-dialogs&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;21&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Application&amp;nbsp;Insights&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to add telemetry logging to your bot, storing telemetry within Application Insights.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/21.corebot-app-insights&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/21.corebot-app-insights&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/21.corebot-app-insights&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;23&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Facebook events&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Integrate and consume Facebook specific payloads, such as post-backs, quick replies and opt-in events.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/23.facebook-events&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/23.facebook-events&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/23.facebook-events&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/23.facebook-events&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;42&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Scale out&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how you can build your own state solution from the ground up that supports scaled out deployment with ETag based optimistic locking.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/42.scaleout&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/42.scaleout&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/42.scaleout&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;44&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Basic custom prompts&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to implement your own &lt;em&gt;basic&lt;/em&gt; prompts to ask the user for information.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/44.prompt-users-for-input&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/44.prompt-for-user-input&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/44.prompt-for-user-input&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/44.prompt-users-for-input&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;47&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Inspection&amp;nbsp;middleware&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to use middleware to allow the Bot Framework Emulator to debug traffic into and out of the bot in addition to looking at the current state of the bot.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/47.inspection&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/47.inspection&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/47.inspection&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/47.inspection&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;70&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Styling webchat&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;This sample shows how to create a web page with custom Web Chat component.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_es6/70.styling-webchat&quot;&gt;ECMAScript&amp;nbsp;6&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Authentication samples&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Sample Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;JavaScript&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Python&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Java&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;18&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;OAuth authentication&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Bot that demonstrates how to integrate OAuth providers.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/18.bot-authentication&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/18.bot-authentication&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/18.bot-authentication&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/18.bot-authentication&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;24&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;MSGraph&amp;nbsp;authentication&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates bot authentication capabilities of Azure Bot Service. Demonstrates utilizing the Microsoft Graph API to retrieve data about the user.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/24.bot-authentication-msgraph&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/24.bot-authentication-msgraph&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/24.bot-authentication-msgraph&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/24.bot-authentication-msgraph&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;46&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Teams authentication&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to use authentication for a bot running in Microsoft Teams.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/46.teams-auth&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/46.teams-auth&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/46.teams-auth&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/46.teams-auth&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;QnA Maker samples&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Sample Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;JavaScript&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Python&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Java&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;11&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;QnA Maker (simple)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to use QnA Maker to have simple single-turn conversations&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/11.qnamaker&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/11.qnamaker&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/11.qnamaker&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/11.qnamaker&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;49&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;QnA&amp;nbsp;Maker&amp;nbsp;(advanced)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to integrate Multiturn and Active learning in a QnA Maker bot. This also demonstrates the QnAMakerDialog class.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/49.qnamaker-all-features&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/49.qnamaker-all-features&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/49.qnamaker-all-features&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Teams samples&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Sample Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;JavaScript&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Python&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Java&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;25&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Message Reactions&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to create a simple bot that responds to Message Reactions&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/25.message-reaction&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/25.message-reaction&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/25.message-reaction&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;46&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Authentication&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to use authentication for a bot running in Microsoft Teams.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/46.teams-auth&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/46.teams-auth&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/46.teams-auth&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/46.teams-auth&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;50&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Messaging&amp;nbsp;extensions&amp;nbsp;- search&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A Messaging Extension that accepts search requests and returns results.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/50.teams-messaging-extensions-search&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/50.teams-messaging-extensions-search&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/50.teams-messaging-extensions-search&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/50.teams-messaging-extensions-search&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;51&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Messaging&amp;nbsp;extensions&amp;nbsp;- action&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A Messaging Extension that accepts parameters and returns a card. Also, how to receive a forwarded message as a parameter in a Messaging Extension.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/51.teams-messaging-extensions-action&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/51.teams-messaging-extensions-action&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/51.teams-messaging-extensions-action&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/51.teams-messaging-extensions-action&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;52&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Messaging&amp;nbsp;extensions&amp;nbsp;- auth and config&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A Messaging Extension that has a configuration page, accepts search requests and returns results after the user has signed in.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/52.teams-messaging-extensions-search-auth-config&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/52.teams-messaging-extensions-search-auth-config&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/52.teams-messaging-extensions-search-auth-config&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;53&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Messaging&amp;nbsp;extensions&amp;nbsp;- action preview&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to create a Preview and Edit flow for a Messaging Extension.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/53.teams-messaging-extensions-action-preview&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/53.teams-messaging-extensions-action-preview&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/53.teams-messaging-extensions-action-preview&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/53.teams-messaging-extensions-action-preview&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;54&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Task module&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to retrieve a Task Module, and values from cards in the Task Module, for a Messaging Extension.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/54.teams-task-module&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/54.teams-task-module&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/54.teams-task-module&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/54.teams-task-module&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;55&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Link unfurling&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A Messaging Extension that performs link unfurling.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/55.teams-link-unfurling&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/55.teams-link-unfurling&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/55.teams-link-unfurling&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/55.teams-link-unfurling&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;56&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;File upload&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates how to obtain file consent, and upload files to Teams from a bot. Also, how to receive a file sent to a bot.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/56.teams-file-upload&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/56.teams-file-upload&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/56.teams-file-upload&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/56.teams-file-upload&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;57&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Conversation bot&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates various features of bots on Teams: message all members in a Team or Channel, @mention a user from a bot, update previously sent messages, etc.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/57.teams-conversation-bot&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/57.teams-conversation-bot&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/57.teams-conversation-bot&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/57.teams-conversation-bot&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;58&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Start new thread in a channel&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates creating a new thread in a channel.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/58.teams-start-new-thread-in-channel&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/58.teams-start-new-thread-in-channel&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/58.teams-start-thread-in-channel&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/58.teams-start-new-thread-in-channel&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Custom adapter samples&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Sample Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;JavaScript&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Python&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Java&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;60&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Slack&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates the use of the custom adapter for Slack.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/60.slack-adapter&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/60.slack-adapter&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;61&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Facebook&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates the use of the custom adapter for Facebook.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/61.facebook-adapter&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;62&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Webex&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates the use of the custom adapter for Webex Teams.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/62.webex-adapter&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;63&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Twilio&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Demonstrates the use of the custom adapter for Twilio.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/63.twilio-adapter&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Skills samples&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Sample Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;JavaScript&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Python&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Java&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;80&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Skills&amp;nbsp;-&amp;nbsp;simple&amp;nbsp;bot&amp;nbsp;to&amp;nbsp;bot&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;This sample shows how to connect a skill to a skill consumer.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/80.skills-simple-bot-to-bot&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/80.skills-simple-bot-to-bot&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/80.skills-simple-bot-to-bot&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/80.skills-simple-bot-to-bot&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;81&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Skills - skill dialog&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;This sample shows how to connect a skill to a skill dialog consumer.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/csharp_dotnetcore/81.skills-skilldialog&quot;&gt;.NET&amp;nbsp;Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/javascript_nodejs/81.skills-skilldialog&quot;&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/python/81.skills-skilldialog&quot;&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/samples/java_springboot/81.skills-skilldialog&quot;&gt;Java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Experimental / preview samples&lt;/h3&gt; 
&lt;p&gt;A &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/BotBuilder-Samples/main/experimental&quot;&gt;collection of &lt;strong&gt;experimental&lt;/strong&gt; samples&lt;/a&gt; exist, intended to provide samples for features currently in preview or as a way to solicit feedback on a given design, approach, or technology being considered by the Bot Framework Team.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.microsoft.com&quot;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA. This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Reporting security issues&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) at &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the &lt;a href=&quot;https://technet.microsoft.com/en-us/security/dn606155&quot;&gt;MSRC PGP&lt;/a&gt; key, can be found in the &lt;a href=&quot;https://technet.microsoft.com/en-us/security/default&quot;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wix/Detox</title>
      <link>https://github.com/wix/Detox</link>
      <description>&lt;p&gt;Gray box end-to-end testing and automation framework for mobile apps&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Detox&quot; width=&quot;380&quot; src=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/img/DetoxLogo.png&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Detox &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;b&gt;Gray box end-to-end testing and automation library for mobile apps.&lt;/b&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Demo&quot; src=&quot;http://i.imgur.com/eoaDEYp.gif&quot;&gt; &lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1962469/89655670-1c235c80-d8d3-11ea-9320-0f865767ef5d.png&quot; alt=&quot;&quot; height=&quot;24&quot; width=&quot;1&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/detox&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/detox.svg?style=flat&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/detox&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/detox.svg?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://jenkins-oss.wixpress.com/job/multi-detox-master/&quot;&gt;&lt;img src=&quot;https://img.shields.io/jenkins/s/http/jenkins-oss.wixpress.com:8080/job/multi-detox-master.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/wix/Detox?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/wix/Detox/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;Detox is released under the MIT license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Guide.Contributing.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PR&#39;s welcome!&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/detoxe2e&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/detoxe2e?label=Follow&amp;amp;style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What Does a Detox Test Look Like?&lt;/h2&gt; 
&lt;p&gt;This is a test for a login screen, it runs on a device/simulator like an actual user:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;describe(&#39;Login flow&#39;, () =&amp;gt; {
    
  it(&#39;should login successfully&#39;, async () =&amp;gt; {
    await device.reloadReactNative();
    
    await element(by.id(&#39;email&#39;)).typeText(&#39;john@example.com&#39;);
    await element(by.id(&#39;password&#39;)).typeText(&#39;123456&#39;);
    await element(by.text(&#39;Login&#39;)).tap();
      
    await expect(element(by.text(&#39;Welcome&#39;))).toBeVisible();
    await expect(element(by.id(&#39;email&#39;))).toNotExist();
  });
  
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Introduction.GettingStarted.md&quot;&gt;Get started with Detox now!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;High velocity native mobile development requires us to adopt continuous integration workflows, which means our reliance on manual QA has to drop significantly. Detox tests your mobile app while it&#39;s running in a real device/simulator, interacting with it just like a real user.&lt;/p&gt; 
&lt;p&gt;The most difficult part of automated testing on mobile is the tip of the testing pyramid - E2E. The core problem with E2E tests is flakiness - tests are usually not deterministic. We believe the only way to tackle flakiness head on is by moving from black box testing to gray box testing. That&#39;s where Detox comes into play.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cross Platform:&lt;/strong&gt; Write cross-platform tests in JavaScript. Currently supports iOS and Android.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runs on Devices&lt;/strong&gt; (not yet supported on iOS): Gain confidence to ship by testing your app on a device/simulator just like a real user.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatically Synchronized:&lt;/strong&gt; Stops flakiness at the core by monitoring asynchronous operations in your app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Made For CI:&lt;/strong&gt; Execute your E2E tests on CI platforms like Travis without grief.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test Runner Independent:&lt;/strong&gt; Use Jest, Mocha, AVA, or any other JavaScript test runner you like (spoiler: we have our favorite).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Debuggable:&lt;/strong&gt; Modern async-await API allows breakpoints in asynchronous tests to work as expected.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Versions&lt;/h2&gt; 
&lt;h3&gt;Environment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OS&lt;/strong&gt;: macOS 10.15 (Catalina) or higher&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Xcode&lt;/strong&gt;: 11.0 or higher 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;iOS Simulator Runtime&lt;/strong&gt;: iOS 13.0 or higher&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React Native&lt;/h3&gt; 
&lt;p&gt;Detox is built from the ground up to support React Native projects as well as pure native ones.&lt;/p&gt; 
&lt;p&gt;The following React Native versions have been tested:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;iOS&lt;/th&gt; 
   &lt;th&gt;Android&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚â§0.64.x&lt;/td&gt; 
   &lt;td&gt;‚â•0.59, ‚â§0.64 - Visibility edge-case: see this &lt;a href=&quot;https://github.com/facebook/react-native/issues/23870&quot;&gt;RN issue&lt;/a&gt;*&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Future versions are most likely supported, but have not been tested yet. Please open issues if you find specific issues with newer React Native versions.&lt;/p&gt; 
&lt;h2&gt;Get Started with Detox!&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Introduction.GettingStarted.md&quot;&gt;Getting Started Guide&lt;/a&gt; to get Detox running on your app in less than 10 minutes.&lt;/p&gt; 
&lt;h2&gt;Documents Directory&lt;/h2&gt; 
&lt;p&gt;Explore further about using Detox from the &lt;a href=&quot;https://github.com/wix/Detox/tree/master/docs&quot;&gt;documents directory&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Core Principles&lt;/h2&gt; 
&lt;p&gt;We believe that the only way to address the core difficulties with mobile end-to-end testing is by rethinking some of the principles of the entire approach. See what Detox &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Introduction.DesignPrinciples.md&quot;&gt;does differently&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Detox&lt;/h2&gt; 
&lt;p&gt;Detox has been open-source from the first commit. If you&#39;re interested in helping out with our roadmap, please see issues tagged with the &lt;a href=&quot;https://github.com/wix/detox/labels/user%3A%20looking%20for%20contributors&quot;&gt;&lt;img src=&quot;https://placehold.it/15/c4532d/000000?text=+&quot; alt=&quot; &quot;&gt; looking for contributors&lt;/a&gt; label. If you have encountered a bug or would like to suggest a new feature, please open an issue.&lt;/p&gt; 
&lt;p&gt;Dive into Detox core by reading the &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/Guide.Contributing.md&quot;&gt;Detox Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Detox is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-English Resources (Community)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/quia-digital/iniciando-com-detox-framework-1-4-ce31ad7ae812&quot;&gt;Getting Started (Brazilian Portuguese)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jwagner/smartcrop.js</title>
      <link>https://github.com/jwagner/smartcrop.js</link>
      <description>&lt;p&gt;Content aware image cropping&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;smartcrop.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/jwagner/smartcrop.js&quot;&gt;&lt;img src=&quot;https://travis-ci.org/jwagner/smartcrop.js.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://29a.ch/sandbox/2014/smartcrop/example.jpg&quot; alt=&quot;Example&quot;&gt; Image: &lt;a href=&quot;https://www.flickr.com/photos/endogamia/5682480447&quot;&gt;https://www.flickr.com/photos/endogamia/5682480447/&lt;/a&gt; by N. Feans&lt;/p&gt; 
&lt;h2&gt;Demos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://29a.ch/sandbox/2014/smartcrop/examples/testsuite.html&quot;&gt;Smartcrop.js Test Suite&lt;/a&gt;, contains over 100 images, &lt;strong&gt;heavy&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://29a.ch/sandbox/2014/smartcrop/examples/testbed.html&quot;&gt;Smartcrop.js Test Bed&lt;/a&gt;, allows you to test smartcrop with your own images and different face detection libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://29a.ch/sandbox/2014/smartcrop/examples/slideshow.html&quot;&gt;Automatic Photo transitions&lt;/a&gt;, automatically creates Ken Burns transitions for a slide show.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Simple Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// you pass in an image as well as the width &amp;amp; height of the crop you
// want to optimize.
smartcrop.crop(image, { width: 100, height: 100 }).then(function(result) {
  console.log(result);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// smartcrop will output you its best guess for a crop
// you can now use this data to crop the image.
{topCrop: {x: 300, y: 200, height: 200, width: 200}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Download/ Installation&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;npm install smartcrop&lt;/code&gt; or just download &lt;a href=&quot;https://raw.githubusercontent.com/jwagner/smartcrop.js/master/smartcrop.js&quot;&gt;smartcrop.js&lt;/a&gt; from the git repository.&lt;/p&gt; 
&lt;p&gt;Smarcrop requires support for &lt;a href=&quot;http://caniuse.com/#feat=promises&quot;&gt;Promises&lt;/a&gt;, use a &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;polyfill&lt;/a&gt; for unsupported browsers or set &lt;code&gt;smartcrop.Promise&lt;/code&gt; to your favorite promise implementation (I recommend &lt;a href=&quot;http://bluebirdjs.com/&quot;&gt;bluebird&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Consider avoiding crops using dont-crop&lt;/h2&gt; 
&lt;p&gt;If you are interested in using smartcrop.js to crop your images you should also consider to avoid cropping them by using &lt;a href=&quot;https://github.com/jwagner/dont-crop/&quot;&gt;dont-crop&lt;/a&gt;. Dont-crop gives you matching gradients and colors to pad and complement your images.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://29a.ch/images/dont-crop.cache-399897619c3de2e0.jpg&quot; alt=&quot;Example&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Command Line Interface&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/jwagner/smartcrop-cli&quot;&gt;smartcrop-cli&lt;/a&gt; offers command line interface to smartcrop.js.&lt;/p&gt; 
&lt;h2&gt;Node&lt;/h2&gt; 
&lt;p&gt;You can use smartcrop from nodejs via either &lt;a href=&quot;https://github.com/jwagner/smartcrop-gm&quot;&gt;smartcrop-gm&lt;/a&gt; (which is using image magick via gm) or &lt;a href=&quot;https://github.com/jwagner/smartcrop-sharp&quot;&gt;smartcrop-sharp&lt;/a&gt; (which is using libvips via sharp). The &lt;a href=&quot;https://github.com/jwagner/smartcrop-cli&quot;&gt;smartcrop-cli&lt;/a&gt; can be used as an example of using smartcrop from node.&lt;/p&gt; 
&lt;h2&gt;Stability&lt;/h2&gt; 
&lt;p&gt;While &lt;em&gt;smartcrop.js&lt;/em&gt; is a small personal project it is currently being used on high traffic production sites. It has a basic set of automated tests and a test coverage of close to 100%. The tests run in all modern browsers thanks to &lt;a href=&quot;https://saucelabs.com/&quot;&gt;saucelabs&lt;/a&gt;. If in any doubt the code is short enough to perform a quick review yourself.&lt;/p&gt; 
&lt;h2&gt;Algorithm Overview&lt;/h2&gt; 
&lt;p&gt;Smartcrop.js works using fairly dumb image processing. In short:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Find edges using laplace&lt;/li&gt; 
 &lt;li&gt;Find regions with a color like skin&lt;/li&gt; 
 &lt;li&gt;Find regions high in saturation&lt;/li&gt; 
 &lt;li&gt;Boost regions as specified by options (for example detected faces)&lt;/li&gt; 
 &lt;li&gt;Generate a set of candidate crops using a sliding window&lt;/li&gt; 
 &lt;li&gt;Rank them using an importance function to focus the detail in the center and avoid it in the edges.&lt;/li&gt; 
 &lt;li&gt;Output the candidate crop with the highest rank&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Face detection&lt;/h2&gt; 
&lt;p&gt;The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.&lt;/p&gt; 
&lt;p&gt;In many cases it does make sense to add face detection to it to ensure faces get the priority they deserve.&lt;/p&gt; 
&lt;p&gt;There are multiple javascript libraries which can be easily integrated into smartcrop.js.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liuliu/ccv&quot;&gt;ccv js&lt;/a&gt; / &lt;a href=&quot;http://facedetection.jaysalvat.com/&quot;&gt;jquery.facedetection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trackingjs.com/examples/face_hello_world.html&quot;&gt;tracking.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.opencv.org/3.3.1/d5/d10/tutorial_js_root.html&quot;&gt;opencv.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/peterbraden/node-opencv&quot;&gt;node-opencv&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can experiment with all of these in the &lt;a href=&quot;https://29a.ch/sandbox/2014/smartcrop/examples/testbed.html&quot;&gt;smartcrop.js testbed&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;On the client side I would recommend using tracking.js because it&#39;s small and simple. Opencv.js is compiled from c++ and very heavy (~7.6MB of javascript + 900kb of data). jquery.facedetection has dependency on jquery and from my limited experience seems to perform worse than the others.&lt;/p&gt; 
&lt;p&gt;On the server side node-opencv can be quicker but comes with some &lt;a href=&quot;https://github.com/peterbraden/node-opencv/issues/415&quot;&gt;annoying issues&lt;/a&gt; as well.&lt;/p&gt; 
&lt;p&gt;It&#39;s also worth noting that all of these libraries are based on the now dated &lt;a href=&quot;https://en.wikipedia.org/wiki/Viola%E2%80%93Jones_object_detection_framework&quot;&gt;viola-jones&lt;/a&gt; object detection framework. It would be interesting to see how more &lt;a href=&quot;http://mmlab.ie.cuhk.edu.hk/projects/WIDERFace/WiderFace_Results.html&quot;&gt;state of the art&lt;/a&gt; techniques could be implemented in browser friendly javascript.&lt;/p&gt; 
&lt;h2&gt;Supported Module Formats&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;CommonJS&lt;/li&gt; 
 &lt;li&gt;AMD&lt;/li&gt; 
 &lt;li&gt;global export / window&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;http://caniuse.com/canvas&quot;&gt;caniuse.com/canvas&lt;/a&gt;. A &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;polyfill&lt;/a&gt; for &lt;a href=&quot;http://caniuse.com/#feat=promises&quot;&gt;Promises&lt;/a&gt; is recommended if you need to support old browsers.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;smartcrop.crop(image, options)&lt;/h3&gt; 
&lt;p&gt;Find the best crop for &lt;em&gt;image&lt;/em&gt; using &lt;em&gt;options&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;image:&lt;/strong&gt; anything ctx.drawImage() accepts, usually HTMLImageElement, HTMLCanvasElement or HTMLVideoElement.&lt;/p&gt; 
&lt;p&gt;Keep in mind that &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;origin policies&lt;/a&gt; apply to the image source. You may not use cross-domain images without &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt; clearance.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;options:&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jwagner/smartcrop.js/main/#cropOptions&quot;&gt;cropOptions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;returns:&lt;/strong&gt; A promise for a &lt;a href=&quot;https://raw.githubusercontent.com/jwagner/smartcrop.js/main/#cropResult&quot;&gt;cropResult&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;cropOptions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;minScale:&lt;/strong&gt; minimal scale of the crop rect, set to 1.0 to prevent smaller than necessary crops (lowers the risk of chopping things off).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;width:&lt;/strong&gt; width of the crop you want to use.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;height:&lt;/strong&gt; height of the crop you want to use.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;boost:&lt;/strong&gt; optional array of regions whose &#39;interestingness&#39; you want to boost (for example faces). See &lt;a href=&quot;https://raw.githubusercontent.com/jwagner/smartcrop.js/main/#boost&quot;&gt;boost&lt;/a&gt;;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ruleOfThirds:&lt;/strong&gt; optional boolean if set to false it will turn off the rule of thirds composition weight.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;debug &lt;em&gt;(internal)&lt;/em&gt;:&lt;/strong&gt; if true, cropResults will contain a debugCanvas and the complete results array.&lt;/p&gt; 
&lt;p&gt;There are many more (for now undocumented) options available. Check the &lt;a href=&quot;https://raw.githubusercontent.com/jwagner/smartcrop.js/main/smartcrop.js#L32&quot;&gt;source&lt;/a&gt; and be advised that they might change in the future.&lt;/p&gt; 
&lt;h3&gt;cropResult&lt;/h3&gt; 
&lt;p&gt;Result of the promise returned by smartcrop.crop.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{
  topCrop: crop;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;crop&lt;/h3&gt; 
&lt;p&gt;An individual crop.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{
  x: 11, // pixels from the left side
  y: 20, // pixels from the top
  width: 1, // pixels
  height: 1 // pixels
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;boost&lt;/h3&gt; 
&lt;p&gt;Describes a region to boost. A usage example of this is to take into account faces in the image. See &lt;a href=&quot;https://github.com/jwagner/smartcrop-cli&quot;&gt;smartcrop-cli&lt;/a&gt; for an example on how to integrate face detection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{
  x: 11, // pixels from the left side
  y: 20, // pixels from the top
  width: 32, // pixels
  height: 32, // pixels
  weight: 1 // in the range [0, 1]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the impact the boost has is proportional to it&#39;s weight and area.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;You can run the tests using &lt;code&gt;grunt test&lt;/code&gt;. Alternatively you can also just run grunt (the default task) and open &lt;a href=&quot;http://localhost:8000/test/.&quot;&gt;http://localhost:8000/test/.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Benchmark&lt;/h2&gt; 
&lt;p&gt;There are benchmarks for both the browser (test/benchmark.html) and node (node test/benchmark-node.js [requires node-canvas]) both powered by &lt;a href=&quot;http://benchmarkjs.com&quot;&gt;benchmark.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you just want some rough numbers: It takes &lt;strong&gt;&amp;lt; 20 ms&lt;/strong&gt; to find a &lt;strong&gt;square crop&lt;/strong&gt; of a &lt;strong&gt;640x427px&lt;/strong&gt; picture on an i7. In other words, it&#39;s fine to run it on one image, it&#39;s suboptimal to run it on an entire gallery on page load.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muesli&quot;&gt;Christian Muehlhaeuser&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ports, Alternatives&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inadarei/connect-thumbs&quot;&gt;connect-thumbs&lt;/a&gt; Middleware for connect.js that supports smartcrop.js by &lt;a href=&quot;https://github.com/inadarei/connect-thumbs&quot;&gt;Irakli Nadareishvili&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/QuadFlask/smartcrop-java&quot;&gt;smartcrop-java&lt;/a&gt; by &lt;a href=&quot;https://github.com/QuadFlask/&quot;&gt;QuadFlask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/QuadFlask/smartcrop-android&quot;&gt;smartcrop-android&lt;/a&gt; by &lt;a href=&quot;https://github.com/QuadFlask/&quot;&gt;QuadFlask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muesli/smartcrop&quot;&gt;smartcrop.go&lt;/a&gt; by &lt;a href=&quot;https://github.com/muesli&quot;&gt;Christian Muehlhaeuser&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hhatto/smartcrop.py&quot;&gt;smartcrop.py&lt;/a&gt; by &lt;a href=&quot;http://www.hexacosa.net/about/&quot;&gt;Hideo Hattori&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sadiqmmm/smartcrop-rails&quot;&gt;smartcrop-rails&lt;/a&gt; smartcrop wrapped in a ruby gem by &lt;a href=&quot;https://github.com/sadiqmmm/&quot;&gt;Mohammed Sadiq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/softawaregmbh/smartcrop.net&quot;&gt;smartcrop.net&lt;/a&gt; c# .net port by &lt;a href=&quot;https://www.softaware.at/&quot;&gt;softaware gmbh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jwagner/dont-crop/&quot;&gt;dont-crop&lt;/a&gt; a library to avoid cropping by padding images with matching colors or gradients&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Version history&lt;/h2&gt; 
&lt;h3&gt;2.0.5&lt;/h3&gt; 
&lt;p&gt;Fix &lt;code&gt;TS1046: Top-level declarations in .d.ts files must start with either a &#39;declare&#39; or &#39;export&#39; modifier.&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;2.0.4&lt;/h3&gt; 
&lt;p&gt;Typescript type definitions.&lt;/p&gt; 
&lt;h3&gt;2.0.2&lt;/h3&gt; 
&lt;p&gt;In short: It&#39;s a lot faster when calculating bigger crops. The quality of the crops should be comparable but the results are going to be different so this will be a major release.&lt;/p&gt; 
&lt;h3&gt;1.1.1&lt;/h3&gt; 
&lt;p&gt;Removed useless files from npm package.&lt;/p&gt; 
&lt;h3&gt;1.1&lt;/h3&gt; 
&lt;p&gt;Creating github releases. Added options.input which is getting passed along to iop.open.&lt;/p&gt; 
&lt;h3&gt;1.0&lt;/h3&gt; 
&lt;p&gt;Refactoring/cleanup to make it easier to use with node.js (dropping the node-canvas dependency) and enable support for boosts which can be used to do face detection. This is a 1.0 in the semantic meaning (denoting backwards incompatible API changes). It does not denote a finished product.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2018 Jonas Wagner, licensed under the MIT License (enclosed)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sachinchoolur/replace-jquery</title>
      <link>https://github.com/sachinchoolur/replace-jquery</link>
      <description>&lt;p&gt;Automatically finds jQuery methods from existing projects and generates vanilla js alternatives.&lt;/p&gt;&lt;hr&gt;&lt;h4&gt;Test coverage&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Statements&lt;/th&gt; 
   &lt;th&gt;Functions&lt;/th&gt; 
   &lt;th&gt;Lines&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/statements-99.64%25-brightgreen.svg?sanitize=true&quot; alt=&quot;Statements&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/functions-100%25-brightgreen.svg?sanitize=true&quot; alt=&quot;Functions&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/lines-100%25-brightgreen.svg?sanitize=true&quot; alt=&quot;Lines&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Automatically replace jQuery&lt;/h1&gt; 
&lt;p&gt;Automatically find jQuery methods from existing projects and generate vanilla js alternatives.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/6586706/130726188-74b18fc2-5545-47fc-8df9-a8227f07d342.mp4&quot;&gt;https://user-images.githubusercontent.com/6586706/130726188-74b18fc2-5545-47fc-8df9-a8227f07d342.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why&lt;/h2&gt; 
&lt;p&gt;I&#39;ve been working on removing jQuery dependency from multiple projects including &lt;a href=&quot;https://github.com/sachinchoolur/lightGallery&quot;&gt;lightGallery&lt;/a&gt; lately. Most of the projects use only 15% to 20% or less than 30% of the jquery methods And in most of the cases, I didn&#39;t want to support all the edge cases or legacy browsers. The hardest part was finding the jQuery methods in the existing project and writing the alternative vanilla js&amp;nbsp;methods without making much changes in the codebase. So I wrote this library which automatically finds jquery methods in any particular JavaScript file and generates readable, chainable vanilla js alternatives. This can also be useful if you want to generate your own utility&amp;nbsp;methods similar to jQuery.&lt;/p&gt; 
&lt;h2&gt;Installation and Usage&lt;/h2&gt; 
&lt;p&gt;You can install replace-jQuery using npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install -g replace-jquery
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find all jQuery methods from &lt;code&gt;sample.js&lt;/code&gt; and write vanillaJs alternatives in out.js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;replace-jQuery src/sample.js out.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find all jQuery methods from all matching files and write vanillaJs alternatives in out.js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;replace-jQuery &quot;src/*.js&quot; out.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build vanillaJs alternatives for the all available jQuery methods&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;replace-jQuery --build-all out.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build vanillaJs alternatives for the specified jQuery methods&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;replace-jQuery --methods &quot;addClass, removeClass, attr&quot; -o utils.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that, the utility functions generated by &lt;code&gt;replace-jQuery&lt;/code&gt; are not completely equivalent to jQuery methods in all scenarios. Please consider this as a starting point and validate before you adopt it.&lt;/p&gt; 
&lt;h2&gt;Basic Concepts&lt;/h2&gt; 
&lt;p&gt;The generated vanilla JS methods are chainable and can be applied to all matching elements like jQuery.&lt;/p&gt; 
&lt;p&gt;Note: The below code is just to demonstrate the basics concepts and not covered all scenarios.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;export class Utils {
  constructor(selector) {
    this.elements = Utils.getSelector(selector);
    this.element = this.get(0);
    return this;
  }

  static getSelector(selector, context = document) {
    if (typeof selector !== &#39;string&#39;) {
      return selector;
    }
    if (isId(selector)) {
      return document.getElementById(selector.substring(1))
    }
    return context.querySelectorAll(selector);
  }

  each(func) {
    if (!this.elements) {
      return this;
    }
    if (this.elements.length !== undefined) {
      [].forEach.call(this.elements, func);
    } else {
      func(this.element, 0);
    }
    return this;
  }

  siblings() {
    if (!this.element) {
      return this;
    }
    const elements = [].filter.call(
      this.element.parentNode.children,
      (child) =&amp;gt; child !== this.element
    );
    return new Utils(elements);
  }

  get(index) {
    if (index !== undefined) {
      return this.elements[index];
    }
    return this.elements;
  }

  addClass(classNames = &#39;&#39;) {
    this.each((el) =&amp;gt; {
      // IE doesn&#39;t support multiple arguments
      classNames.split(&#39; &#39;).forEach((className) =&amp;gt; {
        el.classList.add(className);
      });
    });
    return this;
  }
}

export default function $utils(selector) {
  return new Utils(selector);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Usage&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li class=&quot;jquery&quot;&amp;gt;jQuery&amp;lt;/li&amp;gt;
  &amp;lt;li class=&quot;react&quot;&amp;gt;React&amp;lt;/li&amp;gt;
  &amp;lt;li class=&quot;vue&quot;&amp;gt;Vue.js&amp;lt;/li&amp;gt;
  &amp;lt;li class=&quot;angular&quot;&amp;gt;Angular&amp;lt;/li&amp;gt;
  &amp;lt;li class=&quot;lit&quot;&amp;gt;Lit&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.highlight {
  background-color: red;
  color: #fff;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;$utils(&quot;.vue&quot;).siblings().addClass(&quot;highlight&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Demo - &lt;a href=&quot;https://codepen.io/sachinchoolur/pen/oNWNdxE&quot;&gt;https://codepen.io/sachinchoolur/pen/oNWNdxE&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can see that the &lt;code&gt;addClass&lt;/code&gt; method is depended on the &lt;code&gt;each&lt;/code&gt; method, so if you generate addClass method using &lt;code&gt;replace-jQuery --methods &quot;addClass&quot; -o utils.js&lt;/code&gt; the output file will contain &lt;code&gt;addClass&lt;/code&gt; and &lt;code&gt;each&lt;/code&gt; methods.&lt;/p&gt; 
&lt;p&gt;Similarly, all the examples you see below, will add it&#39;s dependencies when you generate it using &lt;code&gt;replace-jQuery&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;List of jQuery alternative methods in alphabetical order&lt;/h2&gt; 
&lt;h5&gt;addClass&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;addClass(classNames = &#39;&#39;) {
  this.each((el) =&amp;gt; {
    classNames.split(&#39; &#39;).forEach((className) =&amp;gt; {
      el.classList.add(className);
    });
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Usage
$utils(&#39;ul li&#39;).addClass(&#39;myClass yourClass&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;append&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;append(html) {
  this.each((el) =&amp;gt; {
    if (typeof html === &#39;string&#39;) {
      el.insertAdjacentHTML(&#39;beforeend&#39;, html);
    } else {
      el.appendChild(html);
    }
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;attr&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;attr(name, value) {
  if (value === undefined) {
    if (!this.element) {
      return &#39;&#39;;
    }
    return this.element.getAttribute(name);
  }
  this.each((el) =&amp;gt; {
    el.setAttribute(name, value);
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;children&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;children() {
  return new Utils(this.element.children);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;closest&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;closest(selector) {
  if (!this.element) {
    return this;
  }
  const matchesSelector =
    this.element.matches ||
    this.element.webkitMatchesSelector ||
    this.element.mozMatchesSelector ||
    this.element.msMatchesSelector;

  while (this.element) {
    if (matchesSelector.call(this.element, selector)) {
      return new Utils(this.element);
    }
    this.element = this.element.parentElement;
  }
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;css&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;css(css, value) {
  if (value !== undefined) {
    this.each((el) =&amp;gt; {
      Utils.setCss(el, css, value);
    });
    return this;
  }
  if (typeof css === &#39;object&#39;) {
    for (const property in css) {
      if (Object.prototype.hasOwnProperty.call(css, property)) {
        this.each((el) =&amp;gt; {
          Utils.setCss(el, property, css[property]);
        });
      }
    }
    return this;
  }
  const cssProp = Utils.camelCase(css);
  const property = Utils.styleSupport(cssProp);
  return getComputedStyle(this.element)[property];
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;data&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;data(name, value) {
  return this.attr(`data-${name}`, value);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;each&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;each(func) {
    if (!this.elements) {
        return this;
    }
    if (this.elements.length !== undefined) {
        [].slice.call(this.elements).forEach((el, index) =&amp;gt; {
            func.call(el, el, index);
        });
    } else {
        func.call(this.element, this.element, 0);
    }
    return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;empty&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;empty() {
  this.each((el) =&amp;gt; {
    el.innerHTML = &#39;&#39;;
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;eq&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;eq(index) {
  return new Utils(this.elements[index]);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;find&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;find(selector) {
  return new Utils(Utils.getSelector(selector, this.element));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;first&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;first() {
  if (this.elements &amp;amp;&amp;amp; this.elements.length !== undefined) {
    return new Utils(this.elements[0]);
  }
  return new Utils(this.elements);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;get&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;get() {
  return this.elements;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;hasClass&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;hasClass(className) {
  if (!this.element) {
    return false;
  }
  return this.element.classList.contains(className);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;height&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;height() {
  if (!this.element) {
    return 0;
  }
  const style = window.getComputedStyle(this.element, null);
  return parseFloat(style.height.replace(&#39;px&#39;, &#39;&#39;));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;html&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;html(html) {
  if (html === undefined) {
    if (!this.element) {
      return &#39;&#39;;
    }
    return this.element.innerHTML;
  }
  this.each((el) =&amp;gt; {
    el.innerHTML = html;
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;index&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;index() {
  if (!this.element) return -1;
  let i = 0;
  do {
    i++;
  } while ((this.element = this.element.previousElementSibling));
  return i;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;is&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;is(el) {
  if (typeof el === &#39;string&#39;) {
    return (
      this.element.matches ||
      this.element.matchesSelector ||
      this.element.msMatchesSelector ||
      this.element.mozMatchesSelector ||
      this.element.webkitMatchesSelector ||
      this.element.oMatchesSelector
    ).call(this.element, el);
  }
  return this.element === (el.element || el);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;next&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;next() {
  if (!this.element) {
    return this;
  }
  return new Utils(this.element.nextElementSibling);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;nextAll&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;nextAll(filter) {
  if (!this.element) {
    return this;
  }
  const sibs = [];
  let nextElem = this.element.parentNode.firstChild;
  do {
    if (nextElem.nodeType === 3) continue; // ignore text nodes
    if (nextElem === this.element) continue; // ignore this.element of target
    if (nextElem === this.element.nextElementSibling) {
      if (!filter || filter(this.element)) {
        sibs.push(nextElem);
        this.element = nextElem;
      }
    }
  } while ((nextElem = nextElem.nextSibling));
  return new Utils(sibs);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;off&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;off(event) {
  if (!this.elements) {
    return this;
  }
  Object.keys(Utils.eventListeners).forEach((eventName) =&amp;gt; {
    if (Utils.isEventMatched(event, eventName)) {
      Utils.eventListeners[eventName].forEach((listener) =&amp;gt; {
        this.each((el) =&amp;gt; {
          el.removeEventListener(
            eventName.split(&#39;.&#39;)[0],
            listener
          );
        });
      });
    }
  });

  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;offset&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;offset() {
  if (!this.element) {
    return {
      left: 0,
      top: 0,
    };
  }
  const box = this.element.getBoundingClientRect();
  return {
    top:
      box.top +
      window.pageYOffset -
      document.documentElement.clientTop,
    left:
      box.left +
      window.pageXOffset -
      document.documentElement.clientLeft,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;offsetParent&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;offsetParent() {
  if (!this.element) {
    return this;
  }
  return new Utils(this.element.offsetParent);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;on&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;on(events, listener) {
  if (!this.elements) {
    return this;
  }
  events.split(&#39; &#39;).forEach((event) =&amp;gt; {
    if (!Array.isArray(Utils.eventListeners[event])) {
      Utils.eventListeners[event] = [];
    }
    Utils.eventListeners[event].push(listener);
    this.each((el) =&amp;gt; {
      el.addEventListener(event.split(&#39;.&#39;)[0], listener);
    });
  });

  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;one&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;one(event, listener) {
  this.each((el) =&amp;gt; {
    new Utils(el).on(event, () =&amp;gt; {
      new Utils(el).off(event);
      listener(event);
    });
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;outerHeight&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;outerHeight(margin) {
  if (!this.element) {
    return 0;
  }
  if (margin !== undefined) {
    let height = this.element.offsetHeight;
    const style = getComputedStyle(this.element);

    height +=
      parseInt(style.marginTop, 10) +
      parseInt(style.marginBottom, 10);
    return height;
  }
  return this.element.offsetHeight;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;outerWidth&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;outerWidth(margin) {
  if (!this.element) {
    return 0;
  }
  if (margin !== undefined) {
    let width = this.element.offsetWidth;
    const style = window.getComputedStyle(this.element);

    width +=
      parseInt(style.marginLeft, 10) +
      parseInt(style.marginRight, 10);
    return width;
  }
  return this.element.offsetWidth;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;parent&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parent() {
  return new Utils(this.element.parentElement);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;parentsUntil&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parentsUntil(selector, filter) {
  if (!this.element) {
    return this;
  }
  const result = [];
  const matchesSelector =
    this.element.matches ||
    this.element.webkitMatchesSelector ||
    this.element.mozMatchesSelector ||
    this.element.msMatchesSelector;

  // match start from parent
  let el = this.element.parentElement;
  while (el &amp;amp;&amp;amp; !matchesSelector.call(el, selector)) {
    if (!filter) {
      result.push(el);
    } else if (matchesSelector.call(el, filter)) {
      result.push(el);
    }
    el = el.parentElement;
  }
  return new Utils(result);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;position&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;position() {
  return {
    left: this.element.offsetLeft,
    top: this.element.offsetTop,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;prepend&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;prepend(html) {
  this.each((el) =&amp;gt; {
    if (typeof html === &#39;string&#39;) {
      el.insertAdjacentHTML(&#39;afterbegin&#39;, html);
    } else {
      el.insertBefore(html, el.firstChild);
    }
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;prev&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;prev() {
  if (!this.element) {
    return this;
  }
  return new Utils(this.element.previousElementSibling);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;prevAll&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;prevAll(filter) {
  if (!this.element) {
    return this;
  }
  const sibs = [];
  while ((this.element = this.element.previousSibling)) {
    if (this.element.nodeType === 3) {
      continue; // ignore text nodes
    }
    if (!filter || filter(this.element)) sibs.push(this.element);
  }
  return new Utils(sibs);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;remove&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;remove() {
  this.each((el) =&amp;gt; {
    el.parentNode.removeChild(el);
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;removeAttr&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;removeAttr(attributes) {
  const attrs = attributes.split(&#39; &#39;);
  this.each((el) =&amp;gt; {
    attrs.forEach((attr) =&amp;gt; el.removeAttribute(attr));
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;removeClass&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;removeClass(classNames) {
  this.each((el) =&amp;gt; {
    // IE doesn&#39;t support multiple arguments
    classNames.split(&#39; &#39;).forEach((className) =&amp;gt; {
      el.classList.remove(className);
    });
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;siblings&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;siblings() {
  if (!this.element) {
    return this;
  }
  const elements = Array.prototype.filter.call(
    this.element.parentNode.children,
    (child) =&amp;gt; child !== this.element
  );
  return new Utils(elements);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;text&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;text(text) {
  if (text === undefined) {
    if (!this.element) {
      return &#39;&#39;;
    }
    return this.element.textContent;
  }
  this.each((el) =&amp;gt; {
    el.textContent = text;
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;toggleClass&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;toggleClass(className) {
  if (!this.element) {
    return this;
  }
  this.element.classList.toggle(className);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;trigger&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;trigger(event, detail) {
  if (!this.element) {
    return this;
  }
  const eventName = event.split(&#39;.&#39;)[0];
  const isNativeEvent =
    typeof document.body[`on${eventName}`] !== &#39;undefined&#39;;
  if (isNativeEvent) {
    this.each((el) =&amp;gt; {
      el.dispatchEvent(new Event(eventName));
    });
    return this;
  }
  const customEvent = new CustomEvent(eventName, {
    detail: detail || null,
  });
  this.each((el) =&amp;gt; {
    el.dispatchEvent(customEvent);
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;unwrap&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;unwrap() {
  this.each((el) =&amp;gt; {
    const elParentNode = el.parentNode;

    if (elParentNode !== document.body) {
      elParentNode.parentNode.insertBefore(el, elParentNode);
      elParentNode.parentNode.removeChild(elParentNode);
    }
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;val&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;val(value) {
  if (!this.element) {
    return &#39;&#39;;
  }
  if (value === undefined) {
    return this.element.value;
  }
  this.element.value = value;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;width&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;width() {
  if (!this.element) {
    return 0;
  }
  const style = window.getComputedStyle(this.element, null);
  return parseFloat(style.width.replace(&#39;px&#39;, &#39;&#39;));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;wrap&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;wrap(className) {
  this.each((el) =&amp;gt; {
    const wrapper = document.createElement(&#39;div&#39;);
    wrapper.className = className;
    el.parentNode.insertBefore(wrapper, el);
    wrapper.appendChild(el);
  });
  return this;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Browser support - IE 11+&lt;/h4&gt;</description>
    </item>
    
    <item>
      <title>rainbow-me/rainbow</title>
      <link>https://github.com/rainbow-me/rainbow</link>
      <description>&lt;p&gt;üåà‚Äí the Ethereum wallet that lives in your pocket&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://pbs.twimg.com/profile_banners/1103191459409420288/1573207178/1500x500&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;üåàÔ∏è Rainbow&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;the Ethereum wallet that lives in your pocket!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;üì≤Ô∏è &lt;a href=&quot;https://apps.apple.com/us/app/rainbow-ethereum-wallet/id1457119021&quot;&gt;Available on the iOS App Store.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;üê¶Ô∏è &lt;a href=&quot;https://twitter.com/rainbowdotme&quot;&gt;Follow us on Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;h3&gt;General&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install NVM or Node.js 14: &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;https://github.com/creationix/nvm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install all project dependencies with &lt;code&gt;yarn setup&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;latest version of XCode&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Watchman:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;brew install watchman
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install CocoaPods:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo gem install cocoapods
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install the required bundles and Pods for this project:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn install-bundle &amp;amp;&amp;amp; yarn install-pods
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install system dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo apt install libsecret-tools watchman
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the &lt;a href=&quot;https://reactnative.dev/docs/environment-setup&quot;&gt;React Native environment setup instructions&lt;/a&gt; carefully, which will involve installing Android Studio, the Android SDK, the emulator, etc. and making them available in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure at least one &lt;a href=&quot;https://developer.android.com/studio/run/managing-avds&quot;&gt;AVD image&lt;/a&gt; is available for the emulator (unless using a physical device).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;If you are new to React Native, this is a helpful introduction: &lt;a href=&quot;https://facebook.github.io/react-native/docs/getting-started.html&quot;&gt;https://facebook.github.io/react-native/docs/getting-started.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Preflight&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;nvm use 14&lt;/code&gt; to force Node.js v14.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up your .env file, use our env.example as a guide.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Note that some features are currently not accessible, we are working with our Data Providers in order to provide open source API Keys!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Here are some resources to generate your own API keys:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Etherscan: &lt;a href=&quot;https://etherscan.io/apis&quot;&gt;https://etherscan.io/apis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Infura: &lt;a href=&quot;https://infura.io/&quot;&gt;https://infura.io/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;ETH Gas Station: &lt;a href=&quot;https://docs.ethgasstation.info/&quot;&gt;https://docs.ethgasstation.info/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Imgix: &lt;a href=&quot;https://www.imgix.com/&quot;&gt;https://www.imgix.com/&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure a &lt;code&gt;google-services.json&lt;/code&gt; has been added to the relevant project directory/directories so the compile will not fail.&lt;/p&gt; &lt;p&gt;This can either be the live Google Services config (for internal development) or a self-provided config for a personal Firebase project (third-party contributors) registered under the package name &lt;code&gt;me.rainbow&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Note: Darwin versions of the application can only be developed/built on Darwin platforms with XCode.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Start a React Native webserver with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;code&gt;rainbow-wallet/ios/Rainbow.xcworkspace&lt;/code&gt; in XCode.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the project by clicking the play button.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Note: Linux development environments cannot develop or build Darwin versions of the project.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Start a React Native webserver with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build/install/start the debug version of the app in an emulator with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn android
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;CodePush&lt;/h2&gt; 
&lt;p&gt;In order to use code push you must be logged into the correct Microsoft App Center account.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm install -g code-push
code-push login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this point you will be required to log into the account tied to the code push public keys in Info.plist&lt;/p&gt; 
&lt;h3&gt;Deployment&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;code-push release-react RainbowWallet-iOS ios -d &amp;lt;DEPLOYMENT&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The deployment can either be &lt;code&gt;Staging&lt;/code&gt; or &lt;code&gt;Production&lt;/code&gt; depending on the mode of the application you wish to update was built in through XCode.&lt;/p&gt; 
&lt;h3&gt;Local Builds&lt;/h3&gt; 
&lt;p&gt;In order to build the application in &quot;release&quot; mode but not use the code push distribution you must build the application using the scheme &lt;code&gt;LocalRelease&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Building the application with the &lt;code&gt;Staging&lt;/code&gt; scheme or &lt;code&gt;Release&lt;/code&gt; scheme will result in your bundle being replaced by the live code push deployment on resume of the application.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
