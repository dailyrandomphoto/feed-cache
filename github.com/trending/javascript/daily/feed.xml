<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Tue, 06 Apr 2021 02:01:22 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>discordjs/discord.js</title>
      <link>https://github.com/discordjs/discord.js</link>
      <description>&lt;p&gt;A powerful JavaScript library for interacting with the Discord API&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#audio-engines&quot;&gt;Audio engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#optional-packages&quot;&gt;Optional packages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#example-usage&quot;&gt;Example Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#links&quot;&gt;Links&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#help&quot;&gt;Help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;discord.js is a powerful &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; module that allows you to easily interact with the &lt;a href=&quot;https://discord.com/developers/docs/intro&quot;&gt;Discord API&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Object-oriented&lt;/li&gt; 
 &lt;li&gt;Predictable abstractions&lt;/li&gt; 
 &lt;li&gt;Performant&lt;/li&gt; 
 &lt;li&gt;100% coverage of the Discord API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Node.js 14.0.0 or newer is required.&lt;/strong&gt;&lt;br&gt; Ignore any warnings about unmet peer dependencies, as they&#39;re all optional.&lt;/p&gt; 
&lt;p&gt;Without voice support: &lt;code&gt;npm install discord.js&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/@discordjs/opus&quot;&gt;@discordjs/opus&lt;/a&gt;): &lt;code&gt;npm install discord.js @discordjs/opus&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/opusscript&quot;&gt;opusscript&lt;/a&gt;): &lt;code&gt;npm install discord.js opusscript&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Audio engines&lt;/h3&gt; 
&lt;p&gt;The preferred audio engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus. Using opusscript is only recommended for development environments where @discordjs/opus is tough to get working. For production bots, using @discordjs/opus should be considered a necessity, especially if they&#39;re going to be running on multiple servers.&lt;/p&gt; 
&lt;h3&gt;Optional packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/zlib-sync&quot;&gt;zlib-sync&lt;/a&gt; for WebSocket data compression and inflation (&lt;code&gt;npm install zlib-sync&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discord/erlpack&quot;&gt;erlpack&lt;/a&gt; for significantly faster WebSocket data (de)serialisation (&lt;code&gt;npm install discord/erlpack&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;One of the following packages can be installed for faster voice packet encryption and decryption: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/sodium&quot;&gt;sodium&lt;/a&gt; (&lt;code&gt;npm install sodium&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/libsodium-wrappers&quot;&gt;libsodium.js&lt;/a&gt; (&lt;code&gt;npm install libsodium-wrappers&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/bufferutil&quot;&gt;bufferutil&lt;/a&gt; for a much faster WebSocket connection (&lt;code&gt;npm install bufferutil&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/utf-8-validate&quot;&gt;utf-8-validate&lt;/a&gt; in combination with &lt;code&gt;bufferutil&lt;/code&gt; for much faster WebSocket processing (&lt;code&gt;npm install utf-8-validate&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client, Intents } = require(&#39;discord.js&#39;);
const client = new Client({ intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES] });

client.on(&#39;ready&#39;, () =&amp;gt; {
  console.log(`Logged in as ${client.user.tag}!`);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
  if (msg.content === &#39;ping&#39;) {
    msg.channel.send(&#39;pong&#39;);
  }
});

client.login(&#39;token&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/&quot;&gt;Website&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/website&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/#/docs/main/master/general/welcome&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordjs.guide/&quot;&gt;Guide&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/guide&quot;&gt;source&lt;/a&gt;) - this is still for stable&lt;br&gt; See also the &lt;a href=&quot;https://discordjs.guide/additional-info/changes-in-v12.html&quot;&gt;Update Guide&lt;/a&gt;, including updated and removed items in the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/discord-api&quot;&gt;Discord API Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discordjs/discord.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordapi.com/unofficial/libs.html&quot;&gt;Related libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord-rpc&quot;&gt;RPC&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/RPC&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before creating an issue, please ensure that it hasn&#39;t already been reported/suggested, and double-check the &lt;a href=&quot;https://discord.js.org/#/docs&quot;&gt;documentation&lt;/a&gt;.&lt;br&gt; See &lt;a href=&quot;https://github.com/discordjs/discord.js/blob/master/.github/CONTRIBUTING.md&quot;&gt;the contribution guide&lt;/a&gt; if you&#39;d like to submit a PR.&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please don&#39;t hesitate to join our official &lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Server&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hagopj13/node-express-boilerplate</title>
      <link>https://github.com/hagopj13/node-express-boilerplate</link>
      <description>&lt;p&gt;A boilerplate for building production-ready RESTful APIs using Node.js, Express, and Mongoose&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RESTful API Node Server Boilerplate&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/hagopj13/node-express-boilerplate&quot;&gt;&lt;img src=&quot;https://travis-ci.org/hagopj13/node-express-boilerplate.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/hagopj13/node-express-boilerplate?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/hagopj13/node-express-boilerplate/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codacy.com/manual/hagopj13/node-express-mongoose-boilerplate?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=hagopj13/node-express-boilerplate&amp;amp;utm_campaign=Badge_Grade&quot;&gt;&lt;img src=&quot;https://api.codacy.com/project/badge/Grade/2ab03f5d62a1404f87a659afe8d6d5de&quot; alt=&quot;Codacy Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A boilerplate/starter project for quickly building RESTful APIs using Node.js, Express, and Mongoose.&lt;/p&gt; 
&lt;p&gt;By running a single command, you will get a production-ready Node.js app installed and fully configured on your machine. The app comes with many built-in features, such as authentication using JWT, request validation, unit and integration tests, continuous integration, docker support, API documentation, pagination, etc. For more details, check the features list below.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;To create a project, simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-nodejs-express-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm init nodejs-express-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Manual Installation&lt;/h2&gt; 
&lt;p&gt;If you would still prefer to do the installation manually, follow these steps:&lt;/p&gt; 
&lt;p&gt;Clone the repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone --depth 1 https://github.com/hagopj13/node-express-boilerplate.git
cd node-express-boilerplate
npx rimraf ./.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Set the environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cp .env.example .env

# open .env and modify the environment variables (if needed)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#commands&quot;&gt;Commands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#environment-variables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#project-structure&quot;&gt;Project Structure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#api-documentation&quot;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#error-handling&quot;&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#validation&quot;&gt;Validation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#authentication&quot;&gt;Authentication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#authorization&quot;&gt;Authorization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#logging&quot;&gt;Logging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#custom-mongoose-plugins&quot;&gt;Custom Mongoose Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;NoSQL database&lt;/strong&gt;: &lt;a href=&quot;https://www.mongodb.com&quot;&gt;MongoDB&lt;/a&gt; object data modeling using &lt;a href=&quot;https://mongoosejs.com&quot;&gt;Mongoose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication and authorization&lt;/strong&gt;: using &lt;a href=&quot;http://www.passportjs.org&quot;&gt;passport&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Validation&lt;/strong&gt;: request data validation using &lt;a href=&quot;https://github.com/hapijs/joi&quot;&gt;Joi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Logging&lt;/strong&gt;: using &lt;a href=&quot;https://github.com/winstonjs/winston&quot;&gt;winston&lt;/a&gt; and &lt;a href=&quot;https://github.com/expressjs/morgan&quot;&gt;morgan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;: unit and integration tests using &lt;a href=&quot;https://jestjs.io&quot;&gt;Jest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Error handling&lt;/strong&gt;: centralized error handling mechanism&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API documentation&lt;/strong&gt;: with &lt;a href=&quot;https://github.com/Surnet/swagger-jsdoc&quot;&gt;swagger-jsdoc&lt;/a&gt; and &lt;a href=&quot;https://github.com/scottie1984/swagger-ui-express&quot;&gt;swagger-ui-express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Process management&lt;/strong&gt;: advanced production process management using &lt;a href=&quot;https://pm2.keymetrics.io&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dependency management&lt;/strong&gt;: with &lt;a href=&quot;https://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Environment variables&lt;/strong&gt;: using &lt;a href=&quot;https://github.com/motdotla/dotenv&quot;&gt;dotenv&lt;/a&gt; and &lt;a href=&quot;https://github.com/kentcdodds/cross-env#readme&quot;&gt;cross-env&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: set security HTTP headers using &lt;a href=&quot;https://helmetjs.github.io&quot;&gt;helmet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Santizing&lt;/strong&gt;: sanitize request data against xss and query injection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CORS&lt;/strong&gt;: Cross-Origin Resource-Sharing enabled using &lt;a href=&quot;https://github.com/expressjs/cors&quot;&gt;cors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compression&lt;/strong&gt;: gzip compression with &lt;a href=&quot;https://github.com/expressjs/compression&quot;&gt;compression&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI&lt;/strong&gt;: continuous integration with &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis CI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker support&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code coverage&lt;/strong&gt;: using &lt;a href=&quot;https://coveralls.io&quot;&gt;coveralls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code quality&lt;/strong&gt;: with &lt;a href=&quot;https://www.codacy.com&quot;&gt;Codacy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Git hooks&lt;/strong&gt;: with &lt;a href=&quot;https://github.com/typicode/husky&quot;&gt;husky&lt;/a&gt; and &lt;a href=&quot;https://github.com/okonet/lint-staged&quot;&gt;lint-staged&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linting&lt;/strong&gt;: with &lt;a href=&quot;https://eslint.org&quot;&gt;ESLint&lt;/a&gt; and &lt;a href=&quot;https://prettier.io&quot;&gt;Prettier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Editor config&lt;/strong&gt;: consistent editor configuration using &lt;a href=&quot;https://editorconfig.org&quot;&gt;EditorConfig&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;Running locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running in production:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Testing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run all tests
yarn test

# run all tests in watch mode
yarn test:watch

# run test coverage
yarn coverage
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run docker container in development mode
yarn docker:dev

# run docker container in production mode
yarn docker:prod

# run all tests in a docker container
yarn docker:test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Linting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run ESLint
yarn lint

# fix ESLint errors
yarn lint:fix

# run prettier
yarn prettier

# fix prettier errors
yarn prettier:fix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Environment Variables&lt;/h2&gt; 
&lt;p&gt;The environment variables can be found and modified in the &lt;code&gt;.env&lt;/code&gt; file. They come with these default values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Port number
PORT=3000

# URL of the Mongo DB
MONGODB_URL=mongodb://127.0.0.1:27017/node-boilerplate

# JWT
# JWT secret key
JWT_SECRET=thisisasamplesecret
# Number of minutes after which an access token expires
JWT_ACCESS_EXPIRATION_MINUTES=30
# Number of days after which a refresh token expires
JWT_REFRESH_EXPIRATION_DAYS=30

# SMTP configuration options for the email service
# For testing, you can use a fake SMTP service like Ethereal: https://ethereal.email/create
SMTP_HOST=email-server
SMTP_PORT=587
SMTP_USERNAME=email-server-username
SMTP_PASSWORD=email-server-password
EMAIL_FROM=support@yourapp.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Project Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;src\
 |--config\         # Environment variables and configuration related things
 |--controllers\    # Route controllers (controller layer)
 |--docs\           # Swagger files
 |--middlewares\    # Custom express middlewares
 |--models\         # Mongoose models (data layer)
 |--routes\         # Routes
 |--services\       # Business logic (service layer)
 |--utils\          # Utility classes and functions
 |--validations\    # Request data validation schemas
 |--app.js          # Express app
 |--index.js        # App entry point
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;To view the list of available APIs and their specifications, run the server and go to &lt;code&gt;http://localhost:3000/v1/docs&lt;/code&gt; in your browser. This documentation page is automatically generated using the &lt;a href=&quot;https://swagger.io/&quot;&gt;swagger&lt;/a&gt; definitions written as comments in the route files.&lt;/p&gt; 
&lt;h3&gt;API Endpoints&lt;/h3&gt; 
&lt;p&gt;List of available routes:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Auth routes&lt;/strong&gt;:&lt;br&gt; &lt;code&gt;POST /v1/auth/register&lt;/code&gt; - register&lt;br&gt; &lt;code&gt;POST /v1/auth/login&lt;/code&gt; - login&lt;br&gt; &lt;code&gt;POST /v1/auth/refresh-tokens&lt;/code&gt; - refresh auth tokens&lt;br&gt; &lt;code&gt;POST /v1/auth/forgot-password&lt;/code&gt; - send reset password email&lt;br&gt; &lt;code&gt;POST /v1/auth/reset-password&lt;/code&gt; - reset password&lt;br&gt; &lt;code&gt;POST /v1/auth/send-verification-email&lt;/code&gt; - send verification email&lt;br&gt; &lt;code&gt;POST /v1/auth/verify-email&lt;/code&gt; - verify email&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;User routes&lt;/strong&gt;:&lt;br&gt; &lt;code&gt;POST /v1/users&lt;/code&gt; - create a user&lt;br&gt; &lt;code&gt;GET /v1/users&lt;/code&gt; - get all users&lt;br&gt; &lt;code&gt;GET /v1/users/:userId&lt;/code&gt; - get user&lt;br&gt; &lt;code&gt;PATCH /v1/users/:userId&lt;/code&gt; - update user&lt;br&gt; &lt;code&gt;DELETE /v1/users/:userId&lt;/code&gt; - delete user&lt;/p&gt; 
&lt;h2&gt;Error Handling&lt;/h2&gt; 
&lt;p&gt;The app has a centralized error handling mechanism.&lt;/p&gt; 
&lt;p&gt;Controllers should try to catch the errors and forward them to the error handling middleware (by calling &lt;code&gt;next(error)&lt;/code&gt;). For convenience, you can also wrap the controller inside the catchAsync utility wrapper, which forwards the error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const catchAsync = require(&#39;../utils/catchAsync&#39;);

const controller = catchAsync(async (req, res) =&amp;gt; {
  // this error will be forwarded to the error handling middleware
  throw new Error(&#39;Something wrong happened&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The error handling middleware sends an error response, which has the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;code&quot;: 404,
  &quot;message&quot;: &quot;Not found&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When running in development mode, the error response also contains the error stack.&lt;/p&gt; 
&lt;p&gt;The app has a utility ApiError class to which you can attach a response code and a message, and then throw it from anywhere (catchAsync will catch it).&lt;/p&gt; 
&lt;p&gt;For example, if you are trying to get a user from the DB who is not found, and you want to send a 404 error, the code should look something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const httpStatus = require(&#39;http-status&#39;);
const ApiError = require(&#39;../utils/ApiError&#39;);
const User = require(&#39;../models/User&#39;);

const getUser = async (userId) =&amp;gt; {
  const user = await User.findById(userId);
  if (!user) {
    throw new ApiError(httpStatus.NOT_FOUND, &#39;User not found&#39;);
  }
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Validation&lt;/h2&gt; 
&lt;p&gt;Request data is validated using &lt;a href=&quot;https://joi.dev/&quot;&gt;Joi&lt;/a&gt;. Check the &lt;a href=&quot;https://joi.dev/api/&quot;&gt;documentation&lt;/a&gt; for more details on how to write Joi validation schemas.&lt;/p&gt; 
&lt;p&gt;The validation schemas are defined in the &lt;code&gt;src/validations&lt;/code&gt; directory and are used in the routes by providing them as parameters to the &lt;code&gt;validate&lt;/code&gt; middleware.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const express = require(&#39;express&#39;);
const validate = require(&#39;../../middlewares/validate&#39;);
const userValidation = require(&#39;../../validations/user.validation&#39;);
const userController = require(&#39;../../controllers/user.controller&#39;);

const router = express.Router();

router.post(&#39;/users&#39;, validate(userValidation.createUser), userController.createUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;To require authentication for certain routes, you can use the &lt;code&gt;auth&lt;/code&gt; middleware.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const express = require(&#39;express&#39;);
const auth = require(&#39;../../middlewares/auth&#39;);
const userController = require(&#39;../../controllers/user.controller&#39;);

const router = express.Router();

router.post(&#39;/users&#39;, auth(), userController.createUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These routes require a valid JWT access token in the Authorization request header using the Bearer schema. If the request does not contain a valid access token, an Unauthorized (401) error is thrown.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Generating Access Tokens&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;An access token can be generated by making a successful call to the register (&lt;code&gt;POST /v1/auth/register&lt;/code&gt;) or login (&lt;code&gt;POST /v1/auth/login&lt;/code&gt;) endpoints. The response of these endpoints also contains refresh tokens (explained below).&lt;/p&gt; 
&lt;p&gt;An access token is valid for 30 minutes. You can modify this expiration time by changing the &lt;code&gt;JWT_ACCESS_EXPIRATION_MINUTES&lt;/code&gt; environment variable in the .env file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Refreshing Access Tokens&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;After the access token expires, a new access token can be generated, by making a call to the refresh token endpoint (&lt;code&gt;POST /v1/auth/refresh-tokens&lt;/code&gt;) and sending along a valid refresh token in the request body. This call returns a new access token and a new refresh token.&lt;/p&gt; 
&lt;p&gt;A refresh token is valid for 30 days. You can modify this expiration time by changing the &lt;code&gt;JWT_REFRESH_EXPIRATION_DAYS&lt;/code&gt; environment variable in the .env file.&lt;/p&gt; 
&lt;h2&gt;Authorization&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;auth&lt;/code&gt; middleware can also be used to require certain rights/permissions to access a route.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const express = require(&#39;express&#39;);
const auth = require(&#39;../../middlewares/auth&#39;);
const userController = require(&#39;../../controllers/user.controller&#39;);

const router = express.Router();

router.post(&#39;/users&#39;, auth(&#39;manageUsers&#39;), userController.createUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example above, an authenticated user can access this route only if that user has the &lt;code&gt;manageUsers&lt;/code&gt; permission.&lt;/p&gt; 
&lt;p&gt;The permissions are role-based. You can view the permissions/rights of each role in the &lt;code&gt;src/config/roles.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;If the user making the request does not have the required permissions to access this route, a Forbidden (403) error is thrown.&lt;/p&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Import the logger from &lt;code&gt;src/config/logger.js&lt;/code&gt;. It is using the &lt;a href=&quot;https://github.com/winstonjs/winston&quot;&gt;Winston&lt;/a&gt; logging library.&lt;/p&gt; 
&lt;p&gt;Logging should be done according to the following severity levels (ascending order from most important to least important):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const logger = require(&#39;&amp;lt;path to src&amp;gt;/config/logger&#39;);

logger.error(&#39;message&#39;); // level 0
logger.warn(&#39;message&#39;); // level 1
logger.info(&#39;message&#39;); // level 2
logger.http(&#39;message&#39;); // level 3
logger.verbose(&#39;message&#39;); // level 4
logger.debug(&#39;message&#39;); // level 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In development mode, log messages of all severity levels will be printed to the console.&lt;/p&gt; 
&lt;p&gt;In production mode, only &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, and &lt;code&gt;error&lt;/code&gt; logs will be printed to the console.&lt;br&gt; It is up to the server (or process manager) to actually read them from the console and store them in log files.&lt;br&gt; This app uses pm2 in production mode, which is already configured to store the logs in log files.&lt;/p&gt; 
&lt;p&gt;Note: API request information (request url, response code, timestamp, etc.) are also automatically logged (using &lt;a href=&quot;https://github.com/expressjs/morgan&quot;&gt;morgan&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Custom Mongoose Plugins&lt;/h2&gt; 
&lt;p&gt;The app also contains 2 custom mongoose plugins that you can attach to any mongoose model schema. You can find the plugins in &lt;code&gt;src/models/plugins&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mongoose = require(&#39;mongoose&#39;);
const { toJSON, paginate } = require(&#39;./plugins&#39;);

const userSchema = mongoose.Schema(
  {
    /* schema definition here */
  },
  { timestamps: true }
);

userSchema.plugin(toJSON);
userSchema.plugin(paginate);

const User = mongoose.model(&#39;User&#39;, userSchema);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;toJSON&lt;/h3&gt; 
&lt;p&gt;The toJSON plugin applies the following changes in the toJSON transform call:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;removes __v, createdAt, updatedAt, and any schema path that has private: true&lt;/li&gt; 
 &lt;li&gt;replaces _id with id&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;paginate&lt;/h3&gt; 
&lt;p&gt;The paginate plugin adds the &lt;code&gt;paginate&lt;/code&gt; static method to the mongoose schema.&lt;/p&gt; 
&lt;p&gt;Adding this plugin to the &lt;code&gt;User&lt;/code&gt; model schema will allow you to do the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const queryUsers = async (filter, options) =&amp;gt; {
  const users = await User.paginate(filter, options);
  return users;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;filter&lt;/code&gt; param is a regular mongo filter.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;options&lt;/code&gt; param can have the following (optional) fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const options = {
  sortBy: &#39;name:desc&#39;, // sort order
  limit: 5, // maximum results per page
  page: 2, // page number
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The plugin also supports sorting by multiple criteria (separated by a comma): &lt;code&gt;sortBy: name:desc,role:asc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;paginate&lt;/code&gt; method returns a Promise, which fulfills with an object having the following properties:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;results&quot;: [],
  &quot;page&quot;: 2,
  &quot;limit&quot;: 5,
  &quot;totalPages&quot;: 10,
  &quot;totalResults&quot;: 48
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Linting&lt;/h2&gt; 
&lt;p&gt;Linting is done using &lt;a href=&quot;https://eslint.org/&quot;&gt;ESLint&lt;/a&gt; and &lt;a href=&quot;https://prettier.io&quot;&gt;Prettier&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In this app, ESLint is configured to follow the &lt;a href=&quot;https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb-base&quot;&gt;Airbnb JavaScript style guide&lt;/a&gt; with some modifications. It also extends &lt;a href=&quot;https://github.com/prettier/eslint-config-prettier&quot;&gt;eslint-config-prettier&lt;/a&gt; to turn off all rules that are unnecessary or might conflict with Prettier.&lt;/p&gt; 
&lt;p&gt;To modify the ESLint configuration, update the &lt;code&gt;.eslintrc.json&lt;/code&gt; file. To modify the Prettier configuration, update the &lt;code&gt;.prettierrc.json&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;To prevent a certain file or directory from being linted, add it to &lt;code&gt;.eslintignore&lt;/code&gt; and &lt;code&gt;.prettierignore&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To maintain a consistent coding style across different IDEs, the project contains &lt;code&gt;.editorconfig&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are more than welcome! Please check out the &lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Inspirations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielfsousa/express-rest-es2017-boilerplate&quot;&gt;danielfsousa/express-rest-es2017-boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/madhums/node-express-mongoose&quot;&gt;madhums/node-express-mongoose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kunalkapadia/express-mongoose-es6-rest-api&quot;&gt;kunalkapadia/express-mongoose-es6-rest-api&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player which supports M3U-playlists. You can also use the SFW version of the playlist &lt;code&gt;https://iptv-org.github.io/iptv/index.sfw.m3u&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.readme/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h3&gt;By category&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;By language&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;By country&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;languages&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;countries&quot;: [
      {
        &quot;code&quot;: &quot;us&quot;,
        &quot;name&quot;: &quot;United States&quot;
      },
      {
        &quot;code&quot;: &quot;ca&quot;,
        &quot;name&quot;: &quot;Canada&quot;
      }
    ],
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue. However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that&#39;s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;GitHub Docs 
 &lt;!-- raw HTML omitted --&gt;&lt;/h2&gt; 
&lt;p&gt;This repository contains the documentation website code and Markdown source files for &lt;a href=&quot;https://docs.github.com&quot;&gt;docs.github.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;GitHub&#39;s Docs team works on pre-production content in a private repo that regularly syncs with this public repo.&lt;/p&gt; 
&lt;p&gt;In this article:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#readmes&quot;&gt;READMEs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Start contributing right now:&lt;/h3&gt; 
&lt;p&gt;We accept a lot of &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md/#types-of-contributions-memo&quot;&gt;different contributions&lt;/a&gt;, including some that don&#39;t require you to write a single line of code.&lt;/p&gt; 
&lt;h4&gt;Click &lt;strong&gt;make a contribution&lt;/strong&gt; from docs&lt;/h4&gt; 
&lt;p&gt;As you&#39;re using GitHub Docs, you may find something in an article that you&#39;d like to add to, update, or change. Click on &lt;strong&gt;make a contribution&lt;/strong&gt; to navigate directly to that article in the codebase, so that you can begin making your contribution.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Open an issue&lt;/h4&gt; 
&lt;p&gt;If you&#39;ve found a problem, you can open an issue using a &lt;a href=&quot;https://github.com/github/docs/issues/new/choose&quot;&gt;template&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Solve an issue&lt;/h4&gt; 
&lt;p&gt;If you have a solution to one of the open issues, you will need to fork the repository and submit a pull request using the &lt;a href=&quot;https://github.com/github/docs/blob/main/CONTRIBUTING.md#pull-request-template&quot;&gt;template&lt;/a&gt; that is visible automatically in the pull request body. For more details about this process, please check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Join us in discussions&lt;/h4&gt; 
&lt;p&gt;We use GitHub Discussions to talk about all sorts of topics related to documentation and this site. For example: if you&#39;d like help troubleshooting a PR, have a great new idea, or want to share something amazing you&#39;ve learned in our docs, join us in &lt;a href=&quot;https://github.com/github/docs/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;And that&#39;s it!&lt;/h4&gt; 
&lt;p&gt;That&#39;s how you can get started easily as a member of the GitHub Documentation community. :sparkles:&lt;/p&gt; 
&lt;p&gt;If you want to know more, or you&#39;re making a more complex contribution, check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few more things to know when you&#39;re getting started with this repo:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you&#39;re having trouble with your GitHub account, contact &lt;a href=&quot;https://support.github.com/contact&quot;&gt;Support&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;We do not accept pull requests for translated content - see &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;READMEs&lt;/h2&gt; 
&lt;p&gt;In addition to the README you&#39;re reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/README.md&quot;&gt;content/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/graphql/README.md&quot;&gt;content/graphql/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/rest/README.md&quot;&gt;content/rest/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/contributing/README.md&quot;&gt;contributing/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/README.md&quot;&gt;data/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/reusables/README.md&quot;&gt;data/reusables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/variables/README.md&quot;&gt;data/variables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/liquid-tags/README.md&quot;&gt;includes/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/README.md&quot;&gt;includes/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/javascripts/README.md&quot;&gt;javascripts/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/layouts/README.md&quot;&gt;layouts/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/lib/liquid-tags/README.md&quot;&gt;lib/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/middleware/README.md&quot;&gt;middleware/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/script/README.md&quot;&gt;script/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/stylesheets/README.md&quot;&gt;stylesheets/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/tests/README.md&quot;&gt;tests/README.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The GitHub product documentation in the assets, content, and data folders are licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE&quot;&gt;CC-BY license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All other code in this repository is licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using the GitHub logos, be sure to follow the &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>john-smilga/node-express-course</title>
      <link>https://github.com/john-smilga/node-express-course</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Node and Express Tutorial&lt;/h2&gt; 
&lt;h4&gt;Contents&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Node Tutorial&lt;/li&gt; 
 &lt;li&gt;Express Tutorial&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>dappuniversity/starter_kit</title>
      <link>https://github.com/dappuniversity/starter_kit</link>
      <description>&lt;p&gt;Start building full stack dApps fast with this starter kit!&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>jhu-ep-coursera/fullstack-course4</title>
      <link>https://github.com/jhu-ep-coursera/fullstack-course4</link>
      <description>&lt;p&gt;Example code for HTML, CSS, and Javascript for Web Developers Coursera Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coursera: HTML, CSS and Javascript for Web Developers&lt;/h1&gt; 
&lt;h2&gt;Example Source Code&lt;/h2&gt; 
&lt;p&gt;This repository contains all of the example source code used in the Coursera.org course called &lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;HTML, CSS and Javascript for Web Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;Enroll now! It&#39;s free!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please check our FAQ to see if a question you want to ask on the forums has been answered already. Here is the link to the FAQ:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jhu-ep-coursera/fullstack-course4/master/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Customer Website Launched&lt;/h2&gt; 
&lt;p&gt;As part of this course we developed a &lt;em&gt;real&lt;/em&gt; website for a &lt;em&gt;real&lt;/em&gt; client. Below is a link to the final product. (&lt;em&gt;Note&lt;/em&gt;, the site is left without speed optimization to keep it exactly as it was in the course. Site optimization wasn&#39;t part of the course).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.davidchuschinabistro.com/&quot;&gt;David Chu&#39;s China Bistro Restaurant in Baltimore, MD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jychp/cloudflare-bypass</title>
      <link>https://github.com/jychp/cloudflare-bypass</link>
      <description>&lt;p&gt;Bypass Coudflare bot protection using Cloudflare Workers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bypass Cloudflare&lt;/h1&gt; 
&lt;h2&gt;General&lt;/h2&gt; 
&lt;p&gt;Related to my Medium post: &lt;a href=&quot;https://jychp.medium.com/how-to-bypass-cloudflare-bot-protection-1f2c6c0c36fb&quot;&gt;How to bypass Cloudflare bot protection&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Detailed operation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step 1: You make your request to myproxy.tk, as we will correctly set our domain on CloudFlare, you can come from Tor or a public proxy without blocking.&lt;/li&gt; 
 &lt;li&gt;Step 2: Your JS worker will forward the request, as you are already in the CloudFlare CDN, your request will be tagged (header + ip coming from CF) so you will bypass the CloudFlare security system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Important information&lt;/h3&gt; 
&lt;p&gt;As usual, CF adds at least the following headers to your headers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cf-connecting-ip: contains your real original IP&lt;/li&gt; 
 &lt;li&gt;x-forwarded-for: IP string containing your original IP&lt;/li&gt; 
 &lt;li&gt;and the original IP of the request is a CloudFlare IP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When you go through the worker:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cf-connecting-ip: contains an IP of CF (probably the server where the Worker is running)&lt;/li&gt; 
 &lt;li&gt;cf-worker: your domain name&lt;/li&gt; 
 &lt;li&gt;and the original IP of the request is a CloudFlare IP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;As you can see, your domain name appears in the headers. However it is a custom header, so few sites will log it or verify it, however beware of OPSEC.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You will also notice that the x-forwarded-for is not present for a Worker, so you must define it, because a lot of sites (using CF tutorials) use this header instead of cf-connecting-ip to know your IP original.&lt;/p&gt; 
&lt;p&gt;You will therefore have understood that in addition if the site uses x-forwarded-for you can make the site believe that you come from any IP (nice for bypassing the security linked to the IP).&lt;/p&gt; 
&lt;h2&gt;Set up&lt;/h2&gt; 
&lt;h3&gt;CloudFlare side&lt;/h3&gt; 
&lt;p&gt;First, you must have a domain for which you can change the DNS servers (a .tk domain works perfectly).&lt;/p&gt; 
&lt;p&gt;Once your CloudFlare account has been created and your servers configured, you will need to create at least one DNS entry, for example proxy.myproxy.tk to 1.2.3.4 in &lt;strong&gt;proxyfied mode&lt;/strong&gt;. The IP is irrelevant because all traffic will be intercepted by the Worker.&lt;/p&gt; 
&lt;p&gt;Then go to Firewall =&amp;gt; Firewall Rules, and add the following rule:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Field: Country
Operator: equal to
Value: Tor
Action: ByPass (then select all security rules)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You have just authorized any connection coming from Tor to connect to your domain without passing any control (therefore no blocking).&lt;/p&gt; 
&lt;p&gt;Then go to Workers =&amp;gt; Manage Workers =&amp;gt; Create a Worker, copy the code from the * worker.js * file into it. &lt;strong&gt;Remember to customize the TOKEN_HEADER, TOKEN_VALUE, HOST_HEADER and IP_HEADER values.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Now go to Workers =&amp;gt; Manage Workers =&amp;gt; Add route and configure the route:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Itinéraire: proxy.myproxy.tk/*
Worker: your_new_worker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NB: You can also put &lt;code&gt;*.myproxy.tk/*&lt;/code&gt; to capture all the subdomains.&lt;/p&gt; 
&lt;p&gt;Open https://proxy.myproxy.com in your browser, you should see the default page (&quot;Welcome to NGINX!&quot; By default.).&lt;/p&gt; 
&lt;p&gt;Now you can attempt to modify your &quot;Host&quot; headers and the authent header and you should be able to see the page.&lt;/p&gt; 
&lt;h3&gt;Python side&lt;/h3&gt; 
&lt;p&gt;Start by installing &lt;em&gt;requests&lt;/em&gt; if you haven&#39;t already.&lt;/p&gt; 
&lt;p&gt;The script is simplistic, do not hesitate to complete it according to your needs. It will create a requests session, you can then use the get / post methods as with requests.&lt;/p&gt; 
&lt;p&gt;Example&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from cfproxy import CFProxy
&amp;gt;&amp;gt;&amp;gt; proxy = CFProxy(&#39;proxy.myproxy.tk&#39;, &#39;My Fucking User-Agent&#39;, &#39;1.2.3.4&#39;)
&amp;gt;&amp;gt;&amp;gt; req = proxy.get(&#39;https://icanhazip.com&#39;)
&amp;gt;&amp;gt;&amp;gt; print(req.status_code)
200
&amp;gt;&amp;gt;&amp;gt; print(req.text)
108.162.229.50

&amp;gt;&amp;gt;&amp;gt; req = proxy.get(&#39;https://www.shodan.io&#39;)
&amp;gt;&amp;gt;&amp;gt; print(req.status_code)
200
&amp;gt;&amp;gt;&amp;gt; print(req.text)
[...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful, for your GET requests, put your parameters in a dict, and not in the URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;# Bad Way
proxy.get(&#39;https://domain.tld/index.php?id=1&#39;)
# Good Way
payload = {&#39;id&#39;: &#39;mastring qui sera urlencore proprement&#39;}
proxy.get(&#39;https://domain.tld/index.php&#39;, params=payload)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
 &lt;li&gt;First-class integration with the &lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt; for systems with no gas fees!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/audit&quot;&gt;Audited&lt;/a&gt; by leading security firms (&lt;em&gt;last full audit on v2.0.0&lt;/em&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to security@openzeppelin.org.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/project_mern_memories</title>
      <link>https://github.com/adrianhajdin/project_mern_memories</link>
      <description>&lt;p&gt;This is a code repository for the corresponding video tutorial. Using React, Node.js, Express &amp; MongoDB you&#39;ll learn how to build a Full Stack MERN Application - from start to finish. The App is called &quot;Memories&quot; and it is a simple social media app that allows users to post interesting events that happened in their lives.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Memories&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/Z8Y0CJv/Screenshot-2020-10-30-at-11-10-04.png&quot; alt=&quot;Memories&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial - https://youtube.com/playlist?list=PL6QREj8te1P7VSwhrMf3D3Xt4V6_SRkhu.&lt;/p&gt; 
&lt;p&gt;Using React, Node.js, Express &amp;amp; MongoDB you&#39;ll learn how to build a Full Stack MERN Application - from start to finish. The App is called &quot;Memories&quot; and it is a simple social media app that allows users to post interesting events that happened in their lives.&lt;/p&gt; 
&lt;p&gt;By the end of this video, you will have a strong understanding of how the MERN Stack works.&lt;/p&gt; 
&lt;p&gt;Setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;run &lt;code&gt;npm i &amp;amp;&amp;amp; npm start&lt;/code&gt; for both client and server side to start the app&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>fei-protocol/fei-protocol-core</title>
      <link>https://github.com/fei-protocol/fei-protocol-core</link>
      <description>&lt;p&gt;Smart contract code for Fei Protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fei Protocol ·&lt;/h1&gt; 
&lt;p&gt;Smart contract code for Fei Protocol and the FEI stablecoin&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.fei.money&quot;&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Fei Protocol is under &lt;a href=&quot;https://github.com/fei-protocol/fei-protocol-core/tree/7160dda163d45e6d6c7092ef021c365e0031a71f/LICENSE.md&quot;&gt;the AGPL v3 license&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>victornpb/deleteDiscordMessages</title>
      <link>https://github.com/victornpb/deleteDiscordMessages</link>
      <description>&lt;p&gt;Undiscord - Delete all messages in a Discord channel or DM (Easy and fast) Bulk delete&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Undiscord - Delete all messages in a Discord channel or DM&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;:warning: &lt;strong&gt;Any tool for deleting messages, including this one, could result in the termination of your account&lt;/strong&gt; (see &lt;a href=&quot;https://support.discordapp.com/hc/en-us/articles/115002192352-Automated-user-accounts-self-bots-&quot;&gt;self-bots&lt;/a&gt;). Discord appears to have recently started terminating accounts using self-bots (&lt;a href=&quot;https://github.com/victornpb/deleteDiscordMessages/issues/193&quot;&gt;thread&lt;/a&gt;). Use at your own risk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install a &lt;strong&gt;browser extension&lt;/strong&gt; for managing &lt;strong&gt;user scripts&lt;/strong&gt; (skip if you already have one):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Chrome: &lt;a href=&quot;https://chrome.google.com/webstore/detail/violent-monkey/jinjaccalgkegednnccohejagnlnfdag&quot;&gt;Violentmonkey&lt;/a&gt; or &lt;a href=&quot;https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo&quot;&gt;Tampermonkey&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Firefox: &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/greasemonkey/&quot;&gt;Greasemonkey&lt;/a&gt;, &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/tampermonkey/&quot;&gt;Tampermonkey&lt;/a&gt;, or &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/violentmonkey/&quot;&gt;Violentmonkey&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Safari: ~&lt;a href=&quot;https://github.com/victornpb/deleteDiscordMessages/issues/91#issuecomment-654514364&quot;&gt;Tampermonkey&lt;/a&gt;~&lt;/li&gt; 
   &lt;li&gt;Microsoft Edge: &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd&quot;&gt;Tampermonkey&lt;/a&gt; or &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/violentmonkey/eeagobfjdenkkddmbclomhiblgggliao&quot;&gt;Violentmonkey&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Opera: &lt;a href=&quot;https://addons.opera.com/extensions/details/tampermonkey-beta/&quot;&gt;Tampermonkey&lt;/a&gt; or &lt;a href=&quot;https://addons.opera.com/extensions/details/violent-monkey/&quot;&gt;Violentmonkey&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Undiscord &lt;strong&gt;
    &lt;!-- raw HTML omitted --&gt;Install from OpenUserJS
    &lt;!-- raw HTML omitted --&gt; or 
    &lt;!-- raw HTML omitted --&gt;Install from GreasyFork
    &lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open 
   &lt;!-- raw HTML omitted --&gt;Discord
   &lt;!-- raw HTML omitted --&gt; in your &lt;strong&gt;browser&lt;/strong&gt; (Not the App) and go to the Channel/Conversation you want to delete&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the &lt;em&gt;Trash icon&lt;/em&gt; that was added in the &lt;em&gt;top right corner&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click on the blue buttons near &lt;strong&gt;Authorization&lt;/strong&gt;, &lt;strong&gt;Author&lt;/strong&gt; and &lt;strong&gt;Channel&lt;/strong&gt;.&lt;br&gt; &lt;em&gt;(Optional: getting &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/authToken.md&quot;&gt;authToken&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/authorId.md&quot;&gt;authorId&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/channelId.md&quot;&gt;channelId&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/messageId.md&quot;&gt;messageId&lt;/a&gt; manually)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;START&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3372598/86538983-b60c7980-becf-11ea-8cad-1a33950e77fc.gif&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made this tool just for you ❤️ , it would be awesome if you could just click the &lt;a href=&quot;https://github.com/victornpb/deleteDiscordMessages&quot;&gt;⭐️ Star button&lt;/a&gt; at the top!&lt;/p&gt; 
&lt;p&gt;If you have issues or just need help &lt;a href=&quot;https://github.com/victornpb/deleteDiscordMessages/issues&quot;&gt;open an issue here&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A few extra generous people asked for this, so here you can &lt;a href=&quot;https://www.buymeacoffee.com/vitim&quot;&gt;buy me a coffee&lt;/a&gt;. Thank you! You&#39;ll be in my special list ^_^&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;* Looking for the old Copy/Paste version? &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/copyPaste.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h4&gt;Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fastest script out there, it auto adjusts the delay to be the fastest your internet and discords allows!&lt;/li&gt; 
 &lt;li&gt;Easy interface with instructions&lt;/li&gt; 
 &lt;li&gt;Respect discord API rate limits&lt;/li&gt; 
 &lt;li&gt;Auto detect current &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/authToken.md&quot;&gt;authToken&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/authorId.md&quot;&gt;authorId&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/channelId.md&quot;&gt;channelId&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It can delete a specific &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/messageId.md&quot;&gt;range of messages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It can delete only &lt;a href=&quot;https://raw.githubusercontent.com/victornpb/deleteDiscordMessages/master/help/filters.md&quot;&gt;links or attached files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Comprehensive log of messages being deleted (with their content)&lt;/li&gt; 
 &lt;li&gt;Hide private information for taking screenshots&lt;/li&gt; 
 &lt;li&gt;Detects system messages and skips them like &quot;You started a voice call&quot;&lt;/li&gt; 
 &lt;li&gt;You can use your computer and discord while it is running (unlike macro key scripts)&lt;/li&gt; 
 &lt;li&gt;Start/stop whenever you want&lt;/li&gt; 
 &lt;li&gt;Works with even thousands of messages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;Originally from https://gist.github.com/victornpb/135f5b346dea4decfc8f63ad7d9cc182&lt;/p&gt; 
&lt;hr&gt; 
&lt;h4&gt;About running code on your console&lt;/h4&gt; 
&lt;p&gt;I don&#39;t recommend running code from random places you get on the internet. For that same reason, I deliberately choose to make it readable (that&#39;s why it is a bit lenthy). That way people can analyze it and understand what does it does before running it, and be sure that nothing sketchy is happening under the hood.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;DO NOT SHARE YOUR &lt;code&gt;authToken&lt;/code&gt;!&lt;/h1&gt; 
&lt;p&gt;Sharing your authToken on the internet will give full access to your account! &lt;a href=&quot;https://github.com/rndinfosecguy/Scavenger&quot;&gt;There are bots gathering credentials all over the internet&lt;/a&gt;. If you post your token by accident, LOGOUT from discord on that &lt;strong&gt;same browser&lt;/strong&gt; you got that token imediately. Changing your password will make sure that you get logged out of every device. I advice that you turn on &lt;a href=&quot;https://support.discord.com/hc/en-us/articles/219576828-Setting-up-Two-Factor-Authentication&quot;&gt;2FA&lt;/a&gt; afterwards.&lt;/p&gt; 
&lt;p&gt;If you are unsure do not share screenshots, or copy paste logs on the internet.&lt;/p&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; THE SOFTWARE AND ALL INFORMATION HERE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
 &lt;p&gt;By using any code or information provided here you are agreeing to all parts of the above Disclaimer.&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>arduino/arduino-ide</title>
      <link>https://github.com/arduino/arduino-ide</link>
      <description>&lt;p&gt;Arduino IDE&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Arduino IDE 2.x (beta)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/arduino/arduino-ide/actions?query=workflow%3A%22Arduino+IDE%22&quot;&gt;&lt;img src=&quot;https://github.com/arduino/arduino-ide/workflows/Arduino%20IDE/badge.svg&quot; alt=&quot;Arduino IDE&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the source code of the Arduino IDE 2.x, which is currently in beta stage. If you&#39;re looking for the stable IDE, go to the repository of the 1.x version at https://github.com/arduino/Arduino.&lt;/p&gt; 
&lt;p&gt;The Arduino IDE 2.x is a major rewrite, sharing no code with the IDE 1.x. It is based on the &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Theia IDE&lt;/a&gt; framework and built with &lt;a href=&quot;https://www.electronjs.org/&quot;&gt;Electron&lt;/a&gt;. The backend operations such as compilation and uploading are offloaded to an &lt;a href=&quot;https://github.com/arduino/arduino-cli&quot;&gt;arduino-cli&lt;/a&gt; instance running in daemon mode. This new IDE was developed with the goal of preserving the same interface and user experience of the previous major version in order to provide a frictionless upgrade.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ This is &lt;strong&gt;beta&lt;/strong&gt; software. Help us test it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/arduino/arduino-ide/main/static/screenshot.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;You can download the latest version from the &lt;a href=&quot;https://www.arduino.cc/en/software#experimental-software&quot;&gt;software download page on the Arduino website&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Nightly builds&lt;/h3&gt; 
&lt;p&gt;These builds are generated every day at 03:00 GMT from the &lt;code&gt;main&lt;/code&gt; branch and should be considered unstable:&lt;/p&gt; 
&lt;p&gt;Platform | 32 bit | 64 bit | --------- | ------------------------ | ------------------------------------------------------------------------------------------------------ | Linux | | &lt;a href=&quot;https://downloads.arduino.cc/arduino-ide/nightly/arduino-ide_nightly-latest_Linux_64bit.zip&quot;&gt;Nightly Linux 64 bit&lt;/a&gt; | Linux ARM | &lt;a href=&quot;https://github.com/arduino/arduino-ide/issues/107&quot;&gt;🚧 Work in progress...&lt;/a&gt; | &lt;a href=&quot;https://github.com/arduino/arduino-ide/issues/107&quot;&gt;🚧 Work in progress...&lt;/a&gt; | Windows | | &lt;a href=&quot;https://downloads.arduino.cc/arduino-ide/nightly/arduino-ide_nightly-latest_Windows_64bit.exe&quot;&gt;Nightly Windows 64 bit installer&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://downloads.arduino.cc/arduino-ide/nightly/arduino-ide_nightly-latest_Windows_64bit.msi&quot;&gt;Nightly Windows 64 bit MSI&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://downloads.arduino.cc/arduino-ide/nightly/arduino-ide_nightly-latest_Windows_64bit.zip&quot;&gt;Nightly Windows 64 bit ZIP&lt;/a&gt; | macOS | | &lt;a href=&quot;https://downloads.arduino.cc/arduino-ide/nightly/arduino-ide_nightly-latest_macOS_64bit.dmg&quot;&gt;Nightly macOS 64 bit&lt;/a&gt; |&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;These links return an HTTP &lt;code&gt;302: Found&lt;/code&gt; response, redirecting to latest generated builds by replacing &lt;code&gt;latest&lt;/code&gt; with the latest available build date, using the format YYYYMMDD (i.e for 2019/Aug/06 &lt;code&gt;latest&lt;/code&gt; is replaced with &lt;code&gt;20190806&lt;/code&gt;)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you need assistance, see the &lt;a href=&quot;https://support.arduino.cc/hc/en-us/categories/360002212660-Software-and-Downloads&quot;&gt;Help Center&lt;/a&gt; and browse the &lt;a href=&quot;https://forum.arduino.cc/index.php?board=150.0&quot;&gt;forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bugs &amp;amp; Issues&lt;/h2&gt; 
&lt;p&gt;If you want to report an issue, you can submit it to the &lt;a href=&quot;https://github.com/arduino/arduino-ide/issues&quot;&gt;issue tracker&lt;/a&gt; of this repository. A few rules apply:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before posting, please check if the same problem has been already reported by someone else to avoid duplicates.&lt;/li&gt; 
 &lt;li&gt;Remember to include as much detail as you can about your hardware set-up, code and steps for reproducing the issue. Make sure you&#39;re using an original Arduino board.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security&lt;/h3&gt; 
&lt;p&gt;If you think you found a vulnerability or other security-related bug in this project, please read our &lt;a href=&quot;https://github.com/arduino/arduino-ide/security/policy&quot;&gt;security policy&lt;/a&gt; and report the bug to our Security Team 🛡️ Thank you!&lt;/p&gt; 
&lt;p&gt;e-mail contact: security@arduino.cc&lt;/p&gt; 
&lt;h2&gt;Contributions and development&lt;/h2&gt; 
&lt;p&gt;Contributions are very welcome! You can browse the list of open issues to see what&#39;s needed and then you can submit your code using a Pull Request. Please provide detailed descriptions. We also appreciate any help in testing issues and patches contributed by other users.&lt;/p&gt; 
&lt;p&gt;This repository contains the main code, but two more repositories are included during the build process:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/arduino/vscode-arduino-tools&quot;&gt;vscode-arduino-tools&lt;/a&gt;: provides support for the language server and the debugger&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/arduino/arduino-language-server&quot;&gt;arduino-language-server&lt;/a&gt;: provides the language server that parses Arduino code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/arduino/arduino-ide/main/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt; for a technical overview of the application and instructions for building the code.&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;This open source code was written by the Arduino team and is maintained on a daily basis with the help of the community. We invest a considerable amount of time in development, testing and optimization. Please consider &lt;a href=&quot;https://www.arduino.cc/en/donate/&quot;&gt;donating&lt;/a&gt; or &lt;a href=&quot;https://github.com/sponsors/arduino&quot;&gt;sponsoring&lt;/a&gt; to support our work, as well as &lt;a href=&quot;https://store.arduino.cc/&quot;&gt;buying original Arduino boards&lt;/a&gt; which is the best way to make sure our effort can continue in the long term.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The code contained in this repository and the executable distributions are licensed under the terms of the GNU AGPLv3. The executable distributions contain third-party code licensed under other compatible licenses such as GPLv2, MIT and BSD-3. If you have questions about licensing please contact us at &lt;a href=&quot;mailto:license@arduino.cc&quot;&gt;license@arduino.cc&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>olivierloverde/minutes-of-javascript</title>
      <link>https://github.com/olivierloverde/minutes-of-javascript</link>
      <description>&lt;p&gt;⭐ Collection of Javascript snippets to make you discover new exciting features, useful tips or anything that will give you a better understanding of the subtleties of JS.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/olivierloverde/minutes-of-javascript/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/olivierloverde/minutes-of-javascript.svg?style=for-the-badge&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/olivierloverde/minutes-of-javascript/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/olivierloverde/minutes-of-javascript.svg?style=for-the-badge&quot; alt=&quot;Stargazers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/olivierloverde/minutes-of-javascript/network/members&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/olivierloverde/minutes-of-javascript.svg?style=for-the-badge&quot; alt=&quot;Forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/olivierloverde/minutes-of-javascript/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/olivierloverde/minutes-of-javascript.svg?style=for-the-badge&quot; alt=&quot;Issues&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;👋 About The Project&lt;/h2&gt; 
&lt;p&gt;Javascript pieces of code to make you discover new exciting features, useful tips or anything that will give you a better understanding of the subtleties of JS. This repository serves as a central location for all theses snippets.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;⭐ Minutes listing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/01-object-search.js&quot;&gt;Switch statement vs Object Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/02-array-map-reduce.js&quot;&gt;.map() &amp;amp; .reduce()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/03-methods-for-merging-arrays.js&quot;&gt;Methods for merging (aka concatenating) arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/04-map-vs-object-literals.js&quot;&gt;Using Map() vs Object literals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/05-weakmap.js&quot;&gt;Weakmap()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/06-sets-in-es6.js&quot;&gt;Sets in ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/07-promises.js&quot;&gt;Promises&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/08-promises-async-await.js&quot;&gt;Promises Part 2.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/09-promise-all-vs-promise-allsettled.js&quot;&gt;Promise.all vs Promise.allSettled&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/10-promise-race-any-join.js&quot;&gt;Promise.race&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/11-proxies-part-1.js&quot;&gt;Proxies Part 1. introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/12-proxies-part-2-with-reflect.js&quot;&gt;Proxies Part 2. (with Reflect)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/13-proxies-part-3.js&quot;&gt;Proxies Part 3. makeReadOnly example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/14-flat-flatmap.js&quot;&gt;flat() and flatMap()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/15-fun-with-emoji.js&quot;&gt; Fun with Emoji!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/16-bizarre-javascript.js&quot;&gt;Some bizarre things in Javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/17-breaking-nested-loops.js&quot;&gt;Breaking in nested loops&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/18-eventemitter.js&quot;&gt;EventEmitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/19-implement-eventemitter-part1.js&quot;&gt;How to implement a local EventEmitter? (part 1.)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/20-implement-eventemitter-part2.spec.js&quot;&gt;How to implement a local EventEmitter? (part 2.)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/21-tips-underscore-number.js&quot;&gt;Using &quot;_&quot; in numbers for better readability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/22-map-vs-filter-vs-reduce.js&quot;&gt;Array: .map() vs .filter() vs .reduce()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/23-generator-function-yield-usage.js&quot;&gt;Generator function* and yield usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/24-usage-of-switch-with-numeric-ranges.js&quot;&gt;Usage of switch (true), an example with numeric ranges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/olivierloverde/minutes-of-javascript/main/snippets/25-symbols-property-keys-without-name-collisions.js&quot;&gt;Symbols: property keys without name collisions&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;🌈 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the Project&lt;/li&gt; 
 &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;If you&#39;re writing a new snippet, do not forget to update the 
  &lt;!-- raw HTML omitted --&gt;Minutes listing
  &lt;!-- raw HTML omitted --&gt; section accordingly&lt;/li&gt; 
 &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Open a Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;💾 License&lt;/h2&gt; 
&lt;p&gt;Distributed under the MIT License. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;✉️ Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/loverdeolivier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Twitter-black.svg?style=for-the-badge&amp;amp;logo=Twitter&amp;amp;colorB=555&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://linkedin.com/in/olivierloverde&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;colorB=555&quot; alt=&quot;Linkedin&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;🙏 Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://carbon.now.sh/&quot;&gt;Carbon&lt;/a&gt; - Create and share beautiful images of your source code&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>orkestral/venom</title>
      <link>https://github.com/orkestral/venom</link>
      <description>&lt;p&gt;Venom is the most complete javascript library for Whatsapp, 100% Open Source.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🕷Venom Bot🕸&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://s2.click/venom.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/venom-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/venom-bot.svg?color=green&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/node/v/venom-bot&quot; alt=&quot;node&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/venom-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/venom-bot.svg&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://isitmaintained.com/project/orkestral/venom&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;http://isitmaintained.com/badge/resolution/orkestral/venom.svg&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://isitmaintained.com/project/orkestral/venom&quot; title=&quot;Percentage of issues still open&quot;&gt;&lt;img src=&quot;http://isitmaintained.com/badge/open/orkestral/venom.svg&quot; alt=&quot;Percentage of issues still open&quot;&gt;&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/orkestral/venom/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/orkestral/venom/build.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/orkestral/venom/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/orkestral/venom/lint.svg?label=lint&quot; alt=&quot;Lint Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/release-it/release-it&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%93%A6%F0%9F%9A%80-release--it-e10079.svg&quot; alt=&quot;release-it&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Venom is a high-performance system developed with JavaScript to create a bot for WhatsApp, support for creating any interaction, such as customer service, media sending, sentence recognition based on artificial intelligence and all types of design architecture for WhatsApp.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Medium Posts&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;strong&gt;Access @Venom Posts In Medium&lt;/strong&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Request Support Free Group Access In Whatsapp&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;🕷🕷 Functions Venom🕷🕷&lt;/h2&gt; 
&lt;p&gt;| | | | ---------------------------------------------------------- | --- | | 🚻 Automatic QR Refresh | ✔ | | 📁 Send &lt;strong&gt;text, image, video, audio and docs&lt;/strong&gt; | ✔ | | 👥 Get &lt;strong&gt;contacts, chats, groups, group members, Block List&lt;/strong&gt; | ✔ | | 📞 Send contacts | ✔ | | Send stickers | ✔ | | Send stickers GIF | ✔ | | Multiple Sessions | ✔ | | ⏩ Forward Messages | ✔ | | 📥 Receive message | ✔ | | 👤 insert user section | ✔ | | 📍 Send location!! | ✔ | | 🕸🕸 &lt;strong&gt;and much more&lt;/strong&gt; | ✔ |&lt;/p&gt; 
&lt;p&gt;Documentation at https://orkestral.github.io/venom/index.html&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm i --save venom-bot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or for &lt;a href=&quot;https://github.com/orkestral/venom/releases/tag/nightly&quot;&gt;Nightly releases&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm i --save https://github.com/orkestral/venom/releases/download/nightly/venom-bot-nightly.tgz
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Supports ES6
// import { create, Whatsapp } from &#39;venom-bot&#39;;
const venom = require(&#39;venom-bot&#39;);

venom
  .create()
  .then((client) =&amp;gt; start(client))
  .catch((erro) =&amp;gt; {
    console.log(erro);
  });

function start(client) {
  client.onMessage((message) =&amp;gt; {
    if (message.body === &#39;Hi&#39; &amp;amp;&amp;amp; message.isGroupMsg === false) {
      client
        .sendText(message.from, &#39;Welcome Venom 🕷&#39;)
        .then((result) =&amp;gt; {
          console.log(&#39;Result: &#39;, result); //return object success
        })
        .catch((erro) =&amp;gt; {
          console.error(&#39;Error when sending: &#39;, erro); //return object error
        });
    }
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;After executing &lt;code&gt;create()&lt;/code&gt; function, &lt;strong&gt;venom&lt;/strong&gt; will create an instance of whatsapp web. If you are not logged in, it will print a QR code in the terminal. Scan it with your phone and you are ready to go!&lt;/h5&gt; 
&lt;h5&gt;Venom will remember the session so there is no need to authenticate everytime.&lt;/h5&gt; 
&lt;h5&gt;Multiples sessions can be created at the same time by pasing a session name to &lt;code&gt;create()&lt;/code&gt; function:&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Init sales whatsapp bot
venom.create(&#39;sales&#39;).then((salesClient) =&amp;gt; {...});

// Init support whatsapp bot
venom.create(&#39;support&#39;).then((supportClient) =&amp;gt; {...});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Optional create parameters&lt;/h2&gt; 
&lt;p&gt;Venom &lt;code&gt;create()&lt;/code&gt; method third parameter can have the following optional parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const venom = require(&#39;venom-bot&#39;);

venom
  .create(
    //session
    &#39;sessionName&#39;, //Pass the name of the client you want to start the bot
    //catchQR
    (base64Qrimg, asciiQR, attempts, urlCode) =&amp;gt; {
      console.log(&#39;Number of attempts to read the qrcode: &#39;, attempts);
      console.log(&#39;Terminal qrcode: &#39;, asciiQR);
      console.log(&#39;base64 image string qrcode: &#39;, base64Qrimg);
      console.log(&#39;urlCode (data-ref): &#39;, urlCode);
    },
    // statusFind
    (statusSession, session) =&amp;gt; {
      console.log(&#39;Status Session: &#39;, statusSession); //return isLogged || notLogged || browserClose || qrReadSuccess || qrReadFail || autocloseCalled || desconnectedMobile || deleteToken || chatsAvailable || deviceNotConnected || serverWssNotConnected || noOpenBrowser
      //Create session wss return &quot;serverClose&quot; case server for close
      console.log(&#39;Session name: &#39;, session);
    },
    // options
    {
      folderNameToken: &#39;tokens&#39;, //folder name when saving tokens
      mkdirFolderToken: &#39;&#39;, //folder directory tokens, just inside the venom folder, example:  { mkdirFolderToken: &#39;/node_modules&#39;, } //will save the tokens folder in the node_modules directory
      headless: true, // Headless chrome
      devtools: false, // Open devtools by default
      useChrome: true, // If false will use Chromium instance
      debug: false, // Opens a debug session
      logQR: true, // Logs QR automatically in terminal
      browserWS: &#39;&#39;, // If u want to use browserWSEndpoint
      browserArgs: [&#39;&#39;], // Parameters to be added into the chrome browser instance
      puppeteerOptions: {}, // Will be passed to puppeteer.launch
      disableSpins: true, // Will disable Spinnies animation, useful for containers (docker) for a better log
      disableWelcome: true, // Will disable the welcoming message which appears in the beginning
      updatesLog: true, // Logs info updates automatically in terminal
      autoClose: 60000, // Automatically closes the venom-bot only when scanning the QR code (default 60 seconds, if you want to turn it off, assign 0 or false)
      createPathFileToken: false, //creates a folder when inserting an object in the client&#39;s browser, to work it is necessary to pass the parameters in the function create browserSessionToken
    },
    // BrowserSessionToken
    // To receive the client&#39;s token use the function await clinet.getSessionTokenBrowser()
    {
      WABrowserId: &#39;&quot;UnXjH.....&quot;&#39;,
      WASecretBundle:
        &#39;{&quot;key&quot;:&quot;+i/nRgWJ....&quot;,&quot;encKey&quot;:&quot;kGdMR5t....&quot;,&quot;macKey&quot;:&quot;+i/nRgW....&quot;}&#39;,
      WAToken1: &#39;&quot;0i8....&quot;&#39;,
      WAToken2: &#39;&quot;1@lPpzwC....&quot;&#39;,
    },
    // BrowserInstance
    (browser, waPage) =&amp;gt; {
      console.log(&quot;Browser PID:&quot;, browser.process().pid);
      waPage.screenshot({path: &#39;screenshot.png&#39;});
    }
  )
  .then((client) =&amp;gt; {
    start(client);
  })
  .catch((erro) =&amp;gt; {
    console.log(erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Callback Status Session&lt;/h2&gt; 
&lt;p&gt;Gets the return if the session is &lt;code&gt;isLogged&lt;/code&gt; or &lt;code&gt;notLogged&lt;/code&gt; or &lt;code&gt;browserClose&lt;/code&gt; or &lt;code&gt;qrReadSuccess&lt;/code&gt; or &lt;code&gt;qrReadFail&lt;/code&gt; or &lt;code&gt;autocloseCalled&lt;/code&gt; or &lt;code&gt;desconnectedMobile&lt;/code&gt; or &lt;code&gt;deleteToken&lt;/code&gt; or &lt;code&gt;chatsAvailable&lt;/code&gt; or &lt;code&gt;deviceNotConnected&lt;/code&gt; or &lt;code&gt;serverWssNotConnected&lt;/code&gt; or &lt;code&gt;noOpenBrowser&lt;/code&gt; or &lt;code&gt;Create session wss return &quot;serverClose&quot; case server for close&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;| Status | Condition | | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | | &lt;code&gt;isLogged&lt;/code&gt; | When the user is already logged in to the browser | | &lt;code&gt;notLogged&lt;/code&gt; | When the user is not connected to the browser, it is necessary to scan the QR code through the cell phone in the option WhatsApp Web | | &lt;code&gt;browserClose&lt;/code&gt; | If the browser is closed this parameter is returned | | &lt;code&gt;qrReadSuccess&lt;/code&gt; | If the user is not logged in, the QR code is passed on the terminal a callback is returned. After the correct reading by cell phone this parameter is returned | | &lt;code&gt;qrReadFail&lt;/code&gt; | If the browser stops when the QR code scan is in progress, this parameter is returned | | &lt;code&gt;autocloseCalled&lt;/code&gt; | The browser was closed using the autoClose command | | &lt;code&gt;desconnectedMobile&lt;/code&gt; | Client has desconnected in to mobile | | &lt;code&gt;serverClose&lt;/code&gt; | Client has desconnected in to wss | | &lt;code&gt;deleteToken&lt;/code&gt; | If you pass true within the function &lt;code&gt;client.getSessionTokenBrowser(true)&lt;/code&gt; | | &lt;code&gt;chatsAvailable&lt;/code&gt; | When Venom is connected to the chat list | | &lt;code&gt;deviceNotConnected&lt;/code&gt; | Chat not available because the phone is disconnected &lt;code&gt;(Trying to connect to the phone)&lt;/code&gt; | | &lt;code&gt;serverWssNotConnected&lt;/code&gt;| The address wss was not found! | | &lt;code&gt;noOpenBrowser&lt;/code&gt; | It was not found in the browser, or some command is missing in args |&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const venom = require(&#39;venom-bot&#39;);
venom
  .create(
    &#39;sessionName&#39;,
    undefined,
    (statusSession, session) =&amp;gt; {
      console.log(&#39;Status Session: &#39;, statusSession);
      //return isLogged || notLogged || browserClose || qrReadSuccess || qrReadFail || autocloseCalled || desconnectedMobile || deleteToken || chatsAvailable || deviceNotConnected || serverWssNotConnected || noOpenBrowser
      //Create session wss return &quot;serverClose&quot; case server for close
      console.log(&#39;Session name: &#39;, session);
    },
    undefined
  )
  .then((client) =&amp;gt; {
    start(client);
  })
  .catch((erro) =&amp;gt; {
    console.log(erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Exporting QR Code&lt;/h2&gt; 
&lt;p&gt;By default QR code will appear on the terminal. If you need to pass the QR somewhere else heres how:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const fs = require(&#39;fs&#39;);
const venom = require(&#39;venom-bot&#39;);

venom
  .create(
    &#39;sessionName&#39;,
    (base64Qr, asciiQR, attempts, urlCode) =&amp;gt; {
      console.log(asciiQR); // Optional to log the QR in the terminal
      var matches = base64Qr.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/),
        response = {};

      if (matches.length !== 3) {
        return new Error(&#39;Invalid input string&#39;);
      }
      response.type = matches[1];
      response.data = new Buffer.from(matches[2], &#39;base64&#39;);

      var imageBuffer = response;
      require(&#39;fs&#39;).writeFile(
        &#39;out.png&#39;,
        imageBuffer[&#39;data&#39;],
        &#39;binary&#39;,
        function (err) {
          if (err != null) {
            console.log(err);
          }
        }
      );
    },
    undefined,
    { logQR: false }
  )
  .then((client) =&amp;gt; {
    start(client);
  })
  .catch((erro) =&amp;gt; {
    console.log(erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Downloading Files&lt;/h2&gt; 
&lt;p&gt;Puppeteer takes care of the file downloading. The decryption is being done as fast as possible (outruns native methods). Supports big files!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import fs = require(&#39;fs&#39;);
import mime = require(&#39;mime-types&#39;);

client.onMessage( async (message) =&amp;gt; {
  if (message.isMedia === true || message.isMMS === true) {
    const buffer = await client.decryptFile(message);
    // At this point you can do whatever you want with the buffer
    // Most likely you want to write it into a file
    const fileName = `some-file-name.${mime.extension(message.mimetype)}`;
    await fs.writeFile(fileName, buffer, (err) =&amp;gt; {
      ...
    });
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basic Functions (usage)&lt;/h2&gt; 
&lt;p&gt;Not every available function is listed, for further look, every function available can be found in &lt;a href=&quot;https://raw.githubusercontent.com/orkestral/venom/master/src/api/layers&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/orkestral/venom/master/src/lib/wapi/functions&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Chatting&lt;/h3&gt; 
&lt;h5&gt;Here, &lt;code&gt;chatId&lt;/code&gt; could be &lt;code&gt;&amp;lt;phoneNumber&amp;gt;@c.us&lt;/code&gt; or &lt;code&gt;&amp;lt;phoneNumber&amp;gt;-&amp;lt;groupId&amp;gt;@g.us&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
// Send audio file MP3
await client.sendVoice(&#39;000000000000@c.us&#39;, &#39;./audio.mp3&#39;).then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send audio file base64
await client.sendVoiceBase64(&#39;000000000000@c.us&#39;, base64MP3)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send contact
await client
  .sendContactVcard(&#39;000000000000@c.us&#39;, &#39;111111111111@c.us&#39;, &#39;Name of contact&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send a list of contact cards
await client
  .sendContactVcardList(&#39;000000000000@c.us&#39;, [
    &#39;111111111111@c.us&#39;,
    &#39;222222222222@c.us&#39;,
  ])
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send basic text
await client
  .sendText(&#39;000000000000@c.us&#39;, &#39;👋 Hello from venom!&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send location
await client
  .sendLocation(&#39;000000000000@c.us&#39;, &#39;-13.6561589&#39;, &#39;-69.7309264&#39;, &#39;Brasil&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Automatically sends a link with the auto generated link preview. You can also add a custom message to be added.
await client
  .sendLinkPreview(
    &#39;000000000000@c.us&#39;,
    &#39;https://www.youtube.com/watch?v=V1bFr2SWP1I&#39;,
    &#39;Kamakawiwo ole&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send image (you can also upload an image using a valid HTTP protocol)
await client
  .sendImage(
    &#39;000000000000@c.us&#39;,
    &#39;path/to/img.jpg&#39;,
    &#39;image-name&#39;,
    &#39;Caption text&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

  
// Send image file base64
await client.sendImageFromBase64(&#39;000000000000@c.us&#39;, base64Image, &quot;name file&quot;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send file (venom will take care of mime types, just need the path)
// you can also upload an image using a valid HTTP protocol
await client
  .sendFile(
    &#39;000000000000@c.us&#39;,
    &#39;path/to/file.pdf&#39;,
    &#39;file_name&#39;,
    &#39;See my file in pdf&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Sends file
// base64 parameter should have mime type already defined
await client
  .sendFileFromBase64(
    &#39;000000000000@c.us&#39;,
    base64PDF,
    &#39;file_name.pdf&#39;,
    &#39;See my file in pdf&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Generates sticker from the provided animated gif image and sends it (Send image as animated sticker)
// image path imageBase64 A valid gif and webp image is required. You can also send via http/https (http://www.website.com/img.gif)
await client
  .sendImageAsStickerGif(&#39;000000000000@c.us&#39;, &#39;./image.gif&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Generates sticker from given image and sends it (Send Image As Sticker)
// image path imageBase64 A valid png, jpg and webp image is required. You can also send via http/https (http://www.website.com/img.jpg)
await client
  .sendImageAsSticker(&#39;000000000000@c.us&#39;, &#39;./image.jpg&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Forwards messages
await client.forwardMessages(
  &#39;000000000000@c.us&#39;,
  [&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11609&#39;,&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11777&#39;]
).then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
})
.catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
});

// Send @tagged message
await client.sendMentioned(
  &#39;000000000000@c.us&#39;,
  &#39;Hello @5218113130740 and @5218243160777!&#39;,
  [&#39;5218113130740&#39;, &#39;5218243160777&#39;]
);

// Reply to a message
await client.reply(
  &#39;000000000000@c.us&#39;,
  &#39;This is a reply!&#39;,
  &#39;true_551937311025@c.us_7C22WHCB6DKYHJKQIEN9&#39;
).then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
}).catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
});

// Send message with options
await client.
        .sendMessageOptions(
          &#39;000000000000@c.us&#39;,
          &#39;This is a reply!&#39;,
           {
              quotedMessageId: reply,
            }
        )
        .then((retorno) =&amp;gt; {
          resp = retorno;
        })
        .catch((e) =&amp;gt; {
          console.log(e);
        });

// Send gif
await client.sendVideoAsGif(
  &#39;000000000000@c.us&#39;,
  &#39;path/to/video.mp4&#39;,
  &#39;video.gif&#39;,
  &#39;Gif image file&#39;
);

//checks and returns whether a message and a reply
// exemple: 
// await client.onMessage(async (message) =&amp;gt; {
//     console.log(await client.returnReply(message)); // replicated message
//     console.log(message.body ); //customer message
//   })
checkReply = await client.returnReply(messagem);

// Send seen ✔️✔️
await client.sendSeen(&#39;000000000000@c.us&#39;);

// Start typing...
await client.startTyping(&#39;000000000000@c.us&#39;);

// Stop typing
await client.stopTyping(&#39;000000000000@c.us&#39;);

// Set chat state (0: Typing, 1: Recording, 2: Paused)
await client.setChatState(&#39;000000000000@c.us&#39;, 0 | 1 | 2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Retrieving Data&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Retrieve all chats
const chats = await client.getAllChats();

//Retrieves all chats new messages
const chatsAllNew = getAllChatsNewMsg();

//Retrieves all chats Contacts
const contacts = await client.getAllChatsContacts();

//Retrieve all contacts new messages
const contactNewMsg = await client.getChatContactNewMsg();

// Retrieve all groups
const chats = await client.getAllChatsGroups();

//Retrieve all groups new messages
const groupNewMsg = await client.getChatGroupNewMsg();

//Retrieves all chats Transmission list
const transmission = await client.getAllChatsTransmission();

// Retrieve contacts
const contacts = await client.getAllContacts();

// Returns a list of mute and non-mute users
// &quot;all&quot; List all mutes
// &quot;toMute&quot; List all silent chats
// &quot;noMute&quot; List all chats without silence
const listMute = await client.getListMute(&#39;all&#39;);

// Retrieve the browser session token
// if you want to delete the token file -&amp;gt; const browserSessionToken = await client.getSessionTokenBrowser(true);
const browserSessionToken = await client.getSessionTokenBrowser();

// Calls your list of blocked contacts (returns an array)
const getBlockList = await client.getBlockList();

// Retrieve messages in chat
//chatID chat id
//includeMe will be by default true, if you do not want to pass false
//includeNotifications will be by default true, if you do not want to pass false
//const Messages = await client.getAllMessagesInChat(chatID, includeMe, includeNotifications)
const Messages = await client.getAllMessagesInChat(&#39;000000000000@c.us&#39;);

// Retrieve more chat message
const moreMessages = await client.loadEarlierMessages(&#39;000000000000@c.us&#39;);

// Retrieve all messages in chat
const allMessages = await client.loadAndGetAllMessagesInChat(
  &#39;000000000000@c.us&#39;
);

// Retrieve contact status
const status = await client.getStatus(&#39;000000000000@c.us&#39;);

// Retrieve user profile
const user = await client.getNumberProfile(&#39;000000000000@c.us&#39;);

// Retrieve all unread message
const messages = await client.getAllUnreadMessages();

// Retrieve profile fic (as url)
const url = await client.getProfilePicFromServer(&#39;000000000000@c.us&#39;);

// Retrieve chat/conversation
const chat = await client.getChat(&#39;000000000000@c.us&#39;);

// Check if the number exists
const chat = await client.checkNumberStatus(&#39;000000000000@c.us&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Group Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// groupId or chatId: leaveGroup 52123123-323235@g.us

// Leave group
await client.leaveGroup(&#39;00000000-000000@g.us&#39;);

// Get group members
await client.getGroupMembers(&#39;00000000-000000@g.us&#39;);

// Get group members ids
await client.getGroupMembersIds(&#39;00000000-000000@g.us&#39;);

// Generate group invite url link
await client.getGroupInviteLink(&#39;00000000-000000@g.us&#39;);

// Create group (title, participants to add)
await client.createGroup(&#39;Group name&#39;, [
  &#39;111111111111@c.us&#39;,
  &#39;222222222222@c.us&#39;,
]);

// Remove participant
await client.removeParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Add participant
await client.addParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Promote participant (Give admin privileges)
await client.promoteParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Demote particiapnt (Revoke admin privileges)
await client.demoteParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Get group admins
await client.getGroupAdmins(&#39;00000000-000000@g.us&#39;);

// Return the group status, jid, description from it&#39;s invite link
await client.getGroupInfoFromInviteLink(InviteCode);

// Join a group using the group invite code
await client.joinGroup(InviteCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Profile Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Set client status
await client.setProfileStatus(&#39;On vacations! ✈️&#39;);

// Set client profile name
await client.setProfileName(&#39;Venom bot&#39;);

// Set client profile photo
await client.setProfilePic(&#39;path/to/image.jpg&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Device Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Delete the Service Worker
await client.killServiceWorker();

// Load the service again
await client.restartService();

// Get device info
await client.getHostDevice();

// Get connection state
await client.getConnectionState();

// Get battery level
await client.getBatteryLevel();

// Is connected
await client.isConnected();

// Get whatsapp web version
await client.getWAVersion();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Listen to messages
client.onMessage(message =&amp;gt; {
  ...
})

// Listen to state changes
client.onStateChange(state =&amp;gt; {
  ...
});

// Listen to ack&#39;s
// See the status of the message when sent.
// When receiving the confirmation object, &quot;ack&quot; may return a number, look {@link AckType} for details:
// -7 = MD_DOWNGRADE,
// -6 = INACTIVE,
// -5 = CONTENT_UNUPLOADABLE,
// -4 = CONTENT_TOO_BIG,
// -3 = CONTENT_GONE,
// -2 = EXPIRED,
// -1 = FAILED,
//  0 = CLOCK,
//  1 = SENT,
//  2 = RECEIVED,
//  3 = READ,
//  4 = PLAYED =

client.onAck(ack =&amp;gt; {
  ...
});

// Listen to live location
// chatId: &#39;phone@c.us&#39;
client.onLiveLocation(&quot;000000000000@c.us&quot;, (liveLocation) =&amp;gt; {
  ...
});

// chatId looks like this: &#39;5518156745634-1516512045@g.us&#39;
// Event interface is in here: https://github.com/s2click/venom/blob/master/src/api/model/participant-event.ts
client.onParticipantsChanged(&quot;000000000000@c.us&quot;, (event) =&amp;gt; {
  ...
});

// Listen when client has been added to a group
client.onAddedToGroup(chatEvent =&amp;gt; {
  ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Pin chat and Unpin chat messages with true or false
// Pin chat, non-existent (optional)

await client
  .pinChat(chatId, true, false)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

///mute a contact
await client
  .sendMute(
    &#39;000000000000@c.us&#39;, //contact mute
    30, //duration of silence, example: 30 minutes
    &#39;minutes&#39; ///kind of silence &quot;hours&quot; &quot;minutes&quot; &quot;year&quot;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

///unmute contact
await client
  .sendMute(
    &#39;000000000000@c.us&#39; //contact unmute
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Change the theme
// string types &quot;dark&quot; or &quot;light&quot;
await client.setTheme(&#39;dark&#39;);

// Receive the current theme
// returns string light or dark
await client.getTheme();

// Delete chat
await client.deleteChat(&#39;000000000000@c.us&#39;);

// Clear chat messages
await client.clearChatMessages(&#39;000000000000@c.us&#39;);

// Archive and unarchive chat messages with true or false
await client.archiveChat(chatId, true);

// Delete message (last parameter: delete only locally)
await client.deleteMessage(&#39;000000000000@c.us&#39;, [&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11609&#39;,&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11777&#39;],)
.then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
})
.catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
});

// Mark chat as not seen (returns true if it works)
await client.markUnseenMessage(&#39;000000000000@c.us&#39;);

// Blocks a user (returns true if it works)
await client.blockContact(&#39;000000000000@c.us&#39;);

// Unlocks contacts (returns true if it works)
await client.unblockContact(&#39;000000000000@c.us&#39;);

// Retrieve a number profile / check if contact is a valid whatsapp number
const profile = await client.getNumberProfile(&#39;000000000000@c.us&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Misc&lt;/h2&gt; 
&lt;p&gt;There are some tricks for a better usage of venom.&lt;/p&gt; 
&lt;h4&gt;Keep session alive:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// function to detect conflits and change status
// Force it to keep the current session
// Possible state values:
// CONFLICT
// CONNECTED
// DEPRECATED_VERSION
// OPENING
// PAIRING
// PROXYBLOCK
// SMB_TOS_BLOCK
// TIMEOUT
// TOS_BLOCK
// UNLAUNCHED
// UNPAIRED
// UNPAIRED_IDLE
client.onStateChange((state) =&amp;gt; {
  console.log(&#39;State changed: &#39;, state);
  // force whatsapp take over
  if (&#39;CONFLICT&#39;.includes(state)) client.useHere();
  // detect disconnect on whatsapp
  if (&#39;UNPAIRED&#39;.includes(state)) console.log(&#39;logout&#39;);
});

// DISCONNECTED
// SYNCING
// RESUMING
// CONNECTED
let time = 0;
client.onStreamChange((state) =&amp;gt; {
  console.log(&#39;State Connection Stream: &#39; + state);
  clearTimeout(time);
  if (state === &#39;DISCONNECTED&#39; || state === &#39;SYNCING&#39;) {
    time = setTimeout(() =&amp;gt; {
      client.close();
    }, 80000);
  }
});

// function to detect incoming call
client.onIncomingCall(async (call) =&amp;gt; {
  console.log(call);
  client.sendText(call.peerJid, &quot;Sorry, I still can&#39;t answer calls&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Closing (saving) sessions&lt;/h4&gt; 
&lt;p&gt;Close the session properly to ensure the session is saved for the next time you log in (So it won&#39;t ask for QR scan again). So instead of CTRL+C,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Catch ctrl+C
process.on(&#39;SIGINT&#39;, function() {
  client.close();
});

// Try-catch close
try {
   ...
} catch (error) {
   client.close();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Auto closing unsynced sessions&lt;/h3&gt; 
&lt;p&gt;The auto close is enabled by default and the timeout is set to 60 sec. Receives the time in milliseconds to countdown until paired.&lt;/p&gt; 
&lt;p&gt;Use &quot;autoClose: 0 | false&quot; to disable auto closing.&lt;/p&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Building venom is really simple altough it contains 3 main projects inside&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Wapi project&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:wapi
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Middleware&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:middleware
&amp;gt; npm run build:jsQR
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Venom&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:venom
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the entire project just run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;Maintainers are needed, I cannot keep with all the updates by myself. If you are interested please open a Pull Request.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vfat-tools/vfat-tools</title>
      <link>https://github.com/vfat-tools/vfat-tools</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;yieldfarming.info&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;It ain&#39;t much, but it&#39;s honest work&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;App : https://vfat.tools&lt;/p&gt; 
&lt;p&gt;Original work: https://yieldfarming.info&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jonasschmedtmann/complete-javascript-course</title>
      <link>https://github.com/jonasschmedtmann/complete-javascript-course</link>
      <description>&lt;p&gt;Starter files, final projects and FAQ for my Complete JavaScript course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Course Material and FAQ for my Complete JavaScript Course&lt;/h1&gt; 
&lt;p&gt;This repo contains starter files and final code for all sections and projects contained in the course.&lt;/p&gt; 
&lt;p&gt;Use starter code to start each section, and &lt;strong&gt;final code to compare it with your own code whenever something doesn&#39;t work&lt;/strong&gt;!&lt;/p&gt; 
&lt;p&gt;👇 &lt;strong&gt;&lt;em&gt;Please read the following Frequently Asked Questions (FAQ) carefully before starting the course&lt;/em&gt;&lt;/strong&gt; 👇&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Q1: How do I download the files?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; If you&#39;re new to GitHub and just want to download the entire code, hit the green button saying &quot;Code&quot;, and then choose the &quot;Download ZIP&quot; option. If you can&#39;t see the button (on mobile), use &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/archive/master.zip&quot;&gt;this link&lt;/a&gt; instead.&lt;/p&gt; 
&lt;h3&gt;Q2: I&#39;m looking for the old course version (v1) files. Where can I find them?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; They are in this same repo, but in the &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1 branch&lt;/a&gt;. So just go to &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1&lt;/a&gt;, and download the code from there.&lt;/p&gt; 
&lt;h3&gt;Q3: I&#39;m stuck! Where do I get help?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Have you actually tried to fix the problem on your own? Have you compared your code to the final code? If you failed fixing your problem, please &lt;strong&gt;post a detailed description of the problem to the Q&amp;amp;A area of that video over at Udemy&lt;/strong&gt;, along with a &lt;a href=&quot;https://codepen.io/pen/&quot;&gt;codepen&lt;/a&gt; containing your code. You will get help there. Please don&#39;t send me a personal message or email to fix coding problems.&lt;/p&gt; 
&lt;h3&gt;Q4: What VSCode theme are you using?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; I use Monokai Pro for all my coding and course production. It&#39;s a paid theme (I&#39;, &lt;strong&gt;not&lt;/strong&gt; affiliated with them), but you can actually use the free demo version forever 😅&lt;/p&gt; 
&lt;h3&gt;Q5: Can I see a final version of the course projects?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Sure! Here you go:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pig-game-v2.netlify.app&quot;&gt;Pig Game&lt;/a&gt; (DOM Manipulation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist.netlify.app/&quot;&gt;Bankist&lt;/a&gt; (Arrays, Numbers, Dates, Timers. Fake &quot;log in&quot; with user &lt;code&gt;js&lt;/code&gt; and PIN &lt;code&gt;1111&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist-dom.netlify.app/&quot;&gt;Bankist Site&lt;/a&gt; (Advanced DOM and Events)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mapty.netlify.app/&quot;&gt;Mapty&lt;/a&gt; (OOP, Geolocation, Project planning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forkify-v2.netlify.app/&quot;&gt;forkify&lt;/a&gt; (Final advanced project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q6: Videos don&#39;t load, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Unfortunately, there is nothing I can do about it. The course is hosted on Udemy, and sometimes they have technical issues like this. Please just come back a bit later or &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact their support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q7: Videos are blurred / have low quality, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Please open video settings and change the quality from &#39;Auto&#39; to another value, for example 720p. If that doesn&#39;t help, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q8: Are the videos downloadable?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Yes! I made all videos downloadable from Udemy so you can learn even without an internet connection. To download a video, use the settings icon in the right bottom corner of the video player. Videos have to be downloaded individually.&lt;/p&gt; 
&lt;h3&gt;Q9: I want to put these projects in my portfolio. Is that allowed?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Absolutely! Just make sure you actually built them yourself by following the course, and that you understand what you did. What is &lt;strong&gt;not allowed&lt;/strong&gt; is that you create your own course/videos/articles based on this course&#39;s content!&lt;/p&gt; 
&lt;h3&gt;Q10: You mentioned your resources page. Where can I find it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; It&#39;s on my website at &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;http://codingheroes.io/resources&lt;/a&gt;. You can subscribe for updates 😉&lt;/p&gt; 
&lt;h3&gt;Q11: I love your courses and want to get updates on new courses. How?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; First, you can subscribe to my email list &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;at my website&lt;/a&gt;. Plus, I make important announcements on twitter &lt;a href=&quot;https://twitter.com/jonasschmedtman&quot;&gt;@jonasschmedtman&lt;/a&gt;, so you should definitely follow me there 🔥&lt;/p&gt; 
&lt;h3&gt;Q12: How do I get my certificate of completion?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; A certificate of completion is provided by Udemy after you complete 100% of the course. After completing the course, just click on the &quot;Your progress&quot; indicator in the top right-hand corner of the course page. If you want to change your name on the certificate, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q13: Can you add subtitles in my language?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No. I provide professional English captions, but Udemy is responsible for subtitles in all other languages (automatic translations). So please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt; to request your own language.&lt;/p&gt; 
&lt;h3&gt;Q14: Do you accept pull requests?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No, for the simple reason that I want this repository to contain the &lt;em&gt;exact&lt;/em&gt; same code that is shown in the videos. However, please feel free to add an issue if you found one.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card&quot;&gt;GitHub Stats Card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins&quot;&gt;GitHub Extra Pins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card&quot;&gt;Top Languages Card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-week-stats&quot;&gt;Wakatime Week Stats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&quot;&gt;Themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;Customization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own-vercel-instance&quot;&gt;Deploy Yourself&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy-paste this into your markdown content, and that&#39;s it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub&#39;s username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Available ranks are S+ (top 1%), S (top 25%), A++ (top 45%), A+ (top 60%), and B+ (everyone). The values are calculated by using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cumulative_distribution_function&quot;&gt;cumulative distribution function&lt;/a&gt; using commits, contributions, issues, stars, pull requests, followers, and owned repositories. The implementation can be investigated at &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/src/calculateRank.js&quot;&gt;src/calculateRank.js&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;To hide any specific stats, you can pass a query parameter &lt;code&gt;?hide=&lt;/code&gt; with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding private contributions count to total commits count&lt;/h3&gt; 
&lt;p&gt;You can add the count of all your private contributions to the total commits count by using the query parameter &lt;code&gt;?count_private=true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: If you are deploying this project yourself, the private contributions will be counted by default otherwise you need to chose to share your private contribution counts.&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;count_private=true&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;count_private=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;?theme=THEME_NAME&lt;/code&gt; parameter like so :-&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes :-&lt;/h4&gt; 
&lt;p&gt;dark, radical, merko, gruvbox, tokyonight, onedark, cobalt, synthwave, highcontrast, dracula&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can look at a preview for &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&quot;&gt;all available themes&lt;/a&gt; or checkout the &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js&quot;&gt;theme config file&lt;/a&gt; &amp;amp; &lt;strong&gt;you can also contribute new themes&lt;/strong&gt; if you like :D&lt;/p&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of your &lt;code&gt;Stats Card&lt;/code&gt; or &lt;code&gt;Repo Card&lt;/code&gt; however you wish with URL params.&lt;/p&gt; 
&lt;h4&gt;Common Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;title_color&lt;/code&gt; - Card&#39;s title color &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;text_color&lt;/code&gt; - Body text color &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;icon_color&lt;/code&gt; - Icons color if available &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bg_color&lt;/code&gt; - Card&#39;s background color &lt;em&gt;(hex color)&lt;/em&gt; &lt;strong&gt;or&lt;/strong&gt; a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_border&lt;/code&gt; - Hides the card&#39;s border &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;theme&lt;/code&gt; - name of the theme, choose from &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&quot;&gt;all available themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cache_seconds&lt;/code&gt; - set the cache header manually &lt;em&gt;(min: 1800, max: 86400)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;locale&lt;/code&gt; - set the language in the card &lt;em&gt;(e.g. cn, de, es, etc.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;border_radius&lt;/code&gt; - Corner rounding on the card_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in bg_color option to render a gradient, the format of the gradient is :-&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note on cache: Repo cards have a default cache of 4 hours (14400 seconds) if the fork count &amp;amp; star count is less than 1k, otherwise, it&#39;s 2 hours (7200 seconds). Also, note that the cache is clamped to a minimum of 2 hours and a maximum of 24 hours.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Stats Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hides the specified items from stats &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_rank&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt; hides the rank and automatically resizes the card width&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;show_icons&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;include_all_commits&lt;/code&gt; - Count total commits instead of just the current year commits &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;count_private&lt;/code&gt; - Count private commits &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;line_height&lt;/code&gt; - Sets the line-height between text &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;disable_animations&lt;/code&gt; - Disables all animations in the card &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Repo Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;show_owner&lt;/code&gt; - Show the repo&#39;s owner name &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Language Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hide the languages specified from the card &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;layout&lt;/code&gt; - Switch between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;card_width&lt;/code&gt; - Set the card&#39;s width manually &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;langs_count&lt;/code&gt; - Show more languages on the card, between 1-10, defaults to 5 &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;exclude_repo&lt;/code&gt; - Exclude specified repositories &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;:warning: &lt;strong&gt;Important:&lt;/strong&gt; Language names should be uri-escaped, as specified in &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding&quot;&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href=&quot;https://www.urlencoder.org/&quot;&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Wakatime Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;line_height&lt;/code&gt; - Sets the line-height between text &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_progress&lt;/code&gt; - Hides the progress bar and percentage &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;layout&lt;/code&gt; - Switch between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_domain&lt;/code&gt; - Set a custom API domain for the card, e.g. to use services like &lt;a href=&quot;https://github.com/mujx/hakatime&quot;&gt;Hakatime&lt;/a&gt; or &lt;a href=&quot;https://github.com/muety/wakapi&quot;&gt;Wakapi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;range&lt;/code&gt; – Request a range different from your WakaTime default, e.g. &lt;code&gt;last_7_days&lt;/code&gt;. See &lt;a href=&quot;https://wakatime.com/developers#stats&quot;&gt;WakaTime API docs&lt;/a&gt; for list of available options.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&quot; alt=&quot;Readme Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;show_owner&lt;/a&gt; variable to include the repo&#39;s owner username&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true&quot; alt=&quot;Readme Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card show a GitHub user&#39;s most frequently used top language.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NOTE: Top Languages does not indicate my skill level or anything like that, it&#39;s a GitHub metric of which languages have the most code on GitHub. It&#39;s a new feature of github-readme-stats.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;?exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;?hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 10 (inclusive), and the default is 5.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Wakatime Week Stats&lt;/h1&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href=&quot;https://wakatime.com&quot;&gt;Wakatime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![willianrod&#39;s wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=willianrod)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&amp;amp;hide_progress=true&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&amp;amp;layout=compact&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;All Demos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&quot;&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&quot; alt=&quot;Customized Card&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wakatime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Quick Tip (Align The Repo Cards)&lt;/h3&gt; 
&lt;p&gt;You usually won&#39;t be able to layout the images side by side. To do that you can use this approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&amp;gt;
  &amp;lt;img align=&quot;center&quot; src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href=&quot;https://github.com/anuraghazra/convoychat&quot;&amp;gt;
  &amp;lt;img align=&quot;center&quot; src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat&quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploy on your own Vercel instance&lt;/h2&gt; 
&lt;h4&gt;&lt;a href=&quot;https://youtu.be/n6d4KHSKqGk?t=107&quot;&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you don&#39;t have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;p&gt;NOTE: Since &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/pull/58&quot;&gt;#58&lt;/a&gt; we should be able to handle more than 5k requests and have no issues with downtime :D&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://vercel.com/button&quot; alt=&quot;Deploy to Vercel&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to &lt;a href=&quot;https://vercel.com/&quot;&gt;vercel.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/tct1wg.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/btd78j.jpeg&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Sign into GitHub and allow access to all repositories, if prompted&lt;/li&gt; 
 &lt;li&gt;Fork this repo&lt;/li&gt; 
 &lt;li&gt;Go back to your &lt;a href=&quot;https://vercel.com/dashboard&quot;&gt;Vercel dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Select &lt;code&gt;Import Project&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/qckos0.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Select &lt;code&gt;Import Git Repository&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/pqub9q.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Select root and keep everything as is, just add your environment variable named PAT_1 (as shown), which will contain a personal access token (PAT), which you can easily create &lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;here&lt;/a&gt; (leave everything as is, just name it something, it can be anything you want) &lt;img src=&quot;https://files.catbox.moe/0ez4g7.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Click deploy, and you&#39;re good to go. See your domains to use the API!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;:sparkling_heart: Support the project&lt;/h2&gt; 
&lt;p&gt;I open-source almost everything I can, and I try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are few ways you can do it :-&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project :rocket:&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.me/anuraghazra&quot;&gt;&lt;img src=&quot;https://ionicabizau.github.io/badges/paypal.svg&quot; alt=&quot;paypal.me/anuraghazra&quot;&gt;&lt;/a&gt; - You can make one-time donations via PayPal. I&#39;ll probably buy a ~~coffee~~ tea. :tea:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! :heart:&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true&quot; alt=&quot;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with :heart: and JavaScript.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mwittrien/BetterDiscordAddons</title>
      <link>https://github.com/mwittrien/BetterDiscordAddons</link>
      <description>&lt;p&gt;A series of plugins and themes for BetterDiscord.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://github.com/rauenzi/BetterDiscordApp&quot;&gt;BetterDiscord&lt;/a&gt; Addons &lt;a href=&quot;https://paypal.me/MircoWittrien&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Paypal-Donate!-%23003087.svg?logo=paypal&amp;amp;style=flat&quot; alt=&quot;Paypal&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://patreon.com/MircoWittrien&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Patreon-Support!-%23F96854.svg?logo=patreon&amp;amp;style=flat&quot; alt=&quot;Patreon&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;A series of plugins and themes for BetterDiscord. If you got any questions hit me up on Discord DevilBro#4401&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/mwittrien/BetterDiscordAddons/tree/master/Plugins/&quot;&gt;Plugins&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/mwittrien/BetterDiscordAddons/tree/master/Themes/&quot;&gt;Themes&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Copyright (C) 2020 Mirco Wittrien&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bradtraversy/proshop_mern</title>
      <link>https://github.com/bradtraversy/proshop_mern</link>
      <description>&lt;p&gt;Shopping cart built with MERN &amp; Redux&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ProShop eCommerce Platform&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;eCommerce platform built with the MERN stack &amp;amp; Redux.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This is the course project for my &lt;a href=&quot;https://www.udemy.com/course/mern-ecommerce&quot;&gt;MERN eCommerce From Scratch&lt;/a&gt; course&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/bradtraversy/proshop_mern/blob/master/uploads/Screen%20Shot%202020-09-29%20at%205.50.52%20PM.png&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full featured shopping cart&lt;/li&gt; 
 &lt;li&gt;Product reviews and ratings&lt;/li&gt; 
 &lt;li&gt;Top products carousel&lt;/li&gt; 
 &lt;li&gt;Product pagination&lt;/li&gt; 
 &lt;li&gt;Product search feature&lt;/li&gt; 
 &lt;li&gt;User profile with orders&lt;/li&gt; 
 &lt;li&gt;Admin product management&lt;/li&gt; 
 &lt;li&gt;Admin user management&lt;/li&gt; 
 &lt;li&gt;Admin Order details page&lt;/li&gt; 
 &lt;li&gt;Mark orders as delivered option&lt;/li&gt; 
 &lt;li&gt;Checkout process (shipping, payment method, etc)&lt;/li&gt; 
 &lt;li&gt;PayPal / credit card integration&lt;/li&gt; 
 &lt;li&gt;Database seeder (products &amp;amp; users)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Note on Issues&lt;/h2&gt; 
&lt;p&gt;Please do not post issues here that are related to your own code when taking the course. Add those in the Udemy Q/A. If you clone THIS repo and there are issues, then you can submit&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;ES Modules in Node&lt;/h3&gt; 
&lt;p&gt;We us ECMAScript Modules in the backend in this project. Be sure to have at least Node v14.6+ or you will need to add the &quot;--experimental-modules&quot; flag.&lt;/p&gt; 
&lt;p&gt;Also, when importing a file (not a package), be sure to add .js at the end or you will get a &quot;module not found&quot; error&lt;/p&gt; 
&lt;p&gt;You can also install and setup Babel if you would like&lt;/p&gt; 
&lt;h3&gt;Env Variables&lt;/h3&gt; 
&lt;p&gt;Create a .env file in then root and add the following&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NODE_ENV = development
PORT = 5000
MONGO_URI = your mongodb uri
JWT_SECRET = &#39;abc123&#39;
PAYPAL_CLIENT_ID = your paypal client id
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install Dependencies (frontend &amp;amp; backend)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm install
cd frontend
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;# Run frontend (:3000) &amp;amp; backend (:5000)
npm run dev

# Run backend only
npm run server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build &amp;amp; Deploy&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;# Create frontend prod build
cd frontend
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is a Heroku postbuild script, so if you push to Heroku, no need to build manually for deployment to Heroku&lt;/p&gt; 
&lt;h3&gt;Seed Database&lt;/h3&gt; 
&lt;p&gt;You can use the following commands to seed the database with some sample users and products as well as destroy all data&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Import data
npm run data:import

# Destroy data
npm run data:destroy
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;Sample User Logins

admin@example.com (Admin)
123456

john@example.com (Customer)
123456

jane@example.com (Customer)
123456
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The MIT License&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2020 Traversy Media https://traversymedia.com&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flybywiresim/a32nx</title>
      <link>https://github.com/flybywiresim/a32nx</link>
      <description>&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/UjzuHMU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub latest release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt; 
&lt;p&gt;The following aircraft configuration is currently simulated:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Model      A320-251N
Engine     LEAP 1A-26
FMGS       Honeywell Pegasus II
FWC Std.   H2F9C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that this configuration may change in the future as the A32NX project evolves and changes.&lt;/p&gt; 
&lt;h3&gt;SimBrief Integration&lt;/h3&gt; 
&lt;p&gt;✈&lt;a href=&quot;https://www.simbrief.com/system/dispatch.php?sharefleet=eyJ0cyI6IjE2MDU4MjAwNzg5NDYiLCJiYXNldHlwZSI6IkEzMjAiLCJjb21tZW50cyI6IkZMWSBCWSBXSVJFIiwiaWNhbyI6IkEyME4iLCJuYW1lIjoiQTMyME5FTyBGQlciLCJlbmdpbmVzIjoiTEVBUC0xQTI2IiwicmVnIjoiQTIwTiIsImZpbiI6IiIsInNlbGNhbCI6IiIsImhleGNvZGUiOiIiLCJjYXQiOiJNIiwicGVyIjoiQyIsImVxdWlwIjoiU0RFM0ZHSElSV1kiLCJ0cmFuc3BvbmRlciI6IkxCMSIsInBibiI6IkExQjFDMUQxTzFTMSIsImV4dHJhcm1rIjoiIiwibWF4cGF4IjoiMTgwIiwid2d0dW5pdHMiOiJLR1MiLCJvZXciOiI0MTAwMCIsIm16ZnciOiI2MjUwMCIsIm10b3ciOiI3OTAwMCIsIm1sdyI6IjY2MDAwIiwibWF4ZnVlbCI6IjIxMjczIiwicGF4d2d0IjoiMTA0IiwiZGVmYXVsdGNpIjoiIiwiZnVlbGZhY3RvciI6IlAwMCIsImNydWlzZW9mZnNldCI6IlAwMDAwIn0-&quot;&gt;SimBrief Airframe with the correct weights&lt;/a&gt; Credits: &lt;a href=&quot;https://github.com/viniciusfont&quot;&gt;@viniciusfont&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Pilot ID can be found in the Optional Entries section of the Dispatch Options page.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; The development (master) and experimental versions have been forked as a separate package/aircraft in MSFS, and will appear separate from the default A320neo. Existing Asobo A320neo liveries will be incompatible with the new package.&lt;/p&gt; 
&lt;h3&gt;A32NX Installer&lt;/h3&gt; 
&lt;p&gt;Download the new A32NX installer where you can select either the Stable or Developer build, and download and install the mod directly into your community folder, &lt;a href=&quot;https://api.flybywiresim.com/installer&quot;&gt;download here&lt;/a&gt; (&lt;a href=&quot;https://github.com/flybywiresim/installer/&quot;&gt;source&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Traditional Download Methods&lt;/h3&gt; 
&lt;h4&gt;Latest Stable Release&lt;/h4&gt; 
&lt;p&gt;This is the recommended stable release, as it has been thoroughly tested.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest/download/flybywiresim-a32nx.zip&quot;&gt;Download the stable release here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can see the changelog on the releases page: &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases&quot;&gt;View Here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build&lt;/h4&gt; 
&lt;p&gt;This has the latest features, but is much more unstable, use at your own risk.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/download/vmaster/A32NX-master.zip&quot;&gt;Download developer build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/tag/vmaster&quot;&gt;View info about the latest build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build (with custom autopilot)&lt;/h4&gt; 
&lt;p&gt;This version is the same as the regular master/development version, but with the WIP custom fly-by-wire, autopilot and autothrust system. Expect issues with autopilot, engines, autothrust and the PFD if you intend to use this version. No support will be provided via Discord.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://api.flybywiresim.com/api/v1/download?url=https://flybywiresim-packages.b-cdn.net/vmaster-cfbw-cap/A32NX-master-cfbw-cap.zip&quot;&gt;Download custom autopilot development build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/tree/autopilot/docs&quot;&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; view warnings and info for the custom autopilot build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Please follow ALL steps in this README if you encounter any issues with installation before seeking support.&lt;/h3&gt; 
&lt;p&gt;Open the zip that you downloaded from one of the links above, and drag the A32NX folder inside the zip into your Community folder.&lt;/p&gt; 
&lt;p&gt;See below for the location of your Community folder:&lt;/p&gt; 
&lt;p&gt;For the Microsoft Store edition AND/OR Gamepass edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\Packages\Microsoft.FlightSimulator_&amp;lt;RANDOMLETTERS&amp;gt;\LocalCache\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Steam edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Roaming\Microsoft Flight Simulator\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Boxed edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\MSFSPackages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above methods do not work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can find your community folder by going into FS2020 general options and enabling developer mode. You will see a menu appear on top. Go to tools and virtual file system. Click on watch bases and your community folder will be listed in one of the folders.&lt;/li&gt; 
 &lt;li&gt;Please make sure you&#39;re copying the &quot;A32NX&quot; folder into your community package folder, NOT the &quot;flybywiresim-a32nx&quot; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Known Issues (Please note that most issues are being worked on and some of them may even be fixed in the master branch)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Captain&#39;s PFD may occasionally turn off during flight&lt;/li&gt; 
 &lt;li&gt;No Smoking switch doesn&#39;t use a full range of motion.&lt;/li&gt; 
 &lt;li&gt;Automatic ECAM page switching has minor bugs.&lt;/li&gt; 
 &lt;li&gt;AP not following the flight plan (leaking input values affect, but don&#39;t disconnect the AP) [Workaround: Set dead-zones for your input device higher]&lt;/li&gt; 
 &lt;li&gt;Autopilot goes direct to RWY on APP (same with the default A320) [Workaround: Use DIR to a waypoint or selected heading]&lt;/li&gt; 
 &lt;li&gt;Upper ECAM displays wrong THR levers position / N1 rating.&lt;/li&gt; 
 &lt;li&gt;Newly added ASOBO A320 liveries are incompatible with the A32NX mod.&lt;/li&gt; 
 &lt;li&gt;Ruder keybindings not working (you have to set your keybinding to rudder axis right and left)&lt;/li&gt; 
 &lt;li&gt;Wing dips on landing (due to bad transition to direct law in flare, same with the default A320) [Workaround use minimal aileron input on landing]&lt;/li&gt; 
 &lt;li&gt;Black screens / unable to start (conflict with another mod/livery or incorrect installation of the A32NX mod, use the &lt;a href=&quot;https://api.flybywiresim.com/installer&quot;&gt;installer&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The original contents of this repository are licensed under the MIT license.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Microsoft Flight Simulator © Microsoft Corporation. The FlyByWire Simulations A32NX was created under Microsoft&#39;s &quot;Game Content Usage Rules&quot; using assets from Microsoft Flight Simulator, and it is not endorsed by or affiliated with Microsoft.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can I download the aircraft in the current state?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Yes, see &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Where is the plane in-sim?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The mod is added on top of the default A320neo from Asobo. If you want to uninstall it and revert to the original aircraft, just delete the A32NX folder in your community folder.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: What are the liveries available?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: All liveries for the default A320 are compatible with the A32NX Mod. You can download some of your favourite liveries at &lt;a href=&quot;https://flightsim.to&quot;&gt;Flightsim.to&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When will it be released?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The project is an ongoing rolling release. See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When is the next update?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We don&#39;t know, since it depends on many factors. We will announce each Stable build update via &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;discord&lt;/a&gt; and our social media: &lt;a href=&quot;https://www.facebook.com/FlyByWireSimulations&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/FlybywireSim&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do I join the team?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Head over to &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Is it payware?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: No, it is a completely free aircraft, open-source.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do we report bugs?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Report bugs to us in the &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;Discord server&lt;/a&gt;, under the #help channel, or by creating a GitHub issue. Just make sure to search for existing issues first before creating a new one.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Why is my version not the same as what I see others using?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We have two versions, the Stable and Developer (Master). The Stable version is a &#39;snapshot&#39; of the development which we regard as stable with the current version of the simulator. The Developer build is updated daily and is a constant work in progress and although we test thoroughly each update, minor issues may occur from time to time. If you find this to be the case, you can report these issues in #help in discord or via GitHub Issues (Check there is not an existing issue of the same nature as yours).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chartjs/Chart.js</title>
      <link>https://github.com/chartjs/Chart.js</link>
      <description>&lt;p&gt;Simple HTML5 Charts using the &lt;canvas&gt; tag&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All the links point to the new version 3 of the lib.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/getting-started/index&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/general/data-structures&quot;&gt;General&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/configuration/index&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/charts/line&quot;&gt;Charts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/axes/index&quot;&gt;Axes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/developers/index&quot;&gt;Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chartjs/awesome&quot;&gt;Popular Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/samples/&quot;&gt;Samples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In case you are looking for the docs of version 2, you will have to specify the specific version in the url like this: &lt;a href=&quot;https://www.chartjs.org/docs/2.9.4/&quot;&gt;https://www.chartjs.org/docs/2.9.4/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Instructions on building and testing Chart.js can be found in &lt;a href=&quot;https://www.chartjs.org/docs/master/developers/contributing.html#building-and-testing&quot;&gt;the documentation&lt;/a&gt;. Before submitting an issue or a pull request, please take a moment to look over the &lt;a href=&quot;https://www.chartjs.org/docs/master/developers/contributing&quot;&gt;contributing guidelines&lt;/a&gt; first. For support, please post questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/chartjs&quot;&gt;Stack Overflow&lt;/a&gt; with the &lt;code&gt;chartjs&lt;/code&gt; tag.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Chart.js is available under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trufflesuite/ganache</title>
      <link>https://github.com/trufflesuite/ganache</link>
      <description>&lt;p&gt;Personal blockchain for Ethereum development&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Ganache&lt;/h2&gt; 
&lt;p&gt;Ganache is your personal blockchain for Ethereum development.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;p&gt;You can download a self-contained prebuilt Ganache binary for your platform of choice using the &quot;Download&quot; button on the &lt;a href=&quot;https://trufflesuite.com/ganache/&quot;&gt;Ganache&lt;/a&gt; website, or from this repository&#39;s &lt;a href=&quot;https://github.com/trufflesuite/ganache/releases&quot;&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Ganache is also available as a command-line tool. If you prefer working on the command-line, check out &lt;a href=&quot;https://github.com/trufflesuite/ganache-cli&quot;&gt;ganache-cli&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Please open issues and pull requests for new features, questions, and bug fixes.&lt;/p&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;node v12.13.1&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started:&lt;/p&gt; 
&lt;ol start=&quot;0&quot;&gt; 
 &lt;li&gt;Clone this repo&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If using Windows, you may need &lt;a href=&quot;https://www.npmjs.com/package/windows-build-tools&quot;&gt;windows-build-tools&lt;/a&gt; installed first.&lt;/p&gt; 
&lt;h3&gt;Building for All Platforms&lt;/h3&gt; 
&lt;p&gt;Each platform has an associated &lt;code&gt;npm run&lt;/code&gt; configuration to help you build on each platform more easily. Because each platform has different (but similar) build processes, they require different configuration. Note that both Windows and Mac require certificates to sign the built packages; for security reasons these certs aren&#39;t uploaded to github, nor are their passwords saved in source control.&lt;/p&gt; 
&lt;h4&gt;On Windows:&lt;/h4&gt; 
&lt;p&gt;Building on Windows will create a &lt;code&gt;.appx&lt;/code&gt; file for use with the Windows Store.&lt;/p&gt; 
&lt;p&gt;Before building, create the &lt;code&gt;./certs&lt;/code&gt; directory with the following files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;./certs/cert.pfx&lt;/code&gt; - Note a &lt;code&gt;.pfx&lt;/code&gt; file is identical to a &lt;code&gt;.p12&lt;/code&gt;. (Just change the extension if you&#39;ve been given a &lt;code&gt;.p12&lt;/code&gt;.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In order to build on Windows, you must first ensure you have the &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;Windows 10 SDK&lt;/a&gt; installed. If you have errors during the build process, ensure the package.json file&#39;s &lt;code&gt;windowsStoreConfig.windowsKit&lt;/code&gt; points to your Windows 10 SDK directory. The one specified in the package.json file currently is what worked at the time this process was figured out; it may need to be updated periodically.&lt;/p&gt; 
&lt;p&gt;Because Windows requires a certificate to build the package -- and that certificate requires a password -- you&#39;ll need to run the following command instead of &lt;code&gt;npm run make&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ CERT_PASS=&quot;...&quot; npm run build-windows
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;...&lt;/code&gt; in the command above with your certificate password.&lt;/p&gt; 
&lt;p&gt;This will create a &lt;code&gt;.appx&lt;/code&gt; file in &lt;code&gt;./out/make&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;On Mac:&lt;/h4&gt; 
&lt;p&gt;Building on a Mac will create a standard Mac &lt;code&gt;.dmg&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;Before building on a Mac, make sure you have Truffle&#39;s signing keys added to your keychain. Next, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm run build-mac
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a signed &lt;code&gt;.dmg&lt;/code&gt; file in &lt;code&gt;./out/make&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;On Linux:&lt;/h4&gt; 
&lt;p&gt;Bulding on Linux will create a &lt;code&gt;.AppImage&lt;/code&gt; file, meant to run on many versions of Linux.&lt;/p&gt; 
&lt;p&gt;Linux requires no signing keys, so there&#39;s no set up. Simply run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm run build-linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a &lt;code&gt;.AppImage&lt;/code&gt; file in &lt;code&gt;./out/make&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Generating Icon Assets&lt;/h3&gt; 
&lt;p&gt;Asset generation generally only needs to happen once, or whenever the app&#39;s logo is updated. If you find you need to rebuild the assets, the following applications were used:&lt;/p&gt; 
&lt;p&gt;Two tools were used:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/electron-icon-maker&quot;&gt;electron-icon-maker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/svg2uwptiles&quot;&gt;svg2uwptiles&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;electron-icon-maker&lt;/code&gt; generates assets for all platforms when using Electron&#39;s &lt;code&gt;squirrel&lt;/code&gt; package, and these assets live in &lt;code&gt;./static/icons&lt;/code&gt;. &lt;code&gt;svg2uwptiles&lt;/code&gt; generates all assets needed for the Windows appx build, and those assets live in &lt;code&gt;./build/appx&lt;/code&gt;. These locations &lt;em&gt;can&lt;/em&gt; be changed in the future, but make sure to change the associated configuration pointing to these assets.&lt;/p&gt; 
&lt;p&gt;Note from the author: I found managing these assets manually -- especially the appx assets -- was a pain. If possible, try not to edit the assets themselves and use one of the generators above.&lt;/p&gt; 
&lt;h3&gt;Flavored Development&lt;/h3&gt; 
&lt;p&gt;&quot;Extras&quot; aren&#39;t stored here in this repository fordue to file size issues, licensing issues, or both.&lt;/p&gt; 
&lt;p&gt;Non-ethereum &quot;flavored&quot; Ganache extras are uploaded to releases here: https://github.com/trufflesuite/ganache-flavors/releases&lt;/p&gt; 
&lt;p&gt;When &quot;extras&quot; change they should be uploaded to a new release, and a corresonding Ganache release that targets the new ganache-flavors release (see &lt;code&gt;common/extras/index.js&lt;/code&gt; for what you&#39;dd need to update)&lt;/p&gt; 
&lt;h4&gt;Corda&lt;/h4&gt; 
&lt;p&gt;Corda requires 4 &quot;extras&quot; that get downloaded at runtime.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;braid-server.jar&lt;/code&gt; is used to communicate to corda nodes via JSON RPC over HTTP. This file is built from https://gitlab.com/bluebank/braid/tree/master/braid-server. To build: run &lt;code&gt;mvn clean install&lt;/code&gt; in the root of the project.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;corda-tools-network-bootstrapper-4.3.jar&lt;/code&gt; is used to create corda networks from configuration (&lt;code&gt;_node.conf&lt;/code&gt;) files. It contains an embedded &lt;code&gt;corda.jar&lt;/code&gt; and the logic required to create a network. To update or download the latest corda-tools-network-bootstrapper go to https://software.r3.com/artifactory/corda-releases/net/corda/ and download the version you want. You&#39;ll need to update the file name in &lt;code&gt;src/common/extras/index.js&lt;/code&gt; if the version changes.&lt;/p&gt; 
&lt;p&gt;Corda and braid require Java&#39;s &lt;em&gt;JRE&lt;/em&gt; &lt;code&gt;1.8&lt;/code&gt;, aka &lt;code&gt;8&lt;/code&gt;. We &quot;release&quot; 4 versions of JRE 1.8: Linux x64, Mac x64, Windows x32, and Windows x64. The Java releases are downloaded from https://adoptopenjdk.net/archive.html -- we use &quot;OpenJDK 8 (LTS)&quot; with &quot;HotSpot&quot;. To redistribute these files you will need to unpack/unzip them, then zip them up again (make sure you are on Linux for the Linux release, as it needs its file permissions properly embedded within the zip). It is very important that you &lt;strong&gt;ensure that all files are stored at the root of the zip&lt;/strong&gt;. You&#39;ll also want to rename the zip files in the following format: &lt;code&gt;OpenJDK8U-jre_{arch}_{os-name}_hotspot_{version}.zip&lt;/code&gt;. You&#39;ll need to update the &lt;code&gt;version&lt;/code&gt; in &lt;code&gt;src/common/extras/index.js&lt;/code&gt; if it changes.&lt;/p&gt; 
&lt;p&gt;Corda requires PostgreSQL 9.6. We &quot;release&quot; 4 versions of PostgreSQL 9.6: Linux x64, Mac x64, Windows x32, and Windows x64. These are downloaded from https://www.enterprisedb.com/downloads/postgres-postgresql-downloads.To redistribute these files you will need to unpack/unzip them, then zip them up again (make sure you are on Linux for the Linux release, as it needs its file permissions properly embedded within the zip). It is very important that you &lt;strong&gt;ensure that all files are stored at the root of the zip&lt;/strong&gt;. You&#39;ll also want to rename the zip files in the following format: &lt;code&gt;postgresql-{version}-2-{os-name}-{arch}-binaries.zip&lt;/code&gt;. You&#39;ll need to update the &lt;code&gt;version&lt;/code&gt; in &lt;code&gt;src/common/extras/index.js&lt;/code&gt; if it changes.&lt;/p&gt; 
&lt;h3&gt;By Truffle&lt;/h3&gt; 
&lt;p&gt;Ganache is part of the Truffle suite of tools. &lt;a href=&quot;https://trufflesuite.com&quot;&gt;Find out more!&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ViktoryiaYatskova/clean-code-s1e1</title>
      <link>https://github.com/ViktoryiaYatskova/clean-code-s1e1</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Функционал приложения :&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;- Добавление нового элемента в список задач &quot;TODO&quot;
- Редактирование элемента в списке задач &quot;TODO&quot;
- Удаление элемента из списка задач &quot;TODO&quot;
- Установка элемента в статус завершенного и перенос в список &quot;COMPLETED&quot; через checkbox

- Удаление элемента из списка &quot;COMPLETED&quot;
- Редактирование элемента из списка &quot;COMPLETED&quot;
- Установка элемента в статус незавершенного и перенос в список &quot;TODO&quot; через checkbox
- Анимация на кнопке удаления
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>jklepatch/eattheblocks</title>
      <link>https://github.com/jklepatch/eattheblocks</link>
      <description>&lt;p&gt;Source code for Eat The Blocks, a screencast for Ethereum Dapp Developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EaTheBlocks&lt;/h1&gt; 
&lt;p&gt;Blockchain tutorials of EatTheBlocks. Learn how to build Decentralized Applications (Dapps) on Ethereum and Solidity Smart contracts&lt;/p&gt; 
&lt;p&gt;Covers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ethereum&lt;/li&gt; 
 &lt;li&gt;Solidity&lt;/li&gt; 
 &lt;li&gt;Web3&lt;/li&gt; 
 &lt;li&gt;Truffle&lt;/li&gt; 
 &lt;li&gt;DeFi (Decentralized Finance)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Organization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Youtube: &lt;code&gt;screencast&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Courses: other folders&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks.com/6-figure-blockchain-developer/&quot;&gt;6-Figures Blockchain Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks-pro.teachable.com/p/profitable-flashloans&quot;&gt;Profitable Flashloan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
