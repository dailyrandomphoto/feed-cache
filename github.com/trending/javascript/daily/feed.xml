<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Wed, 28 Apr 2021 01:58:22 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>goldbergyoni/nodebestpractices</title>
      <link>https://github.com/goldbergyoni/nodebestpractices</link>
      <description>&lt;p&gt;‚úÖ The Node.js best practices list (April 2021)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js Best Practices&lt;/h1&gt; 
&lt;h1 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/banner-2.jpg&quot; alt=&quot;Node.js Best Practices&quot;&gt; &lt;/h1&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/‚öô%20Item%20count%20-%20102%20Best%20Practices-blue.svg&quot; alt=&quot;102 items&quot;&gt; 
 &lt;img id=&quot;last-update-badge&quot; src=&quot;https://img.shields.io/badge/%F0%9F%93%85%20Last%20update%20-%20April%2024%2C%202021-green.svg?sanitize=true&quot; alt=&quot;Last update: April 24, 2021&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/ %E2%9C%94%20Updated%20For%20Version%20-%20Node%2014.0.0-brightgreen.svg&quot; alt=&quot;Updated for Node 14.0.0&quot;&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; alt=&quot;nodepractices&quot;&gt;&lt;/a&gt; &lt;strong&gt;Follow us on Twitter!&lt;/strong&gt; &lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;strong&gt;@nodepractices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;Read in a different language: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt;&lt;strong&gt;CN&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt;&lt;strong&gt;BR&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt;&lt;strong&gt;RU&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt;&lt;strong&gt;PL&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.japanese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/JA.png&quot; alt=&quot;JA&quot;&gt;&lt;strong&gt;JA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.basque.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt;&lt;strong&gt;EU&lt;/strong&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translations&quot;&gt;(&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt;&lt;strong&gt;ES&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt;&lt;strong&gt;FR&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt;&lt;strong&gt;HE&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt;&lt;strong&gt;KR&lt;/strong&gt; and &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt;&lt;strong&gt;TR&lt;/strong&gt; in progress! )&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h6&gt;Built and maintained by our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#steering-committee&quot;&gt;Steering Committee&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#collaborators&quot;&gt;Collaborators&lt;/a&gt;&lt;/h6&gt; 
&lt;h1&gt;Latest Best Practices and News&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt; Basque translation by father and daughter!:&lt;/strong&gt; wow even our Basque readers can read in their mother-tongue language! Courtesy of &lt;a href=&quot;https://github.com/anediaz&quot;&gt;Ane Diaz de Tuesta&lt;/a&gt; and her father Joxefe Diaz de Tuesta üíú. Great family work&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;üáØüáµ Japanese translation:&lt;/strong&gt; Our guide is now also translated to Japanese! Courtesy of the amazing &lt;a href=&quot;https://github.com/YukiOta&quot;&gt;YukiOta&lt;/a&gt; and &lt;a href=&quot;https://github.com/YA21&quot;&gt;Yuta Azumi&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;üéä 60,000 stars!&lt;/strong&gt;: Our repo was starred and trusted by 60,100 developers. We‚Äôre speechless&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome! 3 Things You Ought To Know First&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;1. You are reading dozens of the best Node.js articles -&lt;/strong&gt; this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. It is the largest compilation, and it is growing every week -&lt;/strong&gt; currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We‚Äôd love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/writing-guidelines.md&quot;&gt;writing guidelines here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Best practices have additional info -&lt;/strong&gt; most bullets include a &lt;strong&gt;üîóRead More&lt;/strong&gt; link that expands on the practice with code examples, quotes from selected blogs, and more information&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#1-project-structure-practices&quot;&gt;Project Structure Practices (5)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#2-error-handling-practices&quot;&gt;Error Handling Practices (12) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Code Style Practices (12) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#4-testing-and-overall-quality-practices&quot;&gt;Testing And Overall Quality Practices (13) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#5-going-to-production-practices&quot;&gt;Going To Production Practices (19) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#6-security-best-practices&quot;&gt;Security Practices (25)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#7-draft-performance-best-practices&quot;&gt;Performance Practices (2) (Work In ProgressÔ∏è ‚úçÔ∏è)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#8-docker-best-practices&quot;&gt;Docker Practices (15)&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;1. Project Structure Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.1 Structure your solution by components&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit ‚ÄòRead More‚Äô below to see examples of correct project structure&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It‚Äôs also considered harder to scale-out when all the business units are not separated&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/breakintcomponents.md&quot;&gt;&lt;strong&gt;Read More: structure by components&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.2 Layer your components, keep the web layer within its boundaries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each component should contain ‚Äòlayers‚Äô - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (e.g. Express req, res) to business logic and data layers - this makes your application dependent on and accessible only by specific web frameworks&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, triggers from message queues, etc&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/createlayers.md&quot;&gt;&lt;strong&gt;Read More: layer your app&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.3 Wrap common utilities as npm packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In a large app that constitutes a large codebase, cross-cutting-concern utilities like a logger, encryption and alike, should be wrapped by your code and exposed as private npm packages. This allows sharing them among multiple codebases and projects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äôll have to invent your deployment and the dependency wheel&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/wraputilities.md&quot;&gt;&lt;strong&gt;Read More: Structure by feature&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.4 Separate Express ‚Äòapp‚Äô and ‚Äòserver‚Äô&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid the nasty habit of defining the entire &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; app in a single huge file - separate your ‚ÄòExpress‚Äô definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won‚Äôt be a big pleasure to maintain hundreds of lines of code in a single file&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/separateexpress.md&quot;&gt;&lt;strong&gt;Read More: separate Express ‚Äòapp‚Äô and ‚Äòserver‚Äô&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 1.5 Use environment aware, secure and hierarchical config&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like &lt;a href=&quot;https://www.npmjs.com/package/rc&quot;&gt;rc&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/nconf&quot;&gt;nconf&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/config&quot;&gt;config&lt;/a&gt;, and &lt;a href=&quot;https://www.npmjs.com/package/convict&quot;&gt;convict&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failing to satisfy any of the config requirements will simply bog down the development or DevOps team. Probably both&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/configguide.md&quot;&gt;&lt;strong&gt;Read More: configuration best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;2. Error Handling Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.1 Use Async-Await or promises for async error handling&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/asyncerrorhandling.md&quot;&gt;&lt;strong&gt;Read More: avoiding callbacks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.2 Use only the built-in Error object&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Many throw errors as a string or as some custom type ‚Äì this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error ‚Äì using only the built-in Error object (or an object that extends the built-in Error object) will increase uniformity and prevent loss of information. There is &lt;code&gt;no-throw-literal&lt;/code&gt; ESLint rule that strictly checks that (although it have some &lt;a href=&quot;https://eslint.org/docs/rules/no-throw-literal&quot;&gt;limitations&lt;/a&gt; which can be solved when using TypeScript and setting the &lt;code&gt;@typescript-eslint/no-throw-literal&lt;/code&gt; rule)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When invoking some component, being uncertain which type of errors come in return ‚Äì it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/useonlythebuiltinerror.md&quot;&gt;&lt;strong&gt;Read More: using the built-in error object&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.3 Distinguish operational vs programmer errors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read an undefined variable) refers to unknown code failures that dictate to gracefully restart the application&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal ‚Äì keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/operationalvsprogrammererror.md&quot;&gt;&lt;strong&gt;Read More: operational vs programmer error&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.4 Handle errors centrally, not within a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not handling errors within a single place will lead to code duplication and probably to improperly handled errors&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/centralizedhandling.md&quot;&gt;&lt;strong&gt;Read More: handling errors in a centralized place&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.5 Document API errors using Swagger or GraphQL&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you‚Äôre using GraphQL, you can utilize your schema and comments as well.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An API client might decide to crash and restart only because it received back an error it couldn‚Äôt understand. Note: the caller of your API might be you (very typical in a microservice environment)&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/documentingusingswagger.md&quot;&gt;&lt;strong&gt;Read More: documenting API errors in Swagger or GraphQL&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.6 Exit the process gracefully when a stranger comes to town&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. Common practice suggests restarting the process carefully using a process management tool like &lt;a href=&quot;https://www.npmjs.com/package/forever&quot;&gt;Forever&lt;/a&gt; or &lt;a href=&quot;http://pm2.keymetrics.io/&quot;&gt;PM2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/shuttingtheprocess.md&quot;&gt;&lt;strong&gt;Read More: shutting the process&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.7 Use a mature logger to increase error visibility&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A set of mature logging tools like &lt;a href=&quot;https://github.com/pinojs/pino&quot;&gt;Pino&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/log4js&quot;&gt;Log4js&lt;/a&gt;, will speed-up error discovery and understanding. So forget about console.log&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/usematurelogger.md&quot;&gt;&lt;strong&gt;Read More: using a mature logger&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.8 Test error flows using your favorite test framework&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Whether professional automated QA or plain manual developer testing ‚Äì Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha &amp;amp; Chai can handle this easily (see code examples within the ‚ÄúGist popup‚Äù)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without testing, whether automatically or manually, you can‚Äôt rely on your code to return the right errors. Without meaningful errors ‚Äì there‚Äôs no error handling&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/testingerrorflows.md&quot;&gt;&lt;strong&gt;Read More: testing error flows&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.9 Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes, and slow parts that you were missing&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you‚Äôll never be aware which are your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.10 Catch unhandled promise rejections&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any exception thrown within a promise will get swallowed and discarded unless a developer didn‚Äôt forget to explicitly handle it. Even if your code is subscribed to &lt;code&gt;process.uncaughtException&lt;/code&gt;! Overcome this by registering to the event &lt;code&gt;process.unhandledRejection&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your errors will get swallowed and leave no trace. Nothing to worry about&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/catchunhandledpromiserejection.md&quot;&gt;&lt;strong&gt;Read More: catching unhandled promise rejection&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.11 Fail fast, validate arguments using a dedicated library&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like &lt;a href=&quot;https://www.npmjs.com/package/ajv&quot;&gt;ajv&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;Joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider this ‚Äì your function expects a numeric argument ‚ÄúDiscount‚Äù which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/failfast.md&quot;&gt;&lt;strong&gt;Read More: failing fast&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 2.12 Always await promises before returning to avoid a partial stacktrace&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always do &lt;code&gt;return await&lt;/code&gt; when returning a promise to benefit full error stacktrace. If a function returns a promise, that function must be declared as &lt;code&gt;async&lt;/code&gt; function and explicitly &lt;code&gt;await&lt;/code&gt; the promise before returning it&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The function that returns a promise without awaiting won‚Äôt appear in the stacktrace. Such missing frames would probably complicate the understanding of the flow that leads to the error, especially if the cause of the abnormal behavior is inside of the missing function&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/returningpromises.md&quot;&gt;&lt;strong&gt;Read More: returning promises&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;3. Code Style Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.1 Use ESLint&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;a href=&quot;https://eslint.org&quot;&gt;ESLint&lt;/a&gt; is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;prettier&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/js-beautify&quot;&gt;beautify&lt;/a&gt; are more powerful in formatting the fix and work in conjunction with ESLint&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project‚Äôs code style&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/codestylepractices/eslint_prettier.md&quot;&gt;&lt;strong&gt;Read More: Using ESLint and Prettier&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.2 Node.js specific plugins&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-node&quot;&gt;eslint-plugin-node&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;eslint-plugin-node-security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as a path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.3 Start a Codeblock‚Äôs Curly Braces on the Same Line&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The opening curly braces of a code block should be on the same line as the opening statement&lt;/p&gt; 
&lt;h3&gt;Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function someFunction() {
  // code block
}

// Avoid
function someFunction() 
{
  // code block
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://stackoverflow.com/questions/3641519/why-does-a-results-vary-based-on-curly-brace-placement&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; ‚ÄúWhy do results vary based on curly brace placement?‚Äù (StackOverflow)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.4 Separate your statements properly&lt;/h2&gt; 
&lt;p&gt;No matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use ESLint to gain awareness about separation concerns. &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; or &lt;a href=&quot;https://standardjs.com/&quot;&gt;Standardjs&lt;/a&gt; can automatically resolve these issues.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As seen in the previous section, JavaScript‚Äôs interpreter automatically adds a semicolon at the end of a statement if there isn‚Äôt one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediately invoked function expressions to prevent most of the unexpected errors.&lt;/p&gt; 
&lt;h3&gt;Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function doThing() {
    // ...
}

doThing()

// Do

const items = [1, 2, 3]
items.forEach(console.log)

// Avoid ‚Äî throws exception
const m = new Map()
const a = [1,2,3]
[...m.values()].forEach(console.log)
&amp;gt; [...m.values()].forEach(console.log)
&amp;gt;  ^^^
&amp;gt; SyntaxError: Unexpected token ...

// Avoid ‚Äî throws exception
const count = 2 // it tries to run 2(), but 2 is not a function
(function doSomething() {
  // do something amazing
}())
// put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs altogether
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://eslint.org/docs/rules/semi&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; ‚ÄúSemi ESLint rule‚Äù&lt;/a&gt; üîó &lt;a href=&quot;https://eslint.org/docs/rules/no-unexpected-multiline&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; ‚ÄúNo unexpected multiline ESLint rule‚Äù&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.5 Name your functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you‚Äôre looking at when checking a memory snapshot&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.6 Use naming conventions for variables, constants, functions and classes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use &lt;strong&gt;&lt;em&gt;lowerCamelCase&lt;/em&gt;&lt;/strong&gt; when naming constants, variables and functions and &lt;strong&gt;&lt;em&gt;UpperCamelCase&lt;/em&gt;&lt;/strong&gt; (capital first letter as well) when naming classes. This will help you to easily distinguish between plain variables/functions, and classes that require instantiation. Use descriptive names, but try to keep them short&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; JavaScript is the only language in the world that allows invoking a constructor (‚ÄúClass‚Äù) directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase&lt;/p&gt; 
&lt;h3&gt;3.6 Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// for class name we use UpperCamelCase
class SomeClassExample {}

// for const names we use the const keyword and lowerCamelCase
const config = {
  key: &quot;value&quot;,
};

// for variables and functions names we use lowerCamelCase
let someVariableExample = &quot;value&quot;;
function doSomething() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.7 Prefer const over let. Ditch the var&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using &lt;code&gt;const&lt;/code&gt; means that once a variable is assigned, it cannot be reassigned. Preferring &lt;code&gt;const&lt;/code&gt; will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use &lt;code&gt;let&lt;/code&gt; to declare it. Another important aspect of &lt;code&gt;let&lt;/code&gt; is that a variable declared using it is only available in the block scope in which it was defined. &lt;code&gt;var&lt;/code&gt; is function scoped, not block-scoped, and &lt;a href=&quot;https://hackernoon.com/why-you-shouldnt-use-var-anymore-f109a58b9b70&quot;&gt;shouldn‚Äôt be used in ES6&lt;/a&gt; now that you have &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; at your disposal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging becomes way more cumbersome when following a variable that frequently changes&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75&quot;&gt;&lt;strong&gt;Read more: JavaScript ES6+: var, let, or const?&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.8 Require modules first, not inside functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.9 Require modules by folders, as opposed to the files directly&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When developing a module/library in a folder, place an index.js file that exposes the module‚Äôs internals so every consumer will pass through it. This serves as an ‚Äòinterface‚Äô to your module and eases future changes without breaking the contract&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Changing the internal structure of files or the signature may break the interface with clients&lt;/p&gt; 
&lt;h3&gt;3.9 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
module.exports.SMSProvider = require(&quot;./SMSProvider&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver&quot;);

// Avoid
module.exports.SMSProvider = require(&quot;./SMSProvider/SMSProvider.js&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver/SMSNumberResolver.js&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.10 Use the &lt;code&gt;===&lt;/code&gt; operator&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Prefer the strict equality operator &lt;code&gt;===&lt;/code&gt; over the weaker abstract equality operator &lt;code&gt;==&lt;/code&gt;. &lt;code&gt;==&lt;/code&gt; will compare two variables after converting them to a common type. There is no type conversion in &lt;code&gt;===&lt;/code&gt;, and both variables must be of the same type to be equal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unequal variables might return true when compared with the &lt;code&gt;==&lt;/code&gt; operator&lt;/p&gt; 
&lt;h3&gt;3.10 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;&quot; == &quot;0&quot;; // false
0 == &quot;&quot;; // true
0 == &quot;0&quot;; // true

false == &quot;false&quot;; // false
false == &quot;0&quot;; // true

false == undefined; // false
false == null; // false
null == undefined; // true

&quot; \t\r\n &quot; == 0; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All statements above will return false if used with &lt;code&gt;===&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.11 Use Async Await, avoid callbacks&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Handling async errors in callback style are probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting, and makes it difficult to reason about the code flow&lt;/p&gt; 
&lt;p&gt;üîó&lt;a href=&quot;https://github.com/yortus/asyncawait&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; Guide to async-await 1.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 3.12 Use arrow function expressions (=&amp;gt;)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Though it‚Äôs recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. &lt;code&gt;this&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Longer code (in ES5 functions) is more prone to bugs and cumbersome to read&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75&quot;&gt;&lt;strong&gt;Read more: It‚Äôs Time to Embrace Arrow Functions&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;4. Testing And Overall Quality Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.1 At the very least, write API (component) testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Most projects just don‚Äôt have any automated testing due to short timetables or often the ‚Äòtesting project‚Äô ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like &lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;). Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.2 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make the test speak at the requirements level so it‚Äôs self-explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances, and what is the expected result&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named ‚ÄúAdd product‚Äù failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/3-parts-in-name.md&quot;&gt;&lt;strong&gt;Read More: Include 3 parts in each test name&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.3 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Structure your tests with 3 well-separated sections: Arrange, Act &amp;amp; Assert (AAA). The first part includes the test setup, then the execution of the unit under test, and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not only you spend long daily hours on understanding the main code, but now also what should have been the simple part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/aaa.md&quot;&gt;&lt;strong&gt;Read More: Structure tests by the AAA pattern&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.4 Detect code issues with a linter&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use a code linter to check the basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Section 3&lt;/a&gt; on Code Style Practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may let pass some anti-pattern and possible vulnerable code to your production environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.5 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent test coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/avoid-global-test-fixture.md&quot;&gt;&lt;strong&gt;Read More: Avoid global test fixtures&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as üîó &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; and üîó &lt;a href=&quot;https://snyk.io&quot;&gt;snyk.io&lt;/a&gt; that can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.7 Tag your tests&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;: mocha ‚Äìgrep ‚Äòsanity‚Äô&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.8 Check your test coverage, it helps to identify wrong test patterns&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code coverage tools like &lt;a href=&quot;https://github.com/istanbuljs/istanbuljs&quot;&gt;Istanbul&lt;/a&gt;/&lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;NYC&lt;/a&gt; are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; There won‚Äôt be any automated metric telling you when a large portion of your code is not covered by testing&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.9 Inspect for outdated packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use your preferred tool (e.g. &lt;code&gt;npm outdated&lt;/code&gt; or &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;npm-check-updates&lt;/a&gt;) to detect installed outdated packages, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.10 Use production-like environment for e2e testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as close to your real production environment as possible like a-continue (Missed -continue here, needs content. Judging by the &lt;strong&gt;Otherwise&lt;/strong&gt; clause, this should mention docker-compose)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without docker-compose, teams must maintain a testing DB for each testing environment including developers‚Äô machines, keep all those DBs in sync so test results won‚Äôt vary across environments&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.11 Refactor regularly using static analysis tools&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity), and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;Sonarqube&lt;/a&gt; (2,600+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (1,500+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/refactoring.md&quot;&gt;&lt;strong&gt;Read More: Refactoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your continuous integration platform (CICD) will host all the quality tools (e.g. test, lint) so it should come with a vibrant ecosystem of plugins. &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of a complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like &lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it‚Äôs a trade-off between robustness and speed - choose your side carefully&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/citools.md&quot;&gt;&lt;strong&gt;Read More: Choosing CI platform&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 4.13 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When a middleware holds some immense logic that spans many requests, it is worth testing it in isolation without waking up the entire web framework. This can be easily achieved by stubbing and spying on the {req, res, next} objects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/test-middlewares.md&quot;&gt;&lt;strong&gt;Read More: Test middlewares in isolation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;5. Going To Production Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.1. Monitoring&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring is a game of finding out issues before customers do ‚Äì obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click ‚ÄòThe Gist‚Äô below for an overview of the solutions&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure === disappointed customers. Simple&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/monitoring.md&quot;&gt;&lt;strong&gt;Read More: Monitoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.2. Increase transparency using smart logging&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/smartlogging.md&quot;&gt;&lt;strong&gt;Read More: Increase transparency using smart logging&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use ‚Äòreal‚Äô middleware services like nginx, HAproxy or cloud vendor services instead&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/delegatetoproxy.md&quot;&gt;&lt;strong&gt;Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.4. Lock dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default ‚Äì when you install packages at various environments it tries to fetch packages‚Äô latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use &lt;code&gt;npm shrinkwrap&lt;/code&gt;. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/lockdependencies.md&quot;&gt;&lt;strong&gt;Read More: Lock dependencies&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.5. Guard process uptime using the right tool&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today‚Äôs ‚Äòdockerized‚Äô world, cluster management tools should be considered as well&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/guardprocess.md&quot;&gt;&lt;strong&gt;Read More: Guard process uptime using the right tool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.6. Utilize all CPU cores&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; At its basic form, a Node app runs on a single CPU core while all others are left idling. It‚Äôs your duty to replicate the Node process and utilize all CPUs ‚Äì For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/utilizecpu.md&quot;&gt;&lt;strong&gt;Read More: Utilize all CPU cores&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.7. Create a ‚Äòmaintenance endpoint‚Äô&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it‚Äôs highly recommended to rely on standard and battle-tests tools, some valuable information and operations are easier done using code&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äôll find that you‚Äôre performing many ‚Äúdiagnostic deploys‚Äù ‚Äì shipping code to production only to extract some information for diagnostic purposes&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/createmaintenanceendpoint.md&quot;&gt;&lt;strong&gt;Read More: Create a ‚Äòmaintenance endpoint‚Äô&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.8. Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Application monitoring and performance products (a.k.a. APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-user‚Äôs side while suggesting the root cause&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you‚Äôll never be aware which is your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: Discover errors and downtime using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.9. Make your code production-ready&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code with the end in mind, plan for production from day 1. This sounds a bit vague so I‚Äôve compiled a few development tips that are closely related to production maintenance (click Gist below)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A world champion IT/DevOps guy won‚Äôt save a system that is badly written&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/productioncode.md&quot;&gt;&lt;strong&gt;Read More: Make your code production-ready&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.10. Measure and guard the memory usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node‚Äôs code ‚Äì thus watching Node‚Äôs process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your process memory might leak a hundred megabytes a day like how it happened at &lt;a href=&quot;https://www.joyent.com/blog/walmart-node-js-memory-leak&quot;&gt;Walmart&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/measurememory.md&quot;&gt;&lt;strong&gt;Read More: Measure and guard the memory usage&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.11. Get your frontend assets out of Node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your single Node thread will be busy streaming hundreds of html/images/angular/react files instead of allocating all its resources for the task it was born for ‚Äì serving dynamic content&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/frontendout.md&quot;&gt;&lt;strong&gt;Read More: Get your frontend assets out of Node&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.12. Be stateless, kill your servers almost every day&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider ‚Äòkilling‚Äô your servers periodically or use ‚Äòserverless‚Äô platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/bestateless.md&quot;&gt;&lt;strong&gt;Read More: Be stateless, kill your Servers almost every day&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.13. Use tools that automatically detect vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/detectvulnerabilities.md&quot;&gt;&lt;strong&gt;Read More: Use tools that automatically detect vulnerabilities&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.14. Assign a transaction id to each log statement&lt;/h2&gt; 
&lt;p&gt;Also known as correlation id / transit id / tracing id / request id / request context / etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Until version 14 of Node, this was not easy to achieve due to Node‚Äôs async nature, but since AsyncLocalStorage came to town, this became possible and easy than ever. see code examples inside&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Looking at a production error log without the context ‚Äì what happened before ‚Äì makes it much harder and slower to reason about the issue&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/assigntransactionid.md&quot;&gt;&lt;strong&gt;Read More: Assign ‚ÄòTransactionId‚Äô to each log statement&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.15. Set &lt;code&gt;NODE_ENV=production&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Set the environment variable &lt;code&gt;NODE_ENV&lt;/code&gt; to ‚Äòproduction‚Äô or ‚Äòdevelopment‚Äô to flag whether production optimizations should get activated ‚Äì many npm packages determine the current environment and optimize their code for production&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting &lt;code&gt;NODE_ENV&lt;/code&gt; makes it slower by a factor of three!&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/setnodeenv.md&quot;&gt;&lt;strong&gt;Read More: Set NODE_ENV=production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.16. Design automated, atomic and zero-downtime deployments&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don‚Äôt require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Long deployments -&amp;gt; production downtime &amp;amp; human-related error -&amp;gt; team unconfident in making deployment -&amp;gt; fewer deployments and features&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.17. Use an LTS release of Node.js&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/LTSrelease.md&quot;&gt;&lt;strong&gt;Read More: Use an LTS release of Node.js&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.18. Don‚Äôt route logs within the app&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to &lt;code&gt;stdout&lt;/code&gt; using a logger utility and then let the execution environment (container, server, etc.) pipe the &lt;code&gt;stdout&lt;/code&gt; stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Application handling log routing === hard to scale, loss of logs, poor separation of concerns&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/logrouting.md&quot;&gt;&lt;strong&gt;Read More: Log Routing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 5.19. Install your packages with &lt;code&gt;npm ci&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; You have to be sure that production code uses the exact version of the packages you have tested it with. Run &lt;code&gt;npm ci&lt;/code&gt; to strictly do a clean install of your dependencies matching package.json and package-lock.json. Using this command is recommended in automated environments such as continuous integration pipelines.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/installpackageswithnpmci.md&quot;&gt;&lt;strong&gt;Read More: Use npm ci&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;6. Security Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://img.shields.io/badge/OWASP%20Threats-Top%2010-green.svg?sanitize=true&quot; alt=&quot;54 items&quot;&gt; 
&lt;/div&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.1. Embrace linter security rules&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make use of security-related linter plugins such as &lt;a href=&quot;https://github.com/nodesecurity/eslint-plugin-security&quot;&gt;eslint-plugin-security&lt;/a&gt; to catch security vulnerabilities and issues as early as possible, preferably while they‚Äôre being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click ‚ÄòRead more‚Äô below to see code examples that will get caught by a security linter&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/lintrules.md&quot;&gt;&lt;strong&gt;Read More: Lint rules&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.2. Limit concurrent requests using a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, &lt;a href=&quot;https://www.npmjs.com/package/rate-limiter-flexible&quot;&gt;rate-limiter-flexible&lt;/a&gt; package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. &lt;a href=&quot;https://www.npmjs.com/package/express-rate-limit&quot;&gt;express-rate-limit&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/limitrequests.md&quot;&gt;&lt;strong&gt;Read More: Implement rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.3 Extract secrets from config files or use packages to encrypt them&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A3:Sensitive%20Data%20Exposure%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit/push hooks to prevent committing secrets accidentally&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secretmanagement.md&quot;&gt;&lt;strong&gt;Read More: Secret management&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.4. Prevent query injection vulnerabilities with ORM/ODM libraries&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent SQL/NoSQL injection and other malicious attacks, always make use of an ORM/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. &lt;a href=&quot;https://github.com/sequelize/sequelize&quot;&gt;Sequelize&lt;/a&gt;, &lt;a href=&quot;https://github.com/tgriesser/knex&quot;&gt;Knex&lt;/a&gt;, &lt;a href=&quot;https://github.com/Automattic/mongoose&quot;&gt;mongoose&lt;/a&gt;) have built-in protection against injection attacks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/ormodmusage.md&quot;&gt;&lt;strong&gt;Read More: Query injection prevention using ORM/ODM libraries&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.5. Collection of generic security best practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/commonsecuritybestpractices.md&quot;&gt;&lt;strong&gt;Read More: Common security best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.6. Adjust the HTTP response headers for enhanced security&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like &lt;a href=&quot;https://www.npmjs.com/package/helmet&quot;&gt;helmet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Attackers could perform direct attacks on your application‚Äôs users, leading to huge security vulnerabilities&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secureheaders.md&quot;&gt;&lt;strong&gt;Read More: Using secure headers in your application&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.7. Constantly and automatically inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Known%20Vulnerabilities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; or &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker could detect your web framework and attack all its known vulnerabilities.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/dependencysecurity.md&quot;&gt;&lt;strong&gt;Read More: Dependency security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.8. Protect Users‚Äô Passwords/Secrets using bcrypt or scrypt&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Passwords or secrets (e.g. API keys) should be stored using a secure hash + salt function like &lt;code&gt;bcrypt&lt;/code&gt;,&lt;code&gt;scrypt&lt;/code&gt;, or worst case &lt;code&gt;pbkdf2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Passwords and secrets that are stored without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/userpasswords.md&quot;&gt;&lt;strong&gt;Read More: User Passwords&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.9. Escape HTML, JS and CSS output&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/escape-output.md&quot;&gt;&lt;strong&gt;Read More: Escape output&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.10. Validate incoming JSON schemas&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7: XSS%20-green.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Validate the incoming requests‚Äô body payload and ensure it meets expectations, fail fast if it doesn‚Äôt. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as &lt;a href=&quot;https://www.npmjs.com/package/jsonschema&quot;&gt;jsonschema&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/validation.md&quot;&gt;&lt;strong&gt;Read More: Validate incoming JSON schemas&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.11. Support blocklisting JWTs&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using JSON Web Tokens (for example, with &lt;a href=&quot;https://github.com/jaredhanson/passport&quot;&gt;Passport.js&lt;/a&gt;), by default there‚Äôs no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there‚Äôs no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blocklist of untrusted tokens that are validated on each request.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/expirejwt.md&quot;&gt;&lt;strong&gt;Read More: Blocklist JSON Web Tokens&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.12. Prevent brute-force attacks against authorization&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A simple and powerful technique is to limit authorization attempts using two metrics:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first is number of consecutive failed attempts by the same user unique ID/name and IP address.&lt;/li&gt; 
 &lt;li&gt;The second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/login-rate-limit.md&quot;&gt;&lt;strong&gt;Read More: Login rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.13. Run Node.js as non-root user&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A5-Broken_Access_Control&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A5:Broken%20Access%20Access%20Control-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It‚Äôs recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user‚Äôs behalf by invoking the container with the flag ‚Äú-u username‚Äù&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to his server)&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/non-root-user.md&quot;&gt;&lt;strong&gt;Read More: Run Node.js as non-root user&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.14. Limit payload size using a reverse-proxy or a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring &lt;a href=&quot;https://github.com/expressjs/body-parser&quot;&gt;express body parser&lt;/a&gt; to accept only small-size payloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/requestpayloadsizelimit.md&quot;&gt;&lt;strong&gt;Read More: Limit payload size&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.15. Avoid JavaScript eval statements&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;code&gt;eval&lt;/code&gt; is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is &lt;code&gt;new Function&lt;/code&gt; constructor. &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; should never be passed dynamic JavaScript code either.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious JavaScript code finds a way into text passed into &lt;code&gt;eval&lt;/code&gt; or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoideval.md&quot;&gt;&lt;strong&gt;Read More: Avoid JavaScript eval statements&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.16. Prevent evil RegEx from overloading your single thread execution&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on üî•. For that reason, prefer third-party validation packages like &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt; instead of writing your own Regex patterns, or make use of &lt;a href=&quot;https://github.com/substack/safe-regex&quot;&gt;safe-regex&lt;/a&gt; to detect vulnerable regex patterns&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular &lt;code&gt;moment&lt;/code&gt; package was found vulnerable with malicious RegEx usage in November of 2017&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/regex.md&quot;&gt;&lt;strong&gt;Read More: Prevent malicious RegEx&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.17. Avoid module loading using a variable&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid requiring/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. &lt;code&gt;fs.readFile()&lt;/code&gt;) or other sensitive resource access with dynamic variables originating from user input. &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;Eslint-plugin-security&lt;/a&gt; linter can catch such patterns and warn early enough&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the file system, or access already existing system files.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/safemoduleloading.md&quot;&gt;&lt;strong&gt;Read More: Safe module loading&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.18. Run unsafe code in a sandbox&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When tasked to run external code that is given at run-time (e.g. plugin), use any sort of ‚Äòsandbox‚Äô execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. &lt;code&gt;cluster.fork()&lt;/code&gt;), serverless environment or dedicated npm packages that act as a sandbox&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sandbox.md&quot;&gt;&lt;strong&gt;Read More: Run unsafe code in a sandbox&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.19. Take extra care when working with child processes&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using &lt;code&gt;child_process.execFile&lt;/code&gt; which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/childprocesses.md&quot;&gt;&lt;strong&gt;Read More: Be cautious when working with child processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.20. Hide error details from clients&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/hideerrors.md&quot;&gt;&lt;strong&gt;Read More: Hide error details from client&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.21. Configure 2FA for npm or Yarn&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any step in the development chain should be protected with MFA (multi-factor authentication), npm/Yarn are a sweet opportunity for attackers who can get their hands on some developer‚Äôs password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; &lt;a href=&quot;https://medium.com/@oprearocks/eslint-backdoor-what-it-is-and-how-to-fix-the-issue-221f58f1a8c8&quot;&gt;Have you heard about the eslint developer whose password was hijacked?&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.22. Modify session middleware settings&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each web framework and technology has its known weaknesses‚Ää-‚Äätelling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the &lt;code&gt;X-Powered-By&lt;/code&gt; header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sessions.md&quot;&gt;&lt;strong&gt;Read More: Cookie and session security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.23. Avoid DOS attacks by explicitly setting when a process should crash&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Denial_of_Service&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error‚Ää-‚Ääunless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There‚Äôs no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests‚Ää-‚Ääa handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.24. Prevent unsafe redirects&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A1-Injection&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/saferedirects.md&quot;&gt;&lt;strong&gt;Read More: Prevent unsafe redirects&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 6.25. Avoid publishing secrets to the npm registry&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An &lt;code&gt;.npmignore&lt;/code&gt; file can be used to ignore specific files or folders, or the &lt;code&gt;files&lt;/code&gt; array in &lt;code&gt;package.json&lt;/code&gt; can act as an allow list.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your project‚Äôs API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoid_publishing_secrets.md&quot;&gt;&lt;strong&gt;Read More: Avoid publishing secrets&lt;/strong&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;7. Draft: Performance Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;Our contributors are working on this section. &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/256&quot;&gt;Would you like to join?&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 7.1. Don‚Äôt block the event loop&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. &lt;strong&gt;3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/block-loop.md&quot;&gt;&lt;strong&gt;Read More: Do not block the event loop&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 7.2. Prefer native JS methods over user-land utils like Lodash&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; It‚Äôs often more penalising to use utility libraries like &lt;code&gt;lodash&lt;/code&gt; and &lt;code&gt;underscore&lt;/code&gt; over native methods as it leads to unneeded dependencies and slower performance. Bear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it‚Äôs now about 50% more performant than utility libraries.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äôll have to maintain less performant projects where you could have simply used what was &lt;strong&gt;already&lt;/strong&gt; available or dealt with a few more lines in exchange of a few more files.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/nativeoverutil.md&quot;&gt;&lt;strong&gt;Read More: Native over user land utils&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;8. Docker Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;üèÖ Many thanks to &lt;a href=&quot;https://github.com/BretFisher&quot;&gt;Bret Fisher&lt;/a&gt; from whom we learned many of the following practices&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.1 Use multi-stage builds for leaner and more secure Docker images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use multi-stage build to copy only necessary production artifacts. A lot of build-time dependencies and files are not needed for running your application. With multi-stage builds these resources can be used during build while the runtime environment contains only what‚Äôs necessary. Multi-stage builds are an easy way to get rid of overweight and security threats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Larger images will take longer to build and ship, build-only tools might contain vulnerabilities and secrets only meant for the build phase might be leaked.&lt;/p&gt; 
&lt;h3&gt;Example Dockerfile for multi-stage builds&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;FROM node:14.4.0 AS build

COPY . .
RUN npm ci &amp;amp;&amp;amp; npm run build


FROM node:slim-14.4.0

USER node
EXPOSE 8080

COPY --from=build /home/node/app/dist /home/node/app/package.json /home/node/app/package-lock.json ./
RUN npm ci --production

CMD [ &quot;node&quot;, &quot;dist/app.js&quot; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/multi_stage_builds.md&quot;&gt;&lt;strong&gt;Read More: Use multi-stage builds&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.2. Bootstrap using &lt;code&gt;node&lt;/code&gt; command, avoid &lt;code&gt;npm start&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; use &lt;code&gt;CMD [&#39;node&#39;,&#39;server.js&#39;]&lt;/code&gt; to start your app, avoid using npm scripts which don‚Äôt pass OS signals to the code. This prevents problems with child-processes, signal handling, graceful shutdown and having zombie processes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When no signals are passed, your code will never be notified about shutdowns. Without this, it will lose its chance to close properly possibly losing current requests and/or data.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/bootstrap-using-node.md&quot;&gt;&lt;strong&gt;Read More: Bootstrap container using node command, avoid npm start&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.3. Let the Docker runtime handle replication and uptime&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using a Docker run time orchestrator (e.g., Kubernetes), invoke the Node.js process directly without intermediate process managers or custom code that replicate the process (e.g. PM2, Cluster module). The runtime platform has the highest amount of data and visibility for making placement decision - It knows best how many processes are needed, how to spread them and what to do in case of crashes&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Container keeps crashing due to lack of resources will get restarted indefinitely by the process manager. Should Kubernetes be aware of that, it could relocate it to a different roomy instance&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/restart-and-replicate-processes.md&quot;&gt;&lt;strong&gt;Read More: Let the Docker orchestrator restart and replicate processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.4. Use .dockerignore to prevent leaking secrets&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Include a &lt;code&gt;.dockerignore&lt;/code&gt; file that filters out common secret files and development artifacts. By doing so, you might prevent secrets from leaking into the image. As a bonus the build time will significantly decrease. Also, ensure not to copy all files recursively rather explicitly choose what should be copied to Docker&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise&lt;/strong&gt;: Common personal secret files like &lt;code&gt;.env&lt;/code&gt;, &lt;code&gt;.aws&lt;/code&gt; and &lt;code&gt;.npmrc&lt;/code&gt; will be shared with anybody with access to the image (e.g. Docker repository)&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/docker-ignore.md&quot;&gt;&lt;strong&gt;Read More: Use .dockerignore&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.5. Clean-up dependencies before production&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Although Dev-Dependencies are sometimes needed during the build and test life-cycle, eventually the image that is shipped to production should be minimal and clean from development dependencies. Doing so guarantees that only necessary code is shipped and the amount of potential attacks (i.e. attack surface) is minimized. When using multi-stage build (see dedicated bullet) this can be achieved by installing all dependencies first and finally running &lt;code&gt;npm ci --production&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many of the infamous npm security breaches were found within development packages (e.g. &lt;a href=&quot;https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&quot;&gt;eslint-scope&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;üîó Read More: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/install-for-production.md&quot;&gt;Remove development dependencies&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.6. Shutdown smartly and gracefully&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handle the process SIGTERM event and clean-up all existing connection and resources. This should be done while responding to ongoing requests. In Dockerized runtimes shutting down containers is not a rare event, rather a frequent occurrence that happen as part of routine work. Achieving this demands some thoughtful code to orchestrate several moving parts: The load balancer, keep-alive connections, the HTTP server and other resources&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Dying immediately means not responding to thousands of disappointed users&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/graceful-shutdown.md&quot;&gt;&lt;strong&gt;Read More: Graceful shutdown&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.7. Set memory limits using both Docker and v8&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always configure a memory limit using both Docker and the JavaScript runtime flags. The Docker limit is needed to make thoughtful container placement decision, the ‚Äìv8‚Äôs flag max-old-space is needed to kick off the GC on time and prevent under utilization of memory. Practically, set the v8‚Äôs old space memory to be a just bit less than the container limit&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The docker definition is needed to perform thoughtful scaling decision and prevent starving other citizens. Without also defining the v8‚Äôs limits, it will under utilize the container resources - Without explicit instructions it crashes when utilizing ~50-60% of its host resources&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/memory-limit.md&quot;&gt;&lt;strong&gt;Read More: Set memory limits using Docker only&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.8. Plan for efficient caching&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Rebuilding a whole docker image from cache can be nearly instantaneous if done correctly. The less updated instructions should be at the top of your Dockerfile and the ones constantly changing (like app code) should be at the bottom.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Docker build will be very long and consume lot of resources even when making tiny changes&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/use-cache-for-shorter-build-time.md&quot;&gt;&lt;strong&gt;Read More: Leverage caching to reduce build times&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.9. Use explicit image reference, avoid &lt;code&gt;latest&lt;/code&gt; tag&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Specify an explicit image digest or versioned label, never refer to &lt;code&gt;latest&lt;/code&gt;. Developers are often led to believe that specifying the &lt;code&gt;latest&lt;/code&gt; tag will provide them with the most recent image in the repository however this is not the case. Using a digest guarantees that every instance of the service is running exactly the same code.&lt;/p&gt; 
&lt;p&gt;In addition, referring to an image tag means that the base image is subject to change, as image tags cannot be relied upon for a deterministic install. Instead, if a deterministic install is expected, a SHA256 digest can be used to reference an exact image.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A new version of a base image could be deployed into production with breaking changes, causing unintended application behaviour.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/image-tags.md&quot;&gt;&lt;strong&gt;Read More: Understand image tags and use the ‚Äúlatest‚Äù tag with caution&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.10. Prefer smaller Docker base images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Large images lead to higher exposure to vulnerabilities and increased resource consumption. Using leaner Docker images, such as Slim and Alpine Linux variants, mitigates this issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Building, pushing, and pulling images will take longer, unknown attack vectors can be used by malicious actors and more resources are consumed.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/smaller_base_images.md&quot;&gt;&lt;strong&gt;Read More: Prefer smaller images&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.11. Clean-out build-time secrets, avoid secrets in args&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid secrets leaking from the Docker build environment. A Docker image is typically shared in multiple environment like CI and a registry that are not as sanitized as production. A typical example is an npm token which is usually passed to a dockerfile as argument. This token stays within the image long after it is needed and allows the attacker indefinite access to a private npm registry. This can be avoided by coping a secret file like &lt;code&gt;.npmrc&lt;/code&gt; and then removing it using multi-stage build (beware, build history should be deleted as well) or by using Docker build-kit secret feature which leaves zero traces&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Everyone with access to the CI and docker registry will also get access to some precious organization secrets as a bonus&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/avoid-build-time-secrets.md&quot;&gt;&lt;strong&gt;Read More: Clean-out build-time secrets&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.12. Scan images for multi layers of vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Besides checking code dependencies vulnerabilities also scan the final image that is shipped to production. Docker image scanners check the code dependencies but also the OS binaries. This E2E security scan covers more ground and verifies that no bad guy injected bad things during the build. Consequently, it is recommended running this as the last step before deployment. There are a handful of free and commercial scanners that also provide CI/CD plugins&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your code might be entirely free from vulnerabilities. However it might still get hacked due to vulnerable version of OS-level binaries (e.g. OpenSSL, TarBall) that are commonly being used by applications&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/scan-images.md&quot;&gt;&lt;strong&gt;Read More: Scan the entire image before production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.13 Clean NODE_MODULE cache&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; After installing dependencies in a container remove the local cache. It doesn‚Äôt make any sense to duplicate the dependencies for faster future installs since there won‚Äôt be any further installs - A Docker image is immutable. Using a single line of code tens of MB (typically 10-50% of the image size) are shaved off&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The image that will get shipped to production will weigh 30% more due to files that will never get used&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/clean-cache.md&quot;&gt;&lt;strong&gt;Read More: Clean NODE_MODULE cache&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.14. Generic Docker practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of Docker advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/generic-tips.md&quot;&gt;&lt;strong&gt;Read More: Generic Docker practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;‚úî&quot;&gt; 8.15. Lint your Dockerfile&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Linting your Dockerfile is an important step to identify issues in your Dockerfile which differ from best practices. By checking for potential flaws using a specialised Docker linter, performance and security improvements can be easily identified, saving countless hours of wasted time or security issues in production code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Mistakenly the Dockerfile creator left Root as the production user, and also used an image from unknown source repository. This could be avoided with with just a simple linter.&lt;/p&gt; 
&lt;p&gt;üîó &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/lint-dockerfile.md&quot;&gt;&lt;strong&gt;Read More: Lint your Dockerfile&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#table-of-contents&quot;&gt;‚¨Ü Return to top&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Milestones&lt;/h1&gt; 
&lt;p&gt;To maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/milestones&quot;&gt;milestones&lt;/a&gt; and join the working groups if you want to contribute to this project&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;All translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!&lt;/p&gt; 
&lt;h3&gt;Completed translations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;Brazilian Portuguese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/marcelosdm&quot;&gt;Marcelo Melo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mattjin&quot;&gt;Matt Jin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;Russian&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/contributorpw&quot;&gt;Alex Ivanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/JA.png&quot; alt=&quot;JA&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.japanese.md&quot;&gt;Japanese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/YukiOta&quot;&gt;Yuki Ota&lt;/a&gt;, &lt;a href=&quot;https://github.com/YA21&quot;&gt;Yuta Azumi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.basque.md&quot;&gt;Basque&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/anediaz&quot;&gt;Ane Diaz de Tuesta&lt;/a&gt; &amp;amp; Joxefe Diaz de Tuesta&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Translations in progress&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt; &lt;a href=&quot;https://github.com/gaspaonrocks/nodebestpractices/raw/french-translation/README.french.md&quot;&gt;French&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/129&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt; Hebrew (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/156&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.korean.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/uronly14me&quot;&gt;Sangbeom Han&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/94&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt; &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/raw/spanish-translation/README.spanish.md&quot;&gt;Spanish&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/95&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt; Turkish (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/139&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Steering Committee&lt;/h2&gt; 
&lt;p&gt;Meet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/projects&quot;&gt;GitHub projects&lt;/a&gt;.&lt;/p&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/yoni.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;Yoni Goldberg&lt;/a&gt; &lt;a href=&quot;https://twitter.com/goldbergyoni&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://goldbergyoni.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Independent Node.js consultant who works with customers in the USA, Europe, and Israel on building large-scale Node.js applications. Many of the best practices above were first published at &lt;a href=&quot;https://goldbergyoni.com&quot;&gt;goldbergyoni.com&lt;/a&gt;. Reach Yoni at &lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;@goldbergyoni&lt;/a&gt; or &lt;a href=&quot;mailto:me@goldbergyoni.com&quot;&gt;me@goldbergyoni.com&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/bruno.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt; &lt;a href=&quot;https://brunoscheufler.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;üíª full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/kyle.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt; &lt;a href=&quot;https://twitter.com/kylemartin_93&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/in/kylemartinnz&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Full Stack Developer &amp;amp; Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.&lt;/p&gt; 
&lt;br&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/kevyn.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/kevynb&quot;&gt;Kevyn Bruyere&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/in/kevynbruyere/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Independent full-stack developer with a taste for Ops and automation.&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Steering Committee Emeriti&lt;/h3&gt; 
&lt;img align=&quot;left&quot; width=&quot;100&quot; height=&quot;100&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/sagir.png&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sagirk&quot;&gt;Sagir Khan&lt;/a&gt; &lt;a href=&quot;https://twitter.com/sagir_k&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://linkedin.com/in/sagirk&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/linkedin.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sagirk.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/www.png&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Deep specialist in JavaScript and its ecosystem ‚Äî React, Node.js, TypeScript, GraphQL, MongoDB, pretty much anything that involves JS/JSON in any layer of the system ‚Äî building products using the web platform for the world‚Äôs most recognized brands. Individual Member of the Node.js Foundation.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Collaborators&lt;/h2&gt; 
&lt;p&gt;Thank you to all our collaborators! üôè&lt;/p&gt; 
&lt;p&gt;Our collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributor guidelines&lt;/a&gt; üéâ&lt;/p&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/idori&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/ido.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/TheHollidayInn&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/keith.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt;&lt;/a&gt; | | :‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî: | :‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì: | | &lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter (Founder)&lt;/a&gt; | &lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt; |&lt;/p&gt; 
&lt;h3&gt;Collaborator Emeriti&lt;/h3&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/refack&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/members/refael.png&quot; width=&quot;50&quot; height=&quot;50&quot;&gt;&lt;/a&gt; | | :‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì‚Äì: | | &lt;a href=&quot;https://github.com/refack&quot;&gt;Refael Ackermann&lt;/a&gt; |&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you‚Äôve ever wanted to contribute to open source, now is your chance! See the &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributing docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kevinrambaud&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7501477?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Rambaud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kevinrambaud&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mfine15&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1286554?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Fine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mfine15&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://squgeim.github.io&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4996818?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shreya Dahal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-squgeim&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://matheusrocha89.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3718366?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matheus Cruz Rocha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-matheusrocha89&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bityog.github.io/Portfolio/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/28219178?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yog Mehta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-BitYog&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kudapara.co.zw&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13519184?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kudakwashe Paradzayi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kudapara&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.t1st3.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1469638?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;t1st3&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-t1st3&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mulijordan1976&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/33382022?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mulijordan1976&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mulijordan1976&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/matchai&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4658208?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matan Kushner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-matchai&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://fabiothiroki.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/670057?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabio Hiroki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-fabiothiroki&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://james.sumners.info/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/321201?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Sumners&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jsumners&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/_DanGamble&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7152041?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dan Gamble&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dan-gamble&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/trainorpj&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13276704?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;PJ Trainor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-trainorpj&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/reod&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3164299?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Remek Ambroziak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-reod&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ca.non.co.il&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1829789?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yoni Jah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-yonjah&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hazolsky&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1270790?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Misha Khokhlov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hazolsky&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://plus.google.com/+–ï–≤–≥–µ–Ω–∏–π–û—Ä–µ—Ö–æ–≤/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8045060?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evgeny Orekhov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-EvgenyOrekhov&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gediminasml&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19854105?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;-&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-gediminasml&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://hisaac.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/923876?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Isaac Halvorson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hisaac&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.vedrankaracic.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2808092?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vedran Karaƒçiƒá&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vkaracic&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lallenlowe&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10761165?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lallenlowe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-lallenlowe&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nwwells&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1039473?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nathan Wells&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nwwells&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/paulovitin&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/125503?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paulo Reis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-paulovitin&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://snap.simpego.ch&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1989646?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;syzer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-syzer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://sancho.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3763599?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Sancho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-davesnx&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://apiforge.it&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4929965?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Robert Manolea&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-pupix&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jumptoglide.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/708395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Xavier Ho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-spaxe&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.ocular-rhythm.io&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2738518?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ocularrhythm&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://septa97.me&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/13742634?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan Charles Maghirang Adona&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-septa97&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.cakeresume.com/allenfang&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5351390?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Allen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AllenFang&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leonardovillela&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8650543?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leonardo Villela&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-leonardovillela&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://michalzalecki.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3136577?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Micha≈Ç Za≈Çƒôcki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MichalZalecki&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.wealthbar.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/156449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Nicola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-chrisnicola&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/aecorredor&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9114987?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Corredor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-aecorredor&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cwar&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/272843?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cwar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-cwar&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/keyfoxth&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10647132?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yuwei&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-keyfoxth&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bigcodenerd.org&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10895594?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Utkarsh Bhatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-utkarshbhatt12&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/duartemendes&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12852058?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Duarte Mendes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-duartemendes&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jasonkim.ca&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/103456?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-serv&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Max101&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2124249?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mitja O.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Max101&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://sandromiguel.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6423157?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sandro Miguel Marques&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SandroMiguel&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/GabeKuslansky&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9855482?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-GabeKuslansky&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ripper234.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/172282?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ron Gross&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ripper234&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.thecodebarbarian.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1620265?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Valeri Karpov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vkarpov15&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://sergiobernal.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20087388?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergio Bernal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-imsergiobernal&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ntelkedzhiev&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7332371?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikola Telkedzhiev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ntelkedzhiev&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vitordagamagodoy&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26370059?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vitor Godoy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-vitordagamagodoy&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.manishsaraan.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/19797340?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manish Saraan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-manishsaraan&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/uronly14me&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5186814?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sangbeom Han&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-uronly14me&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blackmatch.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/12443954?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;blackmatch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-blackmatch&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://simmsreeve.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5173131?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Reeve&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ISNIT0&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BusbyActual&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/14985016?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Busby&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-BusbyActual&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jsdecorator.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4482199?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Iman Mohamadi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ImanMh&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/HeeL&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/287769?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergii Paryzhskyi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-HeeL&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kapilepatel&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/25738473?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kapil Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kapilepatel&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/justjavac&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/359395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ëø∑Ê∏°&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-justjavac&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hozefaj&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2084833?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hozefa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-hozefaj&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/el-ethan&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10249884?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ethan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-el-ethan&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/milkdeliver&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3108407?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-milkdeliver&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ArlindXh&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19508764?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arlind&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ArlindXh&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ttous&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19815440?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Teddy Toussaint&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ttous&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ardern.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2419690?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lewis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-LewisArdern&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://gabriellidenor.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/765963?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabriel Lidenor &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-GabrielLidenor&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/animir&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4623196?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-animir&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Francozeira&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/47419763?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Francozeira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Francozeira&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/invvard&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7305493?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Invvard&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Invvard&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://romulogarofalo.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/18492592?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;R√¥mulo Garofalo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-romulogarofalo&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://thoqbk.github.io/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1491103?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tho Q Luong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-thoqbk&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Qeneke&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/20271568?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Burak Shen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Qeneke&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.happy-css.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2950505?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin Muzatko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MartinMuzatko&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/autoboxer&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2757601?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jared Collier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-autoboxer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://hiltonmeyer.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4545860?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hilton Meyer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bikingbadger&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kr.vuejs.org&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1451365?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ChangJoo Park(Î∞ïÏ∞ΩÏ£º)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ChangJoo-Park&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MasahiroSakaguchi&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/16427431?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Masahiro Sakaguchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MasahiroSakaguchi&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1253400?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Keith Holliday&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-TheHollidayInn&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.coreycleary.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1485356?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;coreyc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-coreyc&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://maxcubing.wordpress.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8260834?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maximilian Berkmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Berkmann18&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DouglasMV&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/32845487?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Douglas Mariano Valero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-DouglasMV&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marcelosdm&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18266600?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcelo Melo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-marcelosdm&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mperk_&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3465794?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mehmet Perk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mperk&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ryanouyang&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/360426?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ryan ouyang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ryanouyang&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shabeer-mdy&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26842535?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shabeer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-shabeer-mdy&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/halfzebra&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3983879?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eduard Kyvenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-halfzebra&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://deyvisonrocha.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/686067?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Deyvison Rocha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-deyvisonrocha&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://twitter.com/georgemamer&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/20108934?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;George Mamer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-georgem3&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leimonio&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1969742?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Konstantinos Leimonis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-leimonio&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Zybax&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22094453?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oliver Lluberes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-Zybax&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/story/tiendq&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/815910?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tien Do&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-tiendq&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://singh1114.github.io/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/11356398?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ranvir Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-singh1114&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/collierrgbsitisfise&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13496126?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vadim Nicolaev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-collierrgbsitisfise&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-collierrgbsitisfise&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/germangamboa95&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/28633849?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;German Gamboa Gonzalez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-germangamboa95&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AbdelrahmanHafez&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19984935?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AbdelrahmanHafez&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/chandiran-dmc&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/42678579?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chandiran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-chandiran-dmc&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/VinayaSathyanarayana&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/16976677?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;VinayaSathyanarayana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-VinayaSathyanarayana&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.kimkern.de&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2671139?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kim Kern&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kiwikern&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://kennethfreitas.github.io/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/55669043?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kenneth Freitas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kennethfreitas&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/songe&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1531561?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;songe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-songe&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ksed.dev&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30693707?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kirill Shekhovtsov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Ksedline&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SerzN1&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2534649?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Serge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SerzN1&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/keyrwinz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/21241761?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;keyrwinz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-keyrwinz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nDmitry&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2134568?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitry Nikitenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nDmitry&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bushuai.cc&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1875256?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bushuai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/pulls?q=is%3Apr+reviewed-by%3Abushuai&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bushuai&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/users/1348195/benjamin-gruenbaum&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1315533?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin Gruenbaum&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-benjamingr&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/byeze&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7424138?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ezequiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-byeze&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/juaoose&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/994594?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Juan Jos√© Rodr√≠guez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-juaoose&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/OrBin&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6897234?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Or Bin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-OrBin&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/andreoav07&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/508827?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andreo Vieira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-andreoav&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mikicho&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11459632?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Solomon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-mikicho&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jimmycallin&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2225828?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jimmy Callin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jimmycallin&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/siddharthofficial/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/26025955?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Siddharth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-w01fS&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ryansmith.tech/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1578766?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ryan3E0&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://de.linkedin.com/in/tom-boettger&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/49961674?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Boettger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-bttger&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jormaechea&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5612500?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joaqu√≠n Ormaechea&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-jormaechea&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dfrzuz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/71859096?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dfrzuz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-dfrzuz&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/victor-homyakov&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/121449?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Victor Homyakov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-victor-homyakov&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://joshuahemphill.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/46608115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-josh-hemphill&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#security-josh-hemphill&quot; title=&quot;Security&quot;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alec-francis&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32949882?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alec Francis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-alec-francis&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/arjun6610&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/61268891?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;arjun6610&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-arjun6610&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jan-osch&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/11651780?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan Osch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-jan-osch&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/thiagotrs&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32005779?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thiago Rotondo Sampaio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-thiagotrs&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Alexsey&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6392013?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexsey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Alexsey&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/13luismb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/32210483?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luis A. Acurero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-13luismb&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lromano97.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/22394847?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Romano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-lromano97&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/denisecase&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/13016516?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Denise Case&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-denisecase&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/story/elektronik&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1078554?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Ribal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-elektronik2k5&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/pulls?q=is%3Apr+reviewed-by%3Aelektronik2k5&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/0xflotus&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/26602940?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;0xflotus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-0xflotus&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.dijonkitchen.org/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11434205?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Chen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dijonkitchen&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dilansri&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5089728?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dilan Srilal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-dilansri&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vectree.ru&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4215285?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vladthelittleone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-vladthelittleone&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nikolaso.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/60047271?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nik Osvalds&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-nosvalds&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kdaniel21&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/39854385?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Kiss&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/commits?author=kdaniel21&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/forresst17&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/163352?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Forresst&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-forresst&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/svenheden&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/76098?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Svenheden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-svenheden&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AustrisC&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12381652?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AustrisC&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-AustrisC&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cisco0808&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/60251188?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kyeongtae kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-cisco0808&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://keybase.io/651z9pz968v2accj&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/65741741?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;007&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-6gx7iycn53ioq2e8apk1j1ypwov4giui&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.anediaz.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17216937?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ane Diaz de Tuesta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-anediaz&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-anediaz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://yukioh.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23182489?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;YukiOta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translation-YukiOta&quot; title=&quot;Translation&quot;&gt;üåç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.yeovilhospital.co.uk/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43814140?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frazer Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Fdawgs&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rluvaton&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16746759?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Raz Luvaton&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-rluvaton&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/YA21&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37298463?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yuta Azumi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-YA21&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andrewjbarbour&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/77080074?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;andrewjbarbour&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-andrewjbarbour&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://MasujimaRyohei.jp&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17163541?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-MasujimaRyohei&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kubanac95&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16191931?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aleksandar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-kubanac95&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://vincentjonathan.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32597776?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Owl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-SuspiciousLookingOwl&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yedidyas&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36074789?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yedidya Schwartz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-yedidyas&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#example-yedidyas&quot; title=&quot;Examples&quot;&gt;üí°&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ariel-diaz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20423540?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ariel-diaz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.koenigthomas.de/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7080389?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas K√∂nig&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-Vispercept&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/coocos&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1397804?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kalle L√§ms√§&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-coocos&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://math.cat&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10328430?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wyatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-ZhyMC&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://libkhadir.fr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45130488?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;KHADIR Tayeb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-tkhadir&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shankarregmi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7703345?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shankar Regmi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-shankarregmi&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/codebyshubham&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10389723?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shubham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-codebyshubham&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://lucalves.me/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17712401?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Alves&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#content-lucalves&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;ÌïúÍµ≠Ïñ¥&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;Êó•Êú¨Ë™û&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Fran√ßais&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Espa√±ol&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Portugu√™s&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;–†—É—Å—Å–∫–∏–π&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;T√ºrk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‚òù Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan‚Äôs theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal‚Äôs Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner‚Äôs method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton‚Äôs method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui œÄ Algorithm&lt;/a&gt; - approximate œÄ calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher‚ÄìYates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - ‚Äú0/1‚Äù and ‚ÄúUnbound‚Äù ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - ‚ÄúBrute Force‚Äù and ‚ÄúDynamic Programming‚Äù (Kadane‚Äôs) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth‚ÄìMorris‚ÄìPratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan‚Äôs algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury‚Äôs algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju‚Äôs algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal‚Äôs Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight‚Äôs Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal‚Äôs Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight‚Äôs Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In case if linting or testing is failing try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;‚ñ∂ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;p&gt;| Big O Notation | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements | | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì‚Äì | | &lt;strong&gt;O(1)&lt;/strong&gt; | 1 | 1 | 1 | | &lt;strong&gt;O(log N)&lt;/strong&gt; | 3 | 6 | 9 | | &lt;strong&gt;O(N)&lt;/strong&gt; | 10 | 100 | 1000 | | &lt;strong&gt;O(N log N)&lt;/strong&gt; | 30 | 600 | 9000 | | &lt;strong&gt;O(N^2)&lt;/strong&gt; | 100 | 10000 | 1000000 | | &lt;strong&gt;O(2^N)&lt;/strong&gt; | 1024 | 1.26e+29 | 1.07e+301 | | &lt;strong&gt;O(N!)&lt;/strong&gt; | 3628800 | 9.3e+157 | 4.02e+2567 |&lt;/p&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;p&gt;| Data Structure | Access | Search | Insertion | Deletion | Comments | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì | :‚Äî‚Äì‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äì‚Äì‚Äì‚Äì | | &lt;strong&gt;Array&lt;/strong&gt; | 1 | n | n | n | | | &lt;strong&gt;Stack&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Queue&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Linked List&lt;/strong&gt; | n | n | 1 | n | | | &lt;strong&gt;Hash Table&lt;/strong&gt; | - | n | n | n | In case of perfect hash function costs would be O(1) | | &lt;strong&gt;Binary Search Tree&lt;/strong&gt; | n | n | n | n | In case of balanced tree costs would be O(log(n)) | | &lt;strong&gt;B-Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Red-Black Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;AVL Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Bloom Filter&lt;/strong&gt; | - | 1 | 1 | - | False positives are possible while searching |&lt;/p&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;p&gt;| Name | Best | Average | Worst | Memory | Stable | Comments | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | :‚Äî‚Äî‚Äî‚Äì‚Äì: | :‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì: | :‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äì‚Äì‚Äì‚Äì | | &lt;strong&gt;Bubble sort&lt;/strong&gt; | n | n&lt;sup&gt;2&lt;/sup&gt; | n&lt;sup&gt;2&lt;/sup&gt; | 1 | Yes | | | &lt;strong&gt;Insertion sort&lt;/strong&gt; | n | n&lt;sup&gt;2&lt;/sup&gt; | n&lt;sup&gt;2&lt;/sup&gt; | 1 | Yes | | | &lt;strong&gt;Selection sort&lt;/strong&gt; | n&lt;sup&gt;2&lt;/sup&gt; | n&lt;sup&gt;2&lt;/sup&gt; | n&lt;sup&gt;2&lt;/sup&gt; | 1 | No | | | &lt;strong&gt;Heap sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | 1 | No | | | &lt;strong&gt;Merge sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n | Yes | | | &lt;strong&gt;Quick sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&lt;sup&gt;2&lt;/sup&gt; | log(n) | No | Quicksort is usually done in-place with O(log(n)) stack space | | &lt;strong&gt;Shell sort&lt;/strong&gt; | n&amp;nbsp;log(n) | depends on gap sequence | n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt; | 1 | No | | | &lt;strong&gt;Counting sort&lt;/strong&gt; | n + r | n + r | n + r | n + r | Yes | r - biggest number in array | | &lt;strong&gt;Radix sort&lt;/strong&gt; | n * k | n * k | n * k | n + k | Yes | k - length of longest key |&lt;/p&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;‚àë = 0&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chrisleekr/binance-trading-bot</title>
      <link>https://github.com/chrisleekr/binance-trading-bot</link>
      <description>&lt;p&gt;Automated Binance trading bot - Buy low/Sell high with stop loss limit/Trade multiple cryptocurrencies&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Binance Trading Bot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/actions?query=workflow%3Amain&quot;&gt;&lt;img src=&quot;https://github.com/chrisleekr/binance-trading-bot/workflows/main/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;CodeCov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/chrisleekr/binance-trading-bot&quot; alt=&quot;Docker pull&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/chrisleekr/binance-trading-bot&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Automated Binance trading bot with trailing buy/sell strategy&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.ko.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%ED%95%9C%EA%B5%AD%EC%96%B4-brightgreen.svg?sanitize=true&quot; alt=&quot;ko&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is a test project. I am just testing my code.&lt;/p&gt; 
&lt;h2&gt;Warnings&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;I cannot guarantee whether you can make money or not.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk! I have no responsibility for any loss or hardship incurred directly or indirectly by using this code.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before updating the bot, make sure to record the last buy price in the note. It may lose the configuration or last buy price records.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Breaking Changes&lt;/h2&gt; 
&lt;p&gt;As I introduce a new feature, I did lots of refactoring the code including settings. If the bot version is lower than the version &lt;code&gt;0.0.57&lt;/code&gt;, then the update will cause lost your settings and the last buy price records. You must write down settings and the last buy price records and re-configure after the upgrade.&lt;/p&gt; 
&lt;p&gt;If experiences any issue, simply delete all docker volumes/images and re-launch the bot.&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;h3&gt;Trailing Buy/Sell Bot&lt;/h3&gt; 
&lt;p&gt;This bot is using the concept of trailing buy/sell order which allows following the price fall/rise.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot can monitor multiple symbols. Each symbol will be monitored per second.&lt;/li&gt; 
 &lt;li&gt;The bot is only tested and working with USDT pair in the FIAT market such as BTCUSDT, ETHUSDT. You can add more FIAT symbols like BUSD, AUD from the frontend. However, I didn‚Äôt test in the live server. So use with your own risk.&lt;/li&gt; 
 &lt;li&gt;The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version is 3.2.20, which is provided by &lt;a href=&quot;https://hub.docker.com/r/apcheamitru/arm32v7-mongo&quot;&gt;apcheamitru&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Buy Signal&lt;/h4&gt; 
&lt;p&gt;The bot will continuously monitor the lowest value for the period of the candles. Once the current price reaches the lowest price, then the bot will place a STOP-LOSS-LIMIT order to buy. If the current price continuously falls, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot will not place a buy order if has enough coin (typically over $10 worth) to sell when reaches the trigger price for selling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Buy Scenario&lt;/h5&gt; 
&lt;p&gt;Let say, if the buy configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Maximum purchase amount: $50&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1.005 (0.5%)&lt;/li&gt; 
 &lt;li&gt;Stop price percentage: 1.01 (1.0%)&lt;/li&gt; 
 &lt;li&gt;Limit price percentage: 1.011 (1.1%)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $101&lt;/li&gt; 
 &lt;li&gt;Lowest price: $100&lt;/li&gt; 
 &lt;li&gt;Trigger price: $100.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will not place an order because the trigger price ($100.5) is less than the current price ($101).&lt;/p&gt; 
&lt;p&gt;In the next tick, the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
 &lt;li&gt;Lowest price: $100&lt;/li&gt; 
 &lt;li&gt;Trigger price: $100.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The bot will place new STOP-LOSS-LIMIT order for buying because the current price ($100) is less than the trigger price ($100.5). For the simple calculation, I do not take an account for the commission. In real trading, the quantity may be different. The new buy order will be placed as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 1.01 = $101&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 1.011 = $101.1&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.49&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In the next tick, the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $99&lt;/li&gt; 
 &lt;li&gt;Current limit price: $99 * 1.011 = 100.089&lt;/li&gt; 
 &lt;li&gt;Open order stop price: $101&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As the open order‚Äôs stop price ($101) is higher than the current limit price ($100.089), the bot will cancel the open order and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $99 * 1.01 = $99.99&lt;/li&gt; 
 &lt;li&gt;Limit price: $99 * 1.011 = $100.089&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.49&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the price continuously falls, then the new buy order will be placed with the new price.&lt;/p&gt; 
&lt;p&gt;And if the market changes as below in the next tick:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the current price reaches the stop price ($99.99); hence, the order will be executed with the limit price ($100.089).&lt;/p&gt; 
&lt;h3&gt;Sell Signal&lt;/h3&gt; 
&lt;p&gt;If there is enough balance for selling and the last buy price is recorded in the bot, then the bot will start monitoring the sell signal. Once the current price reaches the trigger price, then the bot will place a STOP-LOSS-LIMIT order to sell. If the current price continuously rises, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If the coin is worth less than typically $10 (minimum notional value), then the bot will remove the last buy price because Binance does not allow to place an order of less than $10.&lt;/li&gt; 
 &lt;li&gt;If the bot does not have a record for the last buy price, the bot will not sell the coin.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sell Scenario&lt;/h4&gt; 
&lt;p&gt;Let say, if the sell configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Trigger percentage: 1.05 (5.0%)&lt;/li&gt; 
 &lt;li&gt;Stop price percentage: 0.98 (-2.0%)&lt;/li&gt; 
 &lt;li&gt;Limit price percentage: 0.979 (-2.1%)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Coin owned: 0.5&lt;/li&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
 &lt;li&gt;Last buy price: $100&lt;/li&gt; 
 &lt;li&gt;Trigger price: $100 * 1.05 = $105&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will not place an order because the trigger price ($105) is higher than the current price ($100).&lt;/p&gt; 
&lt;p&gt;If the price is continuously falling, then the bot will keep monitoring until the price reaches the trigger price.&lt;/p&gt; 
&lt;p&gt;In the next tick, the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $105&lt;/li&gt; 
 &lt;li&gt;Trigger price: $105&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The bot will place new STOP-LOSS-LIMIT order for selling because the current price ($105) is higher or equal than the trigger price ($105). For the simple calculation, I do not take an account for the commission. In real trading, the quantity may be different. The new sell order will be placed as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $105 * 0.98 = $102.9&lt;/li&gt; 
 &lt;li&gt;Limit price: $105 * 0.979 = $102.795&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In the next tick, the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $106&lt;/li&gt; 
 &lt;li&gt;Current limit price: $103.774&lt;/li&gt; 
 &lt;li&gt;Open order stop price: $102.29&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As the open order‚Äôs stop price ($102.29) is less than the current limit price ($103.774), the bot will cancel the open order and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $106 * 0.98 = $103.88&lt;/li&gt; 
 &lt;li&gt;Limit price: $106 * 0.979 = $103.774&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the price continuously rises, then the new sell order will be placed with the new price.&lt;/p&gt; 
&lt;p&gt;And if the market changes as below in the next tick:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $103&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The the current price reaches the stop price ($103.88); hence, the order will be executed with the limit price ($103.774).&lt;/p&gt; 
&lt;h3&gt;Frontend + WebSocket&lt;/h3&gt; 
&lt;p&gt;React.js based frontend communicating via Web Socket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;List monitoring coins with buy/sell signals/open orders&lt;/li&gt; 
 &lt;li&gt;View account balances&lt;/li&gt; 
 &lt;li&gt;Manage global/symbol settings&lt;/li&gt; 
 &lt;li&gt;Delete caches that are not monitored&lt;/li&gt; 
 &lt;li&gt;Link to public URL&lt;/li&gt; 
 &lt;li&gt;Support Add to Home Screen&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Parameters&lt;/h2&gt; 
&lt;p&gt;Use environment parameters to adjust parameters. Check &lt;code&gt;/config/custom-environment-variables.json&lt;/code&gt; to see list of available environment parameters.&lt;/p&gt; 
&lt;p&gt;Or use the frontend to adjust configurations after launching the application.&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.dist&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;| Environment Key | Description | Sample Value | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | | BINANCE_LIVE_API_KEY | Binance API key for live | (from Binance) | | BINANCE_LIVE_SECRET_KEY | Binance API secret for live | (from Binance) | | BINANCE_TEST_API_KEY | Binance API key for test | (from Binance) | | BINANCE_TEST_SECRET_KEY | Binance API secret for test | (from Binance) | | BINANCE_SLACK_WEBHOOK_URL | Slack webhook URL | (from Slack) | | BINANCE_SLACK_CHANNEL | Slack channel | ‚Äú#binance‚Äù | | BINANCE_SLACK_USERNAME | Slack username | Chris | | BINANCE_LOCAL_TUNNEL_SUBDOMAIN | Local tunnel public URL subdomain | binance |&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Check &lt;code&gt;docker-compose.yml&lt;/code&gt; for &lt;code&gt;BINANCE_MODE&lt;/code&gt; environment parameter&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch the application with docker-compose&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or using the latest build image from DockerHub&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
docker-compose -f docker-compose.server.yml pull
docker-compose -f docker-compose.server.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or if using Raspberry Pi 32bit. Must build again for Raspberry Pi.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
docker build . --build-arg NODE_ENV=production --target production-stage -t chrisleekr/binance-trading-bot:latest
docker-compose -f docker-compose.rpi.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When launching the application, it will notify public URL to the Slack.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Install via Stackfile&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href=&quot;https://www.portainer.io/&quot;&gt;Portainer&lt;/a&gt; create new Stack&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Copy content of &lt;code&gt;docker-stack.yml&lt;/code&gt; or upload the file&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set environment keys for &lt;code&gt;binance-bot&lt;/code&gt; in the &lt;code&gt;docker-stack.yml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch and open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;| Frontend Mobile | Setting | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | | &lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111430413-72e8f280-874e-11eb-9870-6603282fde8e.png&quot; alt=&quot;Frontend Mobile&quot;&gt; | &lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027223-f2bb4800-8442-11eb-9f5d-95f77298f4c0.png&quot; alt=&quot;Setting&quot;&gt; |&lt;/p&gt; 
&lt;p&gt;| Frontend Desktop | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì‚Äì | | &lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111430212-28677600-874e-11eb-9314-1d617e25fd06.png&quot; alt=&quot;Frontend Desktop&quot;&gt; |&lt;/p&gt; 
&lt;h3&gt;Sample Trade&lt;/h3&gt; 
&lt;p&gt;| Chart | Buy Orders | Sell Orders | | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì‚Äì | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | | &lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027391-192db300-8444-11eb-8df4-91c98d0c835b.png&quot; alt=&quot;Chart&quot;&gt; | &lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027403-36628180-8444-11eb-91dc-f3cdabc5a79e.png&quot; alt=&quot;Buy Orders&quot;&gt; | &lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027411-4b3f1500-8444-11eb-8525-37f02a63de25.png&quot; alt=&quot;Sell Orders&quot;&gt; |&lt;/p&gt; 
&lt;h3&gt;Last 30 days trade&lt;/h3&gt; 
&lt;p&gt;| Trade History | PNL Analysis | | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | | &lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111430291-4503ae00-874e-11eb-9e68-aefa4bca19b2.png&quot; alt=&quot;Trade History&quot;&gt; | &lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111430313-4df47f80-874e-11eb-9f3d-e85cf3027d74.png&quot; alt=&quot;Profit &amp;amp; Loss&quot;&gt; |&lt;/p&gt; 
&lt;h2&gt;Changes &amp;amp; Todo&lt;/h2&gt; 
&lt;p&gt;Please refer &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt; to view the past changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[ ] Update the bot to monitor all coins every second - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/52&quot;&gt;#52&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Display release version to the frontend - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/59&quot;&gt;#59&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Improve frontend &amp;amp; settings UI - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/93&quot;&gt;#93&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/85&quot;&gt;#85&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Support all symbols - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/104&quot;&gt;#104&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Improve sell strategy with conditional stop price percentage based on the profit percentage - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/94&quot;&gt;#94&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Add sudden drop buy strategy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/67&quot;&gt;#67&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Improve buy strategy with restricting purchase if the price is close to ATH - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/82&quot;&gt;#82&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Add minimum required order amount - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/84&quot;&gt;#84&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Add manual buy/sell feature -&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/100&quot;&gt;#100&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Add stop loss feature - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/99&quot;&gt;#99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Support multilingual frontend - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/56&quot;&gt;#56&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Reset global configuration to initial configuration - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/97&quot;&gt;#97&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ ] Add frontend option to disable sorting&lt;/li&gt; 
 &lt;li&gt;[ ] Allow browser notification in the frontend&lt;/li&gt; 
 &lt;li&gt;[ ] Secure frontend with the password&lt;/li&gt; 
 &lt;li&gt;[ ] Develop simple setup screen for secrets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d0x2f&quot;&gt;@d0x2f&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Maxoos&quot;&gt;@Maxoos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OOtta&quot;&gt;@OOtta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ienthach&quot;&gt;@ienthach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PlayeTT&quot;&gt;@PlayeTT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chopeta&quot;&gt;@chopeta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/santoshbmath&quot;&gt;@santoshbmath&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BramFr&quot;&gt;@BramFr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 150.0; height: 150.0&quot;&gt; &lt;a href=&quot;https://github.com/chrisleekr&quot;&gt; &lt;img src=&quot;https://avatars.githubusercontent.com/u/5715919?v=4&quot; width=&quot;100;&quot; style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot; alt=&quot;chrisleekr/&quot;&gt; &lt;br&gt; &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;chrisleekr&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 150.0; height: 150.0&quot;&gt; &lt;a href=&quot;https://github.com/romualdr&quot;&gt; &lt;img src=&quot;https://avatars.githubusercontent.com/u/5497356?v=4&quot; width=&quot;100;&quot; style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot; alt=&quot;Romuald&quot; R.&gt; &lt;br&gt; &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;Romuald R.&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 150.0; height: 150.0&quot;&gt; &lt;a href=&quot;https://github.com/hipposen&quot;&gt; &lt;img src=&quot;https://avatars.githubusercontent.com/u/10888467?v=4&quot; width=&quot;100;&quot; style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot; alt=&quot;hipposen/&quot;&gt; &lt;br&gt; &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;hipposen&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; style=&quot;word-wrap: break-word; width: 150.0; height: 150.0&quot;&gt; &lt;a href=&quot;https://github.com/thamlth&quot;&gt; &lt;img src=&quot;https://avatars.githubusercontent.com/u/45093611?v=4&quot; width=&quot;100;&quot; style=&quot;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&quot; alt=&quot;thamlth/&quot;&gt; &lt;br&gt; &lt;sub style=&quot;font-size:14px&quot;&gt;&lt;b&gt;thamlth&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>ryanmcdermott/clean-code-javascript</title>
      <link>https://github.com/ryanmcdermott/clean-code-javascript</link>
      <description>&lt;p&gt;üõÅ Clean Code concepts adapted for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;clean-code-javascript&lt;/h1&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#objects-and-data-structures&quot;&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#classes&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#solid&quot;&gt;SOLID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#concurrency&quot;&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#error-handling&quot;&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#formatting&quot;&gt;Formatting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://www.osnews.com/images/comics/wtfm.jpg&quot; alt=&quot;Humorous image of software quality estimation as a count of how many expletives you shout when reading code&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Software engineering principles, from Robert C. Martin‚Äôs book &lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;, adapted for JavaScript. This is not a style guide. It‚Äôs a guide to producing &lt;a href=&quot;https://github.com/ryanmcdermott/3rs-of-software-architecture&quot;&gt;readable, reusable, and refactorable&lt;/a&gt; software in JavaScript.&lt;/p&gt; 
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be universally agreed upon. These are guidelines and nothing more, but they are ones codified over many years of collective experience by the authors of &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Our craft of software engineering is just a bit over 50 years old, and we are still learning a lot. When software architecture is as old as architecture itself, maybe then we will have harder rules to follow. For now, let these guidelines serve as a touchstone by which to assess the quality of the JavaScript code that you and your team produce.&lt;/p&gt; 
&lt;p&gt;One more thing: knowing these won‚Äôt immediately make you a better software developer, and working with them for many years doesn‚Äôt mean you won‚Äôt make mistakes. Every piece of code starts as a first draft, like wet clay getting shaped into its final form. Finally, we chisel away the imperfections when we review it with our peers. Don‚Äôt beat yourself up for first drafts that need improvement. Beat up the code instead!&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use meaningful and pronounceable variable names&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const yyyymmdstr = moment().format(&quot;YYYY/MM/DD&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const currentDate = moment().format(&quot;YYYY/MM/DD&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use the same vocabulary for the same type of variable&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getUserInfo();
getClientData();
getCustomerRecord();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getUser();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use searchable names&lt;/h3&gt; 
&lt;p&gt;We will read more code than we will ever write. It‚Äôs important that the code we do write is readable and searchable. By &lt;em&gt;not&lt;/em&gt; naming variables that end up being meaningful for understanding our program, we hurt our readers. Make your names searchable. Tools like &lt;a href=&quot;https://github.com/danielstjules/buddy.js&quot;&gt;buddy.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/eslint/eslint/raw/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md&quot;&gt;ESLint&lt;/a&gt; can help identify unnamed constants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// What the heck is 86400000 for?
setTimeout(blastOff, 86400000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Declare them as capitalized named constants.
const MILLISECONDS_IN_A_DAY = 60 * 60 * 24 * 1000; //86400000;

setTimeout(blastOff, MILLISECONDS_IN_A_DAY);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use explanatory variables&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(
  address.match(cityZipCodeRegex)[1],
  address.match(cityZipCodeRegex)[2]
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [_, city, zipCode] = address.match(cityZipCodeRegex) || [];
saveCityZipCode(city, zipCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Mental Mapping&lt;/h3&gt; 
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(l =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  // Wait, what is `l` for again?
  dispatch(l);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(location =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  dispatch(location);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don‚Äôt add unneeded context&lt;/h3&gt; 
&lt;p&gt;If your class/object name tells you something, don‚Äôt repeat that in your variable name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Car = {
  carMake: &quot;Honda&quot;,
  carModel: &quot;Accord&quot;,
  carColor: &quot;Blue&quot;
};

function paintCar(car) {
  car.carColor = &quot;Red&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Car = {
  make: &quot;Honda&quot;,
  model: &quot;Accord&quot;,
  color: &quot;Blue&quot;
};

function paintCar(car) {
  car.color = &quot;Red&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use default arguments instead of short circuiting or conditionals&lt;/h3&gt; 
&lt;p&gt;Default arguments are often cleaner than short circuiting. Be aware that if you use them, your function will only provide default values for &lt;code&gt;undefined&lt;/code&gt; arguments. Other ‚Äúfalsy‚Äù values such as &lt;code&gt;&#39;&#39;&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;, will not be replaced by a default value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMicrobrewery(name) {
  const breweryName = name || &quot;Hipster Brew Co.&quot;;
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMicrobrewery(name = &quot;Hipster Brew Co.&quot;) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Function arguments (2 or fewer ideally)&lt;/h3&gt; 
&lt;p&gt;Limiting the amount of function parameters is incredibly important because it makes testing your function easier. Having more than three leads to a combinatorial explosion where you have to test tons of different cases with each separate argument.&lt;/p&gt; 
&lt;p&gt;One or two arguments is the ideal case, and three should be avoided if possible. Anything more than that should be consolidated. Usually, if you have more than two arguments then your function is trying to do too much. In cases where it‚Äôs not, most of the time a higher-level object will suffice as an argument.&lt;/p&gt; 
&lt;p&gt;Since JavaScript allows you to make objects on the fly, without a lot of class boilerplate, you can use an object if you are finding yourself needing a lot of arguments.&lt;/p&gt; 
&lt;p&gt;To make it obvious what properties the function expects, you can use the ES2015/ES6 destructuring syntax. This has a few advantages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;When someone looks at the function signature, it‚Äôs immediately clear what properties are being used.&lt;/li&gt; 
 &lt;li&gt;It can be used to simulate named parameters.&lt;/li&gt; 
 &lt;li&gt;Destructuring also clones the specified primitive values of the argument object passed into the function. This can help prevent side effects. Note: objects and arrays that are destructured from the argument object are NOT cloned.&lt;/li&gt; 
 &lt;li&gt;Linters can warn you about unused properties, which would be impossible without destructuring.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMenu(title, body, buttonText, cancellable) {
  // ...
}

createMenu(&quot;Foo&quot;, &quot;Bar&quot;, &quot;Baz&quot;, true);

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMenu({ title, body, buttonText, cancellable }) {
  // ...
}

createMenu({
  title: &quot;Foo&quot;,
  body: &quot;Bar&quot;,
  buttonText: &quot;Baz&quot;,
  cancellable: true
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should do one thing&lt;/h3&gt; 
&lt;p&gt;This is by far the most important rule in software engineering. When functions do more than one thing, they are harder to compose, test, and reason about. When you can isolate a function to just one action, it can be refactored easily and your code will read much cleaner. If you take nothing else away from this guide other than this, you‚Äôll be ahead of many developers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function emailClients(clients) {
  clients.forEach(client =&amp;gt; {
    const clientRecord = database.lookup(client);
    if (clientRecord.isActive()) {
      email(client);
    }
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function emailActiveClients(clients) {
  clients.filter(isActiveClient).forEach(email);
}

function isActiveClient(client) {
  const clientRecord = database.lookup(client);
  return clientRecord.isActive();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function names should say what they do&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addToDate(date, month) {
  // ...
}

const date = new Date();

// It&#39;s hard to tell from the function name what is added
addToDate(date, 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addMonthToDate(month, date) {
  // ...
}

const date = new Date();
addMonthToDate(1, date);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should only be one level of abstraction&lt;/h3&gt; 
&lt;p&gt;When you have more than one level of abstraction your function is usually doing too much. Splitting up functions leads to reusability and easier testing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach(token =&amp;gt; {
    // lex...
  });

  ast.forEach(node =&amp;gt; {
    // parse...
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const syntaxTree = parse(tokens);
  syntaxTree.forEach(node =&amp;gt; {
    // parse...
  });
}

function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      tokens.push(/* ... */);
    });
  });

  return tokens;
}

function parse(tokens) {
  const syntaxTree = [];
  tokens.forEach(token =&amp;gt; {
    syntaxTree.push(/* ... */);
  });

  return syntaxTree;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove duplicate code&lt;/h3&gt; 
&lt;p&gt;Do your absolute best to avoid duplicate code. Duplicate code is bad because it means that there‚Äôs more than one place to alter something if you need to change some logic.&lt;/p&gt; 
&lt;p&gt;Imagine if you run a restaurant and you keep track of your inventory: all your tomatoes, onions, garlic, spices, etc. If you have multiple lists that you keep this on, then all have to be updated when you serve a dish with tomatoes in them. If you only have one list, there‚Äôs only one place to update!&lt;/p&gt; 
&lt;p&gt;Oftentimes you have duplicate code because you have two or more slightly different things, that share a lot in common, but their differences force you to have two or more separate functions that do much of the same things. Removing duplicate code means creating an abstraction that can handle this set of different things with just one function/module/class.&lt;/p&gt; 
&lt;p&gt;Getting the abstraction right is critical, that‚Äôs why you should follow the SOLID principles laid out in the &lt;em&gt;Classes&lt;/em&gt; section. Bad abstractions can be worse than duplicate code, so be careful! Having said this, if you can make a good abstraction, do it! Don‚Äôt repeat yourself, otherwise you‚Äôll find yourself updating multiple places anytime you want to change one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function showDeveloperList(developers) {
  developers.forEach(developer =&amp;gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach(manager =&amp;gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function showEmployeeList(employees) {
  employees.forEach(employee =&amp;gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    const data = {
      expectedSalary,
      experience
    };

    switch (employee.type) {
      case &quot;manager&quot;:
        data.portfolio = employee.getMBAProjects();
        break;
      case &quot;developer&quot;:
        data.githubLink = employee.getGithubLink();
        break;
    }

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Set default objects with Object.assign&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const menuConfig = {
  title: null,
  body: &quot;Bar&quot;,
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || &quot;Foo&quot;;
  config.body = config.body || &quot;Bar&quot;;
  config.buttonText = config.buttonText || &quot;Baz&quot;;
  config.cancellable =
    config.cancellable !== undefined ? config.cancellable : true;
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const menuConfig = {
  title: &quot;Order&quot;,
  // User did not include &#39;body&#39; key
  buttonText: &quot;Send&quot;,
  cancellable: true
};

function createMenu(config) {
  let finalConfig = Object.assign(
    {
      title: &quot;Foo&quot;,
      body: &quot;Bar&quot;,
      buttonText: &quot;Baz&quot;,
      cancellable: true
    },
    config
  );
  return finalConfig
  // config now equals: {title: &quot;Order&quot;, body: &quot;Bar&quot;, buttonText: &quot;Send&quot;, cancellable: true}
  // ...
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don‚Äôt use flags as function parameters&lt;/h3&gt; 
&lt;p&gt;Flags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 1)&lt;/h3&gt; 
&lt;p&gt;A function produces a side effect if it does anything other than take a value in and return another value or values. A side effect could be writing to a file, modifying some global variable, or accidentally wiring all your money to a stranger.&lt;/p&gt; 
&lt;p&gt;Now, you do need to have side effects in a program on occasion. Like the previous example, you might need to write to a file. What you want to do is to centralize where you are doing this. Don‚Äôt have several functions and classes that write to a particular file. Have one service that does it. One and only one.&lt;/p&gt; 
&lt;p&gt;The main point is to avoid common pitfalls like sharing state between objects without any structure, using mutable data types that can be written to by anything, and not centralizing where your side effects occur. If you can do this, you will be happier than the vast majority of other programmers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Global variable referenced by following function.
// If we had another function that used this name, now it&#39;d be an array and it could break it.
let name = &quot;Ryan McDermott&quot;;

function splitIntoFirstAndLastName() {
  name = name.split(&quot; &quot;);
}

splitIntoFirstAndLastName();

console.log(name); // [&#39;Ryan&#39;, &#39;McDermott&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function splitIntoFirstAndLastName(name) {
  return name.split(&quot; &quot;);
}

const name = &quot;Ryan McDermott&quot;;
const newName = splitIntoFirstAndLastName(name);

console.log(name); // &#39;Ryan McDermott&#39;;
console.log(newName); // [&#39;Ryan&#39;, &#39;McDermott&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 2)&lt;/h3&gt; 
&lt;p&gt;In JavaScript, some values are unchangeable (immutable) and some are changeable (mutable). Objects and arrays are two kinds of mutable values so it‚Äôs important to handle them carefully when they‚Äôre passed as parameters to a function. A JavaScript function can change an object‚Äôs properties or alter the contents of an array which could easily cause bugs elsewhere.&lt;/p&gt; 
&lt;p&gt;Suppose there‚Äôs a function that accepts an array parameter representing a shopping cart. If the function makes a change in that shopping cart array - by adding an item to purchase, for example - then any other function that uses that same &lt;code&gt;cart&lt;/code&gt; array will be affected by this addition. That may be great, however it could also be bad. Let‚Äôs imagine a bad situation:&lt;/p&gt; 
&lt;p&gt;The user clicks the ‚ÄúPurchase‚Äù button which calls a &lt;code&gt;purchase&lt;/code&gt; function that spawns a network request and sends the &lt;code&gt;cart&lt;/code&gt; array to the server. Because of a bad network connection, the &lt;code&gt;purchase&lt;/code&gt; function has to keep retrying the request. Now, what if in the meantime the user accidentally clicks an ‚ÄúAdd to Cart‚Äù button on an item they don‚Äôt actually want before the network request begins? If that happens and the network request begins, then that purchase function will send the accidentally added item because the &lt;code&gt;cart&lt;/code&gt; array was modified.&lt;/p&gt; 
&lt;p&gt;A great solution would be for the &lt;code&gt;addItemToCart&lt;/code&gt; function to always clone the &lt;code&gt;cart&lt;/code&gt;, edit it, and return the clone. This would ensure that functions that are still using the old shopping cart wouldn‚Äôt be affected by the changes.&lt;/p&gt; 
&lt;p&gt;Two caveats to mention to this approach:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;There might be cases where you actually want to modify the input object, but when you adopt this programming practice you will find that those cases are pretty rare. Most things can be refactored to have no side effects!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloning big objects can be very expensive in terms of performance. Luckily, this isn‚Äôt a big issue in practice because there are &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;great libraries&lt;/a&gt; that allow this kind of programming approach to be fast and not as memory intensive as it would be for you to manually clone objects and arrays.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addItemToCart = (cart, item) =&amp;gt; {
  cart.push({ item, date: Date.now() });
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addItemToCart = (cart, item) =&amp;gt; {
  return [...cart, { item, date: Date.now() }];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don‚Äôt write to global functions&lt;/h3&gt; 
&lt;p&gt;Polluting globals is a bad practice in JavaScript because you could clash with another library and the user of your API would be none-the-wiser until they get an exception in production. Let‚Äôs think about an example: what if you wanted to extend JavaScript‚Äôs native Array method to have a &lt;code&gt;diff&lt;/code&gt; method that could show the difference between two arrays? You could write your new function to the &lt;code&gt;Array.prototype&lt;/code&gt;, but it could clash with another library that tried to do the same thing. What if that other library was just using &lt;code&gt;diff&lt;/code&gt; to find the difference between the first and last elements of an array? This is why it would be much better to just use ES2015/ES6 classes and simply extend the &lt;code&gt;Array&lt;/code&gt; global.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&amp;gt; !hash.has(elem));
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&amp;gt; !hash.has(elem));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Favor functional programming over imperative programming&lt;/h3&gt; 
&lt;p&gt;JavaScript isn‚Äôt a functional language in the way that Haskell is, but it has a functional flavor to it. Functional languages can be cleaner and easier to test. Favor this style of programming when you can.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

let totalOutput = 0;

for (let i = 0; i &amp;lt; programmerOutput.length; i++) {
  totalOutput += programmerOutput[i].linesOfCode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

const totalOutput = programmerOutput.reduce(
  (totalLines, output) =&amp;gt; totalLines + output.linesOfCode,
  0
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Encapsulate conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (fsm.state === &quot;fetching&quot; &amp;amp;&amp;amp; isEmpty(listNode)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function shouldShowSpinner(fsm, listNode) {
  return fsm.state === &quot;fetching&quot; &amp;amp;&amp;amp; isEmpty(listNode);
}

if (shouldShowSpinner(fsmInstance, listNodeInstance)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid negative conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isDOMNodeNotPresent(node) {
  // ...
}

if (!isDOMNodeNotPresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isDOMNodePresent(node) {
  // ...
}

if (isDOMNodePresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid conditionals&lt;/h3&gt; 
&lt;p&gt;This seems like an impossible task. Upon first hearing this, most people say, ‚Äúhow am I supposed to do anything without an &lt;code&gt;if&lt;/code&gt; statement?‚Äù The answer is that you can use polymorphism to achieve the same task in many cases. The second question is usually, ‚Äúwell that‚Äôs great but why would I want to do that?‚Äù The answer is a previous clean code concept we learned: a function should only do one thing. When you have classes and functions that have &lt;code&gt;if&lt;/code&gt; statements, you are telling your user that your function does more than one thing. Remember, just do one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Airplane {
  // ...
  getCruisingAltitude() {
    switch (this.type) {
      case &quot;777&quot;:
        return this.getMaxAltitude() - this.getPassengerCount();
      case &quot;Air Force One&quot;:
        return this.getMaxAltitude();
      case &quot;Cessna&quot;:
        return this.getMaxAltitude() - this.getFuelExpenditure();
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Airplane {
  // ...
}

class Boeing777 extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getPassengerCount();
  }
}

class AirForceOne extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude();
  }
}

class Cessna extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getFuelExpenditure();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 1)&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, which means your functions can take any type of argument. Sometimes you are bitten by this freedom and it becomes tempting to do type-checking in your functions. There are many ways to avoid having to do this. The first thing to consider is consistent APIs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function travelToTexas(vehicle) {
  if (vehicle instanceof Bicycle) {
    vehicle.pedal(this.currentLocation, new Location(&quot;texas&quot;));
  } else if (vehicle instanceof Car) {
    vehicle.drive(this.currentLocation, new Location(&quot;texas&quot;));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function travelToTexas(vehicle) {
  vehicle.move(this.currentLocation, new Location(&quot;texas&quot;));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 2)&lt;/h3&gt; 
&lt;p&gt;If you are working with basic primitive values like strings and integers, and you can‚Äôt use polymorphism but you still feel the need to type-check, you should consider using TypeScript. It is an excellent alternative to normal JavaScript, as it provides you with static typing on top of standard JavaScript syntax. The problem with manually type-checking normal JavaScript is that doing it well requires so much extra verbiage that the faux ‚Äútype-safety‚Äù you get doesn‚Äôt make up for the lost readability. Keep your JavaScript clean, write good tests, and have good code reviews. Otherwise, do all of that but with TypeScript (which, like I said, is a great alternative!).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(val1, val2) {
  if (
    (typeof val1 === &quot;number&quot; &amp;amp;&amp;amp; typeof val2 === &quot;number&quot;) ||
    (typeof val1 === &quot;string&quot; &amp;amp;&amp;amp; typeof val2 === &quot;string&quot;)
  ) {
    return val1 + val2;
  }

  throw new Error(&quot;Must be of type String or Number&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(val1, val2) {
  return val1 + val2;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don‚Äôt over-optimize&lt;/h3&gt; 
&lt;p&gt;Modern browsers do a lot of optimization under-the-hood at runtime. A lot of times, if you are optimizing then you are just wasting your time. &lt;a href=&quot;https://github.com/petkaantonov/bluebird/wiki/Optimization-killers&quot;&gt;There are good resources&lt;/a&gt; for seeing where optimization is lacking. Target those in the meantime, until they are fixed if they can be.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// On old browsers, each iteration with uncached `list.length` would be costly
// because of `list.length` recomputation. In modern browsers, this is optimized.
for (let i = 0, len = list.length; i &amp;lt; len; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (let i = 0; i &amp;lt; list.length; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove dead code&lt;/h3&gt; 
&lt;p&gt;Dead code is just as bad as duplicate code. There‚Äôs no reason to keep it in your codebase. If it‚Äôs not being called, get rid of it! It will still be safe in your version history if you still need it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function oldRequestModule(url) {
  // ...
}

function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker(&quot;apples&quot;, req, &quot;www.inventory-awesome.io&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker(&quot;apples&quot;, req, &quot;www.inventory-awesome.io&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Objects and Data Structures&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use getters and setters&lt;/h3&gt; 
&lt;p&gt;Using getters and setters to access data on objects could be better than simply looking for a property on an object. ‚ÄúWhy?‚Äù you might ask. Well, here‚Äôs an unorganized list of reasons why:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When you want to do more beyond getting an object property, you don‚Äôt have to look up and change every accessor in your codebase.&lt;/li&gt; 
 &lt;li&gt;Makes adding validation simple when doing a &lt;code&gt;set&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Encapsulates the internal representation.&lt;/li&gt; 
 &lt;li&gt;Easy to add logging and error handling when getting and setting.&lt;/li&gt; 
 &lt;li&gt;You can lazy load your object‚Äôs properties, let‚Äôs say getting it from a server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeBankAccount() {
  // ...

  return {
    balance: 0
    // ...
  };
}

const account = makeBankAccount();
account.balance = 100;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeBankAccount() {
  // this one is private
  let balance = 0;

  // a &quot;getter&quot;, made public via the returned object below
  function getBalance() {
    return balance;
  }

  // a &quot;setter&quot;, made public via the returned object below
  function setBalance(amount) {
    // ... validate before updating the balance
    balance = amount;
  }

  return {
    // ...
    getBalance,
    setBalance
  };
}

const account = makeBankAccount();
account.setBalance(100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Make objects have private members&lt;/h3&gt; 
&lt;p&gt;This can be accomplished through closures (for ES5 and below).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Employee = function(name) {
  this.name = name;
};

Employee.prototype.getName = function getName() {
  return this.name;
};

const employee = new Employee(&quot;John Doe&quot;);
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeEmployee(name) {
  return {
    getName() {
      return name;
    }
  };
}

const employee = makeEmployee(&quot;John Doe&quot;);
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Prefer ES2015/ES6 classes over ES5 plain functions&lt;/h3&gt; 
&lt;p&gt;It‚Äôs very difficult to get readable class inheritance, construction, and method definitions for classical ES5 classes. If you need inheritance (and be aware that you might not), then prefer ES2015/ES6 classes. However, prefer small functions over classes until you find yourself needing larger and more complex objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Animal = function(age) {
  if (!(this instanceof Animal)) {
    throw new Error(&quot;Instantiate Animal with `new`&quot;);
  }

  this.age = age;
};

Animal.prototype.move = function move() {};

const Mammal = function(age, furColor) {
  if (!(this instanceof Mammal)) {
    throw new Error(&quot;Instantiate Mammal with `new`&quot;);
  }

  Animal.call(this, age);
  this.furColor = furColor;
};

Mammal.prototype = Object.create(Animal.prototype);
Mammal.prototype.constructor = Mammal;
Mammal.prototype.liveBirth = function liveBirth() {};

const Human = function(age, furColor, languageSpoken) {
  if (!(this instanceof Human)) {
    throw new Error(&quot;Instantiate Human with `new`&quot;);
  }

  Mammal.call(this, age, furColor);
  this.languageSpoken = languageSpoken;
};

Human.prototype = Object.create(Mammal.prototype);
Human.prototype.constructor = Human;
Human.prototype.speak = function speak() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Animal {
  constructor(age) {
    this.age = age;
  }

  move() {
    /* ... */
  }
}

class Mammal extends Animal {
  constructor(age, furColor) {
    super(age);
    this.furColor = furColor;
  }

  liveBirth() {
    /* ... */
  }
}

class Human extends Mammal {
  constructor(age, furColor, languageSpoken) {
    super(age, furColor);
    this.languageSpoken = languageSpoken;
  }

  speak() {
    /* ... */
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use method chaining&lt;/h3&gt; 
&lt;p&gt;This pattern is very useful in JavaScript and you see it in many libraries such as jQuery and Lodash. It allows your code to be expressive, and less verbose. For that reason, I say, use method chaining and take a look at how clean your code will be. In your class functions, simply return &lt;code&gt;this&lt;/code&gt; at the end of every function, and you can chain further class methods onto it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
  }

  setModel(model) {
    this.model = model;
  }

  setColor(color) {
    this.color = color;
  }

  save() {
    console.log(this.make, this.model, this.color);
  }
}

const car = new Car(&quot;Ford&quot;, &quot;F-150&quot;, &quot;red&quot;);
car.setColor(&quot;pink&quot;);
car.save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
    // NOTE: Returning this for chaining
    return this;
  }

  setModel(model) {
    this.model = model;
    // NOTE: Returning this for chaining
    return this;
  }

  setColor(color) {
    this.color = color;
    // NOTE: Returning this for chaining
    return this;
  }

  save() {
    console.log(this.make, this.model, this.color);
    // NOTE: Returning this for chaining
    return this;
  }
}

const car = new Car(&quot;Ford&quot;, &quot;F-150&quot;, &quot;red&quot;).setColor(&quot;pink&quot;).save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Prefer composition over inheritance&lt;/h3&gt; 
&lt;p&gt;As stated famously in &lt;a href=&quot;https://en.wikipedia.org/wiki/Design_Patterns&quot;&gt;&lt;em&gt;Design Patterns&lt;/em&gt;&lt;/a&gt; by the Gang of Four, you should prefer composition over inheritance where you can. There are lots of good reasons to use inheritance and lots of good reasons to use composition. The main point for this maxim is that if your mind instinctively goes for inheritance, try to think if composition could model your problem better. In some cases it can.&lt;/p&gt; 
&lt;p&gt;You might be wondering then, ‚Äúwhen should I use inheritance?‚Äù It depends on your problem at hand, but this is a decent list of when inheritance makes more sense than composition:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your inheritance represents an ‚Äúis-a‚Äù relationship and not a ‚Äúhas-a‚Äù relationship (Human-&amp;gt;Animal vs. User-&amp;gt;UserDetails).&lt;/li&gt; 
 &lt;li&gt;You can reuse code from the base classes (Humans can move like all animals).&lt;/li&gt; 
 &lt;li&gt;You want to make global changes to derived classes by changing a base class. (Change the caloric expenditure of all animals when they move).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  // ...
}

// Bad because Employees &quot;have&quot; tax data. EmployeeTaxData is not a type of Employee
class EmployeeTaxData extends Employee {
  constructor(ssn, salary) {
    super();
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class EmployeeTaxData {
  constructor(ssn, salary) {
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}

class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  setTaxData(ssn, salary) {
    this.taxData = new EmployeeTaxData(ssn, salary);
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;SOLID&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Single Responsibility Principle (SRP)&lt;/h3&gt; 
&lt;p&gt;As stated in Clean Code, ‚ÄúThere should never be more than one reason for a class to change‚Äù. It‚Äôs tempting to jam-pack a class with a lot of functionality, like when you can only take one suitcase on your flight. The issue with this is that your class won‚Äôt be conceptually cohesive and it will give it many reasons to change. Minimizing the amount of times you need to change a class is important. It‚Äôs important because if too much functionality is in one class and you modify a piece of it, it can be difficult to understand how that will affect other dependent modules in your codebase.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class UserSettings {
  constructor(user) {
    this.user = user;
  }

  changeSettings(settings) {
    if (this.verifyCredentials()) {
      // ...
    }
  }

  verifyCredentials() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class UserAuth {
  constructor(user) {
    this.user = user;
  }

  verifyCredentials() {
    // ...
  }
}

class UserSettings {
  constructor(user) {
    this.user = user;
    this.auth = new UserAuth(user);
  }

  changeSettings(settings) {
    if (this.auth.verifyCredentials()) {
      // ...
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Open/Closed Principle (OCP)&lt;/h3&gt; 
&lt;p&gt;As stated by Bertrand Meyer, ‚Äúsoftware entities (classes, modules, functions, etc.) should be open for extension, but closed for modification.‚Äù What does that mean though? This principle basically states that you should allow users to add new functionalities without changing existing code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;ajaxAdapter&quot;;
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;nodeAdapter&quot;;
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    if (this.adapter.name === &quot;ajaxAdapter&quot;) {
      return makeAjaxCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    } else if (this.adapter.name === &quot;nodeAdapter&quot;) {
      return makeHttpCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    }
  }
}

function makeAjaxCall(url) {
  // request and return promise
}

function makeHttpCall(url) {
  // request and return promise
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;ajaxAdapter&quot;;
  }

  request(url) {
    // request and return promise
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;nodeAdapter&quot;;
  }

  request(url) {
    // request and return promise
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    return this.adapter.request(url).then(response =&amp;gt; {
      // transform response and return
    });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Liskov Substitution Principle (LSP)&lt;/h3&gt; 
&lt;p&gt;This is a scary term for a very simple concept. It‚Äôs formally defined as ‚ÄúIf S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of that program (correctness, task performed, etc.).‚Äù That‚Äôs an even scarier definition.&lt;/p&gt; 
&lt;p&gt;The best explanation for this is if you have a parent class and a child class, then the base class and child class can be used interchangeably without getting incorrect results. This might still be confusing, so let‚Äôs take a look at the classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the ‚Äúis-a‚Äù relationship via inheritance, you quickly get into trouble.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Rectangle {
  constructor() {
    this.width = 0;
    this.height = 0;
  }

  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }

  setWidth(width) {
    this.width = width;
  }

  setHeight(height) {
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Rectangle {
  setWidth(width) {
    this.width = width;
    this.height = width;
  }

  setHeight(height) {
    this.width = height;
    this.height = height;
  }
}

function renderLargeRectangles(rectangles) {
  rectangles.forEach(rectangle =&amp;gt; {
    rectangle.setWidth(4);
    rectangle.setHeight(5);
    const area = rectangle.getArea(); // BAD: Returns 25 for Square. Should be 20.
    rectangle.render(area);
  });
}

const rectangles = [new Rectangle(), new Rectangle(), new Square()];
renderLargeRectangles(rectangles);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Shape {
  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }
}

class Rectangle extends Shape {
  constructor(width, height) {
    super();
    this.width = width;
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Shape {
  constructor(length) {
    super();
    this.length = length;
  }

  getArea() {
    return this.length * this.length;
  }
}

function renderLargeShapes(shapes) {
  shapes.forEach(shape =&amp;gt; {
    const area = shape.getArea();
    shape.render(area);
  });
}

const shapes = [new Rectangle(4, 5), new Rectangle(4, 5), new Square(5)];
renderLargeShapes(shapes);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Interface Segregation Principle (ISP)&lt;/h3&gt; 
&lt;p&gt;JavaScript doesn‚Äôt have interfaces so this principle doesn‚Äôt apply as strictly as others. However, it‚Äôs important and relevant even with JavaScript‚Äôs lack of type system.&lt;/p&gt; 
&lt;p&gt;ISP states that ‚ÄúClients should not be forced to depend upon interfaces that they do not use.‚Äù Interfaces are implicit contracts in JavaScript because of duck typing.&lt;/p&gt; 
&lt;p&gt;A good example to look at that demonstrates this principle in JavaScript is for classes that require large settings objects. Not requiring clients to setup huge amounts of options is beneficial, because most of the time they won‚Äôt need all of the settings. Making them optional helps prevent having a ‚Äúfat interface‚Äù.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.settings.animationModule.setup();
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName(&quot;body&quot;),
  animationModule() {} // Most of the time, we won&#39;t need to animate when traversing.
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.options = settings.options;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.setupOptions();
  }

  setupOptions() {
    if (this.options.animationModule) {
      // ...
    }
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName(&quot;body&quot;),
  options: {
    animationModule() {}
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Dependency Inversion Principle (DIP)&lt;/h3&gt; 
&lt;p&gt;This principle states two essential things:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt; 
 &lt;li&gt;Abstractions should not depend upon details. Details should depend on abstractions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This can be hard to understand at first, but if you‚Äôve worked with AngularJS, you‚Äôve seen an implementation of this principle in the form of Dependency Injection (DI). While they are not identical concepts, DIP keeps high-level modules from knowing the details of its low-level modules and setting them up. It can accomplish this through DI. A huge benefit of this is that it reduces the coupling between modules. Coupling is a very bad development pattern because it makes your code hard to refactor.&lt;/p&gt; 
&lt;p&gt;As stated previously, JavaScript doesn‚Äôt have interfaces so the abstractions that are depended upon are implicit contracts. That is to say, the methods and properties that an object/class exposes to another object/class. In the example below, the implicit contract is that any Request module for an &lt;code&gt;InventoryTracker&lt;/code&gt; will have a &lt;code&gt;requestItems&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class InventoryRequester {
  constructor() {
    this.REQ_METHODS = [&quot;HTTP&quot;];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryTracker {
  constructor(items) {
    this.items = items;

    // BAD: We have created a dependency on a specific request implementation.
    // We should just have requestItems depend on a request method: `request`
    this.requester = new InventoryRequester();
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

const inventoryTracker = new InventoryTracker([&quot;apples&quot;, &quot;bananas&quot;]);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class InventoryTracker {
  constructor(items, requester) {
    this.items = items;
    this.requester = requester;
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

class InventoryRequesterV1 {
  constructor() {
    this.REQ_METHODS = [&quot;HTTP&quot;];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryRequesterV2 {
  constructor() {
    this.REQ_METHODS = [&quot;WS&quot;];
  }

  requestItem(item) {
    // ...
  }
}

// By constructing our dependencies externally and injecting them, we can easily
// substitute our request module for a fancy new one that uses WebSockets.
const inventoryTracker = new InventoryTracker(
  [&quot;apples&quot;, &quot;bananas&quot;],
  new InventoryRequesterV2()
);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Testing is more important than shipping. If you have no tests or an inadequate amount, then every time you ship code you won‚Äôt be sure that you didn‚Äôt break anything. Deciding on what constitutes an adequate amount is up to your team, but having 100% coverage (all statements and branches) is how you achieve very high confidence and developer peace of mind. This means that in addition to having a great testing framework, you also need to use a &lt;a href=&quot;https://gotwarlost.github.io/istanbul/&quot;&gt;good coverage tool&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There‚Äôs no excuse to not write tests. There are &lt;a href=&quot;https://jstherightway.org/#testing-tools&quot;&gt;plenty of good JS test frameworks&lt;/a&gt;, so find one that your team prefers. When you find one that works for your team, then aim to always write tests for every new feature/module you introduce. If your preferred method is Test Driven Development (TDD), that is great, but the main point is to just make sure you are reaching your coverage goals before launching any feature, or refactoring an existing one.&lt;/p&gt; 
&lt;h3&gt;Single concept per test&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import assert from &quot;assert&quot;;

describe(&quot;MomentJS&quot;, () =&amp;gt; {
  it(&quot;handles date boundaries&quot;, () =&amp;gt; {
    let date;

    date = new MomentJS(&quot;1/1/2015&quot;);
    date.addDays(30);
    assert.equal(&quot;1/31/2015&quot;, date);

    date = new MomentJS(&quot;2/1/2016&quot;);
    date.addDays(28);
    assert.equal(&quot;02/29/2016&quot;, date);

    date = new MomentJS(&quot;2/1/2015&quot;);
    date.addDays(28);
    assert.equal(&quot;03/01/2015&quot;, date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import assert from &quot;assert&quot;;

describe(&quot;MomentJS&quot;, () =&amp;gt; {
  it(&quot;handles 30-day months&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;1/1/2015&quot;);
    date.addDays(30);
    assert.equal(&quot;1/31/2015&quot;, date);
  });

  it(&quot;handles leap year&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;2/1/2016&quot;);
    date.addDays(28);
    assert.equal(&quot;02/29/2016&quot;, date);
  });

  it(&quot;handles non-leap year&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;2/1/2015&quot;);
    date.addDays(28);
    assert.equal(&quot;03/01/2015&quot;, date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use Promises, not callbacks&lt;/h3&gt; 
&lt;p&gt;Callbacks aren‚Äôt clean, and they cause excessive amounts of nesting. With ES2015/ES6, Promises are a built-in global type. Use them!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request&quot;;
import { writeFile } from &quot;fs&quot;;

get(
  &quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;,
  (requestErr, response, body) =&amp;gt; {
    if (requestErr) {
      console.error(requestErr);
    } else {
      writeFile(&quot;article.html&quot;, body, writeErr =&amp;gt; {
        if (writeErr) {
          console.error(writeErr);
        } else {
          console.log(&quot;File written&quot;);
        }
      });
    }
  }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

get(&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;)
  .then(body =&amp;gt; {
    return writeFile(&quot;article.html&quot;, body);
  })
  .then(() =&amp;gt; {
    console.log(&quot;File written&quot;);
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Async/Await are even cleaner than Promises&lt;/h3&gt; 
&lt;p&gt;Promises are a very clean alternative to callbacks, but ES2017/ES8 brings async and await which offer an even cleaner solution. All you need is a function that is prefixed in an &lt;code&gt;async&lt;/code&gt; keyword, and then you can write your logic imperatively without a &lt;code&gt;then&lt;/code&gt; chain of functions. Use this if you can take advantage of ES2017/ES8 features today!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

get(&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;)
  .then(body =&amp;gt; {
    return writeFile(&quot;article.html&quot;, body);
  })
  .then(() =&amp;gt; {
    console.log(&quot;File written&quot;);
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

async function getCleanCodeArticle() {
  try {
    const body = await get(
      &quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;
    );
    await writeFile(&quot;article.html&quot;, body);
    console.log(&quot;File written&quot;);
  } catch (err) {
    console.error(err);
  }
}

getCleanCodeArticle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Thrown errors are a good thing! They mean the runtime has successfully identified when something in your program has gone wrong and it‚Äôs letting you know by stopping function execution on the current stack, killing the process (in Node), and notifying you in the console with a stack trace.&lt;/p&gt; 
&lt;h3&gt;Don‚Äôt ignore caught errors&lt;/h3&gt; 
&lt;p&gt;Doing nothing with a caught error doesn‚Äôt give you the ability to ever fix or react to said error. Logging the error to the console (&lt;code&gt;console.log&lt;/code&gt;) isn‚Äôt much better as often times it can get lost in a sea of things printed to the console. If you wrap any bit of code in a &lt;code&gt;try/catch&lt;/code&gt; it means you think an error may occur there and therefore you should have a plan, or create a code path, for when it occurs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  functionThatMightThrow();
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  functionThatMightThrow();
} catch (error) {
  // One option (more noisy than console.log):
  console.error(error);
  // Another option:
  notifyUserOfError(error);
  // Another option:
  reportErrorToService(error);
  // OR do all three!
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Don‚Äôt ignore rejected promises&lt;/h3&gt; 
&lt;p&gt;For the same reason you shouldn‚Äôt ignore caught errors from &lt;code&gt;try/catch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    console.log(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    // One option (more noisy than console.log):
    console.error(error);
    // Another option:
    notifyUserOfError(error);
    // Another option:
    reportErrorToService(error);
    // OR do all three!
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Formatting is subjective. Like many rules herein, there is no hard and fast rule that you must follow. The main point is DO NOT ARGUE over formatting. There are &lt;a href=&quot;https://standardjs.com/rules.html&quot;&gt;tons of tools&lt;/a&gt; to automate this. Use one! It‚Äôs a waste of time and money for engineers to argue over formatting.&lt;/p&gt; 
&lt;p&gt;For things that don‚Äôt fall under the purview of automatic formatting (indentation, tabs vs. spaces, double vs. single quotes, etc.) look here for some guidance.&lt;/p&gt; 
&lt;h3&gt;Use consistent capitalization&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, so capitalization tells you a lot about your variables, functions, etc. These rules are subjective, so your team can choose whatever they want. The point is, no matter what you all choose, just be consistent.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const DAYS_IN_WEEK = 7;
const daysInMonth = 30;

const songs = [&quot;Back In Black&quot;, &quot;Stairway to Heaven&quot;, &quot;Hey Jude&quot;];
const Artists = [&quot;ACDC&quot;, &quot;Led Zeppelin&quot;, &quot;The Beatles&quot;];

function eraseDatabase() {}
function restore_database() {}

class animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const DAYS_IN_WEEK = 7;
const DAYS_IN_MONTH = 30;

const SONGS = [&quot;Back In Black&quot;, &quot;Stairway to Heaven&quot;, &quot;Hey Jude&quot;];
const ARTISTS = [&quot;ACDC&quot;, &quot;Led Zeppelin&quot;, &quot;The Beatles&quot;];

function eraseDatabase() {}
function restoreDatabase() {}

class Animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function callers and callees should be close&lt;/h3&gt; 
&lt;p&gt;If a function calls another, keep those functions vertically close in the source file. Ideally, keep the caller right above the callee. We tend to read code from top-to-bottom, like a newspaper. Because of this, make your code read that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  lookupPeers() {
    return db.lookup(this.employee, &quot;peers&quot;);
  }

  lookupManager() {
    return db.lookup(this.employee, &quot;manager&quot;);
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  lookupPeers() {
    return db.lookup(this.employee, &quot;peers&quot;);
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  lookupManager() {
    return db.lookup(this.employee, &quot;manager&quot;);
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Comments&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Only comment things that have business logic complexity.&lt;/h3&gt; 
&lt;p&gt;Comments are an apology, not a requirement. Good code &lt;em&gt;mostly&lt;/em&gt; documents itself.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hashIt(data) {
  // The hash
  let hash = 0;

  // Length of string
  const length = data.length;

  // Loop through every character in data
  for (let i = 0; i &amp;lt; length; i++) {
    // Get character code.
    const char = data.charCodeAt(i);
    // Make the hash
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;
    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hashIt(data) {
  let hash = 0;
  const length = data.length;

  for (let i = 0; i &amp;lt; length; i++) {
    const char = data.charCodeAt(i);
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;

    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don‚Äôt leave commented out code in your codebase&lt;/h3&gt; 
&lt;p&gt;Version control exists for a reason. Leave old code in your history.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doStuff();
// doOtherStuff();
// doSomeMoreStuff();
// doSoMuchStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don‚Äôt have journal comments&lt;/h3&gt; 
&lt;p&gt;Remember, use version control! There‚Äôs no need for dead code, commented code, and especially journal comments. Use &lt;code&gt;git log&lt;/code&gt; to get history!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/**
 * 2016-12-20: Removed monads, didn&#39;t understand them (RM)
 * 2016-10-01: Improved using special monads (JP)
 * 2016-02-03: Removed type-checking (LI)
 * 2015-03-14: Added combine with type-checking (JR)
 */
function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid positional markers&lt;/h3&gt; 
&lt;p&gt;They usually just add noise. Let the functions and variable names along with the proper indentation and formatting give the visual structure to your code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;////////////////////////////////////////////////////////////////////////////////
// Scope Model Instantiation
////////////////////////////////////////////////////////////////////////////////
$scope.model = {
  menu: &quot;foo&quot;,
  nav: &quot;bar&quot;
};

////////////////////////////////////////////////////////////////////////////////
// Action setup
////////////////////////////////////////////////////////////////////////////////
const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$scope.model = {
  menu: &quot;foo&quot;,
  nav: &quot;bar&quot;
};

const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Armenia.png&quot; alt=&quot;am&quot;&gt; &lt;strong&gt;Armenian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hanumanum/clean-code-javascript&quot;&gt;hanumanum/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bangladesh.png&quot; alt=&quot;bd&quot;&gt; &lt;strong&gt;Bangla(‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/InsomniacSabbir/clean-code-javascript/&quot;&gt;InsomniacSabbir/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fesnt/clean-code-javascript&quot;&gt;fesnt/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Simplified Chinese&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alivebao/clean-code-js&quot;&gt;alivebao/clean-code-js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/beginor/clean-code-javascript&quot;&gt;beginor/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Traditional Chinese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AllJointTW/clean-code-javascript&quot;&gt;AllJointTW/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GavBaros/clean-code-javascript-fr&quot;&gt;GavBaros/clean-code-javascript-fr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/marcbruederlin/clean-code-javascript&quot;&gt;marcbruederlin/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Indonesia.png&quot; alt=&quot;id&quot;&gt; &lt;strong&gt;Indonesia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/andirkh/clean-code-javascript/&quot;&gt;andirkh/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/frappacchio/clean-code-javascript/&quot;&gt;frappacchio/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;ja&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/clean-code-javascript/&quot;&gt;mitsuruog/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/qkraudghgh/clean-code-javascript-ko&quot;&gt;qkraudghgh/clean-code-javascript-ko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Poland.png&quot; alt=&quot;pl&quot;&gt; &lt;strong&gt;Polish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greg-dev/clean-code-javascript-pl&quot;&gt;greg-dev/clean-code-javascript-pl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/BoryaMogila/clean-code-javascript-ru/&quot;&gt;BoryaMogila/clean-code-javascript-ru/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/maksugr/clean-code-javascript&quot;&gt;maksugr/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tureey/clean-code-javascript&quot;&gt;tureey/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Uruguay.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/andersontr15/clean-code-javascript-es&quot;&gt;andersontr15/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Serbia.png&quot; alt=&quot;rs&quot;&gt; &lt;strong&gt;Serbian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/doskovicmilos/clean-code-javascript&quot;&gt;doskovicmilos/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bsonmez/clean-code-javascript/tree/turkish-translation&quot;&gt;bsonmez/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mindfr1k/clean-code-javascript-ua&quot;&gt;mindfr1k/clean-code-javascript-ua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vi&quot;&gt; &lt;strong&gt;Vietnamese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hienvd/clean-code-javascript/&quot;&gt;hienvd/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aladinyo/WhatsappyApp</title>
      <link>https://github.com/aladinyo/WhatsappyApp</link>
      <description>&lt;p&gt;A whatsapp clone progressive web application built with react nodejs and firebase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WhatsappyApp&lt;/h1&gt; 
&lt;p&gt;WhatsappyApp is a whatsapp clone progressive web application built with react nodejs and firebase it allows you to send messages talk with people and serach for them and many more.&lt;/p&gt; 
&lt;h1&gt;WARNING&lt;/h1&gt; 
&lt;p&gt;this app is just an open source project and it doesn‚Äôt have the feature of deleting your account also you will sign in with your google account so use a fake one you are responsible of giving your data.&lt;/p&gt; 
&lt;h1&gt;Live Demo&lt;/h1&gt; 
&lt;p&gt;https://whatsappy-app.web.app/ ALLOW NOTIFICATIONS !!!&lt;br&gt; the app may not run because free limits of firebase or hosting service has been exceeded !!&lt;/p&gt; 
&lt;h1&gt;Preview&lt;/h1&gt; 
&lt;img src=&quot;https://github.com/aladinyo/WhatsappyApp/raw/main/preview1.png&quot; width=&quot;600&quot;&gt; 
&lt;img src=&quot;https://github.com/aladinyo/WhatsappyApp/raw/main/preview2.png&quot; width=&quot;600&quot;&gt; 
&lt;img src=&quot;https://github.com/aladinyo/WhatsappyApp/raw/main/preview3.png&quot; width=&quot;600&quot;&gt; 
&lt;h1&gt;Features of the app&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Messaging users in real time.&lt;/li&gt; 
 &lt;li&gt;You can text messages.&lt;/li&gt; 
 &lt;li&gt;You can send Images.&lt;/li&gt; 
 &lt;li&gt;You can send an audio message.&lt;/li&gt; 
 &lt;li&gt;You click on an image sent in a chat and it will smoothly animate to the center so you can see it.&lt;/li&gt; 
 &lt;li&gt;You can see if the user is typing or recording.&lt;/li&gt; 
 &lt;li&gt;You can record an audio and send it.&lt;/li&gt; 
 &lt;li&gt;You can delete the conversation.&lt;/li&gt; 
 &lt;li&gt;You can search for users.&lt;/li&gt; 
 &lt;li&gt;You can see the online status of users.&lt;/li&gt; 
 &lt;li&gt;You can see the unread messages.&lt;/li&gt; 
 &lt;li&gt;You will have a seen at the bottom if the user saw your message.&lt;/li&gt; 
 &lt;li&gt;You have an arrow button that allows you to scroll down the chat you also see the unread messages in it.&lt;/li&gt; 
 &lt;li&gt;The audio slider is grey when you send an audio message and is green when you receive one and becomes blue if the receiver plays the audio.&lt;/li&gt; 
 &lt;li&gt;The audio player allows you to see the full time of the audio and if you play it you will see the current time.&lt;/li&gt; 
 &lt;li&gt;You can receive notifications if a user sent you a message.&lt;/li&gt; 
 &lt;li&gt;A sound is played when you send a message or receive one in a conversation.&lt;/li&gt; 
 &lt;li&gt;Another sound is played if you receive a message from another user.&lt;/li&gt; 
 &lt;li&gt;The app works offline you can use it without internet and you can send text messages only when you come back online they will be automatically sent.&lt;/li&gt; 
 &lt;li&gt;Finally you can click on the arrow down button at the home page and the web app is installed in your device.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;p&gt;In order to run the app setup a firebase project then navigate to ‚Äúsrc/firebase‚Äù and put your config object there and then go to your project settings in firebase then get a service account file from there and go put it on ‚Äúbackend‚Äù folder. Then setup an algolia search project then put your keys in ‚Äúbackend/index.js‚Äù and ‚Äúsrc/Sidebar.js‚Äù.&lt;/p&gt; 
&lt;h1&gt;Running the app&lt;/h1&gt; 
&lt;p&gt;After setting up the project in the root folder run ‚Äúnpm run start‚Äù to run the frontend and then navigate to ‚Äúbackend‚Äù folder and run ‚Äúnpm run index.js‚Äù to run the backend.&lt;/p&gt; 
&lt;h1&gt;building the app&lt;/h1&gt; 
&lt;p&gt;To build the app run in the root folder ‚Äúnpm run build‚Äù you get the production code of your frontend in the build folder you can use it to host the app (you can set up firebase hosting for that) also you can host the backend folder in a node js hosting platform like heroku just make sure that your hosting service will run a worker (npm run index.js).&lt;/p&gt; 
&lt;h2&gt;Thank you so much for checking this project don‚Äôt forget to put a star to encourage us.&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>laurent22/joplin</title>
      <link>https://github.com/laurent22/joplin</link>
      <description>&lt;p&gt;Joplin - an open source note taking and to-do application with synchronization capabilities for Windows, macOS, Linux, Android and iOS. Forum: https://discourse.joplinapp.org/&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=E8JMYD2LQ8MMA&amp;amp;lc=GB&amp;amp;item_name=Joplin+Development&amp;amp;currency_code=EUR&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/Donate-PayPal-green.svg?sanitize=true&quot; alt=&quot;Donate using PayPal&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/laurent22/&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/GitHub-Badge.svg?sanitize=true&quot; alt=&quot;Sponsor on GitHub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/joplin&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/Patreon-Badge.svg?sanitize=true&quot; alt=&quot;Become a patron&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://joplinapp.org/donate/#donations&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/Donate-IBAN.svg?sanitize=true&quot; alt=&quot;Donate using IBAN&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- DONATELINKS --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;img width=&quot;64&quot; src=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/LinuxIcons/256x256.png&quot; align=&quot;left&quot;&gt; &lt;strong&gt;Joplin&lt;/strong&gt; is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. The notes are searchable, can be copied, tagged and modified either from the applications directly or from your own text editor. The notes are in &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#markdown&quot;&gt;Markdown format&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Notes exported from Evernote via .enex files &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#importing&quot;&gt;can be imported&lt;/a&gt; into Joplin, including the formatted content (which is converted to Markdown), resources (images, attachments, etc.) and complete metadata (geolocation, updated time, created time, etc.). Plain Markdown files can also be imported.&lt;/p&gt; 
&lt;p&gt;The notes can be &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#synchronisation&quot;&gt;synchronised&lt;/a&gt; with various cloud services including &lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt;, Dropbox, OneDrive, WebDAV or the file system (for example with a network directory). When synchronising the notes, notebooks, tags and other metadata are saved to plain text files which can be easily inspected, backed up and moved around.&lt;/p&gt; 
&lt;p&gt;The application is available for Windows, Linux, macOS, Android and iOS (the terminal app also works on FreeBSD). A &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt;, to save web pages and screenshots from your browser, is also available for &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/joplin-web-clipper/&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;https://chrome.google.com/webstore/detail/joplin-web-clipper/alofnhikmmkdbbbgpnglcpdollgjjfek?hl=en-GB&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;div class=&quot;top-screenshot&quot;&gt;
 &lt;img src=&quot;https://joplinapp.org/images/AllClients.jpg&quot; style=&quot;max-width: 100%; max-height: 35em;&quot;&gt;
&lt;/div&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Three types of applications are available: for the &lt;strong&gt;desktop&lt;/strong&gt; (Windows, macOS and Linux), for &lt;strong&gt;mobile&lt;/strong&gt; (Android and iOS) and for &lt;strong&gt;terminal&lt;/strong&gt; (Windows, macOS, Linux and FreeBSD). All applications have similar user interfaces and can synchronise with each other.&lt;/p&gt; 
&lt;h2&gt;Desktop applications&lt;/h2&gt; 
&lt;p&gt;Operating System | Download ‚Äî|‚Äî Windows (32 and 64-bit) | &lt;a href=&quot;https://github.com/laurent22/joplin/releases/download/v1.7.11/Joplin-Setup-1.7.11.exe&quot;&gt;&lt;img alt=&quot;Get it on Windows&quot; width=&quot;134px&quot; src=&quot;https://joplinapp.org/images/BadgeWindows.png&quot;&gt;&lt;/a&gt; macOS | &lt;a href=&quot;https://github.com/laurent22/joplin/releases/download/v1.7.11/Joplin-1.7.11.dmg&quot;&gt;&lt;img alt=&quot;Get it on macOS&quot; width=&quot;134px&quot; src=&quot;https://joplinapp.org/images/BadgeMacOS.png&quot;&gt;&lt;/a&gt; Linux | &lt;a href=&quot;https://github.com/laurent22/joplin/releases/download/v1.7.11/Joplin-1.7.11.AppImage&quot;&gt;&lt;img alt=&quot;Get it on Linux&quot; width=&quot;134px&quot; src=&quot;https://joplinapp.org/images/BadgeLinux.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On Windows&lt;/strong&gt;, you may also use the &lt;a href=&quot;https://github.com/laurent22/joplin/releases/download/v1.7.11/JoplinPortable.exe&quot;&gt;Portable version&lt;/a&gt;. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Portable_application&quot;&gt;portable application&lt;/a&gt; allows installing the software on a portable device such as a USB key. Simply copy the file JoplinPortable.exe in any directory on that USB key ; the application will then create a directory called ‚ÄúJoplinProfile‚Äù next to the executable file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On Linux&lt;/strong&gt;, the recommended way is to use the following installation script as it will handle the desktop icon too:&lt;/p&gt; 
&lt;pre&gt;&lt;code style=&quot;word-break: break-all&quot;&gt;wget -O - https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh | bash&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Mobile applications&lt;/h2&gt; 
&lt;p&gt;Operating System | Download | Alt. Download ‚Äî|‚Äî|‚Äî Android | &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.cozic.joplin&amp;amp;utm_source=GitHub&amp;amp;utm_campaign=README&amp;amp;pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&quot;&gt;&lt;img alt=&quot;Get it on Google Play&quot; height=&quot;40px&quot; src=&quot;https://joplinapp.org/images/BadgeAndroid.png&quot;&gt;&lt;/a&gt; | or download the APK file: &lt;a href=&quot;https://github.com/laurent22/joplin-android/releases/download/android-v1.7.5/joplin-v1.7.5.apk&quot;&gt;64-bit&lt;/a&gt; &lt;a href=&quot;https://github.com/laurent22/joplin-android/releases/download/android-v1.7.5/joplin-v1.7.5-32bit.apk&quot;&gt;32-bit&lt;/a&gt; iOS | &lt;a href=&quot;https://itunes.apple.com/us/app/joplin/id1315599797&quot;&gt;&lt;img alt=&quot;Get it on the App Store&quot; height=&quot;40px&quot; src=&quot;https://joplinapp.org/images/BadgeIOS.png&quot;&gt;&lt;/a&gt; | -&lt;/p&gt; 
&lt;h2&gt;Terminal application&lt;/h2&gt; 
&lt;p&gt;Operating system | Method ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì|‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì macOS, Linux, or Windows (via &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/faq?f=255&amp;amp;MSPPError=-2147217396&quot;&gt;WSL&lt;/a&gt;) | &lt;strong&gt;Important:&lt;/strong&gt; First, &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;install Node 12+&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;code&gt;NPM_CONFIG_PREFIX=~/.joplin-bin npm install -g joplin&lt;/code&gt;&lt;br&gt;&lt;code&gt;sudo ln -s ~/.joplin-bin/bin/joplin /usr/bin/joplin&lt;/code&gt;&lt;br&gt;&lt;br&gt;By default, the application binary will be installed under &lt;code&gt;~/.joplin-bin&lt;/code&gt;. You may change this directory if needed. Alternatively, if your npm permissions are setup as described &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory&quot;&gt;here&lt;/a&gt; (Option 2) then simply running &lt;code&gt;npm -g install joplin&lt;/code&gt; would work.&lt;/p&gt; 
&lt;p&gt;To start it, type &lt;code&gt;joplin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For usage information, please refer to the full &lt;a href=&quot;https://joplinapp.org/terminal/&quot;&gt;Joplin Terminal Application Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Unsupported methods&lt;/h3&gt; 
&lt;p&gt;There are other ways to install the terminal application. However, they are not supported and problems must be reported to the upstream projects.&lt;/p&gt; 
&lt;p&gt;Operating system | Method ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì|‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì macOS | &lt;code&gt;brew install joplin&lt;/code&gt; Arch Linux | An Arch Linux package is available &lt;a href=&quot;https://aur.archlinux.org/packages/joplin/&quot;&gt;here&lt;/a&gt;. To install it, use an AUR wrapper such as yay: &lt;code&gt;yay -S joplin&lt;/code&gt;. Both the CLI tool (type &lt;code&gt;joplin&lt;/code&gt;) and desktop app (type &lt;code&gt;joplin-desktop&lt;/code&gt;) are packaged. You can also install a compiled version with the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Unofficial_user_repositories#chaotic-aur&quot;&gt;chaotic-aur&lt;/a&gt; repository. For support, please go to the &lt;a href=&quot;https://github.com/masterkorp/joplin-pkgbuild&quot;&gt;GitHub repo&lt;/a&gt;. If you are interested in &lt;a href=&quot;https://joplinapp.org/prereleases/&quot;&gt;pre-release&lt;/a&gt; you have &lt;a href=&quot;https://aur.archlinux.org/packages/joplin-beta&quot;&gt;joplin-beta&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Web Clipper&lt;/h2&gt; 
&lt;p&gt;The Web Clipper is a browser extension that allows you to save web pages and screenshots from your browser. For more information on how to install and use it, see the &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/clipper.md&quot;&gt;Web Clipper Help Page&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Sponsors&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://seirei.ne.jp&quot;&gt;&lt;img title=&quot;Serei Network&quot; width=&quot;256&quot; src=&quot;https://joplinapp.org/images/sponsors/SeireiNetwork.png&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://usrigging.com/&quot;&gt;&lt;img title=&quot;U.S. Ringing Supply&quot; width=&quot;256&quot; src=&quot;https://joplinapp.org/images/sponsors/RingingSupply.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;| | | | | :‚Äî: | :‚Äî: | :‚Äî: | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/6979755?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/devonzuegel&quot;&gt;Devon Zuegel&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/24908652?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/konishi-t&quot;&gt;Â∞èË•ø„ÄÄÂ≠ùÂÆó&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/215668?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/avanderberg&quot;&gt;Alexander van der Berg&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1168659?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/nicholashead&quot;&gt;Nicholas Head&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1439535?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/fbloise&quot;&gt;Frank Bloise&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/15859362?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/thomasbroussard&quot;&gt;Thomas Broussard&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1307332?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/dbrandonjohnson&quot;&gt;Brandon Johnson&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/3061769?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/c-nagy&quot;&gt;@cnagy&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/53228972?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/clmntsl&quot;&gt;clmntsl&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/29300939?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/mcejp&quot;&gt;mcejp&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars.githubusercontent.com/u/1248504?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/joesfer&quot;&gt;joesfer&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars.githubusercontent.com/u/67130?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/chr15m&quot;&gt;chr15m&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars.githubusercontent.com/u/5782817?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/piccobit&quot;&gt;piccobit&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/37297218?s=96&amp;amp;v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/jesssullivan&quot;&gt;Jess Sullivan&lt;/a&gt;&lt;/p&gt; 
&lt;!-- TOC --&gt; 
&lt;h1&gt;Table of contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Applications&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/desktop.md&quot;&gt;Desktop application&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/mobile.md&quot;&gt;Mobile applications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/terminal.md&quot;&gt;Terminal application&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Support&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://discourse.joplinapp.org&quot;&gt;Joplin Forum&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/markdown.md&quot;&gt;Markdown Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/e2ee.md&quot;&gt;How to enable end-to-end encryption&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/conflict.md&quot;&gt;What is a conflict?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/debugging.md&quot;&gt;How to enable debug mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/rich_text_editor.md&quot;&gt;About the Rich Text editor limitations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/faq.md&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Joplin API - Get Started&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/api/overview.md&quot;&gt;Joplin API Overview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/api/get_started/plugins.md&quot;&gt;Plugin development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/api/tutorials/toc_plugin.md&quot;&gt;Plugin tutorial&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Joplin API - References&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://joplinapp.org/api/references/plugin_api/classes/joplin.html&quot;&gt;Plugin API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/api/references/rest_api.md&quot;&gt;Data API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/api/references/plugin_manifest.md&quot;&gt;Plugin manifest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/api/references/plugin_loading_rules.md&quot;&gt;Plugin loading rules&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/api/references/plugin_theming.md&quot;&gt;Plugin theming&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Development&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/BUILD.md&quot;&gt;How to build the apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/e2ee.md&quot;&gt;End-to-end encryption spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/history.md&quot;&gt;Note History spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/sync_lock.md&quot;&gt;Sync Lock spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/plugins.md&quot;&gt;Plugin Architecture spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/search_sorting.md&quot;&gt;Search Sorting spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/server_file_url_format.md&quot;&gt;Server: File URL Format&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/server_delta_sync.md&quot;&gt;Server: Delta Sync&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/server_sharing.md&quot;&gt;Server: Sharing&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Google Summer of Code 2021&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/gsoc2021/index.md&quot;&gt;Google Summer of Code 2021&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/gsoc2021/pull_request_guidelines.md&quot;&gt;How to submit a GSoC pull request&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/gsoc2021/ideas.md&quot;&gt;Project Ideas&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;About&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/changelog.md&quot;&gt;Changelog (Desktop App)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/changelog_cli.md&quot;&gt;Changelog (CLI App)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/changelog_server.md&quot;&gt;Changelog (Server)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/stats.md&quot;&gt;Stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/donate.md&quot;&gt;Donate&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- TOC --&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Desktop, mobile and terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt; for Firefox and Chrome.&lt;/li&gt; 
 &lt;li&gt;End To End Encryption (E2EE).&lt;/li&gt; 
 &lt;li&gt;Note history (revisions).&lt;/li&gt; 
 &lt;li&gt;Synchronisation with various services, including Nextcloud, Dropbox, WebDAV and OneDrive.&lt;/li&gt; 
 &lt;li&gt;Offline first, so the entire data is always available on the device even without an internet connection.&lt;/li&gt; 
 &lt;li&gt;Import Enex files (Evernote export format) and Markdown files.&lt;/li&gt; 
 &lt;li&gt;Export JEX files (Joplin Export format) and raw files.&lt;/li&gt; 
 &lt;li&gt;Support notes, to-dos, tags and notebooks.&lt;/li&gt; 
 &lt;li&gt;Sort notes by multiple criteria - title, updated time, etc.&lt;/li&gt; 
 &lt;li&gt;Support for alarms (notifications) in mobile and desktop applications.&lt;/li&gt; 
 &lt;li&gt;Markdown notes, which are rendered with images and formatting in the desktop and mobile applications. Support for extra features such as math notation and checkboxes.&lt;/li&gt; 
 &lt;li&gt;Choice of both Markdown and Rich Text (WYSIWYG) editors.&lt;/li&gt; 
 &lt;li&gt;File attachment support - images are displayed, other files are linked and can be opened in the relevant application.&lt;/li&gt; 
 &lt;li&gt;Inline display of PDF, video and audio files.&lt;/li&gt; 
 &lt;li&gt;Goto Anything feature.&lt;/li&gt; 
 &lt;li&gt;Search functionality.&lt;/li&gt; 
 &lt;li&gt;Geo-location support.&lt;/li&gt; 
 &lt;li&gt;Supports multiple languages.&lt;/li&gt; 
 &lt;li&gt;External editor support - open notes in your favorite external editor with one click in Joplin.&lt;/li&gt; 
 &lt;li&gt;Extensible functionality through plugin and data APIs.&lt;/li&gt; 
 &lt;li&gt;Template support with data variables for auto creation of time &amp;amp; dates.&lt;/li&gt; 
 &lt;li&gt;Custom CSS support for customisation of both the rendered markdown and overall user interface.&lt;/li&gt; 
 &lt;li&gt;Customisable layout allows toggling, movement and sizing of various elements.&lt;/li&gt; 
 &lt;li&gt;Keyboard shortcuts are editable and allow binding of most Joplin commands with export/import functionality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Importing&lt;/h1&gt; 
&lt;h2&gt;Importing from Evernote&lt;/h2&gt; 
&lt;p&gt;Joplin was designed as a replacement for Evernote and so can import complete Evernote notebooks, as well as notes, tags, resources (attached files) and note metadata (such as author, geo-location, etc.) via ENEX files. In terms of data, the only two things that might slightly differ are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Recognition data - Evernote images, in particular scanned (or photographed) documents have &lt;a href=&quot;https://en.wikipedia.org/wiki/Optical_character_recognition&quot;&gt;recognition data&lt;/a&gt; associated with them. It is the text that Evernote has been able to recognise in the document. This data is not preserved when the note are imported into Joplin. However, should it become supported in the search tool or other parts of Joplin, it should be possible to regenerate this recognition data since the actual image would still be available.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Colour, font sizes and faces - Evernote text is stored as HTML and this is converted to Markdown during the import process. For notes that are mostly plain text or with basic formatting (bold, italic, bullet points, links, etc.) this is a lossless conversion, and the note, once rendered back to HTML should be very similar. Tables are also imported and converted to Markdown tables. For very complex notes, some formatting data might be lost - in particular colours, font sizes and font faces will not be imported. The text itself however is always imported in full regardless of formatting. If it is essential that this extra data is preserved then Joplin also allows import of ENEX files as HTML.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To import Evernote data, first export your Evernote notebooks to ENEX files as described &lt;a href=&quot;https://help.evernote.com/hc/en-us/articles/209005557-How-to-back-up-export-and-restore-import-notes-and-notebooks&quot;&gt;here&lt;/a&gt;. Then follow these steps:&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, open File &amp;gt; Import &amp;gt; ENEX and select your file. The notes will be imported into a new separate notebook. If needed they can then be moved to a different notebook, or the notebook can be renamed, etc.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/terminal.md#command-line-mode&quot;&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import /path/to/file.enex&lt;/code&gt;. This will import the notes into a new notebook named after the filename.&lt;/p&gt; 
&lt;h2&gt;Importing from Markdown files&lt;/h2&gt; 
&lt;p&gt;Joplin can import notes from plain Markdown file. You can either import a complete directory of Markdown files or individual files.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;File import&lt;/strong&gt;: Go to File &amp;gt; Import &amp;gt; MD - Markdown (file) and select the Markdown file. This file will then be imported to the currently selected Notebook.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Directory import&lt;/strong&gt;: Go to File &amp;gt; Import &amp;gt; MD - Markdown (directory) and select the top level of the directory that is being imported. Directory (folder) structure will be preserved in the Notebook &amp;gt; Subnotebook &amp;gt; Note structure within Joplin.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/terminal.md#command-line-mode&quot;&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import --format md /path/to/file.md&lt;/code&gt; or &lt;code&gt;import --format md /path/to/directory/&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Importing from other applications&lt;/h2&gt; 
&lt;p&gt;In general the way to import notes from any application into Joplin is to convert the notes to ENEX files (Evernote format) and to import these ENEX files into Joplin using the method above. Most note-taking applications support ENEX files so it should be relatively straightforward. For help about specific applications, see below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Standard Notes: Please see &lt;a href=&quot;https://programadorwebvalencia.com/migrate-notes-from-standard-notes-to-joplin/&quot;&gt;this tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tomboy Notes: Export the notes to ENEX files &lt;a href=&quot;https://askubuntu.com/questions/243691/how-can-i-export-my-tomboy-notes-into-evernote/608551&quot;&gt;as described here&lt;/a&gt; for example, and import these ENEX files into Joplin.&lt;/li&gt; 
 &lt;li&gt;OneNote: First &lt;a href=&quot;https://discussion.evernote.com/topic/107736-is-there-a-way-to-import-from-onenote-into-evernote-on-the-mac/&quot;&gt;import the notes from OneNote into Evernote&lt;/a&gt;. Then export the ENEX file from Evernote and import it into Joplin.&lt;/li&gt; 
 &lt;li&gt;NixNote: Synchronise with Evernote, then export the ENEX files and import them into Joplin. More info &lt;a href=&quot;https://discourse.joplinapp.org/t/import-from-nixnote/183/3&quot;&gt;in this thread&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Exporting&lt;/h1&gt; 
&lt;p&gt;Joplin can export to the JEX format (Joplin Export file), which is a tar file that can contain multiple notes, notebooks, etc. This is a lossless format in that all the notes, but also metadata such as geo-location, updated time, tags, etc. are preserved. This format is convenient for backup purposes and can be re-imported into Joplin. A ‚Äúraw‚Äù format is also available. This is the same as the JEX format except that the data is saved to a directory and each item represented by a single file. Joplin is also capable of exporting to a number of other formats including HTML and PDF which can be done for single notes, notebooks or everything.&lt;/p&gt; 
&lt;h1&gt;Synchronisation&lt;/h1&gt; 
&lt;p&gt;One of the goals of Joplin was to avoid being tied to any particular company or service, whether it is Evernote, Google or Microsoft. As such the synchronisation is designed without any hard dependency to any particular service. Most of the synchronisation process is done at an abstract level and access to external services, such as Nextcloud or Dropbox, is done via lightweight drivers. It is easy to support new services by creating simple drivers that provide a filesystem-like interface, i.e. the ability to read, write, delete and list items. It is also simple to switch from one service to another or to even sync to multiple services at once. Each note, notebook, tags, as well as the relation between items is transmitted as plain text files during synchronisation, which means the data can also be moved to a different application, can be easily backed up, inspected, etc.&lt;/p&gt; 
&lt;p&gt;Currently, synchronisation is possible with Nextcloud, WebDAV, Dropbox, OneDrive or the local filesystem. To enable synchronisation please follow the instructions below. After that, the application will synchronise in the background whenever it is running, or you can click on ‚ÄúSynchronise‚Äù to start a synchronisation manually. Joplin will background sync automatically after any content change is made on the local application.&lt;/p&gt; 
&lt;p&gt;If the &lt;strong&gt;terminal client&lt;/strong&gt; has been installed, it is possible to also synchronise outside of the user interface by typing &lt;code&gt;joplin sync&lt;/code&gt; from the terminal. This can be used to setup a cron script to synchronise at a regular interval. For example, this would do it every 30 minutes:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt; */30 * * * * /path/to/joplin sync&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Nextcloud synchronisation&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://joplinapp.org/images/nextcloud-logo-background.png&quot; width=&quot;100&quot; align=&quot;left&quot;&gt; &lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt; is a self-hosted, private cloud solution. It can store documents, images and videos but also calendars, passwords and countless other things and can sync them to your laptop or phone. As you can host your own Nextcloud server, you own both the data on your device and infrastructure used for synchronisation. As such it is a good fit for Joplin. The platform is also well supported and with a strong community, so it is likely to be around for a while - since it‚Äôs open source anyway, it is not a service that can be closed, it can exist on a server for as long as one chooses.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, go to the Configuration screen and select Nextcloud as the synchronisation target. Then input the WebDAV URL (to get it, click on Settings in the bottom left corner of the page, in Nextcloud), this is normally &lt;code&gt;https://example.com/nextcloud/remote.php/webdav/Joplin&lt;/code&gt; (&lt;strong&gt;make sure to create the ‚ÄúJoplin‚Äù directory in Nextcloud&lt;/strong&gt;), and set the username and password. If it does not work, please &lt;a href=&quot;https://github.com/laurent22/joplin/issues/61#issuecomment-373282608&quot;&gt;see this explanation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, you will need to set the &lt;code&gt;sync.target&lt;/code&gt; config variable and all the &lt;code&gt;sync.5.path&lt;/code&gt;, &lt;code&gt;sync.5.username&lt;/code&gt; and &lt;code&gt;sync.5.password&lt;/code&gt; config variables to, respectively the Nextcloud WebDAV URL, your username and your password. This can be done from the command line mode using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;:config sync.5.path https://example.com/nextcloud/remote.php/webdav/Joplin
:config sync.5.username YOUR_USERNAME
:config sync.5.password YOUR_PASSWORD
:config sync.target 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If synchronisation does not work, please consult the logs in the app profile directory - it is often due to a misconfigured URL or password. The log should indicate what the exact issue is.&lt;/p&gt; 
&lt;h2&gt;WebDAV synchronisation&lt;/h2&gt; 
&lt;p&gt;Select the ‚ÄúWebDAV‚Äù synchronisation target and follow the same instructions as for Nextcloud above (for the &lt;strong&gt;terminal application&lt;/strong&gt; you will need to select sync target 6 rather than 5)&lt;/p&gt; 
&lt;p&gt;WebDAV-compatible services that are known to work with Joplin:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_dav.html&quot;&gt;Apache WebDAV Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivehq.com&quot;&gt;DriveHQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastmail.com/&quot;&gt;Fastmail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.strato.fr/stockage-en-ligne/&quot;&gt;HiDrive&lt;/a&gt; from Strato. &lt;a href=&quot;https://github.com/laurent22/joplin/issues/309&quot;&gt;Setup help&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_dav_module.html&quot;&gt;Nginx WebDAV Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://owncloud.org/&quot;&gt;OwnCloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seafile.com/&quot;&gt;Seafile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transip.nl/stack/&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.synology.com/en-us/dsm/packages/WebDAVServer&quot;&gt;Synology WebDAV Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schimera.com/products/webdav-nav-server/&quot;&gt;WebDAV Nav&lt;/a&gt;, a macOS server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zimbra.com/&quot;&gt;Zimbra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dropbox synchronisation&lt;/h2&gt; 
&lt;p&gt;When syncing with Dropbox, Joplin creates a sub-directory in Dropbox, in &lt;code&gt;/Apps/Joplin&lt;/code&gt; and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select ‚ÄúDropbox‚Äù as the synchronisation target in the Configuration screen (it is selected by default). Then, to initiate the synchronisation process, click on the ‚ÄúSynchronise‚Äù button in the sidebar and follow the instructions.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application.&lt;/p&gt; 
&lt;h2&gt;OneDrive synchronisation&lt;/h2&gt; 
&lt;p&gt;When syncing with OneDrive, Joplin creates a sub-directory in OneDrive, in /Apps/Joplin and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select ‚ÄúOneDrive‚Äù as the synchronisation target in the Configuration screen. Then, to initiate the synchronisation process, click on the ‚ÄúSynchronise‚Äù button in the sidebar and follow the instructions.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application (simply input your Microsoft credentials - you do not need to register with OneDrive).&lt;/p&gt; 
&lt;h2&gt;AWS S3 synchronisation&lt;/h2&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select ‚ÄúAWS S3 (Beta)‚Äù as the synchronisation target in the Configuration screen.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AWS S3 Bucket:&lt;/strong&gt; The name of your Bucket, such as &lt;code&gt;joplin-bucket&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AWS S3 URL:&lt;/strong&gt; Fully qualified URL; By default this should be &lt;code&gt;https://s3.amazonaws.com/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AWS key &amp;amp; AWS secret:&lt;/strong&gt; IAM user‚Äôs programmatic access key. To create a new key &amp;amp; secret, visit &lt;a href=&quot;https://console.aws.amazon.com/iam/home#/security_credentials&quot;&gt;IAM Security Credentials&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;While creating a new Bucket for Joplin, disable &lt;strong&gt;Bucket Versioning&lt;/strong&gt;, enable &lt;strong&gt;Block all public access&lt;/strong&gt; and enable &lt;strong&gt;Default encryption&lt;/strong&gt; with &lt;code&gt;Amazon S3 key (SSE-S3)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To add a &lt;strong&gt;Bucket Policy&lt;/strong&gt; from the AWS S3 Web Console, navigate to the &lt;strong&gt;Permissions&lt;/strong&gt; tab. Temporarily disable &lt;strong&gt;Block all public access&lt;/strong&gt; to edit the Bucket policy, something along the lines of:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
    &quot;Version&quot;: &quot;2012-10-17&quot;,
    &quot;Statement&quot;: [
        {
            &quot;Sid&quot;: &quot;VisualEditor0&quot;,
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Principal&quot;: &quot;*&quot;,
            &quot;Action&quot;: [
                  &quot;s3:ListBucket&quot;,
                  &quot;s3:GetBucketLocation&quot;,
                  &quot;s3:DeleteObject&quot;,
                  &quot;s3:DeleteObjectVersion&quot;,
                  &quot;s3:PutObject&quot;
            ]
            &quot;Resource&quot;: [
                &quot;arn:aws:s3:::joplin-bucket&quot;,
                &quot;arn:aws:s3:::joplin-bucket/*&quot;
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Encryption&lt;/h1&gt; 
&lt;p&gt;Joplin supports end-to-end encryption (E2EE) on all the applications. E2EE is a system where only the owner of the notes, notebooks, tags or resources can read them. It prevents potential eavesdroppers - including telecom providers, internet providers, and even the developers of Joplin from being able to access the data. Please see the &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/e2ee.md&quot;&gt;End-To-End Encryption Tutorial&lt;/a&gt; for more information about this feature and how to enable it.&lt;/p&gt; 
&lt;p&gt;For a more technical description, mostly relevant for development or to review the method being used, please see the &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/spec/e2ee.md&quot;&gt;Encryption specification&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Note history&lt;/h1&gt; 
&lt;p&gt;The Joplin applications automatically save previous versions of your notes at regular intervals. These versions are synced across devices and can be viewed from the desktop application. To do so, click on the ‚ÄúInformation‚Äù button on a note, then click on ‚ÄúPrevious version of this note‚Äù. From this screen you can view the previous versions of the note as well as restore any of them.&lt;/p&gt; 
&lt;p&gt;This feature can be disabled from the ‚ÄúNote history‚Äù section in the Configuration screen, and it is also possible to change for how long the history of a note is saved.&lt;/p&gt; 
&lt;p&gt;More information please see the &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/note_history.md&quot;&gt;Note History page&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;External text editor&lt;/h1&gt; 
&lt;p&gt;Joplin notes can be opened and edited using an external editor of your choice. It can be a simple text editor like Notepad++ or Sublime Text or an actual Markdown editor like Typora. In that case, images will also be displayed within the editor. To open the note in an external editor, click on the icon in the toolbar or press Ctrl+E (or Cmd+E). Your default text editor will be used to open the note. If needed, you can also specify the editor directly in the General Options, under ‚ÄúText editor command‚Äù.&lt;/p&gt; 
&lt;h1&gt;Attachments&lt;/h1&gt; 
&lt;p&gt;Any kind of file can be attached to a note. In Markdown, links to these files are represented as a simple ID to the attachment, clicking on this link will open the file in the default application. In the case of audio, video and pdf files, these will be displayed inline with the note and so can be viewed or played within Joplin.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, files can be attached either by clicking the ‚ÄúAttach file‚Äù icon in the editor or via drag and drop. If you prefer to create a link to a local file instead, hold the ALT key while performing the drag and drop operation. You can also copy and paste images directly in the editor via Ctrl+V.&lt;/p&gt; 
&lt;p&gt;Resources that are not attached to any note will be automatically deleted in accordance to the &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#note-history&quot;&gt;Note History&lt;/a&gt; settings.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Resources larger than 10 MB are not currently supported on mobile. They will crash the application when synchronising so it is recommended not to attach such resources at the moment. The issue is being looked at.&lt;/p&gt; 
&lt;h2&gt;Downloading attachments&lt;/h2&gt; 
&lt;p&gt;The way the attachments are downloaded during synchronisation can be customised in the Configuration screen, under ‚ÄúAttachment download behaviour‚Äù. The default option (‚ÄúAlways‚Äù) is to download all the attachments, all the time, so that the data is available even when the device is offline. There is also the option to download the attachments manually (option ‚ÄúManual‚Äù), by clicking on it, or automatically (Option ‚ÄúAuto‚Äù), in which case the attachments are downloaded only when a note is opened. These options should help saving disk space and network bandwidth, especially on mobile.&lt;/p&gt; 
&lt;h1&gt;Notifications&lt;/h1&gt; 
&lt;p&gt;In the desktop and mobile apps, an alarm can be associated with any to-do. It will be triggered at the given time by displaying a notification. How the notification will be displayed depends on the operating system since each has a different way to handle this. Please see below for the requirements for the desktop applications:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &amp;gt;= 8. Make sure the Action Center is enabled on Windows. Task bar balloon for Windows &amp;lt; 8. Growl as fallback. Growl takes precedence over Windows balloons.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &amp;gt;= 10.8 or Growl if earlier.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;notify-osd&lt;/code&gt; or &lt;code&gt;libnotify-bin&lt;/code&gt; installed (Ubuntu should have this by default). Growl otherwise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/mikaelbr/node-notifier/raw/master/DECISION_FLOW.md&quot;&gt;documentation and flow chart for reporter choice&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;On mobile, the alarms will be displayed using the built-in notification system.&lt;/p&gt; 
&lt;p&gt;If for any reason the notifications do not work, please &lt;a href=&quot;https://github.com/laurent22/joplin/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Sub-notebooks&lt;/h1&gt; 
&lt;p&gt;Sub-notebooks allow organising multiple notebooks into a tree of notebooks. For example it can be used to regroup all the notebooks related to work, to family or to a particular project under a parent notebook.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://joplinapp.org/images/SubNotebooks.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, to create a subnotebook, drag and drop it onto another notebook. To move it back to the root, drag and drop it on the ‚ÄúNotebooks‚Äù header. Currently only the desktop app can be used to organise the notebooks.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;mobile application&lt;/strong&gt; supports displaying and collapsing/expanding the tree of notebooks, however it does not currently support moving the subnotebooks to different notebooks.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;terminal app&lt;/strong&gt; supports displaying the tree of subnotebooks but it does not support collapsing/expanding them or moving the subnotebooks around.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Markdown&lt;/h1&gt; 
&lt;p&gt;Joplin uses and renders a Github-flavoured Markdown with a few variations and additions. In particular it adds math formula support, interactive checkboxes and support for note links. Joplin also supports Markdown plugins which allow enabling and disabling various advanced Markdown features. Have a look at the &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/markdown.md&quot;&gt;Markdown Guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h1&gt;Custom CSS&lt;/h1&gt; 
&lt;p&gt;Rendered markdown can be customized by placing a userstyle file in the profile directory &lt;code&gt;~/.config/joplin-desktop/userstyle.css&lt;/code&gt; (This path might be different on your device - check at the top of the &lt;code&gt;General&lt;/code&gt; page of the Configuration menu for the exact path). This file supports standard CSS syntax. Joplin &lt;em&gt;&lt;strong&gt;must&lt;/strong&gt;&lt;/em&gt; be restarted for the new css to be applied, please ensure that Joplin is not closing to the tray, but is actually exiting. Note that this file is used for both displaying the notes and printing the notes. Be aware how the CSS may look printed (for example, printing white text over a black background is usually not wanted).&lt;/p&gt; 
&lt;p&gt;The whole UI can be customized by placing a custom editor style file in the profile directory &lt;code&gt;~/.config/joplin-desktop/userchrome.css&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Important: userstyle.css and userchrome.css are provided for your convenience, but they are advanced settings, and styles you define may break from one version to the next. If you want to use them, please know that it might require regular development work from you to keep them working. The Joplin team cannot make a commitment to keep the application HTML structure stable.&lt;/p&gt; 
&lt;h1&gt;Note templates&lt;/h1&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop app&lt;/strong&gt;, templates can be used to create new notes or to insert into existing ones by adding a template file to the &lt;code&gt;templates&lt;/code&gt; directory (File &amp;gt; Templates). For example creating the file &lt;code&gt;hours.md&lt;/code&gt; in the &lt;code&gt;templates&lt;/code&gt; directory with the contents:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;Date: {{date}}
Hours:
Details:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Templates can then be inserted from the menu (File-&amp;gt;Templates).&lt;/p&gt; 
&lt;p&gt;The currently supported template variables are:&lt;/p&gt; 
&lt;p&gt;| Variable | Description | Example | | ‚Äî | ‚Äî | ‚Äî | | &lt;code&gt;{{date}}&lt;/code&gt; | Today‚Äôs date formatted based on the settings format | 2019-01-01 | | &lt;code&gt;{{time}}&lt;/code&gt; | Current time formatted based on the settings format | 13:00 | | &lt;code&gt;{{datetime}}&lt;/code&gt; | Current date and time formatted based on the settings format | 01/01/19 1:00 PM | | &lt;code&gt;{{#custom_datetime}}&lt;/code&gt; | Current date and/or time formatted based on a supplied string (using &lt;a href=&quot;https://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; formatting) | &lt;code&gt;{{#custom_datetime}}M d{{/custom_datetime}}&lt;/code&gt; | | &lt;code&gt;{{bowm}}&lt;/code&gt; | Date of the beginning of the week (when week starts on Monday) based on the settings format | | | &lt;code&gt;{{bows}}&lt;/code&gt; | Date of the beginning of the week (when week starts on Sunday) based on the settings format | |&lt;/p&gt; 
&lt;h1&gt;Plugins&lt;/h1&gt; 
&lt;p&gt;The &lt;strong&gt;desktop app&lt;/strong&gt; has the ability to extend beyond its standard functionality by the way of plugins. These plugins adhere to the Joplin plugin API and can be installed &amp;amp; configured within the application via the &lt;code&gt;Plugins&lt;/code&gt; page in the Configuration screen. This menu allows the manual installation of the plugin using the single ‚ÄòJoplin Plugin Archive‚Äô (*.jpl) file. Once the application is reloaded the plugins will appear within the plugins menu where they can be toggled on/off or removed entirely.&lt;/p&gt; 
&lt;p&gt;Plugins are currently maintained by the community in the &lt;a href=&quot;https://discourse.joplinapp.org/c/plugins/18&quot;&gt;Joplin Discourse ‚Äòplugins‚Äô category&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information see &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/plugins.md&quot;&gt;Plugins&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Searching&lt;/h1&gt; 
&lt;p&gt;Joplin implements the SQLite Full Text Search (FTS4) extension. It means the content of all the notes is indexed in real time and search queries return results very fast. Both &lt;a href=&quot;https://www.sqlite.org/fts3.html#simple_fts_queries&quot;&gt;Simple FTS Queries&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/fts3.html#full_text_index_queries&quot;&gt;Full-Text Index Queries&lt;/a&gt; are supported. See below for the list of supported queries:&lt;/p&gt; 
&lt;h2&gt;Supported queries&lt;/h2&gt; 
&lt;p&gt;Search type | Description | Example ‚Äî‚Äî‚Äî‚Äî|‚Äî‚Äî‚Äî‚Äì‚Äì|‚Äî‚Äî‚Äî Single word | Returns all the notes that contain this term. | For example, searching for &lt;code&gt;cat&lt;/code&gt; will return all the notes that contain this exact word. Note: it will not return the notes that contain the substring - thus, for ‚Äúcat‚Äù, notes that contain ‚Äúcataclysmic‚Äù or ‚Äúprevaricate‚Äù will &lt;strong&gt;not&lt;/strong&gt; be returned. Multiple word | Returns all the notes that contain &lt;strong&gt;all&lt;/strong&gt; these words, but not necessarily next to each other. | &lt;code&gt;dog cat&lt;/code&gt; - will return any notes that contain the words ‚Äúdog‚Äù and ‚Äúcat‚Äù anywhere in the note, no necessarily in that order nor next to each other. It will &lt;strong&gt;not&lt;/strong&gt; return results that contain ‚Äúdog‚Äù or ‚Äúcat‚Äù only. Phrase | Add double quotes to return the notes that contain exactly this phrase. | &lt;code&gt;&quot;shopping list&quot;&lt;/code&gt; - will return the notes that contain these &lt;strong&gt;exact terms&lt;/strong&gt; next to each other and in this order. It will &lt;strong&gt;not&lt;/strong&gt; return for example a note that contains ‚Äúgoing shopping with my list‚Äù. Prefix | Add a wildcard to return all the notes that contain a term with a specified prefix. | &lt;code&gt;swim*&lt;/code&gt; - will return all the notes that contain eg. ‚Äúswim‚Äù, but also ‚Äúswimming‚Äù, ‚Äúswimsuit‚Äù, etc. IMPORTANT: The wildcard &lt;strong&gt;can only be at the end&lt;/strong&gt; - it will be ignored at the beginning of a word (eg. &lt;code&gt;*swim&lt;/code&gt;) and will be treated as a literal asterisk in the middle of a word (eg. &lt;code&gt;ast*rix&lt;/code&gt;) Switch to basic search | One drawback of Full Text Search is that it ignores most non-alphabetical characters. However in some cases you might want to search for this too. To do that, you can use basic search. You switch to this mode by prefixing your search with a slash &lt;code&gt;/&lt;/code&gt;. This won‚Äôt provide the benefits of FTS but it will allow searching exactly for what you need. Note that it can also be much slower, even extremely slow, depending on your query. | &lt;code&gt;/&quot;- [ ]&quot;&lt;/code&gt; - will return all the notes that contain unchecked checkboxes.&lt;/p&gt; 
&lt;h2&gt;Search filters&lt;/h2&gt; 
&lt;p&gt;You can also use search filters to further restrict the search.&lt;/p&gt; 
&lt;p&gt;| Operator | Description | Example | | ‚Äî | ‚Äî | ‚Äî | |&lt;strong&gt;-&lt;/strong&gt;|If placed before a text term, it excludes the notes that contain that term. You can also place it before a filter to negate it. |&lt;code&gt;-spam&lt;/code&gt; searches for all notes without the word &lt;code&gt;spam&lt;/code&gt;.&lt;br&gt;&lt;code&gt;office -trash&lt;/code&gt; searches for all notes with the word&lt;code&gt;office&lt;/code&gt; and without the word &lt;code&gt;trash&lt;/code&gt;.| |&lt;strong&gt;any:&lt;/strong&gt;|Return notes that satisfy any/all of the required conditions. &lt;code&gt;any:0&lt;/code&gt; is the default, which means all conditions must be satisfied.|&lt;code&gt;any:1 cat dog&lt;/code&gt; will return notes that have the word &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;dog&lt;/code&gt;.&lt;br&gt;&lt;code&gt;any:0 cat dog&lt;/code&gt; will return notes with both the words &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;dog&lt;/code&gt;. | | &lt;strong&gt;title:&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;body:&lt;/strong&gt;|Restrict your search to just the title or the body field.|&lt;code&gt;title:&quot;hello world&quot;&lt;/code&gt; searches for notes whose title contains &lt;code&gt;hello&lt;/code&gt; and &lt;code&gt;world&lt;/code&gt;.&lt;br&gt;&lt;code&gt;title:hello -body:world&lt;/code&gt; searches for notes whose title contains &lt;code&gt;hello&lt;/code&gt; and body does not contain &lt;code&gt;world&lt;/code&gt;. | &lt;strong&gt;tag:&lt;/strong&gt; |Restrict the search to the notes with the specified tags.|&lt;code&gt;tag:office&lt;/code&gt; searches for all notes having tag office.&lt;br&gt;&lt;code&gt;tag:office tag:important&lt;/code&gt; searches for all notes having both office and important tags.&lt;br&gt;&lt;code&gt;tag:office -tag:spam&lt;/code&gt; searches for notes having tag &lt;code&gt;office&lt;/code&gt; which do not have tag &lt;code&gt;spam&lt;/code&gt;.&lt;br&gt;&lt;code&gt;any:1 tag:office tag:spam&lt;/code&gt; searches for notes having tag &lt;code&gt;office&lt;/code&gt; or tag &lt;code&gt;spam&lt;/code&gt;.&lt;br&gt;&lt;code&gt;tag:be*ful&lt;/code&gt; does a search with wildcards.&lt;br&gt;&lt;code&gt;tag:*&lt;/code&gt; returns all notes with tags.&lt;br&gt;&lt;code&gt;-tag:*&lt;/code&gt; returns all notes without tags.| | &lt;strong&gt;notebook:&lt;/strong&gt; | Restrict the search to the specified notebook(s). |&lt;code&gt;notebook:books&lt;/code&gt; limits the search scope within &lt;code&gt;books&lt;/code&gt; and all its subnotebooks.&lt;br&gt;&lt;code&gt;notebook:wheel*time&lt;/code&gt; does a wildcard search.| | &lt;strong&gt;created:&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;updated:&lt;/strong&gt; | Searches for notes created/updated on dates specified using YYYYMMDD format. You can also search relative to the current day, week, month, or year. | &lt;code&gt;created:20201218&lt;/code&gt; will return notes created on or after December 18, 2020.&lt;br&gt;&lt;code&gt;-updated:20201218&lt;/code&gt; will return notes updated before December 18, 2020.&lt;br&gt;&lt;code&gt;created:20200118 -created:20201215&lt;/code&gt; will return notes created between January 18, 2020, and before December 15, 2020.&lt;br&gt;&lt;code&gt;created:202001 -created:202003&lt;/code&gt; will return notes created on or after January and before March 2020.&lt;br&gt;&lt;code&gt;updated:1997 -updated:2020&lt;/code&gt; will return all notes updated between the years 1997 and 2019.&lt;br&gt;&lt;code&gt;created:day-2&lt;/code&gt; searches for all notes created in the past two days.&lt;br&gt;&lt;code&gt;updated:year-0&lt;/code&gt; searches all notes updated in the current year. | &lt;strong&gt;type:&lt;/strong&gt; |Restrict the search to either notes or todos. | &lt;code&gt;type:note&lt;/code&gt; to return all notes&lt;br&gt;&lt;code&gt;type:todo&lt;/code&gt; to return all todos | | &lt;strong&gt;iscompleted:&lt;/strong&gt; | Restrict the search to either completed or uncompleted todos. | &lt;code&gt;iscompleted:1&lt;/code&gt; to return all completed todos&lt;br&gt;&lt;code&gt;iscompleted:0&lt;/code&gt; to return all uncompleted todos| |&lt;strong&gt;latitude:&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;longitude:&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;altitude:&lt;/strong&gt;|Filter by location|&lt;code&gt;latitude:40 -latitude:50&lt;/code&gt; to return notes with latitude &amp;gt;= 40 and &amp;lt; 50 | |&lt;strong&gt;resource:&lt;/strong&gt;|Filter by attachment MIME type|&lt;code&gt;resource:image/jpeg&lt;/code&gt; to return notes with a jpeg attachment.&lt;br&gt;&lt;code&gt;-resource:application/pdf&lt;/code&gt; to return notes without a pdf attachment.&lt;br&gt;&lt;code&gt;resource:image/*&lt;/code&gt; to return notes with any images.| |&lt;strong&gt;sourceurl:&lt;/strong&gt;|Filter by source URL|&lt;code&gt;sourceurl:https://www.google.com&lt;/code&gt;&lt;br&gt;&lt;code&gt;sourceurl:*joplinapp.org&lt;/code&gt; to perform a wildcard search.|&lt;/p&gt; 
&lt;p&gt;Note: In the CLI client you have to escape the query using &lt;code&gt;--&lt;/code&gt; when using negated filters. Eg. &lt;code&gt;:search -- &quot;-tag:tag1&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The filters are implicitly connected by and/or connectives depending on the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, all filters are connected by ‚ÄúAND‚Äù.&lt;/li&gt; 
 &lt;li&gt;To override this default behaviour, use the &lt;code&gt;any&lt;/code&gt; filter, in which case the search terms will be connected by ‚ÄúOR‚Äù instead.&lt;/li&gt; 
 &lt;li&gt;There‚Äôs an exception for the &lt;code&gt;notebook&lt;/code&gt; filters which are connected by ‚ÄúOR‚Äù. The reason being that no note can be in multiple notebooks at once.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Search order&lt;/h2&gt; 
&lt;p&gt;Notes are sorted by ‚Äúrelevance‚Äù. Currently it means the notes that contain the requested terms the most times are on top. For queries with multiple terms, it also matters how close to each other the terms are. This is a bit experimental so if you notice a search query that returns unexpected results, please report it in the forum, providing as many details as possible to replicate the issue.&lt;/p&gt; 
&lt;h1&gt;Goto Anything&lt;/h1&gt; 
&lt;p&gt;In the desktop application, press &lt;kbd&gt;Ctrl+P&lt;/kbd&gt; or &lt;kbd&gt;Cmd+P&lt;/kbd&gt; and type a note title or part of its content to jump to it. Or type &lt;kbd&gt;#&lt;/kbd&gt; followed by a tag name, or &lt;kbd&gt;@&lt;/kbd&gt; followed by a notebook name.&lt;/p&gt; 
&lt;h1&gt;Privacy&lt;/h1&gt; 
&lt;p&gt;Joplin values your privacy and security by giving you complete control over your information and digital footprint.&lt;/p&gt; 
&lt;p&gt;Joplin applications do not send any data to any service without your authorisation. Any data that Joplin saves, such as notes or images, are saved to your own device and you are free to delete this data at any time.&lt;/p&gt; 
&lt;p&gt;Joplin has many modern features, some of which use third-party services. You can disable any or all of these features in the application settings. These features are:&lt;/p&gt; 
&lt;p&gt;|Feature | Description | Default| |‚Äì‚Äì‚Äì‚Äì|‚Äî‚Äî‚Äî‚Äì‚Äì|‚Äì‚Äì‚Äì‚Äì| |Auto-update|Joplin periodically connects to GitHub to check for new releases.|Enabled| |Geo-location|Joplin saves geo-location information in note properties when you create a note.|Enabled| |Synchronisation|Joplin supports synchronisation of your notes across multiple devices. If you choose to synchronise with a third-party, such as OneDrive, the notes will be sent to your OneDrive account, in which case the third-party privacy policy applies.|Disabled|&lt;/p&gt; 
&lt;p&gt;Joplin is developed as an open-source application and the source code is freely available online to inspect.&lt;/p&gt; 
&lt;p&gt;For any question about Joplin privacy, please leave a message on the &lt;a href=&quot;https://discourse.joplinapp.org/&quot;&gt;Joplin Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Donations&lt;/h1&gt; 
&lt;p&gt;Donations to Joplin support the development of the project. Developing quality applications mostly takes time, but there are also some expenses, such as digital certificates to sign the applications, app store fees, hosting, etc. Most of all, your donation will make it possible to keep up the current development standard.&lt;/p&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/readme/donate.md&quot;&gt;donation page&lt;/a&gt; for information on how to support the development of Joplin.&lt;/p&gt; 
&lt;h1&gt;Community&lt;/h1&gt; 
&lt;p&gt;Name | Description ‚Äî | ‚Äî &lt;a href=&quot;https://discourse.joplinapp.org/&quot;&gt;Support Forum&lt;/a&gt; | This is the main place for general discussion about Joplin, user support, software development questions, and to discuss new features. Also where the latest beta versions are released and discussed. &lt;a href=&quot;https://www.reddit.com/r/joplinapp/&quot;&gt;Sub-reddit&lt;/a&gt; | Also a good place to get help &lt;a href=&quot;https://discordapp.com/invite/d2HMPwE&quot;&gt;Discord server&lt;/a&gt; | Our chat server &lt;a href=&quot;https://www.patreon.com/joplin&quot;&gt;Patreon page&lt;/a&gt; |The latest news are often posted there &lt;a href=&quot;https://mastodon.social/@joplinapp&quot;&gt;Mastodon feed&lt;/a&gt; | Follow us on Mastodon &lt;a href=&quot;https://twitter.com/joplinapp&quot;&gt;Twitter feed&lt;/a&gt; | Follow us on Twitter&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Please see the guide for information on how to contribute to the development of Joplin: https://github.com/laurent22/joplin/blob/dev/CONTRIBUTING.md&lt;/p&gt; 
&lt;h1&gt;Localisation&lt;/h1&gt; 
&lt;p&gt;Joplin is currently available in the languages below. If you would like to contribute a &lt;strong&gt;new translation&lt;/strong&gt;, it is quite straightforward, please follow these steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://poedit.net/&quot;&gt;Download Poedit&lt;/a&gt;, the translation editor, and install it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/packages/tools/locales/joplin.pot&quot;&gt;Download the file to be translated&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;In Poedit, open this .pot file, go into the Catalog menu and click Configuration. Change ‚ÄúCountry‚Äù and ‚ÄúLanguage‚Äù to your own country and language.&lt;/li&gt; 
 &lt;li&gt;From then you can translate the file.&lt;/li&gt; 
 &lt;li&gt;Once it is done, please &lt;a href=&quot;https://github.com/laurent22/joplin/pulls&quot;&gt;open a pull request&lt;/a&gt; and add the file to it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This translation will apply to the three applications - desktop, mobile and terminal.&lt;/p&gt; 
&lt;p&gt;To &lt;strong&gt;update a translation&lt;/strong&gt;, follow the same steps as above but instead of getting the .pot file, get the .po file for your language from the table below.&lt;/p&gt; 
&lt;p&gt;Current translations:&lt;/p&gt; 
&lt;!-- LOCALE-TABLE-AUTO-GENERATED --&gt; 
&lt;p&gt;&amp;nbsp; | Language | Po File | Last translator | Percent done ‚Äî|‚Äî|‚Äî|‚Äî|‚Äî &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/arableague.png&quot; alt=&quot;&quot;&gt; | Arabic | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/ar.po&quot;&gt;ar&lt;/a&gt; | &lt;a href=&quot;mailto:Whaell@protonmail.com&quot;&gt;Whaell O&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/es/basque_country.png&quot; alt=&quot;&quot;&gt; | Basque | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/eu.po&quot;&gt;eu&lt;/a&gt; | juan.abasolo@ehu.eus | 31% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ba.png&quot; alt=&quot;&quot;&gt; | Bosnian (Bosna i Hercegovina) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/bs_BA.po&quot;&gt;bs_BA&lt;/a&gt; | &lt;a href=&quot;mailto:dervis.t@pm.me&quot;&gt;Dervi≈° T.&lt;/a&gt; | 74% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/bg.png&quot; alt=&quot;&quot;&gt; | Bulgarian (–ë—ä–ª–≥–∞—Ä–∏—è) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/bg_BG.po&quot;&gt;bg_BG&lt;/a&gt; | | 60% &lt;img src=&quot;https://joplinapp.org/images/flags/es/catalonia.png&quot; alt=&quot;&quot;&gt; | Catalan | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/ca.po&quot;&gt;ca&lt;/a&gt; | jmontane, 2019 | 85% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/hr.png&quot; alt=&quot;&quot;&gt; | Croatian (Hrvatska) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/hr_HR.po&quot;&gt;hr_HR&lt;/a&gt; | &lt;a href=&quot;mailto:mail@milotype.de&quot;&gt;Milo Ivir&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/cz.png&quot; alt=&quot;&quot;&gt; | Czech (ƒåesk√° republika) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/cs_CZ.po&quot;&gt;cs_CZ&lt;/a&gt; | &lt;a href=&quot;mailto:lukas@aiya.cz&quot;&gt;Lukas Helebrandt&lt;/a&gt; | 89% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/dk.png&quot; alt=&quot;&quot;&gt; | Dansk (Danmark) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/da_DK.po&quot;&gt;da_DK&lt;/a&gt; | Mustafa Al-Dailemi (dailemi@hotmail.com)Language-Team: | 96% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/de.png&quot; alt=&quot;&quot;&gt; | Deutsch (Deutschland) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/de_DE.po&quot;&gt;de_DE&lt;/a&gt; | &lt;a href=&quot;mailto:atalanttore@googlemail.com&quot;&gt;Atalanttore&lt;/a&gt; | 98% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ee.png&quot; alt=&quot;&quot;&gt; | Eesti Keel (Eesti) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/et_EE.po&quot;&gt;et_EE&lt;/a&gt; | | 58% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/gb.png&quot; alt=&quot;&quot;&gt; | English (United Kingdom) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/en_GB.po&quot;&gt;en_GB&lt;/a&gt; | | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/us.png&quot; alt=&quot;&quot;&gt; | English (United States of America) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/en_US.po&quot;&gt;en_US&lt;/a&gt; | | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/es.png&quot; alt=&quot;&quot;&gt; | Espa√±ol (Espa√±a) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/es_ES.po&quot;&gt;es_ES&lt;/a&gt; | &lt;a href=&quot;mailto:mario.campo@gmail.com&quot;&gt;Mario Campo&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/esperanto.png&quot; alt=&quot;&quot;&gt; | Esperanto | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/eo.po&quot;&gt;eo&lt;/a&gt; | Marton Paulo | 34% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/fi.png&quot; alt=&quot;&quot;&gt; | Finnish (Suomi) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/fi_FI.po&quot;&gt;fi_FI&lt;/a&gt; | mrkaato | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/fr.png&quot; alt=&quot;&quot;&gt; | Fran√ßais (France) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/fr_FR.po&quot;&gt;fr_FR&lt;/a&gt; | Laurent Cozic | 95% &lt;img src=&quot;https://joplinapp.org/images/flags/es/galicia.png&quot; alt=&quot;&quot;&gt; | Galician (Espa√±a) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/gl_ES.po&quot;&gt;gl_ES&lt;/a&gt; | &lt;a href=&quot;mailto:marcoslansgarza@gmail.com&quot;&gt;Marcos Lans&lt;/a&gt; | 39% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/id.png&quot; alt=&quot;&quot;&gt; | Indonesian (Indonesia) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/id_ID.po&quot;&gt;id_ID&lt;/a&gt; | &lt;a href=&quot;mailto:42007357+eresytter@users.noreply.github.com&quot;&gt;eresytter&lt;/a&gt; | 96% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/it.png&quot; alt=&quot;&quot;&gt; | Italiano (Italia) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/it_IT.po&quot;&gt;it_IT&lt;/a&gt; | &lt;a href=&quot;mailto:mailfilledwithspam@gmail.com&quot;&gt;Alessandro Bernardello&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/hu.png&quot; alt=&quot;&quot;&gt; | Magyar (Magyarorsz√°g) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/hu_HU.po&quot;&gt;hu_HU&lt;/a&gt; | &lt;a href=&quot;mailto:mail@szokesandor.hu&quot;&gt;Sz≈ëke S√°ndor&lt;/a&gt; | 91% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/be.png&quot; alt=&quot;&quot;&gt; | Nederlands (Belgi√´,&amp;nbsp;Belgique,&amp;nbsp;Belgien) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/nl_BE.po&quot;&gt;nl_BE&lt;/a&gt; | | 95% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/nl.png&quot; alt=&quot;&quot;&gt; | Nederlands (Nederland) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/nl_NL.po&quot;&gt;nl_NL&lt;/a&gt; | &lt;a href=&quot;mailto:metbril@users.noreply.github.com&quot;&gt;MetBril&lt;/a&gt; | 98% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/no.png&quot; alt=&quot;&quot;&gt; | Norwegian (Norge,&amp;nbsp;Noreg) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/nb_NO.po&quot;&gt;nb_NO&lt;/a&gt; | &lt;a href=&quot;mailto:code@mxe.no&quot;&gt;Mats Estensen&lt;/a&gt; | 78% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ir.png&quot; alt=&quot;&quot;&gt; | Persian | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/fa.po&quot;&gt;fa&lt;/a&gt; | &lt;a href=&quot;mailto:kourox@protonmail.com&quot;&gt;Kourosh Firoozbakht&lt;/a&gt; | 74% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/pl.png&quot; alt=&quot;&quot;&gt; | Polski (Polska) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/pl_PL.po&quot;&gt;pl_PL&lt;/a&gt; | &lt;a href=&quot;mailto:hello.konhi@gmail.com&quot;&gt;konhi&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/br.png&quot; alt=&quot;&quot;&gt; | Portugu√™s (Brasil) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/pt_BR.po&quot;&gt;pt_BR&lt;/a&gt; | &lt;a href=&quot;mailto:nicolas.suzuki@pm.me&quot;&gt;Nicolas Suzuki&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/pt.png&quot; alt=&quot;&quot;&gt; | Portugu√™s (Portugal) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/pt_PT.po&quot;&gt;pt_PT&lt;/a&gt; | &lt;a href=&quot;mailto:dcaveiro@yahoo.com&quot;&gt;Diogo Caveiro&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ro.png&quot; alt=&quot;&quot;&gt; | Rom√¢nƒÉ | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/ro.po&quot;&gt;ro&lt;/a&gt; | &lt;a href=&quot;mailto:cristi.duluta@gmail.com&quot;&gt;Cristi Duluta&lt;/a&gt; | 68% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/si.png&quot; alt=&quot;&quot;&gt; | Slovenian (Slovenija) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/sl_SI.po&quot;&gt;sl_SI&lt;/a&gt; | &lt;a href=&quot;mailto:martin.korelic@protonmail.com&quot;&gt;Martin Koreliƒç&lt;/a&gt; | 99% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/se.png&quot; alt=&quot;&quot;&gt; | Svenska | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/sv.po&quot;&gt;sv&lt;/a&gt; | &lt;a href=&quot;mailto:jonatan@autistici.org&quot;&gt;Jonatan Nyberg&lt;/a&gt; | 63% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/th.png&quot; alt=&quot;&quot;&gt; | Thai (‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/th_TH.po&quot;&gt;th_TH&lt;/a&gt; | | 47% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/vi.png&quot; alt=&quot;&quot;&gt; | Ti·∫øng Vi·ªát | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/vi.po&quot;&gt;vi&lt;/a&gt; | | 75% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/tr.png&quot; alt=&quot;&quot;&gt; | T√ºrk√ße (T√ºrkiye) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/tr_TR.po&quot;&gt;tr_TR&lt;/a&gt; | &lt;a href=&quot;mailto:arda@kilicdagi.com&quot;&gt;Arda Kƒ±lƒ±√ßdaƒüƒ±&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ua.png&quot; alt=&quot;&quot;&gt; | Ukrainian (–£–∫—Ä–∞—ó–Ω–∞) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/uk_UA.po&quot;&gt;uk_UA&lt;/a&gt; | &lt;a href=&quot;mailto:vandreykiv@gmail.com&quot;&gt;Vyacheslav Andreykiv&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/gr.png&quot; alt=&quot;&quot;&gt; | ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ (ŒïŒªŒªŒ¨Œ¥Œ±) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/el_GR.po&quot;&gt;el_GR&lt;/a&gt; | &lt;a href=&quot;mailto:xaris@tuta.io&quot;&gt;Harris Arvanitis&lt;/a&gt; | 85% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ru.png&quot; alt=&quot;&quot;&gt; | –†—É—Å—Å–∫–∏–π (–†–æ—Å—Å–∏—è) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/ru_RU.po&quot;&gt;ru_RU&lt;/a&gt; | &lt;a href=&quot;mailto:thesermanarm@gmail.com&quot;&gt;Sergey Segeda&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/rs.png&quot; alt=&quot;&quot;&gt; | —Å—Ä–ø—Å–∫–∏ —ò–µ–∑–∏–∫ (–°—Ä–±–∏—ò–∞) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/sr_RS.po&quot;&gt;sr_RS&lt;/a&gt; | | 73% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/cn.png&quot; alt=&quot;&quot;&gt; | ‰∏≠Êñá (ÁÆÄ‰Ωì) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/zh_CN.po&quot;&gt;zh_CN&lt;/a&gt; | &lt;a href=&quot;mailto:zyangmath@gmail.com&quot;&gt;Yang Zhang&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/tw.png&quot; alt=&quot;&quot;&gt; | ‰∏≠Êñá (ÁπÅÈ´î) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/zh_TW.po&quot;&gt;zh_TW&lt;/a&gt; | &lt;a href=&quot;mailto:yaozeye@yahoo.co.jp&quot;&gt;Yaoze Ye&lt;/a&gt; | 95% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/jp.png&quot; alt=&quot;&quot;&gt; | Êó•Êú¨Ë™û (Êó•Êú¨) | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/ja_JP.po&quot;&gt;ja_JP&lt;/a&gt; | &lt;a href=&quot;mailto:genneko217@gmail.com&quot;&gt;genneko&lt;/a&gt; | 98% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/kr.png&quot; alt=&quot;&quot;&gt; | ÌïúÍµ≠Ïñ¥ | &lt;a href=&quot;https://github.com/laurent22/joplin/raw/dev/packages/tools/locales/ko.po&quot;&gt;ko&lt;/a&gt; | &lt;a href=&quot;mailto:potatogim@potatogim.net&quot;&gt;Ji-Hyeon Gim&lt;/a&gt; | 97%&lt;/p&gt; 
&lt;!-- LOCALE-TABLE-AUTO-GENERATED --&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;p&gt;Thank you to everyone who‚Äôve contributed to Joplin‚Äôs source code!&lt;/p&gt; 
&lt;!-- CONTRIBUTORS-TABLE-AUTO-GENERATED --&gt; 
&lt;p&gt;| | | | | | | :‚Äî: | :‚Äî: | :‚Äî: | :‚Äî: | :‚Äî: | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1285584?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/laurent22&quot;&gt;laurent22&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/223439?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tessus&quot;&gt;tessus&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1732810?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/mic704b&quot;&gt;mic704b&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/2179547?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/CalebJohn&quot;&gt;CalebJohn&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/3542031?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/PackElend&quot;&gt;PackElend&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/4553672?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tanrax&quot;&gt;tanrax&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/8701534?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rtmkrlv&quot;&gt;rtmkrlv&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/10997189?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/fmrtn&quot;&gt;fmrtn&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/29672555?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/genneko&quot;&gt;genneko&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/6979755?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/devonzuegel&quot;&gt;devonzuegel&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/16101778?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/gabcoh&quot;&gt;gabcoh&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/10927304?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/matsest&quot;&gt;matsest&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/6319051?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/abonte&quot;&gt;abonte&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1685517?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Abijeet&quot;&gt;Abijeet&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/27751740?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ishantgupta777&quot;&gt;ishantgupta777&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/208212?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/foxmask&quot;&gt;foxmask&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/6557454?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/innocuo&quot;&gt;innocuo&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/26695184?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/anjulalk&quot;&gt;anjulalk&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/44024553?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rabeehrz&quot;&gt;rabeehrz&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/35633575?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/coderrsid&quot;&gt;coderrsid&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/4237724?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/alexdevero&quot;&gt;alexdevero&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/35904727?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Runo-saduwa&quot;&gt;Runo-saduwa&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/5365582?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/marcosvega91&quot;&gt;marcosvega91&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/37639389?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/petrz12&quot;&gt;petrz12&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/3194829?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/moltenform&quot;&gt;moltenform&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/5199995?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/zuphilip&quot;&gt;zuphilip&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/1904967?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/readingsnail&quot;&gt;readingsnail&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/3985557?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/XarisA&quot;&gt;XarisA&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/4245227?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/zblesk&quot;&gt;zblesk&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/31567272?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/0ndrey&quot;&gt;0ndrey&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/12906090?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/amitsin6h&quot;&gt;amitsin6h&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/23281486?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/martonpaulo&quot;&gt;martonpaulo&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/4497566?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rccavalcanti&quot;&gt;rccavalcanti&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/54268438?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Rahulm2310&quot;&gt;Rahulm2310&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/559346?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/metbril&quot;&gt;metbril&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1540054?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ShaneKilkelly&quot;&gt;ShaneKilkelly&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/6734573?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/stweil&quot;&gt;stweil&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/937861?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/archont00&quot;&gt;archont00&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/32770029?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/bradmcl&quot;&gt;bradmcl&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/22592201?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tfinnberg&quot;&gt;tfinnberg&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/3870964?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/marcushill&quot;&gt;marcushill&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/102242?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/nathanleiby&quot;&gt;nathanleiby&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/226708?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/RaphaelKimmig&quot;&gt;RaphaelKimmig&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/17768566?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/RenatoXSR&quot;&gt;RenatoXSR&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/36303913?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/sensor-freak&quot;&gt;sensor-freak&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/2063957?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Ardakilic&quot;&gt;Ardakilic&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/21161146?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/BartBucknill&quot;&gt;BartBucknill&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/2494769?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/mrwulf&quot;&gt;mrwulf&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/560571?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/chrisb86&quot;&gt;chrisb86&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/1686759?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/chrmoritz&quot;&gt;chrmoritz&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/5001259?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ethan42411&quot;&gt;ethan42411&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/2733783?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/JOJ0&quot;&gt;JOJ0&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/3140223?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/jdrobertso&quot;&gt;jdrobertso&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/339645?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/jmontane&quot;&gt;jmontane&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/4168339?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/solariz&quot;&gt;solariz&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/390889?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/mmahmoudian&quot;&gt;mmahmoudian&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/25288?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/maicki&quot;&gt;maicki&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/2136373?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/mjjzf&quot;&gt;mjjzf&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/30305957?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/naviji&quot;&gt;naviji&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/27608187?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rt-oliveira&quot;&gt;rt-oliveira&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/54576074?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Rishgod&quot;&gt;Rishgod&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/2486806?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/sebastienjust&quot;&gt;sebastienjust&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/28362310?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/sealch&quot;&gt;sealch&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/34258070?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/StarFang208&quot;&gt;StarFang208&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1782292?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/SubodhDahal&quot;&gt;SubodhDahal&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/5912371?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/TobiasDev&quot;&gt;TobiasDev&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/692072?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/conyx&quot;&gt;conyx&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/5730052?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/vsimkus&quot;&gt;vsimkus&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/4079047?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Zorbeyd&quot;&gt;Zorbeyd&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/5077221?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/axq&quot;&gt;axq&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/8808502?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/barbowza&quot;&gt;barbowza&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/4316805?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/lightray22&quot;&gt;lightray22&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/17399340?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/pf-siedler&quot;&gt;pf-siedler&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/17232523?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ruuti&quot;&gt;ruuti&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/23638148?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/s1nceri7y&quot;&gt;s1nceri7y&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/10117386?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/kornava&quot;&gt;kornava&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/7471938?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ShuiHuo&quot;&gt;ShuiHuo&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/11596277?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ikunya&quot;&gt;ikunya&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/59133880?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/bedwardly-down&quot;&gt;bedwardly-down&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/47456195?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/hexclover&quot;&gt;hexclover&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/45535789?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/2jaeyeol&quot;&gt;2jaeyeol&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/15862474?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/aaronxn&quot;&gt;aaronxn&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/3660978?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/alanfortlink&quot;&gt;alanfortlink&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/14836659?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/apankratov&quot;&gt;apankratov&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/7045739?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/teterkin&quot;&gt;teterkin&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/41290751?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/serenitatis&quot;&gt;serenitatis&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/4408379?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/lex111&quot;&gt;lex111&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/5417051?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tekdel&quot;&gt;tekdel&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/498326?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Shaxine&quot;&gt;Shaxine&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/201215?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/assimd&quot;&gt;assimd&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/42698687?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/baymoe&quot;&gt;baymoe&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/7034200?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/bimlas&quot;&gt;bimlas&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/16287077?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/carlbordum&quot;&gt;carlbordum&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/105843?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/chaifeng&quot;&gt;chaifeng&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/549349?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/charles-e&quot;&gt;charles-e&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/2348463?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Techwolf12&quot;&gt;Techwolf12&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/2282880?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/cloudtrends&quot;&gt;cloudtrends&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1044056?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/daniellandau&quot;&gt;daniellandau&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/26189247?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/daukadolt&quot;&gt;daukadolt&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/28535750?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/NeverMendel&quot;&gt;NeverMendel&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/11378282?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/diego-betto&quot;&gt;diego-betto&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/215270?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/erdody&quot;&gt;erdody&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/10371667?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/domgoodwin&quot;&gt;domgoodwin&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/72066?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/b4mboo&quot;&gt;b4mboo&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/5131923?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/donbowman&quot;&gt;donbowman&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/47756?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/dflock&quot;&gt;dflock&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/7990534?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/drobilica&quot;&gt;drobilica&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/1962738?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/einverne&quot;&gt;einverne&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/628474?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Atalanttore&quot;&gt;Atalanttore&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/16492558?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/eodeluga&quot;&gt;eodeluga&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/3057302?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/fer22f&quot;&gt;fer22f&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/43272148?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/fpindado&quot;&gt;fpindado&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/1714374?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/FleischKarussel&quot;&gt;FleischKarussel&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/18525376?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/talkdirty&quot;&gt;talkdirty&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/6190183?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/gmag11&quot;&gt;gmag11&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/24235344?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/guiemi&quot;&gt;guiemi&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/2257024?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/gusbemacbe&quot;&gt;gusbemacbe&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/18524580?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Fvbor&quot;&gt;Fvbor&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/22606250?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/bennetthanna&quot;&gt;bennetthanna&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/3379379?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/sczhg&quot;&gt;sczhg&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/1716229?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Vistaus&quot;&gt;Vistaus&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/19862172?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/iahmedbacha&quot;&gt;iahmedbacha&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1533624?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/IrvinDominin&quot;&gt;IrvinDominin&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/33200024?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ishammahajan&quot;&gt;ishammahajan&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/19985741?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/JRaiden16&quot;&gt;JRaiden16&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/11466782?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/jacobherrington&quot;&gt;jacobherrington&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/9365179?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/jamesadjinwa&quot;&gt;jamesadjinwa&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/4995433?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/jaredcrowe&quot;&gt;jaredcrowe&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/4374338?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/potatogim&quot;&gt;potatogim&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/163555?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/JoelRSimpson&quot;&gt;JoelRSimpson&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/6965062?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/joeltaylor&quot;&gt;joeltaylor&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/242107?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/exic&quot;&gt;exic&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/23194385?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/jony0008&quot;&gt;jony0008&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/6048003?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/joybinchen&quot;&gt;joybinchen&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/1560189?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/y-usuzumi&quot;&gt;y-usuzumi&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1660460?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/xuhcc&quot;&gt;xuhcc&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/16933735?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/kirtanprht&quot;&gt;kirtanprht&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/7824233?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/kklas&quot;&gt;kklas&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/8622992?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/xmlangel&quot;&gt;xmlangel&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/1055100?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/troilus&quot;&gt;troilus&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/50335724?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Lorinson&quot;&gt;Lorinson&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/2599210?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/lboullo0&quot;&gt;lboullo0&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/1562062?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/dbinary&quot;&gt;dbinary&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/5699725?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/mvonmaltitz&quot;&gt;mvonmaltitz&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/11036464?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/mlkood&quot;&gt;mlkood&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/5788516?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Marmo&quot;&gt;Marmo&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/640949?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/freaktechnik&quot;&gt;freaktechnik&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/12831489?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/mgroth0&quot;&gt;mgroth0&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/21796?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/silentmatt&quot;&gt;silentmatt&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/51273874?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/MichipX&quot;&gt;MichipX&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/53177864?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/MrTraduttore&quot;&gt;MrTraduttore&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/9076687?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/NJannasch&quot;&gt;NJannasch&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/12369770?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Ouvill&quot;&gt;Ouvill&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/43815417?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/shorty2380&quot;&gt;shorty2380&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/19418601?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Rakleed&quot;&gt;Rakleed&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/6306608?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Diadlo&quot;&gt;Diadlo&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/13197246?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/R-L-T-Y&quot;&gt;R-L-T-Y&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/42652941?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rajprakash00&quot;&gt;rajprakash00&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/54888685?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/RedDocMD&quot;&gt;RedDocMD&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/17312341?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/reinhart1010&quot;&gt;reinhart1010&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/744655?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ruzaq&quot;&gt;ruzaq&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/19328605?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/SamuelBlickle&quot;&gt;SamuelBlickle&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/1776?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/bronson&quot;&gt;bronson&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/24606935?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/semperor&quot;&gt;semperor&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/7091080?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/sinkuu&quot;&gt;sinkuu&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/9937486?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/SFoskitt&quot;&gt;SFoskitt&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/505011?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/kcrt&quot;&gt;kcrt&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/538584?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/xissy&quot;&gt;xissy&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/466122?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Tekki&quot;&gt;Tekki&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/21969426?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/TheoDutch&quot;&gt;TheoDutch&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/8731922?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tbroadley&quot;&gt;tbroadley&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/114300?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Kriechi&quot;&gt;Kriechi&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/3457339?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tkilaker&quot;&gt;tkilaker&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/4201229?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tcyrus&quot;&gt;tcyrus&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/834914?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tobias-grasse&quot;&gt;tobias-grasse&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/6691273?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/strobeltobias&quot;&gt;strobeltobias&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/70296?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tbergeron&quot;&gt;tbergeron&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/10265443?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/Ullas-Aithal&quot;&gt;Ullas-Aithal&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/6104498?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/MyTheValentinus&quot;&gt;MyTheValentinus&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/26511487?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/WisdomCode&quot;&gt;WisdomCode&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/1921957?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/xsak&quot;&gt;xsak&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/11031696?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ymitsos&quot;&gt;ymitsos&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/29891001?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/jyuvaraj03&quot;&gt;jyuvaraj03&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/15380913?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/kowalskidev&quot;&gt;kowalskidev&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/63324960?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/abolishallprivateproperty&quot;&gt;abolishallprivateproperty&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/11336076?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/aerotog&quot;&gt;aerotog&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/49116134?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/anihm136&quot;&gt;anihm136&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/35600612?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/boring10&quot;&gt;boring10&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/35413451?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/chenlhlinux&quot;&gt;chenlhlinux&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/30935096?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/cybertramp&quot;&gt;cybertramp&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/9694906?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/delta-emil&quot;&gt;delta-emil&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/926263?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/doc75&quot;&gt;doc75&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/2903013?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/ebayer&quot;&gt;ebayer&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/701050?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/espinosa&quot;&gt;espinosa&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/18619090?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/exponentactivity&quot;&gt;exponentactivity&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/16708935?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/exprez135&quot;&gt;exprez135&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/9768112?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/fab4x&quot;&gt;fab4x&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/47755037?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/fabianski7&quot;&gt;fabianski7&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/14201321?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rasperepodvipodvert&quot;&gt;rasperepodvipodvert&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/748808?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/gasolin&quot;&gt;gasolin&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/47191051?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/githubaccount073&quot;&gt;githubaccount073&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/11388094?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/hydrandt&quot;&gt;hydrandt&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/557540?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/jabdoa2&quot;&gt;jabdoa2&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/53862536?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/johanvanheusden&quot;&gt;johanvanheusden&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/54991735?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/krzysiekwie&quot;&gt;krzysiekwie&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/12849008?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/lighthousebulb&quot;&gt;lighthousebulb&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/4140247?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/luzpaz&quot;&gt;luzpaz&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/30428258?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/nmiquan&quot;&gt;nmiquan&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/31123054?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/nullpointer666&quot;&gt;nullpointer666&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/2979926?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/oscaretu&quot;&gt;oscaretu&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/36965591?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/daehruoydeef&quot;&gt;daehruoydeef&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/42961947?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/pensierocrea&quot;&gt;pensierocrea&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/10206967?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rhtenhove&quot;&gt;rhtenhove&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/16728217?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rikanotank1&quot;&gt;rikanotank1&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/51550769?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/rnbastos&quot;&gt;rnbastos&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/14062932?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/simonsan&quot;&gt;simonsan&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/5004545?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/stellarpower&quot;&gt;stellarpower&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/12995773?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/sumomo-99&quot;&gt;sumomo-99&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/6908872?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/taw00&quot;&gt;taw00&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/10956653?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/tcassaert&quot;&gt;tcassaert&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/46327531?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/vicoutorama&quot;&gt;vicoutorama&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/2216902?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/xcffl&quot;&gt;xcffl&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars2.githubusercontent.com/u/37692927?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/zaoyifan&quot;&gt;zaoyifan&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars3.githubusercontent.com/u/55245068?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/zen-quo&quot;&gt;zen-quo&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/25315?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/xcession&quot;&gt;xcession&lt;/a&gt; | | &lt;img width=&quot;50&quot; src=&quot;https://avatars0.githubusercontent.com/u/34542665?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/paventyang&quot;&gt;paventyang&lt;/a&gt; | &lt;img width=&quot;50&quot; src=&quot;https://avatars1.githubusercontent.com/u/1308646?v=4&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://api.github.com/users/zhangmx&quot;&gt;zhangmx&lt;/a&gt; | | | |&lt;/p&gt; 
&lt;!-- CONTRIBUTORS-TABLE-AUTO-GENERATED --&gt; 
&lt;h1&gt;Known bugs&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Resources larger than 10 MB are not currently supported on mobile as they can crash the application.&lt;/li&gt; 
 &lt;li&gt;Non-alphabetical characters such as Chinese or Arabic might create glitches in the terminal on Windows. This is a limitation of the current Windows console.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2016-2020 Laurent Cozic&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‚ÄúSoftware‚Äù), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED ‚ÄúAS IS‚Äù, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;üíØ Materials to help you rock your next coding interview&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/website/static/img/logo.svg?sanitize=true&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready to Code&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;em&gt;Credits: &lt;a href=&quot;https://dribbble.com/shots/3831443-Tech-Interview-Handbook&quot;&gt;Illustration&lt;/a&gt; by &lt;a href=&quot;https://dribbble.com/leftaligned&quot;&gt;@leftaligned&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/&quot;&gt;Read on the website&lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h3 align=&quot;center&quot;&gt; Black Lives Matter. &lt;a href=&quot;https://support.eji.org/give/153413/#!/donation/checkout&quot; target=&quot;_blank&quot;&gt;Support the Equal Justice Initiative&lt;/a&gt; &lt;/h3&gt; 
&lt;hr&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;Carefully curated content to help you ace your next technical interview, with a focus on algorithms. System design questions are in-progress. Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/coding-round-overview&quot;&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/cheatsheet&quot;&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do‚Äôs and Don‚Äôts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/algorithms/algorithms-introduction&quot;&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;‚ÄúFront-end Job Interview Questions‚Äù answers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/interview-formats&quot;&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/behavioral-questions&quot;&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/questions-to-ask&quot;&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/resume&quot;&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do‚Äôs and Don‚Äôts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;em&gt;practical&lt;/em&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;strong&gt;üí∞ Looking for a job? Sign up for free with &lt;a href=&quot;https://triplebyte.com/a/PJaJNpO/tihg&quot;&gt;Triplebyte&lt;/a&gt; to efficiently interview with top tech companies! üí∞&lt;/strong&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. üòé&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front end-related content have been extracted out into a separate repository - &lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://github.com/facebook/docusaurus&quot;&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href=&quot;https://yangshun.github.io/tech-interview-handbook/&quot;&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Online one-click setup for contributing&lt;/h3&gt; 
&lt;p&gt;You can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the tech-interview-handbook repo.&lt;/li&gt; 
 &lt;li&gt;install the dependencies.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So that you can start straight away.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! üôè [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun&quot;&gt;Yangshun Tay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louietyj&quot;&gt;Louie Tan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, cross-browser, general purpose 3D library. The current builds only include a WebGL renderer but WebGPU (experimental), SVG and CSS3D renderers are also available in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; ‚Äî &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; ‚Äî &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; ‚Äî &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; ‚Äî &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; ‚Äî &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; ‚Äî &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/enQtMzYxMzczODM2OTgxLTQ1YmY4YTQxOTFjNDAzYmQ4NjU2YzRhNzliY2RiNDEyYjU2MjhhODgyYWQ5Y2MyZTU3MWNkOGVmOGRhOTQzYTk&quot;&gt;Slack&lt;/a&gt; ‚Äî &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/zdjankqw/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don‚Äôt need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ix64/unlock-music</title>
      <link>https://github.com/ix64/unlock-music</link>
      <description>&lt;p&gt;Unlock encrypted music file in browser. Âú®ÊµèËßàÂô®‰∏≠Ëß£ÈîÅÂä†ÂØÜÁöÑÈü≥‰πêÊñá‰ª∂„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unlock Music Èü≥‰πêËß£ÈîÅ&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Âú®ÊµèËßàÂô®‰∏≠Ëß£ÈîÅÂä†ÂØÜÁöÑÈü≥‰πêÊñá‰ª∂„ÄÇ Unlock encrypted music file in the browser.&lt;/li&gt; 
 &lt;li&gt;unlock-musicÈ°πÁõÆÊòØ‰ª•Â≠¶‰π†ÂíåÊäÄÊúØÁ†îÁ©∂ÁöÑÂàùË°∑ÂàõÂª∫ÁöÑÔºå‰øÆÊîπ„ÄÅÂÜçÂàÜÂèëÊó∂ËØ∑ÈÅµÂæ™&lt;a href=&quot;https://github.com/ix64/unlock-music/raw/master/LICENSE&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Unlock MusicÁöÑCLIÁâàÊú¨Ê≠£Âú®ÂºÄÂèë‰∏≠„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Êàë‰ª¨Êñ∞Âª∫‰∫ÜTelegramÁæ§ÁªÑÔºåÊ¨¢ËøéÂä†ÂÖ•ÔºÅ&lt;a href=&quot;https://t.me/unlock_music_chat&quot;&gt;https://t.me/unlock_music_chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/unlock-music/cli&quot;&gt;CLIÁâàÊú¨ Alpha&lt;/a&gt; Â§ßÊâπÈáèËΩ¨Êç¢Âª∫ËÆÆ‰ΩøÁî®CLIÁâàÊú¨&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ix64/unlock-music/wiki/%E5%92%8CUnlockMusic%E7%9B%B8%E5%85%B3%E7%9A%84%E9%A1%B9%E7%9B%AE&quot;&gt;Áõ∏ÂÖ≥ÁöÑÂÖ∂‰ªñÈ°πÁõÆ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/ix64/unlock-music/workflows/Test%20Build/badge.svg?sanitize=true&quot; alt=&quot;Test Build&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/ix64/unlock-music/total&quot; alt=&quot;GitHub releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/docker/pulls/ix64/unlock-music&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;ÁâπÊÄß&lt;/h2&gt; 
&lt;h3&gt;ÊîØÊåÅÁöÑÊ†ºÂºè&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] QQÈü≥‰πê (.qmc0/.qmc2/.qmc3/.qmcflac/.qmcogg/&lt;a href=&quot;https://github.com/ix64/unlock-music/issues/9&quot;&gt;.tkm&lt;/a&gt;) 
  &lt;ul&gt; 
   &lt;li&gt;[x] ÂÜôÂÖ•Â∞ÅÈù¢ÂõæÁâá&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[x] MooÈü≥‰πêÊ†ºÂºè (&lt;a href=&quot;https://github.com/ix64/unlock-music/issues/11&quot;&gt;.bkcmp3/.bkcflac&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[x] QQÈü≥‰πêTmÊ†ºÂºè (.tm0/.tm2/.tm3/.tm6)&lt;/li&gt; 
 &lt;li&gt;[x] QQÈü≥‰πêÊñ∞Ê†ºÂºè (ÂÆûÈ™åÊÄßÊîØÊåÅ) 
  &lt;ul&gt; 
   &lt;li&gt;[x] .mflac&lt;/li&gt; 
   &lt;li&gt;[x] &lt;a href=&quot;https://github.com/ix64/unlock-music/issues/3&quot;&gt;.mgg&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[x] ÁΩëÊòì‰∫ëÈü≥‰πêÊ†ºÂºè (.ncm) 
  &lt;ul&gt; 
   &lt;li&gt;[x] Ë°•ÂÖ®ncmÁöÑID3/FlacMeta‰ø°ÊÅØ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[x] ËôæÁ±≥Èü≥‰πêÊ†ºÂºè (.xm) (ÊµãËØïÈò∂ÊÆµ)&lt;/li&gt; 
 &lt;li&gt;[x] ÈÖ∑ÊàëÈü≥‰πêÊ†ºÂºè (.kwm) (ÊµãËØïÈò∂ÊÆµ)&lt;/li&gt; 
 &lt;li&gt;[x] ÈÖ∑ÁãóÈü≥‰πêÊ†ºÂºè ( .kgm) (&lt;a href=&quot;https://github.com/ix64/unlock-music/wiki/%E5%85%B6%E4%BB%96%E9%9F%B3%E4%B9%90%E6%A0%BC%E5%BC%8F%E5%B7%A5%E5%85%B7#%E9%85%B7%E7%8B%97%E9%9F%B3%E4%B9%90-kgmvpr%E8%A7%A3%E9%94%81%E5%B7%A5%E5%85%B7&quot;&gt;CLIÁâàÊú¨&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂÖ∂‰ªñÁâπÊÄß&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Âú®ÊµèËßàÂô®‰∏≠Ëß£ÈîÅ&lt;/li&gt; 
 &lt;li&gt;[x] ÊãñÊîæÊñá‰ª∂&lt;/li&gt; 
 &lt;li&gt;[x] Âú®Á∫øÊí≠Êîæ&lt;/li&gt; 
 &lt;li&gt;[x] ÊâπÈáèËß£ÈîÅ&lt;/li&gt; 
 &lt;li&gt;[x] Ê∏êËøõÂºèWebÂ∫îÁî®&lt;/li&gt; 
 &lt;li&gt;[x] Â§öÁ∫øÁ®ã&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/h2&gt; 
&lt;h3&gt;ÂÆâË£ÖÊµèËßàÂô®Êâ©Â±ï&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/gldlhhhmienbhlpkfanjpmffdjblmegd&quot;&gt;&lt;img src=&quot;https://storage.googleapis.com/chrome-gcs-uploader.appspot.com/image/WlD8wC6g8khYWPJUsQceQkhXSlv1/UV4C4ybeBTsZt43U4xis.png&quot; alt=&quot;Chrome Web Store&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/ggafoipegcmodfhakdkalpdpcdkiljmd&quot;&gt;&lt;img src=&quot;https://developer.microsoft.com/en-us/store/badges/images/Chinese_Simplified_get-it-from-MS.png&quot; height=&quot;60&quot; alt=&quot;Microsoft Edge Addons&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://addons.mozilla.org/zh-CN/firefox/addon/unlock-music/&quot;&gt;&lt;img src=&quot;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/addons/files/2015/11/get-the-addon.png&quot; alt=&quot;Firefox Browser Addons&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;‰ΩøÁî®Â∑≤ÊûÑÂª∫ÁâàÊú¨&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ªé&lt;a href=&quot;https://github.com/ix64/unlock-music/releases/latest&quot;&gt;GitHub Release&lt;/a&gt;‰∏ãËΩΩÂ∑≤ÊûÑÂª∫ÁöÑÁâàÊú¨ 
  &lt;ul&gt; 
   &lt;li&gt;Êú¨Âú∞‰ΩøÁî®ËØ∑‰∏ãËΩΩ&lt;code&gt;legacyÁâàÊú¨&lt;/code&gt;Ôºà&lt;code&gt;modernÁâàÊú¨&lt;/code&gt;Âè™ËÉΩÈÄöËøá&lt;strong&gt;http/httpsÂçèËÆÆ&lt;/strong&gt;ËÆøÈóÆÔºâ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Ëß£ÂéãÁº©ÂêéÂç≥ÂèØÈÉ®ÁΩ≤ÊàñÊú¨Âú∞‰ΩøÁî®Ôºà&lt;strong&gt;ËØ∑ÂãøÁõ¥Êé•ËøêË°åÊ∫ê‰ª£Á†Å&lt;/strong&gt;Ôºâ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‰ΩøÁî®DockerÈïúÂÉè&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker run --name unlock-music -d -p 8080:80 ix64/unlock-music
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ëá™Ë°åÊûÑÂª∫&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÁéØÂ¢ÉË¶ÅÊ±Ç 
  &lt;ul&gt; 
   &lt;li&gt;nodejs&lt;/li&gt; 
   &lt;li&gt;npm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;Ëé∑ÂèñÈ°πÁõÆÊ∫ê‰ª£Á†ÅÂêéÊâßË°å &lt;code&gt;npm install&lt;/code&gt; ÂÆâË£ÖÁõ∏ÂÖ≥‰æùËµñ&lt;/li&gt; 
 &lt;li&gt;ÊâßË°å &lt;code&gt;npm run build&lt;/code&gt; Âç≥ÂèØËøõË°åÊûÑÂª∫ÔºåÊûÑÂª∫ËæìÂá∫‰∏∫ dist ÁõÆÂΩï&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm run serve&lt;/code&gt; ÂèØÁî®‰∫éÂºÄÂèë&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Â¶ÇÈúÄÊûÑÂª∫ÊµèËßàÂô®Êâ©Â±ïÔºåbuildÂÆåÊàêÂêéËøòÈúÄË¶ÅÊâßË°å&lt;code&gt;npm run make-extension&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>artf/grapesjs</title>
      <link>https://github.com/artf/grapesjs</link>
      <description>&lt;p&gt;Free and Open source Web Builder Framework. Next generation tool for building templates without coding&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;http://grapesjs.com&quot;&gt;GrapesJS&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/artf/grapesjs&quot;&gt;&lt;img src=&quot;https://travis-ci.org/artf/grapesjs.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/QAbgGXq&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-discord-7289da.svg?sanitize=true&quot; alt=&quot;Chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://cdnjs.com/libraries/grapesjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/cdnjs/v/grapesjs.svg?sanitize=true&quot; alt=&quot;CDNJS&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/grapesjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/grapesjs.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.browserstack.com/automate/public-build/QksxaStYaGI3eE5VMDlPTEh0Z3hYOXEwRWNMc1ZYT0lNbEJxMWdOZWFDZz0tLWlqcFVWb05PMmlQMmU3emFIZkFNWVE9PQ==--e89345be5e303d515276e3accd6f1316dfa857ab&quot;&gt;&lt;img src=&quot;https://www.browserstack.com/automate/badge.svg?badge_key=QksxaStYaGI3eE5VMDlPTEh0Z3hYOXEwRWNMc1ZYT0lNbEJxMWdOZWFDZz0tLWlqcFVWb05PMmlQMmU3emFIZkFNWVE9PQ==--e89345be5e303d515276e3accd6f1316dfa857ab&quot; alt=&quot;BrowserStack Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://grapesjs.com/img/grapesjs-front-page-m.jpg&quot; alt=&quot;GrapesJS&quot; width=&quot;500&quot; align=&quot;center&quot;&gt;&lt;/p&gt; 
&lt;p&gt;GrapesJS is a free and open source Web Builder Framework which helps building HTML templates, faster and easily, to be delivered in sites, newsletters or mobile apps. Mainly, GrapesJS was designed to be used inside a &lt;a href=&quot;https://it.wikipedia.org/wiki/Content_management_system&quot;&gt;CMS&lt;/a&gt; to speed up the creation of dynamic templates. To better understand this concept check the image below&lt;/p&gt; 
&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://grapesjs.com/img/gjs-concept.png&quot; alt=&quot;GrapesJS - Style Manager&quot; height=&quot;400&quot; align=&quot;center&quot;&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;Generally any ‚Äòtemplate system‚Äô, that you‚Äôd find in various applications like CMS, is composed by the &lt;strong&gt;structure&lt;/strong&gt; (HTML), &lt;strong&gt;style&lt;/strong&gt; (CSS) and &lt;strong&gt;variables&lt;/strong&gt;, which are then replaced with other templates and contents on server-side and rendered on client.&lt;/p&gt; 
&lt;p&gt;This demos show examples of what is possible to achieve: Webpage Demo - http://grapesjs.com/demo.html Newsletter Demo - http://grapesjs.com/demo-newsletter-editor.html&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#download&quot;&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#usage&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#development&quot;&gt;Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#api&quot;&gt;API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs/releases&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs/raw/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/artf/grapesjs/dev/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;| Blocks | Style Manager | Layer Manager | |‚Äì|‚Äì|‚Äì| |&lt;img src=&quot;http://grapesjs.com/img/sc-grapesjs-blocks-prp.jpg&quot; alt=&quot;GrapesJS - Block Manager&quot; height=&quot;400&quot; align=&quot;center&quot;&gt;|&lt;img src=&quot;http://grapesjs.com/img/sc-grapesjs-style-2.jpg&quot; alt=&quot;GrapesJS - Style Manager&quot; height=&quot;400&quot; align=&quot;center&quot;&gt;|&lt;img src=&quot;http://grapesjs.com/img/sc-grapesjs-layers-2.jpg&quot; alt=&quot;GrapesJS - Layer Manager&quot; height=&quot;400&quot; align=&quot;center&quot;&gt;|&lt;/p&gt; 
&lt;p&gt;| Code Viewer | Asset Manager | |‚Äì|‚Äì| |&lt;img src=&quot;http://grapesjs.com/img/sc-grapesjs-code.jpg&quot; alt=&quot;GrapesJS - Code Viewer&quot; height=&quot;300&quot; align=&quot;center&quot;&gt;|&lt;img src=&quot;http://grapesjs.com/img/sc-grapesjs-assets-1.jpg&quot; alt=&quot;GrapesJS - Asset Manager&quot; height=&quot;250&quot; align=&quot;center&quot;&gt;|&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Local and remote storage&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Default built-in commands (basically for creating and managing different components)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;CDNs 
  &lt;ul&gt; 
   &lt;li&gt;UNPKG (resolves to the latest version) 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;https://unpkg.com/grapesjs&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;https://unpkg.com/grapesjs/dist/css/grapes.min.css&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;CDNJS (replace &lt;code&gt;X.X.X&lt;/code&gt; with the current version) 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;https://cdnjs.cloudflare.com/ajax/libs/grapesjs/X.X.X/grapes.min.js&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;https://cdnjs.cloudflare.com/ajax/libs/grapesjs/X.X.X/css/grapes.min.css&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;NPM 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;npm i grapesjs&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;GIT 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;git clone https://github.com/artf/grapesjs.git&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the development purpose you should follow instructions below.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/grapes.min.css&quot;&amp;gt;
&amp;lt;script src=&quot;path/to/grapes.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div id=&quot;gjs&quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
  var editor = grapesjs.init({
      container : &#39;#gjs&#39;,
      components: &#39;&amp;lt;div class=&quot;txt-red&quot;&amp;gt;Hello world!&amp;lt;/div&amp;gt;&#39;,
      style: &#39;.txt-red{color: red}&#39;,
  });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You could also grab the content directly from the element with &lt;code&gt;fromElement&lt;/code&gt; property&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&quot;gjs&quot;&amp;gt;
  &amp;lt;div class=&quot;txt-red&quot;&amp;gt;Hello world!&amp;lt;/div&amp;gt;
  &amp;lt;style&amp;gt;.txt-red{color: red}&amp;lt;/style&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
  var editor = grapesjs.init({
      container : &#39;#gjs&#39;,
      fromElement: true,
  });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more practical example I suggest to look up the code inside this demo: http://grapesjs.com/demo.html&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;GrapesJS uses &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;Webpack&lt;/a&gt; as a module bundler and &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; as a compiler.&lt;/p&gt; 
&lt;p&gt;Clone the repository and install all the necessary dependencies&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ git clone https://github.com/artf/grapesjs.git
$ cd grapesjs
$ npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start the dev server&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the development server is started you should be able to reach the demo page (eg. &lt;code&gt;http://localhost:8080&lt;/code&gt;)&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check the getting started guide here: &lt;a href=&quot;https://grapesjs.com/docs/&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;API References could be found here: &lt;a href=&quot;https://grapesjs.com/docs/api/&quot;&gt;API-Reference&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-plugin-export&quot;&gt;grapesjs-plugin-export&lt;/a&gt; - Export GrapesJS templates in a zip archive&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-plugin-filestack&quot;&gt;grapesjs-plugin-filestack&lt;/a&gt; - Add Filestack uploader in Asset Manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-plugin-ckeditor&quot;&gt;grapesjs-plugin-ckeditor&lt;/a&gt; - Replaces the built-in RTE with CKEditor&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-aviary&quot;&gt;grapesjs-aviary&lt;/a&gt; - Add the Aviary Image Editor (dismissed, use the plugin below instead)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-tui-image-editor&quot;&gt;grapesjs-tui-image-editor&lt;/a&gt; - GrapesJS TOAST UI Image Editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-blocks-basic&quot;&gt;grapesjs-blocks-basic&lt;/a&gt; - Basic set of blocks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-plugin-forms&quot;&gt;grapesjs-plugin-forms&lt;/a&gt; - Set of form components and blocks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-navbar&quot;&gt;grapesjs-navbar&lt;/a&gt; - Simple navbar component&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-component-countdown&quot;&gt;grapesjs-component-countdown&lt;/a&gt; - Simple countdown component&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-style-gradient&quot;&gt;grapesjs-style-gradient&lt;/a&gt; - Add &lt;code&gt;gradient&lt;/code&gt; type input to the Style Manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-style-filter&quot;&gt;grapesjs-style-filter&lt;/a&gt; - Add &lt;code&gt;filter&lt;/code&gt; type input to the Style Manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-style-bg&quot;&gt;grapesjs-style-bg&lt;/a&gt; - Full-stack background style property type, with the possibility to add images, colors, and gradients&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-blocks-flexbox&quot;&gt;grapesjs-blocks-flexbox&lt;/a&gt; - Add the flexbox block&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-lory-slider&quot;&gt;grapesjs-lory-slider&lt;/a&gt; - Slider component by using &lt;a href=&quot;https://github.com/meandmax/lory&quot;&gt;lory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-tabs&quot;&gt;grapesjs-tabs&lt;/a&gt; - Simple tabs component&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-tooltip&quot;&gt;grapesjs-tooltip&lt;/a&gt; - Simple, CSS only, tooltip component for GrapesJS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-custom-code&quot;&gt;grapesjs-custom-code&lt;/a&gt; - Embed custom code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-touch&quot;&gt;grapesjs-touch&lt;/a&gt; - Enable touch support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-indexeddb&quot;&gt;grapesjs-indexeddb&lt;/a&gt; - Storage wrapper for IndexedDB&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-firestore&quot;&gt;grapesjs-firestore&lt;/a&gt; - Storage wrapper for &lt;a href=&quot;https://firebase.google.com/docs/firestore&quot;&gt;Cloud Firestore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-parser-postcss&quot;&gt;grapesjs-parser-postcss&lt;/a&gt; - Custom CSS parser for GrapesJS by using &lt;a href=&quot;https://github.com/postcss/postcss&quot;&gt;PostCSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-typed&quot;&gt;grapesjs-typed&lt;/a&gt; - Typed component made by wrapping Typed.js library&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Presets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-preset-webpage&quot;&gt;grapesjs-preset-webpage&lt;/a&gt; - Webpage Builder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-preset-newsletter&quot;&gt;grapesjs-preset-newsletter&lt;/a&gt; - Newsletter Builder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artf/grapesjs-mjml&quot;&gt;grapesjs-mjml&lt;/a&gt; - Newsletter Builder with MJML components&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Find out more about plugins here: &lt;a href=&quot;https://grapesjs.com/docs/modules/Plugins.html&quot;&gt;Creating plugins&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like the project support it with a donation of your choice or become a backer/sponsor via &lt;a href=&quot;https://opencollective.com/grapesjs&quot;&gt;Open Collective&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://paypal.me/grapesjs&quot;&gt;&lt;img src=&quot;http://grapesjs.com/img/ppme.png&quot; alt=&quot;PayPalMe&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://commerce.coinbase.com/checkout/fc90b940-558d-408b-a166-28a823c98173&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/11614725/52977952-87235f80-33cf-11e9-9607-7a9a354e1155.png&quot; alt=&quot;Bitcoin&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/0/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/1/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/2/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/3/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/4/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/5/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/6/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/7/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/8/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/sponsors/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/sponsors/9/avatar&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/grapesjs/backers/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/0/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/1/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/2/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/3/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/4/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/5/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/6/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/7/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/8/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/9/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/10/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/10/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/11/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/11/avatar&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/grapesjs/backers/12/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/grapesjs/backers/12/avatar&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/11614725/39406324-4ef89c40-4bb5-11e8-809a-113d9432e5a5.png&quot; alt=&quot;BrowserStack&quot;&gt;&lt;/a&gt;&lt;br&gt; Thanks to &lt;a href=&quot;https://www.browserstack.com&quot;&gt;BrowserStack&lt;/a&gt; for providing us browser testing services&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;BSD 3-clause&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alpinejs/alpine</title>
      <link>https://github.com/alpinejs/alpine</link>
      <description>&lt;p&gt;A rugged, minimal framework for composing JavaScript behavior in your markup.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Alpine.js&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/bundlephobia/minzip/alpinejs&quot; alt=&quot;npm bundle size&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/alpinejs&quot; alt=&quot;npm version&quot;&gt; &lt;a href=&quot;https://alpinejs.codewithhugo.com/chat/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&quot; alt=&quot;Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Alpine.js offers you the reactive and declarative nature of big frameworks like Vue or React at a much lower cost.&lt;/p&gt; 
&lt;p&gt;You get to keep your DOM, and sprinkle in behavior as you see fit.&lt;/p&gt; 
&lt;p&gt;Think of it like &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind&lt;/a&gt; for JavaScript.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: This tool‚Äôs syntax is almost entirely borrowed from &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; (and by extension &lt;a href=&quot;https://angularjs.org/&quot;&gt;Angular&lt;/a&gt;). I am forever grateful for the gift they are to the web.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Translated documentation&lt;/h2&gt; 
&lt;p&gt;| Language | Link for documentation | | ‚Äî | ‚Äî | | Arabic | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.ar.md&quot;&gt;&lt;strong&gt;ÿßŸÑÿ™Ÿàÿ´ŸäŸÇ ÿ®ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&lt;/strong&gt;&lt;/a&gt; | | Chinese Simplified | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.zh-CN.md&quot;&gt;&lt;strong&gt;ÁÆÄ‰Ωì‰∏≠ÊñáÊñáÊ°£&lt;/strong&gt;&lt;/a&gt; | | Chinese Traditional | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.zh-TW.md&quot;&gt;&lt;strong&gt;ÁπÅÈ´î‰∏≠ÊñáË™™ÊòéÊñá‰ª∂&lt;/strong&gt;&lt;/a&gt; | | German | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.de.md&quot;&gt;&lt;strong&gt;Dokumentation in Deutsch&lt;/strong&gt;&lt;/a&gt; | | Indonesian | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.id.md&quot;&gt;&lt;strong&gt;Dokumentasi Bahasa Indonesia&lt;/strong&gt;&lt;/a&gt; | | Japanese | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.ja.md&quot;&gt;&lt;strong&gt;Êó•Êú¨Ë™û„Éâ„Ç≠„É•„É°„É≥„Éà&lt;/strong&gt;&lt;/a&gt; | | Norwegian | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.no.md&quot;&gt;&lt;strong&gt;Dokumentasjon p√• norsk&lt;/strong&gt;&lt;/a&gt; | | Portuguese | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.pt.md&quot;&gt;&lt;strong&gt;Documenta√ß√£o em Portugu√™s&lt;/strong&gt;&lt;/a&gt; | | Russian | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.ru.md&quot;&gt;&lt;strong&gt;–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º&lt;/strong&gt;&lt;/a&gt; | | Spanish | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.es.md&quot;&gt;&lt;strong&gt;Documentaci√≥n en Espa√±ol&lt;/strong&gt;&lt;/a&gt; | | Turkish | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.tr.md&quot;&gt;&lt;strong&gt;T√ºrk√ße Dok√ºmantasyon&lt;/strong&gt;&lt;/a&gt; | | Fran√ßais | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.fr.md&quot;&gt;&lt;strong&gt;Documentation en Fran√ßais&lt;/strong&gt;&lt;/a&gt; | | Korean | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.ko.md&quot;&gt;&lt;strong&gt;ÌïúÍµ≠Ïñ¥ Î¨∏ÏÑú&lt;/strong&gt;&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;From CDN:&lt;/strong&gt; Add the following script to the end of your &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js&quot; defer&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That‚Äôs it. It will initialize itself.&lt;/p&gt; 
&lt;p&gt;For production environments, it‚Äôs recommended to pin a specific version number in the link to avoid unexpected breakage from newer versions. For example, to use version &lt;code&gt;2.8.2&lt;/code&gt; (latest):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.2/dist/alpine.min.js&quot; defer&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;From npm:&lt;/strong&gt; Install the package from npm.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npm i alpinejs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Include it in your script.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;alpinejs&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;For IE11 support&lt;/strong&gt; Use the following scripts instead.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script nomodule src=&quot;https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine-ie11.min.js&quot; defer&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The pattern above is the &lt;a href=&quot;https://philipwalton.com/articles/deploying-es2015-code-in-production-today/&quot;&gt;module/nomodule pattern&lt;/a&gt; that will result in the modern bundle automatically loaded on modern browsers, and the IE11 bundle loaded automatically on IE11 and other legacy browsers.&lt;/p&gt; 
&lt;h2&gt;Use&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Dropdown/Modal&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ open: false }&quot;&amp;gt;
    &amp;lt;button @click=&quot;open = true&quot;&amp;gt;Open Dropdown&amp;lt;/button&amp;gt;

    &amp;lt;ul
        x-show=&quot;open&quot;
        @click.away=&quot;open = false&quot;
    &amp;gt;
        Dropdown Body
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Tabs&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ tab: &#39;foo&#39; }&quot;&amp;gt;
    &amp;lt;button :class=&quot;{ &#39;active&#39;: tab === &#39;foo&#39; }&quot; @click=&quot;tab = &#39;foo&#39;&quot;&amp;gt;Foo&amp;lt;/button&amp;gt;
    &amp;lt;button :class=&quot;{ &#39;active&#39;: tab === &#39;bar&#39; }&quot; @click=&quot;tab = &#39;bar&#39;&quot;&amp;gt;Bar&amp;lt;/button&amp;gt;

    &amp;lt;div x-show=&quot;tab === &#39;foo&#39;&quot;&amp;gt;Tab Foo&amp;lt;/div&amp;gt;
    &amp;lt;div x-show=&quot;tab === &#39;bar&#39;&quot;&amp;gt;Tab Bar&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can even use it for non-trivial things: &lt;em&gt;Pre-fetching a dropdown‚Äôs HTML content on hover.&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ open: false }&quot;&amp;gt;
    &amp;lt;button
        @mouseenter.once=&quot;
            fetch(&#39;/dropdown-partial.html&#39;)
                .then(response =&amp;gt; response.text())
                .then(html =&amp;gt; { $refs.dropdown.innerHTML = html })
        &quot;
        @click=&quot;open = true&quot;
    &amp;gt;Show Dropdown&amp;lt;/button&amp;gt;

    &amp;lt;div x-ref=&quot;dropdown&quot; x-show=&quot;open&quot; @click.away=&quot;open = false&quot;&amp;gt;
        Loading Spinner...
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Learn&lt;/h2&gt; 
&lt;p&gt;There are 14 directives available to you:&lt;/p&gt; 
&lt;p&gt;| Directive | Description | | ‚Äî | ‚Äî | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-data&quot;&gt;&lt;code&gt;x-data&lt;/code&gt;&lt;/a&gt; | Declares a new component scope. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-init&quot;&gt;&lt;code&gt;x-init&lt;/code&gt;&lt;/a&gt; | Runs an expression when a component is initialized. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-show&quot;&gt;&lt;code&gt;x-show&lt;/code&gt;&lt;/a&gt; | Toggles &lt;code&gt;display: none;&lt;/code&gt; on the element depending on expression (true or false). | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-bind&quot;&gt;&lt;code&gt;x-bind&lt;/code&gt;&lt;/a&gt; | Sets the value of an attribute to the result of a JS expression. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-on&quot;&gt;&lt;code&gt;x-on&lt;/code&gt;&lt;/a&gt; | Attaches an event listener to the element. Executes JS expression when emitted. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-model&quot;&gt;&lt;code&gt;x-model&lt;/code&gt;&lt;/a&gt; | Adds ‚Äútwo-way data binding‚Äù to an element. Keeps input element in sync with component data. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-text&quot;&gt;&lt;code&gt;x-text&lt;/code&gt;&lt;/a&gt; | Works similarly to &lt;code&gt;x-bind&lt;/code&gt;, but will update the &lt;code&gt;innerText&lt;/code&gt; of an element. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-html&quot;&gt;&lt;code&gt;x-html&lt;/code&gt;&lt;/a&gt; | Works similarly to &lt;code&gt;x-bind&lt;/code&gt;, but will update the &lt;code&gt;innerHTML&lt;/code&gt; of an element. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-ref&quot;&gt;&lt;code&gt;x-ref&lt;/code&gt;&lt;/a&gt; | Convenient way to retrieve raw DOM elements out of your component. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-if&quot;&gt;&lt;code&gt;x-if&lt;/code&gt;&lt;/a&gt; | Remove an element completely from the DOM. Needs to be used on a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tag. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-for&quot;&gt;&lt;code&gt;x-for&lt;/code&gt;&lt;/a&gt; | Create new DOM nodes for each item in an array. Needs to be used on a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tag. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-transition&quot;&gt;&lt;code&gt;x-transition&lt;/code&gt;&lt;/a&gt; | Directives for applying classes to various stages of an element‚Äôs transition. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-spread&quot;&gt;&lt;code&gt;x-spread&lt;/code&gt;&lt;/a&gt; | Allows you to bind an object of Alpine directives to an element for better reusability. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-cloak&quot;&gt;&lt;code&gt;x-cloak&lt;/code&gt;&lt;/a&gt; | This attribute is removed when Alpine initializes. Useful for hiding pre-initialized DOM. |&lt;/p&gt; 
&lt;p&gt;And 6 magic properties:&lt;/p&gt; 
&lt;p&gt;| Magic Properties | Description | | ‚Äî | ‚Äî | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#el&quot;&gt;&lt;code&gt;$el&lt;/code&gt;&lt;/a&gt; | Retrieve the root component DOM node. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#refs&quot;&gt;&lt;code&gt;$refs&lt;/code&gt;&lt;/a&gt; | Retrieve DOM elements marked with &lt;code&gt;x-ref&lt;/code&gt; inside the component. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#event&quot;&gt;&lt;code&gt;$event&lt;/code&gt;&lt;/a&gt; | Retrieve the native browser ‚ÄúEvent‚Äù object within an event listener. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#dispatch&quot;&gt;&lt;code&gt;$dispatch&lt;/code&gt;&lt;/a&gt; | Create a &lt;code&gt;CustomEvent&lt;/code&gt; and dispatch it using &lt;code&gt;.dispatchEvent()&lt;/code&gt; internally. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#nexttick&quot;&gt;&lt;code&gt;$nextTick&lt;/code&gt;&lt;/a&gt; | Execute a given expression AFTER Alpine has made its reactive DOM updates. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#watch&quot;&gt;&lt;code&gt;$watch&lt;/code&gt;&lt;/a&gt; | Will fire a provided callback when a component property you ‚Äúwatched‚Äù gets changed. |&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;img width=&quot;33%&quot; src=&quot;https://refactoringui.nyc3.cdn.digitaloceanspaces.com/tailwind-logo.svg?sanitize=true&quot; alt=&quot;Tailwind CSS&quot;&gt; 
&lt;p&gt;&lt;strong&gt;Want your logo here? &lt;a href=&quot;https://twitter.com/calebporzio&quot;&gt;DM on Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Community Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HugoDF/alpinejs-devtools&quot;&gt;Alpine Devtools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KevinBatdorf/alpine-magic-helpers&quot;&gt;Alpine Magic Helpers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alpinejs.codewithhugo.com/newsletter/&quot;&gt;Alpine Weekly Newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryangjchandler/spruce&quot;&gt;Spruce (State Management)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryangjchandler/awesome-alpine&quot;&gt;Awesome Alpine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SimoTod/alpine-turbolinks-adapter&quot;&gt;Turbolinks Adapter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Directives&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-data&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;{ foo: &#39;bar&#39; }&quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;[object literal]&quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-data&lt;/code&gt; declares a new component scope. It tells the framework to initialize a new component with the following data object.&lt;/p&gt; 
&lt;p&gt;Think of it like the &lt;code&gt;data&lt;/code&gt; property of a Vue component.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Extract Component Logic&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can extract data (and behavior) into reusable functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;dropdown()&quot;&amp;gt;
    &amp;lt;button x-on:click=&quot;open&quot;&amp;gt;Open&amp;lt;/button&amp;gt;

    &amp;lt;div x-show=&quot;isOpen()&quot; x-on:click.away=&quot;close&quot;&amp;gt;
        // Dropdown
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
    function dropdown() {
        return {
            show: false,
            open() { this.show = true },
            close() { this.show = false },
            isOpen() { return this.show === true },
        }
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;For bundler users&lt;/strong&gt;, note that Alpine.js accesses functions that are in the global scope (&lt;code&gt;window&lt;/code&gt;), you‚Äôll need to explicitly assign your functions to &lt;code&gt;window&lt;/code&gt; in order to use them with &lt;code&gt;x-data&lt;/code&gt; for example &lt;code&gt;window.dropdown = function () {}&lt;/code&gt; (this is because with Webpack, Rollup, Parcel etc. &lt;code&gt;function&lt;/code&gt;‚Äòs you define will default to the module‚Äôs scope not &lt;code&gt;window&lt;/code&gt;).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can also mix-in multiple data objects using object destructuring:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{...dropdown(), ...tabs()}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-init&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;{ foo: &#39;bar&#39; }&quot; x-init=&quot;foo = &#39;baz&#39;&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;...&quot; x-init=&quot;[expression]&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-init&lt;/code&gt; runs an expression when a component is initialized.&lt;/p&gt; 
&lt;p&gt;If you wish to run code AFTER Alpine has made its initial updates to the DOM (something like a &lt;code&gt;mounted()&lt;/code&gt; hook in VueJS), you can return a callback from &lt;code&gt;x-init&lt;/code&gt;, and it will be run after:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-init=&quot;() =&amp;gt; { // we have access to the post-dom-initialization state here // }&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-show&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-show=&quot;open&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-show=&quot;[expression]&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-show&lt;/code&gt; toggles the &lt;code&gt;display: none;&lt;/code&gt; style on the element depending if the expression resolves to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;x-show.transition&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-show.transition&lt;/code&gt; is a convenience API for making your &lt;code&gt;x-show&lt;/code&gt;s more pleasant using CSS transitions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-show.transition=&quot;open&quot;&amp;gt;
    These contents will be transitioned in and out.
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Directive | Description | | ‚Äî | ‚Äî | | &lt;code&gt;x-show.transition&lt;/code&gt; | A simultaneous fade and scale. (opacity, scale: 0.95, timing-function: cubic-bezier(0.4, 0.0, 0.2, 1), duration-in: 150ms, duration-out: 75ms) | &lt;code&gt;x-show.transition.in&lt;/code&gt; | Only transition in. | | &lt;code&gt;x-show.transition.out&lt;/code&gt; | Only transition out. | | &lt;code&gt;x-show.transition.opacity&lt;/code&gt; | Only use the fade. | | &lt;code&gt;x-show.transition.scale&lt;/code&gt; | Only use the scale. | | &lt;code&gt;x-show.transition.scale.75&lt;/code&gt; | Customize the CSS scale transform &lt;code&gt;transform: scale(.75)&lt;/code&gt;. | | &lt;code&gt;x-show.transition.duration.200ms&lt;/code&gt; | Sets the ‚Äúin‚Äù transition to 200ms. The out will be set to half that (100ms). | | &lt;code&gt;x-show.transition.origin.top.right&lt;/code&gt; | Customize the CSS transform origin &lt;code&gt;transform-origin: top right&lt;/code&gt;. | | &lt;code&gt;x-show.transition.in.duration.200ms.out.duration.50ms&lt;/code&gt; | Different durations for ‚Äúin‚Äù and ‚Äúout‚Äù. |&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: All of these transition modifiers can be used in conjunction with each other. This is possible (although ridiculous lol): &lt;code&gt;x-show.transition.in.duration.100ms.origin.top.right.opacity.scale.85.out.duration.200ms.origin.bottom.left.opacity.scale.95&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;x-show&lt;/code&gt; will wait for any children to finish transitioning out. If you want to bypass this behavior, add the &lt;code&gt;.immediate&lt;/code&gt; modifier:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-show.immediate=&quot;open&quot;&amp;gt;
    &amp;lt;div x-show.transition=&quot;open&quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-bind&lt;/code&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You are free to use the shorter ‚Äú:‚Äù syntax: &lt;code&gt;:type=&quot;...&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-bind:type=&quot;inputType&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-bind:[attribute]=&quot;[expression]&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-bind&lt;/code&gt; sets the value of an attribute to the result of a JavaScript expression. The expression has access to all the keys of the component‚Äôs data object, and will update every-time its data is updated.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: attribute bindings ONLY update when their dependencies update. The framework is smart enough to observe data changes and detect which bindings care about them.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;x-bind&lt;/code&gt; for class attributes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-bind&lt;/code&gt; behaves a little differently when binding to the &lt;code&gt;class&lt;/code&gt; attribute.&lt;/p&gt; 
&lt;p&gt;For classes, you pass in an object whose keys are class names, and values are boolean expressions to determine if those class names are applied or not.&lt;/p&gt; 
&lt;p&gt;For example: &lt;code&gt;&amp;lt;div x-bind:class=&quot;{ &#39;hidden&#39;: foo }&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;In this example, the ‚Äúhidden‚Äù class will only be applied when the value of the &lt;code&gt;foo&lt;/code&gt; data attribute is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;x-bind&lt;/code&gt; for boolean attributes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-bind&lt;/code&gt; supports boolean attributes in the same way as value attributes, using a variable as the condition or any JavaScript expression that resolves to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Given: --&amp;gt;
&amp;lt;button x-bind:disabled=&quot;myVar&quot;&amp;gt;Click me&amp;lt;/button&amp;gt;

&amp;lt;!-- When myVar == true: --&amp;gt;
&amp;lt;button disabled=&quot;disabled&quot;&amp;gt;Click me&amp;lt;/button&amp;gt;

&amp;lt;!-- When myVar == false: --&amp;gt;
&amp;lt;button&amp;gt;Click me&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will add or remove the &lt;code&gt;disabled&lt;/code&gt; attribute when &lt;code&gt;myVar&lt;/code&gt; is true or false respectively.&lt;/p&gt; 
&lt;p&gt;Boolean attributes are supported as per the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute&quot;&gt;HTML specification&lt;/a&gt;, for example &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;checked&lt;/code&gt;, &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;selected&lt;/code&gt;, &lt;code&gt;open&lt;/code&gt;, etc.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If you need a false state to show for your attribute, such as &lt;code&gt;aria-*&lt;/code&gt;, chain &lt;code&gt;.toString()&lt;/code&gt; to the value while binding to the attribute. For example: &lt;code&gt;:aria-expanded=&quot;isOpen.toString()&quot;&lt;/code&gt; would persist whether &lt;code&gt;isOpen&lt;/code&gt; was &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.camel&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;svg x-bind:view-box.camel=&quot;viewBox&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;camel&lt;/code&gt; modifier will bind to the camel case equivalent of the attribute name. In the example above, the value of &lt;code&gt;viewBox&lt;/code&gt; will be bound the &lt;code&gt;viewBox&lt;/code&gt; attribute as opposed to the &lt;code&gt;view-box&lt;/code&gt; attribute.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-on&lt;/code&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You are free to use the shorter ‚Äú@‚Äù syntax: &lt;code&gt;@click=&quot;...&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:click=&quot;foo = &#39;bar&#39;&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:[event]=&quot;[expression]&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-on&lt;/code&gt; attaches an event listener to the element it‚Äôs declared on. When that event is emitted, the JavaScript expression set as its value is executed. You can use &lt;code&gt;x-on&lt;/code&gt; with any event available for the element you‚Äôre adding the directive on, for a full list of events, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;the Event reference on MDN&lt;/a&gt; for a list of possible values.&lt;/p&gt; 
&lt;p&gt;If any data is modified in the expression, other element attributes ‚Äúbound‚Äù to this data, will be updated.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You can also specify a JavaScript function name.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:click=&quot;myFunction&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This is equivalent to: &lt;code&gt;&amp;lt;button x-on:click=&quot;myFunction($event)&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;keydown&lt;/code&gt; modifiers&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input type=&quot;text&quot; x-on:keydown.escape=&quot;open = false&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can specify specific keys to listen for using keydown modifiers appended to the &lt;code&gt;x-on:keydown&lt;/code&gt; directive. Note that the modifiers are kebab-cased versions of &lt;code&gt;Event.key&lt;/code&gt; values.&lt;/p&gt; 
&lt;p&gt;Examples: &lt;code&gt;enter&lt;/code&gt;, &lt;code&gt;escape&lt;/code&gt;, &lt;code&gt;arrow-up&lt;/code&gt;, &lt;code&gt;arrow-down&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You can also listen for system-modifier key combinations like: &lt;code&gt;x-on:keydown.cmd.enter=&quot;foo&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.away&lt;/code&gt; modifier&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-on:click.away=&quot;showModal = false&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;When the &lt;code&gt;.away&lt;/code&gt; modifier is present, the event handler will only be executed when the event originates from a source other than itself, or its children.&lt;/p&gt; 
&lt;p&gt;This is useful for hiding dropdowns and modals when a user clicks away from them.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.prevent&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; x-on:click.prevent&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding &lt;code&gt;.prevent&lt;/code&gt; to an event listener will call &lt;code&gt;preventDefault&lt;/code&gt; on the triggered event. In the above example, this means the checkbox wouldn‚Äôt actually get checked when a user clicks on it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.stop&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-on:click=&quot;foo = &#39;bar&#39;&quot;&amp;gt;&amp;lt;button x-on:click.stop&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding &lt;code&gt;.stop&lt;/code&gt; to an event listener will call &lt;code&gt;stopPropagation&lt;/code&gt; on the triggered event. In the above example, this means the ‚Äúclick‚Äù event won‚Äôt bubble from the button to the outer &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. Or in other words, when a user clicks the button, &lt;code&gt;foo&lt;/code&gt; won‚Äôt be set to &lt;code&gt;&#39;bar&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.self&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-on:click.self=&quot;foo = &#39;bar&#39;&quot;&amp;gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding &lt;code&gt;.self&lt;/code&gt; to an event listener will only trigger the handler if the &lt;code&gt;$event.target&lt;/code&gt; is the element itself. In the above example, this means the ‚Äúclick‚Äù event that bubbles from the button to the outer &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; run the handler.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.window&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-on:resize.window=&quot;isOpen = window.outerWidth &amp;gt; 768 ? false : open&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding &lt;code&gt;.window&lt;/code&gt; to an event listener will install the listener on the global window object instead of the DOM node on which it is declared. This is useful for when you want to modify component state when something changes with the window, like the resize event. In this example, when the window grows larger than 768 pixels wide, we will close the modal/dropdown, otherwise maintain the same state.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You can also use the &lt;code&gt;.document&lt;/code&gt; modifier to attach listeners to &lt;code&gt;document&lt;/code&gt; instead of &lt;code&gt;window&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.once&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:mouseenter.once=&quot;fetchSomething()&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding the &lt;code&gt;.once&lt;/code&gt; modifier to an event listener will ensure that the listener will only be handled once. This is useful for things you only want to do once, like fetching HTML partials and such.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.passive&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:mousedown.passive=&quot;interactive = true&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding the &lt;code&gt;.passive&lt;/code&gt; modifier to an event listener will make the listener a passive one, which means &lt;code&gt;preventDefault()&lt;/code&gt; will not work on any events being processed, this can help, for example with scroll performance on touch devices.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.debounce&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-on:input.debounce=&quot;fetchSomething()&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;debounce&lt;/code&gt; modifier allows you to ‚Äúdebounce‚Äù an event handler. In other words, the event handler will NOT run until a certain amount of time has elapsed since the last event that fired. When the handler is ready to be called, the last handler call will execute.&lt;/p&gt; 
&lt;p&gt;The default debounce ‚Äúwait‚Äù time is 250 milliseconds.&lt;/p&gt; 
&lt;p&gt;If you wish to customize this, you can specify a custom wait time like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;input x-on:input.debounce.750=&quot;fetchSomething()&quot;&amp;gt;
&amp;lt;input x-on:input.debounce.750ms=&quot;fetchSomething()&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.camel&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-on:event-name.camel=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;camel&lt;/code&gt; modifier will attach an event listener for the camel case equivalent event name. In the example above, the expression will be evaluated when the &lt;code&gt;eventName&lt;/code&gt; event is fired on the element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-model&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input type=&quot;text&quot; x-model=&quot;foo&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;input type=&quot;text&quot; x-model=&quot;[data item]&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-model&lt;/code&gt; adds ‚Äútwo-way data binding‚Äù to an element. In other words, the value of the input element will be kept in sync with the value of the data item of the component.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;x-model&lt;/code&gt; is smart enough to detect changes on text inputs, checkboxes, radio buttons, textareas, selects, and multiple selects. It should behave &lt;a href=&quot;https://vuejs.org/v2/guide/forms.html&quot;&gt;how Vue would&lt;/a&gt; in those scenarios.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.number&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-model.number=&quot;age&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;number&lt;/code&gt; modifier will convert the input‚Äôs value to a number. If the value cannot be parsed as a valid number, the original value is returned.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.debounce&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-model.debounce=&quot;search&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;debounce&lt;/code&gt; modifier allows you to add a ‚Äúdebounce‚Äù to a value update. In other words, the event handler will NOT run until a certain amount of time has elapsed since the last event that fired. When the handler is ready to be called, the last handler call will execute.&lt;/p&gt; 
&lt;p&gt;The default debounce ‚Äúwait‚Äù time is 250 milliseconds.&lt;/p&gt; 
&lt;p&gt;If you wish to customize this, you can specify a custom wait time like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;input x-model.debounce.750=&quot;search&quot;&amp;gt;
&amp;lt;input x-model.debounce.750ms=&quot;search&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-text&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;span x-text=&quot;foo&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;span x-text=&quot;[expression]&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-text&lt;/code&gt; works similarly to &lt;code&gt;x-bind&lt;/code&gt;, except instead of updating the value of an attribute, it will update the &lt;code&gt;innerText&lt;/code&gt; of an element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-html&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;span x-html=&quot;foo&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;span x-html=&quot;[expression]&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-html&lt;/code&gt; works similarly to &lt;code&gt;x-bind&lt;/code&gt;, except instead of updating the value of an attribute, it will update the &lt;code&gt;innerHTML&lt;/code&gt; of an element.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;:warning: &lt;strong&gt;Only use on trusted content and never on user-provided content.&lt;/strong&gt; :warning:&lt;/p&gt; 
 &lt;p&gt;Dynamically rendering HTML from third parties can easily lead to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting&quot;&gt;XSS&lt;/a&gt; vulnerabilities.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-ref&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-ref=&quot;foo&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;button x-on:click=&quot;$refs.foo.innerText = &#39;bar&#39;&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-ref=&quot;[ref name]&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;button x-on:click=&quot;$refs.[ref name].innerText = &#39;bar&#39;&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-ref&lt;/code&gt; provides a convenient way to retrieve raw DOM elements out of your component. By setting an &lt;code&gt;x-ref&lt;/code&gt; attribute on an element, you are making it available to all event handlers inside an object called &lt;code&gt;$refs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This is a helpful alternative to setting ids and using &lt;code&gt;document.querySelector&lt;/code&gt; all over the place.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: you can also bind dynamic values for x-ref: &lt;code&gt;&amp;lt;span :x-ref=&quot;item.id&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; if you need to.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-if&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;template x-if=&quot;true&quot;&amp;gt;&amp;lt;div&amp;gt;Some Element&amp;lt;/div&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;template x-if=&quot;[expression]&quot;&amp;gt;&amp;lt;div&amp;gt;Some Element&amp;lt;/div&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For cases where &lt;code&gt;x-show&lt;/code&gt; isn‚Äôt sufficient (&lt;code&gt;x-show&lt;/code&gt; sets an element to &lt;code&gt;display: none&lt;/code&gt; if it‚Äôs false), &lt;code&gt;x-if&lt;/code&gt; can be used to actually remove an element completely from the DOM.&lt;/p&gt; 
&lt;p&gt;It‚Äôs important that &lt;code&gt;x-if&lt;/code&gt; is used on a &lt;code&gt;&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt; tag because Alpine doesn‚Äôt use a virtual DOM. This implementation allows Alpine to stay rugged and use the real DOM to work its magic.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;x-if&lt;/code&gt; must have a single root element inside the &lt;code&gt;&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using &lt;code&gt;template&lt;/code&gt; in a &lt;code&gt;svg&lt;/code&gt; tag, you need to add a &lt;a href=&quot;https://github.com/alpinejs/alpine/issues/637#issuecomment-654856538&quot;&gt;polyfill&lt;/a&gt; that should be run before Alpine.js is initialized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-for&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;item in items&quot; :key=&quot;item&quot;&amp;gt;
    &amp;lt;div x-text=&quot;item&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: the &lt;code&gt;:key&lt;/code&gt; binding is optional, but HIGHLY recommended.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;x-for&lt;/code&gt; is available for cases when you want to create new DOM nodes for each item in an array. This should appear similar to &lt;code&gt;v-for&lt;/code&gt; in Vue, with one exception of needing to exist on a &lt;code&gt;template&lt;/code&gt; tag, and not a regular DOM element.&lt;/p&gt; 
&lt;p&gt;If you want to access the current index of the iteration, use the following syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;(item, index) in items&quot; :key=&quot;index&quot;&amp;gt;
    &amp;lt;!-- You can also reference &quot;index&quot; inside the iteration if you need. --&amp;gt;
    &amp;lt;div x-text=&quot;index&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to access the array object (collection) of the iteration, use the following syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;(item, index, collection) in items&quot; :key=&quot;index&quot;&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;!-- You can also reference &quot;collection&quot; inside the iteration if you need. --&amp;gt;
        &amp;lt;!-- Current item. --&amp;gt;
        &amp;lt;div x-text=&quot;item&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;!-- Same as above. --&amp;gt;
        &amp;lt;div x-text=&quot;collection[index]&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;!-- Previous item. --&amp;gt;
        &amp;lt;div x-text=&quot;collection[index - 1]&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;x-for&lt;/code&gt; must have a single root element inside of the &lt;code&gt;&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using &lt;code&gt;template&lt;/code&gt; in a &lt;code&gt;svg&lt;/code&gt; tag, you need to add a &lt;a href=&quot;https://github.com/alpinejs/alpine/issues/637#issuecomment-654856538&quot;&gt;polyfill&lt;/a&gt; that should be run before Alpine.js is initialized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Nesting &lt;code&gt;x-for&lt;/code&gt;s&lt;/h4&gt; 
&lt;p&gt;You can nest &lt;code&gt;x-for&lt;/code&gt; loops, but you MUST wrap each loop in an element. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;item in items&quot;&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;template x-for=&quot;subItem in item.subItems&quot;&amp;gt;
            &amp;lt;div x-text=&quot;subItem&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/template&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Iterating over a range&lt;/h4&gt; 
&lt;p&gt;Alpine supports the &lt;code&gt;i in n&lt;/code&gt; syntax, where &lt;code&gt;n&lt;/code&gt; is an integer, allowing you to iterate over a fixed range of elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;i in 10&quot;&amp;gt;
    &amp;lt;span x-text=&quot;i&quot;&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-transition&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div
    x-show=&quot;open&quot;
    x-transition:enter=&quot;transition ease-out duration-300&quot;
    x-transition:enter-start=&quot;opacity-0 transform scale-90&quot;
    x-transition:enter-end=&quot;opacity-100 transform scale-100&quot;
    x-transition:leave=&quot;transition ease-in duration-300&quot;
    x-transition:leave-start=&quot;opacity-100 transform scale-100&quot;
    x-transition:leave-end=&quot;opacity-0 transform scale-90&quot;
&amp;gt;...&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-if=&quot;open&quot;&amp;gt;
    &amp;lt;div
        x-transition:enter=&quot;transition ease-out duration-300&quot;
        x-transition:enter-start=&quot;opacity-0 transform scale-90&quot;
        x-transition:enter-end=&quot;opacity-100 transform scale-100&quot;
        x-transition:leave=&quot;transition ease-in duration-300&quot;
        x-transition:leave-start=&quot;opacity-100 transform scale-100&quot;
        x-transition:leave-end=&quot;opacity-0 transform scale-90&quot;
    &amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The example above uses classes from &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Alpine offers 6 different transition directives for applying classes to various stages of an element‚Äôs transition between ‚Äúhidden‚Äù and ‚Äúshown‚Äù states. These directives work both with &lt;code&gt;x-show&lt;/code&gt; AND &lt;code&gt;x-if&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;These behave exactly like VueJS‚Äôs transition directives, except they have different, more sensible names:&lt;/p&gt; 
&lt;p&gt;| Directive | Description | | ‚Äî | ‚Äî | | &lt;code&gt;:enter&lt;/code&gt; | Applied during the entire entering phase. | | &lt;code&gt;:enter-start&lt;/code&gt; | Added before element is inserted, removed one frame after element is inserted. | | &lt;code&gt;:enter-end&lt;/code&gt; | Added one frame after element is inserted (at the same time &lt;code&gt;enter-start&lt;/code&gt; is removed), removed when transition/animation finishes. | &lt;code&gt;:leave&lt;/code&gt; | Applied during the entire leaving phase. | | &lt;code&gt;:leave-start&lt;/code&gt; | Added immediately when a leaving transition is triggered, removed after one frame. | | &lt;code&gt;:leave-end&lt;/code&gt; | Added one frame after a leaving transition is triggered (at the same time &lt;code&gt;leave-start&lt;/code&gt; is removed), removed when the transition/animation finishes.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-spread&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;dropdown()&quot;&amp;gt;
    &amp;lt;button x-spread=&quot;trigger&quot;&amp;gt;Open Dropdown&amp;lt;/button&amp;gt;

    &amp;lt;span x-spread=&quot;dialogue&quot;&amp;gt;Dropdown Contents&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
    function dropdown() {
        return {
            open: false,
            trigger: {
                [&#39;@click&#39;]() {
                    this.open = true
                },
            },
            dialogue: {
                [&#39;x-show&#39;]() {
                    return this.open
                },
                [&#39;@click.away&#39;]() {
                    this.open = false
                },
            }
        }
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;x-spread&lt;/code&gt; allows you to extract an element‚Äôs Alpine bindings into a reusable object.&lt;/p&gt; 
&lt;p&gt;The object keys are the directives (Can be any directive including modifiers), and the values are callbacks to be evaluated by Alpine.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: There are a couple of caveats to x-spread:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;When the directive being ‚Äúspread‚Äù is &lt;code&gt;x-for&lt;/code&gt;, you should return a normal expression string from the callback. For example: &lt;code&gt;[&#39;x-for&#39;]() { return &#39;item in items&#39; }&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;x-data&lt;/code&gt; and &lt;code&gt;x-init&lt;/code&gt; can‚Äôt be used inside a ‚Äúspread‚Äù object.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-cloak&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;{}&quot; x-cloak&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-cloak&lt;/code&gt; attributes are removed from elements when Alpine initializes. This is useful for hiding pre-initialized DOM. It‚Äôs typical to add the following global style for this to work:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
    [x-cloak] {
        display: none !important;
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Magic Properties&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;With the exception of &lt;code&gt;$el&lt;/code&gt;, magic properties are &lt;strong&gt;not available within &lt;code&gt;x-data&lt;/code&gt;&lt;/strong&gt; as the component isn‚Äôt initialized yet.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$el&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data&amp;gt;
    &amp;lt;button @click=&quot;$el.innerHTML = &#39;foo&#39;&quot;&amp;gt;Replace me with &quot;foo&quot;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$el&lt;/code&gt; is a magic property that can be used to retrieve the root component DOM node.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;$refs&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;span x-ref=&quot;foo&quot;&amp;gt;&amp;lt;/span&amp;gt;

&amp;lt;button x-on:click=&quot;$refs.foo.innerText = &#39;bar&#39;&quot;&amp;gt;&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$refs&lt;/code&gt; is a magic property that can be used to retrieve DOM elements marked with &lt;code&gt;x-ref&lt;/code&gt; inside the component. This is useful when you need to manually manipulate DOM elements.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$event&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input x-on:input=&quot;alert($event.target.value)&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$event&lt;/code&gt; is a magic property that can be used within an event listener to retrieve the native browser ‚ÄúEvent‚Äù object.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The $event property is only available in DOM expressions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you need to access $event inside of a JavaScript function you can pass it in directly:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;button x-on:click=&quot;myFunction($event)&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$dispatch&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div @custom-event=&quot;console.log($event.detail.foo)&quot;&amp;gt;
    &amp;lt;button @click=&quot;$dispatch(&#39;custom-event&#39;, { foo: &#39;bar&#39; })&quot;&amp;gt;
    &amp;lt;!-- When clicked, will console.log &quot;bar&quot; --&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note on Event Propagation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Notice that, because of &lt;a href=&quot;https://en.wikipedia.org/wiki/Event_bubbling&quot;&gt;event bubbling&lt;/a&gt;, when you need to capture events dispatched from nodes that are under the same nesting hierarchy, you‚Äôll need to use the &lt;a href=&quot;https://github.com/alpinejs/alpine#x-on&quot;&gt;&lt;code&gt;.window&lt;/code&gt;&lt;/a&gt; modifier:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data&amp;gt;
    &amp;lt;span @custom-event=&quot;console.log($event.detail.foo)&quot;&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;button @click=&quot;$dispatch(&#39;custom-event&#39;, { foo: &#39;bar&#39; })&quot;&amp;gt;
&amp;lt;div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This won‚Äôt work because when &lt;code&gt;custom-event&lt;/code&gt; is dispatched, it‚Äôll propagate to its common ancestor, the &lt;code&gt;div&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Dispatching to Components&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can also take advantage of the previous technique to make your components talk to each other:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data @custom-event.window=&quot;console.log($event.detail)&quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;button x-data @click=&quot;$dispatch(&#39;custom-event&#39;, &#39;Hello World!&#39;)&quot;&amp;gt;
&amp;lt;!-- When clicked, will console.log &quot;Hello World!&quot;. --&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$dispatch&lt;/code&gt; is a shortcut for creating a &lt;code&gt;CustomEvent&lt;/code&gt; and dispatching it using &lt;code&gt;.dispatchEvent()&lt;/code&gt; internally. There are lots of good use cases for passing data around and between components using custom events. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events&quot;&gt;Read here&lt;/a&gt; for more information on the underlying &lt;code&gt;CustomEvent&lt;/code&gt; system in browsers.&lt;/p&gt; 
&lt;p&gt;You will notice that any data passed as the second parameter to &lt;code&gt;$dispatch(&#39;some-event&#39;, { some: &#39;data&#39; })&lt;/code&gt;, becomes available through the new events ‚Äúdetail‚Äù property: &lt;code&gt;$event.detail.some&lt;/code&gt;. Attaching custom event data to the &lt;code&gt;.detail&lt;/code&gt; property is standard practice for &lt;code&gt;CustomEvent&lt;/code&gt;s in browsers. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail&quot;&gt;Read here&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;You can also use &lt;code&gt;$dispatch()&lt;/code&gt; to trigger data updates for &lt;code&gt;x-model&lt;/code&gt; bindings. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ foo: &#39;bar&#39; }&quot;&amp;gt;
    &amp;lt;span x-model=&quot;foo&quot;&amp;gt;
        &amp;lt;button @click=&quot;$dispatch(&#39;input&#39;, &#39;baz&#39;)&quot;&amp;gt;
        &amp;lt;!-- After the button is clicked, `x-model` will catch the bubbling &quot;input&quot; event, and update foo to &quot;baz&quot;. --&amp;gt;
    &amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The $dispatch property is only available in DOM expressions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you need to access $dispatch inside of a JavaScript function you can pass it in directly:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;button x-on:click=&quot;myFunction($dispatch)&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$nextTick&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ fruit: &#39;apple&#39; }&quot;&amp;gt;
    &amp;lt;button
        x-on:click=&quot;
            fruit = &#39;pear&#39;;
            $nextTick(() =&amp;gt; { console.log($event.target.innerText) });
        &quot;
        x-text=&quot;fruit&quot;
    &amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$nextTick&lt;/code&gt; is a magic property that allows you to only execute a given expression AFTER Alpine has made its reactive DOM updates. This is useful for times you want to interact with the DOM state AFTER it‚Äôs reflected any data updates you‚Äôve made.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$watch&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ open: false }&quot; x-init=&quot;$watch(&#39;open&#39;, value =&amp;gt; console.log(value))&quot;&amp;gt;
    &amp;lt;button @click=&quot;open = ! open&quot;&amp;gt;Toggle Open&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can ‚Äúwatch‚Äù a component property with the &lt;code&gt;$watch&lt;/code&gt; magic method. In the above example, when the button is clicked and &lt;code&gt;open&lt;/code&gt; is changed, the provided callback will fire and &lt;code&gt;console.log&lt;/code&gt; the new value.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you find a security vulnerability, please send an email to &lt;a href=&quot;&quot;&gt;calebporzio@gmail.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alpine relies on a custom implementation using the &lt;code&gt;Function&lt;/code&gt; object to evaluate its directives. Despite being more secure then &lt;code&gt;eval()&lt;/code&gt;, its use is prohibited in some environments, such as Google Chrome App, using restrictive Content Security Policy (CSP).&lt;/p&gt; 
&lt;p&gt;If you use Alpine in a website dealing with sensitive data and requiring &lt;a href=&quot;https://csp.withgoogle.com/docs/strict-csp.html&quot;&gt;CSP&lt;/a&gt;, you need to include &lt;code&gt;unsafe-eval&lt;/code&gt; in your policy. A robust policy correctly configured will help protecting your users when using personal or financial data.&lt;/p&gt; 
&lt;p&gt;Since a policy applies to all scripts in your page, it‚Äôs important that other external libraries included in the website are carefully reviewed to ensure that they are trustworthy and they won‚Äôt introduce any Cross Site Scripting vulnerability either using the &lt;code&gt;eval()&lt;/code&gt; function or manipulating the DOM to inject malicious code in your page.&lt;/p&gt; 
&lt;h2&gt;V3 Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Move from &lt;code&gt;x-ref&lt;/code&gt; to &lt;code&gt;ref&lt;/code&gt; for Vue parity?&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;Alpine.directive()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;Alpine.component(&#39;foo&#39;, {...})&lt;/code&gt; (With magic &lt;code&gt;__init()&lt;/code&gt; method)&lt;/li&gt; 
 &lt;li&gt;Dispatch Alpine events for ‚Äúloaded‚Äù, ‚Äútransition-start‚Äù, etc‚Ä¶ (&lt;a href=&quot;https://github.com/alpinejs/alpine/pull/299&quot;&gt;#299&lt;/a&gt;) ?&lt;/li&gt; 
 &lt;li&gt;Remove ‚Äúobject‚Äù (and array) syntax from &lt;code&gt;x-bind:class=&quot;{ &#39;foo&#39;: true }&quot;&lt;/code&gt; (&lt;a href=&quot;https://github.com/alpinejs/alpine/pull/236&quot;&gt;#236&lt;/a&gt; to add support for object syntax for the &lt;code&gt;style&lt;/code&gt; attribute)&lt;/li&gt; 
 &lt;li&gt;Improve &lt;code&gt;x-for&lt;/code&gt; mutation reactivity (&lt;a href=&quot;https://github.com/alpinejs/alpine/pull/165&quot;&gt;#165&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Add ‚Äúdeep watching‚Äù support in V3 (&lt;a href=&quot;https://github.com/alpinejs/alpine/pull/294&quot;&gt;#294&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;$el&lt;/code&gt; shortcut&lt;/li&gt; 
 &lt;li&gt;Change &lt;code&gt;@click.away&lt;/code&gt; to &lt;code&gt;@click.outside&lt;/code&gt;?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright ¬© 2019-2021 Caleb Porzio and contributors&lt;/p&gt; 
&lt;p&gt;Licensed under the MIT license, see &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mozilla/pdf.js</title>
      <link>https://github.com/mozilla/pdf.js</link>
      <description>&lt;p&gt;PDF Reader in JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PDF.js &lt;a href=&quot;https://github.com/mozilla/pdf.js/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/mozilla/pdf.js/workflows/CI/badge.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://mozilla.github.io/pdf.js/&quot;&gt;PDF.js&lt;/a&gt; is a Portable Document Format (PDF) viewer that is built with HTML5.&lt;/p&gt; 
&lt;p&gt;PDF.js is community-driven and supported by Mozilla. Our goal is to create a general-purpose, web standards-based platform for parsing and rendering PDFs.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;PDF.js is an open source project and always looking for more contributors. To get involved, visit:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/pdf.js/raw/master/.github/CONTRIBUTING.md&quot;&gt;Issue Reporting Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/pdf.js/wiki/Contributing&quot;&gt;Code Contribution Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/pdf.js/issues?direction=desc&amp;amp;labels=5-good-beginner-bug&amp;amp;page=1&amp;amp;sort=created&amp;amp;state=open&quot;&gt;Good Beginner Bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/pdf.js/projects&quot;&gt;Projects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Feel free to stop by our &lt;a href=&quot;https://chat.mozilla.org/#/room/#pdfjs:mozilla.org&quot;&gt;Matrix room&lt;/a&gt; for questions or guidance.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Online demo&lt;/h3&gt; 
&lt;p&gt;Please note that the ‚ÄúModern browsers‚Äù version assumes native support for features such as e.g. &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;, &lt;code&gt;ReadableStream&lt;/code&gt;, optional chaining, and nullish coalescing.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Modern browsers: https://mozilla.github.io/pdf.js/web/viewer.html&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Older browsers: https://mozilla.github.io/pdf.js/legacy/web/viewer.html&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Browser Extensions&lt;/h3&gt; 
&lt;h4&gt;Firefox&lt;/h4&gt; 
&lt;p&gt;PDF.js is built into version 19+ of Firefox.&lt;/p&gt; 
&lt;h4&gt;Chrome&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;The official extension for Chrome can be installed from the &lt;a href=&quot;https://chrome.google.com/webstore/detail/pdf-viewer/oemmndcbldboiebfnladdacbdfmadadm&quot;&gt;Chrome Web Store&lt;/a&gt;. &lt;em&gt;This extension is maintained by &lt;a href=&quot;https://github.com/Rob--W&quot;&gt;@Rob‚ÄìW&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Build Your Own - Get the code as explained below and issue &lt;code&gt;gulp chromium&lt;/code&gt;. Then open Chrome, go to &lt;code&gt;Tools &amp;gt; Extension&lt;/code&gt; and load the (unpackaged) extension from the directory &lt;code&gt;build/chromium&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting the Code&lt;/h2&gt; 
&lt;p&gt;To get a local copy of the current code, clone it using git:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/mozilla/pdf.js.git
$ cd pdf.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, install Node.js via the &lt;a href=&quot;https://nodejs.org&quot;&gt;official package&lt;/a&gt; or via &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;nvm&lt;/a&gt;. You need to install the gulp package globally (see also &lt;a href=&quot;https://github.com/gulpjs/gulp/raw/master/docs/getting-started.md#getting-started&quot;&gt;gulp‚Äôs getting started&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g gulp-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything worked out, install all dependencies for PDF.js:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, you need to start a local web server as some browsers do not allow opening PDF files using a &lt;code&gt;file://&lt;/code&gt; URL. Run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gulp server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and then you can open:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;http://localhost:8888/web/viewer.html&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please keep in mind that this requires a modern and fully up-to-date browser; refer to &lt;a href=&quot;https://github.com/mozilla/pdf.js/raw/master/README.md#building-pdfjs&quot;&gt;Building PDF.js&lt;/a&gt; for non-development usage of the PDF.js library.&lt;/p&gt; 
&lt;p&gt;It is also possible to view all test PDF files on the right side by opening:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;http://localhost:8888/test/pdfs/?frame&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building PDF.js&lt;/h2&gt; 
&lt;p&gt;In order to bundle all &lt;code&gt;src/&lt;/code&gt; files into two production scripts and build the generic viewer, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gulp generic
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need to support older browsers, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gulp generic-legacy
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will generate &lt;code&gt;pdf.js&lt;/code&gt; and &lt;code&gt;pdf.worker.js&lt;/code&gt; in the &lt;code&gt;build/generic/build/&lt;/code&gt; directory (respectively &lt;code&gt;build/generic-legacy/build/&lt;/code&gt;). Both scripts are needed but only &lt;code&gt;pdf.js&lt;/code&gt; needs to be included since &lt;code&gt;pdf.worker.js&lt;/code&gt; will be loaded by &lt;code&gt;pdf.js&lt;/code&gt;. The PDF.js files are large and should be minified for production.&lt;/p&gt; 
&lt;h2&gt;Using PDF.js in a web application&lt;/h2&gt; 
&lt;p&gt;To use PDF.js in a web application you can choose to use a pre-built version of the library or to build it from source. We supply pre-built versions for usage with NPM and Bower under the &lt;code&gt;pdfjs-dist&lt;/code&gt; name. For more information and examples please refer to the &lt;a href=&quot;https://github.com/mozilla/pdf.js/wiki/Setup-pdf.js-in-a-website&quot;&gt;wiki page&lt;/a&gt; on this subject.&lt;/p&gt; 
&lt;h2&gt;Including via a CDN&lt;/h2&gt; 
&lt;p&gt;PDF.js is hosted on several free CDNs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://www.jsdelivr.com/package/npm/pdfjs-dist&lt;/li&gt; 
 &lt;li&gt;https://cdnjs.com/libraries/pdf.js&lt;/li&gt; 
 &lt;li&gt;https://unpkg.com/pdfjs-dist/&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learning&lt;/h2&gt; 
&lt;p&gt;You can play with the PDF.js API directly from your browser using the live demos below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mozilla.github.io/pdf.js/examples/index.html#interactive-examples&quot;&gt;Interactive examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More examples can be found in the &lt;a href=&quot;https://github.com/mozilla/pdf.js/tree/master/examples/&quot;&gt;examples folder&lt;/a&gt;. Some of them are using the pdfjs-dist package, which can be built and installed in this repo directory via &lt;code&gt;gulp dist-install&lt;/code&gt; command.&lt;/p&gt; 
&lt;p&gt;For an introduction to the PDF.js code, check out the presentation by our contributor Julian Viereck:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://www.youtube.com/watch?v=Iv15UY-4Fg8&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More learning resources can be found at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/mozilla/pdf.js/wiki/Additional-Learning-Resources&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The API documentation can be found at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://mozilla.github.io/pdf.js/api/&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;Check out our FAQs and get answers to common questions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Talk to us on Matrix:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://chat.mozilla.org/#/room/#pdfjs:mozilla.org&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;File an issue:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/mozilla/pdf.js/issues/new&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Follow us on twitter: @pdfjs&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://twitter.com/pdfjs&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/logo.svg?sanitize=true&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
 &lt;li&gt;First-class integration with the &lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt; for systems with no gas fees!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/audit&quot;&gt;Audited&lt;/a&gt; by leading security firms (&lt;em&gt;last full audit on v2.0.0&lt;/em&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won‚Äôt break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you‚Äôre new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don‚Äôt need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts‚Äôs development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker‚Äôs Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to security@openzeppelin.org.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>semantic-release/semantic-release</title>
      <link>https://github.com/semantic-release/semantic-release</link>
      <description>&lt;p&gt;üì¶üöÄ Fully automated version management and package publishing&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot; style=&quot;border-bottom: none;&quot;&gt;üì¶üöÄ semantic-release&lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt;Fully automated version management and package publishing&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/semantic-release/semantic-release/discussions&quot;&gt; &lt;img alt=&quot;Join the community on GitHub Discussions&quot; src=&quot;https://img.shields.io/badge/Join%20the%20community-on%20GitHub%20Discussions-blue&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/semantic-release/semantic-release/actions?query=workflow%3ATest+branch%3Amaster&quot;&gt; &lt;img alt=&quot;Build states&quot; src=&quot;https://github.com/semantic-release/semantic-release/workflows/Test/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/#badge&quot;&gt; &lt;img alt=&quot;semantic-release&quot; src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/semantic-release&quot;&gt; &lt;img alt=&quot;npm latest version&quot; src=&quot;https://img.shields.io/npm/v/semantic-release/latest.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/semantic-release&quot;&gt; &lt;img alt=&quot;npm next version&quot; src=&quot;https://img.shields.io/npm/v/semantic-release/next.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/semantic-release&quot;&gt; &lt;img alt=&quot;npm beta version&quot; src=&quot;https://img.shields.io/npm/v/semantic-release/beta.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;semantic-release&lt;/strong&gt; automates the whole package release workflow including: determining the next version number, generating the release notes and publishing the package.&lt;/p&gt; 
&lt;p&gt;This removes the immediate connection between human emotions and version numbers, strictly following the &lt;a href=&quot;http://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt; specification.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Trust us, this will change your workflow for the better. ‚Äì &lt;a href=&quot;https://egghead.io/lessons/javascript-how-to-write-a-javascript-library-automating-releases-with-semantic-release&quot;&gt;egghead.io&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully automated release&lt;/li&gt; 
 &lt;li&gt;Enforce &lt;a href=&quot;https://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt; specification&lt;/li&gt; 
 &lt;li&gt;New features and fixes are immediately available to users&lt;/li&gt; 
 &lt;li&gt;Notify maintainers and users of new releases&lt;/li&gt; 
 &lt;li&gt;Use formalized commit message convention to document changes in the codebase&lt;/li&gt; 
 &lt;li&gt;Publish on different distribution channels (such as &lt;a href=&quot;https://docs.npmjs.com/cli/dist-tag&quot;&gt;npm dist-tags&lt;/a&gt;) based on git merges&lt;/li&gt; 
 &lt;li&gt;Integrate with your &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md#ci-configurations&quot;&gt;continuous integration workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Avoid potential errors associated with manual releases&lt;/li&gt; 
 &lt;li&gt;Support any &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md#package-managers-and-languages&quot;&gt;package managers and languages&lt;/a&gt; via &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/plugins.md&quot;&gt;plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Simple and reusable configuration via &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/shareable-configurations.md&quot;&gt;shareable configurations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;h3&gt;Commit message format&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;semantic-release&lt;/strong&gt; uses the commit messages to determine the type of changes in the codebase. Following formalized conventions for commit messages, &lt;strong&gt;semantic-release&lt;/strong&gt; automatically determines the next &lt;a href=&quot;https://semver.org&quot;&gt;semantic version&lt;/a&gt; number, generates a changelog and publishes the release.&lt;/p&gt; 
&lt;p&gt;By default &lt;strong&gt;semantic-release&lt;/strong&gt; uses &lt;a href=&quot;https://github.com/angular/angular/raw/master/CONTRIBUTING.md#-commit-message-format&quot;&gt;Angular Commit Message Conventions&lt;/a&gt;. The commit message format can be changed with the &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/configuration.md#options&quot;&gt;&lt;code&gt;preset&lt;/code&gt; or &lt;code&gt;config&lt;/code&gt; options&lt;/a&gt; of the &lt;a href=&quot;https://github.com/semantic-release/commit-analyzer#options&quot;&gt;@semantic-release/commit-analyzer&lt;/a&gt; and &lt;a href=&quot;https://github.com/semantic-release/release-notes-generator#options&quot;&gt;@semantic-release/release-notes-generator&lt;/a&gt; plugins.&lt;/p&gt; 
&lt;p&gt;Tools such as &lt;a href=&quot;https://github.com/commitizen/cz-cli&quot;&gt;commitizen&lt;/a&gt; or &lt;a href=&quot;https://github.com/conventional-changelog/commitlint&quot;&gt;commitlint&lt;/a&gt; can be used to help contributors and enforce valid commit messages.&lt;/p&gt; 
&lt;p&gt;Here is an example of the release type that will be done based on a commit messages:&lt;/p&gt; 
&lt;p&gt;| Commit message | Release type | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | | &lt;code&gt;fix(pencil): stop graphite breaking when too much pressure applied&lt;/code&gt; | Patch Release | | &lt;code&gt;feat(pencil): add &#39;graphiteWidth&#39; option&lt;/code&gt; | ~~Minor~~ Feature Release | | &lt;code&gt;perf(pencil): remove graphiteWidth option&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;code&gt;BREAKING CHANGE: The graphiteWidth option has been removed.&lt;/code&gt;&lt;br&gt;&lt;code&gt;The default graphite width of 10mm is always used for performance reasons.&lt;/code&gt; | ~~Major~~ Breaking Release |&lt;/p&gt; 
&lt;h3&gt;Automation with CI&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;semantic-release&lt;/strong&gt; is meant to be executed on the CI environment after every successful build on the release branch. This way no human is directly involved in the release process and the releases are guaranteed to be &lt;a href=&quot;http://sentimentalversioning.org&quot;&gt;unromantic and unsentimental&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Triggering a release&lt;/h3&gt; 
&lt;p&gt;For each new commits added to one of the release branches (for example &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;), with &lt;code&gt;git push&lt;/code&gt; or by merging a pull request or merging from another branch, a CI build is triggered and runs the &lt;code&gt;semantic-release&lt;/code&gt; command to make a release if there are codebase changes since the last release that affect the package functionalities.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;semantic-release&lt;/strong&gt; offers various ways to control the timing, the content and the audience of published releases. See example workflows in the following recipes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/distribution-channels.md#publishing-on-distribution-channels&quot;&gt;Using distribution channels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/maintenance-releases.md#publishing-maintenance-releases&quot;&gt;Maintenance releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/pre-releases.md#publishing-pre-releases&quot;&gt;Pre-releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Release steps&lt;/h3&gt; 
&lt;p&gt;After running the tests, the command &lt;code&gt;semantic-release&lt;/code&gt; will execute the following steps:&lt;/p&gt; 
&lt;p&gt;| Step | Description | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì‚Äì | | Verify Conditions | Verify all the conditions to proceed with the release. | | Get last release | Obtain the commit corresponding to the last release by analyzing &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Tagging&quot;&gt;Git tags&lt;/a&gt;. | | Analyze commits | Determine the type of release based on the commits added since the last release. | | Verify release | Verify the release conformity. | | Generate notes | Generate release notes for the commits added since the last release. | | Create Git tag | Create a Git tag corresponding to the new release version. | | Prepare | Prepare the release. | | Publish | Publish the release. | | Notify | Notify of new releases or errors. |&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;In order to use &lt;strong&gt;semantic-release&lt;/strong&gt; you need:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To host your code in a &lt;a href=&quot;https://git-scm.com&quot;&gt;Git repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Use a Continuous Integration service that allows you to &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/ci-configuration.md#authentication&quot;&gt;securely set up credentials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Git CLI version &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/FAQ.md#why-does-semantic-release-require-git-version--271&quot;&gt;2.7.1 or higher&lt;/a&gt; installed in your Continuous Integration environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; version &lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/FAQ.md#why-does-semantic-release-require-node-version--1018&quot;&gt;10.18 or higher&lt;/a&gt; installed in your Continuous Integration environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usage 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/getting-started.md#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/installation.md#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/ci-configuration.md#ci-configuration&quot;&gt;CI Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/configuration.md#configuration&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/plugins.md&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/workflow-configuration.md&quot;&gt;Workflow configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/usage/shareable-configurations.md&quot;&gt;Shareable configurations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Extending 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/extending/plugins-list.md&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/extending/shareable-configurations-list.md&quot;&gt;Shareable configuration&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Recipes 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md&quot;&gt;CI configurations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md&quot;&gt;Git hosted services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md&quot;&gt;Release workflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/recipes/README.md&quot;&gt;Package managers and languages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Developer guide 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/developer-guide/js-api.md&quot;&gt;JavaScript API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/developer-guide/plugin.md&quot;&gt;Plugins development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/developer-guide/shareable-configuration.md&quot;&gt;Shareable configuration development&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Support 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/resources.md&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/troubleshooting.md&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/node-version.md&quot;&gt;Node version requirement&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/docs/support/node-support-policy.md&quot;&gt;Node Support Policy&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get help&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/semantic-release&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/semantic-release/semantic-release/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/SemanticRelease&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Badge&lt;/h2&gt; 
&lt;p&gt;Let people know that your package is published using &lt;strong&gt;semantic-release&lt;/strong&gt; by including this badge in your readme.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/semantic-release/semantic-release&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&quot; alt=&quot;semantic-release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/gr2m&quot;&gt;&lt;img src=&quot;https://github.com/gr2m.png?size=100&quot; alt=&quot;Gregor Martynus&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/pvdlg&quot;&gt;&lt;img src=&quot;https://github.com/pvdlg.png?size=100&quot; alt=&quot;Pierre Vanduynslager&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/travi&quot;&gt;&lt;img src=&quot;https://github.com/travi.png?size=100&quot; alt=&quot;Matt Travi&quot;&gt;&lt;/a&gt; | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | | &lt;a href=&quot;https://github.com/gr2m&quot;&gt;Gregor Martynus&lt;/a&gt; | &lt;a href=&quot;https://github.com/pvdlg&quot;&gt;Pierre Vanduynslager&lt;/a&gt; | &lt;a href=&quot;https://github.com/travi&quot;&gt;Matt Travi&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;Alumni&lt;/h2&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/boennemann&quot;&gt;&lt;img src=&quot;https://github.com/boennemann.png?size=100&quot; alt=&quot;Stephan B√∂nnemann&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/relekang&quot;&gt;&lt;img src=&quot;https://github.com/relekang.png?size=100&quot; alt=&quot;Rolf Erik Lekang&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/jo&quot;&gt;&lt;img src=&quot;https://github.com/jo.png?size=100&quot; alt=&quot;Johannes J√∂rg Schmidt&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/finnp&quot;&gt;&lt;img src=&quot;https://github.com/finnp.png?size=100&quot; alt=&quot;Finn Pauls&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/christophwitzko&quot;&gt;&lt;img src=&quot;https://github.com/christophwitzko.png?size=100&quot; alt=&quot;Christoph Witzko&quot;&gt;&lt;/a&gt; | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì‚Äì | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì‚Äì | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | | &lt;a href=&quot;https://github.com/boennemann&quot;&gt;Stephan B√∂nnemann&lt;/a&gt; | &lt;a href=&quot;https://github.com/relekang&quot;&gt;Rolf Erik Lekang&lt;/a&gt; | &lt;a href=&quot;https://github.com/jo&quot;&gt;Johannes J√∂rg Schmidt&lt;/a&gt; | &lt;a href=&quot;https://github.com/finnp&quot;&gt;Finn Pauls&lt;/a&gt; | &lt;a href=&quot;https://github.com/christophwitzko&quot;&gt;Christoph Witzko&lt;/a&gt; |&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Kill all humans&quot; src=&quot;https://raw.githubusercontent.com/semantic-release/semantic-release/master/media/bender.png&quot;&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebookexperimental/Recoil</title>
      <link>https://github.com/facebookexperimental/Recoil</link>
      <description>&lt;p&gt;Recoil is an experimental state management library for React apps. It provides several capabilities that are difficult to achieve with React alone, while being compatible with the newest features of React.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Recoil ¬∑ &lt;a href=&quot;https://www.npmjs.com/package/recoil&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/recoil&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebookexperimental/Recoil/actions&quot;&gt;&lt;img src=&quot;https://github.com/facebookexperimental/Recoil/workflows/Node.js%20CI/badge.svg?sanitize=true&quot; alt=&quot;Node.js CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebookexperimental/Recoil/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/recoiljs&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/recoiljs?label=Follow%20Recoil&amp;amp;style=social&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Recoil is an experimental set of utilities for state management with React.&lt;/p&gt; 
&lt;p&gt;Please see the website: https://recoiljs.org&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The Recoil package lives in &lt;a href=&quot;https://www.npmjs.com/get-npm&quot;&gt;npm&lt;/a&gt;. To install the latest stable version, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you‚Äôre using &lt;a href=&quot;https://classic.yarnpkg.com/en/docs/install/&quot;&gt;yarn&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn add recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you‚Äôre using &lt;a href=&quot;https://cloud.google.com/community/tutorials/install-bower-dependencies-on-google-app-engine&quot;&gt;bower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;bower install --save recoil
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Development of Recoil happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving Recoil.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Recoil is &lt;a href=&quot;https://raw.githubusercontent.com/facebookexperimental/Recoil/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/draft-js</title>
      <link>https://github.com/facebook/draft-js</link>
      <description>&lt;p&gt;A React framework for building text editors.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;http://draftjs.org/&quot;&gt; &lt;img src=&quot;https://draftjs.org/img/draftjs-logo.svg?sanitize=true&quot; alt=&quot;draftjs-logo&quot; width=&quot;8%&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Draft.js &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://travis-ci.org/facebook/draft-js&quot;&gt; &lt;img src=&quot;https://img.shields.io/travis/facebook/draft-js/master.svg?style=flat&quot; alt=&quot;Build Status&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://yarn.pm/draft-js&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/draft-js.svg?style=flat&quot; alt=&quot;npm version&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://media.giphy.com/media/XHUjaxELpc11SiRSqN/giphy.gif&quot; alt=&quot;Live Demo&quot;&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Draft.js is a JavaScript rich text editor framework, built for React and backed by an immutable model.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible and Customizable:&lt;/strong&gt; We provide the building blocks to enable the creation of a broad variety of rich text composition experiences, from basic text styles to embedded media.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative Rich Text:&lt;/strong&gt; Draft.js fits seamlessly into &lt;a href=&quot;http://facebook.github.io/react/&quot;&gt;React&lt;/a&gt; applications, abstracting away the details of rendering, selection, and input behavior with a familiar declarative API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Immutable Editor State:&lt;/strong&gt; The Draft.js model is built with &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;immutable-js&lt;/a&gt;, offering an API with functional state updates and aggressively leveraging data persistence for scalable memory usage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://draftjs.org/docs/getting-started/&quot;&gt;Learn how to use Draft.js in your own project.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Draft.js is used in production on Facebook, including status and comment inputs, &lt;a href=&quot;https://www.facebook.com/notes/&quot;&gt;Notes&lt;/a&gt;, and &lt;a href=&quot;https://www.messenger.com&quot;&gt;messenger.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API Notice&lt;/h2&gt; 
&lt;p&gt;Before getting started, please be aware that we recently changed the API of Entity storage in Draft.&lt;/p&gt; 
&lt;p&gt;Previously, the old API was set to be removed in &lt;code&gt;v0.11.0&lt;/code&gt;. Since, the plans have changed‚Äî &lt;code&gt;v0.11.0&lt;/code&gt; still supports the old API and &lt;code&gt;v0.12.0&lt;/code&gt; will remove it. Refer to &lt;a href=&quot;https://draftjs.org/docs/v0-10-api-migration&quot;&gt;the docs&lt;/a&gt; for more information and information on how to migrate.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm install --save draft-js react react-dom

or

yarn add draft-js react react-dom
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Draft.js depends on React and React DOM which must also be installed.&lt;/p&gt; 
&lt;h3&gt;Using Draft.js&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import {Editor, EditorState} from &#39;draft-js&#39;;

function MyEditor() {

  
  constructor(props) {
    super(props);
    this.state = {editorState: EditorState.createEmpty()};
    this.onChange = (editorState) =&amp;gt; this.setState({editorState});
    this.setEditor = (editor) =&amp;gt; {
      this.editor = editor;
    };
    this.focusEditor = () =&amp;gt; {
      if (this.editor) {
        this.editor.focus();
      }
    };
  }

  componentDidMount() {
    this.focusEditor();
  }

  render() {
    return (
      &amp;lt;div style={styles.editor} onClick={this.focusEditor}&amp;gt;
        &amp;lt;Editor
          ref={this.setEditor}
          editorState={this.state.editorState}
          onChange={this.onChange}
        /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

const styles = {
  editor: {
    border: &#39;1px solid gray&#39;,
    minHeight: &#39;6em&#39;
  }
};

ReactDOM.render(
  &amp;lt;MyEditor /&amp;gt;,
  document.getElementById(&#39;container&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since the release of React 16.8, you can use &lt;a href=&quot;https://reactjs.org/docs/hooks-intro.html&quot;&gt;Hooks&lt;/a&gt; as a way to work with &lt;code&gt;EditorState&lt;/code&gt; without using a class.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &quot;react&quot;;
import { Editor, EditorState } from &quot;draft-js&quot;;
import &quot;draft-js/dist/Draft.css&quot;;

export default function MyEditor() {
  const [editorState, setEditorState] = React.useState(() =&amp;gt;
    EditorState.createEmpty()
  );

  const editor = React.useRef(null);
  function focusEditor() {
    editor.current.focus();
  }

  return (
    &amp;lt;div
      style={{ border: &quot;1px solid black&quot;, minHeight: &quot;6em&quot;, cursor: &quot;text&quot; }}
      onClick={focusEditor}
    &amp;gt;
      &amp;lt;Editor
        ref={editor}
        editorState={editorState}
        onChange={setEditorState}
        placeholder=&quot;Write something!&quot;
      /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the editor itself is only as tall as its contents. In order to give users a visual cue, we recommend setting a border and a minimum height via the &lt;code&gt;.DraftEditor-root&lt;/code&gt; CSS selector, or using a wrapper div like in the above example.&lt;/p&gt; 
&lt;p&gt;Because Draft.js supports unicode, you must have the following meta tag in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; block of your HTML file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Further examples of how Draft.js can be used are provided in the &lt;code&gt;/examples&lt;/code&gt; directory of this repo.&lt;/p&gt; 
&lt;h3&gt;Building Draft.js&lt;/h3&gt; 
&lt;p&gt;Draft.js is built with &lt;a href=&quot;https://classic.yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; v1. Using other package managers mgiht work, but is not officially supported.&lt;/p&gt; 
&lt;p&gt;To clone and build, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/facebook/draft-js.git
cd draft-js
yarn install
yarn run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;p&gt;To run the examples in the &lt;code&gt;/examples&lt;/code&gt; directory, first build Draft.js locally as described above. Then, open the example HTML files in your browser.&lt;/p&gt; 
&lt;h2&gt;Browser Support&lt;/h2&gt; 
&lt;p&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_32x32.png&quot; alt=&quot;IE / Edge&quot;&gt; &lt;br&gt; IE / Edge | &lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_32x32.png&quot; alt=&quot;Firefox&quot;&gt; &lt;br&gt; Firefox | &lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_32x32.png&quot; alt=&quot;Chrome&quot;&gt; &lt;br&gt; Chrome | &lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_32x32.png&quot; alt=&quot;Safari&quot;&gt; &lt;br&gt; Safari | &lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari-ios/safari-ios_32x32.png&quot; alt=&quot;iOS Safari&quot;&gt; &lt;br&gt;iOS Safari | &lt;img src=&quot;https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_32x32.png&quot; alt=&quot;Chrome for Android&quot;&gt; &lt;br&gt; Chrome for Android | | ‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî | | IE11, Edge [1, 2]| last 2 versions| last 2 versions| last 2 versions| not fully supported [3] | not fully supported [3]&lt;/p&gt; 
&lt;p&gt;[1] May need a shim or a polyfill for some syntax used in Draft.js (&lt;a href=&quot;https://draftjs.org/docs/advanced-topics-issues-and-pitfalls/#polyfills&quot;&gt;docs&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;[2] IME inputs have known issues in these browsers, especially Korean (&lt;a href=&quot;https://draftjs.org/docs/advanced-topics-issues-and-pitfalls/#ime-and-internet-explorer&quot;&gt;docs&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;[3] There are known issues with mobile browsers, especially on Android (&lt;a href=&quot;https://draftjs.org/docs/advanced-topics-issues-and-pitfalls/#mobile-not-yet-supported&quot;&gt;docs&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Resources and Ecosystem&lt;/h2&gt; 
&lt;p&gt;Check out this curated list of articles and open-sourced projects/utilities: &lt;a href=&quot;https://github.com/nikgraf/awesome-draft-js&quot;&gt;Awesome Draft-JS&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discussion and Support&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href=&quot;https://draftjs.herokuapp.com&quot;&gt;Slack team&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;We welcome pull requests. Learn how to &lt;a href=&quot;https://github.com/facebook/draft-js/raw/master/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Draft.js is &lt;a href=&quot;https://github.com/facebook/draft-js/raw/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Examples provided in this repository and in the documentation are separately licensed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>orkestral/venom</title>
      <link>https://github.com/orkestral/venom</link>
      <description>&lt;p&gt;Venom is the most complete javascript library for Whatsapp, 100% Open Source.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üï∑Venom Botüï∏&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://s2.click/venom.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/venom-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/venom-bot.svg?color=green&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/node/v/venom-bot&quot; alt=&quot;node&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/venom-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/venom-bot.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://isitmaintained.com/project/orkestral/venom&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;http://isitmaintained.com/badge/resolution/orkestral/venom.svg?sanitize=true&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://isitmaintained.com/project/orkestral/venom&quot; title=&quot;Percentage of issues still open&quot;&gt;&lt;img src=&quot;http://isitmaintained.com/badge/open/orkestral/venom.svg?sanitize=true&quot; alt=&quot;Percentage of issues still open&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/qCJ95FVbzR&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/772885202351292426?color=blueviolet&amp;amp;label=discord&amp;amp;style=flat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/orkestral/venom/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/orkestral/venom/build.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/orkestral/venom/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/orkestral/venom/lint.svg?label=lint&quot; alt=&quot;Lint Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/release-it/release-it&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%93%A6%F0%9F%9A%80-release--it-e10079.svg?sanitize=true&quot; alt=&quot;release-it&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Venom is a high-performance system developed with JavaScript to create a bot for WhatsApp, support for creating any interaction, such as customer service, media sending, sentence recognition based on artificial intelligence and all types of design architecture for WhatsApp.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://orkestral.github.io/venom/pages/Getting%20Started/creating-client.html&quot;&gt;Getting Started&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://orkestral.github.io/venom/pages/Getting%20Started/basic-functions.html&quot;&gt;Basic Function&lt;/a&gt; ‚Ä¢ &lt;a href=&quot;https://orkestral.github.io/venom&quot;&gt;Documentation&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Medium Posts&lt;/h2&gt; 
&lt;p&gt;&lt;img height=&quot;100&quot; src=&quot;https://miro.medium.com/max/1002/1*s986xIGqhfsN8U--09_AdA.png&quot;&gt;  &lt;br&gt; &lt;a href=&quot;https://medium.com/venom-bot&quot; title=&quot;Venom in Medium&quot;&gt;&lt;strong&gt;Access @Venom Posts In Medium&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; &lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Request Support Free Group Access In Whatsapp&lt;/h2&gt; 
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://web.whatsapp.com/send?phone=556181590153&amp;amp;text=I%20want%20access%20to%20the%20WhatsApp%20Venom%20support%20group&quot;&gt;&lt;img title=&quot;whatzapp&quot; height=&quot;100&quot; width=&quot;375&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/WhatsApp_logo.svg/2000px-WhatsApp_logo.svg.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üï∑üï∑ Functions Venomüï∑üï∑&lt;/h2&gt; 
&lt;p&gt;| | | | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äî | | üöª Automatic QR Refresh | ‚úî | | üìÅ Send &lt;strong&gt;text, image, video, audio and docs&lt;/strong&gt; | ‚úî | | üë• Get &lt;strong&gt;contacts, chats, groups, group members, Block List&lt;/strong&gt; | ‚úî | | üìû Send contacts | ‚úî | | Send stickers | ‚úî | | Send stickers GIF | ‚úî | | Multiple Sessions | ‚úî | | ‚è© Forward Messages | ‚úî | | üì• Receive message | ‚úî | | üë§ insert user section | ‚úî | | üìç Send location!! | ‚úî | | üï∏üï∏ &lt;strong&gt;and much more&lt;/strong&gt; | ‚úî |&lt;/p&gt; 
&lt;p&gt;Documentation at https://orkestral.github.io/venom/index.html&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm i --save venom-bot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or for &lt;a href=&quot;https://github.com/orkestral/venom/releases/tag/nightly&quot;&gt;Nightly releases&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm i --save https://github.com/orkestral/venom/releases/download/nightly/venom-bot-nightly.tgz
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Supports ES6
// import { create, Whatsapp } from &#39;venom-bot&#39;;
const venom = require(&#39;venom-bot&#39;);

venom
  .create()
  .then((client) =&amp;gt; start(client))
  .catch((erro) =&amp;gt; {
    console.log(erro);
  });

function start(client) {
  client.onMessage((message) =&amp;gt; {
    if (message.body === &#39;Hi&#39; &amp;amp;&amp;amp; message.isGroupMsg === false) {
      client
        .sendText(message.from, &#39;Welcome Venom üï∑&#39;)
        .then((result) =&amp;gt; {
          console.log(&#39;Result: &#39;, result); //return object success
        })
        .catch((erro) =&amp;gt; {
          console.error(&#39;Error when sending: &#39;, erro); //return object error
        });
    }
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;After executing &lt;code&gt;create()&lt;/code&gt; function, &lt;strong&gt;venom&lt;/strong&gt; will create an instance of whatsapp web. If you are not logged in, it will print a QR code in the terminal. Scan it with your phone and you are ready to go!&lt;/h5&gt; 
&lt;h5&gt;Venom will remember the session so there is no need to authenticate everytime.&lt;/h5&gt; 
&lt;h5&gt;Multiples sessions can be created at the same time by pasing a session name to &lt;code&gt;create()&lt;/code&gt; function:&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Init sales whatsapp bot
venom.create(&#39;sales&#39;).then((salesClient) =&amp;gt; {...});

// Init support whatsapp bot
venom.create(&#39;support&#39;).then((supportClient) =&amp;gt; {...});
&lt;/code&gt;&lt;/pre&gt; 
&lt;br&gt; 
&lt;h2&gt;Optional create parameters&lt;/h2&gt; 
&lt;p&gt;Venom &lt;code&gt;create()&lt;/code&gt; method third parameter can have the following optional parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const venom = require(&#39;venom-bot&#39;);

venom
  .create(
    //session
    &#39;sessionName&#39;, //Pass the name of the client you want to start the bot
    //catchQR
    (base64Qrimg, asciiQR, attempts, urlCode) =&amp;gt; {
      console.log(&#39;Number of attempts to read the qrcode: &#39;, attempts);
      console.log(&#39;Terminal qrcode: &#39;, asciiQR);
      console.log(&#39;base64 image string qrcode: &#39;, base64Qrimg);
      console.log(&#39;urlCode (data-ref): &#39;, urlCode);
    },
    // statusFind
    (statusSession, session) =&amp;gt; {
      console.log(&#39;Status Session: &#39;, statusSession); //return isLogged || notLogged || browserClose || qrReadSuccess || qrReadFail || autocloseCalled || desconnectedMobile || deleteToken || chatsAvailable || deviceNotConnected || serverWssNotConnected || noOpenBrowser
      //Create session wss return &quot;serverClose&quot; case server for close
      console.log(&#39;Session name: &#39;, session);
    },
    // options
    {
      folderNameToken: &#39;tokens&#39;, //folder name when saving tokens
      mkdirFolderToken: &#39;&#39;, //folder directory tokens, just inside the venom folder, example:  { mkdirFolderToken: &#39;/node_modules&#39;, } //will save the tokens folder in the node_modules directory
      headless: true, // Headless chrome
      devtools: false, // Open devtools by default
      useChrome: true, // If false will use Chromium instance
      debug: false, // Opens a debug session
      logQR: true, // Logs QR automatically in terminal
      browserWS: &#39;&#39;, // If u want to use browserWSEndpoint
      browserArgs: [&#39;&#39;], // Parameters to be added into the chrome browser instance
      puppeteerOptions: {}, // Will be passed to puppeteer.launch
      disableSpins: true, // Will disable Spinnies animation, useful for containers (docker) for a better log
      disableWelcome: true, // Will disable the welcoming message which appears in the beginning
      updatesLog: true, // Logs info updates automatically in terminal
      autoClose: 60000, // Automatically closes the venom-bot only when scanning the QR code (default 60 seconds, if you want to turn it off, assign 0 or false)
      createPathFileToken: false, //creates a folder when inserting an object in the client&#39;s browser, to work it is necessary to pass the parameters in the function create browserSessionToken
    },
    // BrowserSessionToken
    // To receive the client&#39;s token use the function await clinet.getSessionTokenBrowser()
    {
      WABrowserId: &#39;&quot;UnXjH.....&quot;&#39;,
      WASecretBundle:
        &#39;{&quot;key&quot;:&quot;+i/nRgWJ....&quot;,&quot;encKey&quot;:&quot;kGdMR5t....&quot;,&quot;macKey&quot;:&quot;+i/nRgW....&quot;}&#39;,
      WAToken1: &#39;&quot;0i8....&quot;&#39;,
      WAToken2: &#39;&quot;1@lPpzwC....&quot;&#39;,
    },
    // BrowserInstance
    (browser, waPage) =&amp;gt; {
      console.log(&quot;Browser PID:&quot;, browser.process().pid);
      waPage.screenshot({path: &#39;screenshot.png&#39;});
    }
  )
  .then((client) =&amp;gt; {
    start(client);
  })
  .catch((erro) =&amp;gt; {
    console.log(erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Callback Status Session&lt;/h2&gt; 
&lt;p&gt;Gets the return if the session is &lt;code&gt;isLogged&lt;/code&gt; or &lt;code&gt;notLogged&lt;/code&gt; or &lt;code&gt;browserClose&lt;/code&gt; or &lt;code&gt;qrReadSuccess&lt;/code&gt; or &lt;code&gt;qrReadFail&lt;/code&gt; or &lt;code&gt;autocloseCalled&lt;/code&gt; or &lt;code&gt;desconnectedMobile&lt;/code&gt; or &lt;code&gt;deleteToken&lt;/code&gt; or &lt;code&gt;chatsAvailable&lt;/code&gt; or &lt;code&gt;deviceNotConnected&lt;/code&gt; or &lt;code&gt;serverWssNotConnected&lt;/code&gt; or &lt;code&gt;noOpenBrowser&lt;/code&gt; or &lt;code&gt;Create session wss return &quot;serverClose&quot; case server for close&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;| Status | Condition | | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | | &lt;code&gt;isLogged&lt;/code&gt; | When the user is already logged in to the browser | | &lt;code&gt;notLogged&lt;/code&gt; | When the user is not connected to the browser, it is necessary to scan the QR code through the cell phone in the option WhatsApp Web | | &lt;code&gt;browserClose&lt;/code&gt; | If the browser is closed this parameter is returned | | &lt;code&gt;qrReadSuccess&lt;/code&gt; | If the user is not logged in, the QR code is passed on the terminal a callback is returned. After the correct reading by cell phone this parameter is returned | | &lt;code&gt;qrReadFail&lt;/code&gt; | If the browser stops when the QR code scan is in progress, this parameter is returned | | &lt;code&gt;autocloseCalled&lt;/code&gt; | The browser was closed using the autoClose command | | &lt;code&gt;desconnectedMobile&lt;/code&gt; | Client has desconnected in to mobile | | &lt;code&gt;serverClose&lt;/code&gt; | Client has desconnected in to wss | | &lt;code&gt;deleteToken&lt;/code&gt; | If you pass true within the function &lt;code&gt;client.getSessionTokenBrowser(true)&lt;/code&gt; | | &lt;code&gt;chatsAvailable&lt;/code&gt; | When Venom is connected to the chat list | | &lt;code&gt;deviceNotConnected&lt;/code&gt; | Chat not available because the phone is disconnected &lt;code&gt;(Trying to connect to the phone)&lt;/code&gt; | | &lt;code&gt;serverWssNotConnected&lt;/code&gt;| The address wss was not found! | | &lt;code&gt;noOpenBrowser&lt;/code&gt; | It was not found in the browser, or some command is missing in args |&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const venom = require(&#39;venom-bot&#39;);
venom
  .create(
    &#39;sessionName&#39;,
    undefined,
    (statusSession, session) =&amp;gt; {
      console.log(&#39;Status Session: &#39;, statusSession);
      //return isLogged || notLogged || browserClose || qrReadSuccess || qrReadFail || autocloseCalled || desconnectedMobile || deleteToken || chatsAvailable || deviceNotConnected || serverWssNotConnected || noOpenBrowser
      //Create session wss return &quot;serverClose&quot; case server for close
      console.log(&#39;Session name: &#39;, session);
    },
    undefined
  )
  .then((client) =&amp;gt; {
    start(client);
  })
  .catch((erro) =&amp;gt; {
    console.log(erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Exporting QR Code&lt;/h2&gt; 
&lt;p&gt;By default QR code will appear on the terminal. If you need to pass the QR somewhere else heres how:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const fs = require(&#39;fs&#39;);
const venom = require(&#39;venom-bot&#39;);

venom
  .create(
    &#39;sessionName&#39;,
    (base64Qr, asciiQR, attempts, urlCode) =&amp;gt; {
      console.log(asciiQR); // Optional to log the QR in the terminal
      var matches = base64Qr.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/),
        response = {};

      if (matches.length !== 3) {
        return new Error(&#39;Invalid input string&#39;);
      }
      response.type = matches[1];
      response.data = new Buffer.from(matches[2], &#39;base64&#39;);

      var imageBuffer = response;
      require(&#39;fs&#39;).writeFile(
        &#39;out.png&#39;,
        imageBuffer[&#39;data&#39;],
        &#39;binary&#39;,
        function (err) {
          if (err != null) {
            console.log(err);
          }
        }
      );
    },
    undefined,
    { logQR: false }
  )
  .then((client) =&amp;gt; {
    start(client);
  })
  .catch((erro) =&amp;gt; {
    console.log(erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Downloading Files&lt;/h2&gt; 
&lt;p&gt;Puppeteer takes care of the file downloading. The decryption is being done as fast as possible (outruns native methods). Supports big files!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import fs = require(&#39;fs&#39;);
import mime = require(&#39;mime-types&#39;);

client.onMessage( async (message) =&amp;gt; {
  if (message.isMedia === true || message.isMMS === true) {
    const buffer = await client.decryptFile(message);
    // At this point you can do whatever you want with the buffer
    // Most likely you want to write it into a file
    const fileName = `some-file-name.${mime.extension(message.mimetype)}`;
    await fs.writeFile(fileName, buffer, (err) =&amp;gt; {
      ...
    });
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basic Functions (usage)&lt;/h2&gt; 
&lt;p&gt;Not every available function is listed, for further look, every function available can be found in &lt;a href=&quot;https://raw.githubusercontent.com/orkestral/venom/master/src/api/layers&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/orkestral/venom/master/src/lib/wapi/functions&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Chatting&lt;/h3&gt; 
&lt;h5&gt;Here, &lt;code&gt;chatId&lt;/code&gt; could be &lt;code&gt;&amp;lt;phoneNumber&amp;gt;@c.us&lt;/code&gt; or &lt;code&gt;&amp;lt;phoneNumber&amp;gt;-&amp;lt;groupId&amp;gt;@g.us&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
// Send audio file MP3
await client.sendVoice(&#39;000000000000@c.us&#39;, &#39;./audio.mp3&#39;).then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send audio file base64
await client.sendVoiceBase64(&#39;000000000000@c.us&#39;, base64MP3)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send contact
await client
  .sendContactVcard(&#39;000000000000@c.us&#39;, &#39;111111111111@c.us&#39;, &#39;Name of contact&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send a list of contact cards
await client
  .sendContactVcardList(&#39;000000000000@c.us&#39;, [
    &#39;111111111111@c.us&#39;,
    &#39;222222222222@c.us&#39;,
  ])
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send basic text
await client
  .sendText(&#39;000000000000@c.us&#39;, &#39;üëã Hello from venom!&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send location
await client
  .sendLocation(&#39;000000000000@c.us&#39;, &#39;-13.6561589&#39;, &#39;-69.7309264&#39;, &#39;Brasil&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Automatically sends a link with the auto generated link preview. You can also add a custom message to be added.
await client
  .sendLinkPreview(
    &#39;000000000000@c.us&#39;,
    &#39;https://www.youtube.com/watch?v=V1bFr2SWP1I&#39;,
    &#39;Kamakawiwo ole&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send image (you can also upload an image using a valid HTTP protocol)
await client
  .sendImage(
    &#39;000000000000@c.us&#39;,
    &#39;path/to/img.jpg&#39;,
    &#39;image-name&#39;,
    &#39;Caption text&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

  
// Send image file base64
await client.sendImageFromBase64(&#39;000000000000@c.us&#39;, base64Image, &quot;name file&quot;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send file (venom will take care of mime types, just need the path)
// you can also upload an image using a valid HTTP protocol
await client
  .sendFile(
    &#39;000000000000@c.us&#39;,
    &#39;path/to/file.pdf&#39;,
    &#39;file_name&#39;,
    &#39;See my file in pdf&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Sends file
// base64 parameter should have mime type already defined
await client
  .sendFileFromBase64(
    &#39;000000000000@c.us&#39;,
    base64PDF,
    &#39;file_name.pdf&#39;,
    &#39;See my file in pdf&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Generates sticker from the provided animated gif image and sends it (Send image as animated sticker)
// image path imageBase64 A valid gif and webp image is required. You can also send via http/https (http://www.website.com/img.gif)
await client
  .sendImageAsStickerGif(&#39;000000000000@c.us&#39;, &#39;./image.gif&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Generates sticker from given image and sends it (Send Image As Sticker)
// image path imageBase64 A valid png, jpg and webp image is required. You can also send via http/https (http://www.website.com/img.jpg)
await client
  .sendImageAsSticker(&#39;000000000000@c.us&#39;, &#39;./image.jpg&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Forwards messages
await client.forwardMessages(
  &#39;000000000000@c.us&#39;,
  [&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11609&#39;,&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11777&#39;]
).then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
})
.catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
});

// Send @tagged message
await client.sendMentioned(
  &#39;000000000000@c.us&#39;,
  &#39;Hello @5218113130740 and @5218243160777!&#39;,
  [&#39;5218113130740&#39;, &#39;5218243160777&#39;]
);

// Reply to a message
await client.reply(
  &#39;000000000000@c.us&#39;,
  &#39;This is a reply!&#39;,
  &#39;true_551937311025@c.us_7C22WHCB6DKYHJKQIEN9&#39;
).then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
}).catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
});

// Send message with options
await client.
        .sendMessageOptions(
          &#39;000000000000@c.us&#39;,
          &#39;This is a reply!&#39;,
           {
              quotedMessageId: reply,
            }
        )
        .then((retorno) =&amp;gt; {
          resp = retorno;
        })
        .catch((e) =&amp;gt; {
          console.log(e);
        });

// Send gif
await client.sendVideoAsGif(
  &#39;000000000000@c.us&#39;,
  &#39;path/to/video.mp4&#39;,
  &#39;video.gif&#39;,
  &#39;Gif image file&#39;
);

//checks and returns whether a message and a reply
// exemple: 
// await client.onMessage(async (message) =&amp;gt; {
//     console.log(await client.returnReply(message)); // replicated message
//     console.log(message.body ); //customer message
//   })
checkReply = await client.returnReply(messagem);

// Send seen ‚úîÔ∏è‚úîÔ∏è
await client.sendSeen(&#39;000000000000@c.us&#39;);

// Start typing...
await client.startTyping(&#39;000000000000@c.us&#39;);

// Stop typing
await client.stopTyping(&#39;000000000000@c.us&#39;);

// Set chat state (0: Typing, 1: Recording, 2: Paused)
await client.setChatState(&#39;000000000000@c.us&#39;, 0 | 1 | 2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Retrieving Data&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Retrieve all chats
const chats = await client.getAllChats();

//Retrieves all chats new messages
const chatsAllNew = getAllChatsNewMsg();

//Retrieves all chats Contacts
const contacts = await client.getAllChatsContacts();

//Retrieve all contacts new messages
const contactNewMsg = await client.getChatContactNewMsg();

// Retrieve all groups
const chats = await client.getAllChatsGroups();

//Retrieve all groups new messages
const groupNewMsg = await client.getChatGroupNewMsg();

//Retrieves all chats Transmission list
const transmission = await client.getAllChatsTransmission();

// Retrieve contacts
const contacts = await client.getAllContacts();

// Returns a list of mute and non-mute users
// &quot;all&quot; List all mutes
// &quot;toMute&quot; List all silent chats
// &quot;noMute&quot; List all chats without silence
const listMute = await client.getListMute(&#39;all&#39;);

// Retrieve the browser session token
// if you want to delete the token file -&amp;gt; const browserSessionToken = await client.getSessionTokenBrowser(true);
const browserSessionToken = await client.getSessionTokenBrowser();

// Calls your list of blocked contacts (returns an array)
const getBlockList = await client.getBlockList();

// Retrieve messages in chat
//chatID chat id
//includeMe will be by default true, if you do not want to pass false
//includeNotifications will be by default true, if you do not want to pass false
//const Messages = await client.getAllMessagesInChat(chatID, includeMe, includeNotifications)
const Messages = await client.getAllMessagesInChat(&#39;000000000000@c.us&#39;);

// Retrieve more chat message
const moreMessages = await client.loadEarlierMessages(&#39;000000000000@c.us&#39;);

// Retrieve all messages in chat
const allMessages = await client.loadAndGetAllMessagesInChat(
  &#39;000000000000@c.us&#39;
);

// Retrieve contact status
const status = await client.getStatus(&#39;000000000000@c.us&#39;);

// Retrieve user profile
const user = await client.getNumberProfile(&#39;000000000000@c.us&#39;);

// Retrieve all unread message
const messages = await client.getAllUnreadMessages();

// Retrieve profile fic (as url)
const url = await client.getProfilePicFromServer(&#39;000000000000@c.us&#39;);

// Retrieve chat/conversation
const chat = await client.getChat(&#39;000000000000@c.us&#39;);

// Check if the number exists
const chat = await client.checkNumberStatus(&#39;000000000000@c.us&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Group Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// groupId or chatId: leaveGroup 52123123-323235@g.us

// Leave group
await client.leaveGroup(&#39;00000000-000000@g.us&#39;);

// Get group members
await client.getGroupMembers(&#39;00000000-000000@g.us&#39;);

// Get group members ids
await client.getGroupMembersIds(&#39;00000000-000000@g.us&#39;);

// Generate group invite url link
await client.getGroupInviteLink(&#39;00000000-000000@g.us&#39;);

// Create group (title, participants to add)
await client.createGroup(&#39;Group name&#39;, [
  &#39;111111111111@c.us&#39;,
  &#39;222222222222@c.us&#39;,
]);

// Remove participant
await client.removeParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Add participant
await client.addParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Promote participant (Give admin privileges)
await client.promoteParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Demote particiapnt (Revoke admin privileges)
await client.demoteParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Get group admins
await client.getGroupAdmins(&#39;00000000-000000@g.us&#39;);

// Return the group status, jid, description from it&#39;s invite link
await client.getGroupInfoFromInviteLink(InviteCode);

// Join a group using the group invite code
await client.joinGroup(InviteCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Profile Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Set client status
await client.setProfileStatus(&#39;On vacations! ‚úàÔ∏è&#39;);

// Set client profile name
await client.setProfileName(&#39;Venom bot&#39;);

// Set client profile photo
await client.setProfilePic(&#39;path/to/image.jpg&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Device Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Delete the Service Worker
await client.killServiceWorker();

// Load the service again
await client.restartService();

// Get device info
await client.getHostDevice();

// Get connection state
await client.getConnectionState();

// Get battery level
await client.getBatteryLevel();

// Is connected
await client.isConnected();

// Get whatsapp web version
await client.getWAVersion();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Listen to messages
client.onMessage(message =&amp;gt; {
  ...
})

// Listen to state changes
client.onStateChange(state =&amp;gt; {
  ...
});

// Listen to ack&#39;s
// See the status of the message when sent.
// When receiving the confirmation object, &quot;ack&quot; may return a number, look {@link AckType} for details:
// -7 = MD_DOWNGRADE,
// -6 = INACTIVE,
// -5 = CONTENT_UNUPLOADABLE,
// -4 = CONTENT_TOO_BIG,
// -3 = CONTENT_GONE,
// -2 = EXPIRED,
// -1 = FAILED,
//  0 = CLOCK,
//  1 = SENT,
//  2 = RECEIVED,
//  3 = READ,
//  4 = PLAYED =

client.onAck(ack =&amp;gt; {
  ...
});

// Listen to live location
// chatId: &#39;phone@c.us&#39;
client.onLiveLocation(&quot;000000000000@c.us&quot;, (liveLocation) =&amp;gt; {
  ...
});

// chatId looks like this: &#39;5518156745634-1516512045@g.us&#39;
// Event interface is in here: https://github.com/s2click/venom/blob/master/src/api/model/participant-event.ts
client.onParticipantsChanged(&quot;000000000000@c.us&quot;, (event) =&amp;gt; {
  ...
});

// Listen when client has been added to a group
client.onAddedToGroup(chatEvent =&amp;gt; {
  ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Pin chat and Unpin chat messages with true or false
// Pin chat, non-existent (optional)

await client
  .pinChat(chatId, true, false)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

///mute a contact
await client
  .sendMute(
    &#39;000000000000@c.us&#39;, //contact mute
    30, //duration of silence, example: 30 minutes
    &#39;minutes&#39; ///kind of silence &quot;hours&quot; &quot;minutes&quot; &quot;year&quot;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

///unmute contact
await client
  .sendMute(
    &#39;000000000000@c.us&#39; //contact unmute
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Change the theme
// string types &quot;dark&quot; or &quot;light&quot;
await client.setTheme(&#39;dark&#39;);

// Receive the current theme
// returns string light or dark
await client.getTheme();

// Delete chat
await client.deleteChat(&#39;000000000000@c.us&#39;);

// Clear chat messages
await client.clearChatMessages(&#39;000000000000@c.us&#39;);

// Archive and unarchive chat messages with true or false
await client.archiveChat(chatId, true);

// Delete message (last parameter: delete only locally)
await client.deleteMessage(&#39;000000000000@c.us&#39;, [&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11609&#39;,&#39;false_000000000000@c.us_B70847EE89E22D20FB86ECA0C1B11777&#39;],)
.then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
})
.catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
});

// Mark chat as not seen (returns true if it works)
await client.markUnseenMessage(&#39;000000000000@c.us&#39;);

// Blocks a user (returns true if it works)
await client.blockContact(&#39;000000000000@c.us&#39;);

// Unlocks contacts (returns true if it works)
await client.unblockContact(&#39;000000000000@c.us&#39;);

// Retrieve a number profile / check if contact is a valid whatsapp number
const profile = await client.getNumberProfile(&#39;000000000000@c.us&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Misc&lt;/h2&gt; 
&lt;p&gt;There are some tricks for a better usage of venom.&lt;/p&gt; 
&lt;h4&gt;Keep session alive:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// function to detect conflits and change status
// Force it to keep the current session
// Possible state values:
// CONFLICT
// CONNECTED
// DEPRECATED_VERSION
// OPENING
// PAIRING
// PROXYBLOCK
// SMB_TOS_BLOCK
// TIMEOUT
// TOS_BLOCK
// UNLAUNCHED
// UNPAIRED
// UNPAIRED_IDLE
client.onStateChange((state) =&amp;gt; {
  console.log(&#39;State changed: &#39;, state);
  // force whatsapp take over
  if (&#39;CONFLICT&#39;.includes(state)) client.useHere();
  // detect disconnect on whatsapp
  if (&#39;UNPAIRED&#39;.includes(state)) console.log(&#39;logout&#39;);
});

// DISCONNECTED
// SYNCING
// RESUMING
// CONNECTED
let time = 0;
client.onStreamChange((state) =&amp;gt; {
  console.log(&#39;State Connection Stream: &#39; + state);
  clearTimeout(time);
  if (state === &#39;DISCONNECTED&#39; || state === &#39;SYNCING&#39;) {
    time = setTimeout(() =&amp;gt; {
      client.close();
    }, 80000);
  }
});

// function to detect incoming call
client.onIncomingCall(async (call) =&amp;gt; {
  console.log(call);
  client.sendText(call.peerJid, &quot;Sorry, I still can&#39;t answer calls&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Closing (saving) sessions&lt;/h4&gt; 
&lt;p&gt;Close the session properly to ensure the session is saved for the next time you log in (So it won‚Äôt ask for QR scan again). So instead of CTRL+C,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Catch ctrl+C
process.on(&#39;SIGINT&#39;, function() {
  client.close();
});

// Try-catch close
try {
   ...
} catch (error) {
   client.close();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Auto closing unsynced sessions&lt;/h3&gt; 
&lt;p&gt;The auto close is enabled by default and the timeout is set to 60 sec. Receives the time in milliseconds to countdown until paired.&lt;/p&gt; 
&lt;p&gt;Use ‚ÄúautoClose: 0 | false‚Äù to disable auto closing.&lt;/p&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Building venom is really simple altough it contains 3 main projects inside&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Wapi project&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:wapi
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Middleware&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:middleware
&amp;gt; npm run build:jsQR
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Venom&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:venom
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the entire project just run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;Maintainers are needed, I cannot keep with all the updates by myself. If you are interested please open a Pull Request.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>star7th/showdoc</title>
      <link>https://github.com/star7th/showdoc</link>
      <description>&lt;p&gt;ShowDoc is a tool greatly applicable for an IT team to share documents online‰∏Ä‰∏™ÈùûÂ∏∏ÈÄÇÂêàITÂõ¢ÈòüÁöÑÂú®Á∫øAPIÊñáÊ°£„ÄÅÊäÄÊúØÊñáÊ°£Â∑•ÂÖ∑&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Ôªø## ‰∏≠ÊñáÁâàÊïôÁ®ãÔºöhttps://www.showdoc.com.cn/help&lt;/p&gt; 
&lt;h3&gt;What is ShowDoc ?&lt;/h3&gt; 
&lt;p&gt;Whenever we take over a module or project which has been developed by other people, we always feel crazy watching at those codes without notes. Where is the document?! Where is the document?! &lt;strong&gt;Show me the doc !!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A programmer often hopes the others to write technical documents, with the hope of not writing them on his/her own. Because writing a technical document needs a lot of time to handle the format and layout, and the person who writes it has to think of all kinds of non-technical details such as which catalog to put in the newly-established word document&lt;/p&gt; 
&lt;p&gt;All kinds of the word documents are kept by different persons in a team dispersedly. The person who needs other documents gets the documents by shouting out. He/She gives a shout asking for the documents and then receives them from other people by IMs or the e-mail. This kind of communication is not bad, but the efficiency is not high.&lt;/p&gt; 
&lt;p&gt;ShowDoc is a tool greatly applicable for an IT team to share documents online. It can promote communication efficiency among members of the team.&lt;/p&gt; 
&lt;h3&gt;What can it be used for?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;API Document Ôºà &lt;a href=&quot;https://www.showdoc.com.cn/demo-en&quot;&gt;Demo&lt;/a&gt;Ôºâ&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With the development of mobile Internet, BaaS (Backend as a Service) becomes more and more popular. The Server end provides API, and the APP end or Webpage frontend can invoke data conveniently. Using ShowDoc can compile exquisite API documents in a very fast and convenient way.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Data Dictionary Ôºà &lt;a href=&quot;https://www.showdoc.com.cn/demo-en&quot;&gt;Demo&lt;/a&gt;Ôºâ&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A good Data Dictionary can easily exhibit database structure to other people, such as definition of each field and the like.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Explanation Document Ôºà &lt;a href=&quot;https://www.showdoc.com.cn/help-en&quot;&gt;Demo&lt;/a&gt;Ôºâ&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can absolutely use ShowDoc to compile the explanation documents for some tools, as well as to compile some technical specifications explanation documents for the team to look up.&lt;/p&gt; 
&lt;h3&gt;What functions does it have?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Sharing and Exporting&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Responsive webpage design can share the project documents to computer or mobile devices for reading. It can also export the project into word document for browsing offline.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Permission Management&lt;/h4&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Public Project and Private Project&lt;/p&gt; &lt;p&gt;Projects on ShowDoc are divided into two categories including Public Project and Private Project. Public Project can be visited by any user no matter he/she logs in or not, while inputting password for verification is needed for visiting the Private Project. The password is set by project creator.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Project Transfer&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The project creator can transfer the project to other users of the website freely.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Project Members&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can easily add or delete project members in the project of ShowDoc. Members of the project can edit the project, but they can not transfer or delete the project (only creator of the project has the permission).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Edit Function&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Markdown Edit&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;ShowDoc adopts Markdown Editor, and it is excellent both in editing and reading experience. If you know nothing about Markdown, please search ‚ÄúLearning and Introduction of Markdown‚Äù on the search engine.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Template Insert&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;On the editing page of ShowDoc, a click on the button which is on the top of the Editor can easily insert API interface template and data dictionary template. After inserting the template, altering data is the only thing that need to do and it reduces a lot of work in editing.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;History Version&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;ShowDoc provides a function of History Version on the page, and you can easily restore the page to the former version.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Deploy It to Your Own Server&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ShowDoc Deploy&lt;/p&gt; &lt;p&gt;Please refer to: &lt;a href=&quot;https://github.com/star7th/showdoc/raw/master/documentation/en/AutoInstall.md&quot;&gt;AutoInstall.md&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Development &amp;amp; Contribution&lt;/p&gt; &lt;p&gt;Please refer to: &lt;a href=&quot;https://github.com/star7th/showdoc/raw/master/documentation/en/Development&amp;amp;Contribution.md&quot;&gt;Development&amp;amp;Contribution.md&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Copyright&lt;/h3&gt; 
&lt;p&gt;ShowDoc is issued complying with Apache2 Open Source License, and it is for free use.&lt;/p&gt; 
&lt;p&gt;Copyright ¬© star7th&lt;/p&gt; 
&lt;p&gt;E-mail: xing7th#gmail.com (change # into @)&lt;/p&gt; 
&lt;p&gt;All rights reserved.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>h5bp/html5-boilerplate</title>
      <link>https://github.com/h5bp/html5-boilerplate</link>
      <description>&lt;p&gt;A professional front-end template for building fast, robust, and adaptable web apps or sites.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://html5boilerplate.com/&quot;&gt;HTML5 Boilerplate&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/actions?query=workflow%3A%22Build+status%22+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/h5bp/html5-boilerplate/workflows/Build%20status/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/raw/master/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-lightgrey.svg?sanitize=true&quot; alt=&quot;LICENSE&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/h5bp/html5-boilerplate#info=devDependencies&quot;&gt;&lt;img src=&quot;https://david-dm.org/h5bp/html5-boilerplate/dev-status.svg?sanitize=true&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/html5-boilerplate&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/html5-boilerplate.svg?sanitize=true&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/h5bp/html5-boilerplate.svg?label=github%20stars&quot; alt=&quot;github-stars-image&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites.&lt;/p&gt; 
&lt;p&gt;This project is the product of over 10 years of iterative development and community knowledge. It does not impose a specific development philosophy or framework, so you‚Äôre free to architect your code in the way that you want.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Homepage: &lt;a href=&quot;https://html5boilerplate.com/&quot;&gt;https://html5boilerplate.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Source: &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate&quot;&gt;https://github.com/h5bp/html5-boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/h5bp&quot;&gt;@h5bp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Choose one of the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Download the latest stable release from &lt;a href=&quot;https://html5boilerplate.com/&quot;&gt;html5boilerplate.com&lt;/a&gt;. This zip file is a snapshot of the &lt;code&gt;dist&lt;/code&gt; folder. On Windows, Mac and from the file manager on Linux unzipping this folder will output to a folder named something like &lt;code&gt;html5-boilerplate_v7.3.0&lt;/code&gt;. From the command line will need to create a folder and unzip the contents into that folder.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir html5-boilerplate
unzip html5-boilerplate*.zip -d html5-boilerplate
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the git repo ‚Äî &lt;code&gt;git clone https://github.com/h5bp/html5-boilerplate.git&lt;/code&gt; - and checkout the &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/releases&quot;&gt;tagged release&lt;/a&gt; you‚Äôd like to use. The &lt;code&gt;dist&lt;/code&gt; folder represents the latest version of the project for end users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;: &lt;code&gt;npm install html5-boilerplate&lt;/code&gt; or &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt;: &lt;code&gt;yarn add html5-boilerplate&lt;/code&gt;. The resulting &lt;code&gt;node_modules/html5-boilerplate/dist&lt;/code&gt; folder represents the latest version of the project for end users. Depending on what you want to use and how you want to use it, you may have to copy and paste the contents of that folder into your project directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Using our new &lt;a href=&quot;https://github.com/h5bp/create-html5-boilerplate&quot;&gt;create-html5-boilerplate&lt;/a&gt; project, instantly fetch the latest npm published package (or any version available on npm) with &lt;code&gt;npx&lt;/code&gt;, &lt;code&gt;npm init&lt;/code&gt; or &lt;code&gt;yarn create&lt;/code&gt; without having to install any dependencies. Running the following &lt;code&gt;npx&lt;/code&gt; command installs the latest version into a folder called &lt;code&gt;new-site&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npx create-html5-boilerplate new-site
cd new-site
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A finely-tuned starter template. Reap the benefits of 10 years of analysis, research and experimentation by over 200 contributors.&lt;/li&gt; 
 &lt;li&gt;Designed with progressive enhancement in mind.&lt;/li&gt; 
 &lt;li&gt;Includes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://necolas.github.com/normalize.css/&quot;&gt;&lt;code&gt;Normalize.css&lt;/code&gt;&lt;/a&gt; for CSS normalizations and common bug fixes&lt;/li&gt; 
   &lt;li&gt;A custom build of &lt;a href=&quot;https://modernizr.com/&quot;&gt;&lt;code&gt;Modernizr&lt;/code&gt;&lt;/a&gt; for feature detection&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/h5bp/server-configs-apache&quot;&gt;&lt;code&gt;Apache Server Configs&lt;/code&gt;&lt;/a&gt; that improve the web site‚Äôs performance and security&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Placeholder Open Graph elements and attributes.&lt;/li&gt; 
 &lt;li&gt;An example package.json file with &lt;a href=&quot;https://parceljs.org/&quot;&gt;Parcel&lt;/a&gt; commands built in to jumpstart application development&lt;/li&gt; 
 &lt;li&gt;Placeholder CSS Media Queries.&lt;/li&gt; 
 &lt;li&gt;Useful CSS helper classes.&lt;/li&gt; 
 &lt;li&gt;Default print styles, performance optimized.&lt;/li&gt; 
 &lt;li&gt;An optimized version of the Google Universal Analytics snippet.&lt;/li&gt; 
 &lt;li&gt;Protection against any stray &lt;code&gt;console&lt;/code&gt; statements causing JavaScript errors in older browsers.&lt;/li&gt; 
 &lt;li&gt;‚ÄúDelete-key friendly.‚Äù Easy to strip out parts you don‚Äôt need.&lt;/li&gt; 
 &lt;li&gt;Extensive documentation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Browser support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Edge &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Firefox &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Internet Explorer 11&lt;/li&gt; 
 &lt;li&gt;Opera &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Safari &lt;em&gt;(latest 2)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;This doesn‚Äôt mean that HTML5 Boilerplate cannot be used in older browsers, just that we‚Äôll ensure compatibility with the ones mentioned above.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;If you need legacy browser support you can use &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/releases/tag/6.1.0&quot;&gt;HTML5 Boilerplate v6&lt;/a&gt; (IE9/IE10) or &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/releases/tag/5.3.0&quot;&gt;HTML5 Boilerplate v5&lt;/a&gt; (IE 8). They are no longer actively developed.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/dist/doc/TOC.md&quot;&gt;documentation table of contents&lt;/a&gt;. This documentation is bundled with the project which makes it available for offline reading and provides a useful starting point for any documentation you want to write about your project.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Hundreds of developers have helped to make the HTML5 Boilerplate. Anyone is welcome to &lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt;, however, if you decide to get involved, please take a moment to review the &lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md&quot;&gt;guidelines&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md#bugs&quot;&gt;Bug reports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md#features&quot;&gt;Feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/.github/CONTRIBUTING.md#pull-requests&quot;&gt;Pull requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The code is available under the &lt;a href=&quot;https://raw.githubusercontent.com/h5bp/html5-boilerplate/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>carbon-design-system/carbon</title>
      <link>https://github.com/carbon-design-system/carbon</link>
      <description>&lt;p&gt;A design system built by IBM&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.carbondesignsystem.com&quot;&gt; &lt;img alt=&quot;Carbon Design System&quot; src=&quot;https://user-images.githubusercontent.com/3901764/57545698-ce5f2380-7320-11e9-8682-903df232d7b0.png&quot; width=&quot;100%&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Carbon Design System &lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Carbon is an open-source design system built by IBM. With the IBM Design Language as its foundation, the system consists of working code, design tools and resources, human interface guidelines, and a vibrant community of contributors.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/raw/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-Apache--2.0-blue.svg?sanitize=true&quot; alt=&quot;Carbon is released under the Apache-2.0 license&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/carbon-design-system/carbon&quot;&gt; &lt;img src=&quot;https://circleci.com/gh/carbon-design-system/carbon.svg?style=shield&quot; alt=&quot;Build Status&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://lerna.js.org/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;Maintained with Lerna&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/raw/master/.github/CONTRIBUTING.md&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://gitter.im/carbondesignsystem/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt; &lt;img src=&quot;https://badges.gitter.im/carbondesignsystem/community.svg?sanitize=true&quot; alt=&quot;Chat with us on Gitter&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;If you‚Äôre just getting started, check out &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/components&quot;&gt;&lt;code&gt;carbon-components&lt;/code&gt;&lt;/a&gt;. If you‚Äôre looking for React components, take a look at &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/react&quot;&gt;&lt;code&gt;carbon-components-react&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We also have community-contributed components for the following technologies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBM/carbon-components-angular&quot;&gt;Angular&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon-components-vue&quot;&gt;Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBM/carbon-components-svelte&quot;&gt;Svelte&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you‚Äôre trying to find something specific, here‚Äôs a full list of packages that we support!&lt;/p&gt; 
&lt;p&gt;| Package name | Description | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/components&quot;&gt;&lt;code&gt;carbon-components&lt;/code&gt;&lt;/a&gt; | Component styles and Vanilla JavaScript | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/react&quot;&gt;&lt;code&gt;carbon-components-react&lt;/code&gt;&lt;/a&gt; | React components | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/elements&quot;&gt;&lt;code&gt;@carbon/elements&lt;/code&gt;&lt;/a&gt; | IBM Design Language elements like colors, type, iconography, and more | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/colors&quot;&gt;&lt;code&gt;@carbon/colors&lt;/code&gt;&lt;/a&gt; | Work with IBM Design Language colors | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/grid&quot;&gt;&lt;code&gt;@carbon/grid&lt;/code&gt;&lt;/a&gt; | Build layouts using the new 16 column grid system | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/icons&quot;&gt;&lt;code&gt;@carbon/icons&lt;/code&gt;&lt;/a&gt; | Iconography assets. We also offer support in: &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/icons-react&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/carbon-design-system/carbon-icons-angular&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/icons-vue&quot;&gt;Vue&lt;/a&gt;, and &lt;a href=&quot;https://github.com/IBM/carbon-icons-svelte&quot;&gt;Svelte&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/pictograms&quot;&gt;&lt;code&gt;@carbon/pictograms&lt;/code&gt;&lt;/a&gt; | Pictogram assets. We also offer support in: &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/pictograms-react&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;https://github.com/IBM/carbon-pictograms-svelte&quot;&gt;Svelte&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/layout&quot;&gt;&lt;code&gt;@carbon/layout&lt;/code&gt;&lt;/a&gt; | Layout-based units and spacing scale | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/motion&quot;&gt;&lt;code&gt;@carbon/motion&lt;/code&gt;&lt;/a&gt; | Productive and expressive motion curves | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/themes&quot;&gt;&lt;code&gt;@carbon/themes&lt;/code&gt;&lt;/a&gt; | Color tokens available in the Carbon Design System, like &lt;code&gt;$interactive-01&lt;/code&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/type&quot;&gt;&lt;code&gt;@carbon/type&lt;/code&gt;&lt;/a&gt; | New type tokens used alongside IBM Plex |&lt;/p&gt; 
&lt;h2&gt;:books: Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See our documentation site &lt;a href=&quot;https://www.carbondesignsystem.com/get-started/develop/react&quot;&gt;here&lt;/a&gt; for full how-to docs and guidelines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;: Guidelines for making contributions to this repo.&lt;/li&gt; 
 &lt;li&gt;üèÉ‚Äç‚ôÄÔ∏è Migration Guides 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/components/docs/migration/migrate-to-10.x.md&quot;&gt;v9 to v10 (vanilla)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/packages/react/docs/migration/migrate-to-7.x.md&quot;&gt;v9 to v10 (v6 to v7 React)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üôå Contributing&lt;/h2&gt; 
&lt;p&gt;We‚Äôre always looking for contributors to help us fix bugs, build new features, or help us improve the project documentation. If you‚Äôre interested, definitely check out our &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; and our &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/docs/developer-handbook.md&quot;&gt;Developer Guide&lt;/a&gt;! üëÄ&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tw15egan&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11928039?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;TJ Egan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=tw15egan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=tw15egan&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#infra-tw15egan&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Atw15egan&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-tw15egan&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/joshblack&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3901764?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josh Black&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=joshblack&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=joshblack&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#infra-joshblack&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Ajoshblack&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-joshblack&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aledavila&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/12533409?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alessandra Davila&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=aledavila&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=aledavila&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aaledavila&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-aledavila&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dakahn.netlify.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/40970507?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;DAK&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=dakahn&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=dakahn&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Adakahn&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-dakahn&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/andrea-cardona-b647594b/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32720851?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrea N. Cardona&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=andreancardona&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=andreancardona&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aandreancardona&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-andreancardona&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/emyarod&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8265238?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;emyarod&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=emyarod&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=emyarod&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aemyarod&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-emyarod&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jnm2377&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/32556167?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josefina Mancilla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=jnm2377&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=jnm2377&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Ajnm2377&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-jnm2377&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.vincepic.one/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4078018?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vince Picone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=vpicone&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=vpicone&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Avpicone&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-vpicone&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://turpialcreative/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4718579?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ricardo Henriquez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=rjhenriquez&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=rjhenriquez&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Arjhenriquez&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-rjhenriquez&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sstrubberg&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/15822070?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Strubberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=sstrubberg&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=sstrubberg&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Asstrubberg&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-sstrubberg&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alisonjoseph&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2753488?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alison Joseph&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=alisonjoseph&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=alisonjoseph&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aalisonjoseph&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-alisonjoseph&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aagonzales&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11670886?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anna Gonzales&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#design-aagonzales&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Aaagonzales&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jillianhowarth&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/20690344?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jillianhowarth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#content-jillianhowarth&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#design-jillianhowarth&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Ajillianhowarth&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/laurenmrice&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/43969356?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lauren Rice&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#design-laurenmrice&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Alaurenmrice&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/johnbister&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/70543333?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;johnbister&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#design-johnbister&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/pulls?q=is%3Apr+reviewed-by%3Ajohnbister&quot; title=&quot;Reviewed Pull Requests&quot;&gt;üëÄ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dbrugger&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10086178?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dominik Brugger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=dbrugger&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#maintenance-dbrugger&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://janhassel.de/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/28265588?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan Hassel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=janhassel&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AlexanderLyon&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/17458641?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexander Lyon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=AlexanderLyon&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rzhekova&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/35401262?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rosie Z&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=rzhekova&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://abdul-sen.github.io/portfolio&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/38502132?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abdul Rehman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=Abdul-Sen&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gptt916&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20601623?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Gong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=gptt916&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://nishithp.live/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/34577844?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nishith P&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=NishithP2004&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/echarpibm&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/22177887?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eric Charpentier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=echarpibm&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/luizamendes&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/31076607?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luiza Mendes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=luizamendes&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#maintenance-luizamendes&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/akmalhakimi1991&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/10990690?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Akmal Hakimi Mohd Zamri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=akmalhakimi1991&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sanjitbauli&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/272230?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sanjitbauli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=sanjitbauli&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/moczolaszlo&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3605657?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Laszlo Moczo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=moczolaszlo&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LMapes&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/56092796?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;LMapes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#content-LMapes&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=LMapes&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/conradennis&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/16782944?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;conradennis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#design-conradennis&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/metonym&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/10718366?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eric Liu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=metonym&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=metonym&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rvsia&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/32869456?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Richard V≈°iansk√Ω&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=rvsia&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lee-chase&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/15086604?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lee Chase&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=lee-chase&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=lee-chase&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/GoldenFishe&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/29215242?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anton&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=GoldenFishe&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/panpan-lin&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/22054715?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Panpan Lin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=panpan-lin&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ashharrison90&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/20999846?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ashley Harrison&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=ashharrison90&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jendowns.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9057921?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jen Downs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=jendowns&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=jendowns&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-jendowns&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tay1orjones&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3360588?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Taylor Jones&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=tay1orjones&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=tay1orjones&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-tay1orjones&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dudley-ibm&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/54119397?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MIchael Dudley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#design-dudley-ibm&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://davidbradshaw.us/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/8028956?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Bradshaw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=dabrad26&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SimonFinney&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3846874?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Simon Finney&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=SimonFinney&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-SimonFinney&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/atikenny&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/6061509?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Attila Bartha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=atikenny&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://baeharam.netlify.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/35518072?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Î∞∞ÌïòÎûå&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=baeharam&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Yohanna&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6926228?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yohanna Gadelrab&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=Yohanna&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://asudoh.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1259051?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Akira Sudoh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=asudoh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=asudoh&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-asudoh&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#infra-asudoh&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;üöá&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/oyin-k&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/22506709?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oyinkan Oyetunmibi &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=oyin-k&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pbenson322&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/59934268?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pbenson322&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=pbenson322&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/abbeyhrt&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/17281178?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abbey Hart&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=abbeyhrt&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=abbeyhrt&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-abbeyhrt&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lucasmccomb&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/5007314?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=lucasmccomb&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dylanklohr&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/17390173?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dylan Klohr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=dylanklohr&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://gilli.is/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5390864?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gilli Sigurdsson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#design-gillisig&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kennylam&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/909118?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kennylam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=kennylam&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-kennylam&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sgregoire&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3350530?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;S√©bastien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=sgregoire&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://dusanmilko.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/302239?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dusan Milko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=DusanMilko&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/taraspolovyi&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/25744197?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Taras Polovyi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=taraspolovyi&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/chrisconnors-ibm&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/35537391?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Connors&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#design-chrisconnors-ibm&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=chrisconnors-ibm&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.david-conner.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1590966?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Conner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=davidicus&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-davidicus&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/code-blooded-developer&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7156129?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Harish Mohanani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=code-blooded-developer&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/FrivalszkyP&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3766124?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frivalszky-Mayer P√©ter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=FrivalszkyP&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-FrivalszkyP&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/s100&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/9932290?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;s100&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=s100&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.virk.cc/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3311536?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Taranveer Virk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=virkt25&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ikhnaton&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4853273?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Niall Cargill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=ikhnaton&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/asfordmatt&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/14233261?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt Chapman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=asfordmatt&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/munkurious&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2187109?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Boston Cartwright&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=munkurious&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DavidSCChen&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/54974983?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;DavidSCChen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=DavidSCChen&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/molyholy&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/77503726?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;molyholy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=molyholy&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/scottdickerson&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6663002?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Dickerson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=scottdickerson&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://start.reactwarriors.com/join&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15031623?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evgeniy Podgaetskiy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=epodgaetskiy&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/CassidyJensen&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45407808?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;CassidyJensen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=CassidyJensen&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/#a11y-CassidyJensen&quot; title=&quot;Accessibility&quot;>Ô∏èÔ∏èÔ∏èÔ∏è‚ôøÔ∏è&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lattmann&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1108945?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zsolt Lattmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=lattmann&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://conrad.codes/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3808948?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Conrad Schmidt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=ConradSchmidt&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/IgnacioBecerra&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24970122?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ignacio Becerra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=IgnacioBecerra&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/swapnilpatil21&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46713873?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Swapnil Patil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=swapnilpatil21&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sophiiae&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18622886?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fei Z&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=sophiiae&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/IgnasA&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7099068?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ignas Ausiejus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=IgnasA&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ryanomackey.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17710824?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan O. Mackey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=ryanomackey&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.skateman.eu/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/649130?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;D√°vid Hal√°sz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=skateman&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/guigueb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/5973642?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bill Guigue&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=guigueb&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/szymonbrandys&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/79149899?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;szymonbrandys&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon/commits?author=szymonbrandys&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/kentcdodds/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;üìù License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/main/LICENSE&quot;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>twbs/bootstrap</title>
      <link>https://github.com/twbs/bootstrap</link>
      <description>&lt;p&gt;The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://getbootstrap.com/&quot;&gt; &lt;img src=&quot;https://getbootstrap.com/docs/5.0/assets/brand/bootstrap-logo-shadow.png&quot; alt=&quot;Bootstrap logo&quot; width=&quot;200&quot; height=&quot;165&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Bootstrap&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Sleek, intuitive, and powerful front-end framework for faster and easier web development. &lt;br&gt; &lt;a href=&quot;https://getbootstrap.com/docs/5.0/&quot;&gt;&lt;strong&gt;Explore Bootstrap docs ¬ª&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?template=bug_report.md&quot;&gt;Report bug&lt;/a&gt; ¬∑ &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?template=feature_request.md&quot;&gt;Request feature&lt;/a&gt; ¬∑ &lt;a href=&quot;https://themes.getbootstrap.com/&quot;&gt;Themes&lt;/a&gt; ¬∑ &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;Blog&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Bootstrap 4&lt;/h2&gt; 
&lt;p&gt;Our default branch is for development of our upcoming Bootstrap 5 release. Head to the &lt;a href=&quot;https://github.com/twbs/bootstrap/tree/v4-dev&quot;&gt;&lt;code&gt;v4-dev&lt;/code&gt; branch&lt;/a&gt; to view the readme, documentation, and source code for Bootstrap 4.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#quick-start&quot;&gt;Quick start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#status&quot;&gt;Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#whats-included&quot;&gt;What‚Äôs included&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#bugs-and-feature-requests&quot;&gt;Bugs and feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#versioning&quot;&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#creators&quot;&gt;Creators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#thanks&quot;&gt;Thanks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#copyright-and-license&quot;&gt;Copyright and license&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Several quick start options are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/archive/v5.0.0-beta3.zip&quot;&gt;Download the latest release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Clone the repo: &lt;code&gt;git clone https://github.com/twbs/bootstrap.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;: &lt;code&gt;npm install bootstrap@next&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt;: &lt;code&gt;yarn add bootstrap@next&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;: &lt;code&gt;composer require twbs/bootstrap:5.0.0-beta3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt;: CSS: &lt;code&gt;Install-Package bootstrap&lt;/code&gt; Sass: &lt;code&gt;Install-Package bootstrap.sass&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://getbootstrap.com/docs/5.0/getting-started/introduction/&quot;&gt;Getting started page&lt;/a&gt; for information on the framework contents, templates and examples, and more.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://bootstrap-slack.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://bootstrap-slack.herokuapp.com/badge.svg?sanitize=true&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/actions?query=workflow%3AJS+Tests+branch%3Amain&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/twbs/bootstrap/JS%20Tests/main?label=JS%20Tests&amp;amp;logo=github&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/bootstrap&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/bootstrap&quot; alt=&quot;Gem version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://atmospherejs.com/twbs/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue&quot; alt=&quot;Meteor Atmosphere&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagist.org/packages/twbs/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/packagist/vpre/twbs/bootstrap&quot; alt=&quot;Packagist Prerelease&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/bootstrap/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/bootstrap&quot; alt=&quot;NuGet&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/twbs/bootstrap?type=peer&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/peer/twbs/bootstrap&quot; alt=&quot;peerDependencies Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/twbs/bootstrap?type=dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/dev/twbs/bootstrap&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/twbs/bootstrap?branch=main&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/github/twbs/bootstrap/main&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/css/bootstrap.min.css&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=gzip&amp;amp;label=CSS%20gzip%20size&quot; alt=&quot;CSS gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/css/bootstrap.min.css&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=brotli&amp;amp;label=CSS%20Brotli%20size&quot; alt=&quot;CSS Brotli size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/js/bootstrap.min.js&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=gzip&amp;amp;label=JS%20gzip%20size&quot; alt=&quot;JS gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/js/bootstrap.min.js&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=brotli&amp;amp;label=JS%20Brotli%20size&quot; alt=&quot;JS Brotli size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229&quot;&gt;&lt;img src=&quot;https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229&quot; alt=&quot;BrowserStack Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#backers&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/backers/bootstrap&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#sponsors&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/sponsors/bootstrap&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What‚Äôs included&lt;/h2&gt; 
&lt;p&gt;Within the download you‚Äôll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You‚Äôll see something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;bootstrap/
‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-grid.rtl.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-reboot.rtl.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-utilities.rtl.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.min.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.min.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.css.map
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap.rtl.min.css
‚îÇ   ‚îî‚îÄ‚îÄ bootstrap.rtl.min.css.map
‚îî‚îÄ‚îÄ js/
    ‚îú‚îÄ‚îÄ bootstrap.bundle.js
    ‚îú‚îÄ‚îÄ bootstrap.bundle.js.map
    ‚îú‚îÄ‚îÄ bootstrap.bundle.min.js
    ‚îú‚îÄ‚îÄ bootstrap.bundle.min.js.map
    ‚îú‚îÄ‚îÄ bootstrap.esm.js
    ‚îú‚îÄ‚îÄ bootstrap.esm.js.map
    ‚îú‚îÄ‚îÄ bootstrap.esm.min.js
    ‚îú‚îÄ‚îÄ bootstrap.esm.min.js.map
    ‚îú‚îÄ‚îÄ bootstrap.js
    ‚îú‚îÄ‚îÄ bootstrap.js.map
    ‚îú‚îÄ‚îÄ bootstrap.min.js
    ‚îî‚îÄ‚îÄ bootstrap.min.js.map
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We provide compiled CSS and JS (&lt;code&gt;bootstrap.*&lt;/code&gt;), as well as compiled and minified CSS and JS (&lt;code&gt;bootstrap.min.*&lt;/code&gt;). &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps&quot;&gt;source maps&lt;/a&gt; (&lt;code&gt;bootstrap.*.map&lt;/code&gt;) are available for use with certain browsers‚Äô developer tools. Bundled JS files (&lt;code&gt;bootstrap.bundle.js&lt;/code&gt; and minified &lt;code&gt;bootstrap.bundle.min.js&lt;/code&gt;) include &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bugs and feature requests&lt;/h2&gt; 
&lt;p&gt;Have a bug or a feature request? Please first read the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.github/CONTRIBUTING.md#using-the-issue-tracker&quot;&gt;issue guidelines&lt;/a&gt; and search for existing and closed issues. If your problem or idea is not addressed yet, &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new&quot;&gt;please open a new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Bootstrap‚Äôs documentation, included in this repo in the root directory, is built with &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; and publicly hosted on GitHub Pages at &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;https://getbootstrap.com/&lt;/a&gt;. The docs may also be run locally.&lt;/p&gt; 
&lt;p&gt;Documentation search is powered by &lt;a href=&quot;https://community.algolia.com/docsearch/&quot;&gt;Algolia‚Äôs DocSearch&lt;/a&gt;. Working on our search? Be sure to set &lt;code&gt;debug: true&lt;/code&gt; in &lt;code&gt;site/assets/js/search.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Running documentation locally&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install the Node.js dependencies, including Hugo (the site builder).&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm run test&lt;/code&gt; (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.&lt;/li&gt; 
 &lt;li&gt;From the root &lt;code&gt;/bootstrap&lt;/code&gt; directory, run &lt;code&gt;npm run docs-serve&lt;/code&gt; in the command line.&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;http://localhost:9001/&lt;/code&gt; in your browser, and voil√†.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Learn more about using Hugo by reading its &lt;a href=&quot;https://gohugo.io/documentation/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Documentation for previous releases&lt;/h3&gt; 
&lt;p&gt;You can find all our previous releases docs on &lt;a href=&quot;https://getbootstrap.com/docs/versions/&quot;&gt;https://getbootstrap.com/docs/versions/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/releases&quot;&gt;Previous releases&lt;/a&gt; and their documentation are also available for download.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues, coding standards, and notes on development.&lt;/p&gt; 
&lt;p&gt;Moreover, if your pull request contains JavaScript patches or features, you must include &lt;a href=&quot;https://github.com/twbs/bootstrap/tree/main/js/tests&quot;&gt;relevant unit tests&lt;/a&gt;. All HTML and CSS should conform to the &lt;a href=&quot;https://github.com/mdo/code-guide&quot;&gt;Code Guide&lt;/a&gt;, maintained by &lt;a href=&quot;https://github.com/mdo&quot;&gt;Mark Otto&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Editor preferences are available in the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.editorconfig&quot;&gt;editor config&lt;/a&gt; for easy use in common text editors. Read more and download plugins at &lt;a href=&quot;https://editorconfig.org/&quot;&gt;https://editorconfig.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Get updates on Bootstrap‚Äôs development and chat with the project maintainers and community members.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://twitter.com/getbootstrap&quot;&gt;@getbootstrap on Twitter&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read and subscribe to &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;The Official Bootstrap Blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join &lt;a href=&quot;https://bootstrap-slack.herokuapp.com/&quot;&gt;the official Slack room&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Chat with fellow Bootstrappers in IRC. On the &lt;code&gt;irc.freenode.net&lt;/code&gt; server, in the &lt;code&gt;##bootstrap&lt;/code&gt; channel.&lt;/li&gt; 
 &lt;li&gt;Implementation help may be found at Stack Overflow (tagged &lt;a href=&quot;https://stackoverflow.com/questions/tagged/bootstrap-5&quot;&gt;&lt;code&gt;bootstrap-5&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Developers should use the keyword &lt;code&gt;bootstrap&lt;/code&gt; on packages which modify or add to the functionality of Bootstrap when distributing through &lt;a href=&quot;https://www.npmjs.com/browse/keyword/bootstrap&quot;&gt;npm&lt;/a&gt; or similar delivery mechanisms for maximum discoverability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;For transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under &lt;a href=&quot;https://semver.org/&quot;&gt;the Semantic Versioning guidelines&lt;/a&gt;. Sometimes we screw up, but we adhere to those rules whenever possible.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/twbs/bootstrap/releases&quot;&gt;the Releases section of our GitHub project&lt;/a&gt; for changelogs for each release version of Bootstrap. Release announcement posts on &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;the official Bootstrap blog&lt;/a&gt; contain summaries of the most noteworthy changes made in each release.&lt;/p&gt; 
&lt;h2&gt;Creators&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Mark Otto&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/mdo&quot;&gt;https://twitter.com/mdo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mdo&quot;&gt;https://github.com/mdo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Jacob Thornton&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/fat&quot;&gt;https://twitter.com/fat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fat&quot;&gt;https://github.com/fat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;a href=&quot;https://www.browserstack.com/&quot;&gt; &lt;img src=&quot;https://live.browserstack.com/images/opensource/browserstack-logo.svg?sanitize=true&quot; alt=&quot;BrowserStack Logo&quot; width=&quot;192&quot; height=&quot;42&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; for providing the infrastructure that allows us to test in real browsers!&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/bootstrap#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 1&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 3&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 4&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 5&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/7/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 7&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/8/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 8&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/9/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers! üôè [&lt;a href=&quot;https://opencollective.com/bootstrap#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/backers.svg?width=890&quot; alt=&quot;Backers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Copyright and license&lt;/h2&gt; 
&lt;p&gt;Code and documentation copyright 2011‚Äì2021 the &lt;a href=&quot;https://github.com/twbs/bootstrap/graphs/contributors&quot;&gt;Bootstrap Authors&lt;/a&gt; and &lt;a href=&quot;https://twitter.com&quot;&gt;Twitter, Inc.&lt;/a&gt; Code released under the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;. Docs released under &lt;a href=&quot;https://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>swagger-api/swagger-ui</title>
      <link>https://github.com/swagger-api/swagger-ui</link>
      <description>&lt;p&gt;Swagger UI is a collection of HTML, JavaScript, and CSS assets that dynamically generate beautiful documentation from a Swagger-compliant API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/swagger-api/swagger.io/wordpress/images/assets/SWU-logo-clr.png&quot; width=&quot;300&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://badge.fury.io/js/swagger-ui&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/swagger-ui.svg?sanitize=true&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/&quot;&gt;&lt;img src=&quot;https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-ui-master/badge/icon?subject=jenkins%20build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://jenkins.swagger.io/job/oss-swagger-ui-security-audit/lastBuild/console&quot;&gt;&lt;img src=&quot;https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-ui-security-audit&amp;amp;subject=npm%20audit&quot; alt=&quot;npm audit&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/contributors-anon/swagger-api/swagger-ui.svg?sanitize=true&quot; alt=&quot;total GitHub contributors&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/swagger-ui.svg?label=npm%20downloads&quot; alt=&quot;monthly npm installs&quot;&gt; &lt;img src=&quot;https://img.shields.io/docker/pulls/swaggerapi/swagger-ui.svg?sanitize=true&quot; alt=&quot;total docker pulls&quot;&gt; &lt;img src=&quot;https://img.shields.io/packagist/dm/swagger-api/swagger-ui.svg?label=packagist%20installs&quot; alt=&quot;monthly packagist installs&quot;&gt; &lt;img src=&quot;https://img.shields.io/bundlephobia/minzip/swagger-ui.svg?label=gzip%20size&quot; alt=&quot;gzip size&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://swagger.io/tools/swagger-ui/&quot;&gt;Swagger UI&lt;/a&gt; allows anyone ‚Äî be it your development team or your end consumers ‚Äî to visualize and interact with the API‚Äôs resources without having any of the implementation logic in place. It‚Äôs automatically generated from your OpenAPI (formerly known as Swagger) Specification, with the visual documentation making it easy for back end implementation and client side consumption.&lt;/p&gt; 
&lt;h2&gt;General&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;üëâüèº Want to score an easy open-source contribution?&lt;/strong&gt; Check out our &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+issue%22&quot;&gt;Good first issue&lt;/a&gt; label.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;üï∞Ô∏è Looking for the older version of Swagger UI?&lt;/strong&gt; Refer to the &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/tree/2.x&quot;&gt;&lt;em&gt;2.x&lt;/em&gt; branch&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This repository publishes three different NPM modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/swagger-ui&quot;&gt;swagger-ui&lt;/a&gt; is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/swagger-ui-dist&quot;&gt;swagger-ui-dist&lt;/a&gt; is a dependency-free module that includes everything you need to serve Swagger UI in a server-side project, or a single-page application that can‚Äôt resolve npm module dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/swagger-ui-react&quot;&gt;swagger-ui-react&lt;/a&gt; is Swagger UI packaged as a React component for use in React applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We strongly suggest that you use &lt;code&gt;swagger-ui&lt;/code&gt; instead of &lt;code&gt;swagger-ui-dist&lt;/code&gt; if you‚Äôre building a single-page application, since &lt;code&gt;swagger-ui-dist&lt;/code&gt; is significantly larger.&lt;/p&gt; 
&lt;p&gt;If you are looking for plain ol‚Äô HTML/JS/CSS, &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/releases/latest&quot;&gt;download the latest release&lt;/a&gt; and copy the contents of the &lt;code&gt;/dist&lt;/code&gt; folder to your server.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;The OpenAPI Specification has undergone 5 revisions since initial creation in 2010. Compatibility between Swagger UI and the OpenAPI Specification is as follows:&lt;/p&gt; 
&lt;p&gt;Swagger UI Version | Release Date | OpenAPI Spec compatibility | Notes ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî‚Äî | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äî‚Äì 3.18.3 | 2018-08-03 | 2.0, 3.0 | &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/tree/v3.18.3&quot;&gt;tag v3.18.3&lt;/a&gt; 3.0.21 | 2017-07-26 | 2.0 | &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/tree/v3.0.21&quot;&gt;tag v3.0.21&lt;/a&gt; 2.2.10 | 2017-01-04 | 1.1, 1.2, 2.0 | &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/tree/v2.2.10&quot;&gt;tag v2.2.10&lt;/a&gt; 2.1.5 | 2016-07-20 | 1.1, 1.2, 2.0 | &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/tree/v2.1.5&quot;&gt;tag v2.1.5&lt;/a&gt; 2.0.24 | 2014-09-12 | 1.1, 1.2 | &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/tree/v2.0.24&quot;&gt;tag v2.0.24&lt;/a&gt; 1.0.13 | 2013-03-08 | 1.1, 1.2 | &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/tree/v1.0.13&quot;&gt;tag v1.0.13&lt;/a&gt; 1.0.1 | 2011-10-11 | 1.0, 1.1 | &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/tree/v1.0.1&quot;&gt;tag v1.0.1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;h4&gt;Usage&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/usage/installation.md&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/usage/configuration.md&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/usage/cors.md&quot;&gt;CORS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/usage/oauth2.md&quot;&gt;OAuth2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/usage/deep-linking.md&quot;&gt;Deep Linking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/usage/limitations.md&quot;&gt;Limitations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/usage/version-detection.md&quot;&gt;Version detection&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Customization&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/customization/overview.md&quot;&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/customization/plugin-api.md&quot;&gt;Plugin API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/customization/custom-layout.md&quot;&gt;Custom layout&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Development&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/development/setting-up.md&quot;&gt;Setting up&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-ui/master/docs/development/scripts.md&quot;&gt;Scripts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Contributing&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swagger-api/.github/raw/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Integration Tests&lt;/h5&gt; 
&lt;p&gt;You will need JDK of version 7 or higher as instructed here https://nightwatchjs.org/gettingstarted/#selenium-server-setup&lt;/p&gt; 
&lt;p&gt;Integration tests can be run locally with &lt;code&gt;npm run e2e&lt;/code&gt; - be sure you aren‚Äôt running a dev server when testing!&lt;/p&gt; 
&lt;h3&gt;Browser support&lt;/h3&gt; 
&lt;p&gt;Swagger UI works in the latest versions of Chrome, Safari, Firefox, and Edge.&lt;/p&gt; 
&lt;h3&gt;Known Issues&lt;/h3&gt; 
&lt;p&gt;To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Only part of the parameters previously supported are available.&lt;/li&gt; 
 &lt;li&gt;The JSON Form Editor is not implemented.&lt;/li&gt; 
 &lt;li&gt;Support for &lt;code&gt;collectionFormat&lt;/code&gt; is partial.&lt;/li&gt; 
 &lt;li&gt;l10n (translations) is not implemented.&lt;/li&gt; 
 &lt;li&gt;Relative path support for external files is not implemented.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security contact&lt;/h2&gt; 
&lt;p&gt;Please disclose any security-related issues or vulnerabilities by emailing &lt;a href=&quot;mailto:security@swagger.io&quot;&gt;security@swagger.io&lt;/a&gt;, instead of using the public issue tracker.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docmirror/dev-sidecar</title>
      <link>https://github.com/docmirror/dev-sidecar</link>
      <description>&lt;p&gt;ÂºÄÂèëËÄÖËæπËΩ¶ÔºågithubÊâì‰∏çÂºÄÔºågithubÂä†ÈÄüÔºågit cloneÂä†ÈÄüÔºågit release‰∏ãËΩΩÂä†ÈÄüÔºåstackoverflowÂä†ÈÄü&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dev-sidecar&lt;/h1&gt; 
&lt;p&gt;ÂºÄÂèëËÄÖËæπËΩ¶ÔºåÂëΩÂêçÂèñËá™service-meshÁöÑservice-sidecarÔºåÊÑè‰∏∫‰∏∫ÂºÄÂèëËÄÖÊâìËæÖÂä©ÁöÑËæπËΩ¶Â∑•ÂÖ∑&lt;br&gt; ÈÄöËøáÊú¨Âú∞‰ª£ÁêÜÁöÑÊñπÂºèÂ∞ÜhttpsËØ∑Ê±Ç‰ª£ÁêÜÂà∞‰∏Ä‰∫õÂõΩÂÜÖÁöÑÂä†ÈÄüÈÄöÈÅì‰∏ä&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/docmirror/dev-sidecar&quot;&gt;&lt;img src=&quot;https://gitee.com/docmirror/dev-sidecar/badge/star.svg?theme=dark&quot; alt=&quot;star&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/docmirror/dev-sidecar&quot;&gt;&lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/docmirror/dev-sidecar?logo=github&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ÁâπÊÄß&lt;/h2&gt; 
&lt;h3&gt;1„ÄÅ dns‰ºòÈÄâÔºàËß£ÂÜ≥ÂõΩÂÜÖdnsÊ±°ÊüìÈóÆÈ¢òÔºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê†πÊçÆÁΩëÁªúÁä∂ÂÜµÊô∫ËÉΩËß£ÊûêÊúÄ‰Ω≥ÂüüÂêçipÂú∞ÂùÄÔºåËé∑ÂèñÊúÄ‰Ω≥ÁΩëÁªúÈÄüÂ∫¶&lt;/li&gt; 
 &lt;li&gt;‰∏çÁî®&lt;code&gt;ÔΩÜÔΩÅÔΩé qiang&lt;/code&gt;‰πüËÉΩËß£ÂÜ≥‰∏Ä‰∫õÁΩëÁ´ôÂíåÂ∫ìÊó†Ê≥ïËÆøÈóÆÊàñËÆøÈóÆÈÄüÂ∫¶ÊÖ¢ÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;Âª∫ËÆÆÈÅáÂà∞ÊâìÂºÄÊØîËæÉÊÖ¢ÁöÑÂõΩÂ§ñÁΩëÁ´ôÔºåÂèØ‰ª•‰ºòÂÖàÂ∞ùËØïÂ∞ÜËØ•ÂüüÂêçÊ∑ªÂä†Âà∞dnsËÆæÁΩÆ‰∏≠ÔºàÊ≥®ÊÑèÔºöË¢´GFWÂ∞ÅÊùÄÁöÑÊó†ÊïàÔºâ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2„ÄÅ ËØ∑Ê±ÇÊã¶Êà™&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êã¶Êà™Êâì‰∏çÂºÄÁöÑÁΩëÁ´ôÔºå‰ª£ÁêÜÂà∞Âä†ÈÄüÈïúÂÉèÁ´ôÁÇπ‰∏äÂéª„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÂèØÈÖçÁΩÆÂ§ö‰∏™ÈïúÂÉèÁ´ô‰Ωú‰∏∫Â§á‰ªΩ&lt;/li&gt; 
 &lt;li&gt;ÂÖ∑Â§áÊµãÈÄüÊú∫Âà∂ÔºåÂΩìËÆøÈóÆÂ§±Ë¥•ÊàñË∂ÖÊó∂‰πãÂêéÔºåËá™Âä®ÂàáÊç¢Âà∞Â§áÁî®Á´ôÁÇπÔºå‰ΩøÂæóÁõÆÊ†áÊúçÂä°È´òÂèØÁî®&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3„ÄÅ githubÂä†ÈÄü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;release„ÄÅsource„ÄÅzip‰∏ãËΩΩÂä†ÈÄü&lt;/li&gt; 
 &lt;li&gt;clone Âä†ÈÄü&lt;/li&gt; 
 &lt;li&gt;Â§¥ÂÉèÂä†ÈÄü&lt;/li&gt; 
 &lt;li&gt;Ëß£ÂÜ≥readme‰∏≠ÂõæÁâáÂºïÁî®Êó†Ê≥ïÂä†ËΩΩÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;gist.github.com Âä†ÈÄü&lt;/li&gt; 
 &lt;li&gt;Ëß£ÂÜ≥git push ÂÅ∂Â∞îÂ§±Ë¥•ÈúÄË¶ÅËæìÂÖ•Ë¥¶Âè∑ÂØÜÁ†ÅÁöÑÈóÆÈ¢òÔºàfatal: TaskCanceledException encountered / fatal: HttpRequestException encounteredÔºâ&lt;/li&gt; 
 &lt;li&gt;raw/blameÂä†ÈÄü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4„ÄÅ Stack Overflow Âä†ÈÄü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Â∞Üajax.google.com‰ª£ÁêÜÂà∞Âä†ÈÄüCDN‰∏ä&lt;/li&gt; 
 &lt;li&gt;recaptcha ÂõæÁâáÈ™åËØÅÁ†ÅÂä†ÈÄü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;5„ÄÅ npmÂä†ÈÄü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊîØÊåÅÂºÄÂêØnpm‰ª£ÁêÜ&lt;/li&gt; 
 &lt;li&gt;ÂÆòÊñπ‰∏éÊ∑òÂÆùnpm registry‰∏ÄÈîÆÂàáÊç¢,&lt;/li&gt; 
 &lt;li&gt;Êüê‰∫õnpm installÁöÑÊó∂ÂÄôÔºåÂπ∂‰∏î‰ΩøÁî®cnpm‰πüÊó†Ê≥ïÂÆâË£ÖÊó∂ÔºåÂèØ‰ª•Â∞ùËØïÂºÄÂêØnpm‰ª£ÁêÜÂÜçËØï&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;6„ÄÅ Â¢ûÂº∫ÂäüËÉΩ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ºóÊâÄÂë®Áü•ÁöÑÂéüÂõ†Ôºå‰∏çËÉΩËØ¥Â§™Â§öÔºåÈªòËÆ§ÂÖ≥Èó≠ÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂèØ‰ª•ÁßÅ‰∏ã‰∫§ÊµÅ&lt;/li&gt; 
 &lt;li&gt;ÂèçÊ≠£ÂºÄ‰∫ÜËøô‰∏™‰πãÂêéÔºå‰∏äÈù¢ÈÇ£‰∫õdns‰ºòÈÄâ‰ªÄ‰πàÁöÑÁâπÊÄßÂ•ΩÂÉèÈÉΩ‰∏çÈ¶ô‰∫Ü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;ÂÆâÂÖ®Ë≠¶Âëä&lt;/strong&gt;&lt;/em&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ËØ∑Âãø‰ΩøÁî®Êù•Ê∫ê‰∏çÊòéÁöÑÊúçÂä°Âú∞ÂùÄÔºåÊúâÈöêÁßÅÂíåË¥¶Âè∑Ê≥ÑÈú≤È£éÈô©&lt;/li&gt; 
 &lt;li&gt;Êú¨Â∫îÁî®ÂèäÊúçÂä°Á´ØÊâøËØ∫‰∏çÊî∂ÈõÜ‰ªª‰Ωï‰ø°ÊÅØ„ÄÇ‰ªãÊÑèËÄÖËØ∑‰ΩøÁî®ÂÆâÂÖ®Ê®°Âºè„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Âª∫ËÆÆËá™Âª∫ÊúçÂä°Á´ØÔºàÂ¢ûÂº∫ÂäüËÉΩÈ°µÈù¢Âè≥‰∏äËßíÁÇπÂáªÊü•ÁúãËá™Âª∫ÊúçÂä°Á´ØÊñπÊ≥ïÔºâ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Âø´ÈÄüÂºÄÂßã&lt;/h2&gt; 
&lt;p&gt;ÊîØÊåÅwindows„ÄÅMac&lt;/p&gt; 
&lt;h3&gt;DevSidecarÊ°åÈù¢Â∫îÁî®&lt;/h3&gt; 
&lt;h4&gt;1 ‰∏ãËΩΩÂÆâË£ÖÂåÖ&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;release‰∏ãËΩΩ&lt;br&gt; &lt;a href=&quot;https://gitee.com/docmirror/dev-sidecar/releases&quot;&gt;Gitee Release&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/docmirror/dev-sidecar/releases&quot;&gt;Github Release&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Windows: ËØ∑ÈÄâÊã©DevSidecar-x.x.x.exe&lt;br&gt; Mac: ËØ∑ÈÄâÊã©DevSidecar-x.x.x.dmg&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2 ÂÆâË£ÖÂêéÊâìÂºÄ&lt;/h4&gt; 
&lt;p&gt;Ê≥®ÊÑèÔºömacÁâàÂÆâË£ÖÈúÄË¶ÅÂú®‚ÄúÁ≥ªÁªüÂÅèÂ•ΩËÆæÁΩÆ-&amp;gt;ÂÆâÂÖ®ÊÄß‰∏éÈöêÁßÅ-&amp;gt;ÈÄöÁî®‚Äù‰∏≠Ëß£ÈîÅÂπ∂ÂÖÅËÆ∏Â∫îÁî®ÂÆâË£Ö&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/index.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;3 ÂÆâË£ÖÊ†πËØÅ‰π¶&lt;/h4&gt; 
&lt;p&gt;Á¨¨‰∏ÄÊ¨°ÊâìÂºÄ‰ºöÊèêÁ§∫ÂÆâË£ÖËØÅ‰π¶ÔºåÊ†πÊçÆÊèêÁ§∫Êìç‰ΩúÂç≥ÂèØ&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ê†πËØÅ‰π¶ÊòØÊú¨Âú∞ÈöèÊú∫ÁîüÊàêÁöÑÔºåÊâÄ‰ª•‰∏çÁî®ÊãÖÂøÉÊ†πËØÅ‰π¶ÁöÑÂÆâÂÖ®ÈóÆÈ¢òÔºàÊú¨Â∫îÁî®‰∏çÊî∂ÈõÜ‰ªª‰ΩïÁî®Êà∑‰ø°ÊÅØÔºâ&lt;br&gt; ‰Ω†‰πüÂèØ‰ª•Âú®Âä†ÈÄüÊúçÂä°ËÆæÁΩÆ‰∏≠Ëá™ÂÆö‰πâÊ†πËØÅ‰π¶ÔºàPEMÊ†ºÂºèÁöÑËØÅ‰π¶‰∏éÁßÅÈí•Ôºâ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;4 ÂºÄÂßãÂä†ÈÄüÂêß&lt;/h4&gt; 
&lt;p&gt;ÂéªËØïËØïÊâìÂºÄgithub&lt;/p&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Á¨¨‰∏ÄÊ¨°ËÆøÈóÆ‰ºöÂéªÂõΩÂ§ñÁöÑdnsÊúçÂä°Âô®‰∏äËé∑ÂèñipÔºå‰ºöÊØîËæÉÊÖ¢‰∏ÄÁÇπÔºåÂêéÈù¢Â∞±Âø´‰∫Ü&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;ÂºÄÂêØÂâç vs ÂºÄÂêØÂêé&lt;/h3&gt; 
&lt;p&gt;| | ÂºÄÂêØÂâç | ÂºÄÂêØÂêé | | ‚Äì‚Äì | ‚Äì‚Äì | ‚Äì‚Äì | |Â§¥ÂÉè| &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/avatar2.png&quot; alt=&quot;&quot;&gt; |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/avatar1.png&quot; alt=&quot;&quot;&gt; | |clone |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/clone-before.png&quot; alt=&quot;&quot;&gt; |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/clone.png&quot; alt=&quot;&quot;&gt; |&lt;br&gt; |zip ‰∏ãËΩΩ |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/download-before.png&quot; alt=&quot;&quot;&gt; |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/download.png&quot; alt=&quot;&quot;&gt;Áßí‰∏ãÁöÑÔºåÂÆûÂú®Êà™‰∏çÂà∞ÈÄüÂ∫¶ÁöÑÂõæ |&lt;/p&gt; 
&lt;h2&gt;Ê®°ÂºèËØ¥Êòé&lt;/h2&gt; 
&lt;h3&gt;ÂÆâÂÖ®Ê®°Âºè&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê≠§Ê®°ÂºèÔºöÂÖ≥Èó≠Êã¶Êà™„ÄÅÂÖ≥Èó≠Â¢ûÂº∫„ÄÅÂºÄÂêØdns‰ºòÈÄâ„ÄÅÂºÄÂêØÊµãÈÄü&lt;/li&gt; 
 &lt;li&gt;ÊúÄÂÆâÂÖ®ÔºåÊó†ÈúÄÂÆâË£ÖËØÅ‰π¶ÔºåÂèØ‰ª•Âú®ÊµèËßàÂô®Âú∞ÂùÄÊ†èÂ∑¶‰æßÊü•ÁúãÂüüÂêçËØÅ‰π¶&lt;/li&gt; 
 &lt;li&gt;ÂäüËÉΩ‰πüÊúÄÂº±ÔºåÂè™ÊúâÁâπÊÄß1ÔºåÁõ∏ÂΩì‰∫éÊü•ËØ¢githubÁöÑÂõΩÂ§ñipÔºåÊâãÂä®Êîπhosts‰∏Ä‰∏™ÊÑèÊÄù„ÄÇ&lt;/li&gt; 
 &lt;li&gt;githubÁöÑÂèØËÆøÈóÆÊÄß‰∏çÁ®≥ÂÆöÔºåÂèñÂÜ≥‰∫éIPÊµãÈÄüÔºåÂ¶ÇÊûúÊúâÁªøËâ≤ipÂ≠òÂú®ÔºåÂ∞± &lt;code&gt;ÊúâÂèØËÉΩ&lt;/code&gt; ÂèØ‰ª•Áõ¥ËøûËÆøÈóÆ„ÄÇ &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/speed.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÈªòËÆ§Ê®°Âºè&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê≠§Ê®°ÂºèÔºöÂºÄÂêØÊã¶Êà™„ÄÅÂÖ≥Èó≠Â¢ûÂº∫„ÄÅÂºÄÂêØdns‰ºòÈÄâ„ÄÅÂºÄÂêØÊµãÈÄü&lt;/li&gt; 
 &lt;li&gt;ÈúÄË¶ÅÂÆâË£ÖËØÅ‰π¶&lt;/li&gt; 
 &lt;li&gt;ÂäüËÉΩ‰∏äÂåÖÂê´ÁâπÊÄß1/2/3/4„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Â¢ûÂº∫Ê®°Âºè&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê≠§Ê®°ÂºèÔºöÂºÄÂêØÊã¶Êà™„ÄÅÂºÄÂêØÂ¢ûÂº∫„ÄÅÂºÄÂêØdns‰ºòÈÄâ„ÄÅÂÖ≥Èó≠ÊµãÈÄü&lt;/li&gt; 
 &lt;li&gt;ÈúÄË¶ÅÂÆâË£ÖËØÅ‰π¶&lt;/li&gt; 
 &lt;li&gt;ÂäüËÉΩ‰∏äÂåÖÂê´ÁâπÊÄß1/2/3/4/5&lt;/li&gt; 
 &lt;li&gt;Áî±‰∫éÊïèÊÑüÂéüÂõ†ÔºåÈªòËÆ§ÂÖ≥Èó≠ÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂèØ‰ª•ÁßÅ‰∏ã‰∫§ÊµÅ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÊúÄ‰Ω≥ÂÆûË∑µ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êäädev-sidecar‰∏ÄÁõ¥ÂºÄÁùÄÂ∞±Ë°å‰∫Ü&lt;/li&gt; 
 &lt;li&gt;Âª∫ËÆÆÈÅáÂà∞ÊâìÂºÄÊØîËæÉÊÖ¢ÁöÑÂõΩÂ§ñÁΩëÁ´ôÔºåÂèØ‰ª•Â∞ùËØïÂ∞ÜËØ•ÂüüÂêçÊ∑ªÂä†Âà∞dnsËÆæÁΩÆ‰∏≠ÔºàÊ≥®ÊÑèÔºöË¢´GFWÂ∞ÅÊùÄÁöÑÊó†ÊïàÔºâ&lt;/li&gt; 
 &lt;li&gt;ÊúâÊó∂ÂÄôÂÆâÂÖ®Ê®°ÂºèÊâìÂºÄgithub‰πüÊå∫Âø´&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂÖ∂‰ªñÂä†ÈÄü&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;git clone Âä†ÈÄü&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;ÊñπÂºè1ÔºöÂø´Êç∑Â§çÂà∂Ôºö&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÂºÄÂêØËÑöÊú¨ÊîØÊåÅÔºåÁÑ∂ÂêéÂú®Â§çÂà∂cloneÈìæÊé•‰∏ãÊñπÔºåÂç≥ÂèØÂ§çÂà∂Âà∞Âä†ÈÄüÈìæÊé•&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;ÊñπÂºè2Ôºö&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‰ΩøÁî®ÊñπÂºèÁî®ÂÆûÈôÖÁöÑÂêçÁß∞ÊõøÊç¢{}ÁöÑÂÜÖÂÆπÔºåÂç≥ÂèØÂä†ÈÄüclone&lt;br&gt; https://hub.fastgit.org/{username}/{reponame}.git&lt;br&gt; clone Âá∫Êù•ÁöÑ remote ‚Äúorigin‚Äù ‰∏∫fastgitÁöÑÂú∞ÂùÄÔºåÈúÄË¶ÅÊâãÂä®ÊîπÂõûÊù•&lt;br&gt; ‰Ω†‰πüÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®‰ªñ‰ª¨ÁöÑcloneÂä†ÈÄüÂ∑•ÂÖ∑ &lt;a href=&quot;https://github.com/FastGitORG/fgit-go&quot;&gt;fgit-go&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;github.comÁöÑÈïúÂÉèÁΩëÁ´ô(Ê≥®ÊÑèÔºö‰∏çËÉΩÁôªÂΩï)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href=&quot;https://hub.fastgit.org/&quot;&gt;hub.fastgit.org&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com.cnpmjs.org/&quot;&gt;github.com.cnpmjs.org&lt;/a&gt; Ëøô‰∏™ÂæàÂÆπÊòìË∂ÖÈôê&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;api&lt;/h2&gt; 
&lt;h3&gt;Êã¶Êà™ÈÖçÁΩÆ&lt;/h3&gt; 
&lt;p&gt;Ê≤°ÊúâÈÖçÁΩÆÂüüÂêçÁöÑ‰∏ç‰ºöÊã¶Êà™ÔºåÂÖ∂‰ªñÊ†πÊçÆÈÖçÁΩÆËøõË°åÊã¶Êà™Â§ÑÁêÜ&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const intercepts = {
  // Ë¶ÅÊã¶Êà™ÁöÑÂüüÂêç
  &#39;github.com&#39;: {
     //ÈúÄË¶ÅÊã¶Êà™urlÁöÑÊ≠£ÂàôË°®ËææÂºè
     &#39;/.*/.*/releases/download/&#39;: {
        //Êã¶Êà™Á±ªÂûã
        // redirect:url,  ‰∏¥Êó∂ÈáçÂÆöÂêë(url‰ºöÂèòÔºå‰∏Ä‰∫õ‰∏ãËΩΩËµÑÊ∫êÂèØ‰ª•ÈÄöËøáÊ≠§ÊñπÂºèÈÖçÁΩÆ)
        // proxy:url,     ‰ª£ÁêÜÔºàurl‰∏ç‰ºöÂèòÔºåÊ≤°ÊúâË∑®ÂüüÈóÆÈ¢òÔºâ
        // abort:true,    ÂèñÊ∂àËØ∑Ê±ÇÔºàÈÄÇÁî®‰∫éË¢´GFWÂ∞ÅÈîÅÁöÑËµÑÊ∫êÔºåÊâæ‰∏çÂà∞Êõø‰ª£ÔºåÁõ¥Êé•ÂèñÊ∂àËØ∑Ê±ÇÔºåÂø´ÈÄüÂ§±Ë¥•ÔºåËäÇÁúÅÊó∂Èó¥Ôºâ
        // success:true,  Áõ¥Êé•ËøîÂõûÊàêÂäüËØ∑Ê±ÇÔºàÊüê‰∫õËØ∑Ê±Ç‰∏çÊÉ≥ÂèëÂá∫ÂéªÔºåÂèØ‰ª•‰º™Ë£ÖÊàêÂäüËøîÂõûÔºâ
        redirect: &#39;download.fastgit.org&#39;
      },
   },
   &#39;ajax.googleapis.com&#39;: {
     &#39;.*&#39;: {
       proxy: &#39;ajax.loli.net&#39;, //‰ª£ÁêÜËØ∑Ê±ÇÔºåurl‰∏ç‰ºöÂèò
       backup: [&#39;ajax.proxy.ustclug.org&#39;], //Â§á‰ªΩÔºåÂΩìÂâç‰ª£ÁêÜËØ∑Ê±ÇÂ§±Ë¥•ÂêéÔºåÂ∞Ü‰ºöÂàáÊç¢Âà∞Â§áÁî®Âú∞ÂùÄ
       test: &#39;ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js&#39;,
       replace:&#39;/(.*)/xxx&#39;//ÂΩìÂä†ÈÄüÂú∞ÂùÄÁöÑÈìæÊé•ÂíåÂéüÈìæÊé•‰∏çÊòØÂÆåÂÖ®Áõ∏ÂêåÊó∂ÔºåÂèØ‰ª•ÈÄöËøáÊ≠£ÂàôË°®ËææÂºèreplaceÔºåÊ≠§Êó∂proxyÈÄöËøá$1$2Êù•ÈáçÁªÑurlÔºå proxy:&#39;ajax.loli.net/xxx/$1&#39;
     }
   },
   &#39;clients*.google.com&#39;: {
      &#39;.*&#39;:{
        abort: true //ÂèñÊ∂àËØ∑Ê±ÇÔºåË¢´GFWÂ∞ÅÈîÅÁöÑËµÑÊ∫êÔºåÊâæ‰∏çÂà∞Êõø‰ª£ÔºåÁõ¥Êé•ÂèñÊ∂àËØ∑Ê±ÇÔºåÂø´ÈÄüÂ§±Ë¥•ÔºåËäÇÁúÅÊó∂Èó¥
      }
    }       
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;DNS‰ºòÈÄâÈÖçÁΩÆ&lt;/h3&gt; 
&lt;p&gt;Êüê‰∫õÂüüÂêçËß£ÊûêÂá∫Êù•ÁöÑip‰ºöÊó†Ê≥ïËÆøÈóÆÔºåÔºàÊØîÂ¶Çapi.github.com‰ºöË¢´Ëß£ÊûêÂà∞Êñ∞Âä†Âù°ÁöÑip‰∏äÔºåÊñ∞Âä†Âù°ÁöÑÊúçÂä°Âô®Âú®‰∏äÂçàÊå∫Â•ΩÔºåÂà∞‰∫ÜÊôö‰∏äÂ∞±Âç°Ê≠ªÔºåÂü∫Êú¨‰∏çÂèØÁî®Ôºâ&lt;br&gt; ÈÄöËøá‰ªédns‰∏äËé∑ÂèñipÂàóË°®ÔºåÂàáÊç¢‰∏çÂêåÁöÑipËøõË°åÂ∞ùËØïÔºåÊúÄÁªà‰ºöÊåëÈÄâÂà∞‰∏Ä‰∏™ÊúÄÂø´ÁöÑip&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; dns: {
    mapping: {
      //
      &#39;api.github.com&#39;: &#39;usa&#39;, // &quot;Ëß£ÂÜ≥pushÁöÑÊó∂ÂÄôÈúÄË¶ÅËæìÂÖ•ÂØÜÁ†ÅÁöÑÈóÆÈ¢ò&quot;,
      &#39;gist.github.com&#39;: &#39;usa&#39; // Ëß£ÂÜ≥gistÊó†Ê≥ïËÆøÈóÆÁöÑÈóÆÈ¢ò
      &quot;*.githubusercontent.com&quot;: &quot;usa&quot; // Ëß£ÂÜ≥githubÂ§¥ÂÉèÁªèÂ∏∏‰∏ãËΩΩ‰∏çÂà∞ÁöÑÈóÆÈ¢ò
    }
  },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ê≥®ÊÑèÔºöÊöÇÊó∂Âè™ÊîØÊåÅIPv4ÁöÑËß£Êûê&lt;/p&gt; 
&lt;h2&gt;ÈóÆÈ¢òÊéíÊü•&lt;/h2&gt; 
&lt;h3&gt;1„ÄÅdev-sidecarÁöÑÂâç‰∏§‰∏™ÂºÄÂÖ≥Ê≤°ÊúâÂ§Ñ‰∫éÊâìÂºÄÁä∂ÊÄÅ&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Â∞ùËØïÂ∞ÜÂºÄÂÖ≥ÊåâÈíÆÊâãÂä®ÊâìÂºÄ&lt;/li&gt; 
 &lt;li&gt;ËØ∑Â∞ùËØïÂè≥ÈîÆdev-sidecarÂõæÊ†áÔºåÁÇπÈÄÄÂá∫„ÄÇÂÜçÈáçÊñ∞ÊâìÂºÄ&lt;/li&gt; 
 &lt;li&gt;Â¶ÇÊûúËøò‰∏çË°åÔºåËØ∑Â∞ÜÊó•ÂøóÂèëÈÄÅÁªô‰ΩúËÄÖ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Â¶ÇÊûúÊòØmacÁ≥ªÁªüÔºåÂèØËÉΩÊòØ‰∏ãÈù¢ÁöÑÂéüÂõ†&lt;/p&gt; 
&lt;h4&gt;MacÁ≥ªÁªü‰ΩøÁî®Êó∂ÔºåÈ¶ñÈ°µÁöÑÁ≥ªÁªü‰ª£ÁêÜÂºÄÂÖ≥Êó†Ê≥ïÊâìÂºÄ&lt;/h4&gt; 
&lt;p&gt;Âá∫Áé∞Ëøô‰∏™ÈóÆÈ¢òÂèØËÉΩÊòØÊ≤°ÊúâÂºÄÂêØÁ≥ªÁªü‰ª£ÁêÜÂëΩ‰ª§ÁöÑÊâßË°åÊùÉÈôê&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;networksetup -setwebproxy &#39;WiFi&#39; 127.0.0.1 1181 
#ÁúãÊòØÂê¶ÊúâÂ¶Ç‰∏ãÈîôËØØÊèêÁ§∫
** Error: Command requires admin privileges.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Â¶ÇÊûúÊúâ‰∏äÈù¢ÁöÑÈîôËØØÊèêÁ§∫ÔºåËØ∑Â∞ùËØïÂ¶Ç‰∏ã‰∏§ÁßçÊñπÊ≥ïÔºö&lt;/p&gt; 
&lt;p&gt;1„ÄÅ ÂèñÊ∂àËÆøÈóÆÂÅèÂ•ΩËÆæÁΩÆÈúÄË¶ÅÁÆ°ÁêÜÂëòÂØÜÁ†Å Á≥ªÁªüÂÅèÂ•ΩËÆæÁΩÆ‚Äî&amp;gt;ÂÆâÂÖ®ÊÄß‰∏éÈöêÁßÅ‚Äî&amp;gt; ÈÄöÁî®‚Äî&amp;gt; È´òÁ∫ß‚Äî&amp;gt; ËÆøÈóÆÁ≥ªÁªüËåÉÂõ¥ÁöÑÂÅèÂ•ΩËÆæÁΩÆÈúÄË¶ÅËæìÂÖ•ÁÆ°ÁêÜÂëòÂØÜÁ†ÅÔºàÂèñÊ∂àÂãæÈÄâÔºâ&lt;/p&gt; 
&lt;p&gt;2„ÄÅ ÂèØËÉΩÊòØÁî±‰∫éÂÆâË£Ö‰∫ÜxcodeÔºå‰ΩÜÊú™ÊéàÊùÉÂØºËá¥ ËØ∑Âú®ÁªàÁ´ØËæìÂÖ•Â¶Ç‰∏ãÂëΩ‰ª§ËøõË°åÊéàÊùÉ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo xcodebuild -license
# ‰∏ÄÁõ¥ÊåâÂõûËΩ¶ÔºåËØ•agreeÁöÑÊó∂ÂÄôËæìÂÖ•agreeÂç≥ÂèØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÁÑ∂ÂêéÂÜçÊ¨°Â∞ùËØïÁúãÊòØÂê¶ËÉΩÂ§üÊâìÂºÄÁ≥ªÁªü‰ª£ÁêÜÂºÄÂÖ≥&lt;br&gt; Â¶ÇÊûúËøò‰∏çË°åÔºåËØ∑ËÅîÁ≥ª‰ΩúËÄÖ&lt;/p&gt; 
&lt;h3&gt;2„ÄÅÊ≤°ÊúâÂä†ÈÄüÊïàÊûú&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Êú¨Â∫îÁî®‰ªÖÊîØÊåÅhttpsÂä†ÈÄüÔºåËØ∑Âä°ÂøÖÁ°ÆËÆ§‰Ω†ËÆøÈóÆÁöÑÁΩëÁ´ôÂú∞ÂùÄÊòØhttpsÂºÄÂ§¥ÁöÑ&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Êú¨Â∫îÁî®‰ªÖÊîØÊåÅhttpsÂä†ÈÄü ËØ∑Âä°ÂøÖÁ°ÆËÆ§‰Ω†ËÆøÈóÆÁöÑÂú∞ÂùÄÊòØhttpsÂºÄÂ§¥ÁöÑ ÊØîÂ¶ÇÔºö https://github.com/&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ê£ÄÊü•ÊµèËßàÂô®ÊòØÂê¶Ë£Ö‰∫Ü‰ªÄ‰πàÊèí‰ª∂Ôºå‰∏édsÊúâÂÜ≤Á™Å&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ê£ÄÊü•ÊòØÂê¶ÂÆâË£Ö‰∫ÜÂÖ∂‰ªñ‰ª£ÁêÜËΩØ‰ª∂Ôºå‰∏édsÊúâÂÜ≤Á™Å&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ËØ∑Á°ÆËÆ§ÊµèËßàÂô®ÁöÑ‰ª£ÁêÜËÆæÁΩÆ‰∏∫‰ΩøÁî®IE‰ª£ÁêÜ/ÊàñËÄÖ‰ΩøÁî®Á≥ªÁªü‰ª£ÁêÜÁä∂ÊÄÅ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÂèØ‰ª•Â∞ùËØïÊç¢‰∏™ÊµèËßàÂô®ËØïËØï&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ËØ∑Á°ÆËÆ§ÁΩëÁªú‰ª£ÁêÜËÆæÁΩÆÂ§Ñ‰∫éÂãæÈÄâÁä∂ÊÄÅ&lt;br&gt; Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãdev-sidecarÂú®‚ÄúÁ≥ªÁªü‰ª£ÁêÜ‚ÄùÂºÄÂÖ≥ÊâìÂºÄÊó∂Ôºå‰ºöËá™Âä®ËÆæÁΩÆ‰ª£ÁêÜ„ÄÇ&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Â¶Ç‰ΩïÊâìÂºÄÊü•Áúãwindows‰ª£ÁêÜËÆæÁΩÆÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;win10: ÂºÄÂßã-&amp;gt;ËÆæÁΩÆ-&amp;gt;ÁΩëÁªúÂíåInternet-&amp;gt;ÊúÄ‰∏ãÊñπ‰ª£ÁêÜ&lt;/li&gt; 
 &lt;li&gt;win7: ÂºÄÂßã-&amp;gt;ÊéßÂà∂Èù¢Êùø-&amp;gt;ÁΩëÁªúÂíåInternet-&amp;gt;ÁΩëÁªúÂíåÂÖ±‰∫´‰∏≠ÂøÉ-&amp;gt;Â∑¶‰∏ãËßíInternetÈÄâÈ°π-&amp;gt;ËøûÊé•ÈÄâÈ°πÂç°-&amp;gt;Â±ÄÂüüÁΩëËÆæÁΩÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;windows ‰ª£ÁêÜÊü•Áúã&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/proxy.png&quot; alt=&quot;windows&quot;&gt;&lt;/p&gt; 
&lt;p&gt;mac ‰ª£ÁêÜÊü•Áúã&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/mac-proxy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3„ÄÅÊµèËßàÂô®ÊâìÂºÄÊèêÁ§∫ËØÅ‰π¶‰∏çÂèó‰ø°‰ªª&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;windows: ËØ∑Á°ÆËÆ§ËØÅ‰π¶Â∑≤Ê≠£Á°ÆÂÆâË£ÖÂú®‚Äú‰ø°‰ªªÁöÑÊ†πËØÅ‰π¶È¢ÅÂèëÊú∫ÊûÑ‚Äù‰∏ã&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;mac: ËØ∑Á°ÆËÆ§ËØÅ‰π¶Â∑≤ÁªèË¢´ÂÆâË£ÖÂπ∂Â∑≤ÁªèËÆæÁΩÆ‰ø°‰ªª„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÁÅ´ÁãêÊµèËßàÂô®ÔºöÁÅ´ÁãêÊµèËßàÂô®‰∏çËµ∞Á≥ªÁªüÁöÑÊ†πËØÅ‰π¶ÔºåÈúÄË¶ÅÂú®ÈÄâÈ°π‰∏≠Ê∑ªÂä†Ê†πËØÅ‰π¶&lt;br&gt; 1„ÄÅÁÅ´ÁãêÊµèËßàÂô®-&amp;gt;ÈÄâÈ°π-&amp;gt;ÈöêÁßÅ‰∏éÂÆâÂÖ®-&amp;gt;ËØÅ‰π¶-&amp;gt;Êü•ÁúãËØÅ‰π¶&lt;br&gt; 2„ÄÅËØÅ‰π¶È¢ÅÂèëÊú∫ÊûÑ-&amp;gt;ÂØºÂÖ•&lt;br&gt; 3„ÄÅÈÄâÊã©ËØÅ‰π¶Êñá‰ª∂&lt;code&gt;C:\Users\Administrator\.dev-sidecar\dev-sidecar.ca.crt&lt;/code&gt;ÔºàMac‰∏∫&lt;code&gt;~/.dev-sidecar&lt;/code&gt;ÁõÆÂΩïÔºâ&lt;br&gt; 4„ÄÅÂãæÈÄâ‰ø°‰ªªÁî±Ê≠§ËØÅ‰π¶È¢ÅÂèëÊú∫ÊûÑÊù•Ê†áËØÜÁΩëÁ´ôÔºåÁ°ÆÂÆöÂç≥ÂèØ&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. ÊâìÂºÄgithubÊòæÁ§∫ËøûÊé•Ë∂ÖÊó∂&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;DevSidecar Warning:
Error: www.github.com:443, ‰ª£ÁêÜËØ∑Ê±ÇË∂ÖÊó∂
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Â¶ÇÊûúÊòØÂÆâÂÖ®Ê®°ÂºèÔºåÂàôÊòØÂõ†‰∏∫‰∏çÁ®≥ÂÆöÂØºËá¥ÁöÑÔºåÁ≠â‰∏Ä‰ºöÂÜçÂà∑Êñ∞ËØïËØï&lt;br&gt; Â¶ÇÊûúÊòØÈªòËÆ§Ê®°Âºè/Â¢ûÂº∫Ê®°ÂºèÔºåÂàôÊòØÁî±‰∫éËÆøÈóÆ‰∫∫Êï∞ËøáÂ§öÔºåÊ≠£Â∏∏Áé∞Ë±°&lt;/p&gt; 
&lt;h3&gt;5„ÄÅÊü•ÁúãÊó•ÂøóÊòØÂê¶ÊúâÊä•Èîô&lt;/h3&gt; 
&lt;p&gt;Â¶ÇÊûúËøòÊòØ‰∏çË°åÔºåËØ∑Âú®‰∏ãÊñπÂä†‰ΩúËÄÖÂ•ΩÂèãÔºåÂ∞ÜÊúçÂä°Êó•ÂøóÂèëÈÄÅÁªô‰ΩúËÄÖËøõË°åÂàÜÊûê&lt;br&gt; Êó•ÂøóÊâìÂºÄÊñπÂºèÔºöÂä†ÈÄüÊúçÂä°-&amp;gt;Âè≥ËæπÊó•ÂøóÊåâÈíÆ-&amp;gt;ÊâìÂºÄÊó•ÂøóÊñá‰ª∂Â§π&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/log.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;6„ÄÅÊüê‰∫õÂéüÊú¨ÂèØ‰ª•ÊâìÂºÄÁöÑÁΩëÁ´ôÊâì‰∏çÂºÄ‰∫Ü&lt;/h3&gt; 
&lt;p&gt;1„ÄÅÂèØ‰ª•Â∞ùËØïÂÖ≥Èó≠pac&lt;br&gt; 2„ÄÅÂèØ‰ª•Â∞ÜÂüüÂêçÂä†ÂÖ•ÁôΩÂêçÂçïÔºåËÆæÁΩÆÊñπÂºèÂèÇËÄÉÔºöhttps://github.com/docmirror/dev-sidecar/issues/25&lt;/p&gt; 
&lt;h3&gt;7„ÄÅ git pushÊä•Èîô&lt;/h3&gt; 
&lt;p&gt;ÂΩìgit pushÁöÑÊï∞ÊçÆÂ§ß‰∫é200kÊó∂Ôºå‰ºöÊä•ÈîôÔºåÁõÆÂâçÁöÑÊñπÊ°à‰∏çÂ§™Â•ΩËß£ÂÜ≥„ÄÇ&lt;br&gt; ‰∏¥Êó∂ÊñπÊ°àÔºöÂàáÂà∞ÂÆâÂÖ®Ê®°ÂºèÔºåÂ∞ùËØïgit pushÔºåÂ§öËØïÂá†Ê¨°Â∞±ÂèØ‰ª•‰∫Ü„ÄÇ&lt;/p&gt; 
&lt;h2&gt;Ë¥°ÁåÆ‰ª£Á†Å&lt;/h2&gt; 
&lt;h3&gt;ÂºÄÂèëË∞ÉËØïÊ®°ÂºèÂêØÂä®&lt;/h3&gt; 
&lt;p&gt;ËøêË°åÂ¶Ç‰∏ãÂëΩ‰ª§Âç≥ÂèØÂºÄÂèëÊ®°ÂºèÂêØÂä®&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/docmirror/dev-sidecar

cd dev-sidecar 

npm install lerna -g
lerna bootstrap

cd packages/gui

npm run electron

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ÊâìÂåÖÊàêÂèØÊâßË°åÊñá‰ª∂&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd packages/gui
npm run electron:build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Êèê‰∫§pr&lt;/h3&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†ÊÉ≥Â∞Ü‰Ω†ÁöÑ‰øÆÊîπË¥°ÁåÆÂá∫Êù•ÔºåËØ∑Êèê‰∫§pr&lt;/p&gt; 
&lt;h2&gt;ËÅîÁ≥ª‰ΩúËÄÖ&lt;/h2&gt; 
&lt;p&gt;Ê¨¢ËøébugÂèçÈ¶àÔºåÈúÄÊ±ÇÂª∫ËÆÆÔºåÊäÄÊúØ‰∫§ÊµÅÁ≠âÔºàËØ∑Â§áÊ≥®dev-sidecarÔºåÊàñÁÆÄÁß∞DSÔºâ&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/contact.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;ÊÑüË∞¢&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆ‰ΩøÁî®lernaÂåÖÁÆ°ÁêÜÂ∑•ÂÖ∑&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://lerna.js.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;lerna&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Êú¨È°πÁõÆÂèÇËÄÉÂ¶Ç‰∏ãÂºÄÊ∫êÈ°πÁõÆ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wuchangming/node-mitmproxy&quot;&gt;node-mitmproxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justjavac/ReplaceGoogleCDN&quot;&gt;ReplaceGoogleCDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD&quot;&gt;githubÂ¢ûÂº∫Ê≤πÁå¥ËÑöÊú¨&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Êú¨È°πÁõÆÂä†ÈÄüËµÑÊ∫êÁî±Â¶Ç‰∏ãÁªÑÁªáÊèê‰æõ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fastgit.org/&quot;&gt;fastgit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>goldbergyoni/javascript-testing-best-practices</title>
      <link>https://github.com/goldbergyoni/javascript-testing-best-practices</link>
      <description>&lt;p&gt;üìóüåê üö¢ Comprehensive and exhaustive JavaScript &amp; Node.js testing best practices (May 2021)&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/jtbp-header-blue.png&quot; width=&quot;1920px&quot;&gt; 
&lt;br&gt; 
&lt;h1&gt;üëá Why this guide can take your testing skills to the next level&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;üìó 46+ best practices: Super-comprehensive and exhaustive&lt;/h2&gt; 
&lt;p&gt;This is a guide for JavaScript &amp;amp; Node.js reliability from A-Z. It summarizes and curates for you dozens of the best blog posts, books and tools the market has to offer&lt;/p&gt; 
&lt;h2&gt;üö¢ Advanced: Goes 10,000 miles beyond the basics&lt;/h2&gt; 
&lt;p&gt;Hop into a journey that travels way beyond the basics into advanced topics like testing in production, mutation testing, property-based testing and many other strategic &amp;amp; professional tools. Should you read every word in this guide your testing skills are likely to go way above the average&lt;/p&gt; 
&lt;h2&gt;üåê Full-stack: front, backend, CI, anything&lt;/h2&gt; 
&lt;p&gt;Start by understanding the ubiquitous testing practices that are the foundation for any application tier. Then, delve into your area of choice: frontend/UI, backend, CI or maybe all of them?&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Written By Yoni Goldberg&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript &amp;amp; Node.js consultant&lt;/li&gt; 
 &lt;li&gt;üìó &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt; - My comprehensive online course with more than &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;10 hours of video&lt;/a&gt;, 14 test types and more than 40 best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goldbergyoni/&quot;&gt;Follow me on Twitter &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h3&gt;Translations - read in your own language&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üá®üá≥&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-zh-CN.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/yvesyao&quot;&gt;Yves yao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üá∞üá∑&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme.kr.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/ragubyun&quot;&gt;Rain Byun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üáµüá±&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-pl.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üá™üá∏&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-es.md&quot;&gt;Spanish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/sanguino&quot;&gt;Miguel G. Sanguino&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üáßüá∑&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-pt-br.md&quot;&gt;Portuguese-BR&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/iagocavalcante&quot;&gt;Iago Angelim Costa Cavalcante&lt;/a&gt; , &lt;a href=&quot;https://github.com/DouglasMV&quot;&gt;Douglas Mariano Valero&lt;/a&gt; and &lt;a href=&quot;https://github.com/koooge&quot;&gt;koooge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Want to translate to your own language? please open an issue üíú&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;Table of Contents&lt;/code&gt;&lt;/h2&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-0%EF%B8%8F%E2%83%A3-the-golden-rule&quot;&gt;&lt;code&gt;Section 0: The Golden Rule&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;A single advice that inspires all the others (1 special bullet)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-1-the-test-anatomy-1&quot;&gt;&lt;code&gt;Section 1: The Test Anatomy&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;The foundation - structuring clean tests (12 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-2%EF%B8%8F%E2%83%A3-backend-testing&quot;&gt;&lt;code&gt;Section 2: Backend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Writing backend and Microservices tests efficiently (8 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-3%EF%B8%8F%E2%83%A3-frontend-testing&quot;&gt;&lt;code&gt;Section 3: Frontend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Writing tests for web UI including component and E2E tests (11 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-4%EF%B8%8F%E2%83%A3-measuring-test-effectiveness&quot;&gt;&lt;code&gt;Section 4: Measuring Tests Effectiveness&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Watching the watchman - measuring test quality (4 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-5%EF%B8%8F%E2%83%A3-ci-and-other-quality-measures&quot;&gt;&lt;code&gt;Section 5: Continuous Integration&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Guidelines for CI in the JS world (9 bullets)&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 0Ô∏è‚É£: The Golden Rule&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™Ô∏è 0 The Golden Rule: Design for lean testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Testing code is not like production-code - design it to be dead-simple, short, abstraction-free, flat, delightful to work with, lean. One should look at a test and get the intent instantly.&lt;/p&gt; 
&lt;p&gt;Our minds are full with the main production code, we don‚Äôt have ‚Äòheadspace‚Äô for additional complexity. Should we try to squeeze yet another challenging code into our poor brain it will slow the team down which works against the reason we do testing. Practically this is where many teams just abandon testing.&lt;/p&gt; 
&lt;p&gt;The tests are an opportunity for something else - a friendly and smiley assistant, one that it‚Äôs delightful to work with and delivers great value for such a small investment. Science tells us that we have two brain systems: system 1 is used for effortless activities like driving a car on an empty road and system 2 which is meant for complex and conscious operations like solving a math equation. Design your test for system 1, when looking at test code it should &lt;em&gt;feel&lt;/em&gt; as easy as modifying an HTML document and not like solving 2X(17 √ó 24).&lt;/p&gt; 
&lt;p&gt;This can be achieved by selectively cherry-picking techniques, tools and test targets that are cost-effective and provide great ROI. Test only as much as needed, strive to keep it nimble, sometimes it‚Äôs even worth dropping some tests and trade reliability for agility and simplicity.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/headspace.png&quot; alt=&quot;alt text&quot; title=&quot;We have no head room for additional complexity&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Most of the advice below are derivatives of this principle.&lt;/p&gt; 
&lt;h3&gt;Ready to start?&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 1: The Test Anatomy&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.1 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; A test report should tell whether the current application revision satisfies the requirements for the people who are not necessarily familiar with the code: the tester, the DevOps engineer who is deploying and the future you two years from now. This can be achieved best if the tests speak at the requirements level and include 3 parts:&lt;/p&gt; 
&lt;p&gt;(1) What is being tested? For example, the ProductsService.addNewProduct method&lt;/p&gt; 
&lt;p&gt;(2) Under what circumstances and scenario? For example, no price is passed to the method&lt;/p&gt; 
&lt;p&gt;(3) What is the expected result? For example, the new product is not approved&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named ‚ÄúAdd product‚Äù failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;üëá Note:&lt;/strong&gt; Each bullet has code examples and sometime also an image illustration. Click to expand &lt;br&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Mocha to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//1. unit under test
describe(&#39;Products Service&#39;, function() {
  describe(&#39;Add new product&#39;, function() {
    //2. scenario and 3. expectation
    it(&#39;When no price is specified, then the product status is pending approval&#39;, ()=&amp;gt; {
      const newProduct = new ProductService().add(...);
      expect(newProduct.status).to.equal(&#39;pendingApproval&#39;);
    });
  });
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-1-3-parts.jpeg&quot; alt=&quot;alt text&quot; title=&quot;A test name that constitutes 3 parts&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;¬© &lt;b&gt;Credits &amp;amp; read-more&lt;/b&gt;&lt;/summary&gt; 1. 
 &lt;a href=&quot;https://osherove.com/blog/2005/4/3/naming-standards-for-unit-tests.html&quot;&gt;Roy Osherove - Naming standards for unit tests&lt;/a&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.2 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Structure your tests with 3 well-separated sections Arrange, Act &amp;amp; Assert (AAA). Following this structure guarantees that the reader spends no brain-CPU on understanding the test plan:&lt;/p&gt; 
&lt;p&gt;1st A - Arrange: All the setup code to bring the system to the scenario the test aims to simulate. This might include instantiating the unit under test constructor, adding DB records, mocking/stubbing on objects and any other preparation code&lt;/p&gt; 
&lt;p&gt;2nd A - Act: Execute the unit under test. Usually 1 line of code&lt;/p&gt; 
&lt;p&gt;3rd A - Assert: Ensure that the received value satisfies the expectation. Usually 1 line of code&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Not only do you spend hours understanding the main code, but what should have been the simplest part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test structured with the AAA pattern&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;describe(&quot;Customer classifier&quot;, () =&amp;gt; {
  test(&quot;When customer spent more than 500$, should be classified as premium&quot;, () =&amp;gt; {
    //Arrange
    const customerToClassify = { spent: 505, joined: new Date(), id: 1 };
    const DBStub = sinon.stub(dataAccess, &quot;getCustomer&quot;).reply({ id: 1, classification: &quot;regular&quot; });

    //Act
    const receivedClassification = customerClassifier.classifyCustomer(customerToClassify);

    //Assert
    expect(receivedClassification).toMatch(&quot;premium&quot;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: No separation, one bulk, harder to interpret&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Should be classified as premium&quot;, () =&amp;gt; {
  const customerToClassify = { spent: 505, joined: new Date(), id: 1 };
  const DBStub = sinon.stub(dataAccess, &quot;getCustomer&quot;).reply({ id: 1, classification: &quot;regular&quot; });
  const receivedClassification = customerClassifier.classifyCustomer(customerToClassify);
  expect(receivedClassification).toMatch(&quot;premium&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è1.3 Describe expectations in a product language: use BDD-style assertions&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Coding your tests in a declarative-style allows the reader to get the grab instantly without spending even a single brain-CPU cycle. When you write imperative code that is packed with conditional logic, the reader is forced to exert more brain-CPU cycles. In that case, code the expectation in a human-like language, declarative BDD style using &lt;code&gt;expect&lt;/code&gt; or &lt;code&gt;should&lt;/code&gt; and not using custom code. If Chai &amp;amp; Jest doesn‚Äôt include the desired assertion and it‚Äôs highly repeatable, consider &lt;a href=&quot;https://jestjs.io/docs/en/expect#expectextendmatchers&quot;&gt;extending Jest matcher (Jest)&lt;/a&gt; or writing a &lt;a href=&quot;https://www.chaijs.com/guide/plugins/&quot;&gt;custom Chai plugin&lt;/a&gt; &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; The team will write less tests and decorate the annoying ones with .skip()&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha &amp;amp; Chai&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: The reader must skim through not so short, and imperative code just to get the test story&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When asking for an admin, ensure only ordered admins in results&quot;, () =&amp;gt; {
  //assuming we&#39;ve added here two admins &quot;admin1&quot;, &quot;admin2&quot; and &quot;user1&quot;
  const allAdmins = getUsers({ adminOnly: true });

  let admin1Found,
    adming2Found = false;

  allAdmins.forEach(aSingleUser =&amp;gt; {
    if (aSingleUser === &quot;user1&quot;) {
      assert.notEqual(aSingleUser, &quot;user1&quot;, &quot;A user was found and not admin&quot;);
    }
    if (aSingleUser === &quot;admin1&quot;) {
      admin1Found = true;
    }
    if (aSingleUser === &quot;admin2&quot;) {
      admin2Found = true;
    }
  });

  if (!admin1Found || !admin2Found) {
    throw new Error(&quot;Not all admins were returned&quot;);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Skimming through the following declarative test is a breeze&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When asking for an admin, ensure only ordered admins in results&quot;, () =&amp;gt; {
  //assuming we&#39;ve added here two admins
  const allAdmins = getUsers({ adminOnly: true });

  expect(allAdmins)
    .to.include.ordered.members([&quot;admin1&quot;, &quot;admin2&quot;])
    .but.not.include.ordered.members([&quot;user1&quot;]);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.4 Stick to black-box testing: Test only public methods&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Testing the internals brings huge overhead for almost nothing. If your code/API delivers the right results, should you really invest your next 3 hours in testing HOW it worked internally and then maintain these fragile tests? Whenever a public behavior is checked, the private implementation is also implicitly tested and your tests will break only if there is a certain problem (e.g. wrong output). This approach is also referred to as &lt;code&gt;behavioral testing&lt;/code&gt;. On the other side, should you test the internals (white box approach)‚Ää‚Äî‚Ääyour focus shifts from planning the component outcome to nitty-gritty details and your test might break because of minor code refactors although the results are fine - this dramatically increases the maintenance burden &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Your tests behave like the &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Boy_Who_Cried_Wolf&quot;&gt;boy who cried wolf&lt;/a&gt;: shouting false-positive cries (e.g., A test fails because a private variable name was changed). Unsurprisingly, people will soon start to ignore the CI notifications until someday, a real bug gets ignored‚Ä¶&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test case is testing the internals for no good reason&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha &amp;amp; Chai&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ProductService {
  //this method is only used internally
  //Change this name will make the tests fail
  calculateVATAdd(priceWithoutVAT) {
    return { finalPrice: priceWithoutVAT * 1.2 };
    //Change the result format or key name above will make the tests fail
  }
  //public method
  getPrice(productId) {
    const desiredProduct = DB.getProduct(productId);
    finalPrice = this.calculateVATAdd(desiredProduct.price).finalPrice;
    return finalPrice;
  }
}

it(&quot;White-box test: When the internal methods get 0 vat, it return 0 response&quot;, async () =&amp;gt; {
  //There&#39;s no requirement to allow users to calculate the VAT, only show the final price. Nevertheless we falsely insist here to test the class internals
  expect(new ProductService().calculateVATAdd(0).finalPrice).to.equal(0);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è Ô∏è1.5 Choose the right test doubles: Avoid mocks in favor of stubs and spies&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Test doubles are a necessary evil because they are coupled to the application internals, yet some provide immense value (&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot; data-href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot;&gt;Read here a reminder about test doubles: mocks vs stubs vs spies&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Before using test doubles, ask a very simple question: Do I use it to test functionality that appears, or could appear, in the requirements document? If no, it‚Äôs a white-box testing smell.&lt;/p&gt; 
&lt;p&gt;For example, if you want to test that your app behaves reasonably when the payment service is down, you might stub the payment service and trigger some ‚ÄòNo Response‚Äô return to ensure that the unit under test returns the right value. This checks our application behavior/response/outcome under certain scenarios. You might also use a spy to assert that an email was sent when that service is down‚Ää‚Äî‚Ääthis is again a behavioral check which is likely to appear in a requirements doc (‚ÄúSend an email if payment couldn‚Äôt be saved‚Äù). On the flip side, if you mock the Payment service and ensure that it was called with the right JavaScript types‚Ää‚Äî‚Ääthen your test is focused on internal things that have nothing to do with the application functionality and are likely to change frequently &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Any refactoring of code mandates searching for all the mocks in the code and updating accordingly. Tests become a burden rather than a helpful friend&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern example: Mocks focus on the internals&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Sinon-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Sinon&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When a valid product is about to be deleted, ensure data access DAL was called once, with the right product and right config&quot;, async () =&amp;gt; {
  //Assume we already added a product
  const dataAccessMock = sinon.mock(DAL);
  //hmmm BAD: testing the internals is actually our main goal here, not just a side-effect
  dataAccessMock
    .expects(&quot;deleteProduct&quot;)
    .once()
    .withArgs(DBConfig, theProductWeJustAdded, true, false);
  new ProductService().deletePrice(theProductWeJustAdded);
  dataAccessMock.verify();
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: spies are focused on testing the requirements but as a side-effect are unavoidably touching to the internals&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When a valid product is about to be deleted, ensure an email is sent&quot;, async () =&amp;gt; {
  //Assume we already added here a product
  const spy = sinon.spy(Emailer.prototype, &quot;sendEmail&quot;);
  new ProductService().deletePrice(theProductWeJustAdded);
  //hmmm OK: we deal with internals? Yes, but as a side effect of testing the requirements (sending an email)
  expect(spy.calledOnce).to.be.true;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;üìó Want to learn all these practices with live video?&lt;/h2&gt; 
&lt;h3&gt;Visit my online course &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è1.6 Don‚Äôt ‚Äúfoo‚Äù, use realistic input data&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Often production bugs are revealed under some very specific and surprising input‚Ää‚Äî‚Ääthe more realistic the test input is, the greater the chances are to catch bugs early. Use dedicated libraries like &lt;a href=&quot;https://www.npmjs.com/package/faker&quot;&gt;Faker&lt;/a&gt; to generate pseudo-real data that resembles the variety and form of production data. For example, such libraries can generate realistic phone numbers, usernames, credit card, company names, and even ‚Äòlorem ipsum‚Äô text. You may also create some tests (on top of unit tests, not as a replacement) that randomize fakers data to stretch your unit under test or even import real data from your production environment. Want to take it to the next level? See the next bullet (property-based testing). &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; All your development testing will falsely show green when you use synthetic inputs like ‚ÄúFoo‚Äù, but then production might turn red when a hacker passes-in a nasty string like ‚Äú@3e2ddsf . ##‚Äô 1 fdsfds . fds432 AAAA‚Äù&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test suite that passes due to non-realistic data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addProduct = (name, price) =&amp;gt; {
  const productNameRegexNoSpace = /^\S*$/; //no white-space allowed

  if (!productNameRegexNoSpace.test(name)) return false; //this path never reached due to dull input

  //some logic here
  return true;
};

test(&quot;Wrong: When adding new product with valid properties, get successful confirmation&quot;, async () =&amp;gt; {
  //The string &quot;Foo&quot; which is used in all tests never triggers a false result
  const addProductResult = addProduct(&quot;Foo&quot;, 5);
  expect(addProductResult).toBe(true);
  //Positive-false: the operation succeeded because we never tried with long
  //product name including spaces
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: Randomizing realistic input&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;Better: When adding new valid product, get successful confirmation&quot;, async () =&amp;gt; {
  const addProductResult = addProduct(faker.commerce.productName(), faker.random.number());
  //Generated random input: {&#39;Sleek Cotton Computer&#39;,  85481}
  expect(addProductResult).to.be.true;
  //Test failed, the random input triggered some path we never planned for.
  //We discovered a bug early!
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.7 Test many input combinations using Property-based testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Typically we choose a few input samples for each test. Even when the input format resembles real-world data (see bullet ‚ÄòDon‚Äôt foo‚Äô), we cover only a few input combinations (method(‚Äò‚Äô, true, 1), method(‚Äústring‚Äù , false‚Äù , 0)), However, in production, an API that is called with 5 parameters can be invoked with thousands of different permutations, one of them might render our process down (&lt;a href=&quot;https://en.wikipedia.org/wiki/Fuzzing&quot;&gt;see Fuzz Testing&lt;/a&gt;). What if you could write a single test that sends 1000 permutations of different inputs automatically and catches for which input our code fails to return the right response? Property-based testing is a technique that does exactly that: by sending all the possible input combinations to your unit under test it increases the serendipity of finding a bug. For example, given a method‚Ää‚Äî‚ÄäaddNewProduct(id, name, isDiscount)‚Ää‚Äî‚Ääthe supporting libraries will call this method with many combinations of (number, string, boolean) like (1, ‚ÄúiPhone‚Äù, false), (2, ‚ÄúGalaxy‚Äù, true). You can run property-based testing using your favorite test runner (Mocha, Jest, etc) using libraries like &lt;a href=&quot;https://github.com/jsverify/jsverify&quot;&gt;js-verify&lt;/a&gt; or &lt;a href=&quot;https://github.com/leebyron/testcheck-js&quot;&gt;testcheck&lt;/a&gt; (much better documentation). Update: Nicolas Dubien suggests in the comments below to &lt;a href=&quot;https://github.com/dubzzz/fast-check#readme&quot;&gt;checkout fast-check&lt;/a&gt; which seems to offer some additional features and also to be actively maintained &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Unconsciously, you choose the test inputs that cover only code paths that work well. Unfortunately, this decreases the efficiency of testing as a vehicle to expose bugs&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Testing many input permutations with ‚Äúfast-check‚Äù&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import fc from &quot;fast-check&quot;;

describe(&quot;Product service&quot;, () =&amp;gt; {
  describe(&quot;Adding new&quot;, () =&amp;gt; {
    //this will run 100 times with different random properties
    it(&quot;Add new product with random yet valid properties, always successful&quot;, () =&amp;gt;
      fc.assert(
        fc.property(fc.integer(), fc.string(), (id, name) =&amp;gt; {
          expect(addNewProduct(id, name).status).toEqual(&quot;approved&quot;);
        })
      ));
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.8 If needed, use only short &amp;amp; inline snapshots&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When there is a need for &lt;a href=&quot;https://jestjs.io/docs/en/snapshot-testing&quot;&gt;snapshot testing&lt;/a&gt;, use only short and focused snapshots (i.e. 3-7 lines) that are included as part of the test (&lt;a href=&quot;https://jestjs.io/docs/en/snapshot-testing#inline-snapshots&quot;&gt;Inline Snapshot&lt;/a&gt;) and not within external files. Keeping this guideline will ensure your tests remain self-explanatory and less fragile.&lt;/p&gt; 
&lt;p&gt;On the other hand, ‚Äòclassic snapshots‚Äô tutorials and tools encourage to store big files (e.g. component rendering markup, API JSON result) over some external medium and ensure each time when the test run to compare the received result with the saved version. This, for example, can implicitly couple our test to 1000 lines with 3000 data values that the test writer never read and reasoned about. Why is this wrong? By doing so, there are 1000 reasons for your test to fail - it‚Äôs enough for a single line to change for the snapshot to get invalid and this is likely to happen a lot. How frequently? for every space, comment or minor CSS/HTML change. Not only this, the test name wouldn‚Äôt give a clue about the failure as it just checks that 1000 lines didn‚Äôt change, also it encourages to the test writer to accept as the desired true a long document he couldn‚Äôt inspect and verify. All of these are symptoms of obscure and eager test that is not focused and aims to achieve too much&lt;/p&gt; 
&lt;p&gt;It‚Äôs worth noting that there are few cases where long &amp;amp; external snapshots are acceptable - when asserting on schema and not data (extracting out values and focusing on fields) or when the received document rarely changes &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; A UI test fails. The code seems right, the screen renders perfect pixels, what happened? your snapshot testing just found a difference from the origin document to current received one - a single space character was added to the markdown‚Ä¶&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Coupling our test to unseen 2000 lines of code&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;TestJavaScript.com is renderd correctly&quot;, () =&amp;gt; {
  //Arrange

  //Act
  const receivedPage = renderer
    .create(&amp;lt;DisplayPage page=&quot;http://www.testjavascript.com&quot;&amp;gt; Test JavaScript &amp;lt;/DisplayPage&amp;gt;)
    .toJSON();

  //Assert
  expect(receivedPage).toMatchSnapshot();
  //We now implicitly maintain a 2000 lines long document
  //every additional line break or comment - will break this test
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Expectations are visible and focused&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When visiting TestJavaScript.com home page, a menu is displayed&quot;, () =&amp;gt; {
  //Arrange

  //Act
  const receivedPage = renderer
    .create(&amp;lt;DisplayPage page=&quot;http://www.testjavascript.com&quot;&amp;gt; Test JavaScript &amp;lt;/DisplayPage&amp;gt;)
    .toJSON();

  //Assert

  const menu = receivedPage.content.menu;
  expect(menu).toMatchInlineSnapshot(`
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;Home&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt; About &amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt; Contact &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
`);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è1.9 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (&lt;a href=&quot;https://en.wikipedia.org/wiki/Test_fixture&quot;&gt;also known as ‚Äòtest fixture‚Äô&lt;/a&gt;) for the sake of performance improvement. While performance is indeed a valid concern‚Ää‚Äî‚Ääit can be mitigated (see ‚ÄúComponent testing‚Äù bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern‚Ää‚Äî‚Ääa balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let‚Äôs investigate, oh no‚Ää‚Äî‚Ääit seems that two tests were mutating the same seed data&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;before(async () =&amp;gt; {
  //adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework
  await DB.AddSeedDataFromJson(&#39;seed.json&#39;);
});
it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToUpdate = await SiteService.getSiteByName(&quot;Portal&quot;);
  const updateNameResult = await SiteService.changeName(siteToUpdate, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
it(&quot;When querying by site name, get the right site&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToCheck = await SiteService.getSiteByName(&quot;Portal&quot;);
  expect(siteToCheck.name).to.be.equal(&quot;Portal&quot;); //Failure! The previous test change the name :[
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //test is adding a fresh new records and acting on the records only
  const siteUnderTest = await SiteService.addSite({
    name: &quot;siteForUpdateTest&quot;
  });

  const updateNameResult = await SiteService.changeName(siteUnderTest, &quot;newName&quot;);

  expect(updateNameResult).to.be(true);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.10 Don‚Äôt catch errors, expect them&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When trying to assert that some input triggers an error, it might look right to use try-catch-finally and asserts that the catch clause was entered. The result is an awkward and verbose test case (example below) that hides the simple test intent and the result expectations&lt;/p&gt; 
&lt;p&gt;A more elegant alternative is the using the one-line dedicated Chai assertion: expect(method).to.throw (or in Jest: expect(method).toThrow()). It‚Äôs absolutely mandatory to also ensure the exception contains a property that tells the error type, otherwise given just a generic error the application won‚Äôt be able to do much rather than show a disappointing message to the user &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; It will be challenging to infer from the test reports (e.g. CI reports) what went wrong&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern Example: A long test case that tries to assert the existence of error with try-catch&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When no product name, it throws error 400&quot;, async () =&amp;gt; {
  let errorWeExceptFor = null;
  try {
    const result = await addNewProduct({});
  } catch (error) {
    expect(error.code).to.equal(&quot;InvalidInput&quot;);
    errorWeExceptFor = error;
  }
  expect(errorWeExceptFor).not.to.be.null;
  //if this assertion fails, the tests results/reports will only show
  //that some value is null, there won&#39;t be a word about a missing Exception
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A human-readable expectation that could be understood easily, maybe even by QA or technical PM&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When no product name, it throws error 400&quot;, async () =&amp;gt; {
  await expect(addNewProduct({}))
    .to.eventually.throw(AppError)
    .with.property(&quot;code&quot;, &quot;InvalidInput&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.11 Tag your tests&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with Mocha: mocha‚Ää‚Äî‚Äägrep ‚Äòsanity‚Äô &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Tagging tests as ‚Äò#cold-test‚Äô allows the test runner to execute only fast tests (Cold===quick tests that are doing no IO and can be executed frequently even as the developer is typing)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//this test is fast (no DB) and we&#39;re tagging it correspondigly
//now the user/CI can run it frequently
describe(&quot;Order service&quot;, function() {
  describe(&quot;Add new order #cold-test #sanity&quot;, function() {
    test(&quot;Scenario - no currency was supplied. Expectation - Use the default currency #sanity&quot;, function() {
      //code logic here
    });
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.12 Categorize tests under at least 2 levels&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Apply some structure to your test suite so an occasional visitor could easily understand the requirements (tests are the best documentation) and the various scenarios that are being tested. A common method for this is by placing at least 2 ‚Äòdescribe‚Äô blocks above your tests: the 1st is for the name of the unit under test and the 2nd for additional level of categorization like the scenario or custom categories (see code examples and print screen below). Doing so will also greatly improve the test reports: The reader will easily infer the tests categories, delve into the desired section and correlate failing tests. In addition, it will get much easier for a developer to navigate through the code of a suite with many tests. There are multiple alternative structures for test suite that you may consider like &lt;a href=&quot;https://github.com/searls/jasmine-given&quot;&gt;given-when-then&lt;/a&gt; and &lt;a href=&quot;https://github.com/ericelliott/riteway&quot;&gt;RITE&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; When looking at a report with flat and long list of tests, the reader have to skim-read through long texts to conclude the major scenarios and correlate the commonality of failing tests. Consider the following case: When 7/100 tests fail, looking at a flat list will demand reading the failing tests text to see how they relate to each other. However, in a hierarchical report all of them could be under the same flow or category and the reader will quickly infer what or at least where is the root failure cause&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Structuring suite with the name of unit under test and scenarios will lead to the convenient report that is shown below&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Unit under test
describe(&quot;Transfer service&quot;, () =&amp;gt; {
  //Scenario
  describe(&quot;When no credit&quot;, () =&amp;gt; {
    //Expectation
    test(&quot;Then the response status should decline&quot;, () =&amp;gt; {});

    //Expectation
    test(&quot;Then it should send email to admin&quot;, () =&amp;gt; {});
  });
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/hierarchical-report.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern Example: A flat list of tests will make it harder for the reader to identify the user stories and correlate failing tests&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Then the response status should decline&quot;, () =&amp;gt; {});

test(&quot;Then it should send email&quot;, () =&amp;gt; {});

test(&quot;Then there should not be a new transfer record&quot;, () =&amp;gt; {});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/flat-report.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è1.13 Other generic good testing hygiene&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt; 
&lt;p&gt;Learn and practice &lt;a href=&quot;https://www.sm-cloud.com/book-review-test-driven-development-by-example-a-tldr/&quot;&gt;TDD principles&lt;/a&gt;‚Ää‚Äî‚Ääthey are extremely valuable for many but don‚Äôt get intimidated if they don‚Äôt fit your style, you‚Äôre not the only one. Consider writing the tests before the code in a &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2014/12/17/TheCyclesOfTDD.html&quot;&gt;red-green-refactor style&lt;/a&gt;, ensure each test checks exactly one thing, when you find a bug‚Ää‚Äî‚Ääbefore fixing write a test that will detect this bug in the future, let each test fail at least once before turning green, start a module by writing a quick and simplistic code that satisfies the test - then refactor gradually and take it to a production grade level, avoid any dependency on the environment (paths, OS, etc) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äòll miss pearls of wisdom that were collected for decades&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 2Ô∏è‚É£: Backend Testing&lt;/h1&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.1 Enrich your testing portfolio: Look beyond unit tests and the pyramid&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The &lt;a href=&quot;https://martinfowler.com/bliki/TestPyramid.html&quot;&gt;testing pyramid&lt;/a&gt;, though 10&amp;gt; years old, is a great and relevant model that suggests three testing types and influences most developers‚Äô testing strategy. At the same time, more than a handful of shiny new testing techniques emerged and are hiding in the shadows of the testing pyramid. Given all the dramatic changes that we‚Äôve seen in the recent 10 years (Microservices, cloud, serverless), is it even possible that one quite-old model will suit &lt;em&gt;all&lt;/em&gt; types of applications? shouldn‚Äôt the testing world consider welcoming new testing techniques?&lt;/p&gt; 
&lt;p&gt;Don‚Äôt get me wrong, in 2019 the testing pyramid, TDD and unit tests are still a powerful technique and are probably the best match for many applications. Only like any other model, despite its usefulness, &lt;a href=&quot;https://en.wikipedia.org/wiki/All_models_are_wrong&quot;&gt;it must be wrong sometimes&lt;/a&gt;. For example, consider an IoT application that ingests many events into a message-bus like Kafka/RabbitMQ, which then flow into some data-warehouse and are eventually queried by some analytics UI. Should we really spend 50% of our testing budget on writing unit tests for an application that is integration-centric and has almost no logic? As the diversity of application types increase (bots, crypto, Alexa-skills) greater are the chances to find scenarios where the testing pyramid is not the best match.&lt;/p&gt; 
&lt;p&gt;It‚Äôs time to enrich your testing portfolio and become familiar with more testing types (the next bullets suggest few ideas), mind models like the testing pyramid but also match testing types to real-world problems that you‚Äôre facing (‚ÄòHey, our API is broken, let‚Äôs write consumer-driven contract testing!‚Äô), diversify your tests like an investor that build a portfolio based on risk analysis‚Ää‚Äî‚Ääassess where problems might arise and match some prevention measures to mitigate those potential risks&lt;/p&gt; 
&lt;p&gt;A word of caution: the TDD argument in the software world takes a typical false-dichotomy face, some preach to use it everywhere, others think it‚Äôs the devil. Everyone who speaks in absolutes is wrong :]&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äôre going to miss some tools with amazing ROI, some like Fuzz, lint, and mutation can provide value in 10 minutes&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Cindy Sridharan suggests a rich testing portfolio in her amazing post ‚ÄòTesting Microservices‚Ää‚Äî‚Ääthe same way‚Äô&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-12-rich-testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Cindy Sridharan suggests a rich testing portfolio in her amazing post ‚ÄòTesting Microservices‚Ää‚Äî‚Ääthe sane way‚Äô&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;‚ò∫Ô∏èExample: &lt;/strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtube&quot; data-href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be&quot;&gt;YouTube: ‚ÄúBeyond Unit Tests: 5 Shiny Node.JS Test Types (2018)‚Äù (Yoni Goldberg)&lt;/a&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-12-Yoni-Goldberg-Testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;A test name that constitutes 3 parts&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.2 Component testing might be your best affair&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Each unit test covers a tiny portion of the application and it‚Äôs expensive to cover the whole, whereas end-to-end testing easily covers a lot of ground but is flaky and slower, why not apply a balanced approach and write tests that are bigger than unit tests but smaller than end-to-end testing? Component testing is the unsung song of the testing world‚Ää‚Äî‚Ääthey provide the best from both worlds: reasonable performance and a possibility to apply TDD patterns + realistic and great coverage.&lt;/p&gt; 
&lt;p&gt;Component tests focus on the Microservice ‚Äòunit‚Äô, they work against the API, don‚Äôt mock anything which belongs to the Microservice itself (e.g. real DB, or at least the in-memory version of that DB) but stub anything that is external like calls to other Microservices. By doing so, we test what we deploy, approach the app from outwards to inwards and gain great confidence in a reasonable amount of time. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Supertest allows approaching Express API in-process (fast and cover many layers)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-13-component-test-yoni-goldberg.png&quot; alt=&quot;alt text&quot; title=&quot; [Supertest](https://www.npmjs.com/package/supertest) allows approaching Express API in-process (fast and cover many layers)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.3 Ensure new releases don‚Äôt break the API using contract tests&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; So your Microservice has multiple clients, and you run multiple versions of the service for compatibility reasons (keeping everyone happy). Then you change some field and ‚Äòboom!‚Äô, some important client who relies on this field is angry. This is the Catch-22 of the integration world: It‚Äôs very challenging for the server side to consider all the multiple client expectations‚Ää‚Äî‚ÄäOn the other hand, the clients can‚Äôt perform any testing because the server controls the release dates. &lt;a href=&quot;https://docs.pact.io/&quot;&gt;Consumer-driven contracts and the framework PACT&lt;/a&gt; were born to formalize this process with a very disruptive approach‚Ää‚Äî‚Äänot the server defines the test plan of itself rather the client defines the tests of the‚Ä¶ server! PACT can record the client expectation and put in a shared location, ‚Äúbroker‚Äù, so the server can pull the expectations and run on every build using PACT library to detect broken contracts‚Ää‚Äî‚Ääa client expectation that is not met. By doing so, all the server-client API mismatches are caught early during build/CI and might save you a great deal of frustration &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; The alternatives are exhausting manual testing or deployment fear&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example:&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20PACT-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with PACT&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-14-testing-best-practices-contract-flow.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 2.4 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Many avoid Middleware testing because they represent a small portion of the system and require a live Express server. Both reasons are wrong‚Ää‚Äî‚ÄäMiddlewares are small but affect all or most of the requests and can be tested easily as pure functions that get {req,res} JS objects. To test a middleware function one should just invoke it and spy (&lt;a href=&quot;https://www.npmjs.com/package/sinon&quot;&gt;using Sinon for example&lt;/a&gt;) on the interaction with the {req,res} objects to ensure the function performed the right action. The library &lt;a href=&quot;https://www.npmjs.com/package/node-mocks-http&quot;&gt;node-mock-http&lt;/a&gt; takes it even further and factors the {req,res} objects along with spying on their behavior. For example, it can assert whether the http status that was set on the res object matches the expectation (See example below) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: Testing middleware in isolation without issuing network calls and waking-up the entire Express machine&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//the middleware we want to test
const unitUnderTest = require(&quot;./middleware&quot;);
const httpMocks = require(&quot;node-mocks-http&quot;);
//Jest syntax, equivelant to describe() &amp;amp; it() in Mocha
test(&quot;A request without authentication header, should return http status 403&quot;, () =&amp;gt; {
  const request = httpMocks.createRequest({
    method: &quot;GET&quot;,
    url: &quot;/user/42&quot;,
    headers: {
      authentication: &quot;&quot;
    }
  });
  const response = httpMocks.createResponse();
  unitUnderTest(request, response);
  expect(response.statusCode).toBe(403);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.5 Measure and refactor using static analysis tools&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keep your code maintainable. You can add static analysis tools to your CI build to abort when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity) and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;SonarQube&lt;/a&gt; (4,900+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (2,000+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Credit: &lt;a href=&quot;https://github.com/TheHollidayInn&quot; data-href=&quot;https://github.com/TheHollidayInn&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: CodeClimate, a commercial tool that can identify complex methods:&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Code%20Climate-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with CodeClimate&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-16-yoni-goldberg-quality.png&quot; alt=&quot;alt text&quot; title=&quot;CodeClimate, a commercial tool that can identify complex methods:&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 2.6 Check your readiness for Node-related chaos&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Weirdly, most software testings are about logic &amp;amp; data only, but some of the worst things that happen (and are really hard to mitigate) are infrastructural issues. For example, did you ever test what happens when your process memory is overloaded, or when the server/process dies, or does your monitoring system realizes when the API becomes 50% slower?. To test and mitigate these type of bad things‚Ää‚Äî‚Ää&lt;a href=&quot;https://principlesofchaos.org/&quot;&gt;Chaos engineering&lt;/a&gt; was born by Netflix. It aims to provide awareness, frameworks and tools for testing our app resiliency for chaotic issues. For example, one of its famous tools, &lt;a href=&quot;https://github.com/Netflix/chaosmonkey&quot;&gt;the chaos monkey&lt;/a&gt;, randomly kills servers to ensure that our service can still serve users and not relying on a single server (there is also a Kubernetes version, &lt;a href=&quot;https://github.com/asobti/kube-monkey&quot;&gt;kube-monkey&lt;/a&gt;, that kills pods). All these tools work on the hosting/platform level, but what if you wish to test and generate pure Node chaos like check how your Node process copes with uncaught errors, unhandled promise rejection, v8 memory overloaded with the max allowed of 1.7GB or whether your UX remains satisfactory when the event loop gets blocked often? to address this I‚Äôve written, &lt;a href=&quot;https://github.com/i0natan/node-chaos-monkey&quot;&gt;node-chaos&lt;/a&gt; (alpha) which provides all sort of Node-related chaotic acts &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; No escape here, Murphy‚Äôs law will hit your production without mercy&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: : Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-17-yoni-goldberg-chaos-monkey-nodejs.png&quot; alt=&quot;alt text&quot; title=&quot;Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.7 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (also known as ‚Äòtest fixture‚Äô) for the sake of performance improvement. While performance is indeed a valid concern‚Ää‚Äî‚Ääit can be mitigated (see ‚ÄúComponent testing‚Äù bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern‚Ää‚Äî‚Ääa balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let‚Äôs investigate, oh no‚Ää‚Äî‚Ääit seems that two tests were mutating the same seed data&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;before(async () =&amp;gt; {
  //adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework
  await DB.AddSeedDataFromJson(&#39;seed.json&#39;);
});
it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToUpdate = await SiteService.getSiteByName(&quot;Portal&quot;);
  const updateNameResult = await SiteService.changeName(siteToUpdate, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
it(&quot;When querying by site name, get the right site&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToCheck = await SiteService.getSiteByName(&quot;Portal&quot;);
  expect(siteToCheck.name).to.be.equal(&quot;Portal&quot;); //Failure! The previous test change the name :[
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //test is adding a fresh new records and acting on the records only
  const siteUnderTest = await SiteService.addSite({
    name: &quot;siteForUpdateTest&quot;
  });
  const updateNameResult = await SiteService.changeName(siteUnderTest, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 3Ô∏è‚É£: Frontend Testing&lt;/h1&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.1 Separate UI from functionality&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When focusing on testing component logic, UI details become a noise that should be extracted, so your tests can focus on pure data. Practically, extract the desired data from the markup in an abstract way that is not too coupled to the graphic implementation, assert only on pure data (vs HTML/CSS graphic details) and disable animations that slow down. You might get tempted to avoid rendering and test only the back part of the UI (e.g. services, actions, store) but this will result in fictional tests that don‚Äôt resemble the reality and won‚Äôt reveal cases where the right data doesn‚Äôt even arrive in the UI&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; The pure calculated data of your test might be ready in 10ms, but then the whole test will last 500ms (100 tests = 1 min) due to some fancy and irrelevant animation&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Separating out the UI details&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When users-list is flagged to show only VIP, should display only VIP members&quot;, () =&amp;gt; {
  // Arrange
  const allUsers = [{ id: 1, name: &quot;Yoni Goldberg&quot;, vip: false }, { id: 2, name: &quot;John Doe&quot;, vip: true }];

  // Act
  const { getAllByTestId } = render(&amp;lt;UsersList users={allUsers} showOnlyVIP={true} /&amp;gt;);

  // Assert - Extract the data from the UI first
  const allRenderedUsers = getAllByTestId(&quot;user&quot;).map(uiElement =&amp;gt; uiElement.textContent);
  const allRealVIPUsers = allUsers.filter(user =&amp;gt; user.vip).map(user =&amp;gt; user.name);
  expect(allRenderedUsers).toEqual(allRealVIPUsers); //compare data with data, no UI here
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Assertion mix UI details and data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When flagging to show only VIP, should display only VIP members&quot;, () =&amp;gt; {
  // Arrange
  const allUsers = [{ id: 1, name: &quot;Yoni Goldberg&quot;, vip: false }, { id: 2, name: &quot;John Doe&quot;, vip: true }];

  // Act
  const { getAllByTestId } = render(&amp;lt;UsersList users={allUsers} showOnlyVIP={true} /&amp;gt;);

  // Assert - Mix UI &amp;amp; data in assertion
  expect(getAllByTestId(&quot;user&quot;)).toEqual(&#39;[&amp;lt;li data-testid=&quot;user&quot;&amp;gt;John Doe&amp;lt;/li&amp;gt;]&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.2 Query HTML elements based on attributes that are unlikely to change&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Query HTML elements based on attributes that are likely to survive graphic changes unlike CSS selectors and like form labels. If the designated element doesn‚Äôt have such attributes, create a dedicated test attribute like ‚Äòtest-id-submit-button‚Äô. Going this route not only ensures that your functional/logic tests never break because of look &amp;amp; feel changes but also it becomes clear to the entire team that this element and attribute are utilized by tests and shouldn‚Äôt get removed&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You want to test the login functionality that spans many components, logic and services, everything is set up perfectly - stubs, spies, Ajax calls are isolated. All seems perfect. Then the test fails because the designer changed the div CSS class from ‚Äòthick-border‚Äô to ‚Äòthin-border‚Äô&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Querying an element using a dedicated attribute for testing&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;// the markup code (part of React component)
&amp;lt;h3&amp;gt;
  &amp;lt;Badge pill className=&quot;fixed_badge&quot; variant=&quot;dark&quot;&amp;gt;
    &amp;lt;span data-testid=&quot;errorsLabel&quot;&amp;gt;{value}&amp;lt;/span&amp;gt;
    &amp;lt;!-- note the attribute data-testid --&amp;gt;
  &amp;lt;/Badge&amp;gt;
&amp;lt;/h3&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this example is using react-testing-library
test(&quot;Whenever no data is passed to metric, show 0 as default&quot;, () =&amp;gt; {
  // Arrange
  const metricValue = undefined;

  // Act
  const { getByTestId } = render(&amp;lt;dashboardMetric value={undefined} /&amp;gt;);

  expect(getByTestId(&quot;errorsLabel&quot;).text()).toBe(&quot;0&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Relying on CSS attributes&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- the markup code (part of React component) --&amp;gt;
&amp;lt;span id=&quot;metric&quot; className=&quot;d-flex-column&quot;&amp;gt;{value}&amp;lt;/span&amp;gt;
&amp;lt;!-- what if the designer changes the classs? --&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this exammple is using enzyme
test(&quot;Whenever no data is passed, error metric shows zero&quot;, () =&amp;gt; {
  // ...

  expect(wrapper.find(&quot;[className=&#39;d-flex-column&#39;]&quot;).text()).toBe(&quot;0&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.3 Whenever possible, test with a realistic and fully rendered component&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Whenever reasonably sized, test your component from outside like your users do, fully render the UI, act on it and assert that the rendered UI behaves as expected. Avoid all sort of mocking, partial and shallow rendering - this approach might result in untrapped bugs due to lack of details and harden the maintenance as the tests mess with the internals (see bullet ‚ÄòFavour blackbox testing‚Äô). If one of the child components is significantly slowing down (e.g. animation) or complicating the setup - consider explicitly replacing it with a fake&lt;/p&gt; 
&lt;p&gt;With all that said, a word of caution is in order: this technique works for small/medium components that pack a reasonable size of child components. Fully rendering a component with too many children will make it hard to reason about test failures (root cause analysis) and might get too slow. In such cases, write only a few tests against that fat parent component and more tests against its children&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; When poking into a component‚Äôs internal by invoking its private methods, and checking the inner state - you would have to refactor all tests when refactoring the components implementation. Do you really have a capacity for this level of maintenance?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Working realistically with a fully rendered component&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Enzyme-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Enzyme&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calendar extends React.Component {
  static defaultProps = { showFilters: false };

  render() {
    return (
      &amp;lt;div&amp;gt;
        A filters panel with a button to hide/show filters
        &amp;lt;FiltersPanel showFilter={showFilters} title=&quot;Choose Filters&quot; /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

//Examples use React &amp;amp; Enzyme
test(&quot;Realistic approach: When clicked to show filters, filters are displayed&quot;, () =&amp;gt; {
  // Arrange
  const wrapper = mount(&amp;lt;Calendar showFilters={false} /&amp;gt;);

  // Act
  wrapper.find(&quot;button&quot;).simulate(&quot;click&quot;);

  // Assert
  expect(wrapper.text().includes(&quot;Choose Filter&quot;));
  // This is how the user will approach this element: by text
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Mocking the reality with shallow rendering&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Shallow/mocked approach: When clicked to show filters, filters are displayed&quot;, () =&amp;gt; {
  // Arrange
  const wrapper = shallow(&amp;lt;Calendar showFilters={false} title=&quot;Choose Filter&quot; /&amp;gt;);

  // Act
  wrapper
    .find(&quot;filtersPanel&quot;)
    .instance()
    .showFilters();
  // Tap into the internals, bypass the UI and invoke a method. White-box approach

  // Assert
  expect(wrapper.find(&quot;Filter&quot;).props()).toEqual({ title: &quot;Choose Filter&quot; });
  // what if we change the prop name or don&#39;t pass anything relevant?
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.4 Don‚Äôt sleep, use frameworks built-in support for async events. Also try to speed things up&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; In many cases, the unit under test completion time is just unknown (e.g. animation suspends element appearance) - in that case, avoid sleeping (e.g. setTimeOut) and prefer more deterministic methods that most platforms provide. Some libraries allows awaiting on operations (e.g. &lt;a href=&quot;https://docs.cypress.io/guides/references/best-practices.html#Unnecessary-Waiting&quot;&gt;Cypress cy.request(‚Äòurl‚Äô)&lt;/a&gt;), other provide API for waiting like &lt;a href=&quot;https://testing-library.com/docs/guide-disappearance&quot;&gt;@testing-library/dom method wait(expect(element))&lt;/a&gt;. Sometimes a more elegant way is to stub the slow resource, like API for example, and then once the response moment becomes deterministic the component can be explicitly re-rendered. When depending upon some external component that sleeps, it might turn useful to &lt;a href=&quot;https://jestjs.io/docs/en/timer-mocks&quot;&gt;hurry-up the clock&lt;/a&gt;. Sleeping is a pattern to avoid because it forces your test to be slow or risky (when waiting for a too short period). Whenever sleeping and polling is inevitable and there‚Äôs no support from the testing framework, some npm libraries like &lt;a href=&quot;https://www.npmjs.com/package/wait-for-expect&quot;&gt;wait-for-expect&lt;/a&gt; can help with a semi-deterministic solution &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; When sleeping for a long time, tests will be an order of magnitude slower. When trying to sleep for small numbers, test will fail when the unit under test didn‚Äôt respond in a timely fashion. So it boils down to a trade-off between flakiness and bad performance&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: E2E API that resolves only when the async operations is done (Cypress)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// using Cypress
cy.get(&quot;#show-products&quot;).click(); // navigate
cy.wait(&quot;@products&quot;); // wait for route to appear
// this line will get executed only when the route is ready
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Testing library that waits for DOM elements&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// @testing-library/dom
test(&quot;movie title appears&quot;, async () =&amp;gt; {
  // element is initially not present...

  // wait for appearance
  await wait(() =&amp;gt; {
    expect(getByText(&quot;the lion king&quot;)).toBeInTheDocument();
  });

  // wait for appearance and return the element
  const movie = await waitForElement(() =&amp;gt; getByText(&quot;the lion king&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: custom sleep code&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;movie title appears&quot;, async () =&amp;gt; {
  // element is initially not present...

  // custom wait logic (caution: simplistic, no timeout)
  const interval = setInterval(() =&amp;gt; {
    const found = getByText(&quot;the lion king&quot;);
    if (found) {
      clearInterval(interval);
      expect(getByText(&quot;the lion king&quot;)).toBeInTheDocument();
    }
  }, 100);

  // wait for appearance and return the element
  const movie = await waitForElement(() =&amp;gt; getByText(&quot;the lion king&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.5 Watch how the content is served over the network&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Google%20LightHouse-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Lighthouse&quot;&gt;&lt;/p&gt; 
&lt;p&gt;‚úÖ &lt;strong&gt;Do:&lt;/strong&gt; Apply some active monitor that ensures the page load under real network is optimized - this includes any UX concern like slow page load or un-minified bundle. The inspection tools market is no short: basic tools like &lt;a href=&quot;https://www.pingdom.com/&quot;&gt;pingdom&lt;/a&gt;, AWS CloudWatch, &lt;a href=&quot;https://cloud.google.com/monitoring/uptime-checks/&quot;&gt;gcp StackDriver&lt;/a&gt; can be easily configured to watch whether the server is alive and response under a reasonable SLA. This only scratches the surface of what might get wrong, hence it‚Äôs preferable to opt for tools that specialize in frontend (e.g. &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;lighthouse&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;pagespeed&lt;/a&gt;) and perform richer analysis. The focus should be on symptoms, metrics that directly affect the UX, like page load time, &lt;a href=&quot;https://scotch.io/courses/10-web-performance-audit-tips-for-your-next-billion-users-in-2018/fmp-first-meaningful-paint&quot;&gt;meaningful paint&lt;/a&gt;, &lt;a href=&quot;https://calibreapp.com/blog/time-to-interactive/&quot;&gt;time until the page gets interactive (TTI)&lt;/a&gt;. On top of that, one may also watch for technical causes like ensuring the content is compressed, time to the first byte, optimize images, ensuring reasonable DOM size, SSL and many others. It‚Äôs advisable to have these rich monitors both during development, as part of the CI and most important - 24x7 over the production‚Äôs servers/CDN&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; It must be disappointing to realize that after such great care for crafting a UI, 100% functional tests passing and sophisticated bundling - the UX is horrible and slow due to CDN misconfiguration&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Lighthouse page load inspection report&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/lighthouse2.png&quot; alt=&quot;&quot; title=&quot;Lighthouse page load inspection report&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.6 Stub flaky and slow resources like backend APIs&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When coding your mainstream tests (not E2E tests), avoid involving any resource that is beyond your responsibility and control like backend API and use stubs instead (i.e. test double). Practically, instead of real network calls to APIs, use some test double library (like &lt;a href=&quot;https://sinonjs.org/&quot;&gt;Sinon&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/testdouble&quot;&gt;Test doubles&lt;/a&gt;, etc) for stubbing the API response. The main benefit is preventing flakiness - testing or staging APIs by definition are not highly stable and from time to time will fail your tests although YOUR component behaves just fine (production env was not meant for testing and it usually throttles requests). Doing this will allow simulating various API behavior that should drive your component behavior as when no data was found or the case when API throws an error. Last but not least, network calls will greatly slow down the tests&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; The average test runs no longer than few ms, a typical API call last 100ms&amp;gt;, this makes each test ~20x slower&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Stubbing or intercepting API calls&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// unit under test
export default function ProductsList() {
  const [products, setProducts] = useState(false);

  const fetchProducts = async () =&amp;gt; {
    const products = await axios.get(&quot;api/products&quot;);
    setProducts(products);
  };

  useEffect(() =&amp;gt; {
    fetchProducts();
  }, []);

  return products ? &amp;lt;div&amp;gt;{products}&amp;lt;/div&amp;gt; : &amp;lt;div data-testid=&quot;no-products-message&quot;&amp;gt;No products&amp;lt;/div&amp;gt;;
}

// test
test(&quot;When no products exist, show the appropriate message&quot;, () =&amp;gt; {
  // Arrange
  nock(&quot;api&quot;)
    .get(`/products`)
    .reply(404);

  // Act
  const { getByTestId } = render(&amp;lt;ProductsList /&amp;gt;);

  // Assert
  expect(getByTestId(&quot;no-products-message&quot;)).toBeTruthy();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.7 Have very few end-to-end tests that spans the whole system&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Although E2E (end-to-end) usually means UI-only testing with a real browser (See bullet 3.6), for other they mean tests that stretch the entire system including the real backend. The latter type of tests is highly valuable as they cover integration bugs between frontend and backend that might happen due to a wrong understanding of the exchange schema. They are also an efficient method to discover backend-to-backend integration issues (e.g. Microservice A sends the wrong message to Microservice B) and even to detect deployment failures - there are no backend frameworks for E2E testing that are as friendly and mature as UI frameworks like &lt;a href=&quot;https://www.cypress.io/&quot;&gt;Cypress&lt;/a&gt; and &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;/a&gt;. The downside of such tests is the high cost of configuring an environment with so many components, and mostly their brittleness - given 50 microservices, even if one fails then the entire E2E just failed. For that reason, we should use this technique sparingly and probably have 1-10 of those and no more. That said, even a small number of E2E tests are likely to catch the type of issues they are targeted for - deployment &amp;amp; integration faults. It‚Äôs advisable to run those over a production-like staging environment&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; UI might invest much in testing its functionality only to realizes very late that the backend returned payload (the data schema the UI has to work with) is very different than expected&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.8 Speed-up E2E tests by reusing login credentials&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; In E2E tests that involve a real backend and rely on a valid user token for API calls, it doesn‚Äôt payoff to isolate the test to a level where a user is created and logged-in in every request. Instead, login only once before the tests execution start (i.e. before-all hook), save the token in some local storage and reuse it across requests. This seem to violate one of the core testing principle - keep the test autonomous without resources coupling. While this is a valid worry, in E2E tests performance is a key concern and creating 1-3 API requests before starting each individual tests might lead to horrible execution time. Reusing credentials doesn‚Äôt mean the tests have to act on the same user records - if relying on user records (e.g. test user payments history) than make sure to generate those records as part of the test and avoid sharing their existence with other tests. Also remember that the backend can be faked - if your tests are focused on the frontend it might be better to isolate it and stub the backend API (see bullet 3.6).&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Given 200 test cases and assuming login=100ms = 20 seconds only for logging-in again and again&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Logging-in before-all and not before-each&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let authenticationToken;

// happens before ALL tests run
before(() =&amp;gt; {
  cy.request(&#39;POST&#39;, &#39;http://localhost:3000/login&#39;, {
    username: Cypress.env(&#39;username&#39;),
    password: Cypress.env(&#39;password&#39;),
  })
  .its(&#39;body&#39;)
  .then((responseFromLogin) =&amp;gt; {
    authenticationToken = responseFromLogin.token;
  })
})

// happens before EACH test
beforeEach(setUser =&amp;gt; () {
  cy.visit(&#39;/home&#39;, {
    onBeforeLoad (win) {
      win.localStorage.setItem(&#39;token&#39;, JSON.stringify(authenticationToken))
    },
  })
})

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.9 Have one E2E smoke test that just travels across the site map&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; For production monitoring and development-time sanity check, run a single E2E test that visits all/most of the site pages and ensures no one breaks. This type of test brings a great return on investment as it‚Äôs very easy to write and maintain, but it can detect any kind of failure including functional, network and deployment issues. Other styles of smoke and sanity checking are not as reliable and exhaustive - some ops teams just ping the home page (production) or developers who run many integration tests which don‚Äôt discover packaging and browser issues. Goes without saying that the smoke test doesn‚Äôt replace functional tests rather just aim to serve as a quick smoke detector&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Everything might seem perfect, all tests pass, production health-check is also positive but the Payment component had some packaging issue and only the /Payment route is not rendering&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Smoke travelling across all pages&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When doing smoke testing over all page, should load them all successfully&quot;, () =&amp;gt; {
  // exemplified using Cypress but can be implemented easily
  // using any E2E suite
  cy.visit(&quot;https://mysite.com/home&quot;);
  cy.contains(&quot;Home&quot;);
  cy.contains(&quot;https://mysite.com/Login&quot;);
  cy.contains(&quot;Login&quot;);
  cy.contains(&quot;https://mysite.com/About&quot;);
  cy.contains(&quot;About&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.10 Expose the tests as a live collaborative document&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Besides increasing app reliability, tests bring another attractive opportunity to the table - serve as live app documentation. Since tests inherently speak at a less-technical and product/UX language, using the right tools they can serve as a communication artifact that greatly aligns all the peers - developers and their customers. For example, some frameworks allow expressing the flow and expectations (i.e. tests plan) using a human-readable language so any stakeholder, including product managers, can read, approve and collaborate on the tests which just became the live requirements document. This technique is also being referred to as ‚Äòacceptance test‚Äô as it allows the customer to define his acceptance criteria in plain language. This is &lt;a href=&quot;https://en.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;BDD (behavior-driven testing)&lt;/a&gt; at its purest form. One of the popular frameworks that enable this is &lt;a href=&quot;https://github.com/cucumber/cucumber-js&quot;&gt;Cucumber which has a JavaScript flavor&lt;/a&gt;, see example below. Another similar yet different opportunity, &lt;a href=&quot;https://storybook.js.org/&quot;&gt;StoryBook&lt;/a&gt;, allows exposing UI components as a graphic catalog where one can walk through the various states of each component (e.g. render a grid w/o filters, render that grid with multiple rows or with none, etc), see how it looks like, and how to trigger that state - this can appeal also to product folks but mostly serves as live doc for developers who consume those components.&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; After investing top resources on testing, it‚Äôs just a pity not to leverage this investment and win great value&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Describing tests in human-language using cucumber-js&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cucumber-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples using Cucumber&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this is how one can describe tests using cucumber: plain language that allows anyone to understand and collaborate

Feature: Twitter new tweet

  I want to tweet something in Twitter

  @focus
  Scenario: Tweeting from the home page
    Given I open Twitter home
    Given I click on &quot;New tweet&quot; button
    Given I type &quot;Hello followers!&quot; in the textbox
    Given I click on &quot;Submit&quot; button
    Then I see message &quot;Tweet saved&quot;

&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Visualizing our components, their various states and inputs using Storybook&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20StoryBook-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using StoryBook&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/story-book.jpg&quot; alt=&quot;alt text&quot; title=&quot;Storybook&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.11 Detect visual issues with automated tools&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Setup automated tools to capture UI screenshots when changes are presented and detect visual issues like content overlapping or breaking. This ensures that not only the right data is prepared but also the user can conveniently see it. This technique is not widely adopted, our testing mindset leans toward functional tests but it‚Äôs the visuals what the user experience and with so many device types it‚Äôs very easy to overlook some nasty UI bug. Some free tools can provide the basics - generate and save screenshots for the inspection of human eyes. While this approach might be sufficient for small apps, it‚Äôs flawed as any other manual testing that demands human labor anytime something changes. On the other hand, it‚Äôs quite challenging to detect UI issues automatically due to the lack of clear definition - this is where the field of ‚ÄòVisual Regression‚Äô chime in and solve this puzzle by comparing old UI with the latest changes and detect differences. Some OSS/free tools can provide some of this functionality (e.g. &lt;a href=&quot;https://github.com/BBC-News/wraith&quot;&gt;wraith&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/%5Bhttps://github.com/HuddleEng/PhantomCSS%5D(https://github.com/HuddleEng/PhantomCSS)&quot;&gt;PhantomCSS&lt;/a&gt; but might charge significant setup time. The commercial line of tools (e.g. &lt;a href=&quot;https://applitools.com/&quot;&gt;Applitools&lt;/a&gt;, &lt;a href=&quot;https://percy.io/&quot;&gt;Percy.io&lt;/a&gt;) takes is a step further by smoothing the installation and packing advanced features like management UI, alerting, smart capturing by eliminating ‚Äòvisual noise‚Äô (e.g. ads, animations) and even root cause analysis of the DOM/CSS changes that led to the issue&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; How good is a content page that display great content (100% tests passed), loads instantly but half of the content area is hidden?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A typical visual regression - right content that is served badly&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/amazon-visual-regression.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Amazon page breaks&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Configuring wraith to capture and compare UI snapshots&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Wraith-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Wraith&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;‚Äã# Add as many domains as necessary. Key will act as a label‚Äã

domains:
  english: &quot;http://www.mysite.com&quot;‚Äã

‚Äã# Type screen widths below, here are a couple of examples‚Äã

screen_widths:

  - 600‚Äã
  - 768‚Äã
  - 1024‚Äã
  - 1280‚Äã

‚Äã# Type page URL paths below, here are a couple of examples‚Äã
paths:
  about:
    path: /about
    selector: &#39;.about&#39;‚Äã
  subscribe:
      selector: &#39;.subscribe&#39;‚Äã
    path: /subscribe
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Using Applitools to get snapshot comparison and other advanced features&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20AppliTools-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Applitools&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as todoPage from &quot;../page-objects/todo-page&quot;;

describe(&quot;visual validation&quot;, () =&amp;gt; {
  before(() =&amp;gt; todoPage.navigate());
  beforeEach(() =&amp;gt; cy.eyesOpen({ appName: &quot;TAU TodoMVC&quot; }));
  afterEach(() =&amp;gt; cy.eyesClose());

  it(&quot;should look good&quot;, () =&amp;gt; {
    cy.eyesCheckWindow(&quot;empty todo list&quot;);
    todoPage.addTodo(&quot;Clean room&quot;);
    todoPage.addTodo(&quot;Learn javascript&quot;);
    cy.eyesCheckWindow(&quot;two todos&quot;);
    todoPage.toggleTodo(0);
    cy.eyesCheckWindow(&quot;mark as completed&quot;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 4Ô∏è‚É£: Measuring Test Effectiveness&lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 4.1 Get enough coverage for being confident, ~80% seems to be the lucky number&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The purpose of testing is to get enough confidence for moving fast, obviously the more code is tested the more confident the team can be. Coverage is a measure of how many code lines (and branches, statements, etc) are being reached by the tests. So how much is enough? 10‚Äì30% is obviously too low to get any sense about the build correctness, on the other side 100% is very expensive and might shift your focus from the critical paths to the exotic corners of the code. The long answer is that it depends on many factors like the type of application‚Ää‚Äî‚Ääif you‚Äôre building the next generation of Airbus A380 than 100% is a must, for a cartoon pictures website 50% might be too much. Although most of the testing enthusiasts claim that the right coverage threshold is contextual, most of them also mention the number 80% as a thumb of a rule (&lt;a href=&quot;https://martinfowler.com/bliki/TestCoverage.html&quot;&gt;Fowler: ‚Äúin the upper 80s or 90s‚Äù&lt;/a&gt;) that presumably should satisfy most of the applications.&lt;/p&gt; 
&lt;p&gt;Implementation tips: You may want to configure your continuous integration (CI) to have a coverage threshold (&lt;a href=&quot;https://jestjs.io/docs/en/configuration.html#collectcoverage-boolean&quot;&gt;Jest link&lt;/a&gt;) and stop a build that doesn‚Äôt stand to this standard (it‚Äôs also possible to configure threshold per component, see code example below). On top of this, consider detecting build coverage decrease (when a newly committed code has less coverage)‚Ää‚Äî‚Ääthis will push developers raising or at least preserving the amount of tested code. All that said, coverage is only one measure, a quantitative based one, that is not enough to tell the robustness of your testing. And it can also be fooled as illustrated in the next bullets&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Confidence and numbers go hand in hand, without really knowing that you tested most of the system‚Ää‚Äî‚Ääthere will also be some fear and fear will slow you down&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: A typical coverage report&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-18-yoni-goldberg-code-coverage.png&quot; alt=&quot;alt text&quot; title=&quot;A typical coverage report&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Setting up coverage per component (using Jest)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Jest&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-18-code-coverage2.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Setting up coverage per component (using Jest)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 4.2 Inspect coverage reports to detect untested areas and other oddities&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Some issues sneak just under the radar and are really hard to find using traditional tools. These are not really bugs but more of surprising application behavior that might have a severe impact. For example, often some code areas are never or rarely being invoked‚Ää‚Äî‚Ääyou thought that the ‚ÄòPricingCalculator‚Äô class is always setting the product price but it turns out it is actually never invoked although we have 10000 products in DB and many sales‚Ä¶ Code coverage reports help you realize whether the application behaves the way you believe it does. Other than that, it can also highlight which types of code is not tested‚Ää‚Äî‚Ääbeing informed that 80% of the code is tested doesn‚Äôt tell whether the critical parts are covered. Generating reports is easy‚Ää‚Äî‚Ääjust run your app in production or during testing with coverage tracking and then see colorful reports that highlight how frequent each code area is invoked. If you take your time to glimpse into this data‚Ää‚Äî‚Ääyou might find some gotchas &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; If you don‚Äôt know which parts of your code are left un-tested, you don‚Äôt know where the issues might come from&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: What‚Äôs wrong with this coverage report?&lt;/h3&gt; 
 &lt;p&gt;Based on a real-world scenario where we tracked our application usage in QA and find out interesting login patterns (Hint: the amount of login failures is non-proportional, something is clearly wrong. Finally it turned out that some frontend bug keeps hitting the backend login API)&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-19-coverage-yoni-goldberg-nodejs-consultant.png&quot; alt=&quot;alt text&quot; title=&quot;What‚Äôs wrong with this coverage report?&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 4.3 Measure logical coverage using mutation testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The Traditional Coverage metric often lies: It may show you 100% code coverage, but none of your functions, even not one, return the right response. How come? it simply measures over which lines of code the test visited, but it doesn‚Äôt check if the tests actually tested anything‚Ää‚Äî‚Ääasserted for the right response. Like someone who‚Äôs traveling for business and showing his passport stamps‚Ää‚Äî‚Ääthis doesn‚Äôt prove any work done, only that he visited few airports and hotels.&lt;/p&gt; 
&lt;p&gt;Mutation-based testing is here to help by measuring the amount of code that was actually TESTED not just VISITED. &lt;a href=&quot;https://stryker-mutator.io/&quot;&gt;Stryker&lt;/a&gt; is a JavaScript library for mutation testing and the implementation is really neat:&lt;/p&gt; 
&lt;p&gt;(1) it intentionally changes the code and ‚Äúplants bugs‚Äù. For example the code newOrder.price===0 becomes newOrder.price!=0. This ‚Äúbugs‚Äù are called mutations&lt;/p&gt; 
&lt;p&gt;(2) it runs the tests, if all succeed then we have a problem‚Ää‚Äî‚Ääthe tests didn‚Äôt serve their purpose of discovering bugs, the mutations are so-called survived. If the tests failed, then great, the mutations were killed.&lt;/p&gt; 
&lt;p&gt;Knowing that all or most of the mutations were killed gives much higher confidence than traditional coverage and the setup time is similar &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äôll be fooled to believe that 85% coverage means your test will detect bugs in 85% of your code&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: 100% coverage, 0% testing&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Stryker-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Stryker&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addNewOrder(newOrder) {
  logger.log(`Adding new order ${newOrder}`);
  DB.save(newOrder);
  Mailer.sendMail(newOrder.assignee, `A new order was places ${newOrder}`);

  return { approved: true };
}

it(&quot;Test addNewOrder, don&#39;t use such test names&quot;, () =&amp;gt; {
  addNewOrder({ assignee: &quot;John@mailer.com&quot;, price: 120 });
}); //Triggers 100% code coverage, but it doesn&#39;t check anything
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-20-yoni-goldberg-mutation-testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è4.4 Preventing test code issues with Test linters&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; A set of ESLint plugins were built specifically for inspecting the tests code patterns and discover issues. For example, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; will warn when a test is written at the global level (not a son of a describe() statement) or when tests are &lt;a href=&quot;https://mochajs.org/#inclusive-tests&quot;&gt;skipped&lt;/a&gt; which might lead to a false belief that all tests are passing. Similarly, &lt;a href=&quot;https://github.com/jest-community/eslint-plugin-jest&quot;&gt;eslint-plugin-jest&lt;/a&gt; can, for example, warn when a test has no assertions at all (not checking anything)&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Seeing 90% code coverage and 100% green tests will make your face wear a big smile only until you realize that many tests aren‚Äôt asserting for anything and many test suites were just skipped. Hopefully, you didn‚Äôt deploy anything based on this false observation&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test case full of errors, luckily all are caught by Linters&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;describe(&quot;Too short description&quot;, () =&amp;gt; {
  const userToken = userService.getDefaultToken() // *error:no-setup-in-describe, use hooks (sparingly) instead
  it(&quot;Some description&quot;, () =&amp;gt; {});//* error: valid-test-description. Must include the word &quot;Should&quot; + at least 5 words
});

it.skip(&quot;Test name&quot;, () =&amp;gt; {// *error:no-skipped-tests, error:error:no-global-tests. Put tests only under describe or suite
  expect(&quot;somevalue&quot;); // error:no-assert
});

it(&quot;Test name&quot;, () =&amp;gt; {*//error:no-identical-title. Assign unique titles to tests
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 5Ô∏è‚É£: CI and Other Quality Measures&lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 5.1 Enrich your linters and abort builds that have linting issues&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Linters are a free lunch, with 5 min setup you get for free an auto-pilot guarding your code and catching significant issue as you type. Gone are the days where linting was about cosmetics (no semi-colons!). Nowadays, Linters can catch severe issues like errors that are not thrown correctly and losing information. On top of your basic set of rules (like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-standard&quot;&gt;ESLint standard&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;Airbnb style&lt;/a&gt;), consider including some specializing Linters like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-chai-expect&quot;&gt;eslint-plugin-chai-expect&lt;/a&gt; that can discover tests without assertions, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-promise?activeTab=readme&quot;&gt;eslint-plugin-promise&lt;/a&gt; can discover promises with no resolve (your code will never continue), &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security?activeTab=readme&quot;&gt;eslint-plugin-security&lt;/a&gt; which can discover eager regex expressions that might get used for DOS attacks, and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-you-dont-need-lodash-underscore&quot;&gt;eslint-plugin-you-dont-need-lodash-underscore&lt;/a&gt; is capable of alarming when the code uses utility library methods that are part of the V8 core methods like Lodash._map(‚Ä¶) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a rainy day where your production keeps crashing but the logs don‚Äôt display the error stack trace. What happened? Your code mistakenly threw a non-error object and the stack trace was lost, a good reason for banging your head against a brick wall. A 5 min linter setup could detect this TYPO and save your day&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-21-yoni-goldberg-eslint.jpeg&quot; alt=&quot;alt text&quot; title=&quot;The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 5.2 Shorten the feedback loop with local developer-CI&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Using a CI with shiny quality inspections like testing, linting, vulnerabilities check, etc? Help developers run this pipeline also locally to solicit instant feedback and shorten the &lt;a href=&quot;https://www.gocd.org/2016/03/15/are-you-ready-for-continuous-delivery-part-2-feedback-loops/&quot;&gt;feedback loop&lt;/a&gt;. Why? an efficient testing process constitutes many and iterative loops: (1) try-outs -&amp;gt; (2) feedback -&amp;gt; (3) refactor. The faster the feedback is, the more improvement iterations a developer can perform per-module and perfect the results. On the flip, when the feedback is late to come fewer improvement iterations could be packed into a single day, the team might already move forward to another topic/task/module and might not be up for refining that module.&lt;/p&gt; 
&lt;p&gt;Practically, some CI vendors (Example: &lt;a href=&quot;https://circleci.com/docs/2.0/local-cli/&quot;&gt;CircleCI local CLI&lt;/a&gt;) allow running the pipeline locally. Some commercial tools like &lt;a href=&quot;https://wallabyjs.com/&quot;&gt;wallaby provide highly-valuable &amp;amp; testing insights&lt;/a&gt; as a developer prototype (no affiliation). Alternatively, you may just add npm script to package.json that runs all the quality commands (e.g. test, lint, vulnerabilities)‚Ää‚Äî‚Ääuse tools like &lt;a href=&quot;https://www.npmjs.com/package/concurrently&quot;&gt;concurrently&lt;/a&gt; for parallelization and non-zero exit code if one of the tools failed. Now the developer should just invoke one command‚Ää‚Äî‚Ääe.g. ‚Äònpm run quality‚Äô‚Ää‚Äî‚Ääto get instant feedback. Consider also aborting a commit if the quality check failed using a githook (&lt;a href=&quot;https://github.com/typicode/husky&quot;&gt;husky can help&lt;/a&gt;) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; When the quality results arrive the day after the code, testing doesn‚Äôt become a fluent part of development rather an after the fact formal artifact&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: npm scripts that perform code quality inspection, all are run in parallel on demand or when a developer is trying to push new code&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;scripts&quot;: {
    &quot;inspect:sanity-testing&quot;: &quot;mocha **/**--test.js --grep \&quot;sanity\&quot;&quot;,
    &quot;inspect:lint&quot;: &quot;eslint .&quot;,
    &quot;inspect:vulnerabilities&quot;: &quot;npm audit&quot;,
    &quot;inspect:license&quot;: &quot;license-checker --failOn GPLv2&quot;,
    &quot;inspect:complexity&quot;: &quot;plato .&quot;,

    &quot;inspect:all&quot;: &quot;concurrently -c \&quot;bgBlue.bold,bgMagenta.bold,yellow\&quot; \&quot;npm:inspect:quick-testing\&quot; \&quot;npm:inspect:lint\&quot; \&quot;npm:inspect:vulnerabilities\&quot; \&quot;npm:inspect:license\&quot;&quot;
  },
  &quot;husky&quot;: {
    &quot;hooks&quot;: {
      &quot;precommit&quot;: &quot;npm run inspect:all&quot;,
      &quot;prepush&quot;: &quot;npm run inspect:all&quot;
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.3 Perform e2e testing over a true production-mirror&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; End to end (e2e) testing are the main challenge of every CI pipeline‚Ää‚Äî‚Ääcreating an identical ephemeral production mirror on the fly with all the related cloud services can be tedious and expensive. Finding the best compromise is your game: &lt;a href=&quot;https://serverless.com/&quot;&gt;Docker-compose&lt;/a&gt; allows crafting isolated dockerized environment with identical containers using a single plain text file but the backing technology (e.g. networking, deployment model) is different from real-world productions. You may combine it with &lt;a href=&quot;https://github.com/localstack/localstack&quot;&gt;‚ÄòAWS Local‚Äô&lt;/a&gt; to work with a stub of the real AWS services. If you went &lt;a href=&quot;https://serverless.com/&quot;&gt;serverless&lt;/a&gt; multiple frameworks like serverless and &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/serverless_app.html&quot;&gt;AWS SAM&lt;/a&gt; allows the local invocation of FaaS code.&lt;/p&gt; 
&lt;p&gt;The huge Kubernetes ecosystem is yet to formalize a standard convenient tool for local and CI-mirroring though many new tools are launched frequently. One approach is running a ‚Äòminimized-Kubernetes‚Äô using tools like &lt;a href=&quot;https://kubernetes.io/docs/setup/minikube/&quot;&gt;Minikube&lt;/a&gt; and &lt;a href=&quot;https://microk8s.io/&quot;&gt;MicroK8s&lt;/a&gt; which resemble the real thing only come with less overhead. Another approach is testing over a remote ‚Äòreal-Kubernetes‚Äô, some CI providers (e.g. &lt;a href=&quot;https://codefresh.io/&quot;&gt;Codefresh&lt;/a&gt;) has native integration with Kubernetes environment and make it easy to run the CI pipeline over the real thing, others allow custom scripting against a remote Kubernetes. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Using different technologies for production and testing demands maintaining two deployment models and keeps the developers and the ops team separated&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: a CI pipeline that generates Kubernetes cluster on the fly &lt;a href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot; data-href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot;&gt;Credit: Dynamic-environments Kubernetes&lt;/a&gt;)&lt;/h3&gt; 
 &lt;pre name=&quot;38d9&quot; id=&quot;38d9&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;deploy:&lt;br&gt;stage: deploy&lt;br&gt;image: registry.gitlab.com/gitlab-examples/kubernetes-deploy&lt;br&gt;script:&lt;br&gt;- ./configureCluster.sh $KUBE_CA_PEM_FILE $KUBE_URL $KUBE_TOKEN&lt;br&gt;- kubectl create ns $NAMESPACE&lt;br&gt;- kubectl create secret -n $NAMESPACE docker-registry gitlab-registry --docker-server=&quot;$CI_REGISTRY&quot; --docker-username=&quot;$CI_REGISTRY_USER&quot; --docker-password=&quot;$CI_REGISTRY_PASSWORD&quot; --docker-email=&quot;$GITLAB_USER_EMAIL&quot;&lt;br&gt;- mkdir .generated&lt;br&gt;- echo &quot;$CI_BUILD_REF_NAME-$CI_BUILD_REF&quot;&lt;br&gt;- sed -e &quot;s/TAG/$CI_BUILD_REF_NAME-$CI_BUILD_REF/g&quot; templates/deals.yaml | tee &quot;.generated/deals.yaml&quot;&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f .generated/deals.yaml&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f templates/my-sock-shop.yaml&lt;br&gt;environment:&lt;br&gt;name: test-for-ci&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.4 Parallelize test execution&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When done right, testing is your 24/7 friend providing almost instant feedback. In practice, executing 500 CPU-bounded unit test on a single thread can take too long. Luckily, modern test runners and CI platforms (like &lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;Jest&lt;/a&gt;, &lt;a href=&quot;https://github.com/avajs/ava&quot;&gt;AVA&lt;/a&gt; and &lt;a href=&quot;https://github.com/yandex/mocha-parallel-tests&quot;&gt;Mocha extensions&lt;/a&gt;) can parallelize the test into multiple processes and achieve significant improvement in feedback time. Some CI vendors do also parallelize tests across containers (!) which shortens the feedback loop even further. Whether locally over multiple processes, or over some cloud CLI using multiple machines‚Ää‚Äî‚Ääparallelizing demand keeping the tests autonomous as each might run on different processes&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Getting test results 1 hour long after pushing new code, as you already code the next features, is a great recipe for making testing less relevant&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (&lt;a href=&quot;https://medium.com/dailyjs/javascript-test-runners-benchmark-3a78d4117b4&quot;&gt;Credit: JavaScript Test-Runners Benchmark&lt;/a&gt;)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-24-yonigoldberg-jest-parallel.png&quot; alt=&quot;alt text&quot; title=&quot;Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (Credit: JavaScript Test-Runners Benchmark)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.5 Stay away from legal issues using license and plagiarism check&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Licensing and plagiarism issues are probably not your main concern right now, but why not tick this box as well in 10 minutes? A bunch of npm packages like &lt;a href=&quot;https://www.npmjs.com/package/license-checker&quot;&gt;license check&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/plagiarism-checker&quot;&gt;plagiarism check&lt;/a&gt; (commercial with free plan) can be easily baked into your CI pipeline and inspect for sorrows like dependencies with restrictive licenses or code that was copy-pasted from Stack Overflow and apparently violates some copyrights&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Unintentionally, developers might use packages with inappropriate licenses or copy paste commercial code and run into legal issues&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example:&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//install license-checker in your CI environment or also locally
npm install -g license-checker

//ask it to scan all licenses and fail with exit code other than 0 if it found unauthorized license. The CI system should catch this failure and stop the build
license-checker --summary --failOn BSD

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-25-nodejs-licsense.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community tools such as &lt;a href=&quot;https://docs.npmjs.com/getting-started/running-a-security-audit&quot;&gt;npm audit&lt;/a&gt;, or commercial tools like &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; (offer also a free community version). Both can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: NPM Audit result&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-26-npm-audit-snyk.png&quot; alt=&quot;alt text&quot; title=&quot;NPM Audit result&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.7 Automate dependency updates&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Yarn and npm latest introduction of package-lock.json introduced a serious challenge (the road to hell is paved with good intentions)‚Ää‚Äî‚Ääby default now, packages are no longer getting updates. Even a team running many fresh deployments with ‚Äònpm install‚Äô &amp;amp; ‚Äònpm update‚Äô won‚Äôt get any new updates. This leads to subpar dependent packages versions at best or to vulnerable code at worst. Teams now rely on developers goodwill and memory to manually update the package.json or use tools &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;like ncu&lt;/a&gt; manually. A more reliable way could be to automate the process of getting the most reliable dependency versions, though there are no silver bullet solutions yet there are two possible automation roads:&lt;/p&gt; 
&lt;p&gt;(1) CI can fail builds that have obsolete dependencies‚Ää‚Äî‚Ääusing tools like &lt;a href=&quot;https://docs.npmjs.com/cli/outdated&quot;&gt;‚Äònpm outdated‚Äô&lt;/a&gt; or ‚Äònpm-check-updates (ncu)‚Äô . Doing so will enforce developers to update dependencies.&lt;/p&gt; 
&lt;p&gt;(2) Use commercial tools that scan the code and automatically send pull requests with updated dependencies. One interesting question remaining is what should be the dependency update policy‚Ää‚Äî‚Ääupdating on every patch generates too many overhead, updating right when a major is released might point to an unstable version (many packages found vulnerable on the very first days after being released, &lt;a href=&quot;https://nodesource.com/blog/a-high-level-post-mortem-of-the-eslint-scope-security-incident/&quot;&gt;see the&lt;/a&gt; eslint-scope incident).&lt;/p&gt; 
&lt;p&gt;An efficient update policy may allow some ‚Äòvesting period‚Äô‚Ää‚Äî‚Äälet the code lag behind the @latest for some time and versions before considering the local copy as obsolete (e.g. local version is 1.3.1 and repository version is 1.3.8) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;ncu&lt;/a&gt; can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-27-yoni-goldberg-npm.png&quot; alt=&quot;alt text&quot; title=&quot;ncu can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 5.8 Other, non-Node related, CI tips&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt; 
&lt;ol class=&quot;postList&quot;&gt;
 &lt;li name=&quot;e3e4&quot; id=&quot;e3e4&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Use a declarative syntax. This is the only option for most vendors but older versions of Jenkins allows using code or UI&lt;/li&gt;
 &lt;li name=&quot;1fdc&quot; id=&quot;1fdc&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Opt for a vendor that has native Docker support&lt;/li&gt;
 &lt;li name=&quot;edcd&quot; id=&quot;edcd&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Fail early, run your fastest tests first. Create a ‚ÄòSmoke testing‚Äô step/milestone that groups multiple fast inspections (e.g. linting, unit tests) and provide snappy feedback to the code committer&lt;/li&gt;
 &lt;li name=&quot;0375&quot; id=&quot;0375&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Make it easy to skim-through all build artifacts including test reports, coverage reports, mutation reports, logs, etc&lt;/li&gt;
 &lt;li name=&quot;df82&quot; id=&quot;df82&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Create multiple pipelines/jobs for each event, reuse steps between them. For example, configure a job for feature branch commits and a different one for master PR. Let each reuse logic using shared steps (most vendors provide some mechanism for code reuse)&lt;/li&gt;
 &lt;li name=&quot;19b0&quot; id=&quot;19b0&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Never embed secrets in a job declaration, grab them from a secret store or from the job‚Äôs configuration&lt;/li&gt;
 &lt;li name=&quot;b70d&quot; id=&quot;b70d&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Explicitly bump version in a release build or at least ensure the developer did so&lt;/li&gt;
 &lt;li name=&quot;957c&quot; id=&quot;957c&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Build only once and perform all the inspections over the single build artifact (e.g. Docker image)&lt;/li&gt;
 &lt;li name=&quot;339b&quot; id=&quot;339b&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Test in an ephemeral environment that doesn‚Äôt drift state between builds. Caching node_modules might be the only exception&lt;/li&gt;
&lt;/ol&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äòll miss years of wisdom&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 5.9 Build matrix: Run the same CI steps using multiple Node versions&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Quality checking is about serendipity, the more ground you cover the luckier you get in detecting issues early. When developing reusable packages or running a multi-customer production with various configuration and Node versions, the CI must run the pipeline of tests over all the permutations of configurations. For example, assuming we use MySQL for some customers and Postgres for others‚Ää‚Äî‚Ääsome CI vendors support a feature called ‚ÄòMatrix‚Äô which allow running the suit of testing against all permutations of MySQL, Postgres and multiple Node version like 8, 9 and 10. This is done using configuration only without any additional effort (assuming you have testing or any other quality checks). Other CIs who doesn‚Äôt support Matrix might have extensions or tweaks to allow that &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; So after doing all that hard work of writing testing are we going to let bugs sneak in only because of configuration issues?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: Using Travis (CI vendor) build definition to run the same test over multiple Node versions&lt;/h3&gt; 
 &lt;pre name=&quot;f909&quot; id=&quot;f909&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;language: node_js&lt;br&gt;node_js:&lt;br&gt;  - &quot;7&quot;&lt;br&gt;  - &quot;6&quot;&lt;br&gt;  - &quot;5&quot;&lt;br&gt;  - &quot;4&quot;&lt;br&gt;install:&lt;br&gt;  - npm install&lt;br&gt;script:&lt;br&gt;  - npm run test&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Team&lt;/h1&gt; 
&lt;h2&gt;Yoni Goldberg&lt;/h2&gt; 
&lt;br&gt; 
&lt;img width=&quot;480px&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/yoni-goldberg.jpg&quot;&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Writer&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; I‚Äôm an independent consultant who works with Fortune 500 companies and garage startups on polishing their JS &amp;amp; Node.js applications. More than any other topic I‚Äôm fascinated by and aims to master the art of testing. I‚Äôm also the author of &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices&quot;&gt;Node.js Best Practices&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;üìó Online Course:&lt;/strong&gt; Liked this guide and wish to take your testing skills to the extreme? Consider visiting my comprehensive course &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;Follow:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goldbergyoni/&quot;&gt;üê¶ Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testjavascript.com/contact-2/&quot;&gt;üìû Contact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testjavascript.com/newsletter//&quot;&gt;‚úâÔ∏è Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;hr&gt; 
&lt;br&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Tech reviewer and advisor&lt;/p&gt; 
&lt;p&gt;Took care to revise, improve, lint and polish all the texts&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;hr&gt; 
&lt;br&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Concept, design and great advice&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; A savvy frontend developer, CSS expert and emojis freak&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Helps keep this project running, and reviews security related practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; Loves working on Node.js projects and web application security.&lt;/p&gt; 
&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://geospatialscott.blogspot.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1326248?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Davis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-stdavis&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AdrienRedon&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5978436?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrien REDON&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AdrienRedon&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/NoriSte&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/173663?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stefano Magni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-NoriSte&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.joer.im&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/47742486?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yeoh Joer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-yjoer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jhonnymoreira.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2177742?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jhonny Moreira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jhonnymoreira&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Germanika&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8846678?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ian Germann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-Germanika&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AbdelrahmanHafez&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19984935?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AbdelrahmanHafez&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.ruxandrafediuc.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11021586?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ruxandra Fediuc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-ruxandrafed&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jacklee814&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9951291?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jacklee814&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.petercarrero.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/231727?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Carrero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aloyr&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/huhgawz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/369338?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Huhgawz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-huhgawz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/haakonmb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7099302?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Haakon Borch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-haakonmb&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jaimemendoza.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5395811?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaime Mendoza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jaimemendozadev&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/camerondunford&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/840612?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cameron Dunford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-camerondunford&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shadowspawn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/15719847?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Gee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-shadowspawn&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aurelijusrozenas&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3273544?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aurelijus Ro≈æƒónas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aurelijusrozenas&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://aaronshivers.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/42848750?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aaronshivers&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tomdoes.tech/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/8683577?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Nagle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-tomanagle&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yvesyao&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7723729?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yves yao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-yvesyao&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Userbit&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/34487074?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Userbit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-Userbit&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://glaucialemos.netlify.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1631477?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Glaucia Lemos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#maintenance-glaucia86&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/koooge&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7419215?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;koooge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-koooge&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/michalbiesiada&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18367606?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-mbiesiad&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://roywalker.me&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/611846?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;roywalker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-roywalker&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dangen-effy.github.io/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/23185799?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dangen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-dangen-effy&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.to/mbiesiad&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/60202305?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;biesiadamich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-biesiadamich&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tarojsx.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/127009?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yanlin Jiang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-cncolder&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sanguino&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2077168?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sanguino&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-sanguino&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MorganGeek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3721240?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Morgan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-MorganGeek&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://luk4s.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8350985?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lukas Bischof&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices/commits?author=lukasbischof&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-lukasbischof&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://juanmaruiz.surge.sh&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1837650?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JuanMa Ruiz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-JuanMaRuiz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://luisangelorjr.com.br&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22268900?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lu√≠s √Çngelo Rodrigues Jr.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-luisangelorjr&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jfernandezpe.wordpress.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/12046620?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jos√© Fern√°ndez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jfernandezpe&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/AlejandroGutierrezB&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/56408597?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Gutierrez Barcenilla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AlejandroGutierrezB&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jasonandmonte&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30088000?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jasonandmonte&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-enable --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>jkup/mastering-chrome-devtools</title>
      <link>https://github.com/jkup/mastering-chrome-devtools</link>
      <description>&lt;p&gt;üî• Website for teaching Chrome DevTools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction to Dev Tools, v3&lt;/h1&gt; 
&lt;p&gt;Note: If you‚Äôre looking for Mastering Chrome Devtools, v2:&lt;/p&gt; 
&lt;p&gt;A web app for teaching people about Chrome DevTools. This is the website and course materials for the &lt;a href=&quot;https://frontendmasters.com/workshops/dev-tools-v3/&quot;&gt;Introduction to Dev Tools, v3&lt;/a&gt; on Frontend Masters.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;This app requires Node.js which can be downloaded &lt;a href=&quot;https://nodejs.org/&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/jkup/mastering-chrome-devtools.git
cd mastering-chrome-devtools
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;If you‚Äôd like the app to automatically reload on changes&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/jkup/mastering-chrome-devtools.git
cd mastering-chrome-devtools
npm install -g nodemon
npm install
nodemon server/server.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: If you‚Äôre looking for Mastering Chrome Devtools v2, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jkup/mastering-chrome-devtools.git
cd mastering-chrome-devtools
git checkout v2
npm install
npm start
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
