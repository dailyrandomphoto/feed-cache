<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Tue, 02 Feb 2021 01:53:36 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>bullhe4d/bigwatermelon</title>
      <link>https://github.com/bullhe4d/bigwatermelon</link>
      <description>&lt;p&gt;合成大西瓜源码,修改版&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;合成大西瓜&lt;/h2&gt; 
&lt;p&gt;被西瓜整崩溃了,改动了一下代码，点击右上角的宝箱会切换水果。破坏游戏体验，谨慎尝试。 分支「default」是未改动代码&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/JennerTien/bigwaterlemon/blob/main/1611557925872957.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>sannaha/sannaha.github.io</title>
      <link>https://github.com/sannaha/sannaha.github.io</link>
      <description>&lt;p&gt;合成大西瓜（P家版）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;合成大欧派（P家）&lt;/h1&gt; 
&lt;p&gt;合成大西瓜的P家版本。合成顺序为：暗妃鲁咪蕾-&amp;gt;古守血游-&amp;gt;真白花音-&amp;gt;铃宫铃-&amp;gt;椎名菜羽-&amp;gt;有栖Mana-&amp;gt;乙女音-&amp;gt;绯赤艾莉欧-&amp;gt;花园Serena-&amp;gt;梦乃栞-&amp;gt;紫桃爱音。如对合成顺序有异议，请提交申请与我们一同迫害。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xiaopengand/daxigua</title>
      <link>https://github.com/xiaopengand/daxigua</link>
      <description>&lt;p&gt;合成大西瓜源码，破解版源码，支持模式选择，分数选择&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;合成大西瓜&lt;/h2&gt; 
&lt;p&gt;（gitee好像把图片资源屏蔽了，改到vercel部署了）&lt;/p&gt; 
&lt;p&gt;魔改版演示地址：https://xiaoxigua.vercel.app/&lt;/p&gt; 
&lt;p&gt;更新：修改可分数选择代码。修复了结算时分数不正确&lt;/p&gt; 
&lt;p&gt;用了官方最新的源码，每种小水果已经分开了，不在一张图片里，理论上提高了速度&lt;/p&gt; 
&lt;p&gt;&#39;葡萄&#39; -&amp;gt; &#39;樱桃&#39; -&amp;gt; &#39;橘子&#39; -&amp;gt; &#39;柠檬&#39; -&amp;gt; &#39;猕猴桃&#39; -&amp;gt; &#39;西红柿&#39; -&amp;gt; &#39;桃&#39; -&amp;gt; &#39;菠萝&#39; -&amp;gt; &#39;椰子&#39; -&amp;gt; &#39;西瓜&#39; -&amp;gt; &#39;大西瓜&#39;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;添加模式选择和分数选择&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;模式选择&lt;/h1&gt; 
&lt;p&gt;随缘Play：所有水果随机出现，包括大西瓜&lt;/p&gt; 
&lt;p&gt;圣雄肝帝：刷出的都是小葡萄&lt;/p&gt; 
&lt;p&gt;原汁原味：原版，随机掉落的是前5种水果。&lt;/p&gt; 
&lt;p&gt;作弊模式：刷出的都是西红柿&lt;/p&gt; 
&lt;p&gt;去除小瓜：刷出橘子到菠萝&lt;/p&gt; 
&lt;p&gt;暴力吃瓜：刷出西瓜&lt;/p&gt; 
&lt;h1&gt;分数选择&lt;/h1&gt; 
&lt;p&gt;两倍暴击：原有基础上翻2倍&lt;/p&gt; 
&lt;p&gt;五倍暴击：原有基础上翻5倍&lt;/p&gt; 
&lt;p&gt;十倍暴击：原有基础上翻10倍&lt;/p&gt; 
&lt;p&gt;百倍暴击：原有基础上翻100倍&lt;/p&gt; 
&lt;p&gt;千倍暴击：原有基础上翻1000倍&lt;/p&gt; 
&lt;p&gt;万倍暴击：原有基础上翻10000倍&lt;/p&gt; 
&lt;p&gt;十万伏特：原有基础上翻100000倍&lt;/p&gt; 
&lt;h1&gt;分支说明&lt;/h1&gt; 
&lt;p&gt;分支「master」是最新的源码，各种水果图片分开了。魔改了模式选择和分数选择。修复了，结算分数不正常。&lt;/p&gt; 
&lt;p&gt;分支「mian」是旧的源码，水果图片在一张大图片里。魔改了模式选择和分数选择。&lt;/p&gt; 
&lt;p&gt;分支「cdnWeb」是使用了jsdelivr加速，演示站gitee上用的就是这个（卡是因为giett流量小）&lt;/p&gt; 
&lt;p&gt;分支「default」是最新源码，未改动（结束的全屏广告都有）。&lt;/p&gt; 
&lt;h1&gt;怎么修改水果图片&lt;/h1&gt; 
&lt;p&gt;找到\res\raw-assets\下各种水果的路径，替换水果图片，但对图片要求较高&lt;/p&gt; 
&lt;p&gt;右上角图片\res\raw-assets\8c\&lt;/p&gt; 
&lt;p&gt;\res\raw-assets\47\&lt;/p&gt; 
&lt;p&gt;切换两张图片到达字放大缩小&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jonasschmedtmann/complete-javascript-course</title>
      <link>https://github.com/jonasschmedtmann/complete-javascript-course</link>
      <description>&lt;p&gt;Starter files, final projects and FAQ for my Complete JavaScript course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Course Material and FAQ for my Complete JavaScript Course&lt;/h1&gt; 
&lt;p&gt;This repo contains starter files and final code for all sections and projects contained in the course.&lt;/p&gt; 
&lt;p&gt;Use starter code to start each section, and &lt;strong&gt;final code to compare it with your own code whenever something doesn&#39;t work&lt;/strong&gt;!&lt;/p&gt; 
&lt;p&gt;👇 &lt;strong&gt;&lt;em&gt;Please read the following Frequently Asked Questions (FAQ) carefully before starting the course&lt;/em&gt;&lt;/strong&gt; 👇&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Q1: How do I download the files?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; If you&#39;re new to GitHub and just want to download the entire code, hit the green button saying &quot;Code&quot;, and then choose the &quot;Download ZIP&quot; option. If you can&#39;t see the button (on mobile), use &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/archive/master.zip&quot;&gt;this link&lt;/a&gt; instead.&lt;/p&gt; 
&lt;h3&gt;Q2: I&#39;m looking for the old course version (v1) files. Where can I find them?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; They are in this same repo, but in the &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1 branch&lt;/a&gt;. So just go to &lt;a href=&quot;https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1&quot;&gt;v1&lt;/a&gt;, and download the code from there.&lt;/p&gt; 
&lt;h3&gt;Q3: I&#39;m stuck! Where do I get help?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Have you actually tried to fix the problem on your own? Have you compared your code to the final code? If you failed fixing your problem, please &lt;strong&gt;post a detailed description of the problem to the Q&amp;amp;A area of that video over at Udemy&lt;/strong&gt;, along with a &lt;a href=&quot;https://codepen.io/pen/&quot;&gt;codepen&lt;/a&gt; containing your code. You will get help there. Please don&#39;t send me a personal message or email to fix coding problems.&lt;/p&gt; 
&lt;h3&gt;Q4: What VSCode theme are you using?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; I use Monokai Pro for all my coding and course production. It&#39;s a paid theme (I&#39;, &lt;strong&gt;not&lt;/strong&gt; affiliated with them), but you can actually use the free demo version forever 😅&lt;/p&gt; 
&lt;h3&gt;Q5: Can I see a final version of the course projects?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Sure! Here you go:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pig-game-v2.netlify.app&quot;&gt;Pig Game&lt;/a&gt; (DOM Manipulation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist.netlify.app/&quot;&gt;Bankist&lt;/a&gt; (Arrays, Numbers, Dates, Timers. Fake &quot;log in&quot; with user &lt;code&gt;js&lt;/code&gt; and PIN &lt;code&gt;1111&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bankist-dom.netlify.app/&quot;&gt;Bankist Site&lt;/a&gt; (Advanced DOM and Events)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mapty.netlify.app/&quot;&gt;Mapty&lt;/a&gt; (OOP, Geolocation, Project planning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forkify-v2.netlify.app/&quot;&gt;forkify&lt;/a&gt; (Final advanced project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q6: Videos don&#39;t load, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Unfortunately, there is nothing I can do about it. The course is hosted on Udemy, and sometimes they have technical issues like this. Please just come back a bit later or &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact their support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q7: Videos are blurred / have low quality, can you fix it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Please open video settings and change the quality from &#39;Auto&#39; to another value, for example 720p. If that doesn&#39;t help, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q8: Are the videos downloadable?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Yes! I made all videos downloadable from Udemy so you can learn even without an internet connection. To download a video, use the settings icon in the right bottom corner of the video player. Videos have to be downloaded individually.&lt;/p&gt; 
&lt;h3&gt;Q9: I want to put these projects in my portfolio. Is that allowed?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Absolutely! Just make sure you actually built them yourself by following the course, and that you understand what you did. What is &lt;strong&gt;not allowed&lt;/strong&gt; is that you create your own course/videos/articles based on this course&#39;s content!&lt;/p&gt; 
&lt;h3&gt;Q10: You mentioned your resources page. Where can I find it?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; It&#39;s on my website at &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;http://codingheroes.io/resources&lt;/a&gt;. You can subscribe for updates 😉&lt;/p&gt; 
&lt;h3&gt;Q11: I love your courses and want to get updates on new courses. How?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; First, you can subscribe to my email list &lt;a href=&quot;http://codingheroes.io/resources&quot;&gt;at my website&lt;/a&gt;. Plus, I make important announcements on twitter &lt;a href=&quot;https://twitter.com/jonasschmedtman&quot;&gt;@jonasschmedtman&lt;/a&gt;, so you should definitely follow me there 🔥&lt;/p&gt; 
&lt;h3&gt;Q12: How do I get my certificate of completion?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; A certificate of completion is provided by Udemy after you complete 100% of the course. After completing the course, just click on the &quot;Your progress&quot; indicator in the top right-hand corner of the course page. If you want to change your name on the certificate, please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q13: Can you add subtitles in my language?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No. I provide professional English captions, but Udemy is responsible for subtitles in all other languages (automatic translations). So please &lt;a href=&quot;https://support.udemy.com/hc/en-us&quot;&gt;contact the Udemy support team&lt;/a&gt; to request your own language.&lt;/p&gt; 
&lt;h3&gt;Q14: Do you accept pull requests?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; No, for the simple reason that I want this repository to contain the &lt;em&gt;exact&lt;/em&gt; same code that is shown in the videos. However, please feel free to add an issue if you found one.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pedroslopez/whatsapp-web.js</title>
      <link>https://github.com/pedroslopez/whatsapp-web.js</link>
      <description>&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg&quot; alt=&quot;Depfu&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.2049.10-brightgreen.svg&quot; alt=&quot;WhatsApp_Web 2.2049.10&quot;&gt; &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;whatsapp-web.js&lt;/h1&gt; 
&lt;p&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/p&gt; 
&lt;p&gt;It uses Puppeteer to run a real instance of Whatsapp Web to avoid getting blocked.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I can&#39;t guarantee you will not be blocked by using this method, although it has worked for me. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#39;t be considered totally safe.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Please note that Node v10.18.1+ is required due to Puppeteer.&lt;/p&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;whatsapp-web.js&#39;);
const client = new Client();

client.on(&#39;qr&#39;, (qr) =&amp;gt; {
    // Generate and scan this code with your phone
    console.log(&#39;QR RECEIVED&#39;, qr);
});

client.on(&#39;ready&#39;, () =&amp;gt; {
    console.log(&#39;Client is ready!&#39;);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
    if (msg.body == &#39;!ping&#39;) {
        msg.reply(&#39;pong&#39;);
    }
});

client.initialize();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at &lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js/blob/master/example.js&quot;&gt;example.js&lt;/a&gt; for another example with more use cases.&lt;/p&gt; 
&lt;h2&gt;Supported features&lt;/h2&gt; 
&lt;p&gt;| Feature | Status | | ------------- | ------------- | | Send messages | ✅ | | Receive messages | ✅ | | Send media (images/audio/documents) | ✅ | | Send media (video) | ✅ &lt;a href=&quot;https://waguide.pedroslopez.me/features/handling-attachments#caveat-for-sending-videos-and-gifs&quot;&gt;(requires google chrome)&lt;/a&gt; | | Send stickers | ✅ | | Receive media (images/audio/video/documents) | ✅ | | Send contact cards | ✅ | | Send location | ✅ | | Receive location | ✅ | | Message replies | ✅ | | Join groups by invite | ✅ | | Get invite for group | ✅ | | Modify group info (subject, description) | ✅ | | Modify group settings (send messages, edit info) | ✅ | | Add group participants | ✅ | | Kick group participants | ✅ | | Promote/demote group participants | ✅ | | Mention users | ✅ | | Mute/unmute chats | ✅ | | Block/unblock contacts | ✅ | | Get contact info | ✅ | | Get profile pictures | ✅ | | Set user status message | ✅ |&lt;/p&gt; 
&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pedroslopez.me/whatsapp-web.js&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://waguide.pedroslopez.me/&quot;&gt;Guide&lt;/a&gt; &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome! If you see something you&#39;d like to add, please do. For drastic changes, please open an issue first.&lt;/p&gt; 
&lt;h2&gt;Donating&lt;/h2&gt; 
&lt;p&gt;You can support the maintainer of this project through the link below&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.me/psla/&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg&quot; alt=&quot;Support via PayPal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at https://whatsapp.com. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this project except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>denysdovhan/wtfjs</title>
      <link>https://github.com/denysdovhan/wtfjs</link>
      <description>&lt;p&gt;🤪 A list of funny and tricky JavaScript examples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What the f*ck JavaScript?&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.wtfpl.net&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square&quot; alt=&quot;WTFPL 2.0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/wtfjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/wtfjs.svg?style=flat-square&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A list of funny and tricky JavaScript examples&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;JavaScript is a great language. It has a simple syntax, large ecosystem and, what is most important, a great community.&lt;/p&gt; 
&lt;p&gt;At the same time, we all know that JavaScript is quite a funny language with tricky parts. Some of them can quickly turn our everyday job into hell, and some of them can make us laugh out loud.&lt;/p&gt; 
&lt;p&gt;The original idea for WTFJS belongs to &lt;a href=&quot;https://twitter.com/brianleroux&quot;&gt;Brian Leroux&lt;/a&gt;. This list is highly inspired by his talk &lt;a href=&quot;https://www.youtube.com/watch?v=et8xNAc2ic8&quot;&gt;&lt;strong&gt;“WTFJS”&lt;/strong&gt; at dotJS 2012&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=et8xNAc2ic8&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/et8xNAc2ic8/0.jpg&quot; alt=&quot;dotJS 2012 - Brian Leroux - WTFJS&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Node Packaged Manuscript&lt;/h1&gt; 
&lt;p&gt;You can install this handbook using &lt;code&gt;npm&lt;/code&gt;. Just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g wtfjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should be able to run &lt;code&gt;wtfjs&lt;/code&gt; at the command line now. This will open the manual in your selected &lt;code&gt;$PAGER&lt;/code&gt;. Otherwise, you may continue reading on here.&lt;/p&gt; 
&lt;p&gt;The source is available here: &lt;a href=&quot;https://github.com/denysdovhan/wtfjs&quot;&gt;https://github.com/denysdovhan/wtfjs&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Translations&lt;/h1&gt; 
&lt;p&gt;Currently, there are these translations of &lt;strong&gt;wtfjs&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-zh-cn.md&quot;&gt;中文版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-fr-fr.md&quot;&gt;Français&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pt-br.md&quot;&gt;Português do Brasil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pl-pl.md&quot;&gt;Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-it-it.md&quot;&gt;Italiano&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/denysdovhan/wtfjs/issues/new?title=Translation%20Request:%20%5BPlease%20enter%20language%20here%5D&amp;amp;body=I%20am%20able%20to%20translate%20this%20language%20%5Byes/no%5D&quot;&gt;&lt;strong&gt;Request another translation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-motivation&quot;&gt;💪🏻 Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-notation&quot;&gt;✍🏻 Notation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-examples&quot;&gt;👀 Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-equal-&quot;&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-not-equal--but-not-equal--too&quot;&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-false&quot;&gt;true is false&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#banana&quot;&gt;baNaNa&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#its-a-fail&quot;&gt;It&#39;s a fail&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true&quot;&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#null-is-falsy-but-not-false&quot;&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#documentall-is-an-object-but-it-is-undefined&quot;&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#minimal-value-is-greater-than-zero&quot;&gt;Minimal value is greater than zero&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#function-is-not-a-function&quot;&gt;function is not a function&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#adding-arrays&quot;&gt;Adding arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#trailing-commas-in-array&quot;&gt;Trailing commas in array&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#array-equality-is-a-monster&quot;&gt;Array equality is a monster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#undefined-and-number&quot;&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#parseint-is-a-bad-guy&quot;&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#math-with-true-and-false&quot;&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#html-comments-are-valid-in-javascript&quot;&gt;HTML comments are valid in JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-number&quot;&gt;&lt;code&gt;NaN&lt;/code&gt; is ~~not~~ a number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-and-null-are-objects&quot;&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#magically-increasing-numbers&quot;&gt;Magically increasing numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#precision-of-01--02&quot;&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#patching-numbers&quot;&gt;Patching numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparison-of-three-numbers&quot;&gt;Comparison of three numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#funny-math&quot;&gt;Funny math&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#addition-of-regexps&quot;&gt;Addition of RegExps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#strings-arent-instances-of-string&quot;&gt;Strings aren&#39;t instances of &lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#calling-functions-with-backticks&quot;&gt;Calling functions with backticks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#call-call-call&quot;&gt;Call call call&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-constructor-property&quot;&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#object-as-a-key-of-objects-property&quot;&gt;Object as a key of object&#39;s property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-prototypes-with-__proto__&quot;&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-object-&quot;&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#destructuring-with-default-values&quot;&gt;Destructuring with default values&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#dots-and-spreading&quot;&gt;Dots and spreading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#labels&quot;&gt;Labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nested-labels&quot;&gt;Nested labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#insidious-trycatch&quot;&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#is-this-multiple-inheritance&quot;&gt;Is this multiple inheritance?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-generator-which-yields-itself&quot;&gt;A generator which yields itself&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-class-of-class&quot;&gt;A class of class&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-coercible-objects&quot;&gt;Non-coercible objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-arrow-functions&quot;&gt;Tricky arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arrow-functions-can-not-be-a-constructor&quot;&gt;Arrow functions can not be a constructor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-and-arrow-functions&quot;&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-return&quot;&gt;Tricky return&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#chaining-assignments-on-object&quot;&gt;Chaining assignments on object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-object-properties-with-arrays&quot;&gt;Accessing object properties with arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#null-and-relational-operators&quot;&gt;Null and Relational Operators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#numbertofixed-display-different-numbers&quot;&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#mathmax-less-than-mathmin&quot;&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparing-null-to-0&quot;&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#same-variable-redeclaration&quot;&gt;Same variable redeclaration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#default-behavior-arrayprototypesort&quot;&gt;Default behavior Array.prototype.sort()&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#resolve-wont-return-promise-instance&quot;&gt;resolve() won&#39;t return Promise instance&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-other-resources&quot;&gt;📚 Other resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-license&quot;&gt;🎓 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;💪🏻 Motivation&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Just for fun&lt;/p&gt; 
 &lt;p&gt;— &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Just_for_Fun&quot;&gt;&lt;strong&gt;“Just for Fun: The Story of an Accidental Revolutionary”&lt;/strong&gt;&lt;/a&gt;, Linus Torvalds&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The primary goal of this list is to collect some crazy examples and explain how they work, if possible. Just because it&#39;s fun to learn something that we didn&#39;t know before.&lt;/p&gt; 
&lt;p&gt;If you are a beginner, you can use these notes to get a deeper dive into JavaScript. I hope these notes will motivate you to spend more time reading the specification.&lt;/p&gt; 
&lt;p&gt;If you are a professional developer, you can consider these examples as a great reference for all of the quirks and unexpected edges of our beloved JavaScript.&lt;/p&gt; 
&lt;p&gt;In any case, just read this. You&#39;re probably going to find something new.&lt;/p&gt; 
&lt;h1&gt;✍🏻 Notation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// -&amp;gt;&lt;/code&gt;&lt;/strong&gt; is used to show the result of an expression. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;1 + 1; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// &amp;gt;&lt;/code&gt;&lt;/strong&gt; means the result of &lt;code&gt;console.log&lt;/code&gt; or another output. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;hello, world!&quot;); // &amp;gt; hello, world!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;//&lt;/code&gt;&lt;/strong&gt; is just a comment used for explanations. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Assigning a function to foo constant
const foo = function() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;👀 Examples&lt;/h1&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Array is equal not array:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[] == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The abstract equality operator converts both sides to numbers to compare them, and both sides become the number &lt;code&gt;0&lt;/code&gt; for different reasons. Arrays are truthy, so on the right, the opposite of a truthy value is &lt;code&gt;false&lt;/code&gt;, which is then coerced to &lt;code&gt;0&lt;/code&gt;. On the left, however, an empty array is coerced to a number without becoming a boolean first, and empty arrays are coerced to &lt;code&gt;0&lt;/code&gt;, despite being truthy.&lt;/p&gt; 
&lt;p&gt;Here is how this expression simplifies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;+[] == +![];
0 == +false;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true&quot;&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-logical-not-operator&quot;&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.13&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/h2&gt; 
&lt;p&gt;Array is not equal &lt;code&gt;true&lt;/code&gt;, but not Array is not equal &lt;code&gt;true&lt;/code&gt; too; Array is equal &lt;code&gt;false&lt;/code&gt;, not Array is equal &lt;code&gt;false&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

// According to the specification

true == []; // -&amp;gt; false

toNumber(true); // -&amp;gt; 1
toNumber([]); // -&amp;gt; 0

1 == 0; // -&amp;gt; false

true == ![]; // -&amp;gt; false

![]; // -&amp;gt; false

true == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true

// According to the specification

false == []; // -&amp;gt; true

toNumber(false); // -&amp;gt; 0
toNumber([]); // -&amp;gt; 0

0 == 0; // -&amp;gt; true

false == ![]; // -&amp;gt; true

![]; // -&amp;gt; false

false == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.13&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;true is false&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;!!&quot;false&quot; == !!&quot;true&quot;; // -&amp;gt; true
!!&quot;false&quot; === !!&quot;true&quot;; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Consider this step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// true is &#39;truthy&#39; and represented by value 1 (number), &#39;true&#39; in string form is NaN.
true == &quot;true&quot;; // -&amp;gt; false
false == &quot;false&quot;; // -&amp;gt; false

// &#39;false&#39; is not the empty string, so it&#39;s a truthy value
!!&quot;false&quot;; // -&amp;gt; true
!!&quot;true&quot;; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.13&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;baNaNa&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;b&quot; + &quot;a&quot; + +&quot;a&quot; + &quot;a&quot;; // -&amp;gt; &#39;baNaNa&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an old-school joke in JavaScript, but remastered. Here&#39;s the original one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;foo&quot; + +&quot;bar&quot;; // -&amp;gt; &#39;fooNaN&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The expression is evaluated as &lt;code&gt;&#39;foo&#39; + (+&#39;bar&#39;)&lt;/code&gt;, which converts &lt;code&gt;&#39;bar&#39;&lt;/code&gt; to not a number.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus&quot;&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator&quot;&gt;12.5.6 Unary + Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;NaN === NaN; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The specification strictly defines the logic behind this behavior:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is different from &lt;code&gt;Type(y)&lt;/code&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number, then 
   &lt;ol&gt; 
    &lt;li&gt;If &lt;code&gt;x&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;If &lt;code&gt;y&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;… … …&lt;/li&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison&quot;&gt;&lt;strong&gt;7.2.14&lt;/strong&gt; Strict Equality Comparison&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Following the definition of &lt;code&gt;NaN&lt;/code&gt; from the IEEE:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Four mutually exclusive relations are possible: less than, equal, greater than, and unordered. The last case arises when at least one operand is NaN. Every NaN shall compare unordered with everything, including itself.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://stackoverflow.com/questions/1565164/1573715#1573715&quot;&gt;“What is the rationale for all comparisons returning false for IEEE754 NaN values?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;It&#39;s a fail&lt;/h2&gt; 
&lt;p&gt;You would not believe, but …&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(![] + [])[+[]] +
  (![] + [])[+!+[]] +
  ([![]] + [][[]])[+!+[] + [+[]]] +
  (![] + [])[!+[] + !+[]];
// -&amp;gt; &#39;fail&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;By breaking that mass of symbols into pieces, we notice that the following pattern occurs often:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;![] + []; // -&amp;gt; &#39;false&#39;
![]; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So we try adding &lt;code&gt;[]&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. But due to a number of internal function calls (&lt;code&gt;binary + Operator&lt;/code&gt; -&amp;gt; &lt;code&gt;ToPrimitive&lt;/code&gt; -&amp;gt; &lt;code&gt;[[DefaultValue]]&lt;/code&gt;) we end up converting the right operand to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;![] + [].toString(); // &#39;false&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thinking of a string as an array we can access its first character via &lt;code&gt;[0]&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;false&quot;[0]; // -&amp;gt; &#39;f&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The rest is obvious, but the &lt;code&gt;i&lt;/code&gt; is tricky. The &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;fail&lt;/code&gt; is grabbed by generating the string &lt;code&gt;&#39;falseundefined&#39;&lt;/code&gt; and grabbing the element on index &lt;code&gt;[&#39;10&#39;]&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;An array is a truthy value, however, it&#39;s not equal to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;!![]       // -&amp;gt; true
[] == true // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Here are links to the corresponding sections in the ECMA-262 specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-logical-not-operator&quot;&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.13&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;null&lt;/code&gt; is a falsy value, it&#39;s not equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;!!null; // -&amp;gt; false
null == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, other falsy values, like &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;&#39;&#39;&lt;/code&gt; are equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;0 == false; // -&amp;gt; true
&quot;&quot; == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The explanation is the same as for previous example. Here&#39;s the corresponding link:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.13&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ This is part of the Browser API and won&#39;t work in a Node.js environment ⚠️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;document.all&lt;/code&gt; is an array-like object and it gives access to the DOM nodes in the page, it responds to the &lt;code&gt;typeof&lt;/code&gt; function as &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;document.all instanceof Object; // -&amp;gt; true
typeof document.all; // -&amp;gt; &#39;undefined&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, &lt;code&gt;document.all&lt;/code&gt; is not equal to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;document.all === undefined; // -&amp;gt; false
document.all === null; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But at the same time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;document.all == null; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;document.all&lt;/code&gt; used to be a way to access DOM elements, in particular with old versions of IE. While it has never been a standard it was broadly used in the old age JS code. When the standard progressed with new APIs (such as &lt;code&gt;document.getElementById&lt;/code&gt;) this API call became obsolete and the standard committee had to decide what to do with it. Because of its broad use they decided to keep the API but introduce a willful violation of the JavaScript specification. The reason why it responds to &lt;code&gt;false&lt;/code&gt; when using the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison&quot;&gt;Strict Equality Comparison&lt;/a&gt; with &lt;code&gt;undefined&lt;/code&gt; while &lt;code&gt;true&lt;/code&gt; when using the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; is due to the willful violation of the specification that explicitly allows that.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://html.spec.whatwg.org/multipage/obsolete.html#dom-document-all&quot;&gt;“Obsolete features - document.all”&lt;/a&gt; at WhatWG - HTML spec — &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/blob/0d79079b61dad953bbfde817a5893a49f7e889fb/types%20%26%20grammar/ch4.md#falsy-objects&quot;&gt;“Chapter 4 - ToBoolean - Falsy values”&lt;/a&gt; at YDKJS - Types &amp;amp; Grammar&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Minimal value is greater than zero&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is the smallest number, which is greater than zero:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number.MIN_VALUE &amp;gt; 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is &lt;code&gt;5e-324&lt;/code&gt;, i.e. the smallest positive number that can be represented within float precision, i.e. that&#39;s as close as you can get to zero. It defines the best resolution that floats can give you.&lt;/p&gt; 
 &lt;p&gt;Now the overall smallest value is &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; although it&#39;s not really numeric in a strict sense.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://stackoverflow.com/questions/26614728/why-is-0-less-than-number-min-value-in-javascript&quot;&gt;“Why is &lt;code&gt;0&lt;/code&gt; less than &lt;code&gt;Number.MIN_VALUE&lt;/code&gt; in JavaScript?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-number.min_value&quot;&gt;&lt;strong&gt;20.1.2.9&lt;/strong&gt; Number.MIN_VALUE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;function is not a function&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ A bug present in V8 v5.5 or lower (Node.js &amp;lt;=7) ⚠️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All of you know about the annoying &lt;em&gt;undefined is not a function&lt;/em&gt;, but what about this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declare a class which extends null
class Foo extends null {}
// -&amp;gt; [Function: Foo]

new Foo() instanceof null;
// &amp;gt; TypeError: function is not a function
// &amp;gt;     at … … …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a part of the specification. It&#39;s just a bug that has now been fixed, so there shouldn&#39;t be a problem with it in the future.&lt;/p&gt; 
&lt;h2&gt;Adding arrays&lt;/h2&gt; 
&lt;p&gt;What if you try to add two arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3] + [4, 5, 6]; // -&amp;gt; &#39;1,2,34,5,6&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The concatenation happens. Step-by-step, it looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[1, 2, 3] +
  [4, 5, 6][
    // call toString()
    (1, 2, 3)
  ].toString() +
  [4, 5, 6].toString();
// concatenation
&quot;1,2,3&quot; + &quot;4,5,6&quot;;
// -&amp;gt;
(&quot;1,2,34,5,6&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trailing commas in array&lt;/h2&gt; 
&lt;p&gt;You&#39;ve created an array with 4 empty elements. Despite all, you&#39;ll get an array with three elements, because of trailing commas:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let a = [, , ,];
a.length; // -&amp;gt; 3
a.toString(); // -&amp;gt; &#39;,,&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Trailing commas&lt;/strong&gt; (sometimes called &quot;final commas&quot;) can be useful when adding new elements, parameters, or properties to JavaScript code. If you want to add a new property, you can simply add a new line without modifying the previously last line if that line already uses a trailing comma. This makes version-control diffs cleaner and editing code might be less troublesome.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas&quot;&gt;Trailing commas&lt;/a&gt; at MDN&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Array equality is a monster&lt;/h2&gt; 
&lt;p&gt;Array equality is a monster in JS, as you can see below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[] == &#39;&#39;   // -&amp;gt; true
[] == 0    // -&amp;gt; true
[&#39;&#39;] == &#39;&#39; // -&amp;gt; true
[0] == 0   // -&amp;gt; true
[0] == &#39;&#39;  // -&amp;gt; false
[&#39;&#39;] == 0  // -&amp;gt; true

[null] == &#39;&#39;      // true
[null] == 0       // true
[undefined] == &#39;&#39; // true
[undefined] == 0  // true

[[]] == 0  // true
[[]] == &#39;&#39; // true

[[[[[[]]]]]] == &#39;&#39; // true
[[[[[[]]]]]] == 0  // true

[[[[[[ null ]]]]]] == 0  // true
[[[[[[ null ]]]]]] == &#39;&#39; // true

[[[[[[ undefined ]]]]]] == 0  // true
[[[[[[ undefined ]]]]]] == &#39;&#39; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;You should watch very carefully for the above examples! The behaviour is described in section &lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.13&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt; of the specification.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;If we don&#39;t pass any arguments into the &lt;code&gt;Number&lt;/code&gt; constructor, we&#39;ll get &lt;code&gt;0&lt;/code&gt;. The value &lt;code&gt;undefined&lt;/code&gt; is assigned to formal arguments when there are no actual arguments, so you might expect that &lt;code&gt;Number&lt;/code&gt; without arguments takes &lt;code&gt;undefined&lt;/code&gt; as a value of its parameter. However, when we pass &lt;code&gt;undefined&lt;/code&gt;, we will get &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number(); // -&amp;gt; 0
Number(undefined); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If no arguments were passed to this function&#39;s invocation, let &lt;code&gt;n&lt;/code&gt; be &lt;code&gt;+0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Else, let &lt;code&gt;n&lt;/code&gt; be ? &lt;code&gt;ToNumber(value)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In case of &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;ToNumber(undefined)&lt;/code&gt; should return &lt;code&gt;NaN&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Here&#39;s the corresponding section:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-number-constructor&quot;&gt;&lt;strong&gt;20.1.1&lt;/strong&gt; The Number Constructor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-tonumber&quot;&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; is famous by its quirks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt(&quot;f*ck&quot;); // -&amp;gt; NaN
parseInt(&quot;f*ck&quot;, 16); // -&amp;gt; 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; This happens because &lt;code&gt;parseInt&lt;/code&gt; will continue parsing character-by-character until it hits a character it doesn&#39;t know. The &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;&#39;f*ck&#39;&lt;/code&gt; is the hexadecimal digit &lt;code&gt;15&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Parsing &lt;code&gt;Infinity&lt;/code&gt; to integer is something…&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;//
parseInt(&quot;Infinity&quot;, 10); // -&amp;gt; NaN
// ...
parseInt(&quot;Infinity&quot;, 18); // -&amp;gt; NaN...
parseInt(&quot;Infinity&quot;, 19); // -&amp;gt; 18
// ...
parseInt(&quot;Infinity&quot;, 23); // -&amp;gt; 18...
parseInt(&quot;Infinity&quot;, 24); // -&amp;gt; 151176378
// ...
parseInt(&quot;Infinity&quot;, 29); // -&amp;gt; 385849803
parseInt(&quot;Infinity&quot;, 30); // -&amp;gt; 13693557269
// ...
parseInt(&quot;Infinity&quot;, 34); // -&amp;gt; 28872273981
parseInt(&quot;Infinity&quot;, 35); // -&amp;gt; 1201203301724
parseInt(&quot;Infinity&quot;, 36); // -&amp;gt; 1461559270678...
parseInt(&quot;Infinity&quot;, 37); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful with parsing &lt;code&gt;null&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt(null, 24); // -&amp;gt; 23
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It&#39;s converting &lt;code&gt;null&lt;/code&gt; to the string &lt;code&gt;&quot;null&quot;&lt;/code&gt; and trying to convert it. For radixes 0 through 23, there are no numerals it can convert, so it returns NaN. At 24, &lt;code&gt;&quot;n&quot;&lt;/code&gt;, the 14th letter, is added to the numeral system. At 31, &lt;code&gt;&quot;u&quot;&lt;/code&gt;, the 21st letter, is added and the entire string can be decoded. At 37 on there is no longer any valid numeral set that can be generated and &lt;code&gt;NaN&lt;/code&gt; is returned.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href=&quot;https://stackoverflow.com/questions/6459758/parseintnull-24-23-wait-what&quot;&gt;“parseInt(null, 24) === 23… wait, what?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Don&#39;t forget about octals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt(&quot;06&quot;); // 6
parseInt(&quot;08&quot;); // 8 if support ECMAScript 5
parseInt(&quot;08&quot;); // 0 if not support ECMAScript 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; If the input string begins with &quot;0&quot;, radix is eight (octal) or 10 (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet. For this reason always specify a radix when using &lt;code&gt;parseInt&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; always convert input to string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 2
Number({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful while parsing floating point values&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;parseInt(0.000001); // -&amp;gt; 0
parseInt(0.0000001); // -&amp;gt; 1
parseInt(1 / 1999999); // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; &lt;code&gt;ParseInt&lt;/code&gt; takes a string argument and returns an integer of the specified radix. &lt;code&gt;ParseInt&lt;/code&gt; also strips anything after and including the first non-digit in the string parameter. &lt;code&gt;0.000001&lt;/code&gt; is converted to a string &lt;code&gt;&quot;0.000001&quot;&lt;/code&gt; and the &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;. When &lt;code&gt;0.0000001&lt;/code&gt; is converted to a string it is treated as &lt;code&gt;&quot;1e-7&quot;&lt;/code&gt; and hence &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. &lt;code&gt;1/1999999&lt;/code&gt; is interpreted as &lt;code&gt;5.00000250000125e-7&lt;/code&gt; and &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;5&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Let&#39;s do some math:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true -
  true + (
    // -&amp;gt; 2
    true + true
  ) *
    (true + true) -
  true; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hmmm… 🤔&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;We can coerce values to numbers with the &lt;code&gt;Number&lt;/code&gt; constructor. It&#39;s quite obvious that &lt;code&gt;true&lt;/code&gt; will be coerced to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number(true); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The unary plus operator attempts to convert its value into a number. It can convert string representations of integers and floats, as well as the non-string values &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt;. If it cannot parse a particular value, it will evaluate to &lt;code&gt;NaN&lt;/code&gt;. That means we can coerce &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;+true; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you&#39;re performing addition or multiplication, the &lt;code&gt;ToNumber&lt;/code&gt; method is invoked. According to the specification, this method returns:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;true&lt;/strong&gt;, return &lt;strong&gt;1&lt;/strong&gt;. If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;false&lt;/strong&gt;, return &lt;strong&gt;+0&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;That&#39;s why we can add boolean values as regular numbers and get correct results.&lt;/p&gt; 
&lt;p&gt;Corresponding sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator&quot;&gt;&lt;strong&gt;12.5.6&lt;/strong&gt; Unary &lt;code&gt;+&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus&quot;&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-tonumber&quot;&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HTML comments are valid in JavaScript&lt;/h2&gt; 
&lt;p&gt;You will be impressed, but &lt;code&gt;&amp;lt;!--&lt;/code&gt; (which is known as HTML comment) is a valid comment in JavaScript.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// valid comment
&amp;lt;!-- valid comment too
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Impressed? HTML-like comments were intended to allow browsers that didn&#39;t understand the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to degrade gracefully. These browsers, e.g. Netscape 1.x are no longer popular. So there is really no point in putting HTML comments in your script tags anymore.&lt;/p&gt; 
&lt;p&gt;Since Node.js is based on the V8 engine, HTML-like comments are supported by the Node.js runtime too. Moreover, they&#39;re a part of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-html-like-comments&quot;&gt;&lt;strong&gt;B.1.3&lt;/strong&gt; HTML-like Comments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is ~~not~~ a number&lt;/h2&gt; 
&lt;p&gt;Type of &lt;code&gt;NaN&lt;/code&gt; is a &lt;code&gt;&#39;number&#39;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof NaN; // -&amp;gt; &#39;number&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Explanations of how &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt; operators work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-typeof-operator&quot;&gt;&lt;strong&gt;12.5.5&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-instanceofoperator&quot;&gt;&lt;strong&gt;12.10.4&lt;/strong&gt; Runtime Semantics: InstanceofOperator(&lt;code&gt;O&lt;/code&gt;,&lt;code&gt;C&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof []; // -&amp;gt; &#39;object&#39;
typeof null; // -&amp;gt; &#39;object&#39;

// however
null instanceof Object; // false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The behavior of &lt;code&gt;typeof&lt;/code&gt; operator is defined in this section of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-typeof-operator&quot;&gt;&lt;strong&gt;12.5.5&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;According to the specification, the &lt;code&gt;typeof&lt;/code&gt; operator returns a string according to &lt;a href=&quot;https://www.ecma-international.org/ecma-262/#table-35&quot;&gt;Table 35: &lt;code&gt;typeof&lt;/code&gt; Operator Results&lt;/a&gt;. For &lt;code&gt;null&lt;/code&gt;, ordinary, standard exotic and non-standard exotic objects, which do not implement &lt;code&gt;[[Call]]&lt;/code&gt;, it returns the string &lt;code&gt;&quot;object&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;However, you can check the type of an object by using the &lt;code&gt;toString&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Object.prototype.toString.call([]);
// -&amp;gt; &#39;[object Array]&#39;

Object.prototype.toString.call(new Date());
// -&amp;gt; &#39;[object Date]&#39;

Object.prototype.toString.call(null);
// -&amp;gt; &#39;[object Null]&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Magically increasing numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;999999999999999; // -&amp;gt; 999999999999999
9999999999999999; // -&amp;gt; 10000000000000000

10000000000000000; // -&amp;gt; 10000000000000000
10000000000000000 + 1; // -&amp;gt; 10000000000000000
10000000000000000 + 1.1; // -&amp;gt; 10000000000000002
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is caused by IEEE 754-2008 standard for Binary Floating-Point Arithmetic. At this scale, it rounds to the nearest even number. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-ecmascript-language-types-number-type&quot;&gt;&lt;strong&gt;6.1.6&lt;/strong&gt; The Number Type&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754&lt;/a&gt; on Wikipedia&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;A well-known joke. An addition of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; is deadly precise:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;0.1 +
  0.2(
    // -&amp;gt; 0.30000000000000004
    0.1 + 0.2
  ) ===
  0.3; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The answer for the &lt;a href=&quot;https://stackoverflow.com/questions/588004/is-floating-point-math-broken&quot;&gt;”Is floating point math broken?”&lt;/a&gt; question on StackOverflow:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The constants &lt;code&gt;0.2&lt;/code&gt; and &lt;code&gt;0.3&lt;/code&gt; in your program will also be approximations to their true values. It happens that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.2&lt;/code&gt; is larger than the rational number &lt;code&gt;0.2&lt;/code&gt; but that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.3&lt;/code&gt; is smaller than the rational number &lt;code&gt;0.3&lt;/code&gt;. The sum of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; winds up being larger than the rational number &lt;code&gt;0.3&lt;/code&gt; and hence disagreeing with the constant in your code.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This problem is so known that there is even a website called &lt;a href=&quot;http://0.30000000000000004.com/&quot;&gt;0.30000000000000004.com&lt;/a&gt;. It occurs in every language that uses floating-point math, not just JavaScript.&lt;/p&gt; 
&lt;h2&gt;Patching numbers&lt;/h2&gt; 
&lt;p&gt;You can add your own methods to wrapper objects like &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Number.prototype.isOne = function() {
  return Number(this) === 1;
};

(1.0).isOne(); // -&amp;gt; true
(1).isOne(); // -&amp;gt; true
(2.0)
  .isOne()(
    // -&amp;gt; false
    7
  )
  .isOne(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Obviously, you can extend the &lt;code&gt;Number&lt;/code&gt; object like any other object in JavaScript. However, it&#39;s not recommended if the behavior of the defined method is not a part of the specification. Here is the list of &lt;code&gt;Number&lt;/code&gt;&#39;s properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-number-objects&quot;&gt;&lt;strong&gt;20.1&lt;/strong&gt; Number Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparison of three numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;1 &amp;lt; 2 &amp;lt; 3; // -&amp;gt; true
3 &amp;gt; 2 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work that way? Well, the problem is in the first part of an expression. Here&#39;s how it works:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;1 &amp;lt; 2 &amp;lt; 3; // 1 &amp;lt; 2 -&amp;gt; true
true &amp;lt; 3; // true -&amp;gt; 1
1 &amp;lt; 3; // -&amp;gt; true

3 &amp;gt; 2 &amp;gt; 1; // 3 &amp;gt; 2 -&amp;gt; true
true &amp;gt; 1; // true -&amp;gt; 1
1 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can fix this with &lt;em&gt;Greater than or equal operator (&lt;code&gt;&amp;gt;=&lt;/code&gt;)&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;3 &amp;gt; 2 &amp;gt;= 1; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about Relational operators in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-relational-operators&quot;&gt;&lt;strong&gt;12.10&lt;/strong&gt; Relational Operators&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Funny math&lt;/h2&gt; 
&lt;p&gt;Often the results of arithmetic operations in JavaScript might be quite unexpected. Consider these examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; 3  - 1  // -&amp;gt; 2
 3  + 1  // -&amp;gt; 4
&#39;3&#39; - 1  // -&amp;gt; 2
&#39;3&#39; + 1  // -&amp;gt; &#39;31&#39;

&#39;&#39; + &#39;&#39; // -&amp;gt; &#39;&#39;
[] + [] // -&amp;gt; &#39;&#39;
{} + [] // -&amp;gt; 0
[] + {} // -&amp;gt; &#39;[object Object]&#39;
{} + {} // -&amp;gt; &#39;[object Object][object Object]&#39;

&#39;222&#39; - -&#39;111&#39; // -&amp;gt; 333

[4] * [4]       // -&amp;gt; 16
[] * []         // -&amp;gt; 0
[4, 4] * [4, 4] // NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;What&#39;s happening in the first four examples? Here&#39;s a small table to understand addition in JavaScript:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Number  + Number  -&amp;gt; addition
Boolean + Number  -&amp;gt; addition
Boolean + Boolean -&amp;gt; addition
Number  + String  -&amp;gt; concatenation
String  + Boolean -&amp;gt; concatenation
String  + String  -&amp;gt; concatenation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about other examples? A &lt;code&gt;ToPrimitive&lt;/code&gt; and &lt;code&gt;ToString&lt;/code&gt; methods are being implicitly called for &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; before addition. Read more about evaluation process in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus&quot;&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-toprimitive&quot;&gt;&lt;strong&gt;7.1.1&lt;/strong&gt; ToPrimitive(&lt;code&gt;input&lt;/code&gt; [,&lt;code&gt;PreferredType&lt;/code&gt;])&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-tostring&quot;&gt;&lt;strong&gt;7.1.12&lt;/strong&gt; ToString(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Notably, &lt;code&gt;{} + []&lt;/code&gt; here is the exception. The reason why it differs from &lt;code&gt;[] + {}&lt;/code&gt; is that, without parenthesis, it is interpreted as a code block and then a unary +, converting &lt;code&gt;[]&lt;/code&gt; into a number. It sees the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  // a code block here
}
+[]; // -&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get the same output as &lt;code&gt;[] + {}&lt;/code&gt; we can wrap it in parenthesis.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;({} + []); // -&amp;gt; [object Object]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Addition of RegExps&lt;/h2&gt; 
&lt;p&gt;Did you know you can add numbers like this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Patch a toString method
RegExp.prototype.toString =
  function() {
    return this.source;
  } /
  7 /
  -/5/; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-get-regexp.prototype.source&quot;&gt;&lt;strong&gt;21.2.5.10&lt;/strong&gt; get RegExp.prototype.source&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Strings aren&#39;t instances of &lt;code&gt;String&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&quot;str&quot;; // -&amp;gt; &#39;str&#39;
typeof &quot;str&quot;; // -&amp;gt; &#39;string&#39;
&quot;str&quot; instanceof String; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; constructor returns a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof String(&quot;str&quot;); // -&amp;gt; &#39;string&#39;
String(&quot;str&quot;); // -&amp;gt; &#39;str&#39;
String(&quot;str&quot;) == &quot;str&quot;; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let&#39;s try with a &lt;code&gt;new&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new String(&quot;str&quot;) == &quot;str&quot;; // -&amp;gt; true
typeof new String(&quot;str&quot;); // -&amp;gt; &#39;object&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Object? What&#39;s that?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new String(&quot;str&quot;); // -&amp;gt; [String: &#39;str&#39;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More information about the String constructor in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-string-constructor&quot;&gt;&lt;strong&gt;21.1.1&lt;/strong&gt; The String Constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Calling functions with backticks&lt;/h2&gt; 
&lt;p&gt;Let&#39;s declare a function which logs all params into the console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function f(...args) {
  return args;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No doubt, you know you can call this function like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;f(1, 2, 3); // -&amp;gt; [ 1, 2, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But did you know you can call any function with backticks?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;f`true is ${true}, false is ${false}, array is ${[1, 2, 3]}`;
// -&amp;gt; [ [ &#39;true is &#39;, &#39;, false is &#39;, &#39;, array is &#39;, &#39;&#39; ],
// -&amp;gt;   true,
// -&amp;gt;   false,
// -&amp;gt;   [ 1, 2, 3 ] ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Well, this is not magic at all if you&#39;re familiar with &lt;em&gt;Tagged template literals&lt;/em&gt;. In the example above, &lt;code&gt;f&lt;/code&gt; function is a tag for template literal. Tags before template literal allow you to parse template literals with a function. The first argument of a tag function contains an array of string values. The remaining arguments are related to the expressions. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function template(strings, ...keys) {
  // do something with strings and keys…
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href=&quot;http://mxstbr.blog/2016/11/styled-components-magic-explained/&quot;&gt;magic behind&lt;/a&gt; famous library called &lt;a href=&quot;https://www.styled-components.com/&quot;&gt;💅 styled-components&lt;/a&gt;, which is popular in the React community.&lt;/p&gt; 
&lt;p&gt;Link to the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-tagged-templates&quot;&gt;&lt;strong&gt;12.3.7&lt;/strong&gt; Tagged Templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Call call call&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Found by &lt;a href=&quot;http://twitter.com/cramforce&quot;&gt;@cramforce&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log.call.call.call.call.call.apply(a =&amp;gt; a, [1, 2]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Attention, it could break your mind! Try to reproduce this code in your head: we&#39;re applying the &lt;code&gt;call&lt;/code&gt; method using the &lt;code&gt;apply&lt;/code&gt; method. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-function.prototype.call&quot;&gt;&lt;strong&gt;19.2.3.3&lt;/strong&gt; Function.prototype.call(&lt;code&gt;thisArg&lt;/code&gt;, ...&lt;code&gt;args&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-function.prototype.apply&quot;&gt;**19.2.3.1 ** Function.prototype.apply(&lt;code&gt;thisArg&lt;/code&gt;, &lt;code&gt;argArray&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const c = &quot;constructor&quot;;
c[c][c](&#39;console.log(&quot;WTF?&quot;)&#39;)(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Let&#39;s consider this example step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declare a new constant which is a string &#39;constructor&#39;
const c = &quot;constructor&quot;;

// c is a string
c; // -&amp;gt; &#39;constructor&#39;

// Getting a constructor of string
c[c]; // -&amp;gt; [Function: String]

// Getting a constructor of constructor
c[c][c]; // -&amp;gt; [Function: Function]

// Call the Function constructor and pass
// the body of new function as an argument
c[c][c](&#39;console.log(&quot;WTF?&quot;)&#39;); // -&amp;gt; [Function: anonymous]

// And then call this anonymous function
// The result is console-logging a string &#39;WTF?&#39;
c[c][c](&#39;console.log(&quot;WTF?&quot;)&#39;)(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An &lt;code&gt;Object.prototype.constructor&lt;/code&gt; returns a reference to the &lt;code&gt;Object&lt;/code&gt; constructor function that created the instance object. In case with strings it is &lt;code&gt;String&lt;/code&gt;, in case with numbers it is &lt;code&gt;Number&lt;/code&gt; and so on.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor&quot;&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-object.prototype.constructor&quot;&gt;&lt;strong&gt;19.1.3.1&lt;/strong&gt; Object.prototype.constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Object as a key of object&#39;s property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ [{}]: {} } // -&amp;gt; { &#39;[object Object]&#39;: {} }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work so? Here we&#39;re using a &lt;em&gt;Computed property name&lt;/em&gt;. When you pass an object between those brackets, it coerces object to a string, so we get the property key &lt;code&gt;&#39;[object Object]&#39;&lt;/code&gt; and the value &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We can make &quot;brackets hell&quot; like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;({ [{}]: { [{}]: {} } }[{}][{}]); // -&amp;gt; {}

// structure:
// {
//   &#39;[object Object]&#39;: {
//     &#39;[object Object]&#39;: {}
//   }
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about object literals here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer&quot;&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer&quot;&gt;&lt;strong&gt;12.2.6&lt;/strong&gt; Object Initializer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As we know, primitives don&#39;t have prototypes. However, if we try to get a value of &lt;code&gt;__proto__&lt;/code&gt; for primitives, we would get this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This happens because when something doesn&#39;t have a prototype, it will be wrapped into a wrapper object using the &lt;code&gt;ToObject&lt;/code&gt; method. So, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(1)
  .__proto__(
    // -&amp;gt; [Number: 0]
    1
  )
  .__proto__.__proto__(
    // -&amp;gt; {}
    1
  ).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is more information about &lt;code&gt;__proto__&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-object.prototype.__proto__&quot;&gt;&lt;strong&gt;B.2.2.1&lt;/strong&gt; Object.prototype.&lt;strong&gt;proto&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-toobject&quot;&gt;&lt;strong&gt;7.1.13&lt;/strong&gt; ToObject(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What is the result of the expression below?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;`${{ Object }}`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// -&amp;gt; &#39;[object Object]&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;We defined an object with a property &lt;code&gt;Object&lt;/code&gt; using &lt;em&gt;Shorthand property notation&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  Object: Object;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then we&#39;ve passed this object to the template literal, so the &lt;code&gt;toString&lt;/code&gt; method calls for that object. That&#39;s why we get the string &lt;code&gt;&#39;[object Object]&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-template-literals&quot;&gt;&lt;strong&gt;12.2.9&lt;/strong&gt; Template Literals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer&quot;&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Destructuring with default values&lt;/h2&gt; 
&lt;p&gt;Consider this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let x,
  { x: y = 1 } = { x };
y;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The example above is a great task for an interview. What the value of &lt;code&gt;y&lt;/code&gt;? The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let x,
  { x: y = 1 } = { x };
y;
//  ↑       ↑           ↑    ↑
//  1       3           2    4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the example above:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We declare &lt;code&gt;x&lt;/code&gt; with no value, so it&#39;s &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we pack the value of &lt;code&gt;x&lt;/code&gt; into the object property &lt;code&gt;x&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we extract the value of &lt;code&gt;x&lt;/code&gt; using destructuring and want to assign it to &lt;code&gt;y&lt;/code&gt;. If the value is not defined, then we&#39;re going to use &lt;code&gt;1&lt;/code&gt; as the default value.&lt;/li&gt; 
 &lt;li&gt;Return the value of &lt;code&gt;y&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer&quot;&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dots and spreading&lt;/h2&gt; 
&lt;p&gt;Interesting examples could be composed with spreading of arrays. Consider this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[...[...&quot;...&quot;]].length; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why &lt;code&gt;3&lt;/code&gt;? When we use the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-array-initializer&quot;&gt;spread operator&lt;/a&gt;, the &lt;code&gt;@@iterator&lt;/code&gt; method is called, and the returned iterator is used to obtain the values to be iterated. The default iterator for string spreads a string into characters. After spreading, we pack these characters into an array. Then we spread this array again and pack it back to an array.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;&#39;...&#39;&lt;/code&gt; string consists with three &lt;code&gt;.&lt;/code&gt; characters, so the length of resulting array is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Now, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[...&#39;...&#39;]             // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...&#39;...&#39;]]        // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...&#39;...&#39;]].length // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Obviously, we can spread and wrap the elements of an array as many times as we want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[...&#39;...&#39;]                 // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...&#39;...&#39;]]            // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...[...&#39;...&#39;]]]       // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
[...[...[...[...&#39;...&#39;]]]]  // -&amp;gt; [ &#39;.&#39;, &#39;.&#39;, &#39;.&#39; ]
// and so on …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Labels&lt;/h2&gt; 
&lt;p&gt;Not many programmers know about labels in JavaScript. They are kind of interesting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;foo: {
  console.log(&quot;first&quot;);
  break foo;
  console.log(&quot;second&quot;);
}

// &amp;gt; first
// -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The labeled statement is used with &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements. You can use a label to identify a loop, and then use the &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements to indicate whether a program should interrupt the loop or continue its execution.&lt;/p&gt; 
&lt;p&gt;In the example above, we identify a label &lt;code&gt;foo&lt;/code&gt;. After that &lt;code&gt;console.log(&#39;first&#39;);&lt;/code&gt; executes and then we interrupt the execution.&lt;/p&gt; 
&lt;p&gt;Read more about labels in JavaScript:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-labelled-statements&quot;&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label&quot;&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Nested labels&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;a: b: c: d: e: f: g: 1, 2, 3, 4, 5; // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Similar to previous examples, follow these links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-comma-operator&quot;&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-labelled-statements&quot;&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label&quot;&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What will this expression return? &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(() =&amp;gt; {
  try {
    return 2;
  } finally {
    return 3;
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is &lt;code&gt;3&lt;/code&gt;. Surprised?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-try-statement&quot;&gt;&lt;strong&gt;13.15&lt;/strong&gt; The &lt;code&gt;try&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Is this multiple inheritance?&lt;/h2&gt; 
&lt;p&gt;Take a look at the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;new class F extends (String, Array) {}(); // -&amp;gt; F []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Is this a multiple inheritance? Nope.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The interesting part is the value of the &lt;code&gt;extends&lt;/code&gt; clause (&lt;code&gt;(String, Array)&lt;/code&gt;). The grouping operator always returns its last argument, so &lt;code&gt;(String, Array)&lt;/code&gt; is actually just &lt;code&gt;Array&lt;/code&gt;. That means we&#39;ve just created a class which extends &lt;code&gt;Array&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-class-definitions&quot;&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-comma-operator&quot;&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A generator which yields itself&lt;/h2&gt; 
&lt;p&gt;Consider this example of a generator which yields itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function* f() {
  yield f;
})().next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see, the returned value is an object with its &lt;code&gt;value&lt;/code&gt; equal to &lt;code&gt;f&lt;/code&gt;. In that case, we can do something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function* f() {
  yield f;
})()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()
  .value()
  .next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }

// and so on
// …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;To understand why this works that way, read these sections of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-control-abstraction-objects&quot;&gt;&lt;strong&gt;25&lt;/strong&gt; Control Abstraction Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-generator-objects&quot;&gt;&lt;strong&gt;25.3&lt;/strong&gt; Generator Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A class of class&lt;/h2&gt; 
&lt;p&gt;Consider this obfuscated syntax playing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;typeof new class {
  class() {}
}(); // -&amp;gt; &#39;object&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It seems like we&#39;re declaring a class inside of class. Should be an error, however, we get the string &lt;code&gt;&#39;object&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Since ECMAScript 5 era, &lt;em&gt;keywords&lt;/em&gt; are allowed as &lt;em&gt;property names&lt;/em&gt;. So think about it as this simple object example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const foo = {
  class: function() {}
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And ES6 standardized shorthand method definitions. Also, classes can be anonymous. So if we drop &lt;code&gt;: function&lt;/code&gt; part, we&#39;re going to get:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class {
  class() {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of a default class is always a simple object. And its typeof should return &lt;code&gt;&#39;object&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Read more here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-method-definitions&quot;&gt;&lt;strong&gt;14.3&lt;/strong&gt; Method Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-class-definitions&quot;&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-coercible objects&lt;/h2&gt; 
&lt;p&gt;With well-known symbols, there&#39;s a way to get rid of type coercion. Take a look:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function nonCoercible(val) {
  if (val == null) {
    throw TypeError(&quot;nonCoercible should not be called with null or undefined&quot;);
  }

  const res = Object(val);

  res[Symbol.toPrimitive] = () =&amp;gt; {
    throw TypeError(&quot;Trying to coerce non-coercible object&quot;);
  };

  return res;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now we can use this like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// objects
const foo = nonCoercible({ foo: &quot;foo&quot; });

foo * 10; // -&amp;gt; TypeError: Trying to coerce non-coercible object
foo + &quot;evil&quot;; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// strings
const bar = nonCoercible(&quot;bar&quot;);

bar + &quot;1&quot;; // -&amp;gt; TypeError: Trying to coerce non-coercible object
bar.toString() + 1; // -&amp;gt; bar1
bar === &quot;bar&quot;; // -&amp;gt; false
bar.toString() === &quot;bar&quot;; // -&amp;gt; true
bar == &quot;bar&quot;; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// numbers
const baz = nonCoercible(1);

baz == 1; // -&amp;gt; TypeError: Trying to coerce non-coercible object
baz === 1; // -&amp;gt; false
baz.valueOf() === 1; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/chicoxyzzy/5dd24608e886adf5444499896dff1197&quot;&gt;A gist by Sergey Rubanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-well-known-symbols&quot;&gt;&lt;strong&gt;6.1.5.1&lt;/strong&gt; Well-Known Symbols&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; 10;
f(); // -&amp;gt; 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Okay, fine, but what about this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; {};
f(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;You might expect &lt;code&gt;{}&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt;. This is because the curly braces are part of the syntax of the arrow functions, so &lt;code&gt;f&lt;/code&gt; will return undefined. It is however possible to return the &lt;code&gt;{}&lt;/code&gt; object directly from an arrow function, by enclosing the return value with brackets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; ({});
f(); // -&amp;gt; {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Arrow functions can not be a constructor&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = function() {
  this.a = 1;
};
new f(); // -&amp;gt; f { &#39;a&#39;: 1 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; {
  this.a = 1;
};
new f(); // -&amp;gt; TypeError: f is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions cannot be used as constructors and will throw an error when used with new. Because has a lexical &lt;code&gt;this&lt;/code&gt;, and do not have a &lt;code&gt;prototype&lt;/code&gt; property, so it would not make much sense.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = function() {
  return arguments;
};
f(&quot;a&quot;); // -&amp;gt; { &#39;0&#39;: &#39;a&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = () =&amp;gt; arguments;
f(&quot;a&quot;); // -&amp;gt; Uncaught ReferenceError: arguments is not defined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions are a lightweight version of regular functions with a focus on being short and lexical &lt;code&gt;this&lt;/code&gt;. At the same time arrow functions do not provide a binding for the &lt;code&gt;arguments&lt;/code&gt; object. As a valid alternative use the &lt;code&gt;rest parameters&lt;/code&gt; to achieve the same result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let f = (...args) =&amp;gt; args;
f(&quot;a&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;Arrow functions&lt;/a&gt; at MDN.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky return&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; statement is also tricky. Consider this:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function() {
  return
  {
    b: 10;
  }
})(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; and the returned expression must be in the same line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function() {
  return {
    b: 10
  };
})(); // -&amp;gt; { b: 10 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because of a concept called Automatic Semicolon Insertion, which automagically inserts semicolons after most newlines. In the first example, there is a semicolon inserted between the &lt;code&gt;return&lt;/code&gt; statement and the object literal, so the function returns &lt;code&gt;undefined&lt;/code&gt; and the object literal is never evaluated.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-rules-of-automatic-semicolon-insertion&quot;&gt;&lt;strong&gt;11.9.1&lt;/strong&gt; Rules of Automatic Semicolon Insertion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-return-statement&quot;&gt;&lt;strong&gt;13.10&lt;/strong&gt; The &lt;code&gt;return&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chaining assignments on object&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var foo = { n: 1 };
var bar = foo;

foo.x = foo = { n: 2 };

foo.x; // -&amp;gt; undefined
foo; // -&amp;gt; {n: 2}
bar; // -&amp;gt; {n: 1, x: {n: 2}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From right to left, &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo, and the result of this assignment &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo.x, that&#39;s why bar is &lt;code&gt;{n: 1, x: {n: 2}}&lt;/code&gt; as bar is a reference to foo. But why foo.x is undefined while bar.x is not ?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Foo and bar references the same object &lt;code&gt;{n: 1}&lt;/code&gt;, and lvalues are resolved before assignations. &lt;code&gt;foo = {n: 2}&lt;/code&gt; is creating a new object, and so foo is updated to reference that new object. The trick here is foo in &lt;code&gt;foo.x = ...&lt;/code&gt; as a lvalue was resolved beforehand and still reference the old &lt;code&gt;foo = {n: 1}&lt;/code&gt; object and update it by adding the x value. After that chain assignments, bar still reference the old foo object, but foo reference the new &lt;code&gt;{n: 2}&lt;/code&gt; object, where x is not existing.&lt;/p&gt; 
&lt;p&gt;It&#39;s equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var foo = { n: 1 };
var bar = foo;

foo = { n: 2 }; // -&amp;gt; {n: 2}
bar.x = foo; // -&amp;gt; {n: 1, x: {n: 2}}
// bar.x point to the address of the new foo object
// it&#39;s not equivalent to: bar.x = {n: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Accessing object properties with arrays&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var obj = { property: 1 };
var array = [&quot;property&quot;];

obj[array]; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about pseudo-multidimensional arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var map = {};
var x = 1;
var y = 2;
var z = 3;

map[[x, y, z]] = true;
map[[x + 10, y, z]] = true;

map[&quot;1,2,3&quot;]; // -&amp;gt; true
map[&quot;11,2,3&quot;]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The brackets &lt;code&gt;[]&lt;/code&gt; operator converts the passed expression using &lt;code&gt;toString&lt;/code&gt;. Converting a one-element array to a string is akin to converting the contained element to the string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[&quot;property&quot;].toString(); // -&amp;gt; &#39;property&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Null and Relational Operators&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;null &amp;gt; 0; // false
null == 0; // false

null &amp;gt;= 0; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Long story short, if &lt;code&gt;null&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then &lt;code&gt;null &amp;gt;= 0&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Read in-depth explanation for this &lt;a href=&quot;https://blog.campvanilla.com/javascript-the-curious-case-of-null-0-7b131644e274&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; can behave a bit strange in different browsers. Check out this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(0.7875).toFixed(3);
// Firefox: -&amp;gt; 0.787
// Chrome: -&amp;gt; 0.787
// IE11: -&amp;gt; 0.788
(0.7876).toFixed(3);
// Firefox: -&amp;gt; 0.788
// Chrome: -&amp;gt; 0.788
// IE11: -&amp;gt; 0.788
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;While your first instinct may be that IE11 is correct and Firefox/Chrome are wrong, the reality is that Firefox/Chrome are more directly obeying standards for numbers (IEEE-754 Floating Point), while IE11 is minutely disobeying them in (what is probably) an effort to give clearer results.&lt;/p&gt; 
&lt;p&gt;You can see why this occurs with a few quick tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Confirm the odd result of rounding a 5 down
(0.7875).toFixed(3); // -&amp;gt; 0.787
// It looks like it&#39;s just a 5 when you expand to the
// limits of 64-bit (double-precision) float accuracy
(0.7875).toFixed(14); // -&amp;gt; 0.78750000000000
// But what if you go beyond the limit?
(0.7875).toFixed(20); // -&amp;gt; 0.78749999999999997780
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Floating point numbers are not stored as a list of decimal digits internally, but through a more complicated methodology that produces tiny inaccuracies that are usually rounded away by toString and similar calls, but are actually present internally.&lt;/p&gt; 
&lt;p&gt;In this case, that &quot;5&quot; on the end was actually an extremely tiny fraction below a true 5. Rounding it at any reasonable length will render it as a 5... but it is actually not a 5 internally.&lt;/p&gt; 
&lt;p&gt;IE11, however, will report the value input with only zeros appended to the end even in the toFixed(20) case, as it seems to be forcibly rounding the value to reduce the troubles from hardware limits.&lt;/p&gt; 
&lt;p&gt;See for reference &lt;code&gt;NOTE 2&lt;/code&gt; on the ECMA-262 definition for &lt;code&gt;toFixed&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262//#sec-number.prototype.tofixed&quot;&gt;&lt;strong&gt;20.1.3.3&lt;/strong&gt; Number.prototype.toFixed (&lt;code&gt;fractionDigits&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Math.min(1, 4, 7, 2); // -&amp;gt; 1
Math.max(1, 4, 7, 2); // -&amp;gt; 7
Math.min(); // -&amp;gt; Infinity
Math.max(); // -&amp;gt; -Infinity
Math.min() &amp;gt; Math.max(); // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://charlieharvey.org.uk/page/why_math_max_is_less_than_math_min&quot;&gt;Why is Math.max() less than Math.min()?&lt;/a&gt; by Charlie Harvey&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;The following expressions seem to introduce a contradiction:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;null == 0; // -&amp;gt; false
null &amp;gt; 0; // -&amp;gt; false
null &amp;gt;= 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;How can &lt;code&gt;null&lt;/code&gt; be neither equal to nor greater than &lt;code&gt;0&lt;/code&gt;, if &lt;code&gt;null &amp;gt;= 0&lt;/code&gt; is actually &lt;code&gt;true&lt;/code&gt;? (This also works with less than in the same way.)&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The way these three expressions are evaluated are all different and are responsible for producing this unexpected behavior.&lt;/p&gt; 
&lt;p&gt;First, the abstract equality comparison &lt;code&gt;null == 0&lt;/code&gt;. Normally, if this operator can&#39;t compare the values on either side properly, it converts both to numbers and compares the numbers. Then, you might expect the following behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// This is not what happens
(null == 0 + null) == +0;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, according to a close reading of the spec, the number conversion doesn&#39;t actually happen on a side that is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Therefore, if you have &lt;code&gt;null&lt;/code&gt; on one side of the equal sign, the other side must be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; for the expression to return &lt;code&gt;true&lt;/code&gt;. Since this is not the case, &lt;code&gt;false&lt;/code&gt; is returned.&lt;/p&gt; 
&lt;p&gt;Next, the relational comparison &lt;code&gt;null &amp;gt; 0&lt;/code&gt;. The algorithm here, unlike that of the abstract equality operator, &lt;em&gt;will&lt;/em&gt; convert &lt;code&gt;null&lt;/code&gt; to a number. Therefore, we get this behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;null &amp;gt; 0
+null = +0
0 &amp;gt; 0
false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, the relational comparison &lt;code&gt;null &amp;gt;= 0&lt;/code&gt;. You could argue that this expression should be the result of &lt;code&gt;null &amp;gt; 0 || null == 0&lt;/code&gt;; if this were the case, then the above results would mean that this would also be &lt;code&gt;false&lt;/code&gt;. However, the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator in fact works in a very different way, which is basically to take the opposite of the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. Because our example with the greater than operator above also holds for the less than operator, that means this expression is actually evaluated like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;null &amp;gt;= 0;
!(null &amp;lt; 0);
!(+null &amp;lt; +0);
!(0 &amp;lt; 0);
!false;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison&quot;&gt;&lt;strong&gt;7.2.12&lt;/strong&gt; Abstract Relational Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-abstract-equality-comparison&quot;&gt;&lt;strong&gt;7.2.13&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Same variable redeclaration&lt;/h2&gt; 
&lt;p&gt;JS allows to redeclare variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;a;
a;
// This is also valid
a, a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Works also in strict mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var a, a, a;
var a;
var a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;All definitions are merged into one definition.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-variable-statement&quot;&gt;&lt;strong&gt;13.3.2&lt;/strong&gt; Variable Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Default behavior Array.prototype.sort()&lt;/h2&gt; 
&lt;p&gt;Imagine that you need to sort an array of numbers.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[ 10, 1, 3 ].sort() // -&amp;gt; [ 1, 10, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The default sort order is built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/#sec-array.prototype.sort&quot;&gt;&lt;strong&gt;22.1.3.25&lt;/strong&gt; Array.prototype.sort ( comparefn )&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hint&lt;/h3&gt; 
&lt;p&gt;Pass &lt;code&gt;comparefn&lt;/code&gt; if you try to sort anything but string.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[ 10, 1, 3 ].sort((a, b) =&amp;gt; a - b) // -&amp;gt; [ 1, 3, 10 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;resolve() won&#39;t return Promise instance&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const theObject = {
  &quot;a&quot;: 7,
};
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // -&amp;gt; Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // -&amp;gt; true
  console.log(value); // -&amp;gt; { a: 7 }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; which is resolved from &lt;code&gt;thePromise&lt;/code&gt; is exactly &lt;code&gt;theObject&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How about input another &lt;code&gt;Promise&lt;/code&gt; into the &lt;code&gt;resolve&lt;/code&gt; function?&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const theObject = new Promise((resolve, reject) =&amp;gt; {
  resolve(7);
}); // -&amp;gt; Promise instance object
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // -&amp;gt; Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // -&amp;gt; false
  console.log(value); // -&amp;gt; 7
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;– &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve&quot;&gt;Promise.resolve() on MDN&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The specification is &lt;a href=&quot;https://tc39.es/ecma262/#sec-promise-resolve-functions&quot;&gt;ECMAScript 25.6.1.3.2 Promise Resolve Functions&lt;/a&gt;. But it is not quite human-friendly.&lt;/p&gt; 
&lt;h1&gt;📚 Other resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wtfjs.com/&quot;&gt;wtfjs.com&lt;/a&gt; — a collection of those very special irregularities, inconsistencies and just plain painfully unintuitive moments for the language of the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.destroyallsoftware.com/talks/wat&quot;&gt;Wat&lt;/a&gt; — A lightning talk by Gary Bernhardt from CodeMash 2012&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2pL28CcEijU&quot;&gt;What the... JavaScript?&lt;/a&gt; — Kyle Simpsons talk for Forward 2 attempts to “pull out the crazy” from JavaScript. He wants to help you produce cleaner, more elegant, more readable code, then inspire people to contribute to the open source community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;🎓 License&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.wtfpl.net&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square&quot; alt=&quot;CC 4.0&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;© &lt;a href=&quot;http://denysdovhan.com&quot;&gt;Denys Dovhan&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lunnlew/AutoSignMachine</title>
      <link>https://github.com/lunnlew/AutoSignMachine</link>
      <description>&lt;p&gt;一个自动执行任务的工具，通过它可以实现账号自动签到，自动领取权益等功能，帮助我们轻松升级&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AutoSignMachine&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;一个自动执行任务的工具，通过它可以实现账号自动签到，自动领取权益等功能，帮助我们轻松升级。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;bilibili签到任务&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;实现现B站帐号的每日自动观看、分享、投币视频，获取经验，每月自动领取会员权益等功能，帮助我们轻松升级会员到Lv6并赚取电池。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;详细功能目录如下:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;每天自动登录，获取经验&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每天自动观看、分享、投币视频&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每天漫画自动签到&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每天自动直播签到，领取奖励&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每天自动使用直播中心银瓜子兑换B币&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每个月自动领取5张B币券和大会员权益&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node index.js bilibili --cookies &quot;b6*********4a581;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;docker部署&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# 构建
docker build -t auto-sign-machine:latest  -f docker/Dockerfile .
# 运行
docker run \
  --name auto-sign-machine \
  -d \
  -e enable_bilibili=true \
  -e DedeUserID=41*****1073  \
  -e SESSDATA=05*********333*b1 \
  -e bili_jct=b6*********4a581 \
  auto-sign-machine:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;52pojie签到任务&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;实现现52pojie帐号的每日签到任务。&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node index.js 52pojie --htVD_2132_auth b22d**********************aNjr --htVD_2132_saltkey Jc***********I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;docker部署&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# 构建
docker build -t auto-sign-machine:latest  -f docker/Dockerfile .
# 运行
docker run \
  --name auto-sign-machine \
  -d \
  --label traefik.enable=false \
  -e enable_52pojie=true \
  -e htVD_2132_auth=b******************jr \
  -e htVD_2132_saltkey=Jc************I \
  auto-sign-machine:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;、&lt;/p&gt; 
&lt;h2&gt;iqiyi签到任务&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;实现现iqiyi帐号的每日签到任务。&lt;/strong&gt; 详细功能目录如下:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;普通用户每天自动获取积分&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;vip用户每日签到随机成长值及积分&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;vip用户每日浏览会员俱乐部+1成长值&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node index.js iqiyi --P00001 b********jr --P00PRU 12***24 --QC005 5f******6fe --dfp Jc************I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;docker部署&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# 构建
docker build -t auto-sign-machine:latest  -f docker/Dockerfile .
# 运行
docker run \
  --name auto-sign-machine \
  -d \
  --label traefik.enable=false \
  -e enable_iqiyi=true \
  -e P00001=b********jr \
  -e P00PRU=12***24 \
  -e QC005=5f******6fe \
  -e dfp=Jc************I \
  auto-sign-machine:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;、&lt;/p&gt; 
&lt;h2&gt;联通APP签到任务&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;实现现联通帐号的每日签到任务。&lt;/strong&gt; 详细功能目录如下:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;每日签到积分&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;冬奥积分活动&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每日定向积分&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每日游戏楼层宝箱&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每日抽奖&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-游戏-娱乐中心-沃之树&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-小说-阅读越有礼打卡赢话费&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-小说-读满10章赢好礼&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-小说-读满10章赢好礼-看视频领2积分&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-签到有礼-免流量得福利-3积分天天拿(阅读打卡)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-小说-阅读福利抽大奖&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-签到有礼-免费领-浏览领积分&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-签到有礼-免费拿-看视频夺宝&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-签到有礼-免费抽&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-签到有礼-赚更多福利&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-游戏-娱乐中心-每日打卡&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;每日游戏时长-天天领取3G流量包&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;首页-积分查询-游戏任务&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node index.js unicom --user 131*******12 --password 11****11 --appid f7af****ebb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;docker部署&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# 构建
docker build -t auto-sign-machine:latest  -f docker/Dockerfile .
# 运行(cookies和账号密码两种方式二选一)
docker run \
  --name auto-sign-machine \
  -d \
  --label traefik.enable=false \
  -e enable_unicom=true \
  -e user=131*******12 \
  -e password=11****11 \
  -e appid=f7af****ebb \
  auto-sign-machine:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;注意&lt;/h3&gt; 
&lt;h4&gt;cron中&lt;code&gt;%&lt;/code&gt;号需要转义&lt;code&gt;\%&lt;/code&gt;&lt;/h4&gt; 
&lt;h3&gt;脚本运行机制&lt;/h3&gt; 
&lt;p&gt;任务并非在一次命令执行时全部执行完毕，任务创建时会根据某个时间段，将所有任务分配到该时间段内的随机的某个时间点，然后使用定时任务定时运行脚本入口，内部子任务的运行时机依赖于任务配置项的运行时间及延迟时间，这种机制意味着，只有当脚本的运行时间在当前定时任务运行时间之前，脚本子任务才有可能有选择的被调度出来运行&lt;/p&gt; 
&lt;h3&gt;crontab 任务示例&lt;/h3&gt; 
&lt;p&gt;在4-23小时之间每隔三十分钟尝试运行可运行的脚本子任务&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;*/30 4-23 * * * /bin/node /workspace/AutoSignMachine/index.js unicom --user 1******5 --password 7****** --appid 1************9
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;多用户配置&lt;/h3&gt; 
&lt;p&gt;启用&lt;code&gt;--accountSn&lt;/code&gt;表示账户序号，例如&lt;code&gt;1,2&lt;/code&gt;, 则将提取&lt;code&gt;option-sn&lt;/code&gt;选项的值，例如&lt;code&gt;user-1&lt;/code&gt;,&lt;code&gt;user-2&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;配置文件示例&lt;/h3&gt; 
&lt;p&gt;启用&lt;code&gt;--config /path/to/mycfg.json&lt;/code&gt;表示配置文件&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;accountSn&quot;: &quot;1,2&quot;,
    &quot;user-1&quot;: &quot;22******1&quot;,
    &quot;password-1&quot;: &quot;31******1&quot;,
    &quot;appid-1&quot;: &quot;41******1&quot;,
    &quot;user-2&quot;: &quot;25******1&quot;,
    &quot;password-3&quot;: &quot;72******1&quot;,
    &quot;appid-2&quot;: &quot;92******1&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;运行测试&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;## 立即模式, 一次性执行所有任务，仅建议测试任务是否正常时运行，该方式无法重试周期任务
## 该模式不缓存cookie信息，频繁使用将可能导致账号安全警告
#增加 --tryrun

## 指定任务模式，可以指定仅需要运行的子任务，多用户使用规则参看`多用户配置`
#增加 --tasks taskName1,taskName2,taskName3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GitHub Actions 运行问题&lt;/h3&gt; 
&lt;p&gt;暂未处理GitHub Actions支持&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>liyupi/daxigua</title>
      <link>https://github.com/liyupi/daxigua</link>
      <description>&lt;p&gt;最简单的魔改发布『 合成大西瓜 』，不用改代码，修改配置即可！&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;合成大西瓜&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;声明，本项目仅帮助大家学习技术及娱乐，切勿将修改后的网站大规模传播及商用，以避免侵权！&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;最简单的魔改发布『 合成大西瓜 』，不用改代码，修改配置即可！&lt;/p&gt; 
 &lt;p&gt;有帮助的话，求个大大的 star，有疑问请联系 wx：liyupi66&lt;/p&gt; 
 &lt;p&gt;遇到问题可以先阅读本文档最后&lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3&quot;&gt;『 问题及解决 』&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;2 月 1 日晚 22 点，bilibili 直播交流，&lt;a href=&quot;https://space.bilibili.com/12890453&quot;&gt;程序员鱼皮&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详细教程：&lt;a href=&quot;https://mp.weixin.qq.com/s/H9VR1MWn-9bKSC_1l_MkJw&quot;&gt;魔改和上线你的合成大西瓜，最全教程！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;视频教程：&lt;a href=&quot;https://www.bilibili.com/video/BV1Vy4y1n7KW/&quot;&gt;全网最贴心的魔改合成大西瓜教程，从修改到发布！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未修改版在线玩：&lt;a href=&quot;https://daxigua.liyupi.com&quot;&gt;https://daxigua.liyupi.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;魔改版在线玩：&lt;a href=&quot;https://dadaxigua.liyupi.com&quot;&gt;https://dadaxigua.liyupi.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未修改版源码：&lt;a href=&quot;https://github.com/liyupi/daxigua/releases/tag/1.0.0&quot;&gt;https://github.com/liyupi/daxigua/releases/tag/1.0.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🔥 &lt;a href=&quot;https://daxigua-tools.liyupi.com&quot;&gt;新上线大西瓜改图工具，改图效率翻倍！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/assets/dadaxigua.png&quot; alt=&quot;秀爆朋友圈&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;目录&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2&quot;&gt;一键部署&lt;/a&gt;：适用于会 fork 仓库、提交代码的同学 &lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E6%9C%AC%E5%9C%B0%E5%90%AF%E5%8A%A8&quot;&gt;本地启动&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E5%BF%AB%E9%80%9F%E9%AD%94%E6%94%B9&quot;&gt;快速魔改&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E9%AD%94%E6%94%B9%E5%8E%9F%E7%90%86&quot;&gt;魔改原理&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/liyupi/daxigua/master/#%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3&quot;&gt;问题及解决&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;一键部署&lt;/h3&gt; 
&lt;p&gt;点击下方按钮，无需任何操作，即可部署我的仓库到腾讯云 ⬇️&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果要替换为一键部署自己的仓库，要先 fork 我的仓库，本地修改后再提交到自己 fork 的仓库，最后把一键部署按钮仓库地址改为自己的仓库即可！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://console.cloud.tencent.com/tcb/env/index?action=CreateAndDeployCloudBaseProject&amp;amp;appUrl=https://github.com/liyupi/daxigua&amp;amp;branch=master&quot;&gt;&lt;img src=&quot;https://main.qcloudimg.com/raw/67f5a389f1ac6f3b4d04c7256438e44f.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;本地启动&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;安装 serve 工具：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进入 daxigua 目录，运行 serve：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;打开浏览器访问 localhost:5000 即可！&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;快速魔改&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;按照下列说明修改即可，持续补充&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;改分数：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改图片：替换 res/raw-assets 目录下指定目录的图片，必须同文件名、后缀、尺寸，成功覆盖可生效，&lt;a href=&quot;https://docs.qq.com/sheet/DS0d2VVVJYmpvZ0pZ&quot;&gt;可替换素材文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;无敌模式：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;指定第一个水果：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;指定下次出现的水果：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;大水果合成小水果：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;让水果更 Q 弹：改 extraSettings.js 文件，&lt;a href=&quot;https://docs.cocos.com/creator/api/zh/classes/PhysicsCircleCollider.html?h=circlecollider&quot;&gt;原理参考&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;水果下落速度减缓：改 extraSettings.js 文件，&lt;a href=&quot;https://docs.cocos.com/creator/manual/zh/physics/physics/rigid-body.html?h=%E5%88%9A%E4%BD%93&quot;&gt;原理参考&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;替换音乐：，覆盖 res/raw-assets 目录下相同的音乐，&lt;a href=&quot;https://docs.qq.com/sheet/DS0d2VVVJYmpvZ0pZ&quot;&gt;可替换素材文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;替换背景：和改图片原理相同，&lt;a href=&quot;https://docs.qq.com/sheet/DS0d2VVVJYmpvZ0pZ&quot;&gt;可替换素材文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;去广告：将广告图片替换为&lt;a href=&quot;https://636f-codenav-8grj8px727565176-1256524210.tcb.qcloud.la/0.png&quot;&gt;同背景色底图&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;替换广告链接：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改网站标题：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;开启选分弹窗：改 extraSettings.js 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击右上方图标更换水果: 改 extraSettings.js 文件（暂未支持）&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;魔改原理&lt;/h3&gt; 
&lt;p&gt;请先阅读：&lt;a href=&quot;https://mp.weixin.qq.com/s/H9VR1MWn-9bKSC_1l_MkJw&quot;&gt;魔改和上线你的合成大西瓜，最全教程！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;我给 &lt;code&gt;project.js&lt;/code&gt; 文件补充了注释，大家可以搜索关键字，如 &quot;改分&quot; 来快速定位，学习修改原理。&lt;/p&gt; 
&lt;h3&gt;问题及解决&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;无法安装 serve 或者 Vercel？&lt;/p&gt; &lt;p&gt;答：如果报找不到 npm，请先安装 npm。&lt;/p&gt; &lt;p&gt;如果安装中卡住，试着按下键盘（可能假死），还不行的话先用 npm 安装 cnpm（国内镜像，比较快）：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cnpm -g --registry=https://registry.npm.taobao.org 
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;再用 cnpm 安装： &lt;code&gt;cnpm i -g serve&lt;/code&gt; 或 &lt;code&gt;cnpm i -g vercel&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Vercel 网址被微信拦截怎么办？&lt;/p&gt; &lt;p&gt;答：可以把网址复制到浏览器打开，也可以申请一个域名，在 Vercel 和服务提供商配置域名解析。 Vercel 基本是海外的服务器，无需备案。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;怎么在电脑上浏览网页游戏？&lt;/p&gt; &lt;p&gt;答：在浏览器中，按 F12 打开开发者工具，点击像手机一样的图标即可。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为什么 serve 后，打开网页一片空白？&lt;/p&gt; &lt;p&gt;答：大概率是你在错误的目录下执行了 serve，请务必在 index.html 所在的文件夹下执行 serve。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;执行 vercel 命令显示 signUp？&lt;/p&gt; &lt;p&gt;答：要先去 &lt;a href=&quot;https://vercel.com/&quot;&gt;Vercel 官网&lt;/a&gt; 注册。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;vercel 邮箱验证失败？&lt;/p&gt; &lt;p&gt;答：先确认邮箱是否正确，如果验证失败，大概率是网络原因，请尝试 4G 等网络。或者在其他浏览器中，打开邮箱，点击验证按钮。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;怎么使用 vercel 同时上线多个版本？&lt;/p&gt; &lt;p&gt;答：在输入 vercel 后，选择不和已有项目关联（link），并且使用一个新的项目名（project name）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;想在修改文件后重新搞个新版本，但输入 vercel prod 后，直接覆盖了，而没有让我选择是否和现有项目关联（link），怎么办？&lt;/p&gt; &lt;p&gt;答：执行 vercel 后，会在本地生成 &lt;code&gt;.vercel&lt;/code&gt; 隐藏目录保存之前的发布信息，删掉该目录即可。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;导出网址后，我修改了图片，然后游戏中还是原来的图片？&lt;/p&gt; &lt;p&gt;答：网址读取的是远程的文件，只改了本地当然没用！再次执行 vercel 或腾讯云命令，把最新文件传上去。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Mac 能否使用这个教程呢？&lt;/p&gt; &lt;p&gt;答：当然可以！所有命令和 windows 完全一致！只是 cmd 命令行工具改为用 terminal 终端（按 command + 空格，搜索 terminal）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为什么打开网站白屏了？&lt;/p&gt; &lt;p&gt;答：大概率是你修改错误，导致一些文件缺失。。可以试试重新下载代码，再修改，请先确保本地可以运行，再发布！&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>DIYgod/RSSHub</title>
      <link>https://github.com/DIYgod/RSSHub</link>
      <description>&lt;p&gt;🍰 Everything is RSSible&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;🍰 Everything is RSSible&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/rsshub&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-telegram-brightgreen.svg?style=flat-square&quot; alt=&quot;telegram&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/DIYgod/RSSHub&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/DIYgod/RSSHub/master.svg?style=flat-square&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/github/DIYgod/RSSHub?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/DIYgod/RSSHub.svg?style=flat-square&quot; alt=&quot;Test coverage&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;RSSHub is an open source, easy to use, and extensible RSS feed generator. It&#39;s capable of generating RSS feeds from pretty much everything.&lt;/p&gt; 
&lt;p&gt;RSSHub delivers millions of contents aggregated from all kinds of sources, our vibrant open source community is ensuring the deliver of RSSHub&#39;s new routes, new features and bug fixes.&lt;/p&gt; 
&lt;p&gt;RSSHub can be used with browser extension &lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; and iOS auxiliary app &lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app/en&quot;&gt;English docs&lt;/a&gt; | &lt;a href=&quot;https://t.me/rsshub&quot;&gt;Telegram Group&lt;/a&gt; | &lt;a href=&quot;https://t.me/awesomeRSSHub&quot;&gt;Telegram Channel&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容&lt;/p&gt; 
&lt;p&gt;可以配合浏览器扩展 &lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; 和 iOS 辅助 App &lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt; 食用&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app&quot;&gt;中文文档&lt;/a&gt; | &lt;a href=&quot;https://t.me/rsshub&quot;&gt;Telegram 群&lt;/a&gt; | &lt;a href=&quot;https://t.me/awesomeRSSHub&quot;&gt;Telegram 频道&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;h3&gt;Special Sponsors&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/SayoriStudio&quot;&gt;Sayori Studio&lt;/a&gt; . &lt;a href=&quot;https://blog.sion.moe&quot;&gt;Sion Kazama&lt;/a&gt; . &lt;a href=&quot;https://www.shaoyaoju.org/&quot;&gt;琚致远&lt;/a&gt; . &lt;a href=&quot;https://www.coolapk.com/apk/239500&quot;&gt;Rolly RSS 阅读器&lt;/a&gt; . &lt;a href=&quot;https://www.mokeyjay.com/&quot;&gt;mokeyjay&lt;/a&gt; . &lt;a href=&quot;https://rayray.moe/&quot;&gt;tkaray&lt;/a&gt; . &lt;a href=&quot;https://www.moeunion.com&quot;&gt;萌开源联盟&lt;/a&gt; . &lt;a href=&quot;https://github.com/hooke007/MPV_lazy&quot;&gt;hooke007&lt;/a&gt; . &lt;a href=&quot;https://feeds.pub&quot;&gt;feeds.pub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app/en/support/&quot;&gt;&lt;img src=&quot;https://opencollective.com/static/images/become_sponsor.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/DIYgod/RSSHub/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/RSSHub/contributors.svg?width=890&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Logo designer &lt;a href=&quot;https://dribbble.com/sheldonrrr&quot;&gt;sheldonrrr&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; | 一个可以帮助你快速发现和订阅当前网站 RSS 和 RSSHub 的浏览器扩展&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt; (&lt;a href=&quot;https://testflight.apple.com/join/rjCVzzHP&quot;&gt;TestFlight 公测&lt;/a&gt;) | iOS 平台的 RSSHub Radar，专为移动生态优化&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lt94/RSSAid&quot;&gt;RSSAid&lt;/a&gt; | 基于 Flutter 构建的 Android 平台的 RSSHub Radar&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join Us&lt;/h2&gt; 
&lt;p&gt;We welcome all pull requests. Suggestions and feedback are also welcomed &lt;a href=&quot;https://github.com/DIYgod/RSSHub/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/joinus/&quot;&gt;Join Us&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;见 &lt;a href=&quot;https://docs.rsshub.app/joinus/&quot;&gt;参与我们&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/install/&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;见 &lt;a href=&quot;https://docs.rsshub.app/install/&quot;&gt;部署&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support RSSHub&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/support/&quot;&gt;Support RSSHub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;见 &lt;a href=&quot;https://docs.rsshub.app/support/&quot;&gt;支持 RSSHub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RSSHub is open source and completely free under the MIT license. However, just like any other open source project, as the project grows, the hosting, development and maintenance requires funding support.&lt;/p&gt; 
&lt;p&gt;You can support RSSHub via donations.&lt;/p&gt; 
&lt;h3&gt;Recurring Donation&lt;/h3&gt; 
&lt;p&gt;Recurring donors will be rewarded via express issue response, or even have your name displayed on our GitHub page and website.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Become a Sponser on &lt;a href=&quot;https://www.patreon.com/DIYgod&quot;&gt;Patreon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Become a Sponser on &lt;a href=&quot;https://afdian.net/@diygod&quot;&gt;爱发电&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contact us directly: i@diygod.me&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;One-time Donation&lt;/h3&gt; 
&lt;p&gt;We accept donations via the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://diygod.me/images/wx.jpg&quot;&gt;WeChat Pay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://diygod.me/images/zfb.jpg&quot;&gt;Alipay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.me/DIYgod&quot;&gt;Paypal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;RSSHub&lt;/strong&gt; © &lt;a href=&quot;https://github.com/DIYgod&quot;&gt;DIYgod&lt;/a&gt;, Released under the &lt;a href=&quot;https://raw.githubusercontent.com/DIYgod/RSSHub/master/LICENSE&quot;&gt;MIT&lt;/a&gt; License.
 &lt;!-- raw HTML omitted --&gt; Authored and maintained by DIYgod with help from contributors (&lt;a href=&quot;https://github.com/DIYgod/RSSHub/contributors&quot;&gt;list&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Blog &lt;a href=&quot;https://diygod.me&quot;&gt;@DIYgod&lt;/a&gt; · GitHub &lt;a href=&quot;https://github.com/DIYgod&quot;&gt;@DIYgod&lt;/a&gt; · Twitter &lt;a href=&quot;https://twitter.com/DIYgod&quot;&gt;@DIYgod&lt;/a&gt; · Telegram Channel &lt;a href=&quot;https://t.me/awesomeDIYgod&quot;&gt;@awesomeDIYgod&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/chat_application</title>
      <link>https://github.com/adrianhajdin/chat_application</link>
      <description>&lt;p&gt;This is a code repository for the corresponding YouTube video. In this tutorial, we are going to build and deploy a real-time chat application. Covered topics: React.js, Socket.io.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Realtime Chat Application&lt;/h1&gt; 
&lt;h3&gt;&lt;a href=&quot;https://chat-app-jsmastery.netlify.app&quot;&gt;Live Site&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/vDhx8Md/Whats-App-Image-2021-01-26-at-02-01-43.jpg&quot; alt=&quot;Chat Application&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial. In this video, we will create a full Realtime Chat Application&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jaggedsoft/node-binance-api</title>
      <link>https://github.com/jaggedsoft/node-binance-api</link>
      <description>&lt;p&gt;Node Binance API is an asynchronous node.js library for the Binance API designed to be easy to use.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://dev.binance.vision/&quot;&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/569865969120575519/718166995354255370/binance-api-black.png&quot; alt=&quot;Binance Community API&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npm-stat.com/charts.html?package=node-binance-api&amp;amp;from=2017-07-01&amp;amp;to=2020-07-01&quot;&gt;&lt;img src=&quot;https://badgen.net/npm/dy/node-binance-api?labelColor=29B6F6&amp;amp;color=3D5AFE&amp;amp;scale=2&amp;amp;label=Downloads&amp;amp;icon=bitcoin-lightning&amp;amp;cache=2400&quot; alt=&quot;Yearly Downloads&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://badgen.net/github/last-commit/jaggedsoft/node-binance-api?scale=2&amp;amp;label=%F0%9F%9F%A3%20Updated&amp;amp;labelColor=black&amp;amp;color=448AFF&amp;amp;cache=9999&quot; alt=&quot;Last Commit&quot;&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/jaggedsoft/node-binance-api.svg?style=flat-square&amp;amp;labelColor=blueviolet&amp;amp;label=release&quot; alt=&quot;Latest Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jaggedsoft/node-binance-api/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/jaggedsoft/node-binance-api.svg?maxAge=2400&amp;amp;labelColor=333&amp;amp;label=%F0%9F%9F%A3%20updated&quot; alt=&quot;GitHub last commit&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npm-stat.com/charts.html?package=node-binance-api&amp;amp;from=2017-07-01&amp;amp;to=2020-07-01&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/node-binance-api.svg?labelColor=29B6F6&amp;amp;color=3D5AFE&amp;amp;label=downloads&amp;amp;logo=bitcoin-lightning&quot; alt=&quot;Monthly Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/jaggedsoft&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/jaggedsoft.svg?style=social&quot; alt=&quot;jaggedsoft on Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/node-binance-api&quot;&gt;&lt;img src=&quot;https://nodei.co/npm/node-binance-api.png?compact=true&quot; alt=&quot;NPM&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Node Binance API&lt;/h1&gt; 
&lt;p&gt;This project is designed to help you make your own projects that interact with the &lt;a href=&quot;https://github.com/binance-exchange/binance-official-api-docs&quot;&gt;Binance API&lt;/a&gt;. You can stream candlestick chart data, market depth, or use other advanced features such as setting stop losses and iceberg orders. This project seeks to have complete API coverage including WebSockets.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;Futures API
 &lt;!-- raw HTML omitted --&gt; &amp;amp; 
 &lt;!-- raw HTML omitted --&gt;Streams
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Spot Trading API
 &lt;!-- raw HTML omitted --&gt; &amp;amp; 
 &lt;!-- raw HTML omitted --&gt;Streams
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Margin API
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Lending API
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;Examples
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Troubleshooting
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Changelog
 &lt;!-- raw HTML omitted --&gt; • 
 &lt;!-- raw HTML omitted --&gt;Support
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Installation: &lt;strong&gt;&lt;code&gt;npm install -s node-binance-api&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/node-binance-api&quot;&gt;&lt;img src=&quot;https://nodei.co/npm/node-binance-api.png?mini=true&quot; alt=&quot;npm install node-binance-api&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Getting started&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Binance = require(&#39;node-binance-api&#39;);
const binance = new Binance().options({
  APIKEY: &#39;&amp;lt;key&amp;gt;&#39;,
  APISECRET: &#39;&amp;lt;secret&amp;gt;&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Binance Futures API&lt;/h1&gt; 
&lt;h4&gt;Futures Prices&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresPrices() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Account Balances &amp;amp; Positions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresAccount() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Balances&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresBalance() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Limit Buy&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresBuy( &#39;BTCUSDT&#39;, 0.1, 8222 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Limit Sell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresSell( &#39;BTCUSDT&#39;, 0.5, 11111 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Market Buy&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresMarketBuy( &#39;BNBUSDT&#39;, 5 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Market Sell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresMarketSell( &#39;TRXUSDT&#39;, 1 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Market Orders: Get the fill price using newOrderRespType&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresMarketBuy( &#39;BNBUSDT&#39;, amount, { newOrderRespType: &#39;RESULT&#39; } ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures reduceOnly Order Example&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if ( side == &#39;LONG&#39; ) order = await binance.futuresMarketSell( obj.symbol, amount, {reduceOnly: true} )
else order = await binance.futuresMarketBuy( obj.symbol, amount, {reduceOnly: true} )
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Futures Positions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresPositionRisk() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let position_data = await binance.futuresPositionRisk(), markets = Object.keys( position_data );
for ( let market of markets ) {
  let obj = position_data[market], size = Number( obj.positionAmt );
  if ( size == 0 ) continue;
  console.info( `${leverage}x\t${market}\t${obj.unRealizedProfit}` );
  //console.info( obj ); //positionAmt entryPrice markPrice unRealizedProfit liquidationPrice leverage marginType isolatedMargin isAutoAddMargin maxNotionalValue
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Adjust Leverage (1-125x)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresLeverage( &#39;ETHUSDT&#39;, 50 ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Adjust Margin Type (ISOLATED, CROSSED)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresMarginType( &#39;BTCUSDT&#39;, &#39;ISOLATED&#39; ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Adjust Position Margin&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Type: 1: Add postion margin，2: Reduce postion margin
console.info( await binance.futuresPositionMargin( &quot;TRXUSDT&quot;, amount, type ) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresTime() );
console.info( await binance.futuresExchangeInfo() );
console.info( await binance.futuresCandles( &quot;TRXUSDT&quot;, &quot;1m&quot; ) );
console.info( await binance.futuresDepth( &quot;ADAUSDT&quot; ) );
console.info( await binance.futuresQuote() );
console.info( await binance.futuresQuote( &quot;BCHUSDT&quot; ) );
console.info( await binance.futuresDaily() );
console.info( await binance.futuresOpenInterest( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresMarkPrice() );
console.info( await binance.futuresMarkPrice( &quot;ETHUSDT&quot; ) );
console.info( await binance.futuresTrades( &quot;LTCUSDT&quot; ) );
console.info( await binance.futuresAggTrades( &quot;XTZUSDT&quot; ) );
console.info( await binance.futuresLiquidationOrders() );
console.info( await binance.futuresFundingRate() );
console.info( await binance.futuresHistoricalTrades( &quot;XMRUSDT&quot; ) );
console.info( await binance.futuresLeverageBracket( &quot;LINKUSDT&quot; ) );
console.info( await binance.futuresIncome() );
console.info( await binance.futuresCancelAll( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresCancel( &quot;BTCUSDT&quot;, {orderId: &quot;1025137386&quot;} ) );
console.info( await binance.futuresCountdownCancelAll( &quot;BTCUSDT&quot;, 45000 ) );
console.info( await binance.futuresOrderStatus( &quot;BTCUSDT&quot;, {orderId: &quot;1025137386&quot;} ) );
console.info( await binance.futuresOpenOrders() );
console.info( await binance.futuresOpenOrders( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresAllOrders() );
console.info( await binance.futuresAllOrders( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresUserTrades( &quot;BTCUSDT&quot; ) );
console.info( await binance.futuresGetDataStream() );
console.info( await binance.futuresPositionMarginHistory( &quot;TRXUSDT&quot; ) );
console.info( await binance.promiseRequest( &#39;v1/time&#39; ) );
// Batch orders, remaining WebSocket streams, and better documentation will be come later
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Historical Bulk Data Download API&lt;/h4&gt; 
&lt;h5&gt;Get Download ID&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresHistDataId(
  &quot;BTCUSDT&quot;, {
    startTime: new Date().getTime() - 24 * 60 * 60 * 1000,
    endTime: new Date().getTime(),
    dataType: &#39;T_TRADE&#39;
  } )
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Get Download Link&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.futuresDownloadLink(7343)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Futures WebSocket Streams&lt;/h1&gt; 
&lt;h4&gt;Futures miniTicker stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresMiniTickerStream( miniTicker =&amp;gt; {
    console.info( miniTicker );
} );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures miniTicker stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresMiniTickerStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures bookTicker stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresBookTickerStream( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures bookTicker stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresBookTickerStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures prevDay ticker stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresTickerStream( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures prevDay ticker stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresTickerStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures mark price stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresMarkPriceStream( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures mark price stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresMarkPriceStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures aggregate trade stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresAggTradeStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures complete chart cache&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresChart( &#39;BTCUSDT&#39;, &#39;1m&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Liquidation Stream for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresLiquidationStream( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Futures Liquidation Stream for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresLiquidationStream( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connect to a custom endpoint. Easier shortcut functions will come later&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresSubscribe( &#39;btcusdt@kline_4h&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Terminate an existing socket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.futuresTerminate( &#39;btcusdt@kline_4h&#39; );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Return active sockets and subscriptions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log( binance.futuresSubscriptions() );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Delivery API (Futures w/Expiration Date)&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;deliveryBuy
deliverySell
deliveryMarketBuy
deliveryMarketSell
deliveryPrices
deliveryDaily
deliveryOpenInterest
deliveryExchangeInfo
deliveryOpenOrders
deliveryAllOrders
deliveryCandles
deliveryIndexKlines
deliveryContinuousKlines
deliveryMarkPriceKlines
deliveryMarkPrice
deliveryHistoricalTrades
deliveryTrades
deliveryAggTrades
deliveryUserTrades
deliveryLiquidationOrders
deliveryPositionRisk
deliveryLeverage
deliveryMarginType
deliveryPositionMargin
deliveryPositionMarginHistory
deliveryIncome
deliveryBalance
deliveryAccount
deliveryDepth
deliveryQuote
deliveryLeverageBracket
deliveryOrderStatus
deliveryCancel
deliveryCancelAll
deliveryCountdownCancelAll
deliveryOrder
deliveryGetDataStream
deliveryCloseDataStream
deliveryKeepDataStream
deliveryPing
deliveryTime
deliveryOrder
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Binance API (Spot Trading)&lt;/h1&gt; 
&lt;h4&gt;Getting latest price of all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let ticker = await binance.prices();
console.info(`Price of BNB: ${ticker.BNBUSDT}`);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Getting latest price of a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.prices(&#39;BNBBTC&#39;, (error, ticker) =&amp;gt; {
  console.info(&quot;Price of BNB: &quot;, ticker.BNBBTC);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ ETHBTC: &#39;0.07003500&#39;,
  LTCBTC: &#39;0.01176700&#39;,
  BNBBTC: &#39;0.00035735&#39;,
  NEOBTC: &#39;0.00809500&#39;,
  QTUMETH: &#39;0.03851200&#39;,
  EOSETH: &#39;0.00189600&#39;,
  SNTETH: &#39;0.00008595&#39;,
  BNTETH: &#39;0.00738800&#39;,
  BCCBTC: &#39;0.08104000&#39;,
  GASBTC: &#39;0.00629800&#39;,
  BNBETH: &#39;0.00509495&#39;,
  BTMETH: &#39;0.00018900&#39;,
  HCCBTC: &#39;0.00000180&#39;,
  BTCUSDT: &#39;4464.44000000&#39;,
  ETHUSDT: &#39;312.89000000&#39;,
  HSRBTC: &#39;0.00289000&#39;,
  OAXETH: &#39;0.00180000&#39;,
  DNTETH: &#39;0.00014190&#39;,
  MCOETH: &#39;0.02358300&#39;,
  ICNETH: &#39;0.00557000&#39;,
  ELCBTC: &#39;0.00000053&#39;,
  MCOBTC: &#39;0.00166900&#39;,
  WTCBTC: &#39;0.00184138&#39;,
  WTCETH: &#39;0.02601700&#39;,
  LLTBTC: &#39;0.00001669&#39;,
  LRCBTC: &#39;0.00001100&#39;,
  LRCETH: &#39;0.00016311&#39;,
  QTUMBTC: &#39;0.00271600&#39;,
  YOYOBTC: &#39;0.00000481&#39;,
  OMGBTC: &#39;0.00187800&#39;,
  OMGETH: &#39;0.02677400&#39;,
  ZRXBTC: &#39;0.00004319&#39;,
  ZRXETH: &#39;0.00060800&#39;,
  STRATBTC: &#39;0.00087800&#39;,
  STRATETH: &#39;0.01218800&#39;,
  SNGLSBTC: &#39;0.00003649&#39;,
  SNGLSETH: &#39;0.00051280&#39;,
  BQXBTC: &#39;0.00013150&#39;,
  BQXETH: &#39;0.00184240&#39;,
  KNCBTC: &#39;0.00038969&#39;,
  KNCETH: &#39;0.00550320&#39;,
  FUNBTC: &#39;0.00000573&#39;,
  FUNETH: &#39;0.00008433&#39;,
  SNMBTC: &#39;0.00003176&#39;,
  SNMETH: &#39;0.00047119&#39;,
  NEOETH: &#39;0.11500200&#39;,
  IOTABTC: &#39;0.00012136&#39;,
  IOTAETH: &#39;0.00171001&#39;,
  LINKBTC: &#39;0.00010646&#39;,
  LINKETH: &#39;0.00150999&#39;,
  XVGBTC: &#39;0.00000145&#39;,
  XVGETH: &#39;0.00002059&#39;,
  CTRBTC: &#39;0.00025532&#39;,
  CTRETH: &#39;0.00375180&#39;,
  SALTBTC: &#39;0.00080100&#39;,
  SALTETH: &#39;0.01140000&#39;,
  MDABTC: &#39;0.00057002&#39;,
  MDAETH: &#39;0.00819490&#39; }
//Price of BNB: 0.00035735
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Getting list of current balances&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.balance((error, balances) =&amp;gt; {
  if ( error ) return console.error(error);
  console.info(&quot;balances()&quot;, balances);
  console.info(&quot;ETH balance: &quot;, balances.ETH.available);
});
// If you have problems with this function,
// see Troubleshooting at the bottom of this page.
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ BTC: { available: &#39;0.77206464&#39;, onOrder: &#39;0.00177975&#39; },
  LTC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ETH: { available: &#39;1.14109900&#39;, onOrder: &#39;0.00000000&#39; },
  BNC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ICO: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  NEO: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BNB: { available: &#39;41.33761879&#39;, onOrder: &#39;0.00000000&#39; },
  QTUM: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  EOS: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  SNT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BNT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  GAS: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BCC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BTM: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  USDT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  HCC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  HSR: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  OAX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  DNT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  MCO: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ICN: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ELC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  PAY: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  ZRX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  OMG: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  WTC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  LRX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  YOYO: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  LRC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  LLT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  TRX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  FID: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  SNGLS: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  STRAT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  BQX: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  FUN: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  KNC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  CDT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  XVG: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  IOTA: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  SNM: { available: &#39;0.76352833&#39;, onOrder: &#39;0.00000000&#39; },
  LINK: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  CVC: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  TNT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  REP: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  CTR: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  MDA: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  MTL: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  SALT: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; },
  NULS: { available: &#39;0.00000000&#39;, onOrder: &#39;0.00000000&#39; } }
//ETH balance:  1.14109900
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Getting bid/ask prices for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.bookTickers(&#39;BNBBTC&#39;, (error, ticker) =&amp;gt; {
  console.info(&quot;bookTickers&quot;, ticker);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &quot;symbol&quot;: &quot;BNBBTC&quot;,
  &quot;bidPrice&quot;: &quot;4.00000000&quot;,
  &quot;bidQty&quot;: &quot;431.00000000&quot;,
  &quot;askPrice&quot;: &quot;4.00000200&quot;,
  &quot;askQty&quot;: &quot;9.00000000&quot;
}

// from: https://github.com/binance-exchange/binance-official-api-docs/blob/master/rest-api.md#symbol-order-book-ticker
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Getting bid/ask prices for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.bookTickers((error, ticker) =&amp;gt; {
  console.info(&quot;bookTickers()&quot;, ticker);
  console.info(&quot;Price of BNB: &quot;, ticker.BNBBTC);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; { ETHBTC:
   { bid: &#39;0.06201000&#39;,
     bids: &#39;1.28200000&#39;,
     ask: &#39;0.06201300&#39;,
     asks: &#39;0.34200000&#39; },
  LTCBTC:
   { bid: &#39;0.01042000&#39;,
     bids: &#39;41.45000000&#39;,
     ask: &#39;0.01048700&#39;,
     asks: &#39;16.81000000&#39; },
  BNBBTC:
   { bid: &#39;0.00028754&#39;,
     bids: &#39;727.00000000&#39;,
     ask: &#39;0.00028755&#39;,
     asks: &#39;400.00000000&#39; },
  NEOBTC:
   { bid: &#39;0.00601800&#39;,
     bids: &#39;16.82000000&#39;,
     ask: &#39;0.00603700&#39;,
     asks: &#39;73.43000000&#39; },
  QTUMETH:
   { bid: &#39;0.04062900&#39;,
     bids: &#39;1.30000000&#39;,
     ask: &#39;0.04075300&#39;,
     asks: &#39;0.58000000&#39; },
  EOSETH:
   { bid: &#39;0.00191400&#39;,
     bids: &#39;202.53000000&#39;,
     ask: &#39;0.00192500&#39;,
     asks: &#39;26.08000000&#39; },
  SNTETH:
   { bid: &#39;0.00007610&#39;,
     bids: &#39;403.00000000&#39;,
     ask: &#39;0.00007638&#39;,
     asks: &#39;19850.00000000&#39; },
  BNTETH:
   { bid: &#39;0.00736800&#39;,
     bids: &#39;7.82000000&#39;,
     ask: &#39;0.00745900&#39;,
     asks: &#39;177.32000000&#39; },
  BCCBTC:
   { bid: &#39;0.06862000&#39;,
     bids: &#39;1.56100000&#39;,
     ask: &#39;0.06893600&#39;,
     asks: &#39;0.81100000&#39; },
  GASBTC:
   { bid: &#39;0.00451700&#39;,
     bids: &#39;44.00000000&#39;,
     ask: &#39;0.00489700&#39;,
     asks: &#39;44.95000000&#39; },
  BNBETH:
   { bid: &#39;0.00462592&#39;,
     bids: &#39;32.00000000&#39;,
     ask: &#39;0.00467982&#39;,
     asks: &#39;57.00000000&#39; },
  BTMETH:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  HCCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  BTCUSDT:
   { bid: &#39;4786.01000000&#39;,
     bids: &#39;0.58627700&#39;,
     ask: &#39;4796.10000000&#39;,
     asks: &#39;0.28486400&#39; },
  ETHUSDT:
   { bid: &#39;297.01000000&#39;,
     bids: &#39;7.17846000&#39;,
     ask: &#39;297.90000000&#39;,
     asks: &#39;0.30742000&#39; },
  HSRBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  OAXETH:
   { bid: &#39;0.00156200&#39;,
     bids: &#39;96.00000000&#39;,
     ask: &#39;0.00169900&#39;,
     asks: &#39;552.90000000&#39; },
  DNTETH:
   { bid: &#39;0.00011782&#39;,
     bids: &#39;1273.00000000&#39;,
     ask: &#39;0.00012045&#39;,
     asks: &#39;238.00000000&#39; },
  MCOETH:
   { bid: &#39;0.02651200&#39;,
     bids: &#39;0.94000000&#39;,
     ask: &#39;0.02681200&#39;,
     asks: &#39;8.59000000&#39; },
  ICNETH:
   { bid: &#39;0.00484600&#39;,
     bids: &#39;448.76000000&#39;,
     ask: &#39;0.00490000&#39;,
     asks: &#39;0.01000000&#39; },
  ELCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  MCOBTC:
   { bid: &#39;0.00164600&#39;,
     bids: &#39;1.00000000&#39;,
     ask: &#39;0.00164700&#39;,
     asks: &#39;12.11000000&#39; },
  WTCBTC:
   { bid: &#39;0.00132101&#39;,
     bids: &#39;124.00000000&#39;,
     ask: &#39;0.00133200&#39;,
     asks: &#39;98.00000000&#39; },
  WTCETH:
   { bid: &#39;0.02130000&#39;,
     bids: &#39;784.35000000&#39;,
     ask: &#39;0.02140800&#39;,
     asks: &#39;10.70000000&#39; },
  LLTBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  LRCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  LRCETH:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  QTUMBTC:
   { bid: &#39;0.00252800&#39;,
     bids: &#39;123.48000000&#39;,
     ask: &#39;0.00253200&#39;,
     asks: &#39;10.50000000&#39; },
  YOYOBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  OMGBTC:
   { bid: &#39;0.00164900&#39;,
     bids: &#39;25.94000000&#39;,
     ask: &#39;0.00166400&#39;,
     asks: &#39;0.90000000&#39; },
  OMGETH:
   { bid: &#39;0.02660000&#39;,
     bids: &#39;9.86000000&#39;,
     ask: &#39;0.02698200&#39;,
     asks: &#39;43.21000000&#39; },
  ZRXBTC:
   { bid: &#39;0.00003936&#39;,
     bids: &#39;117.00000000&#39;,
     ask: &#39;0.00003982&#39;,
     asks: &#39;8596.00000000&#39; },
  ZRXETH:
   { bid: &#39;0.00062801&#39;,
     bids: &#39;239.00000000&#39;,
     ask: &#39;0.00063595&#39;,
     asks: &#39;2446.00000000&#39; },
  STRATBTC:
   { bid: &#39;0.00070600&#39;,
     bids: &#39;43.43000000&#39;,
     ask: &#39;0.00070900&#39;,
     asks: &#39;15.00000000&#39; },
  STRATETH:
   { bid: &#39;0.01092100&#39;,
     bids: &#39;9.00000000&#39;,
     ask: &#39;0.01162700&#39;,
     asks: &#39;47.90000000&#39; },
  SNGLSBTC:
   { bid: &#39;0.00003162&#39;,
     bids: &#39;366.00000000&#39;,
     ask: &#39;0.00003183&#39;,
     asks: &#39;308.00000000&#39; },
  SNGLSETH:
   { bid: &#39;0.00050064&#39;,
     bids: &#39;300.00000000&#39;,
     ask: &#39;0.00051543&#39;,
     asks: &#39;64.00000000&#39; },
  BQXBTC:
   { bid: &#39;0.00013334&#39;,
     bids: &#39;13.00000000&#39;,
     ask: &#39;0.00013889&#39;,
     asks: &#39;1224.00000000&#39; },
  BQXETH:
   { bid: &#39;0.00200740&#39;,
     bids: &#39;990.00000000&#39;,
     ask: &#39;0.00228890&#39;,
     asks: &#39;80.00000000&#39; },
  KNCBTC:
   { bid: &#39;0.00029509&#39;,
     bids: &#39;300.00000000&#39;,
     ask: &#39;0.00029842&#39;,
     asks: &#39;4.00000000&#39; },
  KNCETH:
   { bid: &#39;0.00481840&#39;,
     bids: &#39;411.00000000&#39;,
     ask: &#39;0.00484440&#39;,
     asks: &#39;10.00000000&#39; },
  FUNBTC:
   { bid: &#39;0.00000461&#39;,
     bids: &#39;217.00000000&#39;,
     ask: &#39;0.00000465&#39;,
     asks: &#39;16668.00000000&#39; },
  FUNETH:
   { bid: &#39;0.00007486&#39;,
     bids: &#39;2004.00000000&#39;,
     ask: &#39;0.00007617&#39;,
     asks: &#39;1419.00000000&#39; },
  SNMBTC:
   { bid: &#39;0.00002462&#39;,
     bids: &#39;6922.00000000&#39;,
     ask: &#39;0.00002495&#39;,
     asks: &#39;404.00000000&#39; },
  SNMETH:
   { bid: &#39;0.00040181&#39;,
     bids: &#39;373.00000000&#39;,
     ask: &#39;0.00043404&#39;,
     asks: &#39;9281.00000000&#39; },
  NEOETH:
   { bid: &#39;0.09610400&#39;,
     bids: &#39;8.02000000&#39;,
     ask: &#39;0.09891100&#39;,
     asks: &#39;5.00000000&#39; },
  IOTABTC:
   { bid: &#39;0.00009674&#39;,
     bids: &#39;206.00000000&#39;,
     ask: &#39;0.00009721&#39;,
     asks: &#39;269.00000000&#39; },
  IOTAETH:
   { bid: &#39;0.00155061&#39;,
     bids: &#39;1231.00000000&#39;,
     ask: &#39;0.00158100&#39;,
     asks: &#39;22.00000000&#39; },
  LINKBTC:
   { bid: &#39;0.00007670&#39;,
     bids: &#39;2278.00000000&#39;,
     ask: &#39;0.00007697&#39;,
     asks: &#39;8000.00000000&#39; },
  LINKETH:
   { bid: &#39;0.00123000&#39;,
     bids: &#39;3492.00000000&#39;,
     ask: &#39;0.00123999&#39;,
     asks: &#39;4000.00000000&#39; },
  XVGBTC:
   { bid: &#39;0.00000111&#39;,
     bids: &#39;47758.00000000&#39;,
     ask: &#39;0.00000113&#39;,
     asks: &#39;215443.00000000&#39; },
  XVGETH:
   { bid: &#39;0.00001801&#39;,
     bids: &#39;8329.00000000&#39;,
     ask: &#39;0.00001842&#39;,
     asks: &#39;85146.00000000&#39; },
  CTRBTC:
   { bid: &#39;0.00019801&#39;,
     bids: &#39;650.00000000&#39;,
     ask: &#39;0.00021103&#39;,
     asks: &#39;49.00000000&#39; },
  CTRETH:
   { bid: &#39;0.00320200&#39;,
     bids: &#39;538.00000000&#39;,
     ask: &#39;0.00351990&#39;,
     asks: &#39;2081.00000000&#39; },
  SALTBTC:
   { bid: &#39;0.00063900&#39;,
     bids: &#39;57.13000000&#39;,
     ask: &#39;0.00064000&#39;,
     asks: &#39;96.48000000&#39; },
  SALTETH:
   { bid: &#39;0.01030200&#39;,
     bids: &#39;728.27000000&#39;,
     ask: &#39;0.01038900&#39;,
     asks: &#39;0.04000000&#39; },
  MDABTC:
   { bid: &#39;0.00039031&#39;,
     bids: &#39;282.00000000&#39;,
     ask: &#39;0.00039994&#39;,
     asks: &#39;540.00000000&#39; },
  MDAETH:
   { bid: &#39;0.00635500&#39;,
     bids: &#39;432.00000000&#39;,
     ask: &#39;0.00641990&#39;,
     asks: &#39;185.00000000&#39; },
  MTLBTC:
   { bid: &#39;0.00145500&#39;,
     bids: &#39;45.00000000&#39;,
     ask: &#39;0.00145600&#39;,
     asks: &#39;42.12000000&#39; },
  MTLETH:
   { bid: &#39;0.02300100&#39;,
     bids: &#39;96.10000000&#39;,
     ask: &#39;0.02477400&#39;,
     asks: &#39;131.90000000&#39; },
  SUBBTC:
   { bid: &#39;0.00003250&#39;,
     bids: &#39;4474.00000000&#39;,
     ask: &#39;0.00003380&#39;,
     asks: &#39;3878.00000000&#39; },
  SUBETH:
   { bid: &#39;0.00053000&#39;,
     bids: &#39;740.00000000&#39;,
     ask: &#39;0.00053501&#39;,
     asks: &#39;580.00000000&#39; } }
/* Price of BNB:  { bid: &#39;0.00028754&#39;,
  bids: &#39;727.00000000&#39;,
  ask: &#39;0.00028755&#39;,
  asks: &#39;400.00000000&#39; } */
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get all bid/ask prices&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.bookTickers((error, ticker) =&amp;gt; {
  console.info(&quot;bookTickers&quot;, ticker);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{ ETHBTC:
   { bid: &#39;0.06187700&#39;,
     bids: &#39;0.64000000&#39;,
     ask: &#39;0.06188300&#39;,
     asks: &#39;6.79700000&#39; },
  LTCBTC:
   { bid: &#39;0.01036000&#39;,
     bids: &#39;14.96000000&#39;,
     ask: &#39;0.01037000&#39;,
     asks: &#39;0.60000000&#39; },
  BNBBTC:
   { bid: &#39;0.00028226&#39;,
     bids: &#39;802.00000000&#39;,
     ask: &#39;0.00028268&#39;,
     asks: &#39;584.00000000&#39; },
  NEOBTC:
   { bid: &#39;0.00595600&#39;,
     bids: &#39;33.00000000&#39;,
     ask: &#39;0.00595900&#39;,
     asks: &#39;37.00000000&#39; },
  QTUMETH:
   { bid: &#39;0.03958000&#39;,
     bids: &#39;1.42000000&#39;,
     ask: &#39;0.04024300&#39;,
     asks: &#39;7.46000000&#39; },
  EOSETH:
   { bid: &#39;0.00192600&#39;,
     bids: &#39;29.31000000&#39;,
     ask: &#39;0.00193500&#39;,
     asks: &#39;418.91000000&#39; },
  SNTETH:
   { bid: &#39;0.00007607&#39;,
     bids: &#39;8864.00000000&#39;,
     ask: &#39;0.00007682&#39;,
     asks: &#39;1311.00000000&#39; },
  BNTETH:
   { bid: &#39;0.00740200&#39;,
     bids: &#39;1.36000000&#39;,
     ask: &#39;0.00746800&#39;,
     asks: &#39;419.86000000&#39; },
  BCCBTC:
   { bid: &#39;0.06786500&#39;,
     bids: &#39;0.18600000&#39;,
     ask: &#39;0.06835400&#39;,
     asks: &#39;0.72600000&#39; },
  GASBTC:
   { bid: &#39;0.00435500&#39;,
     bids: &#39;332.73000000&#39;,
     ask: &#39;0.00435600&#39;,
     asks: &#39;18.31000000&#39; },
  BNBETH:
   { bid: &#39;0.00456443&#39;,
     bids: &#39;4.00000000&#39;,
     ask: &#39;0.00461795&#39;,
     asks: &#39;192.00000000&#39; },
  BTMETH:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  HCCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  BTCUSDT:
   { bid: &#39;4801.05000000&#39;,
     bids: &#39;0.82289400&#39;,
     ask: &#39;4812.00000000&#39;,
     asks: &#39;1.04753200&#39; },
  ETHUSDT:
   { bid: &#39;296.32000000&#39;,
     bids: &#39;3.24294000&#39;,
     ask: &#39;297.81000000&#39;,
     asks: &#39;17.69901000&#39; },
  HSRBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  OAXETH:
   { bid: &#39;0.00154500&#39;,
     bids: &#39;422.64000000&#39;,
     ask: &#39;0.00169200&#39;,
     asks: &#39;159.94000000&#39; },
  DNTETH:
   { bid: &#39;0.00012059&#39;,
     bids: &#39;434.00000000&#39;,
     ask: &#39;0.00012100&#39;,
     asks: &#39;8311.00000000&#39; },
  MCOETH:
   { bid: &#39;0.02566000&#39;,
     bids: &#39;5.85000000&#39;,
     ask: &#39;0.02651200&#39;,
     asks: &#39;4.37000000&#39; },
  ICNETH:
   { bid: &#39;0.00489000&#39;,
     bids: &#39;232.97000000&#39;,
     ask: &#39;0.00500000&#39;,
     asks: &#39;0.01000000&#39; },
  ELCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  MCOBTC:
   { bid: &#39;0.00162700&#39;,
     bids: &#39;2.87000000&#39;,
     ask: &#39;0.00163800&#39;,
     asks: &#39;0.70000000&#39; },
  WTCBTC:
   { bid: &#39;0.00129604&#39;,
     bids: &#39;600.00000000&#39;,
     ask: &#39;0.00131600&#39;,
     asks: &#39;1.00000000&#39; },
  WTCETH:
   { bid: &#39;0.02080000&#39;,
     bids: &#39;30.00000000&#39;,
     ask: &#39;0.02097600&#39;,
     asks: &#39;24.00000000&#39; },
  LLTBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  LRCBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  LRCETH:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  QTUMBTC:
   { bid: &#39;0.00245100&#39;,
     bids: &#39;43.11000000&#39;,
     ask: &#39;0.00248500&#39;,
     asks: &#39;74.96000000&#39; },
  YOYOBTC:
   { bid: &#39;0.00000000&#39;,
     bids: &#39;0.00000000&#39;,
     ask: &#39;0.00000000&#39;,
     asks: &#39;0.00000000&#39; },
  OMGBTC:
   { bid: &#39;0.00160700&#39;,
     bids: &#39;300.00000000&#39;,
     ask: &#39;0.00161300&#39;,
     asks: &#39;36.05000000&#39; },
  OMGETH:
   { bid: &#39;0.02597100&#39;,
     bids: &#39;4.92000000&#39;,
     ask: &#39;0.02633200&#39;,
     asks: &#39;19.00000000&#39; },
  ZRXBTC:
   { bid: &#39;0.00003852&#39;,
     bids: &#39;9.00000000&#39;,
     ask: &#39;0.00003912&#39;,
     asks: &#39;103.00000000&#39; },
  ZRXETH:
   { bid: &#39;0.00062997&#39;,
     bids: &#39;645.00000000&#39;,
     ask: &#39;0.00062998&#39;,
     asks: &#39;5376.00000000&#39; },
  STRATBTC:
   { bid: &#39;0.00069200&#39;,
     bids: &#39;50.50000000&#39;,
     ask: &#39;0.00070000&#39;,
     asks: &#39;6.54000000&#39; },
  STRATETH:
   { bid: &#39;0.01080400&#39;,
     bids: &#39;5.00000000&#39;,
     ask: &#39;0.01200000&#39;,
     asks: &#39;5.88000000&#39; },
  SNGLSBTC:
   { bid: &#39;0.00003121&#39;,
     bids: &#39;726.00000000&#39;,
     ask: &#39;0.00003161&#39;,
     asks: &#39;153.00000000&#39; },
  SNGLSETH:
   { bid: &#39;0.00046686&#39;,
     bids: &#39;4782.00000000&#39;,
     ask: &#39;0.00051906&#39;,
     asks: &#39;32.00000000&#39; },
  BQXBTC:
   { bid: &#39;0.00011512&#39;,
     bids: &#39;87.00000000&#39;,
     ask: &#39;0.00011840&#39;,
     asks: &#39;133.00000000&#39; },
  BQXETH:
   { bid: &#39;0.00183080&#39;,
     bids: &#39;1051.00000000&#39;,
     ask: &#39;0.00195000&#39;,
     asks: &#39;626.00000000&#39; },
  KNCBTC:
   { bid: &#39;0.00027859&#39;,
     bids: &#39;7.00000000&#39;,
     ask: &#39;0.00028462&#39;,
     asks: &#39;35.00000000&#39; },
  KNCETH:
   { bid: &#39;0.00452830&#39;,
     bids: &#39;13.00000000&#39;,
     ask: &#39;0.00454970&#39;,
     asks: &#39;35.00000000&#39; },
  FUNBTC:
   { bid: &#39;0.00000464&#39;,
     bids: &#39;753.00000000&#39;,
     ask: &#39;0.00000465&#39;,
     asks: &#39;13924.00000000&#39; },
  FUNETH:
   { bid: &#39;0.00007126&#39;,
     bids: &#39;44131.00000000&#39;,
     ask: &#39;0.00007617&#39;,
     asks: &#39;1419.00000000&#39; },
  SNMBTC:
   { bid: &#39;0.00002489&#39;,
     bids: &#39;564.00000000&#39;,
     ask: &#39;0.00002559&#39;,
     asks: &#39;2553.00000000&#39; },
  SNMETH:
   { bid: &#39;0.00040060&#39;,
     bids: &#39;374.00000000&#39;,
     ask: &#39;0.00041494&#39;,
     asks: &#39;7624.00000000&#39; },
  NEOETH:
   { bid: &#39;0.09604700&#39;,
     bids: &#39;22.05000000&#39;,
     ask: &#39;0.09800000&#39;,
     asks: &#39;0.31000000&#39; },
  IOTABTC:
   { bid: &#39;0.00009515&#39;,
     bids: &#39;3.00000000&#39;,
     ask: &#39;0.00009529&#39;,
     asks: &#39;147.00000000&#39; },
  IOTAETH:
   { bid: &#39;0.00150002&#39;,
     bids: &#39;4311.00000000&#39;,
     ask: &#39;0.00155216&#39;,
     asks: &#39;7.00000000&#39; },
  LINKBTC:
   { bid: &#39;0.00007601&#39;,
     bids: &#39;4337.00000000&#39;,
     ask: &#39;0.00007630&#39;,
     asks: &#39;525.00000000&#39; },
  LINKETH:
   { bid: &#39;0.00121903&#39;,
     bids: &#39;3784.00000000&#39;,
     ask: &#39;0.00122965&#39;,
     asks: &#39;200.00000000&#39; },
  XVGBTC:
   { bid: &#39;0.00000113&#39;,
     bids: &#39;470101.00000000&#39;,
     ask: &#39;0.00000114&#39;,
     asks: &#39;147728.00000000&#39; },
  XVGETH:
   { bid: &#39;0.00001813&#39;,
     bids: &#39;8274.00000000&#39;,
     ask: &#39;0.00001843&#39;,
     asks: &#39;8320.00000000&#39; },
  CTRBTC:
   { bid: &#39;0.00020202&#39;,
     bids: &#39;625.00000000&#39;,
     ask: &#39;0.00020649&#39;,
     asks: &#39;1143.00000000&#39; },
  CTRETH:
   { bid: &#39;0.00330510&#39;,
     bids: &#39;387.00000000&#39;,
     ask: &#39;0.00339330&#39;,
     asks: &#39;436.00000000&#39; },
  SALTBTC:
   { bid: &#39;0.00063500&#39;,
     bids: &#39;76.00000000&#39;,
     ask: &#39;0.00064300&#39;,
     asks: &#39;437.54000000&#39; },
  SALTETH:
   { bid: &#39;0.01014200&#39;,
     bids: &#39;202.79000000&#39;,
     ask: &#39;0.01122600&#39;,
     asks: &#39;1.36000000&#39; },
  MDABTC:
   { bid: &#39;0.00038061&#39;,
     bids: &#39;8.00000000&#39;,
     ask: &#39;0.00041300&#39;,
     asks: &#39;1772.00000000&#39; },
  MDAETH:
   { bid: &#39;0.00655000&#39;,
     bids: &#39;547.00000000&#39;,
     ask: &#39;0.00660830&#39;,
     asks: &#39;8814.00000000&#39; },
  MTLBTC:
   { bid: &#39;0.00140600&#39;,
     bids: &#39;0.11000000&#39;,
     ask: &#39;0.00143800&#39;,
     asks: &#39;12.00000000&#39; },
  MTLETH:
   { bid: &#39;0.02300000&#39;,
     bids: &#39;1166.86000000&#39;,
     ask: &#39;0.02489500&#39;,
     asks: &#39;13.98000000&#39; },
  SUBBTC:
   { bid: &#39;0.00003580&#39;,
     bids: &#39;7617.00000000&#39;,
     ask: &#39;0.00003619&#39;,
     asks: &#39;1052.00000000&#39; },
  SUBETH:
   { bid: &#39;0.00056500&#39;,
     bids: &#39;3649.00000000&#39;,
     ask: &#39;0.00059988&#39;,
     asks: &#39;3649.00000000&#39; } }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get market depth for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.depth(&quot;BNBBTC&quot;, (error, depth, symbol) =&amp;gt; {
  console.info(symbol+&quot; market depth&quot;, depth);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;market depth for BNBBTC
{ bids:
   { &#39;0.00022997&#39;: &#39;49.00000000&#39;,
     &#39;0.00022867&#39;: &#39;11.00000000&#39;,
     &#39;0.00022865&#39;: &#39;1149.00000000&#39;,
     &#39;0.00022810&#39;: &#39;20.00000000&#39;,
     &#39;0.00022800&#39;: &#39;1000.00000000&#39;,
     &#39;0.00022777&#39;: &#39;1350.00000000&#39;,
     &#39;0.00022774&#39;: &#39;96.00000000&#39;,
     &#39;0.00022765&#39;: &#39;5.00000000&#39;,
     &#39;0.00022741&#39;: &#39;12.00000000&#39;,
     &#39;0.00022705&#39;: &#39;1372.00000000&#39;,
     &#39;0.00022700&#39;: &#39;402.00000000&#39;,
     &#39;0.00022514&#39;: &#39;756.00000000&#39;,
     &#39;0.00022513&#39;: &#39;761.00000000&#39;,
     &#39;0.00022502&#39;: &#39;2244.00000000&#39;,
     &#39;0.00022501&#39;: &#39;2190.00000000&#39;,
     &#39;0.00022500&#39;: &#39;5069.00000000&#39;,
     &#39;0.00022419&#39;: &#39;1871.00000000&#39;,
     &#39;0.00022418&#39;: &#39;1667.00000000&#39;,
     &#39;0.00022167&#39;: &#39;1889.00000000&#39;,
     &#39;0.00022162&#39;: &#39;1014.00000000&#39;,
     &#39;0.00022112&#39;: &#39;13563.00000000&#39;,
     &#39;0.00022078&#39;: &#39;4056.00000000&#39;,
     &#39;0.00022000&#39;: &#39;8060.00000000&#39;,
     &#39;0.00021963&#39;: &#39;13563.00000000&#39;,
     &#39;0.00021850&#39;: &#39;52.00000000&#39;,
     &#39;0.00021800&#39;: &#39;1282.00000000&#39;,
     &#39;0.00021710&#39;: &#39;102.00000000&#39;,
     &#39;0.00021680&#39;: &#39;100.00000000&#39;,
     &#39;0.00021652&#39;: &#39;29.00000000&#39;,
     &#39;0.00021641&#39;: &#39;154.00000000&#39;,
     &#39;0.00021500&#39;: &#39;1491.00000000&#39;,
     &#39;0.00021471&#39;: &#39;977.00000000&#39;,
     &#39;0.00021405&#39;: &#39;478.00000000&#39;,
     &#39;0.00021400&#39;: &#39;11.00000000&#39;,
     &#39;0.00021314&#39;: &#39;686.00000000&#39;,
     &#39;0.00021219&#39;: &#39;1089.00000000&#39;,
     &#39;0.00021200&#39;: &#39;767.00000000&#39;,
     &#39;0.00021100&#39;: &#39;5000.00000000&#39;,
     &#39;0.00021011&#39;: &#39;50.00000000&#39;,
     &#39;0.00021000&#39;: &#39;3468.00000000&#39;,
     &#39;0.00020900&#39;: &#39;169.00000000&#39;,
     &#39;0.00020843&#39;: &#39;90.00000000&#39;,
     &#39;0.00020811&#39;: &#39;200.00000000&#39;,
     &#39;0.00020702&#39;: &#39;50.00000000&#39;,
     &#39;0.00020691&#39;: &#39;283.00000000&#39;,
     &#39;0.00020600&#39;: &#39;3703.00000000&#39;,
     &#39;0.00020500&#39;: &#39;107.00000000&#39;,
     &#39;0.00020450&#39;: &#39;6363.00000000&#39;,
     &#39;0.00020250&#39;: &#39;301.00000000&#39;,
     &#39;0.00020222&#39;: &#39;200.00000000&#39;,
     &#39;0.00020200&#39;: &#39;123.00000000&#39;,
     &#39;0.00020137&#39;: &#39;50.00000000&#39;,
     &#39;0.00020122&#39;: &#39;727.00000000&#39;,
     &#39;0.00020100&#39;: &#39;6400.00000000&#39;,
     &#39;0.00020088&#39;: &#39;10.00000000&#39;,
     &#39;0.00020020&#39;: &#39;793.00000000&#39;,
     &#39;0.00020010&#39;: &#39;500.00000000&#39;,
     &#39;0.00020009&#39;: &#39;44.00000000&#39;,
     &#39;0.00020001&#39;: &#39;20020.00000000&#39;,
     &#39;0.00020000&#39;: &#39;45269.00000000&#39;,
     &#39;0.00019990&#39;: &#39;270.00000000&#39;,
     &#39;0.00019880&#39;: &#39;2117.00000000&#39;,
     &#39;0.00019800&#39;: &#39;1200.00000000&#39;,
     &#39;0.00019783&#39;: &#39;50.00000000&#39;,
     &#39;0.00019702&#39;: &#39;300.00000000&#39;,
     &#39;0.00019686&#39;: &#39;10.00000000&#39;,
     &#39;0.00019600&#39;: &#39;1025.00000000&#39;,
     &#39;0.00019595&#39;: &#39;139.00000000&#39;,
     &#39;0.00019501&#39;: &#39;3227.00000000&#39;,
     &#39;0.00019500&#39;: &#39;3832.00000000&#39;,
     &#39;0.00019488&#39;: &#39;82.00000000&#39;,
     &#39;0.00019400&#39;: &#39;1853.00000000&#39;,
     &#39;0.00019293&#39;: &#39;10.00000000&#39;,
     &#39;0.00019289&#39;: &#39;30.00000000&#39;,
     &#39;0.00019234&#39;: &#39;1999.00000000&#39;,
     &#39;0.00019200&#39;: &#39;4765.00000000&#39;,
     &#39;0.00019190&#39;: &#39;6.00000000&#39;,
     &#39;0.00019100&#39;: &#39;4353.00000000&#39;,
     &#39;0.00019073&#39;: &#39;12.00000000&#39;,
     &#39;0.00019058&#39;: &#39;28.00000000&#39;,
     &#39;0.00019050&#39;: &#39;718.00000000&#39;,
     &#39;0.00019001&#39;: &#39;20.00000000&#39;,
     &#39;0.00019000&#39;: &#39;39478.00000000&#39;,
     &#39;0.00018907&#39;: &#39;10.00000000&#39;,
     &#39;0.00018888&#39;: &#39;10045.00000000&#39;,
     &#39;0.00018880&#39;: &#39;15.00000000&#39;,
     &#39;0.00018800&#39;: &#39;3528.00000000&#39;,
     &#39;0.00018700&#39;: &#39;328.00000000&#39;,
     &#39;0.00018600&#39;: &#39;1000.00000000&#39;,
     &#39;0.00018598&#39;: &#39;2187.00000000&#39;,
     &#39;0.00018538&#39;: &#39;1383.00000000&#39;,
     &#39;0.00018529&#39;: &#39;10.00000000&#39;,
     &#39;0.00018500&#39;: &#39;1512.00000000&#39;,
     &#39;0.00018253&#39;: &#39;30.00000000&#39;,
     &#39;0.00018200&#39;: &#39;3000.00000000&#39;,
     &#39;0.00018158&#39;: &#39;10.00000000&#39;,
     &#39;0.00018106&#39;: &#39;250.00000000&#39;,
     &#39;0.00018100&#39;: &#39;4577.00000000&#39;,
     &#39;0.00018011&#39;: &#39;500.00000000&#39;,
     &#39;0.00018000&#39;: &#39;29832.00000000&#39; },
  asks:
   { &#39;0.00022999&#39;: &#39;32.00000000&#39;,
     &#39;0.00023086&#39;: &#39;583.00000000&#39;,
     &#39;0.00023095&#39;: &#39;1154.00000000&#39;,
     &#39;0.00023119&#39;: &#39;781.00000000&#39;,
     &#39;0.00023120&#39;: &#39;3401.00000000&#39;,
     &#39;0.00023180&#39;: &#39;4889.00000000&#39;,
     &#39;0.00023185&#39;: &#39;83.00000000&#39;,
     &#39;0.00023211&#39;: &#39;750.00000000&#39;,
     &#39;0.00023339&#39;: &#39;9273.00000000&#39;,
     &#39;0.00023340&#39;: &#39;474.00000000&#39;,
     &#39;0.00023440&#39;: &#39;500.00000000&#39;,
     &#39;0.00023450&#39;: &#39;1433.00000000&#39;,
     &#39;0.00023500&#39;: &#39;1480.00000000&#39;,
     &#39;0.00023573&#39;: &#39;87.00000000&#39;,
     &#39;0.00023580&#39;: &#39;518.00000000&#39;,
     &#39;0.00023999&#39;: &#39;863.00000000&#39;,
     &#39;0.00024000&#39;: &#39;275.00000000&#39;,
     &#39;0.00024100&#39;: &#39;60.00000000&#39;,
     &#39;0.00024119&#39;: &#39;3736.00000000&#39;,
     &#39;0.00024180&#39;: &#39;989.00000000&#39;,
     &#39;0.00024350&#39;: &#39;1285.00000000&#39;,
     &#39;0.00024399&#39;: &#39;500.00000000&#39;,
     &#39;0.00024400&#39;: &#39;2964.00000000&#39;,
     &#39;0.00024419&#39;: &#39;500.00000000&#39;,
     &#39;0.00024500&#39;: &#39;4499.00000000&#39;,
     &#39;0.00024580&#39;: &#39;542.00000000&#39;,
     &#39;0.00024584&#39;: &#39;6.00000000&#39;,
     &#39;0.00024700&#39;: &#39;250.00000000&#39;,
     &#39;0.00024789&#39;: &#39;2938.00000000&#39;,
     &#39;0.00024790&#39;: &#39;5535.00000000&#39;,
     &#39;0.00024800&#39;: &#39;499.00000000&#39;,
     &#39;0.00024892&#39;: &#39;2000.00000000&#39;,
     &#39;0.00024920&#39;: &#39;652.00000000&#39;,
     &#39;0.00024972&#39;: &#39;9242.00000000&#39;,
     &#39;0.00024999&#39;: &#39;1262.00000000&#39;,
     &#39;0.00025000&#39;: &#39;3739.00000000&#39;,
     &#39;0.00025078&#39;: &#39;250.00000000&#39;,
     &#39;0.00025348&#39;: &#39;1000.00000000&#39;,
     &#39;0.00025499&#39;: &#39;220.00000000&#39;,
     &#39;0.00025500&#39;: &#39;6029.00000000&#39;,
     &#39;0.00025518&#39;: &#39;10.00000000&#39;,
     &#39;0.00025698&#39;: &#39;17.00000000&#39;,
     &#39;0.00025700&#39;: &#39;250.00000000&#39;,
     &#39;0.00025800&#39;: &#39;265.00000000&#39;,
     &#39;0.00025925&#39;: &#39;20.00000000&#39;,
     &#39;0.00025984&#39;: &#39;1048.00000000&#39;,
     &#39;0.00025985&#39;: &#39;1048.00000000&#39;,
     &#39;0.00025987&#39;: &#39;1165.00000000&#39;,
     &#39;0.00025990&#39;: &#39;465.00000000&#39;,
     &#39;0.00025994&#39;: &#39;571.00000000&#39;,
     &#39;0.00025995&#39;: &#39;390.00000000&#39;,
     &#39;0.00026000&#39;: &#39;5033.00000000&#39;,
     &#39;0.00026028&#39;: &#39;10.00000000&#39;,
     &#39;0.00026280&#39;: &#39;40.00000000&#39;,
     &#39;0.00026300&#39;: &#39;13.00000000&#39;,
     &#39;0.00026348&#39;: &#39;50.00000000&#39;,
     &#39;0.00026500&#39;: &#39;38.00000000&#39;,
     &#39;0.00026548&#39;: &#39;10.00000000&#39;,
     &#39;0.00026594&#39;: &#39;51.00000000&#39;,
     &#39;0.00026666&#39;: &#39;15000.00000000&#39;,
     &#39;0.00026700&#39;: &#39;500.00000000&#39;,
     &#39;0.00026800&#39;: &#39;27.00000000&#39;,
     &#39;0.00026900&#39;: &#39;1000.00000000&#39;,
     &#39;0.00026929&#39;: &#39;50.00000000&#39;,
     &#39;0.00026990&#39;: &#39;270.00000000&#39;,
     &#39;0.00027000&#39;: &#39;8750.00000000&#39;,
     &#39;0.00027199&#39;: &#39;50.00000000&#39;,
     &#39;0.00027300&#39;: &#39;351.00000000&#39;,
     &#39;0.00027429&#39;: &#39;50.00000000&#39;,
     &#39;0.00027480&#39;: &#39;270.00000000&#39;,
     &#39;0.00027500&#39;: &#39;38.00000000&#39;,
     &#39;0.00027690&#39;: &#39;242.00000000&#39;,
     &#39;0.00027700&#39;: &#39;500.00000000&#39;,
     &#39;0.00027789&#39;: &#39;1317.00000000&#39;,
     &#39;0.00027906&#39;: &#39;1457.00000000&#39;,
     &#39;0.00027912&#39;: &#39;98.00000000&#39;,
     &#39;0.00027949&#39;: &#39;50.00000000&#39;,
     &#39;0.00027950&#39;: &#39;2000.00000000&#39;,
     &#39;0.00027977&#39;: &#39;96.00000000&#39;,
     &#39;0.00027980&#39;: &#39;1031.00000000&#39;,
     &#39;0.00028000&#39;: &#39;782.00000000&#39;,
     &#39;0.00028300&#39;: &#39;25.00000000&#39;,
     &#39;0.00028500&#39;: &#39;48.00000000&#39;,
     &#39;0.00028590&#39;: &#39;364.00000000&#39;,
     &#39;0.00028680&#39;: &#39;50.00000000&#39;,
     &#39;0.00028699&#39;: &#39;50.00000000&#39;,
     &#39;0.00028700&#39;: &#39;1600.00000000&#39;,
     &#39;0.00028800&#39;: &#39;3509.00000000&#39;,
     &#39;0.00028890&#39;: &#39;175.00000000&#39;,
     &#39;0.00028900&#39;: &#39;11474.00000000&#39;,
     &#39;0.00028999&#39;: &#39;10000.00000000&#39;,
     &#39;0.00029000&#39;: &#39;623.00000000&#39;,
     &#39;0.00029100&#39;: &#39;303.00000000&#39;,
     &#39;0.00029141&#39;: &#39;456.00000000&#39;,
     &#39;0.00029200&#39;: &#39;9999.00000000&#39;,
     &#39;0.00029234&#39;: &#39;104.00000000&#39;,
     &#39;0.00029300&#39;: &#39;200.00000000&#39;,
     &#39;0.00029358&#39;: &#39;325.00000000&#39;,
     &#39;0.00029399&#39;: &#39;153.00000000&#39;,
     &#39;0.00029428&#39;: &#39;100.00000000&#39; } }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Placing a LIMIT order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let quantity = 1, price = 0.069;
binance.buy(&quot;ETHBTC&quot;, quantity, price);
binance.sell(&quot;ETHBTC&quot;, quantity, price);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Placing a MARKET order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// These orders will be executed at current market price.
let quantity = 1;
binance.marketBuy(&quot;BNBBTC&quot;, quantity);
binance.marketSell(&quot;ETHBTC&quot;, quantity);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;LIMIT order with callback&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let quantity = 5, price = 0.00402030;
binance.buy(&quot;BNBETH&quot;, quantity, price, {type:&#39;LIMIT&#39;}, (error, response) =&amp;gt; {
  console.info(&quot;Limit Buy response&quot;, response);
  console.info(&quot;order id: &quot; + response.orderId);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;Limit Buy response {
  symbol: &#39;BNBETH&#39;,
  orderId: 4480717,
  clientOrderId: &#39;te38xGILZUXrPZHnTQPH6h&#39;,
  transactTime: 1509049732437,
  price: &#39;0.00402030&#39;,
  origQty: &#39;5.00000000&#39;,
  executedQty: &#39;5.00000000&#39;,
  status: &#39;FILLED&#39;,
  timeInForce: &#39;GTC&#39;,
  type: &#39;LIMIT&#39;,
  side: &#39;BUY&#39; }
//order id: 4480717
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Chaining orders together&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let quantity = 1;
binance.marketBuy(&quot;BNBBTC&quot;, quantity, (error, response) =&amp;gt; {
  console.info(&quot;Market Buy response&quot;, response);
  console.info(&quot;order id: &quot; + response.orderId);
  // Now you can limit sell with a stop loss, etc.
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;Market Buy response {
  symbol: &#39;BNBETH&#39;,
  orderId: 4480553,
  clientOrderId: &#39;rCGiCG08PGy7AwvbrG5d83&#39;,
  transactTime: 1509049376261,
  price: &#39;0.00000000&#39;,
  origQty: &#39;1.00000000&#39;,
  exeutedQty: &#39;1.00000000&#39;,
  status: &#39;FILLED&#39;,
  timeInForce: &#39;GTC&#39;,
  type: &#39;MARKET&#39;,
  side: &#39;BUY&#39; }
//order id: 4480553
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Placing a STOP LOSS order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// When the stop is reached, a stop order becomes a market order
// Note: You must also pass one of these type parameters:
// STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, TAKE_PROFIT_LIMIT
let type = &quot;STOP_LOSS&quot;;
let quantity = 1;
let price = 0.069;
let stopPrice = 0.068;
binance.sell(&quot;ETHBTC&quot;, quantity, price, {stopPrice: stopPrice, type: type});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Placing an ICEBERG order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Iceberg orders are intended to conceal the order quantity.
let quantity = 1;
let price = 0.069;
binance.sell(&quot;ETHBTC&quot;, quantity, price, {icebergQty: 10});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cancel an order&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.cancel(&quot;ETHBTC&quot;, orderid, (error, response, symbol) =&amp;gt; {
  console.info(symbol+&quot; cancel response:&quot;, response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cancel all open orders&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.info( await binance.cancelAll(&quot;XMRBTC&quot;) );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get open orders for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.openOrders(&quot;ETHBTC&quot;, (error, openOrders, symbol) =&amp;gt; {
  console.info(&quot;openOrders(&quot;+symbol+&quot;)&quot;, openOrders);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get list of all open orders&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.openOrders(false, (error, openOrders) =&amp;gt; {
  console.info(&quot;openOrders()&quot;, openOrders);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Check an order&#39;s status&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let orderid = &quot;7610385&quot;;
binance.orderStatus(&quot;ETHBTC&quot;, orderid, (error, orderStatus, symbol) =&amp;gt; {
  console.info(symbol+&quot; order status:&quot;, orderStatus);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get your Trade History&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.trades(&quot;SNMBTC&quot;, (error, trades, symbol) =&amp;gt; {
  console.info(symbol+&quot; trade history&quot;, trades);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;[ { id: 9572,
    orderId: 47884,
    price: &#39;0.00003701&#39;,
    qty: &#39;1467.00000000&#39;,
    commission: &#39;0.06774660&#39;,
    commissionAsset: &#39;BNB&#39;,
    time: 1507062500456,
    isBuyer: true,
    isMaker: true,
    isBestMatch: true },
  { id: 9575,
    orderId: 47884,
    price: &#39;0.00003701&#39;,
    qty: &#39;735.00000000&#39;,
    commission: &#39;0.03394257&#39;,
    commissionAsset: &#39;BNB&#39;,
    time: 1507062502528,
    isBuyer: true,
    isMaker: true,
    isBestMatch: true } } ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get all account orders; active, canceled, or filled.&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.allOrders(&quot;ETHBTC&quot;, (error, orders, symbol) =&amp;gt; {
  console.info(symbol+&quot; orders:&quot;, orders);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get dust log&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.dustLog((error, dustlog) =&amp;gt; {
  console.info(dustlog);
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get 24hr ticker price change statistics for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.prevDay(false, (error, prevDay) =&amp;gt; {
  // console.info(prevDay); // view all data
  for ( let obj of prevDay ) {
    let symbol = obj.symbol;
    console.info(symbol+&quot; volume:&quot;+obj.volume+&quot; change: &quot;+obj.priceChangePercent+&quot;%&quot;);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get 24hr ticker price change statistics for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.prevDay(&quot;BNBBTC&quot;, (error, prevDay, symbol) =&amp;gt; {
  console.info(symbol+&quot; previous day:&quot;, prevDay);
  console.info(&quot;BNB change since yesterday: &quot;+prevDay.priceChangePercent+&quot;%&quot;)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Kline/candlestick data for a symbol&lt;/h4&gt; 
&lt;p&gt;You can use the optional API parameters for getting historical candlesticks, these are useful if you want to import data from earlier back in time. Optional parameters: limit (max/default 500), startTime, endTime.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Intervals: 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M
binance.candlesticks(&quot;BNBBTC&quot;, &quot;5m&quot;, (error, ticks, symbol) =&amp;gt; {
  console.info(&quot;candlesticks()&quot;, ticks);
  let last_tick = ticks[ticks.length - 1];
  let [time, open, high, low, close, volume, closeTime, assetVolume, trades, buyBaseVolume, buyAssetVolume, ignored] = last_tick;
  console.info(symbol+&quot; last close: &quot;+close);
}, {limit: 500, endTime: 1514764800000});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;WebSockets Implementation&lt;/h1&gt; 
&lt;h4&gt;Get Complete WebSocket Chart Cache&lt;/h4&gt; 
&lt;p&gt;This function pulls existing chart data before connecting to the WebSocket, and provides you realtime synchronized chart information including the most recent 500 candles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.websockets.chart(&quot;BNBBTC&quot;, &quot;1m&quot;, (symbol, interval, chart) =&amp;gt; {
  let tick = binance.last(chart);
  const last = chart[tick].close;
  console.info(chart);
  // Optionally convert &#39;chart&#39; object to array:
  // let ohlc = binance.ohlc(chart);
  // console.info(symbol, ohlc);
  console.info(symbol+&quot; last price: &quot;+last)
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;{
  &#39;1517557800000&#39;:
   { open: &#39;0.00100090&#39;,
     high: &#39;0.00100650&#39;,
     low: &#39;0.00099810&#39;,
     close: &#39;0.00100370&#39;,
     volume: &#39;1161.52000000&#39; },
  &#39;1517557860000&#39;:
   { open: &#39;0.00100360&#39;,
     high: &#39;0.00101010&#39;,
     low: &#39;0.00100000&#39;,
     close: &#39;0.00100310&#39;,
     volume: &#39;1977.68000000&#39; },
  &#39;1517557920000&#39;:
   { open: &#39;0.00100100&#39;,
     high: &#39;0.00101130&#39;,
     low: &#39;0.00100080&#39;,
     close: &#39;0.00100670&#39;,
     volume: &#39;2002.00000000&#39; },
  &#39;1517557980000&#39;:
   { open: &#39;0.00100660&#39;,
     high: &#39;0.00101400&#39;,
     low: &#39;0.00100200&#39;,
     close: &#39;0.00100640&#39;,
     volume: &#39;3896.40000000&#39; },
  &#39;1517558040000&#39;:
   { open: &#39;0.00100630&#39;,
     high: &#39;0.00101390&#39;,
     low: &#39;0.00100350&#39;,
     close: &#39;0.00100470&#39;,
     volume: &#39;1675.48000000&#39; },
  &#39;1517558100000&#39;:
   { open: &#39;0.00100860&#39;,
     high: &#39;0.00101450&#39;,
     low: &#39;0.00100100&#39;,
     close: &#39;0.00100270&#39;,
     volume: &#39;1918.46000000&#39; },
  &#39;1517558160000&#39;:
   { open: &#39;0.00100460&#39;,
     high: &#39;0.00101480&#39;,
     low: &#39;0.00100310&#39;,
     close: &#39;0.00100670&#39;,
     volume: &#39;2464.12000000&#39; },
  &#39;1517558220000&#39;:
   { open: &#39;0.00100510&#39;,
     high: &#39;0.00100660&#39;,
     low: &#39;0.00100110&#39;,
     close: &#39;0.00100250&#39;,
     volume: &#39;1484.59000000&#39; } }
// (..many more entries not shown)
///BNBBTC last price: 0.00100250
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get Candlestick Updates via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Periods: 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M
binance.websockets.candlesticks([&#39;BNBBTC&#39;], &quot;1m&quot;, (candlesticks) =&amp;gt; {
  let { e:eventType, E:eventTime, s:symbol, k:ticks } = candlesticks;
  let { o:open, h:high, l:low, c:close, v:volume, n:trades, i:interval, x:isFinal, q:quoteVolume, V:buyVolume, Q:quoteBuyVolume } = ticks;
  console.info(symbol+&quot; &quot;+interval+&quot; candlestick update&quot;);
  console.info(&quot;open: &quot;+open);
  console.info(&quot;high: &quot;+high);
  console.info(&quot;low: &quot;+low);
  console.info(&quot;close: &quot;+close);
  console.info(&quot;volume: &quot;+volume);
  console.info(&quot;isFinal: &quot;+isFinal);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Trade Updates via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.websockets.trades([&#39;BNBBTC&#39;, &#39;ETHBTC&#39;], (trades) =&amp;gt; {
  let {e:eventType, E:eventTime, s:symbol, p:price, q:quantity, m:maker, a:tradeId} = trades;
  console.info(symbol+&quot; trade update. price: &quot;+price+&quot;, quantity: &quot;+quantity+&quot;, maker: &quot;+maker);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get miniTicker via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.websockets.miniTicker(markets =&amp;gt; {
  console.info(markets);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;  ICXBNB:
   { close: &#39;0.34803000&#39;,
     open: &#39;0.34249000&#39;,
     high: &#39;0.35000000&#39;,
     low: &#39;0.31001000&#39;,
     volume: &#39;134681.88000000&#39;,
     quoteVolume: &#39;44351.78363150&#39;,
     eventTime: 1520501508957 },
  ELFETH:
   { close: &#39;0.00120820&#39;,
     open: &#39;0.00132816&#39;,
     high: &#39;0.00132926&#39;,
     low: &#39;0.00115888&#39;,
     volume: &#39;852919.00000000&#39;,
     quoteVolume: &#39;1045.37831133&#39;,
     eventTime: 1520501508735 },
  PIVXBTC:
   { close: &#39;0.00049510&#39;,
     open: &#39;0.00051000&#39;,
     high: &#39;0.00056290&#39;,
     low: &#39;0.00049200&#39;,
     volume: &#39;215530.27000000&#39;,
     quoteVolume: &#39;111.50245426&#39;,
     eventTime: 1520501508367 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get 24hr Price Change Statistics via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// For all symbols:
binance.websockets.prevDay(false, (error, response) =&amp;gt; {
  console.info(response);
});

// For a specific symbol:
binance.websockets.prevDay(&#39;BNBBTC&#39;, (error, response) =&amp;gt; {
  console.info(response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;{ eventType: &#39;24hrTicker&#39;,
  eventTime: 1512629577435,
  symbol: &#39;BNBBTC&#39;,
  priceChange: &#39;-0.00002671&#39;,
  percentChange: &#39;-12.844&#39;,
  averagePrice: &#39;0.00019282&#39;,
  prevClose: &#39;0.00020796&#39;,
  close: &#39;0.00018125&#39;,
  closeQty: &#39;55.00000000&#39;,
  bestBid: &#39;0.00018038&#39;,
  bestBidQty: &#39;580.00000000&#39;,
  bestAsk: &#39;0.00018125&#39;,
  bestAskQty: &#39;144.00000000&#39;,
  open: &#39;0.00020796&#39;,
  high: &#39;0.00021300&#39;,
  low: &#39;0.00017555&#39;,
  volume: &#39;3731915.00000000&#39;,
  quoteVolume: &#39;719.59011818&#39;,
  openTime: 1512543177433,
  closeTime: 1512629577433,
  firstTradeId: 2248079,
  lastTradeId: 2284725,
  numTrades: 36647 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Get Market Depth via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.websockets.depth([&#39;BNBBTC&#39;], (depth) =&amp;gt; {
  let {e:eventType, E:eventTime, s:symbol, u:updateId, b:bidDepth, a:askDepth} = depth;
  console.info(symbol+&quot; market depth update&quot;);
  console.info(bidDepth, askDepth);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Maintain Market Depth Cache Locally via WebSocket&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.websockets.depthCache([&#39;BNBBTC&#39;], (symbol, depth) =&amp;gt; {
  let bids = binance.sortBids(depth.bids);
  let asks = binance.sortAsks(depth.asks);
  console.info(symbol+&quot; depth cache update&quot;);
  console.info(&quot;bids&quot;, bids);
  console.info(&quot;asks&quot;, asks);
  console.info(&quot;best bid: &quot;+binance.first(bids));
  console.info(&quot;best ask: &quot;+binance.first(asks));
  console.info(&quot;last updated: &quot; + new Date(depth.eventTime));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;BNBBTC depth cache update
asks { &#39;0.00025400&#39;: 0.531114,
  &#39;0.00025440&#39;: 0.2602512,
  &#39;0.00025469&#39;: 0.01400795,
  &#39;0.00025500&#39;: 0.0051,
  &#39;0.00025555&#39;: 0.0245328,
  &#39;0.00025629&#39;: 0.05100171,
  &#39;0.00025630&#39;: 0.0146091,
  &#39;0.00025642&#39;: 0.02230854,
  &#39;0.00025825&#39;: 0.00180775,
  &#39;0.00025896&#39;: 0.21856224,
  &#39;0.00025927&#39;: 0.025927 }
bids { &#39;0.00025203&#39;: 0.201624,
  &#39;0.00025202&#39;: 0.04838784,
  &#39;0.00025200&#39;: 0.13482,
  &#39;0.00025195&#39;: 0.01385725,
  &#39;0.00025187&#39;: 0.25539618,
  &#39;0.00025138&#39;: 0.012569,
  &#39;0.00025136&#39;: 0.04247984,
  &#39;0.00025135&#39;: 0.0085459,
  &#39;0.00025100&#39;: 0.02259,
  &#39;0.00025072&#39;: 0.012536,
  &#39;0.00025071&#39;: 0.00401136 }
//best ask: 0.00025400
//best bid: 0.00025203
//last updated: Thu Apr 18 2019 00:52:49 GMT-0400 (Eastern Daylight Time)
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;bookTickers stream includes the bid/ask price &amp;amp; amount, for all symbols&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.websockets.bookTickers( console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;bookTickers stream includes the bid/ask price &amp;amp; amount, for a symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.websockets.bookTickers( &#39;BTCUSDT&#39;, console.log );
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deposit &amp;amp; Withdraw&lt;/h3&gt; 
&lt;h4&gt;Get Deposit Address&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.depositAddress(&quot;XMR&quot;, (error, response) =&amp;gt; {
  console.info(response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get All Deposit History&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.depositHistory((error, response) =&amp;gt; {
  console.info(response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Deposit History for a specific symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.depositHistory((error, response) =&amp;gt; {
  console.info(response);
}, &quot;VEN&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get All Withdraw History&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.withdrawHistory((error, response) =&amp;gt; {
  console.info(response);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get Withdraw History for a specific symbol&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.withdrawHistory((error, response) =&amp;gt; {
  console.info(response);
}, &quot;BTC&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Withdraw with AddressTag&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Required for coins like XMR, XRP, etc.
let address = &quot;44tLjmXrQNrWJ5NBsEj2R77ZBEgDa3fEe9GLpSf2FRmhexPvfYDUAB7EXX1Hdb3aMQ9FLqdJ56yaAhiXoRsceGJCRS3Jxkn&quot;;
let addressTag = &quot;0e5e38a01058dbf64e53a4333a5acf98e0d5feb8e523d32e3186c664a9c762c1&quot;;
let amount = 0.1;
binance.withdraw(&quot;XMR&quot;, address, amount, addressTag);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Withdraw&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.withdraw(&quot;BTC&quot;, &quot;1C5gqLRs96Xq4V2ZZAR1347yUCpHie7sa&quot;, 0.2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Binance Margin API&lt;/h1&gt; 
&lt;h4&gt;Transfer from Main account to Margin account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.mgTransferMainToMargin(asset, amount, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    // Success! Transaction ID: response.tranId
});

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Transfer from Margin account to Main account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.mgTransferMarginToMain(asset, amount, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    // Success! Transaction ID: response.tranId
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get maximum transfer-out amount from Margin account to Main account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.maxTransferable(asset, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    console.info(`Maximum transfer-out amount: ${response.amount}`);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Get maximum borrow amount&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.maxBorrowable(asset, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    console.info(`Maximum borrow amount: ${response.amount}`);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Borrow from margin account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.mgBorrow(asset, amount, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    // Success! Transaction ID: response.tranId
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Repay margin account&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.mgRepay(asset, amount, (error, response) =&amp;gt; {
    if ( error ) return console.warn(error);
    // Success! Transaction ID: response.tranId
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Margin BUY and SELL orders&lt;/h4&gt; 
&lt;p&gt;Instead of &lt;code&gt;binance.buy()&lt;/code&gt; use &lt;code&gt;binance.mgBuy()&lt;/code&gt; and instead of &lt;code&gt;binance.sell()&lt;/code&gt; use &lt;code&gt;binance.mgSell()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For market orders use &lt;code&gt;binance.mgMarketBuy()&lt;/code&gt; and &lt;code&gt;binance.mgMarketSell()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For order operations, use &lt;code&gt;binance.mgCancel()&lt;/code&gt;, &lt;code&gt;binance.mgCancelOrders()&lt;/code&gt;, &lt;code&gt;binance.mgAllOrders()&lt;/code&gt;, &lt;code&gt;binance.openOrders()&lt;/code&gt;, &lt;code&gt;binance.mgOrderStatus()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Usage and callbacks are the same as the &#39;regular account&#39; counterparts.&lt;/p&gt; 
&lt;h4&gt;Margin account details&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;binance.mgAccount((error, response) =&amp;gt; {
   if ( error ) return console.warn(error);
   console.info(&quot;Account details response:&quot;, response)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  {
    borrowEnabled: true,
    marginLevel: &#39;999.00000000&#39;,
    totalAssetOfBtc: &#39;0.00000003&#39;,
    totalLiabilityOfBtc: &#39;0.00000000&#39;,
    totalNetAssetOfBtc: &#39;0.00000003&#39;,
    tradeEnabled: true,
    transferEnabled: true,
    userAssets: [
      {
        asset: &#39;MATIC&#39;,
        borrowed: &#39;0.00000000&#39;,
        free: &#39;0.00000000&#39;,
        interest: &#39;0.00000000&#39;,
        locked: &#39;0.00000000&#39;,
        netAsset: &#39;0.00000000&#39;
      }
    ]
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Binance Lending API&lt;/h1&gt; 
&lt;h4&gt;Lending Account Details&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let lendingData = await binance.lending();
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  lendingData {
    positionAmountVos: [
      {
        amount: &#39;952983.20208997&#39;,
        amountInBTC: &#39;129.54853649&#39;,
        amountInUSDT: &#39;952983.20208997&#39;,
        asset: &#39;USDT&#39;
      }
    ],
    totalAmountInBTC: &#39;129.54853649&#39;,
    totalAmountInUSDT: &#39;952983.20208997&#39;,
    totalFixedAmountInBTC: &#39;13.59400000&#39;,
    totalFixedAmountInUSDT: &#39;100000.00000000&#39;,
    totalFlexibleInBTC: &#39;115.95453649&#39;,
    totalFlexibleInUSDT: &#39;852983.20208997&#39;
  }
  {
    positionAmountVos: [],
    totalAmountInBTC: &#39;0.00000000&#39;,
    totalAmountInUSDT: &#39;0.00000000&#39;,
    totalFixedAmountInBTC: &#39;0.00000000&#39;,
    totalFixedAmountInUSDT: &#39;0.00000000&#39;,
    totalFlexibleInBTC: &#39;0.00000000&#39;,
    totalFlexibleInUSDT: &#39;0.00000000&#39;
  }
  {
    positionAmountVos: [],
    totalAmountInBTC: &#39;0.00000000&#39;,
    totalAmountInUSDT: &#39;0.00000000&#39;,
    totalFixedAmountInBTC: &#39;0.00000000&#39;,
    totalFixedAmountInUSDT: &#39;0.00000000&#39;,
    totalFlexibleInBTC: &#39;0.00000000&#39;,
    totalFlexibleInUSDT: &#39;0.00000000&#39;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md&quot;&gt;Advanced Examples&lt;/a&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#exchangeinfo-pull-minimum-order-size-quantity-etc&quot;&gt;exchangeInfo: Pull minimum order size, quantity, etc&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#clamp-order-quantities-to-required-amounts-via-minqty-minnotional-stepsize-when-placing-orders&quot;&gt;Clamp order quantities to required amounts via minQty, minNotional, stepSize when placing orders&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#show-api-rate-limits&quot;&gt;Show API Rate limits&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#connect-to-all-websockets-at-once-thanks-keith1024&quot;&gt;Connect to all WebSockets at once&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#get-last-order-for-a-symbol&quot;&gt;Get last order for a symbol&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#neworderresptype-example-when-placing-orders&quot;&gt;newOrderRespType example&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#recent-trades-historicaltrades-recenttrades-aggtrades-functions&quot;&gt;Recent Trades (historicalTrades, recentTrades, aggTrades functions)&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#terminate-websocket-connections&quot;&gt;Terminate WebSocket connections&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#user-data-account-balance-updates-trade-updates-new-orders-filled-orders-cancelled-orders-via-websocket&quot;&gt;User Data: Account Balance Updates, Trade Updates, New Orders, Filled Orders, Cancelled Orders via WebSocket&lt;/a&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#margin-user-data-account-balance-updates-trade-updates-new-orders-filled-orders-cancelled-orders-via-websocket&quot;&gt;Margin User Data: Account Balance Updates, Trade Updates, New Orders, Filled Orders, Cancelled Orders via WebSocket&lt;/a&gt; &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/blob/master/examples/advanced.md#asynchronous-syntax-options&quot;&gt;Asynchronous Syntax Options&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;Verify that your system time is correct. If you have any suggestions don&#39;t hesitate to file an issue.&lt;/p&gt; 
&lt;p&gt;Having problems? Try adding &lt;code&gt;useServerTime&lt;/code&gt; to your options or setting &lt;code&gt;recvWindow&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.options({
  APIKEY: &#39;xxx&#39;,
  APISECRET: &#39;xxx&#39;,
  useServerTime: true,
  recvWindow: 60000, // Set a higher recvWindow to increase response timeout
  verbose: true, // Add extra output when subscribing to WebSockets, etc
  log: log =&amp;gt; {
    console.log(log); // You can create your own logger here, or disable console output
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Problems getting your balance? Wrap the entry point of your application in useServerTime:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await binance.useServerTime();
binance.balance((error, balances) =&amp;gt; {
    if ( error ) return console.error(error);
    console.info(&quot;balances()&quot;, balances);
    console.info(&quot;BNB balance: &quot;, balances.BNB.available);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can enable verbose mode to help with debugging WebSocket streams:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;binance.setOption( &#39;verbose&#39;, true );
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;For support go to &lt;a href=&quot;https://t.me/binance_api_english&quot;&gt;Telegram&lt;/a&gt; or &lt;a href=&quot;https://dev.binance.vision/&quot;&gt;Binance Developers&lt;/a&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; ✨&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Thank you to all contributors!&lt;/strong&gt;&lt;/em&gt; dmzoneill, bmino, dmitriz, keith1024, Eluvade, itnok, GusGold, gunar, kirosc, MadDeveloper, nimanr, robaleman, gemmell, lht147, abou7mied, arenddeboer, ejfrancis, charlesdarkwind, joaquinnunez, meetmangukiya, afsharsafavi, boyhagemann, davewang, dbvcode, sethyx, andersonaguiar, hoota, balthazar, ifmad, CollinEstes, dpereskokov, Dobberoonski75, guygberg, joelrich, mstijak, matthewwoop, bhnow, Rolaus, pavlovdog, toant13, Fuzzyma, bitoiu, WWWSpider, dreyescat, hems, mathlet0x, nurdtechie98 and others!&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Give us a star :star:&lt;/li&gt; 
 &lt;li&gt;Fork and Clone! Awesome&lt;/li&gt; 
 &lt;li&gt;Select existing &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/issues&quot;&gt;issues&lt;/a&gt; or create a &lt;a href=&quot;https://github.com/jaggedsoft/node-binance-api/issues/new&quot;&gt;new issue&lt;/a&gt; and give us a PR with your bugfix or improvement after. We love it ❤️&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/node-binance-api.svg?style=for-the-badge&amp;amp;maxAge=86400&quot; alt=&quot;Downloads&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/jaggedsoft/node-binance-api.svg?style=for-the-badge&amp;amp;label=Stars&quot; alt=&quot;Stars&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/contributors/jaggedsoft/node-binance-api.svg?style=for-the-badge&amp;amp;maxAge=86400&quot; alt=&quot;Contributors&quot;&gt; &lt;a href=&quot;https://starcharts.herokuapp.com/jaggedsoft/node-binance-api&quot;&gt;&lt;img src=&quot;https://starcharts.herokuapp.com/jaggedsoft/node-binance-api.svg&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://hits.dwyl.io/jaggedsoft/node-binance-api&quot;&gt;&lt;img src=&quot;http://hits.dwyl.io/jaggedsoft/node-binance-api.svg&quot; alt=&quot;Views&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/jaggedsoft&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/jaggedsoft.svg?style=social&quot; alt=&quot;jaggedsoft on Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player which supports M3U-playlists.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.readme/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h2&gt;Playlists by category&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Playlists by language&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Playlists by country&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;language&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;country&quot;: {
      &quot;code&quot;: &quot;us&quot;,
      &quot;name&quot;: &quot;United States&quot;
    },
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue.&lt;/p&gt; 
&lt;p&gt;However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that&#39;s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>r4j0x00/exploits</title>
      <link>https://github.com/r4j0x00/exploits</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;exploits&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/r4j0x00/exploits/blob/master/CVE-2021-3156/exploit.c&quot;&gt;CVE-2021-3156&lt;/a&gt;: Linux local privilege escalation through heap overflow in sudo&lt;br&gt; &lt;a href=&quot;https://github.com/r4j0x00/exploits/blob/master/chrome-exploit/exploit.js&quot;&gt;CVE-2020-6507&lt;/a&gt;: Out of bounds write in V8. Chrome versions &amp;lt;= 83.0.4103.97&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Haehnchen/crypto-trading-bot</title>
      <link>https://github.com/Haehnchen/crypto-trading-bot</link>
      <description>&lt;p&gt;Cryptocurrency trading bot in javascript for Bitfinex, Bitmex, Binance, FTX, Bybit ... (public edition)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Crypto Trading Bot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/Haehnchen/crypto-trading-bot&quot;&gt;&lt;img src=&quot;https://travis-ci.org/Haehnchen/crypto-trading-bot.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A &lt;strong&gt;work in progress&lt;/strong&gt; Cryptocurrency for common exchanges like Bitfinex, Bitmex and Binance. As most trading bots just provide basic buy and sell signals they provide many stuff to get profitable eg exchange orders like stop-losses or stop-limits are not supported by main bots. Also the limitation of fixed timeframe and technical indicators must be broken&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Not production ready&lt;/strong&gt; only basic functionality&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully use Websocket for exchange communication to react as fast as possible on market&lt;/li&gt; 
 &lt;li&gt;Multi pair support in one instance&lt;/li&gt; 
 &lt;li&gt;sqlite3 storage for candles, tickers, ...&lt;/li&gt; 
 &lt;li&gt;Webserver UI&lt;/li&gt; 
 &lt;li&gt;Support for going &quot;Short&quot; and &quot;Long&quot;&lt;/li&gt; 
 &lt;li&gt;Signal browser dashboard for pairs&lt;/li&gt; 
 &lt;li&gt;Slack and email notification&lt;/li&gt; 
 &lt;li&gt;Join foreign exchange candles (eg. Trade on Bitmex with the faster moving Binance trades / candles)&lt;/li&gt; 
 &lt;li&gt;TODO: Show possible arbitrage trades&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Exchanges&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitmex.com/register/jS4mLN&quot;&gt;Bitmex&lt;/a&gt; with leverage configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitmex.com/register/jS4mLN&quot;&gt;Bitmex Testnet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/?ref=17569916&quot;&gt;Binance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/?ref=17569916&quot;&gt;Binance Margin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/en/futures/ref/302644&quot;&gt;Binance Futures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coinbase.com/join/5a2ae60e76531100d3af2ee5&quot;&gt;Coinbase Pro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitfinex.com/?refcode=kDLceRHa&quot;&gt;Bitfinex&lt;/a&gt; (margin wallet)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybit.com/app/register?ref=46AK7&quot;&gt;Bybit&lt;/a&gt; with leverage configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ftx.com/#a=1494781&quot;&gt;FTX&lt;/a&gt; (Perpetual Futures only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;TODOS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hbg.com/&quot;&gt;Huobi Global&lt;/a&gt; (margin)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical stuff and packages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;node.js&lt;/li&gt; 
 &lt;li&gt;sqlite3&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anandanand84/technicalindicators&quot;&gt;technicalindicators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tulipindicators.org/list&quot;&gt;tulipindicators - tulind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mrjbq7.github.io/ta-lib/&quot;&gt;TA-Lib&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;twig&lt;/li&gt; 
 &lt;li&gt;express&lt;/li&gt; 
 &lt;li&gt;Bootstrap v4&lt;/li&gt; 
 &lt;li&gt;Tradingview widgets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;h3&gt;[optional] Preinstall&lt;/h3&gt; 
&lt;p&gt;The tulip library is used for indicators; which sometimes is having some issues on &lt;code&gt;npm install&lt;/code&gt; because of code compiling:&lt;/p&gt; 
&lt;p&gt;Install build tools&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The nodejs wrapper for tulipindicators is called &lt;a href=&quot;https://www.npmjs.com/package/tulind&quot;&gt;Tulip Node (tuind)&lt;/a&gt;, check out installation instructions there.&lt;/p&gt; 
&lt;p&gt;Also the build from source is not supporting all nodejs version. It looks like versions &amp;lt;= 10 are working. You can use nodejs 12 if you compiled it once via older version.&lt;/p&gt; 
&lt;h3&gt;Install packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;➜ npm install --production
➜ npm run postinstall
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create instance file for pairs and changes&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cp instance.js.dist instance.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Provide a configuration with your exchange credentials&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cp conf.json.dist conf.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a new sqlite database use bot.sql scheme to create the tables&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sqlite3 bot.db &amp;lt; bot.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lets start it&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use: Docker&lt;/h2&gt; 
&lt;p&gt;For initialize the configuration once&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;➜ cp instance.js.dist instance.js &amp;amp;&amp;amp; cp conf.json.dist conf.json &amp;amp;&amp;amp; sqlite3 bot.db &amp;lt; bot.sql
➜ docker-compose build
➜ docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After this you can use &lt;code&gt;docker-compose&lt;/code&gt; which will give you a running bot via &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setting Up Telegram Bot&lt;/h2&gt; 
&lt;p&gt;First, you&#39;ll need to create a bot for Telegram. Just talk to &lt;a href=&quot;https://telegram.me/botfather&quot;&gt;BotFather&lt;/a&gt; and follow simple steps until it gives you a token for it. You&#39;ll also need to create a Telegram group, the place where you and crypto-trading-bot will communicate. After creating it, add the bot as administrator (make sure to uncheck &quot;All Members Are Admins&quot;).&lt;/p&gt; 
&lt;h3&gt;Retrieving Chat IDs&lt;/h3&gt; 
&lt;p&gt;Invite &lt;code&gt;@RawDataBot&lt;/code&gt; to your group and get your group id in sended chat id field&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Message
 ├ message_id: 338
 ├ from
 ┊  ├ id: *****
 ┊  ├ is_bot: false
 ┊  ├ first_name: 사이드
 ┊  ├ username: ******
 ┊  └ language_code: en
 ├ chat
 ┊  ├ id: -1001118554477
 ┊  ├ title: Test Group
 ┊  └ type: supergroup
 ├ date: 1544948900
 └ text: A
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Look for id: -1001118554477 is your chat id (with the negative sign).&lt;/p&gt; 
&lt;h2&gt;Webserver&lt;/h2&gt; 
&lt;p&gt;Some browser links&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UI: http://127.0.0.1:8080&lt;/li&gt; 
 &lt;li&gt;Signals: http://127.0.0.1:8080/signals&lt;/li&gt; 
 &lt;li&gt;Tradingview: http://127.0.0.1:8080/tradingview/BTCUSD&lt;/li&gt; 
 &lt;li&gt;Backtesting: http://127.0.0.1:8080/backtest&lt;/li&gt; 
 &lt;li&gt;Order &amp;amp; Pair Management: http://127.0.0.1:8080/pairs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security / Authentication&lt;/h3&gt; 
&lt;p&gt;As the webserver provides just basic auth for access you should combine some with eh a https for public server. Here s simple &lt;code&gt;proxy_pass&lt;/code&gt; for nginx.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# /etc/nginx/sites-available/YOURHOST
server {
    server_name YOURHOST;

    location / {
        proxy_pass http://127.0.0.1:8080;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/YOURHOST/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/YOURHOST/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should also set the listen ip to a local one&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# config.json
webserver.ip: 127.0.0.1

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;h3&gt;Dashboard&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/cryptobot.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Webserver UI&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Trades / Positions / Orders&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/trades.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Trades / Positions / Orders&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Backtesting&lt;/h3&gt; 
&lt;p&gt;Currently there is a the UI for backtesting&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/backtest_result.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Backtest Result&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Manual Orders&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/manual_order.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Manual Orders&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Build In Strategies&lt;/h2&gt; 
&lt;p&gt;Common strategy with indicators are inside, which most of the time are not profitable. See some more advanced strategy in the list below&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies/dip_catcher/README.md&quot;&gt;dip_catcher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies/dca_dipper/README.md&quot;&gt;dca_dipper&lt;/a&gt; - &lt;strong&gt;Long term invest&lt;/strong&gt; Dollar-Cost Averaging (DCA) Dip Investor Strategy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Find some example strategies inside &lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies&quot;&gt;src/modules/strategy/strategies&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Custom Strategies&lt;/h2&gt; 
&lt;p&gt;For custom strategies use &lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/var/strategies&quot;&gt;var/strategies&lt;/a&gt; folder.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# simple file structure
var/strategies/your_strategy.js

# or wrap strategy into any sub folder depth
var/strategies/my_strategy/my_strategy.js
var/strategies/subfolder1/our_strategy/our_strategy.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools / Watchdog&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;order_adjust&lt;/code&gt; Keep open orders in bid / ask of the orderbook in first position&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Watchdog&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;stoploss&lt;/code&gt; provide general stoploss order in percent of entry price (Exchange Order)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;risk_reward_ratio&lt;/code&gt; Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stoploss_watch&lt;/code&gt; Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trailing_stop&lt;/code&gt; Use native exchange trailing stop; if supported by exchange eg &lt;code&gt;Bitfinex&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;    &#39;watchdogs&#39;: [
        {
            &#39;name&#39;: &#39;stoploss&#39;,
            &#39;percent&#39;: 3,
        },
        {
            &#39;name&#39;: &#39;risk_reward_ratio&#39;,
            &#39;target_percent&#39;: 6,
            &#39;stop_percent&#39;: 3,
        },
        {
            &#39;name&#39;: &#39;stoploss_watch&#39;,
            &#39;stop&#39;: 1.2,
        },
        {
            &#39;name&#39;: &#39;trailing_stop&#39;,
            &#39;target_percent&#39;: 1.2,
            &#39;stop_percent&#39;: 0.5
        }
    ],
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Tick Interval&lt;/h3&gt; 
&lt;p&gt;Per default every strategy is &quot;ticked&quot; every full minute with a ~10sec time window. If you want to tick every 15 minutes or less see possible examples below.&lt;/p&gt; 
&lt;p&gt;Supported units are &quot;m&quot; (minute) and &quot;s&quot; (seconds)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
   &quot;strategies&quot;:[
      {
         &quot;strategy&quot;:&quot;cci&quot;,
         &quot;interval&quot;:&quot;15m&quot;
      },
      {
         &quot;strategy&quot;:&quot;cci2&quot;,
         &quot;interval&quot;:&quot;30s&quot;
      },
      {
         &quot;strategy&quot;:&quot;cci3&quot;,
         &quot;interval&quot;:&quot;60m&quot;
      }
   ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trading&lt;/h2&gt; 
&lt;h3&gt;Capital&lt;/h3&gt; 
&lt;p&gt;To allow the bot to trade you need to give some &quot;playing capital&quot;. You can allow to by via asset or currency amount, see examples below. You should only provide one of them, first wins.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    c.symbols.push({
        &#39;symbol&#39;: &#39;BTC-EUR&#39;,
        &#39;exchange&#39;: &#39;coinbase_pro&#39;,
        &#39;trade&#39;: {
            &#39;capital&#39;: 0.015, // this will buy 0.015 BTC
            &#39;currency_capital&#39;: 50,  // this will use 50 EUR and buys the equal amount of BTC (example: BTC price 3000 use 50 EUR. will result in 0.016 BTC)
            &#39;balance_percent&#39;: 75,  // this will use 75 % of your exchange margin tradable balance. Currently implemented only on Bitfinex exchange.
        },
    })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Live Strategy&lt;/h3&gt; 
&lt;p&gt;Every strategy stat should be live must be places inside &lt;code&gt;trade&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  {
    &quot;trade&quot;: {
      &quot;strategies&quot;: [
        {
          &quot;strategy&quot;: &quot;dip_catcher&quot;,
          &quot;interval&quot;: &quot;15m&quot;,
          &quot;options&quot;: {
            &quot;period&quot;: &quot;15m&quot;
          }
        }
      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Inside logs, visible via browser ui, you can double check the strategies init process after the application started.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[info] Starting strategy intervals
[info] &quot;binance_futures&quot; - &quot;ETHUSDT&quot; - &quot;trade&quot; - init strategy &quot;dip_catcher&quot; (15m) in 11.628 minutes
[info] &quot;binance_futures&quot; - &quot;BTCUSDT&quot; - &quot;trade&quot; first strategy run &quot;dip_catcher&quot; now every 15.00 minutes
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Full Trade Example&lt;/h3&gt; 
&lt;p&gt;An example &lt;code&gt;instance.js&lt;/code&gt; which trades can be found inside &lt;code&gt;instance.js.dist_trade&lt;/code&gt;. Rename it or move the content to you file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const c = (module.exports = {});

c.symbols = [
  {
    symbol: &#39;ETHUSDT&#39;,
    exchange: &#39;binance_futures&#39;,
    periods: [&#39;1m&#39;, &#39;15m&#39;, &#39;1h&#39;],
    trade: {
      currency_capital: 10,
      strategies: [
        {
          strategy: &#39;dip_catcher&#39;,
          interval: &#39;15m&#39;,
          options: {
            period: &#39;15m&#39;
          }
        }
      ]
    },
    watchdogs: [
      {
        name: &#39;risk_reward_ratio&#39;,
        target_percent: 3.1,
        stop_percent: 2.1
      }
    ]
  }
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Margin / Leverage&lt;/h3&gt; 
&lt;p&gt;Per pair you can set used margin before orders are created; depending on exchange&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    c.symbols.push({
        &#39;symbol&#39;: &#39;BTCUSD&#39;,
        &#39;exchange&#39;: &#39;bitmex&#39;,
        &#39;extra&#39;: {
            &#39;bitmex_leverage&#39;: 5,
        },
    })

    c.symbols.push({
        &#39;symbol&#39;: &#39;EOSUSD&#39;,
        &#39;exchange&#39;: &#39;bybit&#39;,
        &#39;extra&#39;: {
            &#39;bybit_leverage&#39;: 5,
        },
    })    
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;h3&gt;Fill data&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;outdated&lt;/em&gt;, but there as an automatic filling on startup ~1000 candles from the past (depending on exchange) and continuously fetched when running&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node index.js backfill -e bitmex -p 1m -s XRPZ18
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Signals&lt;/h2&gt; 
&lt;h3&gt;Slack&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/slack_signals.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Slack signals&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Related Links&lt;/h2&gt; 
&lt;h3&gt;Trading Bots Inspiration&lt;/h3&gt; 
&lt;p&gt;Other bots with possible design pattern&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/DeviaVir/zenbot&lt;/li&gt; 
 &lt;li&gt;https://github.com/magic8bot/magic8bot&lt;/li&gt; 
 &lt;li&gt;https://github.com/askmike/gekko&lt;/li&gt; 
 &lt;li&gt;https://github.com/freqtrade/freqtrade&lt;/li&gt; 
 &lt;li&gt;https://github.com/Ekliptor/WolfBot&lt;/li&gt; 
 &lt;li&gt;https://github.com/andresilvasantos/bitprophet&lt;/li&gt; 
 &lt;li&gt;https://github.com/kavehs87/PHPTradingBot&lt;/li&gt; 
 &lt;li&gt;https://github.com/Superalgos/Superalgos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strategies&lt;/h3&gt; 
&lt;p&gt;Some strategies based on technical indicators for collection some ideas&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://github.com/freqtrade/freqtrade-strategies&lt;/li&gt; 
 &lt;li&gt;https://github.com/freqtrade/freqtrade-strategies/tree/master/user_data/strategies/berlinguyinca&lt;/li&gt; 
 &lt;li&gt;https://github.com/xFFFFF/Gekko-Strategies&lt;/li&gt; 
 &lt;li&gt;https://github.com/sthewissen/Mynt/tree/master/src/Mynt.Core/Strategies&lt;/li&gt; 
 &lt;li&gt;https://github.com/Ekliptor/WolfBot/tree/master/src/Strategies&lt;/li&gt; 
 &lt;li&gt;https://github.com/Superalgos/Strategy-BTC-WeakHandsBuster&lt;/li&gt; 
 &lt;li&gt;https://github.com/Superalgos/Strategy-BTC-BB-Top-Bounce&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>github/opensource.guide</title>
      <link>https://github.com/github/opensource.guide</link>
      <description>&lt;p&gt;📚 Community guides for open source creators&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Source Guides&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/github/opensource.guide/actions&quot;&gt;&lt;img src=&quot;https://github.com/github/opensource.guide/workflows/GitHub%20Actions%20CI/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Open Source Guides (https://opensource.guide/) are a collection of resources for individuals, communities, and companies who want to learn how to run and contribute to an open source project.&lt;/p&gt; 
&lt;h2&gt;Background&lt;/h2&gt; 
&lt;p&gt;Open Source Guides were created and are curated by GitHub, along with input from outside community reviewers, but they are not exclusive to GitHub products. One reason we started this project is because we felt that there weren&#39;t enough resources for people creating open source projects.&lt;/p&gt; 
&lt;p&gt;Our goal is to aggregate community best practices, &lt;em&gt;not&lt;/em&gt; what GitHub (or any other individual or entity) thinks is best. Therefore, we try to use examples and quotations from others to illustrate our points.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This site is powered by &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. Check out our &lt;a href=&quot;https://raw.githubusercontent.com/github/opensource.guide/main/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; for ways to offer feedback and contribute.&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;Content is released under &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;CC-BY-4.0&lt;/a&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/github/opensource.guide/main/notices.md&quot;&gt;notices&lt;/a&gt; for complete details, including attribution guidelines, contribution terms, and software and third-party licenses and permissions.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;The initial release of these guides were authored by &lt;strong&gt;&lt;a href=&quot;https://github.com/nayafia&quot;&gt;@nayafia&lt;/a&gt;, &lt;a href=&quot;https://github.com/bkeepers&quot;&gt;@bkeepers&lt;/a&gt;, &lt;a href=&quot;https://github.com/stephbwills&quot;&gt;@stephbwills&lt;/a&gt;,&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://github.com/mlinksva&quot;&gt;@mlinksva&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;strong&gt;&lt;a href=&quot;https://github.com/aitchabee&quot;&gt;@aitchabee&lt;/a&gt;, &lt;a href=&quot;https://github.com/benbalter&quot;&gt;@benbalter&lt;/a&gt;, &lt;a href=&quot;https://github.com/brettcannon&quot;&gt;@brettcannon&lt;/a&gt;, &lt;a href=&quot;https://github.com/caabernathy&quot;&gt;@caabernathy&lt;/a&gt;, &lt;a href=&quot;https://github.com/CoralineAda&quot;&gt;@coralineada&lt;/a&gt;, &lt;a href=&quot;https://github.com/dmleong&quot;&gt;@dmleong&lt;/a&gt;, &lt;a href=&quot;https://github.com/ericholscher&quot;&gt;@ericholscher&lt;/a&gt;, &lt;a href=&quot;https://github.com/gr2m&quot;&gt;@gr2m&lt;/a&gt;, &lt;a href=&quot;https://github.com/janl&quot;&gt;@janl&lt;/a&gt;, &lt;a href=&quot;https://github.com/jessfraz&quot;&gt;@jessfraz&lt;/a&gt;, &lt;a href=&quot;https://github.com/joshsimmons&quot;&gt;@joshsimmons&lt;/a&gt;, &lt;a href=&quot;https://github.com/kfogel&quot;&gt;@kfogel&lt;/a&gt;, &lt;a href=&quot;https://github.com/kytrinyx&quot;&gt;@kytrinyx&lt;/a&gt;, &lt;a href=&quot;https://github.com/lee-dohm&quot;&gt;@lee-dohm&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikeal&quot;&gt;@mikeal&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;@mikemcquaid&lt;/a&gt;, &lt;a href=&quot;https://github.com/nathansobo&quot;&gt;@nathansobo&lt;/a&gt;, &lt;a href=&quot;https://github.com/nruff&quot;&gt;@nruff&lt;/a&gt;, &lt;a href=&quot;https://github.com/nsqe&quot;&gt;@nsqe&lt;/a&gt;, &lt;a href=&quot;https://github.com/orta&quot;&gt;@orta&lt;/a&gt;, &lt;a href=&quot;https://github.com/parkr&quot;&gt;@parkr&lt;/a&gt;, &lt;a href=&quot;https://github.com/shazow&quot;&gt;@shazow&lt;/a&gt;, &lt;a href=&quot;https://github.com/steveklabnik&quot;&gt;@steveklabnik&lt;/a&gt;,&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://github.com/wooorm&quot;&gt;@wooorm&lt;/a&gt;&lt;/strong&gt; for lending their valuable input and expertise leading up to the initial release, and to &lt;strong&gt;&lt;a href=&quot;https://github.com/sophshep&quot;&gt;@sophshep&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://github.com/jeejkang&quot;&gt;@jeejkang&lt;/a&gt;&lt;/strong&gt; for designing and illustrating the guides.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;While we&#39;ve got advice about running an open source project, we&#39;re not lawyers. Be sure to read our &lt;a href=&quot;https://raw.githubusercontent.com/github/opensource.guide/main/notices.md#legal-disclaimer&quot;&gt;disclaimer&lt;/a&gt; before diving in.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card&quot;&gt;GitHub Stats Card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins&quot;&gt;GitHub Extra Pins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card&quot;&gt;Top Languages Card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-week-stats&quot;&gt;Wakatime Week Stats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&quot;&gt;Themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;Customization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own-vercel-instance&quot;&gt;Deploy Yourself&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy-paste this into your markdown content, and that&#39;s it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub&#39;s username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Available ranks are S+ (top 1%), S (top 25%), A++ (top 45%), A+ (top 60%), and B+ (everyone). The values are calculated by using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cumulative_distribution_function&quot;&gt;cumulative distribution function&lt;/a&gt; using commits, contributions, issues, stars, pull requests, followers, and owned repositories. The implementation is can be investigated at &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/src/calculateRank.js&quot;&gt;src/calculateRank.js&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;To hide any specific stats, you can pass a query parameter &lt;code&gt;?hide=&lt;/code&gt; with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding private contributions count to total commits count&lt;/h3&gt; 
&lt;p&gt;You can add the count of all your private contributions to the total commits count by using the query parameter &lt;code&gt;?count_private=true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: If you are deploying this project yourself, the private contributions will be counted by default otherwise you need to chose to share your private contribution counts.&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;count_private=true&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;count_private=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;?theme=THEME_NAME&lt;/code&gt; parameter like so :-&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;![Anurag&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes :-&lt;/h4&gt; 
&lt;p&gt;dark, radical, merko, gruvbox, tokyonight, onedark, cobalt, synthwave, highcontrast, dracula&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;You can look at a preview for &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&quot;&gt;all available themes&lt;/a&gt; or checkout the &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js&quot;&gt;theme config file&lt;/a&gt; &amp;amp; &lt;strong&gt;you can also contribute new themes&lt;/strong&gt; if you like :D&lt;/p&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of your &lt;code&gt;Stats Card&lt;/code&gt; or &lt;code&gt;Repo Card&lt;/code&gt; however you want with URL params.&lt;/p&gt; 
&lt;h4&gt;Common Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;title_color&lt;/code&gt; - Card&#39;s title color &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;text_color&lt;/code&gt; - Body text color &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;icon_color&lt;/code&gt; - Icons color if available &lt;em&gt;(hex color)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bg_color&lt;/code&gt; - Card&#39;s background color &lt;em&gt;(hex color)&lt;/em&gt; &lt;strong&gt;or&lt;/strong&gt; a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_border&lt;/code&gt; - Hides the card&#39;s border &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;theme&lt;/code&gt; - name of the theme, choose from &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md&quot;&gt;all available themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cache_seconds&lt;/code&gt; - set the cache header manually &lt;em&gt;(min: 1800, max: 86400)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;locale&lt;/code&gt; - set the language in the card &lt;em&gt;(e.g. cn, de, es, etc.)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in bg_color option to render a gradient, the format of the gradient is :-&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note on cache: Repo cards have a default cache of 4 hours (14400 seconds) if the fork count &amp;amp; star count is less than 1k, otherwise, it&#39;s 2 hours (7200 seconds). Also, note that the cache is clamped to a minimum of 2 hours and a maximum of 24 hours&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Stats Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hides the specified items from stats &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_rank&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt; hides the rank and automatically resizes the card width&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;show_icons&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;include_all_commits&lt;/code&gt; - Count total commits instead of just the current year commits &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;count_private&lt;/code&gt; - Count private commits &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;line_height&lt;/code&gt; - Sets the line-height between text &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;disable_animations&lt;/code&gt; - Disables all animations in the card &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Repo Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;show_owner&lt;/code&gt; - Show the owner name of the repo &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Language Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide&lt;/code&gt; - Hide the languages specified from the card &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;layout&lt;/code&gt; - Switch between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;card_width&lt;/code&gt; - Set the card&#39;s width manually &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;langs_count&lt;/code&gt; - Show more languages on the card, between 1-10, defaults to 5 &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;exclude_repo&lt;/code&gt; - Exclude specified repositories &lt;em&gt;(Comma-separated values)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;:warning: &lt;strong&gt;Important:&lt;/strong&gt; Language names should be uri-escaped, as specified in &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding&quot;&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href=&quot;https://www.urlencoder.org/&quot;&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Wakatime Card Exclusive Options:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hide_title&lt;/code&gt; - &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;line_height&lt;/code&gt; - Sets the line-height between text &lt;em&gt;(number)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hide_progress&lt;/code&gt; - Hides the progress bar and percentage &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom_title&lt;/code&gt; - Sets a custom title for the card&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;layout&lt;/code&gt; - Switch between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_domain&lt;/code&gt; - Set a custom api domain for the card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&quot; alt=&quot;Readme Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization&quot;&gt;show_owner&lt;/a&gt; variable to include the repo&#39;s owner username&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true&quot; alt=&quot;Readme Card&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card shows a GitHub user&#39;s top languages which have used the most.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NOTE: Top Languages does not indicate my skill level or anything like that, it&#39;s a GitHub metric of which languages have the most code on GitHub. It&#39;s a new feature of github-readme-stats.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;?exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;?hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 10 (inclusive), and the default is 5.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Wakatime Week Stats&lt;/h1&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href=&quot;https://wakatime.com&quot;&gt;Wakatime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![willianrod&#39;s wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=willianrod)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&amp;amp;hide_progress=true&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&amp;amp;layout=compact&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;All Demos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes&quot;&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es&quot; alt=&quot;Anurag&#39;s GitHub stats&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515&quot; alt=&quot;Customized Card&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&quot; alt=&quot;Top Langs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wakatime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/wakatime?username=willianrod&quot; alt=&quot;willianrod&#39;s wakatime stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Quick Tip (Align The Repo Cards)&lt;/h3&gt; 
&lt;p&gt;You usually won&#39;t be able to layout the images side by side. To do that you can use this approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;&amp;lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&amp;gt;
  &amp;lt;img align=&quot;center&quot; src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href=&quot;https://github.com/anuraghazra/convoychat&quot;&amp;gt;
  &amp;lt;img align=&quot;center&quot; src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat&quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploy on your own Vercel instance&lt;/h2&gt; 
&lt;h4&gt;&lt;a href=&quot;https://youtu.be/n6d4KHSKqGk?t=107&quot;&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you don&#39;t have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;p&gt;NOTE: Since &lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats/pull/58&quot;&gt;#58&lt;/a&gt; we should be able to handle more than 5k requests and have no issues with downtime :D&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://vercel.com/button&quot; alt=&quot;Deploy to Vercel&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to &lt;a href=&quot;https://vercel.com/&quot;&gt;vercel.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/tct1wg.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/btd78j.jpeg&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Sign into GitHub and allow access to all repositories, if prompted&lt;/li&gt; 
 &lt;li&gt;Fork this repo&lt;/li&gt; 
 &lt;li&gt;Go back to your &lt;a href=&quot;https://vercel.com/dashboard&quot;&gt;Vercel dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Select &lt;code&gt;Import Project&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/qckos0.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Select &lt;code&gt;Import Git Repository&lt;/code&gt; &lt;img src=&quot;https://files.catbox.moe/pqub9q.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Select root and keep everything as is, just add your environment variable named PAT_1 (as shown), which will contain a personal access token (PAT), which you can easily create &lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;here&lt;/a&gt; (leave everything as is, just name it something, it can be anything you want) &lt;img src=&quot;https://files.catbox.moe/0ez4g7.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;Click deploy, and you&#39;re good to go. See your domains to use the API!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;:sparkling_heart: Support the project&lt;/h2&gt; 
&lt;p&gt;I open-source almost everything I can, and I try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and happy with it or just want to encourage me to continue creating stuff, there are few ways you can do it :-&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project :rocket:&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.me/anuraghazra&quot;&gt;&lt;img src=&quot;https://ionicabizau.github.io/badges/paypal.svg&quot; alt=&quot;paypal.me/anuraghazra&quot;&gt;&lt;/a&gt; - You can make one-time donations via PayPal. I&#39;ll probably buy a ~~coffee~~ tea. :tea:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! :heart:&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true&quot; alt=&quot;https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with :heart: and JavaScript.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>notion-enhancer/notion-enhancer</title>
      <link>https://github.com/notion-enhancer/notion-enhancer</link>
      <description>&lt;p&gt;an enhancer/customiser for the all-in-one productivity workspace notion.so&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt; notion-enhancer&lt;/h1&gt; 
&lt;p&gt;notion.so is a pretty awesome tool already, but there&#39;s always room for improvements. it might just be a preference, it might be something crucial to your setup, it might be something users have been asking for for a long time, or it might even be something you haven&#39;t realised you need yet - there&#39;s something that would make your user experience a lot better.&lt;/p&gt; 
&lt;p&gt;this package is a mod-loader for the desktop app, with custom colour theming and extra feature enhancements.&lt;/p&gt; 
&lt;p&gt;want to contribute? check out the &lt;a href=&quot;https://raw.githubusercontent.com/notion-enhancer/notion-enhancer/dev/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; and the &lt;a href=&quot;https://raw.githubusercontent.com/notion-enhancer/notion-enhancer/dev/DOCUMENTATION.md&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;for support, join the &lt;a href=&quot;https://discord.gg/sFWPXtA&quot;&gt;discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;supported desktop clients&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;the &lt;a href=&quot;https://notion.so/desktop&quot;&gt;official windows/mac releases&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;the arch linux AUR &lt;a href=&quot;https://aur.archlinux.org/packages/notion-app/&quot;&gt;notion-app&lt;/a&gt; package.&lt;/li&gt; 
 &lt;li&gt;the linux &lt;a href=&quot;https://github.com/jaredallard/notion-app&quot;&gt;notion-app&lt;/a&gt; installer.&lt;/li&gt; 
 &lt;li&gt;the linux &lt;a href=&quot;https://github.com/davidbailey00/notion-deb-builder&quot;&gt;notion-deb-builder&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;outdated notion versions (&amp;lt; 2.0.10) probably won&#39;t work.&lt;/p&gt; 
&lt;p&gt;mobile clients are not supported and due to system limitations/restrictions cannot be.&lt;/p&gt; 
&lt;p&gt;a chrome extension may be coming soon for web client support.&lt;/p&gt; 
&lt;h2&gt;installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;if you are updating from v0.7.0 or earlier,&lt;/strong&gt; things have changed, more information is available in this &lt;a href=&quot;https://raw.githubusercontent.com/notion-enhancer/notion-enhancer/dev/UPDATING.md&quot;&gt;update guide&lt;/a&gt;. please read that before following these instructions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;ensure that no notion windows/processes are running by ending all Notion processes in your task manager. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;CMD + ALT + ESC&lt;/code&gt; on mac and &lt;code&gt;CTRL + SHIFT + ESC&lt;/code&gt; on windows/linux to open task manager.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;install node.js&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;you may need to restart your computer.&lt;/li&gt; 
   &lt;li&gt;notion-enhancer will use node.js, you do not need to interact with it aside from downloading to install notion-enhancer.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;open your computer&#39;s terminal, &lt;strong&gt;not the node.js command prompt.&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;windows 10:&lt;/strong&gt; search in your start menu (click windows key or icon in bottom left of screen) for &lt;em&gt;&#39;cmd&#39;&lt;/em&gt; or &lt;em&gt;&#39;command prompt&#39;&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;mac:&lt;/strong&gt; search in spotlight (magnifying glass in top right of screen) for &lt;em&gt;&#39;terminal&#39;&lt;/em&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;type and enter the following line(s) based on your operating system, if there are multiple lines, make sure to enter them &lt;em&gt;one by one&lt;/em&gt; . 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;windows 10:&lt;/strong&gt; &lt;pre&gt;&lt;code&gt;npm i -g notion-enhancer
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;mac:&lt;/strong&gt; this may ask you to enter your password, instead of hiding your password with *** symbols, mac terminal hides it by making it invisible. simply type your password and click enter. &lt;pre&gt;&lt;code&gt;sudo chmod -R a+wr /usr/local/lib/node_modules
sudo chmod -R a+wr /usr/local/bin
sudo chmod -R a+wr /Applications/Notion.app/Contents/Resources
npm i -g notion-enhancer
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;debian/ubuntu, chromeOS, wsl (to modify the win10 app):&lt;/strong&gt; &lt;pre&gt;&lt;code&gt;bash curl -sL https://deb.nodesource.com setup_current.x | sudo -E bash -
sudo apt-get install -y nodejs
npm i -g notion-enhancer
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;arch linux, manjaro:&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;install the &lt;a href=&quot;https://aur.archlinux.org/packages/notion-enhancer&quot;&gt;aur package&lt;/a&gt; with your aur helper (e.g. &lt;code&gt;yay -S notion-enhancer&lt;/code&gt;).&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;command-line interface&lt;/h3&gt; 
&lt;p&gt;the enhancements should be automatically applied on installation and automatically removed on uninstallation.&lt;/p&gt; 
&lt;p&gt;on some platforms this may throw errors if done without elevated/admin permissions, though, so if it hasn&#39;t automatically installed you will still need to use these commands.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Usage:
  $ notion-enhancer &amp;lt;command&amp;gt; [options]

Commands:
  apply   : add enhancements to the notion app
  remove  : return notion to its pre-enhanced/pre-modded state
  check   : check the current state of the notion app

For more info, run any command with the `--help` flag:
  $ notion-enhancer apply --help
  $ notion-enhancer remove --help
  $ notion-enhancer check --help

Options:
  -y, --yes      : skip prompts (may overwrite data)
  -n, --no       : skip prompts (may cause failures)
  -d, --dev      : show detailed error messages (for debug purposes)
  -h, --help     : display usage information
  -v, --version  : display version number
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;faq&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;when will the update be out?&lt;/strong&gt; i code this in my free time, in-between my other commitments. there are no ETAs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;the themes aren&#39;t working?&lt;/strong&gt; if you pick a dark theme it will only be applied if notion is in dark mode, and if you pick a light theme it will only work if notion is in light mode. do &lt;code&gt;CMD/CTRL+SHIFT+L&lt;/code&gt; to toggle between them.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;is this against notion&#39;s terms of service? can i get in trouble for using it?&lt;/strong&gt; definitely not! i contacted their support team to check, and the response was awesome:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&quot;Thanks for taking the time to share this with us. Userscripts and userstyles are definitely cool ideas and would be helpful for many users! ... I&#39;ll also share this with the rest of the team to take to heart for future improvements.&quot;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;how do i uninstall the enhancer?&lt;/strong&gt; run &lt;code&gt;npm remove -g notion-enhancer&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;features&lt;/h2&gt; 
&lt;p&gt;most of the enhancer&#39;s functionality is split into configurable enhancement modules, but some basic improvements necessary for things to work are built in by values:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the notion:// url scheme/protocol is patched to work on linux.&lt;/li&gt; 
 &lt;li&gt;a tray/menubar icon: links relevant to the enhancer + buttons to manage notion windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;once applied, modules can be configured via the graphical menu, which is opened from the tray/menubar icon or with &lt;code&gt;OPTION/ALT+E&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97819046-34e8b600-1cfa-11eb-8fa6-a3ad5374cd0b.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;currently all modules come pre-installed for technical reasons, security assurance, and ease-of-use. these include:&lt;/p&gt; 
&lt;h3&gt;notion-enhancer core&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #core&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; the cli, modloader, menu, &amp;amp; tray.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | extended description | type | values/defaults | platform-specific details | | ----------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- | -------------------------- | ------------------------- | | auto-resolve theme conflicts | when a theme is enabled any other themes of the same mode (light/dark) will be disabled. | toggle | no | | | hide app on open | app can be made visible by clicking the tray icon or using the hotkey. | toggle | no | | | auto-maximise windows | whenever a window is un-hidden or is created it will be maximised. | toggle | no | | | close window to the tray | pressing the × close button will hide the app instead of quitting it. it can be re-shown by clicking the tray icon or using the hotkey. | toggle | yes | | | integrated titlebar | replace the native titlebar with buttons inset into the app. | toggle | yes | macOS: forced on | | tiling window manager mode | completely remove the close/minimise/maximise buttons - this is for a special type of window manager. if you don&#39;t understand it, don&#39;t use it. | toggle | no | macOS: forced off | | window display hotkey | used to toggle hiding/showing all app windows. | &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/accelerator.md&quot;&gt;accelerator&lt;/a&gt; input | &lt;code&gt;CommandOrControl+Shift+A&lt;/code&gt; | | | open enhancements menu hotkey | used to toggle opening/closing this menu while notion is focused. | &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/accelerator.md&quot;&gt;accelerator&lt;/a&gt; input | &lt;code&gt;Alt+E&lt;/code&gt; | | | values/defaults page id/url | every new tab/window that isn&#39;t opening a url via the notion:// protocol will load this page. to get a page link from within the app, go to the triple-dot menu and click &quot;copy link&quot;. leave blank to just load the last page you opened. | text input | &lt;code&gt;Alt+E&lt;/code&gt; | |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97819249-7a59b300-1cfb-11eb-99fa-de945fe8e3d9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;tabs&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #core #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; have multiple notion pages open in a single window.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | type | values/defaults | | --------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- | | tab select modifier (key+1, +2, +3, ... +9 and key+left/right arrows) | select | &lt;code&gt;Alt&lt;/code&gt;, &lt;code&gt;Command&lt;/code&gt;, &lt;code&gt;Control&lt;/code&gt;, &lt;code&gt;Super&lt;/code&gt;, &lt;code&gt;Alt+Shift&lt;/code&gt;, &lt;code&gt;Command+Shift&lt;/code&gt;, &lt;code&gt;Control+Shift&lt;/code&gt;, &lt;code&gt;Super+Shift&lt;/code&gt; | | new tab keybinding | &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/accelerator.md&quot;&gt;accelerator&lt;/a&gt; input | &lt;code&gt;CommandOrControl+T&lt;/code&gt; | | close tab keybinding | &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/accelerator.md&quot;&gt;accelerator&lt;/a&gt; input | &lt;code&gt;CommandOrControl+W&lt;/code&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97821456-9dd62b00-1d06-11eb-8c3a-e9f77bbd740e.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;tweaks&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #core #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; common style/layout changes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | extended description | type | values/defaults | platform-specific details | | ---------------------------- | ---------------------------------------------------------------------------------------------------------- | ------------ | --------------- | ------------------------- | | height of frameless dragarea | the rectangle added at the top of a window in &quot;integrated titlebar&quot; mode, used to drag/move the window. | number input | 15 | macOS: forced to 0 | | width to wrap columns at | the size in pixels below which in-page columns are resized to appear full width so content isn&#39;t squished. | number input | 600 | | | integrated scrollbars | use scrollbars that fit better into notion&#39;s ui instead of the default chrome ones. | toggle | yes | | | snappy transitions | | toggle | no | | | thicker bold text | | toggle | yes | | | more readable line spacing | | toggle | no | | | hide help button | | toggle | no | |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97819829-1638ee00-1cff-11eb-80c6-f270c2ba0f37.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;always on top&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; add an arrow/button to show the notion window on top of other windows even if it&#39;s not focused.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820478-79784f80-1d02-11eb-9e32-caac4563d8f0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;bracketed links&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; render links surrounded with [[brackets]] instead of underlined.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/arecsu/&quot;&gt;arecsu&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820501-9f9def80-1d02-11eb-8ad8-b1ddf1ed9599.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;bypass preview&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; go straight to the normal full view when opening a page.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;calendar scroll&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; add a button to scroll down to the current week in fullpage/infinite-scroll calendars.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820611-fe636900-1d02-11eb-8f78-0536103e25aa.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;cherry cola&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #dark&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; a delightfully plummy, cherry cola flavored theme.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/runargs&quot;&gt;runargs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97819898-9fe8bb80-1cff-11eb-846f-1a66e0302ebd.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;custom inserts&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; link files for small client-side tweaks. (not sure how to do something? check out the &lt;a href=&quot;https://github.com/notion-enhancer/tweaks&quot;&gt;tweaks&lt;/a&gt; collection.)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | type | | --------------------- | ---- | | css insert | file | | client-side js insert | file |&lt;/p&gt; 
&lt;h3&gt;dark+&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #dark&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; a vivid-colour near-black theme.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | type | values/defaults | | -------------- | ----- | ------------------ | | primary colour | color | &lt;code&gt;rgb(177, 24, 24)&lt;/code&gt; |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820632-19ce7400-1d03-11eb-85a9-87f6d957dc96.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;dracula&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #dark&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; a theme based on the popular dracula color palette originally by zeno rocha and friends.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dracula/&quot;&gt;dracula&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820175-04f0e100-1d01-11eb-9ede-b6e033a28cbc.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;emoji sets&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; pick from a variety of emoji styles to use.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | type | values/defaults | | ------ | ------ | --------------------------------------------------------------------------------------------------------------- | | style | select | twitter, apple, google, microsoft, samsung, whatsapp, facebook, joypixels, openmoji, emojidex, lg, htc, mozilla |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820652-3f5b7d80-1d03-11eb-80a6-34089b946711.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;focus mode&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; hide the titlebar/menubar if the sidebar is closed (will be shown on hover).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/arecsu/&quot;&gt;arecsu&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | extended description | type | values/defaults | | --------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------ | --------------- | | add padding to bottom of the page | will only take effect when the sidebar is hidden. aims to make the canvas as symmetrical/consistent as possible: if there is empty space on 3 sides, the 4th should follow. | toggle | on |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820337-da535800-1d01-11eb-9df5-55567cba2cc4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;font chooser&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; customize fonts. for each option, type in the name of the font you would like to use, or leave it blank to not change anything.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/torchatlas&quot;&gt;torchatlas&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | type | | -------------------- | ---------- | | sans-serif (inc. ui) | text input | | serif | text input | | monospace | text input | | code | text input |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820678-61ed9680-1d03-11eb-8f9f-54c1c5faf25e.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;gameish&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #dark&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; a purple, &quot;gamer-styled&quot; theme with a blocky-font.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://reddit.com/user/LVL100ShrekCultist/&quot;&gt;LVL100ShrekCultist&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820696-75006680-1d03-11eb-8046-c3cb871ad34c.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;littlepig dark&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #dark&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; a purple monospaced theme using emojis and colourful text.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://www.reddit.com/user/Lizishan/&quot;&gt;Lizishan&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820718-919c9e80-1d03-11eb-9749-e04faef82e2d.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;littlepig light&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #light&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; a bright monospaced theme using emojis and colourful text.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://www.reddit.com/user/Lizishan/&quot;&gt;Lizishan&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820868-446cfc80-1d04-11eb-80ba-48cbedd62ed1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;material ocean&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #dark&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; an oceanic colour palette.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/blacksuan19&quot;&gt;blacksuan19&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820253-6d3fc280-1d01-11eb-86d1-9932b364bad8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;neutral&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #dark&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; smoother colours and fonts, designed to be more pleasing to the eye.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/arecsu/&quot;&gt;arecsu&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97821029-fad0e180-1d04-11eb-9bad-2c76e9fa7613.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;night shift&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension #theme&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; sync dark/light theme with the system (overrides normal theme setting).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;pastel dark&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #theme #dark&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; a true dark theme with a hint of pastel.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://reddit.com/user/zenith_illinois/&quot;&gt;zenith_illinois&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820893-60709e00-1d04-11eb-8d52-55ab44000786.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;property layout&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; auto-collapse page properties that usually push down page content.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/alexander-kazakov/&quot;&gt;alexander-kazakov&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820916-81d18a00-1d04-11eb-8e07-b7519590157a.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;right-to-left&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; enables auto rtl/ltr text direction detection.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/obahareth/&quot;&gt;obahareth&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820953-a7f72a00-1d04-11eb-98c0-6ad83d097682.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;scroll to top&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; add an arrow above the help button to scroll back to the top of a page.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/CloudHill/&quot;&gt;CloudHill&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| option | type | values/defaults | | --------------------------------------- | ------------ | --------------- | | smooth scrolling | toggle | on | | distance scrolled until button is shown | number input | 50 | | unit to measure distance with | select | percent, pixels |&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820445-4c2ba180-1d02-11eb-9d1a-911bca266f7f.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;weekly view&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; calendar views named &quot;weekly&quot; will show only the 7 days of this week.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/adihd/&quot;&gt;adihd&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97820985-bf361780-1d04-11eb-9e2a-786a7c37477d.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;word counter&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tags:&lt;/strong&gt; #extension&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;description:&lt;/strong&gt; add page details: word/character/sentence/block count &amp;amp; speaking/reading times.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; &lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;dragonwocky&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/16874139/97821003-d37a1480-1d04-11eb-8aaa-9e5dfea495eb.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TarasokUA/&quot;&gt;@TarasokUA&lt;/a&gt; wrote the first versions of this in python, in early 2020. a couple months after I (&lt;a href=&quot;https://github.com/dragonwocky/&quot;&gt;@dragonwocky&lt;/a&gt;) picked the project up, at first extending upon the original base and later moving to the javascript module system.&lt;/p&gt; 
&lt;p&gt;the enhancer wouldn&#39;t be anything near to what it is now though without interested community members testing, coding and ideating features - some are listed as &lt;a href=&quot;https://github.com/notion-enhancer/notion-enhancer/graphs/contributors&quot;&gt;contributors&lt;/a&gt; here on github, but many more have been helping out on discord and in emails.&lt;/p&gt; 
&lt;p&gt;individual modules have their original authors attributed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mwittrien/BetterDiscordAddons</title>
      <link>https://github.com/mwittrien/BetterDiscordAddons</link>
      <description>&lt;p&gt;A series of plugins and themes for BetterDiscord.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://github.com/rauenzi/BetterDiscordApp&quot;&gt;BetterDiscord&lt;/a&gt; Addons &lt;a href=&quot;https://paypal.me/MircoWittrien&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Paypal-Donate!-%23003087.svg?logo=paypal&amp;amp;style=flat&quot; alt=&quot;Paypal&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://patreon.com/MircoWittrien&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Patreon-Support!-%23F96854.svg?logo=patreon&amp;amp;style=flat&quot; alt=&quot;Patreon&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;A series of plugins and themes for BetterDiscord. If you got any questions hit me up on Discord DevilBro#4401&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/mwittrien/BetterDiscordAddons/tree/master/Plugins/&quot;&gt;Plugins&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/mwittrien/BetterDiscordAddons/tree/master/Themes/&quot;&gt;Themes&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Copyright (C) 2020 Mirco Wittrien&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Working-Title-MSFS-Mods/fspackages</title>
      <link>https://github.com/Working-Title-MSFS-Mods/fspackages</link>
      <description>&lt;p&gt;Working Title FS Packages&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Working Title MSFS Mods&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/Working-Title-MSFS-Mods/fspackages/total?style=flat-square&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors-anon/Working-Title-MSFS-Mods/fspackages?style=flat-square&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/Fa6w2xK&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/750764704175226992.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;This is the home of mods for the new Microsoft Flight Simulator from the Working Title team. We have a number of projects either in the works or planned. Here is the status of what is currently being worked on and links to downloadable releases.&lt;/p&gt; 
&lt;p&gt;Track Updates and Progress on Discord &lt;a href=&quot;https://discord.com/invite/Fa6w2xK&quot;&gt;https://discord.com/invite/Fa6w2xK&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Project | Description | Current Version | Documentation --------|-------------|-----------------|-------------- CJ4 | OPEN BETA - Performance and avionics improvements for the Citation CJ4 | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases/tag/cj4-v0.10.2&quot;&gt;v0.10.2&lt;/a&gt; | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/tree/main/docs/workingtitle-cj4&quot;&gt;docs&lt;/a&gt; G1000 | Fixes and enhancements for the stock G1000 avionics package | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases/tag/g1000-v0.3.4&quot;&gt;v0.3.4&lt;/a&gt; | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/tree/main/docs/workingtitle-g1000&quot;&gt;docs&lt;/a&gt; G3000 | Fixes and enhancements for the stock G3000 avionics package | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases/tag/g3000-v0.4.0&quot;&gt;v0.4.0&lt;/a&gt; | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/tree/main/docs/workingtitle-g3000&quot;&gt;docs&lt;/a&gt; GX | Fixes and enhancements for the stock G3X Touch avionics package | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/releases/tag/gx-v0.1.0-dev5&quot;&gt;v0.1.0-dev5&lt;/a&gt; | &lt;a href=&quot;https://github.com/Working-Title-MSFS-Mods/fspackages/tree/main/docs/workingtitle-gx&quot;&gt;docs&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gothinkster/realworld</title>
      <link>https://github.com/gothinkster/realworld</link>
      <description>&lt;p&gt;&quot;The mother of all demo apps&quot; — Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more 🏅&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/realworld.png&quot; alt=&quot;RealWorld Example Applications&quot;&gt;&lt;/h1&gt; 
&lt;h3&gt;Stay on the bleeding edge — &lt;a href=&quot;https://gitter.im/realworld-dev/main&quot;&gt;join our Gitter room!&lt;/a&gt; 🎉&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/gothinkster/realworld&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/gothinkster/realworld.svg&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/realworld-dev/main&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/realworld-dev/main.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/gothinkster&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/gothinkster.svg?style=social&amp;amp;label=Follow&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;See how &lt;em&gt;the exact same&lt;/em&gt; Medium.com clone (called &lt;a href=&quot;https://demo.realworld.io&quot;&gt;Conduit&lt;/a&gt;) is built using any of our supported &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#frontends&quot;&gt;frontends&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#backends&quot;&gt;backends&lt;/a&gt;. Yes, you can mix and match them, because &lt;strong&gt;they all adhere to the same &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec/&quot;&gt;API spec&lt;/a&gt;&lt;/strong&gt; 😮😎&lt;/h3&gt; 
&lt;p&gt;While most &quot;todo&quot; demos provide an excellent cursory glance at a framework&#39;s capabilities, they typically don&#39;t convey the knowledge &amp;amp; perspective required to actually build &lt;em&gt;real&lt;/em&gt; applications with it.&lt;/p&gt; 
&lt;p&gt;RealWorld solves this by allowing you to choose any frontend (React, Angular 2, &amp;amp; more) and any backend (Node, Django, &amp;amp; more) and see how they power a real world, beautifully designed fullstack app called &quot;&lt;a href=&quot;https://demo.realworld.io&quot;&gt;Conduit&lt;/a&gt;&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read the &lt;a href=&quot;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&quot;&gt;full blog post announcing RealWorld on Medium.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;Frontends&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Sorted by popularity on Fri Jan 29 2021&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 🥇 | 🥈 | 🥉 | | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/gothinkster/react-redux-realworld-example-app&quot;&gt;&lt;strong&gt;React / Redux&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/react-redux-realworld-example-app/master/project-logo.png&quot; alt=&quot;React / Redux&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/react-redux-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/react-redux-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/angular-realworld-example-app&quot;&gt;&lt;strong&gt;Angular&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/angular2-realworld-example-app/master/logo.png&quot; alt=&quot;Angular&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/angular-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/angular-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/vue-realworld-example-app&quot;&gt;&lt;strong&gt;Vue&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/vue-realworld-example-app/blob/master/static/rwv-logo.png&quot; alt=&quot;Vue&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/vue-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/vue-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/rtfeldman/elm-spa-example&quot;&gt;&lt;strong&gt;Elm&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/556934/25448178/3e7dc5c0-2a7d-11e7-8069-06da5169dae6.png&quot; alt=&quot;Elm&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/rtfeldman/elm-spa-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/rtfeldman/elm-spa-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/react-mobx-realworld-example-app&quot;&gt;&lt;strong&gt;React / MobX&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/react-mobx-realworld-example-app/master/project-logo.png&quot; alt=&quot;React / MobX&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/react-mobx-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/react-mobx-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/sveltejs/realworld&quot;&gt;&lt;strong&gt;Svelte / Sapper&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/sveltejs/realworld/blob/master/logo.png&quot; alt=&quot;Svelte / Sapper&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/sveltejs/realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/sveltejs/realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/thomashoneyman/purescript-halogen-realworld&quot;&gt;&lt;strong&gt;PureScript + Halogen&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/thomashoneyman/purescript-halogen-realworld/main/assets/logo.png&quot; alt=&quot;PureScript + Halogen&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/thomashoneyman/purescript-halogen-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/thomashoneyman/purescript-halogen-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/jacekschae/conduit&quot;&gt;&lt;strong&gt;ClojureScript + re-frame&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/556934/25448267/85369fdc-2a7d-11e7-9613-ab5ce5e1800f.png&quot; alt=&quot;ClojureScript + re-frame&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/jacekschae/conduit.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/jacekschae/conduit.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/stefanoslig/angular-ngrx-nx-realworld-example-app&quot;&gt;&lt;strong&gt;Angular + ngrx + nx&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/stefanoslig/angular-ngrx-nx-realworld-example-app/master/logo.png&quot; alt=&quot;Angular + ngrx + nx&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/stefanoslig/angular-ngrx-nx-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/stefanoslig/angular-ngrx-nx-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/angularjs-realworld-example-app&quot;&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/angularjs-realworld-example-app/master/project-logo.png&quot; alt=&quot;AngularJS&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/angularjs-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/angularjs-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/jetli/rust-yew-realworld-example-app&quot;&gt;&lt;strong&gt;Rust + Yew + WebAssembly&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/jetli/rust-yew-realworld-example-app/master/logo.png&quot; alt=&quot;Rust + Yew + WebAssembly&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/jetli/rust-yew-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/jetli/rust-yew-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/reck1ess/next-realworld-example-app&quot;&gt;&lt;strong&gt;Next.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/reck1ess/next-realworld-example-app/master/project-logo.png&quot; alt=&quot;Next.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/reck1ess/next-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/reck1ess/next-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/aurelia-realworld-example-app&quot;&gt;&lt;strong&gt;Aurelia&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/aurelia-realworld-example-app/master/logo.png&quot; alt=&quot;Aurelia&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/aurelia-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/aurelia-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/ember-realworld&quot;&gt;&lt;strong&gt;Ember.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/ember-realworld/master/logo.png&quot; alt=&quot;Ember.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/ember-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/ember-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/web-components-realworld-example-app&quot;&gt;&lt;strong&gt;Vanilla JS Web Components&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/556934/26126314/021150f8-3a3a-11e7-87bd-7bfc7616f6f8.png&quot; alt=&quot;Vanilla JS Web Components&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/web-components-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/web-components-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/apprun-realworld-example-app&quot;&gt;&lt;strong&gt;AppRun&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/apprun-realworld-example-app/blob/master/logo.png&quot; alt=&quot;AppRun&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/apprun-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/apprun-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/seed-rs/seed-rs-realworld&quot;&gt;&lt;strong&gt;Seed&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/seed-rs/seed-rs-realworld/master/logo.png&quot; alt=&quot;Seed&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/seed-rs/seed-rs-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/seed-rs/seed-rs-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/jonasbuntinx/purescript-react-realworld&quot;&gt;&lt;strong&gt;PureScript + React&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/jonasbuntinx/purescript-react-realworld/master/assets/logo.png&quot; alt=&quot;PureScript + React&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/jonasbuntinx/purescript-react-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/jonasbuntinx/purescript-react-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/clojurescript-keechma-realworld-example-app&quot;&gt;&lt;strong&gt;ClojureScript + Keechma&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/clojurescript-keechma-realworld-example-app/master/logo.png&quot; alt=&quot;ClojureScript + Keechma&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/clojurescript-keechma-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/clojurescript-keechma-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/hcavalieri/stencil-realworld-app&quot;&gt;&lt;strong&gt;Stencil.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/hcavalieri/stencil-realworld-app/blob/master/logo.png&quot; alt=&quot;Stencil.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/hcavalieri/stencil-realworld-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/hcavalieri/stencil-realworld-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/mutoe/vue3-realworld-example-app&quot;&gt;&lt;strong&gt;Vue3 + Vite&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mutoe/vue3-realworld-example-app/master/logo.png&quot; alt=&quot;Vue3 + Vite&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/mutoe/vue3-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/mutoe/vue3-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/kwasniew/hyperapp-realworld-example-app&quot;&gt;&lt;strong&gt;Hyperapp 1&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kwasniew/hyperapp-realworld-example-app/master/logo.png&quot; alt=&quot;Hyperapp 1&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/kwasniew/hyperapp-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/kwasniew/hyperapp-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/ryansolid/solid-realworld&quot;&gt;&lt;strong&gt;Solid.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/ryansolid/solid-realworld/master/logo.png&quot; alt=&quot;Solid.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/ryansolid/solid-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/ryansolid/solid-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/dojo-realworld-example-app&quot;&gt;&lt;strong&gt;Dojo&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/dojo-realworld-example-app/master/logo.png&quot; alt=&quot;Dojo&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/dojo-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/dojo-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/devJang/nuxt-realworld&quot;&gt;&lt;strong&gt;Nuxt.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/devJang/nuxt-realworld/master/logo.png&quot; alt=&quot;Nuxt.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/devJang/nuxt-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/devJang/nuxt-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/ecomfe/san-realworld-app&quot;&gt;&lt;strong&gt;San&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/ecomfe/san-realworld-app/master/logo.png&quot; alt=&quot;San&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/ecomfe/san-realworld-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/ecomfe/san-realworld-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/iq3addLi/riot_v4_realworld_example_app&quot;&gt;&lt;strong&gt;Riot.js v4&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/iq3addLi/riot_v4_realworld_example_app/master/logo.png&quot; alt=&quot;Riot.js v4&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/iq3addLi/riot_v4_realworld_example_app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/iq3addLi/riot_v4_realworld_example_app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/cartonalexandre/imba-realworld-example-app&quot;&gt;&lt;strong&gt;Imba&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/cartonalexandre/imba-realworld-example-app/master/logo.png&quot; alt=&quot;Imba&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/cartonalexandre/imba-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/cartonalexandre/imba-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/neomjs/neomjs-realworld-example-app&quot;&gt;&lt;strong&gt;neo.mjs&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld-starter-kit/master/logo.png&quot; alt=&quot;neo.mjs&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/neomjs/neomjs-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/neomjs/neomjs-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/crizmas-mvc-realworld-example-app&quot;&gt;&lt;strong&gt;Crizmas MVC&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/crizmas-mvc-realworld-example-app/master/crizmas.png&quot; alt=&quot;Crizmas MVC&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/crizmas-mvc-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/crizmas-mvc-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/JoeyMckenzie/BlazorConduit&quot;&gt;&lt;strong&gt;Blazor WebAssembly&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/JoeyMckenzie/BlazorConduit/master/realworld-logo.png&quot; alt=&quot;Blazor WebAssembly&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/JoeyMckenzie/BlazorConduit.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/JoeyMckenzie/BlazorConduit.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/rlander/conduit&quot;&gt;&lt;strong&gt;Hoplon + shadow-cljs&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/rlander/conduit/master/logo.png&quot; alt=&quot;Hoplon + shadow-cljs&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/rlander/conduit.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/rlander/conduit.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/mutoe/preact-realworld-example-app&quot;&gt;&lt;strong&gt;Preact&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mutoe/preact-realworld-example-app/master/logo.png&quot; alt=&quot;Preact&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/mutoe/preact-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/mutoe/preact-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/apapacy/realworld-riotjs-effector-universal-hot&quot;&gt;&lt;strong&gt;Riot.js + Universal + Effector&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld-starter-kit/master/logo.png&quot; alt=&quot;Riot.js + Universal + Effector&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/apapacy/realworld-riotjs-effector-universal-hot.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/apapacy/realworld-riotjs-effector-universal-hot.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/iq3addLi/riot_realworld_example_app&quot;&gt;&lt;strong&gt;Riot.js v3&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/iq3addLi/riot_realworld_example_app/master/logo.png&quot; alt=&quot;Riot.js v3&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/iq3addLi/riot_realworld_example_app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/iq3addLi/riot_realworld_example_app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/markjackmilian/bridge.spaf-realworld-app&quot;&gt;&lt;strong&gt;Bridge.Spaf&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/markjackmilian/bridge.spaf-realworld-app/master/logo.png&quot; alt=&quot;Bridge.Spaf&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/markjackmilian/bridge.spaf-realworld-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/markjackmilian/bridge.spaf-realworld-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Work In Progress: &lt;strong&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld/issues/6&quot;&gt;Implement GraphQL + Apollo/Relay for the Node + React codebases&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/61&quot;&gt;🖥 🔧 ClojureScript&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/69&quot;&gt;🖥 🔧 Mithril&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/143&quot;&gt;Angular 4+ / MobX&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/147&quot;&gt;AngularJS 1.2 &lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/152&quot;&gt;Vanilla Backbone.js&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/162&quot;&gt;Ractive&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/171&quot;&gt;Quasar framework&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/191&quot;&gt;Blazor&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/196&quot;&gt;ReasonReact (ReasonML)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/198&quot;&gt;$mol&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/204&quot;&gt;Surplus wip&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/215&quot;&gt;Slim.js&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/274&quot;&gt;Typescript + Web Components&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Backends&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Sorted by popularity on Fri Jan 29 2021&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 🥇 | 🥈 | 🥉 | | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/gothinkster/node-express-realworld-example-app&quot;&gt;&lt;strong&gt;Node / Express&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/node-express-realworld-example-app/master/project-logo.png&quot; alt=&quot;Node / Express&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/node-express-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/node-express-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/golang-gin-realworld-example-app&quot;&gt;&lt;strong&gt;Go + Gin&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/golang-gin-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Go + Gin&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/golang-gin-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/golang-gin-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/lujakob/nestjs-realworld-example-app&quot;&gt;&lt;strong&gt;NestJS + TypeORM/Prisma&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/lujakob/nestjs-realworld-example-app/blob/master/project-logo.png&quot; alt=&quot;NestJS + TypeORM/Prisma&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/lujakob/nestjs-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/lujakob/nestjs-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/aspnetcore-realworld-example-app&quot;&gt;&lt;strong&gt;ASP.NET Core&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/aspnetcore-realworld-example-app/master/logo.png&quot; alt=&quot;ASP.NET Core&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/aspnetcore-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/aspnetcore-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/django-realworld-example-app&quot;&gt;&lt;strong&gt;Django&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/django-realworld-example-app/master/project-logo.png&quot; alt=&quot;Django&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/django-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/django-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/laravel-realworld-example-app&quot;&gt;&lt;strong&gt;Laravel&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/laravel-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Laravel&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/laravel-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/laravel-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/elixir-phoenix-realworld-example-app&quot;&gt;&lt;strong&gt;Elixir + Phoenix&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/elixir-phoenix-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Elixir + Phoenix&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/elixir-phoenix-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/elixir-phoenix-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/spring-boot-realworld-example-app&quot;&gt;&lt;strong&gt;Spring&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/spring-boot-realworld-example-app/raw/master/example-logo.png&quot; alt=&quot;Spring&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/spring-boot-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/spring-boot-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/flask-realworld-example-app&quot;&gt;&lt;strong&gt;Flask&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/flask-realworld-example-app/master/image.png&quot; alt=&quot;Flask&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/flask-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/flask-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/TatriX/realworld-rust-rocket&quot;&gt;&lt;strong&gt;Rust / Rocket&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/TatriX/realworld-rust-rocket/master/logo.png&quot; alt=&quot;Rust / Rocket&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/TatriX/realworld-rust-rocket.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/TatriX/realworld-rust-rocket.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/rails-realworld-example-app&quot;&gt;&lt;strong&gt;Rails&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/rails-realworld-example-app/master/project-logo.png&quot; alt=&quot;Rails&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/rails-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/rails-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/slim-php-realworld-example-app&quot;&gt;&lt;strong&gt;Slim&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/slim-php-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Slim&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/slim-php-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/slim-php-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/kotlin-spring-realworld-example-app&quot;&gt;&lt;strong&gt;Kotlin / Spring&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/kotlin-spring-realworld-example-app/master/kotlin-spring.png&quot; alt=&quot;Kotlin / Spring&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/kotlin-spring-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/kotlin-spring-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/xesina/golang-echo-realworld-example-app&quot;&gt;&lt;strong&gt;Go / Echo&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/xesina/golang-echo-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Go / Echo&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/xesina/golang-echo-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/xesina/golang-echo-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/err0r500/go-realworld-clean&quot;&gt;&lt;strong&gt;Go Clean Architecture&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld-starter-kit/master/logo.png&quot; alt=&quot;Go Clean Architecture&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/err0r500/go-realworld-clean.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/err0r500/go-realworld-clean.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/koa-knex-realworld-example&quot;&gt;&lt;strong&gt;Koa / Knex&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/koa-knex-realworld-example/raw/master/logo.png&quot; alt=&quot;Koa / Knex&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/koa-knex-realworld-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/koa-knex-realworld-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/furkan3ayraktar/clojure-polylith-realworld-example-app&quot;&gt;&lt;strong&gt;Clojure / Polylith&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/furkan3ayraktar/clojure-polylith-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Clojure / Polylith&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/furkan3ayraktar/clojure-polylith-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/furkan3ayraktar/clojure-polylith-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/anishkny/realworld-dynamodb-lambda&quot;&gt;&lt;strong&gt;Serverless AWS Lambda DynamoDB&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/anishkny/realworld-dynamodb-lambda/blob/master/lambda-node-logo.png&quot; alt=&quot;Serverless AWS Lambda DynamoDB&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/anishkny/realworld-dynamodb-lambda.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/anishkny/realworld-dynamodb-lambda.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/tzemanovic/haskell-yesod-realworld-example-app&quot;&gt;&lt;strong&gt;Haskell / Yesod&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/tzemanovic/haskell-yesod-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Haskell / Yesod&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/tzemanovic/haskell-yesod-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/tzemanovic/haskell-yesod-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/scala-play-realworld-example-app&quot;&gt;&lt;strong&gt;Scala &amp;amp; Play Framework&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/scala-play-realworld-example-app/blob/master/logo.png&quot; alt=&quot;Scala &amp;amp; Play Framework&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/scala-play-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/scala-play-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/gcp-datastore-cloud-functions-realworld-example-app&quot;&gt;&lt;strong&gt;GCP Cloud Functions + Datastore&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/gcp-datastore-cloud-functions-realworld-example-app/raw/master/logo.png&quot; alt=&quot;GCP Cloud Functions + Datastore&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/gcp-datastore-cloud-functions-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/gcp-datastore-cloud-functions-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/dnikolovv/dev-adventures-realworld&quot;&gt;&lt;strong&gt;Functional ASP.NET Core&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/dnikolovv/dev-adventures-realworld/raw/master/logo.png&quot; alt=&quot;Functional ASP.NET Core&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/dnikolovv/dev-adventures-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/dnikolovv/dev-adventures-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/cakephp-realworld-example-app&quot;&gt;&lt;strong&gt;CakePHP&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/cakephp-realworld-example-app/raw/master/logo.png&quot; alt=&quot;CakePHP&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/cakephp-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/cakephp-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/Rudge/kotlin-javalin-realworld-example-app&quot;&gt;&lt;strong&gt;Kotlin + Javalin + Exposed&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Rudge/kotlin-javalin-realworld-example-app/master/logo.png&quot; alt=&quot;Kotlin + Javalin + Exposed&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/Rudge/kotlin-javalin-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/Rudge/kotlin-javalin-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/moleculer-node-realworld-example-app&quot;&gt;&lt;strong&gt;Moleculer&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/moleculer-node-realworld-example-app/blob/master/rw-logo.png&quot; alt=&quot;Moleculer&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/moleculer-node-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/moleculer-node-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/fsharp-realworld-example-app&quot;&gt;&lt;strong&gt;F#&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/fsharp-realworld-example-app/blob/master/logo.png&quot; alt=&quot;F#&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/fsharp-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/fsharp-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/hapijs-realworld-example-app&quot;&gt;&lt;strong&gt;Hapi.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/hapijs-realworld-example-app/blob/master/.github/project-logo.png&quot; alt=&quot;Hapi.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/hapijs-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/hapijs-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/diegocamara/realworld-api-quarkus&quot;&gt;&lt;strong&gt;Java Quarkus&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/diegocamara/realworld-api-quarkus/master/quarkus-logo.png&quot; alt=&quot;Java Quarkus&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/diegocamara/realworld-api-quarkus.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/diegocamara/realworld-api-quarkus.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/alisabzevari/kotlin-http4k-realworld-example-app&quot;&gt;&lt;strong&gt;Kotlin + http4k&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/alisabzevari/kotlin-http4k-realworld-example-app/master/logo.png&quot; alt=&quot;Kotlin + http4k&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/alisabzevari/kotlin-http4k-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/alisabzevari/kotlin-http4k-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/dragneelfps/realworld-kotlin-ktor&quot;&gt;&lt;strong&gt;Kotlin + Ktor&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/dragneelfps/realworld-kotlin-ktor/master/logo.png&quot; alt=&quot;Kotlin + Ktor&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/dragneelfps/realworld-kotlin-ktor.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/dragneelfps/realworld-kotlin-ktor.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/devinivy/hapipal-realworld-example-app&quot;&gt;&lt;strong&gt;Node / hapi pal&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/devinivy/hapipal-realworld-example-app/blob/master/.github/logo.png&quot; alt=&quot;Node / hapi pal&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/devinivy/hapipal-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/devinivy/hapipal-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/tanem/express-bookshelf-realworld-example-app&quot;&gt;&lt;strong&gt;Express w/ Bookshelf.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/gothinkster/realworld-starter-kit/blob/master/logo.png&quot; alt=&quot;Express w/ Bookshelf.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/tanem/express-bookshelf-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/tanem/express-bookshelf-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/vladfaust/crystalworld&quot;&gt;&lt;strong&gt;Crystal (Onyx)&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/vladfaust/crystalworld/master/media/logo.png&quot; alt=&quot;Crystal (Onyx)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/vladfaust/crystalworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/vladfaust/crystalworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/chrisxue815/realworld-aws-lambda-dynamodb-go&quot;&gt;&lt;strong&gt;AWS Lambda Go + DynamoDB&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld-starter-kit/master/logo.png&quot; alt=&quot;AWS Lambda Go + DynamoDB&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/chrisxue815/realworld-aws-lambda-dynamodb-go.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/chrisxue815/realworld-aws-lambda-dynamodb-go.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/randyscotsmithey/feathers-realworld-example-app&quot;&gt;&lt;strong&gt;Feathers&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/randyscotsmithey/feathers-realworld-example-app/master/logo.png&quot; alt=&quot;Feathers&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/randyscotsmithey/feathers-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/randyscotsmithey/feathers-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/schoolhouse-io/colmena-realworld-example-app&quot;&gt;&lt;strong&gt;Ruby &amp;amp; Colmena&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/schoolhouse-io/colmena-realworld-example-app/raw/master/media/logo.png&quot; alt=&quot;Ruby &amp;amp; Colmena&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/schoolhouse-io/colmena-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/schoolhouse-io/colmena-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/1984weed/akka-http-realworld-example&quot;&gt;&lt;strong&gt;Akka HTTP&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/1984weed/akka-http-realworld-example/9824fc701d1476eae2b389d2410881af1577b147/logo.png&quot; alt=&quot;Akka HTTP&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/1984weed/akka-http-realworld-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/1984weed/akka-http-realworld-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/niteoweb/pyramid-realworld-example-app&quot;&gt;&lt;strong&gt;Pyramid&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/niteoweb/pyramid-realworld-example-app/master/logo.png&quot; alt=&quot;Pyramid&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/niteoweb/pyramid-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/niteoweb/pyramid-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/gothinkster/QEWD-realworld-example-app&quot;&gt;&lt;strong&gt;QEWD.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://cloud.githubusercontent.com/assets/556934/25587724/182f95fc-2e5a-11e7-83db-1541c1bee128.png&quot; alt=&quot;QEWD.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/gothinkster/QEWD-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/gothinkster/QEWD-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/diegocamara/vertx-springboot-realworld-example-app&quot;&gt;&lt;strong&gt;Eclipse Vert.x&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/diegocamara/vertx-springboot-realworld-example-app/master/vertx-logo.png&quot; alt=&quot;Eclipse Vert.x&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/diegocamara/vertx-springboot-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/diegocamara/vertx-springboot-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/vaibhavmule/masonite-realworld-example-app&quot;&gt;&lt;strong&gt;Masonite&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/vaibhavmule/masonite-realworld-example-app/master/logo.png&quot; alt=&quot;Masonite&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/vaibhavmule/masonite-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/vaibhavmule/masonite-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/neo4j-examples/nestjs-neo4j-realworld-example&quot;&gt;&lt;strong&gt;Neo4j + Nest.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/neo4j-examples/nestjs-neo4j-realworld-example/raw/master/project-logo.png&quot; alt=&quot;Neo4j + Nest.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/neo4j-examples/nestjs-neo4j-realworld-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/neo4j-examples/nestjs-neo4j-realworld-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/spincast/spincast-realworld&quot;&gt;&lt;strong&gt;Spincast&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/spincast/spincast-realworld/master/logo.png&quot; alt=&quot;Spincast&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/spincast/spincast-realworld.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/spincast/spincast-realworld.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/alex-k1/scala-http4s-realworld-example-app&quot;&gt;&lt;strong&gt;Scala + http4s&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/alex-k1/scala-http4s-realworld-example-app/master/logo.png&quot; alt=&quot;Scala + http4s&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/alex-k1/scala-http4s-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/alex-k1/scala-http4s-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/blrB/hanami-realworld-example-app&quot;&gt;&lt;strong&gt;Hanami&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/blrB/hanami-realworld-example-app/master/logo.png&quot; alt=&quot;Hanami&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/blrB/hanami-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/blrB/hanami-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/daimor/realworld-intersystems-iris&quot;&gt;&lt;strong&gt;InterSystems IRIS&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/daimor/realworld-intersystems-iris/master/logo.png&quot; alt=&quot;InterSystems IRIS&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/daimor/realworld-intersystems-iris.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/daimor/realworld-intersystems-iris.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/eflem00/koa-boilerplate&quot;&gt;&lt;strong&gt;Koa + TypeScript + TypeORM&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/eflem00/koa-boilerplate/master/logo.png&quot; alt=&quot;Koa + TypeScript + TypeORM&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/eflem00/koa-boilerplate.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/eflem00/koa-boilerplate.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/alexey-lapin/realworld-backend-micronaut&quot;&gt;&lt;strong&gt;Java Micronaut&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/alexey-lapin/realworld-backend-micronaut/master/example-logo.png&quot; alt=&quot;Java Micronaut&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/alexey-lapin/realworld-backend-micronaut.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/alexey-lapin/realworld-backend-micronaut.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/neo4j-examples/nodejs-neo4j-realworld-example&quot;&gt;&lt;strong&gt;Neo4j + Express.js&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/neo4j-examples/nestjs-neo4j-realworld-example/raw/master/project-logo.png&quot; alt=&quot;Neo4j + Express.js&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/neo4j-examples/nodejs-neo4j-realworld-example.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/neo4j-examples/nodejs-neo4j-realworld-example.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Work In Progress: &lt;strong&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld/issues/6&quot;&gt;Implement GraphQL + Apollo/Relay for the Node + React codebases&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/45&quot;&gt;🗄🔧 Go + net/http&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/46&quot;&gt;🗄🔧 Node + GraphQL&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/57&quot;&gt;🗄🔧 Clojure&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/59&quot;&gt;🗄🔧 Falcon and GAE&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/60&quot;&gt;🗄🔧 Nim&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/66&quot;&gt;🗄🔧 Symfony&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/73&quot;&gt;🗄🔧 Haskell / Servant&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/88&quot;&gt;🗄🔧 Phalcon&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/95&quot;&gt;🗄🔧 Dropwizard&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/99&quot;&gt;🗄🔧 Go + Gorilla mux&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/105&quot;&gt;🗄🔧 Loopback 3.0&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/112&quot;&gt;🗄 🔧 Crystal + Kemal&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/119&quot;&gt;🗄 🔧 Erlang + Cowboy&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/123&quot;&gt;🗄 🔧 Nancy&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/126&quot;&gt;🗄🔧 Sanic&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/140&quot;&gt;Haskell / Scotty&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/141&quot;&gt;Typescript + node + express&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/142&quot;&gt;typescript + node.js(koa)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/148&quot;&gt;Vanilla PHP&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/163&quot;&gt;Vert.x (Java)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/166&quot;&gt;Lumen + MongoDB &lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/168&quot;&gt;Go + net/http Package &lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/175&quot;&gt;Swift Vapor&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/200&quot;&gt;Egg.js&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/201&quot;&gt;Serverless python (AWS Lambda)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/206&quot;&gt;Serverless Typescript + Mongodb (implementation done)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/209&quot;&gt;Azure Functions + CosmosDb&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/219&quot;&gt;Serverless+Typescript with AWS as the provider (Lambda, SSM, DynamoDB)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/228&quot;&gt;Vertx + Reactive + MongoDB&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/234&quot;&gt;Fullstack Golang (tgram)&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/247&quot;&gt;Zend Framework&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/272&quot;&gt;Rust / Rocket / Diesel / Mysql - Backend Application&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/285&quot;&gt;Golang + Revel&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/337&quot;&gt;Turbolinks&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/352&quot;&gt;Actix&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/353&quot;&gt;Lucky&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/354&quot;&gt;Symfony 4 with API Platform&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/364&quot;&gt;Scala + Finch&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/428&quot;&gt;Holochain&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Mobile&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Sorted by popularity on Fri Jan 29 2021&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 🥇 | 🥈 | 🥉 | | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/nea/nativescript-realworld-example-app&quot;&gt;&lt;strong&gt;NativeScript (Angular)&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/nea/nativescript-realworld-example-app/blob/master/logo.png&quot; alt=&quot;NativeScript (Angular)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/nea/nativescript-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/nea/nativescript-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/flexsurfer/conduitrn&quot;&gt;&lt;strong&gt;React Native (ClojureScript and re-frame)&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://github.com/flexsurfer/conduitrn/blob/master/logo.png&quot; alt=&quot;React Native (ClojureScript and re-frame)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/flexsurfer/conduitrn.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/flexsurfer/conduitrn.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/spacer-1669x257.gif&quot; alt=&quot;empty&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Work In Progress: &lt;strong&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld/issues/10&quot;&gt;📱🔧 React Native&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/39&quot;&gt;📱🔧 Jasonette&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/43&quot;&gt;📱🔧 Swift&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/70&quot;&gt;📱🔧 C# on Xamarin&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/84&quot;&gt;📱 🔧 Kotlin/Android&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/91&quot;&gt;📱🔧 Onymos&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/171&quot;&gt;Quasar framework&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/181&quot;&gt;Swift Perfect&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/312&quot;&gt;Flutter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Fullstack&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Since these implementations are responsible for the entire stack, they obviously cannot be mixed and matched but they still adhere to the same functionality &amp;amp; UX specs.&lt;/em&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Sorted by popularity on Fri Jan 29 2021&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;| 🥇 | 🥈 | 🥉 | | :---: | :---: | :---: | | &lt;a href=&quot;https://github.com/layrjs/react-layr-realworld-example-app&quot;&gt;&lt;strong&gt;Layr / React&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/layrjs/react-layr-realworld-example-app/master/assets/logo.png&quot; alt=&quot;Layr / React&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/layrjs/react-layr-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/layrjs/react-layr-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;a href=&quot;https://github.com/drashland/deno-drash-realworld-example-app&quot;&gt;&lt;strong&gt;Drash + Postgres + Vue&lt;/strong&gt;
  &lt;!-- raw HTML omitted --&gt; &lt;img src=&quot;https://raw.githubusercontent.com/drashland/deno-drash-realworld-example-app/master/logo.png&quot; alt=&quot;Drash + Postgres + Vue&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/drashland/deno-drash-realworld-example-app.svg?style=social&amp;amp;label=Star&quot; alt=&quot;Star&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/forks/drashland/deno-drash-realworld-example-app.svg?style=social&amp;amp;label=Fork&quot; alt=&quot;Fork&quot;&gt;&lt;/a&gt;| &lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/spacer-1669x257.gif&quot; alt=&quot;empty&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Work In Progress: &lt;strong&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld/issues/199&quot;&gt;Fullstack Firebase&lt;/a&gt; | &lt;a href=&quot;https://github.com/gothinkster/realworld/issues/497&quot;&gt;Meteor fullstack&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Create a new stack&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/upcoming_stacks.png&quot; alt=&quot;Create a new stack&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Know any of these frameworks (or one that isn&#39;t listed)?
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec&quot;&gt;&lt;strong&gt;Create a new framework implementation &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Or you can &lt;a href=&quot;https://github.com/gothinkster/realworld/issues?q=is%3Aopen+is%3Aissue+label%3Awip&quot;&gt;view upcoming stacks (WIPs)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note: All stacks that are a WIP are experimental and incomplete.&lt;/p&gt; 
&lt;p&gt;Don&#39;t expect everything to work perfectly out of the box!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;How do I get up &amp;amp; running?&lt;/h1&gt; 
&lt;p&gt;Simply follow the instructions in the README of whatever frontend and/or backend repo&#39;s you want to get up and running.&lt;/p&gt; 
&lt;h3&gt;Can you teach me how to build each stack from scratch?&lt;/h3&gt; 
&lt;p&gt;Yup! We&#39;ve built step-by-step tutorials for all of our stacks that teach you how to go from &lt;code&gt;git init&lt;/code&gt; all the way to the production ready application. &lt;a href=&quot;https://thinkster.io/tutorials/fullstack&quot;&gt;&lt;strong&gt;Start learning now &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Community created resources&lt;/h1&gt; 
&lt;p&gt;Forks, tutorials, workshops, and other resources based on the RealWorld project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kentcdodds/testing-workshop&quot;&gt;&lt;strong&gt;React+Redux / Node testing workshop&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&quot;https://github.com/kentcdodds&quot;&gt;&lt;strong&gt;Kent C. Dodds&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Example repo showing the React+Redux and Node stacks working together w/ TDD&lt;/li&gt; 
   &lt;li&gt;Live recording of his workshop is &lt;a href=&quot;https://www.youtube.com/watch?v=DdqiXcYDv-8&quot;&gt;&lt;strong&gt;available on YouTube&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anishkny/realworld-e2e-test&quot;&gt;&lt;strong&gt;RealWorld React/NodeJS E2E Tests&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&quot;https://github.com/anishkny&quot;&gt;&lt;strong&gt;Anish Karandikar&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A repo showing how to wire &lt;a href=&quot;https://github.com/gothinkster/react-redux-realworld-example-app&quot;&gt;React&lt;/a&gt; frontend with &lt;a href=&quot;https://github.com/gothinkster/node-express-realworld-example-app&quot;&gt;NodeJS&lt;/a&gt; backend for a RealWorld fullstack&lt;/li&gt; 
   &lt;li&gt;Includes E2E integration tests that use &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Chrome Puppeteer&lt;/a&gt; and &lt;a href=&quot;https://mochajs.org&quot;&gt;Mocha&lt;/a&gt; and work with CI systems like &lt;a href=&quot;https://travis-ci.org/anishkny/realworld-e2e-test&quot;&gt;Travis CI&lt;/a&gt; and &lt;a href=&quot;https://circleci.com/gh/anishkny/realworld-e2e-test&quot;&gt;CircleCI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Also demonstrates usage of &lt;a href=&quot;https://greenkeeper.io&quot;&gt;Greenkeeper&lt;/a&gt; for automatic dependency updates and &lt;a href=&quot;https://snyk.io/&quot;&gt;Snyk&lt;/a&gt; for vulnerability monitoring&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Performance comparisons: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-realworld-comparison-of-front-end-frameworks-with-benchmarks-2019-update-4be0d3c78075&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2019&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-real-world-comparison-of-front-end-frameworks-with-benchmarks-2018-update-e5760fb4a962&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2018&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-real-world-comparison-of-front-end-frameworks-with-benchmarks-e1cb62fd526c&quot;&gt;A Real-World Comparison of Front-End Frameworks with Benchmarks 2017&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Learn more&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&quot;&gt;&quot;Introducing RealWorld 🙌&quot;&lt;/a&gt; by Eric Simons&lt;/li&gt; 
 &lt;li&gt;Every tutorial is built against the same &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/api/&quot;&gt;API spec&lt;/a&gt; to ensure modularity of every frontend &amp;amp; backend&lt;/li&gt; 
 &lt;li&gt;Every frontend utilizes the same hand crafted &lt;a href=&quot;https://github.com/gothinkster/conduit-bootstrap-template&quot;&gt;Bootstrap 4 theme&lt;/a&gt; for identical UI/UX&lt;/li&gt; 
 &lt;li&gt;There is a hosted version of the backend API available for public usage, no API keys required&lt;/li&gt; 
 &lt;li&gt;Interested in creating a new RealWorld stack? View our &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/spec&quot;&gt;starter guide &amp;amp; spec&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Who made this?&lt;/h1&gt; 
&lt;p&gt;RealWorld would not be possible without the &lt;a href=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/#special-thanks-to&quot;&gt;open source community&lt;/a&gt; continuously helping push the project forward. In addition, we have a core project team composed of:&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/anishkny&quot;&gt;Anish Karandikar&lt;/a&gt; - Core Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;MathWorker, ex-Google, ex-Computational Fluid Dynamicist, forever lover of tech &amp;amp; humanities ❤️&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/Cameron-C-Chapman&quot;&gt;Cameron Chapman&lt;/a&gt; - Core Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Cameron Chapman is a Software Engineer at FanThreeSixty. He&#39;s an open source enthusiast and is helping to teach a local web development boot camp at Kansas University.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/ericsimons40&quot;&gt;Eric Simons&lt;/a&gt; - Founder/Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Eric is a Software Engineer, UI Designer, and author of many technical books &amp;amp; tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/iamalbertpai&quot;&gt;Albert Pai&lt;/a&gt; - Founder/Maintainer&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Albert is a Software Engineer, DevOps ninja, and author of many technical books &amp;amp; tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/gothinkster&quot;&gt;Thinkster&lt;/a&gt; - Funding/Support&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://thinkster.io&quot;&gt;Thinkster&lt;/a&gt; creates high quality resources that help Javascript developers succeed. The RealWorld project wouldn&#39;t exist without their funding, so please consider investing in &lt;a href=&quot;https://thinkster.io/pro&quot;&gt;a Pro subscription&lt;/a&gt; to help support us!&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://twitter.com/brwr_&quot;&gt;James Brewer&lt;/a&gt; - Admin&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;James is a Software Engineer at Square and a contributor to the Django project. He created &amp;amp; maintains the RW Django codebase and continually provides guidance for the RealWorld project itself.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/SandeeshS&quot;&gt;Sandeesh S.&lt;/a&gt; - Admin&lt;/h4&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Full stack developer, Laravel enthusiast, Digital marketing specialist and an avid gamer.&lt;/p&gt; 
&lt;h2&gt;Special thanks to...&lt;/h2&gt; 
&lt;p&gt;RealWorld wouldn&#39;t be possible without the help of the open source community reviewing codebases, creating new app implementations, and many other tasks that help push this project forward. We especially appreciate the OSS leaders who have helped contribute to RealWorld:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Dan Abramov&lt;/strong&gt; (creator of Redux) for helping &lt;a href=&quot;https://twitter.com/dan_abramov/status/692009757775896577&quot;&gt;spark the initial idea&lt;/a&gt;, &lt;a href=&quot;https://github.com/reactjs/redux/issues/1353&quot;&gt;getting the Redux community involved&lt;/a&gt;, as well as graciously taking the time to provide feedback on the Redux codebase&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Max Lynch&lt;/strong&gt; (creator of Ionic) for taking the time to provide guidance in the early days of this project&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Addy Osmani&lt;/strong&gt; (creator of TodoMVC) for helping &lt;a href=&quot;https://twitter.com/addyosmani/status/762828483433144320&quot;&gt;spark the initial idea&lt;/a&gt; and his amazing work with TodoMVC&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TodoMVC&lt;/strong&gt; (&lt;a href=&quot;https://github.com/tastejs/todomvc#team&quot;&gt;team &amp;amp; contributors&lt;/a&gt;) for their exemplary &amp;amp; successful work; their project &amp;amp; org has been an invaluable analogy for us as we&#39;ve built out RealWorld&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;James Brewer&lt;/strong&gt; (docs contributor to Django) for countless brainstorming sessions, helping name this project, and creating the Django codebase + tutorial&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;All of the codebases are &lt;strong&gt;MIT licensed&lt;/strong&gt; unless otherwise specified.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://thinkster.io&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gothinkster/realworld/master/media/end.png&quot; alt=&quot;Brought to you by Thinkster&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;GitHub Docs 
 &lt;!-- raw HTML omitted --&gt;&lt;/h2&gt; 
&lt;p&gt;This repository contains the documentation website code and Markdown source files for &lt;a href=&quot;https://docs.github.com&quot;&gt;docs.github.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;GitHub&#39;s Docs team works on pre-production content in a private repo that regularly syncs with this public repo.&lt;/p&gt; 
&lt;p&gt;In this article:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#readmes&quot;&gt;READMEs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Start contributing right now:&lt;/h3&gt; 
&lt;p&gt;We accept a lot of &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md/#types-of-contributions-memo&quot;&gt;different contributions&lt;/a&gt;, including some that don&#39;t require you to write a single line of code.&lt;/p&gt; 
&lt;h4&gt;Click &lt;strong&gt;make a contribution&lt;/strong&gt; from docs&lt;/h4&gt; 
&lt;p&gt;As you&#39;re using GitHub Docs, you may find something in an article that you&#39;d like to add to, update, or change. Click on &lt;strong&gt;make a contribution&lt;/strong&gt; to navigate directly to that article in the codebase, so that you can begin making your contribution.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Open an issue&lt;/h4&gt; 
&lt;p&gt;If you&#39;ve found a problem, you can open an issue using a &lt;a href=&quot;https://github.com/github/docs/issues/new/choose&quot;&gt;template&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Solve an issue&lt;/h4&gt; 
&lt;p&gt;If you have a solution to one of the open issues, you will need to fork the repository and submit a pull request using the &lt;a href=&quot;https://github.com/github/docs/blob/main/CONTRIBUTING.md#pull-request-template&quot;&gt;template&lt;/a&gt; that is visible automatically in the pull request body. For more details about this process, please check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Join us in discussions&lt;/h4&gt; 
&lt;p&gt;We use GitHub Discussions to talk about all sorts of topics related to documentation and this site. For example: if you&#39;d like help troubleshooting a PR, have a great new idea, or want to share something amazing you&#39;ve learned in our docs, join us in &lt;a href=&quot;https://github.com/github/docs/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;And that&#39;s it!&lt;/h4&gt; 
&lt;p&gt;That&#39;s how you can get started easily as a member of the GitHub Documentation community. :sparkles:&lt;/p&gt; 
&lt;p&gt;If you want to know more, or you&#39;re making a more complex contribution, check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few more things to know when you&#39;re getting started with this repo:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you&#39;re having trouble with your GitHub account, contact &lt;a href=&quot;https://support.github.com/contact&quot;&gt;Support&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;We do not accept pull requests for translated content - see &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;READMEs&lt;/h2&gt; 
&lt;p&gt;In addition to the README you&#39;re reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/README.md&quot;&gt;content/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/graphql/README.md&quot;&gt;content/graphql/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/rest/README.md&quot;&gt;content/rest/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/contributing/README.md&quot;&gt;contributing/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/README.md&quot;&gt;data/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/reusables/README.md&quot;&gt;data/reusables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/variables/README.md&quot;&gt;data/variables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/liquid-tags/README.md&quot;&gt;includes/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/README.md&quot;&gt;includes/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/javascripts/README.md&quot;&gt;javascripts/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/layouts/README.md&quot;&gt;layouts/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/lib/liquid-tags/README.md&quot;&gt;lib/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/middleware/README.md&quot;&gt;middleware/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/script/README.md&quot;&gt;script/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/stylesheets/README.md&quot;&gt;stylesheets/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/tests/README.md&quot;&gt;tests/README.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The GitHub product documentation in the assets, content, and data folders are licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE&quot;&gt;CC-BY license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All other code in this repository is licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using the GitHub logos, be sure to follow the &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adrianhajdin/project_mern_memories</title>
      <link>https://github.com/adrianhajdin/project_mern_memories</link>
      <description>&lt;p&gt;This is a code repository for the corresponding video tutorial. Using React, Node.js, Express &amp; MongoDB you&#39;ll learn how to build a Full Stack MERN Application - from start to finish. The App is called &quot;Memories&quot; and it is a simple social media app that allows users to post interesting events that happened in their lives.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Memories&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/Z8Y0CJv/Screenshot-2020-10-30-at-11-10-04.png&quot; alt=&quot;Memories&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This is a code repository for the corresponding video tutorial - https://youtube.com/playlist?list=PL6QREj8te1P7VSwhrMf3D3Xt4V6_SRkhu.&lt;/p&gt; 
&lt;p&gt;Using React, Node.js, Express &amp;amp; MongoDB you&#39;ll learn how to build a Full Stack MERN Application - from start to finish. The App is called &quot;Memories&quot; and it is a simple social media app that allows users to post interesting events that happened in their lives.&lt;/p&gt; 
&lt;p&gt;By the end of this video, you will have a strong understanding of how the MERN Stack works.&lt;/p&gt; 
&lt;p&gt;Setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;run &lt;code&gt;npm i &amp;amp;&amp;amp; npm start&lt;/code&gt; for both client and server side to start the app&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>yeungon/In-JavaScript-we-trust</title>
      <link>https://github.com/yeungon/In-JavaScript-we-trust</link>
      <description>&lt;p&gt;Embrace JavaScript naturally and confidently with coding challenges crafted not for beginners, but JavaScript lovers no matter what.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;In JS we trust - The best way to learn is by building/coding and teaching. I create the challenges to help my friends learn JavaScript and in return it helps me embrace the language in much deeper level. Feel free to clone, fork and pull.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h6&gt;1. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function a(x) {
  x++;
  return function () {
    console.log(++x);
  };
}

a(1)();
a(1)();
a(1)();

let x = a(1);
x();
x();
x();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &lt;code&gt;1, 2, 3&lt;/code&gt; and &lt;code&gt;1, 2, 3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;B: &lt;code&gt;3, 3, 3&lt;/code&gt; and &lt;code&gt;3, 4, 5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;C: &lt;code&gt;3, 3, 3&lt;/code&gt; and &lt;code&gt;1, 2, 3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;D: &lt;code&gt;1, 2, 3&lt;/code&gt; and &lt;code&gt;3, 3, 3&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;This question reminds us about Closure in JS. Closure allows us to create a &lt;code&gt;stateful function&lt;/code&gt; and such function can access to variable outside of its scope. In a nutshell, a closure can have access to &lt;code&gt;global&lt;/code&gt; variable (scope), &lt;code&gt;father function&lt;/code&gt; scope and &lt;code&gt;its&lt;/code&gt; own scope.&lt;/p&gt; 
&lt;p&gt;We have here 3, 3, 3 and 3, 4, 5 because first we simply call the function &lt;code&gt;a()&lt;/code&gt;. It works like a normal function and we do not see something &lt;code&gt;stateful&lt;/code&gt; here. In later case, we declare a variable &lt;code&gt;x&lt;/code&gt; and it stores the value of function &lt;code&gt;a(1)&lt;/code&gt;, that is why we get 3. 4. 5 rather than 3, 3, 3.&lt;/p&gt; 
&lt;p&gt;This kind of gotcha gives me the feeling of &lt;code&gt;static&lt;/code&gt; variable in PHP world.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;2. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Name(a, b) {
  this.a = a;
  this.b = b;
}

const me = Name(&quot;Vuong&quot;, &quot;Nguyen&quot;);

console.log(!(a.length - window.a.length));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;B: &lt;code&gt;NaN&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;C: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;D: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We get true in the console. The tricky part is when we create an object from the constructor function Name but we DO NOT USE &lt;code&gt;new&lt;/code&gt; keywork. That makes the variable &lt;code&gt;a&lt;/code&gt; global one and get the value &quot;Vuong&quot;. Remember that it is actually a property of the global object &lt;code&gt;window&lt;/code&gt; (in the browser) or &lt;code&gt;global&lt;/code&gt; in the nodejs.&lt;/p&gt; 
&lt;p&gt;We then get &lt;code&gt;a.length&lt;/code&gt; ~ 5 and &lt;code&gt;window.a.length&lt;/code&gt; ~ 5 which return 0. !0 returns true.&lt;/p&gt; 
&lt;p&gt;Imagine what would happen when we create the instance &lt;code&gt;me&lt;/code&gt; with the &lt;code&gt;new&lt;/code&gt; keywork. That is an interesting inquire!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;3. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const x = function (...x) {
  let k = (typeof x).length;
  let y = () =&amp;gt; &quot;freetut&quot;.length;
  let z = { y: y };

  return k - z.y();
};

console.log(Boolean(x()));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;B: 1&lt;/li&gt; 
 &lt;li&gt;C: -1&lt;/li&gt; 
 &lt;li&gt;D: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;The spread operator &lt;code&gt;...x&lt;/code&gt; might help us obtain the parameter in the function in the form of array. Yet, in Javascript the typeof array return &quot;object&quot; rather than &quot;array&quot;. It is totally odd if you are coming from PHP.&lt;/p&gt; 
&lt;p&gt;That is said, we now have the length of the string &lt;code&gt;object&lt;/code&gt; which returns 6. z.y() simply returns the length of the string &#39;freetut&#39; (7).&lt;/p&gt; 
&lt;p&gt;Be aware that the function x() (in the form of &lt;code&gt;function express&lt;/code&gt; or &lt;code&gt;anonymous function&lt;/code&gt; (if you are coming from PHP) return -1 when being called and when converted to bool with &lt;code&gt;Boolean(-1)&lt;/code&gt; return true instead of false. Noted that &lt;code&gt;Boolean(0)&lt;/code&gt; return false.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;4. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function js(x) {
  const y = (j) =&amp;gt; j * x;

  console.log(y(s()));

  function s() {
    return j();
  }

  function j() {
    return x ** x;
  }
})(3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;B: 18&lt;/li&gt; 
 &lt;li&gt;C: 81&lt;/li&gt; 
 &lt;li&gt;D: 12&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;The function &lt;code&gt;js()&lt;/code&gt; can be automatically executed without calling it and known as IIFE (Immediately Invoked Function Expression). Noted the parameter &lt;code&gt;x&lt;/code&gt; of the function &lt;code&gt;js&lt;/code&gt; is actuallly passed with the value 3.&lt;/p&gt; 
&lt;p&gt;The value return of the function is y(s())), meaning calling three other functions &lt;code&gt;y()&lt;/code&gt;, &lt;code&gt;s()&lt;/code&gt; and &lt;code&gt;j()&lt;/code&gt; because the function &lt;code&gt;s()&lt;/code&gt; returns &lt;code&gt;j()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;j() returns 3^3 = 27 so that s() returns 27.&lt;/p&gt; 
&lt;p&gt;y(s()) means y(27) which returns 27*3 = 81.&lt;/p&gt; 
&lt;p&gt;Note that we can call &lt;code&gt;declare function&lt;/code&gt; BEFORE the function is actually declared but not with &lt;code&gt;expression function&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;5. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var tip = 100;

(function () {
  console.log(&quot;I have $&quot; + husband());

  function wife() {
    return tip * 2;
  }

  function husband() {
    return wife() / 2;
  }

  var tip = 10;
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;I have $10&quot;;&lt;/li&gt; 
 &lt;li&gt;B: &quot;I have $100&quot;;&lt;/li&gt; 
 &lt;li&gt;C: &quot;I have $50&quot;;&lt;/li&gt; 
 &lt;li&gt;D: &quot;I have $NaN&quot;;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;We have here an IIFE (Immediately Invoked Function Expression). It means we do not have to call it but it will be excuted automatically when declared. The flow is as: husband() returns wife()/2 and wife() returns tip*2.&lt;/p&gt; 
&lt;p&gt;We might think that tip = 100 because it is a global variable when declaring with &lt;code&gt;var&lt;/code&gt; keyword. However, it is actually &lt;code&gt;undefined&lt;/code&gt; because we also have &lt;code&gt;var tip = 10&lt;/code&gt; INSIDE the function. As the variable &lt;code&gt;tip&lt;/code&gt; is hoisted with default value &lt;code&gt;undefined&lt;/code&gt;, the final result would be D. We know that &lt;code&gt;undefined&lt;/code&gt; returns NaN when we try to divide to 2 or multiple with 2.&lt;/p&gt; 
&lt;p&gt;If we do not re-declare &lt;code&gt;var tip = 10;&lt;/code&gt; at the end of the function, we will definately get B.&lt;/p&gt; 
&lt;p&gt;JS is fun, right?&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;6. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const js = { language: &quot;loosely type&quot;, label: &quot;difficult&quot; };

const edu = { ...js, level: &quot;PhD&quot; };

const newbie = edu;

delete edu.language;

console.log(Object.keys(newbie).length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 2;&lt;/li&gt; 
 &lt;li&gt;B: 3;&lt;/li&gt; 
 &lt;li&gt;C: 4;&lt;/li&gt; 
 &lt;li&gt;D: 5;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;This challenge revises the ES6&#39;s feature regarding &lt;code&gt;spread operator ...&lt;/code&gt; Spread operator is quite useful for retrieving parameter in function, to &lt;code&gt;unite&lt;/code&gt; or &lt;code&gt;combine&lt;/code&gt; object and array in JavaScript. PHP also has this feature.&lt;/p&gt; 
&lt;p&gt;In the variable &lt;code&gt;edu&lt;/code&gt;, we use &lt;code&gt;...js&lt;/code&gt; (spread operator here) to combine both objects into one. It works in the same way with array.&lt;/p&gt; 
&lt;p&gt;Then we declare another variable named &lt;code&gt;newbie&lt;/code&gt;. IMPORTANT note: By declaring the variable like that, both variables point to the SAME POSITION in the memory. We may have known something like &lt;code&gt;$a = &amp;amp;$b&lt;/code&gt; in PHP, which let both varibles work in the same way. We might have known about &lt;code&gt;pass by reference&lt;/code&gt; in the case.&lt;/p&gt; 
&lt;p&gt;Then we have 2 as &lt;code&gt;edu.language&lt;/code&gt; is deleted. Both objects now have only two elements.&lt;/p&gt; 
&lt;p&gt;Now is time to think about coping an object in JS either shallow or deep one.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;7. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var candidate = {
  name: &quot;Vuong&quot;,
  age: 30,
};

var job = {
  frontend: &quot;Vuejs or Reactjs&quot;,
  backend: &quot;PHP and Laravel&quot;,
  city: &quot;Auckland&quot;,
};

class Combine {
  static get() {
    return Object.assign(candidate, job);
  }

  static count() {
    return Object.keys(this.get()).length;
  }
}

console.log(Combine.count());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 5;&lt;/li&gt; 
 &lt;li&gt;B: 6;&lt;/li&gt; 
 &lt;li&gt;C: 7;&lt;/li&gt; 
 &lt;li&gt;D: 8;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;The buit-in method &lt;code&gt;Object.assign(candidate, job)&lt;/code&gt; merges the two objects &lt;code&gt;candidate&lt;/code&gt; and &lt;code&gt;job&lt;/code&gt; into one object. Then the method &lt;code&gt;Object.keys&lt;/code&gt; counts the number of &lt;code&gt;key&lt;/code&gt; in the object.&lt;/p&gt; 
&lt;p&gt;Note that two methods &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;count()&lt;/code&gt; are defined as &lt;code&gt;static&lt;/code&gt;, so they need to be called statically using &lt;code&gt;Class.staticmethod()&lt;/code&gt; syntax. Then the final object get 5 elements.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;8. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 1;

(() =&amp;gt; {
  x += 1;
  ++x;
})();
((y) =&amp;gt; {
  x += y;
  x = x % y;
})(2);
(() =&amp;gt; (x += x))();
(() =&amp;gt; (x *= x))();

console.log(x);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 4;&lt;/li&gt; 
 &lt;li&gt;B: 50;&lt;/li&gt; 
 &lt;li&gt;C: 2;&lt;/li&gt; 
 &lt;li&gt;D: 10;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;Initially &lt;code&gt;x&lt;/code&gt; is declared with the value 1. In the first IIFE function, there are two operations. First &lt;code&gt;x&lt;/code&gt; becomes 2 and then 3.&lt;/p&gt; 
&lt;p&gt;In the second IIFE function, &lt;code&gt;x = x + y&lt;/code&gt; then the current value is 5. In the second operation, it returns only 1 as it undergoes &lt;code&gt;5%2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the third and fouth IIFE functions, we get 2 &lt;code&gt;x = x + x&lt;/code&gt; and then 4 &lt;code&gt;x = x * x&lt;/code&gt;. It is more than simple.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;9. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;$var = 10;

$f = function($let) use ($var) {
    return ++$let + $var;
};

$var = 15;
echo $f(10);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 10;

const f = (l) =&amp;gt; ++l + x;

x = 15;
console.log(f(10));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 26 and 26;&lt;/li&gt; 
 &lt;li&gt;B: 21 and 21;&lt;/li&gt; 
 &lt;li&gt;C: 21 and 26;&lt;/li&gt; 
 &lt;li&gt;D: 26 and 21;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;This question illustrates the diffences between PHP and JavaScript when handling closure. In the first snippet, we declare a closure with the keyword &lt;code&gt;use&lt;/code&gt;. Closure in PHP is simply an anonymous function and the data is passed to the function using the keyword &lt;code&gt;use&lt;/code&gt;. Otherwise, it is called as &lt;code&gt;lambda&lt;/code&gt; when we do not use the keyword &lt;code&gt;use&lt;/code&gt;. You can check the result of the snippet here https://3v4l.org/PSeMY. PHP &lt;code&gt;closure&lt;/code&gt; only accepts the value of the variable BEFORE the closure is defined, no matter where it is called. As such, &lt;code&gt;$var&lt;/code&gt; is 10 rather than 15.&lt;/p&gt; 
&lt;p&gt;On the contrary, JavaScript treats the variable a bit different when it is passed to anonymous function. We do not have to use the keyword &lt;code&gt;use&lt;/code&gt; here to pass variable to the closure. The variable &lt;code&gt;x&lt;/code&gt; in the second snippet is updated before the closure is called, then we get 26.&lt;/p&gt; 
&lt;p&gt;Note that in PHP 7.4, we have arrow function and we then do not have to use the keyword &lt;code&gt;use&lt;/code&gt; to pass the variable to function. Another way to call a &lt;code&gt;global&lt;/code&gt; ariable inside a function in PHP is to use the keyword &lt;code&gt;global&lt;/code&gt; or employ the built-in GLOBAL variable $GLOBALS.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;10. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let x = {};
let y = {};
let z = x;

console.log(x == y);
console.log(x === y);
console.log(x == z);
console.log(x === z);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: true true true true;&lt;/li&gt; 
 &lt;li&gt;B: false false false false;&lt;/li&gt; 
 &lt;li&gt;C: true true false false;&lt;/li&gt; 
 &lt;li&gt;D: false false true true;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;Technically, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; have the same value. Both are empty objects. However, we do not use the value to compare objects.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;z&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; are two objects referring to the same memory position. In JavaScript, array and object are passed by &lt;code&gt;reference&lt;/code&gt;. &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; therefore return true when being compared.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;11. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&quot;hello&quot;);

setTimeout(() =&amp;gt; console.log(&quot;world&quot;), 0);

console.log(&quot;hi&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;hello&quot; -&amp;gt; &quot;world&quot; -&amp;gt; &quot;hi&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;hello&quot; -&amp;gt; &quot;hi&quot; -&amp;gt; &quot;world&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;hi&quot; -&amp;gt; &quot;world&quot; -&amp;gt; &quot;hello&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;hi&quot; -&amp;gt; &quot;hello&quot; -&amp;gt; &quot;world&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;Given that the function setTimeout() will be kept in the &lt;code&gt;task queue&lt;/code&gt; before jumping back to &lt;code&gt;stack,&lt;/code&gt; &quot;hello&quot; and &quot;hi&quot; will be printed first, then A is incorrect. That is also the case of the answers C and D.&lt;/p&gt; 
&lt;p&gt;No matter how many seconds you set to the &lt;code&gt;setTimeout()&lt;/code&gt; function, it will run after synchronous code. So we will get &quot;hello&quot; first as it is put into the call stack first. Though the &lt;code&gt;setTimeout()&lt;/code&gt; is then being put into the call stack, it will subsequently offload to web API (or Node API) and then being called when other synchronous codes are cleared. It means we then get &quot;hi&quot; and finally &quot;world&quot;.&lt;/p&gt; 
&lt;p&gt;So B is the correct answer.&lt;/p&gt; 
&lt;p&gt;Credit: @kaitoubg (voz) for your suggestion regarding the &lt;code&gt; timeout throttled&lt;/code&gt; by which I have decided to alter the question slightly. It will ensure that readers will not get confused as the previous code might bring out different results when tested on other browsers or environments. The main point of the question is about the discrepancy between the synchronous code and asynchronous code when using &lt;code&gt;setTimeout.&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;12. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;String.prototype.lengthy = () =&amp;gt; {
  console.log(&quot;hello&quot;);
};

let x = { name: &quot;Vuong&quot; };

delete x;

x.name.lengthy();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;Vuong&quot;;&lt;/li&gt; 
 &lt;li&gt;B: &quot;hello&quot;;&lt;/li&gt; 
 &lt;li&gt;C: &quot;undefined&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;ReferenceError&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;String.prototype.someThing = function () {}&lt;/code&gt; is the common way to define a new built-in method for &lt;code&gt;String&lt;/code&gt;. We can do the same thing with &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt; or &lt;code&gt;FunctionName&lt;/code&gt; where FunctionName is the function designed by ourself.&lt;/p&gt; 
&lt;p&gt;That is not challenging to realise that &lt;code&gt;&quot;string&quot;.lengthy()&lt;/code&gt; always returns &lt;code&gt;hello&lt;/code&gt;. Yet, the tricky part lies in the &lt;code&gt;delete object&lt;/code&gt; where we might think that this expression will entirely delete the object. That is not the case as &lt;code&gt;delete&lt;/code&gt; is used to delete the property of the object only. It does not delete the object. Then we get &lt;code&gt;hello&lt;/code&gt; rather than &lt;code&gt;ReferenceError&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that if we declare object without &lt;code&gt;let, const&lt;/code&gt; or &lt;code&gt;var&lt;/code&gt;, we then have a global object. &lt;code&gt;delete objectName&lt;/code&gt; then return &lt;code&gt;true&lt;/code&gt;. Otherwise, it always returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;13. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let x = {};

x.__proto__.hi = 10;

Object.prototype.hi = ++x.hi;

console.log(x.hi + Object.keys(x).length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10&lt;/li&gt; 
 &lt;li&gt;B: 11&lt;/li&gt; 
 &lt;li&gt;C: 12&lt;/li&gt; 
 &lt;li&gt;D: NaN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;First we have an empty object &lt;code&gt;x&lt;/code&gt;, then we add another property &lt;code&gt;hi&lt;/code&gt; for x with &lt;code&gt;x.__proto__.hi&lt;/code&gt;. Note this is equivalent to &lt;code&gt;Object.prototype.hi = 10&lt;/code&gt; and we are adding to the &lt;code&gt;father&lt;/code&gt; object &lt;code&gt;Object&lt;/code&gt; the property &lt;code&gt;hi&lt;/code&gt;. It means every single object will inherit this propety. The property &lt;code&gt;hi&lt;/code&gt; becomes a shared one. Say now we declare a new object such as &lt;code&gt;let y = {}&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; now has a propery &lt;code&gt;hi&lt;/code&gt; inherited from the &lt;code&gt;father&lt;/code&gt; &lt;code&gt;Object&lt;/code&gt;. Put it simply &lt;code&gt;x.__proto__ === Object.prototype&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then we overwrite the property &lt;code&gt;hi&lt;/code&gt; with a new value 11. Last we have 11 + 1 = 12. &lt;code&gt;x&lt;/code&gt; has one property and &lt;code&gt;x.hi&lt;/code&gt; returns 11.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;14. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const array = (a) =&amp;gt; {
  let length = a.length;
  delete a[length - 1];
  return a.length;
};

console.log(array([1, 2, 3, 4]));

const object = (obj) =&amp;gt; {
  let key = Object.keys(obj);
  let length = key.length;
  delete obj[key[length - 1]];

  return Object.keys(obj).length;
};

console.log(object({ 1: 2, 2: 3, 3: 4, 4: 5 }));

const setPropNull = (obj) =&amp;gt; {
  let key = Object.keys(obj);
  let length = key.length;
  obj[key[length - 1]] = null;

  return Object.keys(obj).length;
};

console.log(setPropNull({ 1: 2, 2: 3, 3: 4, 4: 5 }));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 333&lt;/li&gt; 
 &lt;li&gt;B: 444&lt;/li&gt; 
 &lt;li&gt;C: 434&lt;/li&gt; 
 &lt;li&gt;D: 343&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;This question examines how the &lt;code&gt;delete&lt;/code&gt; operator works in JavaScript. In short, it does nothing when we write &lt;code&gt;delete someObject&lt;/code&gt; or &lt;code&gt;delete someArray&lt;/code&gt;. It nonetheless completely deletes and removes a property of an object when writing something like &lt;code&gt;delete someObject.someProperty&lt;/code&gt;. In the case of array, when we write &lt;code&gt;delete someArray[keyNumber]&lt;/code&gt;, it only removes the &lt;code&gt;value&lt;/code&gt; of the &lt;code&gt;index&lt;/code&gt;, keep the &lt;code&gt;index&lt;/code&gt; intact and the new &lt;code&gt;value&lt;/code&gt; is now set to &lt;code&gt;undefined&lt;/code&gt;. For that reason, in the code first snippet, we get (the length) 4 elements as in the original array but only 3 properties left in the object passed when the function object() is called, as in the second snippet.&lt;/p&gt; 
&lt;p&gt;The third snippet gives us 4 as declaring an object&#39;s propery to either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; does not completely remove the property. The key is intact. So the length of the object is immutable.&lt;/p&gt; 
&lt;p&gt;For those who are familiar with PHP, we have &lt;code&gt;unset($someArray[index])&lt;/code&gt; that remove the array element, both key and value. When &lt;code&gt;print_r&lt;/code&gt; the array, we might not see the key and value that have been unset. However, when we push (using &lt;code&gt;array_push($someArray, $someValue)&lt;/code&gt;) a new element in that array, we might see that the previous key is still kept, but no value and not being displayed. That is something you should be aware of. Have a look at https://3v4l.org/7C3Nf&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;15. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = [1, 2, 3];
var b = [1, 2, 3];

var c = [1, 2, 3];
var d = c;

var e = [1, 2, 3];
var f = e.slice();

console.log(a === b);
console.log(c === d);
console.log(e === f);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: true true true&lt;/li&gt; 
 &lt;li&gt;B: false false true&lt;/li&gt; 
 &lt;li&gt;C: true true false&lt;/li&gt; 
 &lt;li&gt;D: false true false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; returns false because they point to different memory location even though the values are the same. If you are coming from PHP world, then it will return true obviously when we compare either value or value + type. Check it out: https://3v4l.org/IjaOs.&lt;/p&gt; 
&lt;p&gt;In JavaScript, value is passed by reference in case of &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;. Hence in the second case, &lt;code&gt;d&lt;/code&gt; is the copy of &lt;code&gt;c&lt;/code&gt; but they both point to the same memory position. Everything changes in &lt;code&gt;c&lt;/code&gt; will result in the change in &lt;code&gt;d&lt;/code&gt;. In PHP, we might have &lt;code&gt;$a = &amp;amp;$b;&lt;/code&gt;, working in the similar way.&lt;/p&gt; 
&lt;p&gt;The third one gives us a hint to copy an array in JavaScript using &lt;code&gt;slice()&lt;/code&gt; method. Now we have &lt;code&gt;f&lt;/code&gt;, which is the copy of &lt;code&gt;e&lt;/code&gt; but they point to different memory locations, thus they have different &quot;life&quot;. We get &lt;code&gt;false&lt;/code&gt; accordingly when they are being compared.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;16. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var languages = {
  name: [&quot;elixir&quot;, &quot;golang&quot;, &quot;js&quot;, &quot;php&quot;, { name: &quot;feature&quot; }],
  feature: &quot;awesome&quot;,
};

let flag = languages.hasOwnProperty(Object.values(languages)[0][4].name);

(() =&amp;gt; {
  if (flag !== false) {
    console.log(
      Object.getOwnPropertyNames(languages)[0].length &amp;lt;&amp;lt;
        Object.keys(languages)[0].length
    );
  } else {
    console.log(
      Object.getOwnPropertyNames(languages)[1].length &amp;lt;&amp;lt;
        Object.keys(languages)[1].length
    );
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 8&lt;/li&gt; 
 &lt;li&gt;B: NaN&lt;/li&gt; 
 &lt;li&gt;C: 64&lt;/li&gt; 
 &lt;li&gt;D: 12&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: 64&lt;/h4&gt; 
&lt;p&gt;The code snippet is quite tricky as it has a couple of different built-in methods handling object in &lt;code&gt;JavaScript&lt;/code&gt;. For example, both &lt;code&gt;Object.keys&lt;/code&gt; and &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; are used even thought they are quite similar except that the latter can return non-enumerable properties. You might want to have a look at this thoroughly written reference https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Object.values&lt;/code&gt; and &lt;code&gt;Object.keys&lt;/code&gt; return the property value and property name of the object, respectively. That is nothing new. &lt;code&gt;object.hasOwnProperty(&#39;propertyName&#39;)&lt;/code&gt; returns a &lt;code&gt;boolean&lt;/code&gt; confirming whether a property exists or not.&lt;/p&gt; 
&lt;p&gt;We have &lt;code&gt;flag&lt;/code&gt; true because &lt;code&gt;Object.values(languages)[0][4].name&lt;/code&gt; returns &lt;code&gt;feature&lt;/code&gt;, which is also the name of the property.&lt;/p&gt; 
&lt;p&gt;Then we have 4 &amp;lt;&amp;lt; 4 in the &lt;code&gt;if-else&lt;/code&gt; flow that returns the bitwise value, equivalent to &lt;code&gt;4*2^4&lt;/code&gt; ~ &lt;code&gt;4*16&lt;/code&gt; ~ 64.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;17. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var player = {
  name: &quot;Ronaldo&quot;,
  age: 34,
  getAge: function () {
    return ++this.age - this.name.length;
  },
};

function score(greeting, year) {
  console.log(
    greeting + &quot; &quot; + this.name + `! You were born in  ${year - this.getAge()}`
  );
}

window.window.window.score.call(window.window.window.player, &quot;Kiora&quot;, 2019);

score.apply(player, [&quot;Kiora&quot;, 2009]);

const helloRonaldo = window.score.bind(window.player, &quot;Kiora&quot;, 2029);

helloRonaldo();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;Kiora Ronaldo! You were born in 1985&quot;, &quot;Kiora Ronaldo! You were born in 1985&quot;, &quot;Kiora Ronaldo! You were born in 1985&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;Kiora Ronaldo! You were born in 1991&quot;, &quot;Kiora Ronaldo! You were born in 1991&quot;, &quot;Kiora Ronaldo! You were born in 1999&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;Kiora Ronaldo! You were born in 1991&quot;, NaN, &quot;Kiora Ronaldo! You were born in 1980&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;Kiora Ronaldo! You were born in 1991&quot;, &quot;Kiora Ronaldo! You were born in 1980&quot;, &quot;Kiora Ronaldo! You were born in 1999&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;We can use &lt;code&gt;call()&lt;/code&gt;, &lt;code&gt;apply()&lt;/code&gt; and &lt;code&gt;bind()&lt;/code&gt; to appy a function to any object. At first sight, it seems that three functions do the same thing. Yet there are some situations where they are differently employed to handle respective contexts or solve particular problems.&lt;/p&gt; 
&lt;p&gt;Of the three, only &lt;code&gt;bind()&lt;/code&gt; can be executed after binding. We can create a variable to store the result as &lt;code&gt;helloRonaldo()&lt;/code&gt; in the code snippet above. &lt;code&gt;apply()&lt;/code&gt; and &lt;code&gt;call()&lt;/code&gt; will bind and execute the function at the same time. &lt;code&gt;apply()&lt;/code&gt; hints us &lt;code&gt;a&lt;/code&gt; ~ array where we need to pass an array as parameter. &lt;code&gt;call()&lt;/code&gt; hints us &lt;code&gt;c&lt;/code&gt; or comma where we pass parameters with a comma. You might want to have a look at this post https://stackoverflow.com/questions/15455009/javascript-call-apply-vs-bind&lt;/p&gt; 
&lt;p&gt;Note that &lt;code&gt;window.window.window.score&lt;/code&gt; or &lt;code&gt;window.score&lt;/code&gt; or simply &lt;code&gt;score&lt;/code&gt; do the same thing. It points to the &lt;code&gt;score()&lt;/code&gt; function in the global scope.&lt;/p&gt; 
&lt;p&gt;The correct anwser is D. The &lt;code&gt;score()&lt;/code&gt; and &lt;code&gt;getAge()&lt;/code&gt; functions are nothing special.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;18. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ronaldo = { age: 34 };

var messi = { age: 32 };

function score(year, tr, t) {
  if (typeof tr === &quot;function&quot; &amp;amp;&amp;amp; typeof t === &quot;function&quot;) {
    console.log(`You score ${tr(year, t(this.age))} times`);
  }
}

const transform = (x, y) =&amp;gt; x - y;

const title = (x) =&amp;gt; ++x + x++;

const helloRonaldo = score.bind(ronaldo, 2029, transform, title);

helloRonaldo();

const helloMessi = score.bind(messi, 2029, transform, title);

helloMessi();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;You score 1989 times&quot; and &quot;You score 1963 times&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;You score 1959 times&quot; and &quot;You score 1989 times&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;You score 1989 times&quot; and &quot;You score 1953 times&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;You score 1959 times&quot; and &quot;You score 1963 times&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;bind()&lt;/code&gt; allows us to bind a function declared with any object. Here we bind &lt;code&gt;score()&lt;/code&gt; and both &lt;code&gt;ronaldo&lt;/code&gt; and &lt;code&gt;messi&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;score()&lt;/code&gt; we pass three parameters &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;tr&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; in which both &lt;code&gt;tr&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; are function. They handle simple things as defined afterwards.&lt;/p&gt; 
&lt;p&gt;When we bind &lt;code&gt;score()&lt;/code&gt; with &lt;code&gt;ronaldo&lt;/code&gt; and &lt;code&gt;messi&lt;/code&gt;, we pass three parameters as declared in the &lt;code&gt;score()&lt;/code&gt; function wherein &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; are functions.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;19. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var person = {};

Object.defineProperties(person, {
  name: {
    value: &quot;Vuong&quot;,
    enumerable: true,
  },
  job: {
    value: &quot;developer&quot;,
    enumerable: true,
  },
  studying: {
    value: &quot;PhD&quot;,
    enumerable: true,
  },
  money: {
    value: &quot;NZD&quot;,
    enumerable: false,
  },
});

class Evaluate {
  static checkFlag(obj) {
    return Object.getOwnPropertyNames(obj) &amp;gt; Object.keys(obj)
      ? Object.getOwnPropertyNames(obj)
      : Object.keys(obj);
  }
}

const flag = Evaluate.checkFlag(person);

console.log(flag.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 1&lt;/li&gt; 
 &lt;li&gt;B: 2&lt;/li&gt; 
 &lt;li&gt;C: 3&lt;/li&gt; 
 &lt;li&gt;D: 4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Object.keys(obj)&lt;/code&gt; is almost identical to &lt;code&gt;Object.getOwnPropertyNames(obj)&lt;/code&gt; except the fact that the latter returns any type of object&#39;s property regardless of &lt;code&gt;enumerable&lt;/code&gt;. By default &lt;code&gt;enumerable&lt;/code&gt; is true when creating object. Using &lt;code&gt;Object.defineProperties&lt;/code&gt; or &lt;code&gt;Object.defineProperty&lt;/code&gt; we can manually set this option to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;As such the object &lt;code&gt;person&lt;/code&gt; will get 3 using&lt;code&gt;Object.keys(obj)&lt;/code&gt;but 4 with &lt;code&gt;Object.getOwnPropertyNames(obj)&lt;/code&gt;. &lt;code&gt;In short Object.keys(obj)&lt;/code&gt; only returns the property setting the enumerable as &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;20. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const id = 10;

const getID = (...id) =&amp;gt; {
  id(id);

  function id(id) {
    console.log(typeof id);
  }
};

getID(id);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: ReferenceError&lt;/li&gt; 
 &lt;li&gt;B: 10&lt;/li&gt; 
 &lt;li&gt;C: undefined&lt;/li&gt; 
 &lt;li&gt;D: &#39;function&#39;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;When declaring a function inside another function, we are working with Closure in JavaScript. Note that if a function is declared as normal (rather than function expression), it is hoisted. We might see several &lt;code&gt;id&lt;/code&gt; in the code snippet above but in fact, some of them does nothing.&lt;/p&gt; 
&lt;p&gt;The result of the code depending on the operator &lt;code&gt;typeof id&lt;/code&gt;, which is &lt;code&gt;function&lt;/code&gt;. So &lt;code&gt;id&lt;/code&gt; in this operation is the &lt;code&gt;id()&lt;/code&gt; function.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;21. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var book1 = {
  name: &quot;Name of the rose&quot;,
  getName: function () {
    console.log(this.name);
  },
};

var book2 = {
  name: { value: &quot;Harry Potter&quot; },
};

var bookCollection = Object.create(book1, book2);

bookCollection.getName();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &#39;Harry Potter&#39;&lt;/li&gt; 
 &lt;li&gt;B: &#39;Name of the rose&#39;&lt;/li&gt; 
 &lt;li&gt;C: ReferenceError&lt;/li&gt; 
 &lt;li&gt;D: Object object&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Object.create&lt;/code&gt; allows us to create an object which is based on another object. If we do not pass the second parameter - &lt;code&gt;book2&lt;/code&gt; in this case - the &lt;code&gt;name&lt;/code&gt; property of the object &lt;code&gt;bookCollection&lt;/code&gt; will be &lt;code&gt;Name of the rose&lt;/code&gt; inherited from the &lt;code&gt;book1&lt;/code&gt;. It means we can provide additional properties when declaring object with &lt;code&gt;Object.create&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bookCollection&lt;/code&gt; has its own property &lt;code&gt;name&lt;/code&gt; and another one inherited from &lt;code&gt;book1&lt;/code&gt;. In this case its own property &lt;code&gt;name&lt;/code&gt; will show up as it has higher priority. That is why we get &#39;Harry Potter&#39;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;22. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(() =&amp;gt; {
  const a = Object.create({});

  const b = Object.create(null);

  let f1 = a.hasOwnProperty(&quot;toString&quot;);

  let f2 = &quot;toString&quot; in b;

  let result =
    f1 === false &amp;amp;&amp;amp; f2 === false
      ? console.log((typeof a.toString()).length)
      : console.log(b.toString());
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: ReferenceError&lt;/li&gt; 
 &lt;li&gt;B: undefined&lt;/li&gt; 
 &lt;li&gt;C: 0&lt;/li&gt; 
 &lt;li&gt;D: 6&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The two objects &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are created using &lt;code&gt;Object.create()&lt;/code&gt; operator. There is a bit of difference between them as &lt;code&gt;a&lt;/code&gt; inherits from Object prototype but &lt;code&gt;b&lt;/code&gt; is totally empty when we pass the &lt;code&gt;null&lt;/code&gt; paramater. Yet &lt;code&gt;hasOwnProperty(&#39;toString&#39;)&lt;/code&gt; always returns &lt;code&gt;false&lt;/code&gt; neither &lt;code&gt;a&lt;/code&gt; nor &lt;code&gt;b&lt;/code&gt; given that &lt;code&gt;toString()&lt;/code&gt; is not defined inside these objects. The method however is still available as it is inherited from Object prototype.&lt;/p&gt; 
&lt;p&gt;Both &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt; return &lt;code&gt;false&lt;/code&gt;. Note that we use &lt;code&gt;object.hasOwnProperty(&#39;key&#39;)&lt;/code&gt; and &lt;code&gt;(&#39;key&#39; in object)&lt;/code&gt; to check the availability of a key in an object. There is a bit difference between the two as the latter also returns the key inherited. You might want to have a look here: https://stackoverflow.com/questions/455338/how-do-i-check-if-an-object-has-a-key-in-javascript&lt;/p&gt; 
&lt;p&gt;Then &lt;code&gt;typeof a.toString()&lt;/code&gt; returns &lt;code&gt;string&lt;/code&gt;, which gives us 6 with the &lt;code&gt;.length&lt;/code&gt; property.&lt;/p&gt; 
&lt;p&gt;If the syntax is odd to you, you might look for &#39;self-invoking function&#39; and &#39;arrow function&#39; in JavaScript.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;23. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let promise = new Promise((rs, rj) =&amp;gt; {
  setTimeout(() =&amp;gt; rs(4), 0);

  Promise.resolve(console.log(3));

  console.log(2);
});

promise
  .then((rs) =&amp;gt; {
    console.log(rs ? rs ** rs : rs);
    return rs;
  })
  .then((rs) =&amp;gt; console.log(rs == 256 ? rs : rs * rs));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 3, 2, 256, 256&lt;/li&gt; 
 &lt;li&gt;B: 3, 2, 256, 16&lt;/li&gt; 
 &lt;li&gt;C: 256, 16, 3, 2&lt;/li&gt; 
 &lt;li&gt;D: 16, 256, 3, 2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We first declare a promise-based code with &lt;code&gt;let&lt;/code&gt; and then call it. Given that &lt;code&gt;setTimeout()&lt;/code&gt; is an asynchronous action, it will run last even the time is set to 0 in &lt;code&gt;setTimeout(() =&amp;gt; rs(4), 0);&lt;/code&gt;. Although &lt;code&gt;Promise.resolve(console.log(3))&lt;/code&gt; also returns a promise but it is a Microtasks, then it has a higher priority than Tasks as set by &lt;code&gt;setTimeout()&lt;/code&gt;. You might want to have a look at this post https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;.then()&lt;/code&gt; we chain the result so that we have &lt;code&gt;4^4&lt;/code&gt; in the first then() and &lt;code&gt;4*4&lt;/code&gt; in the second &lt;code&gt;then()&lt;/code&gt;. Note that &lt;code&gt;return rs&lt;/code&gt; returns the original value.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;24. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function f() {
  let promise = new Promise((resolve, reject) =&amp;gt; {
    setTimeout(() =&amp;gt; resolve(&quot;done!&quot;), 0);
  });

  setTimeout(() =&amp;gt; console.log(&quot;world&quot;), 0);

  console.log(await promise);

  console.log(&quot;hello&quot;);
}

f(setTimeout(() =&amp;gt; console.log(&quot;kiora&quot;), 0));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: ReferenceError&lt;/li&gt; 
 &lt;li&gt;B: done, hello, world&lt;/li&gt; 
 &lt;li&gt;C: hello, done, world&lt;/li&gt; 
 &lt;li&gt;D: kiora, done, hello, world&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;Though we do not declare any paramater for the function &lt;code&gt;f()&lt;/code&gt;, we pass &lt;code&gt;setTimeout(()=&amp;gt;console.log(&quot;kiora&quot;),0)&lt;/code&gt; when call it. We therefore get &#39;kiora&#39; first.&lt;/p&gt; 
&lt;p&gt;Given that the variable &lt;code&gt;promise&lt;/code&gt; returns a solved promise and it is called with the keyword &lt;code&gt;await&lt;/code&gt;, JavaScript will &#39;pause&#39; at this line &lt;code&gt;console.log(await promise);&lt;/code&gt; till the result is resolved. That is why we get &quot;done&quot; at the next result.&lt;/p&gt; 
&lt;p&gt;Why we do not get &quot;world&quot; or &quot;hello&quot; at the second ? As JavaScript &quot;pauses&quot; at the line with &lt;code&gt;await&lt;/code&gt; keyword, we cannot get &quot;hello&quot; as usual (note that whenever we call setTimeout(), this function will run last because it is an asynchronous task operator), whereas &lt;code&gt;setTimeout(()=&amp;gt; console.log(&quot;world&quot;), 0);&lt;/code&gt; should always run last.&lt;/p&gt; 
&lt;p&gt;Here we might see a bit of difference when employing &lt;code&gt;await&lt;/code&gt; keyword before asynchronous operator (in this case, we use &lt;code&gt;setTimeout()&lt;/code&gt; as an example) or when call the function/operator without it.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;25. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function name() {
  return new Promise((resolve) =&amp;gt; {
    setTimeout(() =&amp;gt; {
      resolve(&quot;New Zealand&quot;);
    }, 10);
  });
}

function fruit() {
  return new Promise((resolve) =&amp;gt; {
    setTimeout(() =&amp;gt; {
      resolve(&quot;Kiwi&quot;);
    }, 20);
  });
}

(async function countryandfruit() {
  const getName = await name();
  const getFruit = await fruit();

  console.log(`Kiora: ${getName} ${getFruit}`);
})();

(async function fruitandcountry() {
  const [getName, getFruit] = await Promise.all([name(), fruit()]);

  console.log(`Hello: ${getName} ${getFruit}`);
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: Null&lt;/li&gt; 
 &lt;li&gt;B: Kiora&lt;/li&gt; 
 &lt;li&gt;C: &quot;Hello: New Zealand Kiwi&quot; -&amp;gt; &quot;Kiora: New Zealand Kiwi&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;Kiora: New Zealand Kiwi&quot; -&amp;gt; &quot;Hello: New Zealand Kiwi&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;Both &lt;code&gt;countryandfruit&lt;/code&gt; and &lt;code&gt;fruitandcountry&lt;/code&gt; are self invoking functions. Both are declared with the keyword &lt;code&gt;async&lt;/code&gt;, it means the code inside will run step by step. It helps us control the flow of data much more concise as compared to Promise-based operator or callback way.&lt;/p&gt; 
&lt;p&gt;The first function returns &lt;code&gt;&quot;Kiora: New Zealand Kiwi&quot;&lt;/code&gt; and the second one ouputs &lt;code&gt;&quot;Hello: New Zealand Kiwi&quot;&lt;/code&gt;. We might think that the order will be the same but actually the order of the result is reversed because the function with &lt;code&gt;await&lt;/code&gt; keyword will run step by step rather than in in parallel as Promise.all. It means &lt;code&gt;fruitandcountry&lt;/code&gt; will run faster than &lt;code&gt;countryandfruit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You might want to have a look at the difference between the two at https://alligator.io/js/async-functions/&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;26. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MySort {
  constructor(object) {
    this.object = object;
  }

  getSort() {
    return Object.entries(this.object)[0][1].sort()[
      Object.values(this.object).length
    ];
  }
}

const object = {
  month: [&quot;July&quot;, &quot;September&quot;, &quot;January&quot;, &quot;December&quot;],
};

const sortMe = new MySort(object);

console.log(sortMe.getSort());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: July&lt;/li&gt; 
 &lt;li&gt;B: September&lt;/li&gt; 
 &lt;li&gt;C: January&lt;/li&gt; 
 &lt;li&gt;D: December&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Object.entries&lt;/code&gt; returns an array consisting of both key and value from an object while &lt;code&gt;Object.values&lt;/code&gt; retuns an array of the values of object and &lt;code&gt;Object.keys&lt;/code&gt; gives us an array of keys of the object. As such, &lt;code&gt;Object.entries(object)&lt;/code&gt; in the code snippet above gives us a nested array with just one element in which the values are put in another nested array like that &lt;code&gt;[[&quot;month&quot;, [&quot;July&quot;, &quot;September&quot;, &quot;January&quot;, &quot;December&quot;]]]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For that reason, &lt;code&gt;Object.entries(this.object)[0][1].sort()&lt;/code&gt; will actually sort the value array and return a new order as &quot;December&quot; -&amp;gt; &quot;January&quot; -&amp;gt; &quot;July&quot; -&amp;gt; &quot;September&quot;. Hence, when we get the element with the index given by &lt;code&gt;[Object.values(this.object).length]&lt;/code&gt; we get &lt;code&gt;January&lt;/code&gt; because &lt;code&gt;[Object.values(this.object).length]&lt;/code&gt; give us 1 (the length of the array given by Object.values);&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;27. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const flag = [] !== !!!!![];

let f = () =&amp;gt; {};

console.log((typeof f()).length + flag.toString().length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: 12&lt;/li&gt; 
 &lt;li&gt;C: 13&lt;/li&gt; 
 &lt;li&gt;D: 14&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;Comparing two arrays or two objects in JavaScript always return &lt;code&gt;false&lt;/code&gt; because both are passed by reference, unlike primitive types such as string, number or boolean. That is why comparing [] and [] using either == or === returns &lt;code&gt;false&lt;/code&gt;. The weird part is the &lt;code&gt;!==!!!!!&lt;/code&gt; which is equivalent to &lt;code&gt;!==&lt;/code&gt;, nothing special. So the &lt;code&gt;flag&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the expression function &lt;code&gt;f()&lt;/code&gt;, we use arrow function here but and &lt;code&gt;{}&lt;/code&gt; is a part of the function rather than an object. In case you want to return an object, you have to write as &lt;code&gt;let f = () =&amp;gt; ({})&lt;/code&gt; or simply using normal way to define function. With the keyword &lt;code&gt;return&lt;/code&gt;, we can easily catch the content of the function when using normal way to define function.&lt;/p&gt; 
&lt;p&gt;Thus, the &lt;code&gt;typeof f()&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; rathern &lt;code&gt;object&lt;/code&gt;. We then get the length 9 and the flag (true) becomes &#39;true&#39; (a string, by using toString() function), which returns 3 with the property &lt;code&gt;length&lt;/code&gt;. We finally get 13.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;28. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function (a, b, c) {
  arguments[2] = (typeof arguments).length;
  c &amp;gt; 10 ? console.log(c) : console.log(++c);
})(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 4&lt;/li&gt; 
 &lt;li&gt;B: 5&lt;/li&gt; 
 &lt;li&gt;C: 6&lt;/li&gt; 
 &lt;li&gt;D: 7&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;We have a self-invoking function with three parameters declared. Note that &lt;code&gt;arguments&lt;/code&gt; inside a function returns an object consisting of the parameters of the function.&lt;/p&gt; 
&lt;p&gt;The key part here is that when we assign a value to that array (it is array-like, as mentioned above) (or any element), the function will use that value rather than the value from the parameter we pass to it when calling the function. Hence, &lt;code&gt;c&lt;/code&gt; will be &lt;code&gt;(typeof arguments).length;&lt;/code&gt; (6) rather than 3.&lt;/p&gt; 
&lt;p&gt;As &lt;code&gt;c&lt;/code&gt; has a new value of 6, it is definitely less than 10, so we get the final result &lt;code&gt;console.log(++c)&lt;/code&gt;, which returns 7.&lt;/p&gt; 
&lt;p&gt;Note that &lt;code&gt;arguments&lt;/code&gt; is not available on arrow functions. See more detailed here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments&lt;/p&gt; 
&lt;p&gt;From ES6 onwards, it is recommended to use ...restParameter given that it is a true array. It means you can manipulate the parameter with native JavaScript functions such as map, reduce or filter.&lt;/p&gt; 
&lt;p&gt;For PHP developer, we have &lt;code&gt;func_get_args()&lt;/code&gt; in PHP that does the same thing, but it will not override the value passed. Check it by yourself at https://3v4l.org/dMfhW&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;29. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator {
  constructor(a, b) {
    this.a = a;
    this.b = b;
  }
  static getFlag() {
    return new Array(this.a).length == new Array(this.b).toString().length;
  }

  getValue() {
    return Calculator.getFlag() ? typeof this.a : typeof new Number(this.b);
  }
}

const me = new Calculator(5, 5);

console.log(me.getValue());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: &quot;string&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;object&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;number&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We have a class named Calculator. When declaring a new instance of the object, we pass two parameters &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. These two parameters have the same value but &lt;code&gt;new Array(this.a).length&lt;/code&gt; is totally different from &lt;code&gt;new Array(this.b).toString().length&lt;/code&gt; because the latter returns a string &lt;code&gt;&quot;,,,,&quot;&lt;/code&gt; meaning the length 4 while the former returns the length of an array and we therefore get 5.&lt;/p&gt; 
&lt;p&gt;For that reason &lt;code&gt;getFlag()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. In &lt;code&gt;getValue()&lt;/code&gt; we get &lt;code&gt;typeof new Number(this.b);&lt;/code&gt; which returns &lt;code&gt;object&lt;/code&gt;. That is a bit different from &lt;code&gt;typeof b&lt;/code&gt;, which returns &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;30. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var name = &quot;Auckland&quot;;

const nz = {
  name: &quot;Kiwi&quot;,

  callMe: function () {
    return this.name;
  },
};

let me = nz.callMe;

let she = nz.callMe.bind(nz);

let result = me() === nz.callMe() ? she() : `${me()} ${she()}`;

console.log(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: undefined&lt;/li&gt; 
 &lt;li&gt;B: &quot;Auckland&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;Kiwi&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;Auckland Kiwi&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The key point in this question involves the keyword &lt;code&gt;this&lt;/code&gt; in JavaScript. We have a simple object that contains one method and one string property &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;First, it is important to write down is that &lt;code&gt;let me = nz.callMe;&lt;/code&gt; and then call &lt;code&gt;me()&lt;/code&gt; is totally different from directly calling &lt;code&gt;nz.callMe()&lt;/code&gt;. If we assign a variable to a method delared inside an object, &lt;code&gt;this&lt;/code&gt; in that method will behave differently (when we call the variable as a method and when dirrectly call that method). In particular, in the first case, &lt;code&gt;this&lt;/code&gt; is the &lt;code&gt;window&lt;/code&gt; object while in the second one, &lt;code&gt;this&lt;/code&gt; inside the function still points to property &lt;code&gt;name&lt;/code&gt; in the object &lt;code&gt;nz&lt;/code&gt;. It means &lt;code&gt;me()&lt;/code&gt; returns &quot;Auckland&quot; while &lt;code&gt;nz.callMe&lt;/code&gt; returns &quot;Kiwi&quot;.&lt;/p&gt; 
&lt;p&gt;Then &lt;code&gt;result&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; and we get the final output value &lt;code&gt;${me()} ${she()}&lt;/code&gt;. Why &lt;code&gt;she()&lt;/code&gt; is different from &lt;code&gt;me()&lt;/code&gt;? You might easily guess that &lt;code&gt;she&lt;/code&gt; still &lt;code&gt;bind&lt;/code&gt; to the object &lt;code&gt;nz&lt;/code&gt; rather than &lt;code&gt;window&lt;/code&gt; object as in &lt;code&gt;me()&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;31. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const club = {
  name: &quot;Juventus&quot;,
  player: [&quot;Ronaldo&quot;],
  showMePlayer: function () {
    this.player.map(function (thename) {
      console.log(this.name.length);
    }, this);
  },
  showMe: function () {
    this.player.forEach(
      function (thename) {
        console.log(this.name.length);
      }.bind(this)
    );
  },
  show: function () {
    const self = this;
    this.player.map(function (thename) {
      console.log(self.name.length);
    });
  },
  Me: function () {
    this.player.map(function (thename) {
      console.log(this.name.length);
    });
  },
};

club.showMePlayer();
club.showMe();
club.show();
club.Me();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 8 - 8 - 8 - 8&lt;/li&gt; 
 &lt;li&gt;B: &quot;Juventus&quot; - &quot;Juventus&quot; - &quot;Juventus&quot; - &quot;Juventus&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;Ronaldo&quot; - &quot;Ronaldo&quot; - &quot;Ronaldo&quot; - &quot;Ronaldo&quot;&lt;/li&gt; 
 &lt;li&gt;D: 8 - 8 - 8 - 0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The code snippet above is not a big challenge for you I guess. It simply gives you an example of &lt;code&gt;this&lt;/code&gt; in different contexts when we declare an anonymous function inside a method of an object. The three first methods are common ways to handle &lt;code&gt;this&lt;/code&gt; using &lt;code&gt;this&lt;/code&gt; as second parameter in &lt;code&gt;map()&lt;/code&gt;, by using &lt;code&gt;bind(this)&lt;/code&gt; in &lt;code&gt;forEach&lt;/code&gt; (or map()) or by &lt;code&gt;that = this&lt;/code&gt;technique (we did use &lt;code&gt;seft&lt;/code&gt; rathern &lt;code&gt;that&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;The last method &lt;code&gt;Me()&lt;/code&gt; will cause unexpected result because &lt;code&gt;this.name&lt;/code&gt; does not bind to the object &lt;code&gt;club&lt;/code&gt;. Note that you might get another result when testing the code on jsbin.com. On Chrome and Firefox, we get 0.&lt;/p&gt; 
&lt;p&gt;For further information, kindly have a look at http://speakingjs.com/es5/ch17.html#_pitfall_losing_this_when_extracting_a_method&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;32. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;((...a) =&amp;gt; {
  const b = [&quot;javascript&quot;, &quot;new zealand&quot;];

  const c = [...a, typeof a, ...b, &quot;kiwi&quot;];

  console.log(c.length + c[0].length);
})(new Array(10));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 5&lt;/li&gt; 
 &lt;li&gt;B: 10&lt;/li&gt; 
 &lt;li&gt;C: 15&lt;/li&gt; 
 &lt;li&gt;D: 20&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;...&lt;/code&gt; can be used in two ways in JavaScript (and PHP) as either &lt;code&gt;spread operator&lt;/code&gt; or &lt;code&gt;rest parameter&lt;/code&gt;. You might have to check the following article about the two. They are the same as three dots, but the way they are employed vary considerably between the two. https://javascript.info/rest-parameters-spread-operator&lt;/p&gt; 
&lt;p&gt;We see both &lt;code&gt;spread operator&lt;/code&gt; and &lt;code&gt;rest parameter&lt;/code&gt; in the code snippet above. First the parameter &lt;code&gt;(...a)&lt;/code&gt; in the self-invoking function is of course a &lt;code&gt;rest parameter&lt;/code&gt; while the constant &lt;code&gt;c&lt;/code&gt; we see the &lt;code&gt;spread operator&lt;/code&gt;. In the former case, it simply means that you can pass to the function as many parameter as you want. Note that the &lt;code&gt;typeof a&lt;/code&gt; in this case is &lt;code&gt;object&lt;/code&gt; even though it is a native array in JavaScript. (I means native array because you might think about array-like if we use arguments. Please have a look at the question 28 or this link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments).&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Spread operator&lt;/code&gt; as in the constant &lt;code&gt;c&lt;/code&gt; allows us to combine array. So &lt;code&gt;...a&lt;/code&gt; in the code above is &lt;code&gt;rest parameter&lt;/code&gt; when it is used as function parameter but in this case it is the syntax of &lt;code&gt;spread operator&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, we get &lt;code&gt;c&lt;/code&gt; with 5 elements (&lt;code&gt;...a&lt;/code&gt; is a nested array, so the &lt;code&gt;length&lt;/code&gt; is 1) but the first element has 10 child elements (when we pass to the function &lt;code&gt;new Array(10)&lt;/code&gt;). The length of both then returns 15.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;33. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Kiora(name, ...career) {
  this.name = name;

  return Array.isArray(career) === true &amp;amp;&amp;amp; typeof career === &quot;object&quot; ? {} : &quot;&quot;;
}

var student = new Kiora(&quot;Vuong&quot;);

console.log(student.name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;Vuong&quot;&lt;/li&gt; 
 &lt;li&gt;B: undefined&lt;/li&gt; 
 &lt;li&gt;C: ErrorReference&lt;/li&gt; 
 &lt;li&gt;D: false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We have a function constructor &lt;code&gt;Kiora&lt;/code&gt; (written with a capital letter, but that is optional) that can be used to create object, as the &lt;code&gt;student&lt;/code&gt; object in the code above. In the function, we have two parameters with the second one is actually a &lt;code&gt;rest parameter&lt;/code&gt;. The typeof operator is &lt;code&gt;object&lt;/code&gt; but if we check with &lt;code&gt;Array.isArray(array)&lt;/code&gt; it also returns true.&lt;/p&gt; 
&lt;p&gt;For that reason, &lt;code&gt;Array.isArray(career) === true &amp;amp;&amp;amp; typeof career === &quot;object&quot;&lt;/code&gt; returns true. Hence the &lt;code&gt;return&lt;/code&gt; operator finally returns an object &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You might be surprised when &lt;code&gt;console.log(student.name);&lt;/code&gt; outputs &lt;code&gt;undefined&lt;/code&gt; given that the constructor function &lt;code&gt;Kiora&lt;/code&gt; returns an object. Otherwise, we might simply get the value &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;34. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Filter {
  constructor(element) {
    this.element = element;
  }
  filter() {
    return this.type() === &quot;object&quot; ? this.element[0].name : &quot;hello&quot;;
  }

  type() {
    return typeof this.element;
  }
}

let countries = [
  { name: &quot;New Zealand&quot;, isdeveloped: true },
  { name: &quot;Vietnam&quot;, isdeveloped: false },
];

let x = new Filter(countries);

const filter = countries.filter((item) =&amp;gt; {
  return !item.isdeveloped;
});

console.log(x.filter().length + filter[0].name.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 15&lt;/li&gt; 
 &lt;li&gt;B: 16&lt;/li&gt; 
 &lt;li&gt;C: 17&lt;/li&gt; 
 &lt;li&gt;D: 18&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;Apologize that the code snippet is a bit longer than usual. But actually it is not really challenging as you might think. You can easily get the correct result after spending a little of time to debug.&lt;/p&gt; 
&lt;p&gt;First we declare a class that has two methods. The first method &lt;code&gt;filter()&lt;/code&gt; will returns the first element of the array (of the propterty &lt;code&gt;element&lt;/code&gt;) or simply returns &lt;code&gt;hello&lt;/code&gt; depending on the &lt;code&gt;type()&lt;/code&gt; method. We know that &lt;code&gt;typeof of array&lt;/code&gt; will return &lt;code&gt;object&lt;/code&gt; so the &lt;code&gt;filter()&lt;/code&gt; method return &lt;code&gt;this.element[0].name&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Try to make you feel confused, we then call the built-in &lt;code&gt;filter()&lt;/code&gt; method. This native method returns a new array depending on the condition we pass to the call-back function. Note that &lt;code&gt;!item.isdeveloped&lt;/code&gt; means &lt;code&gt;false&lt;/code&gt;. It means we get &lt;code&gt;Vietnam&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Finally we get &lt;code&gt;New Zealand&lt;/code&gt;.length and &lt;code&gt;Vietnam&lt;/code&gt;.length, which in total returns 18.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h6&gt;35. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function abc() {
  console.log(8);

  await Promise.resolve(2).then(console.log);

  console.log(3);
}

setTimeout(() =&amp;gt; {
  console.log(1);
}, 0);

abc();

queueMicrotask(() =&amp;gt; {
  console.log(0);
});

Promise.resolve(4).then(console.log);

console.log(6);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 6 - 8 - 3 - 0 - 4 - 2 - 1&lt;/li&gt; 
 &lt;li&gt;B: 8 - 2 - 3 - 0 - 4 - 6 - 1&lt;/li&gt; 
 &lt;li&gt;C: 6 - 8 - 2 - 0 - 4 - 3 - 1&lt;/li&gt; 
 &lt;li&gt;D: 8 - 6 - 2 - 0 - 4 - 3 - 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;D is correct anwser. The order of the asynchronous code&#39;s output depends on the MicroTask or MacroTask. MicroTask has a higher priority. Note that the synchronous code always be executed before asynchronous code. So in essense, we have the order as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;  1) synchronous code
  2) microtask code (promise, queueMicrotask)
  3) macrotask code (setTimeout, setInterval)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be awared that in Nodejs environment, we also have &lt;code&gt;process.nextTick(callback)&lt;/code&gt; which has the highest priority but we dont have it in this code.&lt;/p&gt; 
&lt;p&gt;So, first callback in the &lt;code&gt;setTimeout()&lt;/code&gt; will be executed last given that this is a MacroTask. That is why we got 1 last.&lt;/p&gt; 
&lt;p&gt;Second, the function &lt;code&gt;abc()&lt;/code&gt; is called next. Then we have 8 printed out in the console first. As the next line of code inside that function is an asynchrnous code with the keyword &quot;await&quot;, we then &lt;code&gt;console.log(6)&lt;/code&gt; as &lt;code&gt;Promise.resolve(4).then(console.log)&lt;/code&gt; is an asynchrnous code. That is why we got 6.&lt;/p&gt; 
&lt;p&gt;Now is the time for &lt;code&gt;Promise.resolve(2)&lt;/code&gt;, so we get 2. At this point, you might have some sort of confusion. What will happend if we do not pass the keyword &quot;await&quot; before &lt;code&gt;Promise.resolve(2)&lt;/code&gt; ?&lt;/p&gt; 
&lt;p&gt;As we have &lt;code&gt;await&lt;/code&gt;, the code will be blocked here. Then what? We get 0 and 4 not 3. &lt;code&gt;Promise&lt;/code&gt; and &lt;code&gt;queueMicrotask&lt;/code&gt; are both microtask and they are already to run before &lt;code&gt;console.log(3)&lt;/code&gt;. The reason is that microtask queue need to be emptied before any other codes can be called in the callstack.&lt;/p&gt; 
&lt;p&gt;In the next step, we get 3 and the last one is 1.&lt;/p&gt; 
&lt;p&gt;What would happend if we do not have the &lt;code&gt;await&lt;/code&gt; keyword? Then the order of the output will be 8 - 3 - 6 - 2 - 0 - 4 -1.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;36. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myAccount(money) {
  let myMoney = money;

  return {
    status: function () {
      return `You have $ ${myMoney} in your account`;
    },
    dePoSit: function (amount) {
      myMoney = myMoney + amount;
    },
    withDraw: function (amount) {
      if (amount &amp;gt; myMoney) {
        return `You cannot withdraw money now`;
      }
      myMoney = myMoney - amount;
    },
  };
}

const vuong = myAccount(1000);

vuong.withDraw(500);

vuong.withDraw(200);

vuong.dePoSit(100);

vuong.withDraw(50);

console.log(vuong.status());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;You have $ 950 in your account&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;You have $ 1000 in your account&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;You have $ 550 in your account&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;You have $ 350 in your account&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;As the &quot;state&quot; of the data is preserved each time we call &lt;code&gt;dePoSit()&lt;/code&gt; or &lt;code&gt;withDraw()&lt;/code&gt;, hence we get $350 after all.&lt;/p&gt; 
&lt;p&gt;Noted that that is a kind of &quot;factory&quot; function with &quot;preload&quot; data. You might think about another object when pass to &lt;code&gt;myAccount(somedata);&lt;/code&gt; some other data. That is a really helpful way to create multiple objects from a factory function.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;37. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const hoccoban = {
  x: &quot;youtube.com/hoccoban&quot;.length,
  getMe() {
    const inner = function () {
      console.log(++this.x);
    };
    inner.bind(this)();
  },
};

hoccoban.getMe();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 20&lt;/li&gt; 
 &lt;li&gt;B: 21&lt;/li&gt; 
 &lt;li&gt;C: 22&lt;/li&gt; 
 &lt;li&gt;D: 23&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We get 21. First &quot;youtube.com/hoccoban&quot; returns 20 as we are using the property length of the string. Then it is being added one more value in &lt;code&gt;++this.x&lt;/code&gt;. The question here seems trivial but it is actually not. There is a crucial note we should keep in mind is that &lt;code&gt;console.log(++this.x)&lt;/code&gt; will not work as &lt;code&gt;x&lt;/code&gt; is undefined when it is called outside of the object.&lt;/p&gt; 
&lt;p&gt;We can solve the problem with &lt;code&gt;this&lt;/code&gt; in this case by using arrow function in the inner so that is can become something like &lt;code&gt;const inner = () =&amp;gt; {}&lt;/code&gt; as the arrow function does not actually have &lt;code&gt;this&lt;/code&gt;. It will automatically look around and call the available object when the function is executed.&lt;/p&gt; 
&lt;p&gt;The second solution is that we can somehow &quot;bypass&quot; the tricky &lt;code&gt;this&lt;/code&gt; by using that/this solution. We just need to declare a new variable &lt;code&gt;const that = this&lt;/code&gt; inside getMe() and before declaring inner function. That is a quite common practice.&lt;/p&gt; 
&lt;p&gt;The third solution is to take advantage of call(), bind() and apply() which are native methods of function (yes, function is also an object in JavaScript). In this case, we implement &lt;code&gt;bind(this)&lt;/code&gt; to &quot;bind&quot; the function and the object so that &lt;code&gt;this&lt;/code&gt; can actually point to the object when the function is executed. Note that bind() cannot be instantlly executed so that we need to add () after we bridge the function and the object. If we replace bind() with call(), then we do not need to pass () as in the above example. So &lt;code&gt;inner.bind(this)();&lt;/code&gt; will become &lt;code&gt;inner.call(this);&lt;/code&gt;. They are technically equal. In practice, we tend to create a new variable to get the result from the binding of the function and the object.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;38. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* hocCoBan() {
  yield &quot;js.edu.vn&quot;;
  yield &quot;youtube.com/hoccoban&quot;;
  yield &quot;Vuong Nguyen&quot;;
}

let data = hocCoBan();

console.log((typeof data).length + data.next().value.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: 10&lt;/li&gt; 
 &lt;li&gt;C: Error&lt;/li&gt; 
 &lt;li&gt;D: 15&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;First, take a closer look at the function. It has a asterisk (*) next to the keyword &quot;function&quot;. We do not have &lt;code&gt;return&lt;/code&gt; keyword inside the function itself. What is going on here?&lt;/p&gt; 
&lt;p&gt;It you have already known about generator, then this code snippet is not a big deal at all. We do not use generator very often, but this native JavaScript feature is the basis for async/await function, which is supported in ES7 that allows us to handle the flow of asynchronous code much easily.&lt;/p&gt; 
&lt;p&gt;The operator &lt;code&gt;typeof data&lt;/code&gt; will return &lt;code&gt;object&lt;/code&gt; rather than &lt;code&gt;function&lt;/code&gt;, which is the same case with &lt;code&gt;typeof hocCoBan()&lt;/code&gt;. Of course, &lt;code&gt;typeof hocCoBan&lt;/code&gt; still returns &lt;code&gt;function&lt;/code&gt;. But it is actually a normal function. Basically, we get 6 in the operator &lt;code&gt;(typeof data).length&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then &lt;code&gt;data.next()&lt;/code&gt; calls the the built-in method &lt;code&gt;next()&lt;/code&gt; which will output the value in the first &lt;code&gt;yield&lt;/code&gt;, which is declared in the function. Then we get the length 9 with the string &lt;code&gt;js.edu.vn&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;After all, we get 15. Not that understanding generator is quite important if you really want to understand &lt;code&gt;async/await&lt;/code&gt; function.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;39. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const a = [1, 2, &quot;chó&quot;, 3, 1, &quot;chó&quot;, &quot;mèo&quot;, 3];

const b = [...new Set(a)];

b.length = &quot;chó&quot;.length;

console.log(b);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 4&lt;/li&gt; 
 &lt;li&gt;B: [1, 2, &quot;chó&quot;, 3, &quot;mèo&quot;]&lt;/li&gt; 
 &lt;li&gt;C: [1, 2, &quot;chó&quot;, &quot;mèo&quot;]&lt;/li&gt; 
 &lt;li&gt;D: [1, 2, &quot;chó&quot;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;When using ... in array, it is called spread operator in JavaScript which, technically, is similar to rest parameter (using in the context of function). It provides a more elegant way to concat (combine) or copy array. In the code above, b is a copy of a. However, as we pass a in to a &lt;code&gt;Set&lt;/code&gt;, it will return the unique value only in a. It means, now we have `[1, 2, &quot;chó&quot;, 3, &quot;mèo&quot;] in b.&lt;/p&gt; 
&lt;p&gt;However, we then set the length for b as 3. Note that &quot;chó&quot;.length returns 3 but in PHP, strlen(&quot;chó&quot;) returns 4, just in case you are coming from PHP world.&lt;/p&gt; 
&lt;p&gt;As we set the length for the array b, we also cut down the array itselt. That is the reason why we get [1, 2, &quot;chó&quot;] printing out in the console.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;40. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mot = function (m) {
  return arguments[0];
};

const hai = function (...m) {
  return arguments[arguments[0]];
};

const a = [mot(123), hai(1, 2, 3)];

console.log(typeof a !== &quot;object&quot; ? a[0] : a[1]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 1&lt;/li&gt; 
 &lt;li&gt;B: 2&lt;/li&gt; 
 &lt;li&gt;C: 3&lt;/li&gt; 
 &lt;li&gt;D: 123&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;First, it should be noted that &lt;code&gt;arguments&lt;/code&gt; cannot be used in an arrow function, so in order to take advantage of this feature, we have to write the function in the casual form. &lt;code&gt;arguments&lt;/code&gt; returns an array-like object that contains any parameter we pass into the function when executing it.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;...&lt;/code&gt; is a &lt;code&gt;rest operator&lt;/code&gt;. We use this feature in function and array. Noted that in the context of array, it is called &lt;code&gt;spread operator&lt;/code&gt; and it behaves differently. When declaring a function with ..., we can pass as many parameters into the function itselt when executing it as we want.&lt;/p&gt; 
&lt;p&gt;Note that in the function &lt;code&gt;hai&lt;/code&gt;, we return &lt;code&gt;arguments[arguments[0]]&lt;/code&gt; which means &lt;code&gt;hai(1, 2, 3)&lt;/code&gt; will return 2 rathern than 1 because &lt;code&gt;arguments[0]&lt;/code&gt; return 1 and then &lt;code&gt;arguments[1]&lt;/code&gt; returns 2.&lt;/p&gt; 
&lt;p&gt;The last thing we have to take note is that the typeof operator of an array will return &lt;code&gt;object&lt;/code&gt;, here the trick seems more daunting. The final anwser is 2 as we got it in &lt;code&gt;a[1]&lt;/code&gt;, or &lt;code&gt;hai(1, 2, 3)&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;41. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component {
  constructor(age) {
    this.age = age + `${typeof Coder}`.length;
  }

  getAge() {
    return ++this.age;
  }
}

class Coder extends Component {
  constructor(age) {
    super(age);
    this.age = age - `${typeof Coder}`.length;
  }
}

const a = new Coder(16);

console.log(a.getAge());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 7&lt;/li&gt; 
 &lt;li&gt;B: 8&lt;/li&gt; 
 &lt;li&gt;C: 9&lt;/li&gt; 
 &lt;li&gt;D: 10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We have two simple classes in which Coder extends Component. Nothing fancy. As &lt;code&gt;typeof ClassName&lt;/code&gt; returns &lt;code&gt;function&lt;/code&gt; rather than &lt;code&gt;class&lt;/code&gt;, we then get 8 in the operator &lt;code&gt;&quot;function&quot;.length&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Though we implement &lt;code&gt;super(age)&lt;/code&gt; in the Coder class, we actually overwrite the contructor of the parent class Component in the child class Coder. Therefore, when initiating the object &lt;code&gt;a&lt;/code&gt;, the following code is automatically triggered &lt;code&gt;this.age = age -&lt;/code&gt;${typeof Coder}&lt;code&gt;.length;&lt;/code&gt;. The difference between the child and parent &#39;s constructor is minus (-) and plus (+) in the above code.&lt;/p&gt; 
&lt;p&gt;As such, we have 16 - 8 rather than 16 + 8, which returns 8. The function &lt;code&gt;getAge()&lt;/code&gt; returns 9, so the corrent answer is C.&lt;/p&gt; 
&lt;p&gt;Bear in mind that JavaSCript is not a &quot;real&quot; OOP programming language even though we can now implement &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; as in other languages.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;42. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class RemoveFalse {
  constructor(element) {
    this.element = element;

    this.length = this.removeFalse().length;
  }

  removeFalse() {
    this.element = this.element.filter(Boolean);

    return this.element;
  }
}

const theArray = [true, false, 1, 0, NaN, undefined, &quot;&quot;, null, &quot;js.edu.vn&quot;];

const a = new RemoveFalse(theArray);

console.log(a.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: false&lt;/li&gt; 
 &lt;li&gt;B: true&lt;/li&gt; 
 &lt;li&gt;C: 2&lt;/li&gt; 
 &lt;li&gt;D: 3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The key message that can be taken away in the code snippet above is &lt;code&gt;filer(Boolean)&lt;/code&gt; which can be taken into consideration in case you want to eliminate &lt;code&gt;falsy values&lt;/code&gt; in an array. We can use &lt;code&gt;filter(callback)&lt;/code&gt; or &lt;code&gt;filter(Boolean)&lt;/code&gt; in particular in this case to do that. Note that we have to pass into the filter function a callback and in this case Boolean is actually a function. You can check &lt;code&gt;typeof Boolean&lt;/code&gt; to see it.&lt;/p&gt; 
&lt;p&gt;Similar to &lt;code&gt;map&lt;/code&gt; or &lt;code&gt;reduce&lt;/code&gt; function, &lt;code&gt;filter&lt;/code&gt; always returns a new array from the exisiting one. &lt;code&gt;[true, false, 1, 0, NaN, undefined, &quot;&quot;, null, &quot;js.edu.vn&quot;].filter(Boolean);&lt;/code&gt; will return &lt;code&gt;[true, 1, &quot;js.edu.vn&quot;];&lt;/code&gt;, hence calling the function &lt;code&gt;removeFalse()&lt;/code&gt; gives us 3. So the correct answer is 3.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;43. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const coderfarm = [1, [], {}, [], 2, 3];

const converted = Number(coderfarm instanceof Array);

const result = coderfarm.indexOf(converted + true);

console.log(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: []&lt;/li&gt; 
 &lt;li&gt;B: {}&lt;/li&gt; 
 &lt;li&gt;C: 2&lt;/li&gt; 
 &lt;li&gt;D: 4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;We have a simple array in the code snippet above that includes some digits, two other arrays and one object. Using the built-in function &lt;code&gt;Number&lt;/code&gt;, we can convert any value passing to the function into &lt;code&gt;digit&lt;/code&gt;. As &lt;code&gt;coderfarm instanceof Array&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;converted&lt;/code&gt; get 1. Noted that you can use another way to check the type of an array is &lt;code&gt;Array.isArrray(arrayToBeChecked)&lt;/code&gt; which return a &lt;code&gt;boolean&lt;/code&gt; value. Suprisingly, the operator &lt;code&gt;typeof []&lt;/code&gt; returns &lt;code&gt;object&lt;/code&gt; rather than &lt;code&gt;array&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The built-in function &lt;code&gt;indexOf&lt;/code&gt; will return the index of the element that is being checked. So as &lt;code&gt;converted + true&lt;/code&gt; return 2, we are going to check the index of the element with the value 2 in the array &lt;code&gt;coderfarm&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We get 4 in the &lt;code&gt;console.log&lt;/code&gt; and the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;44. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const converter = (arrayInput) =&amp;gt; {
  return { ...arrayInput };
};

const content = [&quot;function&quot;, &quot;object&quot;, &quot;decorator&quot;];

const checking = content[Number(false)];

const result = typeof converter(content) === content[1];

console.log(checking ? (result ? (typeof converter).length : false) : false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 6&lt;/li&gt; 
 &lt;li&gt;B: NaN&lt;/li&gt; 
 &lt;li&gt;C: true&lt;/li&gt; 
 &lt;li&gt;D: 8&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The operator &lt;code&gt;...&lt;/code&gt; in JavaScript is very handy. The function &lt;code&gt;converter&lt;/code&gt; is quite trivial, it takes advantege of &lt;code&gt;...&lt;/code&gt; (rest operator || spread operator) to turn an array into an object.&lt;/p&gt; 
&lt;p&gt;First we have the constant &lt;code&gt;checking&lt;/code&gt; with the value &lt;code&gt;function&lt;/code&gt; given that &lt;code&gt;Number(false)&lt;/code&gt; gives us 0 and that is the first index in the array &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Second, the constant &lt;code&gt;result&lt;/code&gt; gives us the value &lt;code&gt;true&lt;/code&gt; as the &lt;code&gt;typeof converter(content)&lt;/code&gt; is &lt;code&gt;function&lt;/code&gt;, which is also the value of &lt;code&gt;content[1]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then in the final code, we have &lt;code&gt;checking = true&lt;/code&gt;, and then &lt;code&gt;result = true&lt;/code&gt; as well, so the final result is &lt;code&gt;(typeof converter).length&lt;/code&gt; which is equivalent to &lt;code&gt;&quot;function&quot;.length&lt;/code&gt; because the &lt;code&gt;typeof of converter&lt;/code&gt; is simply &lt;code&gt;function&lt;/code&gt;. We get 8 after all and the correct answer is D.&lt;/p&gt; 
&lt;p&gt;So the key message here is that we can take advantate of the &lt;code&gt;spread operator&lt;/code&gt; (or &lt;code&gt;...&lt;/code&gt;) to turn an array to an object. For example: &lt;code&gt;const a = [&quot;hello&quot;, 2]&lt;/code&gt;, then we can have a go with &lt;code&gt;const b = {...a}&lt;/code&gt; and b is now an object with the following value: &lt;code&gt;{0: &quot;hello&quot;, 1: 2}&lt;/code&gt;. The key of the object is actually the index of the original array.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;45. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* js(length) {
  for (let i = length.length; i &amp;gt; 0; --i) {
    yield i;
  }
}

let getJS = js(typeof js);

let result = getJS.next().value;

console.log(result + getJS.next().value);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10&lt;/li&gt; 
 &lt;li&gt;B: 14&lt;/li&gt; 
 &lt;li&gt;C: 15&lt;/li&gt; 
 &lt;li&gt;D: 16&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We have a generator function in the code snippet above, which is defined with the *. Noted that we can &quot;store&quot; as many result as we want in a generator thanks to the keyword &lt;code&gt;yield&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;As the &lt;code&gt;typeof js&lt;/code&gt; is &lt;code&gt;function&lt;/code&gt;, so the length of the string &lt;code&gt;function&lt;/code&gt; is 8. So when calling &lt;code&gt;getJS.next().value;&lt;/code&gt;, we get 8. However, in the next calling, it returns 7, and in the following calling after that, we get 6. That is why generator can &quot;store&quot; and &quot;release&quot; (or return) as many value as we want.&lt;/p&gt; 
&lt;p&gt;So the answer is C, which is 8 (first execution of the generator) + 7 (second execution of the generator).&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;46. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ages = [10, 15, 20, 25];

let response = [];

ages.some(function (currentValue, index, ages) {
  if (currentValue &amp;gt; ages[ages.length - index])
    response.push(currentValue + ages.length);
});

console.log(response);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: [20]&lt;/li&gt; 
 &lt;li&gt;B: [20, 25]&lt;/li&gt; 
 &lt;li&gt;C: [25, 29]&lt;/li&gt; 
 &lt;li&gt;D: [29]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt; is a built-in function facilitating us to iterate the array using a callback. As in the code snippet above, there are three parameters in the callback, namely &lt;code&gt;currentValue&lt;/code&gt; (the value of the current element that is being checked), &lt;code&gt;index&lt;/code&gt; (the index of the element in the array that is being checked/evaluated) and &lt;code&gt;ages&lt;/code&gt; (the array itself).&lt;/p&gt; 
&lt;p&gt;The function &lt;code&gt;some()&lt;/code&gt; returns a &lt;code&gt;boolean&lt;/code&gt; value. The code &lt;code&gt;currentValue &amp;gt; ages[ages.length - index]&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; only one time, which is the last element. Let &#39;s examine the code when it runs through each element:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;10 &amp;gt; ages[4 - 0]. As ages[4] returns &lt;code&gt;undefined&lt;/code&gt;, and &lt;code&gt;10 &amp;gt; undefined&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, it stops.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;15 &amp;gt; ages[4 - 1]. As ages[3] returns 25, it breaks as the operator returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;20 &amp;gt; ages[4 - 2]. As ages[2] returns 20, it breaks as the operator returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;25 &amp;gt; ages[4 - 3]. As ages[1] returns 10, it returns &lt;code&gt;true&lt;/code&gt;. Only this value is being pushed to the array &lt;code&gt;response&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;So &lt;code&gt;response.push(currentValue + ages.length)&lt;/code&gt; will add the value 25 + 4 to the array &lt;code&gt;response&lt;/code&gt;, D is the correct answer.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;47. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const getSTring = (string, method = false) =&amp;gt; {
  if (method === true) {
    return string.slice(1, 4).length;
  }

  return string.substr(1, 4).length;
};

console.log(getSTring(&quot;hello&quot;, true) + getSTring(&quot;hello&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 6&lt;/li&gt; 
 &lt;li&gt;B: 7&lt;/li&gt; 
 &lt;li&gt;C: 8&lt;/li&gt; 
 &lt;li&gt;D: 9&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;getString()&lt;/code&gt; is an arrow function with two parameters. As you can see that the parameter &lt;code&gt;method&lt;/code&gt; has the default value &lt;code&gt;false&lt;/code&gt;, then if you do not pass any value to it when executing the function, the default value will be used.&lt;/p&gt; 
&lt;p&gt;The key thing to take note from the code above is the difference betweet &lt;code&gt;slice(1, 4)&lt;/code&gt; (which returns 3 characters) and &lt;code&gt;substr(1, 4)&lt;/code&gt; (which returns 4 ones).&lt;/p&gt; 
&lt;p&gt;Finally &lt;code&gt;console.log(getSTring(&quot;hello&quot;, true) + getSTring(&quot;hello&quot;))&lt;/code&gt; returns 7 because &lt;code&gt;slice&lt;/code&gt; and &lt;code&gt;substr&lt;/code&gt; are both used.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;48. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function (a, b, c) {
  console.log(Boolean([...arguments].slice(2, 3)[0].slice(3, 4)));
})(&quot;hello&quot;, &quot;world&quot;, &quot;new zealand&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;new&quot;&lt;/li&gt; 
 &lt;li&gt;B: true&lt;/li&gt; 
 &lt;li&gt;C: &quot;land&quot;&lt;/li&gt; 
 &lt;li&gt;D: false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;The code above is a self-executing function. It runs when it is being declared. We have three parameters and three arguments passed are &lt;code&gt;&quot;hello&quot;, &quot;world&quot;&lt;/code&gt; and &lt;code&gt;&quot;new zealand&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;First, &lt;code&gt;arguments&lt;/code&gt; returns an object consisting of arguments passed to the function when executing it. However, using spread operator &lt;code&gt;...&lt;/code&gt;, we then convert the object to an array. We can also do it by using &lt;code&gt;Array.from(object)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Second, &lt;code&gt;slice(2, 3)&lt;/code&gt; extracts the element from the index 2 to the index 3, which returns &lt;code&gt;&quot;new zealand&quot;&lt;/code&gt;. It is still an array. We then extract the element with the index &lt;code&gt;[0]&lt;/code&gt; and we get the string &lt;code&gt;&quot;new zealand&quot;&lt;/code&gt; rather than an array.&lt;/p&gt; 
&lt;p&gt;Third, &lt;code&gt;&quot;new zealand&quot;.slice(3, 4)&lt;/code&gt; gives us an empty string (with a space between) &lt;code&gt;&quot; &quot;&lt;/code&gt;. The &lt;code&gt;Boolean(&quot; &quot;)&lt;/code&gt; gives us &lt;code&gt;true&lt;/code&gt;. Noted that if there is no space in the empty string, we get &lt;code&gt;false&lt;/code&gt; instead.&lt;/p&gt; 
&lt;p&gt;So the correct answer is B.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;49. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class HocCoBan {
  name = &quot;hello world&quot;;

  getSlice(slice) {
    return this.getName(slice).slice(true, this.name.length);
  }

  getName(space) {
    return this.name.split(space);
  }
}

HocCoBan.prototype.split = function (argument) {
  return this.getSlice(argument);
};

const a = new HocCoBan();

console.log(a.split(&quot;&quot;).length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: true&lt;/li&gt; 
 &lt;li&gt;C: 10&lt;/li&gt; 
 &lt;li&gt;D: 11&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;The code above is nothing much special. However it is written in a complicated way on purpose. First, we have a class named &quot;HocCoBan&quot; with two methods and one property. Then we add another method &lt;code&gt;split&lt;/code&gt; using the tradional way (via &lt;code&gt;prototype&lt;/code&gt;). Note that &lt;code&gt;class&lt;/code&gt; in JavaScript is simply a syntactic sugar of &lt;code&gt;function&lt;/code&gt; given that &lt;code&gt;typeof ClassName&lt;/code&gt; return &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When we call the method &lt;code&gt;split&lt;/code&gt;, we pass the an empty string to it. This method then call other methods. The flow is as follows:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;split(&quot;&quot;)&lt;/code&gt; ==&amp;gt; &lt;code&gt;this.getSlice(&quot;&quot;)&lt;/code&gt; ==&amp;gt; &lt;code&gt;this.getName(&quot;&quot;)&lt;/code&gt; ==&amp;gt; &lt;code&gt;this.name.split(&quot;&quot;)&lt;/code&gt;. Here &lt;code&gt;split&lt;/code&gt; is a built-in function that convert a string to an array.&lt;/p&gt; 
&lt;p&gt;Noted that in &lt;code&gt;getSlice()&lt;/code&gt;, we also use &lt;code&gt;.slice(true, this.name.length)&lt;/code&gt; to &lt;code&gt;slice&lt;/code&gt; (cut) the array from the index 1 to 11. So the length is 10.&lt;/p&gt; 
&lt;p&gt;So the final answer is C.&lt;/p&gt; 
&lt;p&gt;This code might help us master the concept function &lt;code&gt;prototype&lt;/code&gt; in JavaScript and the understand the difference between the built in function &lt;code&gt;String.prototype.split&lt;/code&gt; and the function we declare by ourself &lt;code&gt;HocCoBan.prototype.split&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;50. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function javaScript(node) {
  let mot = node.includes(&quot;I&quot;) ? &quot;love&quot; : &quot;you&quot;;

  return function (deno = mot) {
    let hai = node.replace(deno, &quot;done&quot;);

    return function (done = hai) {
      return (node + deno + done).length;
    };
  };
}

console.log(javaScript(&quot;I love you&quot;)()());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 18&lt;/li&gt; 
 &lt;li&gt;B: 24&lt;/li&gt; 
 &lt;li&gt;C: 20&lt;/li&gt; 
 &lt;li&gt;D: 25&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;Apart from learning some built-in functions to handle string such as &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;inclues&lt;/code&gt;, we are reviving the concept of &lt;code&gt;currying function&lt;/code&gt; in JavaScript. Say you want to declare a function with three parameters, you may consider refactoring the code by declaring 3 nested functions, each with one parameter you wish to pass to. Basically, both of them work in the same way. However, noted that only the outerest (the main) function has the name as &lt;code&gt;javaScript&lt;/code&gt; in the code above. Both nested (inner) functions are declared without the name. We also use three &lt;code&gt;return&lt;/code&gt; keywords in the code.&lt;/p&gt; 
&lt;p&gt;When executing the function, you then have three &lt;code&gt;()&lt;/code&gt; as in the &lt;code&gt;javaScript(&quot;I love you&quot;)()()&lt;/code&gt;. We do not pass any argument into the second and third functions (both are inner/nested functions without the name) and these functions will take the default value we have alreaded declared when being executing.&lt;/p&gt; 
&lt;p&gt;All in all, we have the final operator &lt;code&gt;return (node + deno + done).length;&lt;/code&gt; in which &lt;code&gt;node&lt;/code&gt; is &quot;I love you&quot;, &lt;code&gt;deno&lt;/code&gt; is &quot;love&quot; and &lt;code&gt;done&lt;/code&gt; is &quot;I done you&quot;. The length of these strings is 24, which you can calculate by yourself the concatenated string &lt;code&gt;I love youyou I done you&lt;/code&gt;. Be aware of the &lt;code&gt;empty space&lt;/code&gt;, which is also taken into account.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;51. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const www = [&quot;hello&quot;, &quot;coranovirus&quot;, &quot;kiora&quot;, &quot;world&quot;, &quot;new zealand&quot;];

const found = www.find(function (world) {
  return world &amp;gt; &quot;victory&quot;;
});

const result = found[1] &amp;lt; www[0][0] ? www[false ? 1 : 0] : www[true ? 0 : 1];

console.log(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;hello&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;world&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;victory&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;w&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;The key information in the question above is about the method &lt;code&gt;Array.prototype.find()&lt;/code&gt;. It returns the first element in the array that meets the condition declared in the callback function, which is passed to the function. The array is being iterated to check every single element. In the code above, we might easily see that the element &lt;code&gt;world&lt;/code&gt; is the first element in the array that has a larger value than &lt;code&gt;victory&lt;/code&gt;. Remember that &quot;w&quot; &amp;gt; &quot;v&quot; return trues if the two letters are compared. When two words are being compared, only the first letter in each word is being utilised to compare.&lt;/p&gt; 
&lt;p&gt;As the result, &lt;code&gt;found&lt;/code&gt; is now &lt;code&gt;world&lt;/code&gt; and thus &lt;code&gt;found[1]&lt;/code&gt; returns the letter &lt;code&gt;w&lt;/code&gt; whereas &lt;code&gt;www[0][0]&lt;/code&gt; gives us the letter &lt;code&gt;h&lt;/code&gt; in the element &lt;code&gt;hello&lt;/code&gt;. It means &lt;code&gt;found[1] &amp;lt; www[0][0]&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So the final result is &lt;code&gt;www[true ? 0: 1]&lt;/code&gt; or &lt;code&gt;www[0]&lt;/code&gt;, which is &lt;code&gt;hello&lt;/code&gt;. And the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;52. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function (flag) {
  let age = Boolean(NaN === NaN ? false : flag);

  console.log(age.toString()[Number(flag)]);
})([]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;f&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;t&quot;&lt;/li&gt; 
 &lt;li&gt;C: true&lt;/li&gt; 
 &lt;li&gt;D: false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We have a self-executing function with the parameter/argument is an empty array. Noted that &lt;code&gt;NaN === NaN&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, then &lt;code&gt;age&lt;/code&gt; gets the value &lt;code&gt;flag&lt;/code&gt;, which is an empty array. However, the boolean value is &lt;code&gt;true&lt;/code&gt; when we call &lt;code&gt;Boolean([])&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The function &lt;code&gt;toString()&lt;/code&gt; returns the string &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;Number([])&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;. Then we get &quot;t&quot; in the console.log. The correct answer is B.&lt;/p&gt; 
&lt;p&gt;Keep in mind that &lt;code&gt;Boolean([])&lt;/code&gt; ==&amp;gt; &lt;code&gt;true&lt;/code&gt; but &lt;code&gt;Number([])&lt;/code&gt; ==&amp;gt; &lt;code&gt;0&lt;/code&gt;. And sadly &lt;code&gt;NaN === NaN&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;53. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
1) console.log(Boolean([]));
2) console.log(Number([]));
3) console.log(Number(Boolean([])));
4) console.log(Boolean(Number([])));

5) console.log(Boolean({}));
6) console.log(Number({}));
7) console.log(Number(Boolean({})));
8) console.log(Boolean(Number({})));

9) console.log(Boolean(new Boolean(false)));

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: true - 0 - 1 - false - true - 1 - 1 - false - false&lt;/li&gt; 
 &lt;li&gt;B: true - 0 - 1 - false - false - NaN - 1 - false - true&lt;/li&gt; 
 &lt;li&gt;C: true - 0 - 1 - false - false - false - 1 - false - false&lt;/li&gt; 
 &lt;li&gt;D: true - 0 - 1 - false - true - NaN - 1 - false - true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;JavaScript is sometimes tedious to deal with given that it is a loosely type language. The data type of a variable can be changed depending on the value. An unexpected behaviour might unfortunately occur when you change/convert the original value to another one.&lt;/p&gt; 
&lt;p&gt;For example, the code 2 &lt;code&gt;Number([])&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt; and 6 &lt;code&gt;(Number({}))&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt;, although both &lt;code&gt;(Boolean([]))&lt;/code&gt; and &lt;code&gt;(Boolean({}))&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the code 9 &lt;code&gt;Boolean(new Boolean(false))&lt;/code&gt;, we get &lt;code&gt;true&lt;/code&gt; even though we pass into the function constructor &lt;code&gt;Boolean()&lt;/code&gt; a &lt;code&gt;false&lt;/code&gt; (as the) parameter. However, if we do not use the keyword &lt;code&gt;new&lt;/code&gt;, then &lt;code&gt;false&lt;/code&gt; will return. It seems that in &lt;code&gt;Boolean(new Boolean(false))&lt;/code&gt;, we have a valid opreration, so it is &lt;code&gt;true&lt;/code&gt;. However, in the &lt;code&gt;Boolean(Boolean(false)))&lt;/code&gt; where we do not use the keyword &lt;code&gt;new&lt;/code&gt;, we then get &lt;code&gt;false&lt;/code&gt; because now a &lt;code&gt;false&lt;/code&gt; value is being evaluated rather than an operation.&lt;/p&gt; 
&lt;p&gt;So, the correct answer is D.&lt;/p&gt; 
&lt;p&gt;Credit: @tiepphan, Vietnamese Angular Facebook group.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;54. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myYoutube = {
  name: &quot;hoccoban&quot;,
  address: &quot;youtube.com/hoccoban&quot;,
  getInfo() {
    return this;
  },
  content: () =&amp;gt; (this === window ? myYoutube.getInfo() : this),
};

console.log(myYoutube.content().name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;hoccoban&quot;&lt;/li&gt; 
 &lt;li&gt;B: window (object)&lt;/li&gt; 
 &lt;li&gt;C: NaN&lt;/li&gt; 
 &lt;li&gt;D: undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;To answer the tricky question above, you might want to have a look at the concept of &lt;code&gt;this&lt;/code&gt; in JavaScript (on browser environment). By default, &lt;code&gt;this&lt;/code&gt; refers to &lt;code&gt;window&lt;/code&gt; object. Note that &lt;code&gt;Window&lt;/code&gt; (written in capital) is the Function constructor of the &lt;code&gt;window&lt;/code&gt; object. In this regard, &lt;code&gt;console.log(this === window)&lt;/code&gt; return true but &lt;code&gt;console.log(this === Window)&lt;/code&gt; returns false.&lt;/p&gt; 
&lt;p&gt;As &lt;code&gt;getInfo()&lt;/code&gt; is an arrow function, &lt;code&gt;this&lt;/code&gt; declared inside this function points to &lt;code&gt;window&lt;/code&gt;, so &lt;code&gt;myYoutube.content()&lt;/code&gt; returns &lt;code&gt;myYoutube.getInfo()&lt;/code&gt;. Noted that we have to explicitly write &lt;code&gt;myYoutube.getInfo()&lt;/code&gt; to make sure the code will run correctly as &lt;code&gt;this&lt;/code&gt; in this case does not work as it does not refer to the currect object. In the function &lt;code&gt;getInfo()&lt;/code&gt;, however, &lt;code&gt;this&lt;/code&gt; actually refers to the currect object instead of &lt;code&gt;window&lt;/code&gt; object because we use a normal function here.&lt;/p&gt; 
&lt;p&gt;Then we have the property &lt;code&gt;name&lt;/code&gt; with the value &quot;hoccoban&quot;. So the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;55. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myArray = [1, 2, 3];

myArray.someProperty = this;

Array.prototype.someOtherProperty = &quot;hello&quot;;

let result = [];

for (let key in myArray) {
  result.push(key);
}

for (let key in myArray) {
  if (myArray.hasOwnProperty(key)) {
    result.push(key);
  }
}

console.log(result.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10&lt;/li&gt; 
 &lt;li&gt;B: NaN&lt;/li&gt; 
 &lt;li&gt;C: 9&lt;/li&gt; 
 &lt;li&gt;D: 7&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;We have a simple array that consists of 3 elements. If checking the type of the array with the operator &lt;code&gt;typeof&lt;/code&gt;, we will have &lt;code&gt;object&lt;/code&gt;. (Hint, you can make use of &lt;code&gt;Array.isArray(array))&lt;/code&gt; or &lt;code&gt;array instanceof Array&lt;/code&gt; to check its type).&lt;/p&gt; 
&lt;p&gt;When declaring &lt;code&gt;myArray.someProperty&lt;/code&gt;, we now add a new property to that array and when declaring &lt;code&gt;Array.prototype.someOtherProperty = &quot;hello&quot;&lt;/code&gt;, we add a new property to every single array.&lt;/p&gt; 
&lt;p&gt;As a result, the &lt;code&gt;for... in&lt;/code&gt; loop will iterate through the array in question and return its key/property and the inherited property as well. However, in the second iteration, we take advantage of the method &lt;code&gt;hasOwnProperty(key)&lt;/code&gt; to check whether a particular key/property actually belongs to the array in question rather than the inherited one.&lt;/p&gt; 
&lt;p&gt;In short, in the first iteration, we get 5 (3 original ones, 1 property that is directly added to the array, 1 inherited from the Array.prototype. In the second one, we only get 4 as the inherited property is not taken into consideration.&lt;/p&gt; 
&lt;p&gt;Keep in mind that, we use &lt;code&gt;for... of&lt;/code&gt; to loop through an array or the traditional &lt;code&gt;for&lt;/code&gt; loop. It is not a good practice to use &lt;code&gt;for ... in&lt;/code&gt; to loop through an array. It is often used to loop through an object.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;56. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const coderfarm = [1, 2, 3, 4, 5];

const [top, ...bottom] = (function (a) {
  let result = a;

  a.unshift(new Array(3));

  return result;
})(coderfarm);

console.log(top.length + bottom.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 8&lt;/li&gt; 
 &lt;li&gt;B: 9&lt;/li&gt; 
 &lt;li&gt;C: 10&lt;/li&gt; 
 &lt;li&gt;D: 11&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;We are using destructure array (or object) technique to extract element of an array (or object). We also take advantage of &lt;code&gt;...&lt;/code&gt; (spread parameter) here.&lt;/p&gt; 
&lt;p&gt;The array we are destructuring is returned from a self-executing function. First we pass the parameter &lt;code&gt;coderfarm&lt;/code&gt;, which is the parameter &lt;code&gt;a&lt;/code&gt; when declaring the function. Then we update this array with some additional value (an array with three &lt;code&gt;undefined&lt;/code&gt; elements using &lt;code&gt;new Array(3)&lt;/code&gt;) on the top of the array (using &lt;code&gt;unshift&lt;/code&gt;). The array is updated now as &lt;code&gt;[[undefined, undefined, undefined], 1, 2, 3, 4, 5]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So &lt;code&gt;top&lt;/code&gt; is the first element of the array or &lt;code&gt;[undefined, undefined, undefined]&lt;/code&gt;, which returns 3 when we check the length.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;bottom&lt;/code&gt; returns the rest of the array in question, which is 5 when using &lt;code&gt;length&lt;/code&gt; property.&lt;/p&gt; 
&lt;p&gt;The final number is 8 and thus the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;57. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let age = { number: 10 };

const getAge = (flag) =&amp;gt; {
  flag ? delete age.number : delete age;
  return age.number++;
};

console.log(getAge(false));

console.log(age.number);

console.log(getAge(true));

console.log(age.number);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10 - 10 - NaN - NaN&lt;/li&gt; 
 &lt;li&gt;B: 10 - 10 - undefined - undefined&lt;/li&gt; 
 &lt;li&gt;C: 10 - 11 - undefined - undefined&lt;/li&gt; 
 &lt;li&gt;D: 10 - 11 - NaN - NaN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The operator &lt;code&gt;delete&lt;/code&gt; only works on the property of an object, not the object itself. In the code snippet above, we have a simple function &lt;code&gt;getAge&lt;/code&gt; with the parameter &lt;code&gt;flag&lt;/code&gt;. When the &lt;code&gt;flag&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, we trigger &lt;code&gt;delete age.number&lt;/code&gt; and if it is &lt;code&gt;false&lt;/code&gt;, we will use the operator &lt;code&gt;delete&lt;/code&gt; upon the whole object.&lt;/p&gt; 
&lt;p&gt;As this operator does not work on an object, if we can say that, it turns out that &lt;code&gt;delete age&lt;/code&gt; actually does nothing. As such, &lt;code&gt;console.log(getAge(false))&lt;/code&gt; returns 10 and simultanously increases the value of &lt;code&gt;age.number&lt;/code&gt; to 11. The value is now being kept in the memory. As such, &lt;code&gt;console.log(age.number)&lt;/code&gt; will return 11.&lt;/p&gt; 
&lt;p&gt;When we pass the argument &lt;code&gt;flag&lt;/code&gt; as &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;console.log(getAge(true))&lt;/code&gt;, we will trigger &lt;code&gt;delete age.number&lt;/code&gt; which removes the value and the property &lt;code&gt;age.number&lt;/code&gt; itself. It means &lt;code&gt;age.number&lt;/code&gt; is now &lt;code&gt;undefined&lt;/code&gt;. However, because we also attempt to increase the value of this &lt;code&gt;undefined&lt;/code&gt; property using &lt;code&gt;++&lt;/code&gt; operator, it returns &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;console.log(age.number)&lt;/code&gt; also returns &lt;code&gt;NaN&lt;/code&gt; as well. So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;58. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const youtube = { name: &quot;hoccoban&quot; };

const copy = Object.create(youtube);

const cloneA = Object.assign({}, copy);

const cloneB = Object.assign({}, youtube);

console.log(cloneA.name);

console.log(cloneB.name);

console.log(copy.name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: undefined - &quot;hoccoban&quot; - &quot;hoccoban&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;hoccoban&quot; - &quot;hoccoban&quot; - &quot;hoccoban&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;hoccoban&quot; - &quot;hoccoban&quot; - &quot;undefined&quot;&lt;/li&gt; 
 &lt;li&gt;D: undefined - &quot;undefined&quot; - &quot;hoccoban&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;We have three outputs in the code snippet above.&lt;/p&gt; 
&lt;p&gt;First &lt;code&gt;console.log(cloneA.name);&lt;/code&gt; will return &lt;code&gt;undefined&lt;/code&gt; but why? We use &lt;code&gt;Object.assign&lt;/code&gt; to clone a new object from an empty and from the object &lt;code&gt;copy&lt;/code&gt;. The object &lt;code&gt;copy&lt;/code&gt; itself is actually created from the original object &lt;code&gt;youtube&lt;/code&gt; using &lt;code&gt;Object.create&lt;/code&gt;. Noted that because we use &lt;code&gt;Object.create&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt; will inherit the data from the original one but it is still an empty object itself.&lt;/p&gt; 
&lt;p&gt;Second, both &lt;code&gt;console.log(cloneB.name)&lt;/code&gt; and &lt;code&gt;console.log(copy.name)&lt;/code&gt; return &quot;hoccoban&quot; because &lt;code&gt;cloneB.name&lt;/code&gt; will have the actual property &lt;code&gt;name&lt;/code&gt;. On the contrary, &lt;code&gt;copy.name&lt;/code&gt; outputs the property &lt;code&gt;name&lt;/code&gt; inherited from the &lt;code&gt;youtube&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;59. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;((x) =&amp;gt; {
  const data = !Array.isArray(x) ? x : x.entries();

  console.log(data.next().value[1]);
})([&quot;hello&quot;, &quot;world&quot;, &quot;vuong&quot;]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: &quot;hello&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;world&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;vuong&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;We have a self-invoking function here and we pass an array to it when the function is executed. Note that &lt;code&gt;Array.isArray(x)&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt; but actually we use &lt;code&gt;!&lt;/code&gt; before &lt;code&gt;Array.isArray(x)&lt;/code&gt;. It means &lt;code&gt;data&lt;/code&gt; will return &lt;code&gt;x.entries()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The method &lt;code&gt;array.entries()&lt;/code&gt;, as you might have already known, returns a &lt;code&gt;gererator&lt;/code&gt;. Here we will call &lt;code&gt;next()&lt;/code&gt; to iterate through each element. Note that if you only call &lt;code&gt;next()&lt;/code&gt; once, it will only return the first element instead of the whole iterator.&lt;/p&gt; 
&lt;p&gt;Then when we call &lt;code&gt;value&lt;/code&gt;, it returns an array with the index and the value of the iterator. So what will we get if we call &lt;code&gt; console.log(data.next().value[0])&lt;/code&gt;. Sure, it returns &lt;code&gt;0&lt;/code&gt; as &lt;code&gt;0&lt;/code&gt; is the index.&lt;/p&gt; 
&lt;p&gt;So the correct answer is B.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;60. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let x = Symbol();

let y = Symbol();

console.log(x === y ? `${typeof x}`[1] : `${typeof x}`[2]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: &quot;object&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;y&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;m&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;As &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are both instances of &lt;code&gt;symbol&lt;/code&gt;, they are unique in our codebase; therefore, the &lt;code&gt;===&lt;/code&gt; comparison will return &lt;code&gt;false&lt;/code&gt; as expected. In the simple code snippet above, we get the &lt;code&gt;else&lt;/code&gt; operation.&lt;/p&gt; 
&lt;p&gt;It should be noted that the &lt;code&gt;typeof x&lt;/code&gt; operation gives us &lt;code&gt;symbol&lt;/code&gt;, and since a string in JavaScript is iterable, we get &lt;code&gt;m&lt;/code&gt; as we pass in the index 2.&lt;/p&gt; 
&lt;p&gt;So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;61. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const frameworks = [&quot;react&quot;, &quot;angular&quot;, &quot;vue&quot;];

const iterator = frameworks[Symbol.iterator]();
const i = frameworks.entries();

iterator.next();
i.next();

console.log(iterator.next().value[1]);
console.log(i.next().value[1]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;react&quot; - &quot;angular&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;react&quot; - &quot;react&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;angular&quot; - &quot;angular&quot;&lt;/li&gt; 
 &lt;li&gt;D: &quot;n&quot; - &quot;angular&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;As &lt;code&gt;frameworks&lt;/code&gt; is an array, it has a built-in method named &lt;code&gt;Symbol.iterator&lt;/code&gt;. You can hence iterate through the whole array using commonly used methods such as &lt;code&gt;for... of&lt;/code&gt;, normal &lt;code&gt;for loop&lt;/code&gt;, &lt;code&gt;forEach&lt;/code&gt; or &lt;code&gt;map&lt;/code&gt;, among others. That is relatively trivial, I suppose.&lt;/p&gt; 
&lt;p&gt;This code challenge above is written to help us understand the concept of iteration better. First, we use the built-in method called &lt;code&gt;entries()&lt;/code&gt; to create a new iteration. So does &lt;a href=&quot;&quot;&gt;Symbol.iterator&lt;/a&gt;. Both seem to do the same thing.&lt;/p&gt; 
&lt;p&gt;Each time we call &lt;code&gt;next()&lt;/code&gt; method, the iteration will output one element. We then can call &lt;code&gt;value()&lt;/code&gt; to get the value. The difference between &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;i&lt;/code&gt; is that the former shows the value itself while the latter outputs an array consisting of the index and the value. It means that in the code above, &lt;code&gt;iterator.next().value&lt;/code&gt; returns &lt;code&gt;angular&lt;/code&gt; and &lt;code&gt;i.next().value&lt;/code&gt; gives us &lt;code&gt;[1, angular]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;62. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class React {
  theName = &quot;Not React&quot;;
}

class Author extends React {
  static theName = &quot;Real React&quot;;

  render() {
    return this.theName;
  }

  static render() {
    return this.theName;
  }
}

const me = new Author();

console.log(me.render());

console.log(Author.render());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: &quot;Not React&quot; - &quot;Real React&quot;&lt;/li&gt; 
 &lt;li&gt;B: &quot;Not React&quot; - Error&lt;/li&gt; 
 &lt;li&gt;C: Error - Error&lt;/li&gt; 
 &lt;li&gt;D: Error - &quot;Real React&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: A&lt;/h4&gt; 
&lt;p&gt;We have two classes in the code snippet above. It sounds we are imitating React. The &lt;code&gt;React&lt;/code&gt; class has only one property named &lt;code&gt;theName,&lt;/code&gt; and no method is declared here. Providing that &lt;code&gt;Author&lt;/code&gt; extends the &lt;code&gt;React&lt;/code&gt; class, it inherits that property, surely. However, we have also declared another property with the same name in the &lt;code&gt;Author&lt;/code&gt; classs. The difference is that the property declared in the child class is given the keyword &lt;code&gt;static.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;Author&lt;/code&gt; class also has two methods with the same name &lt;code&gt;render()&lt;/code&gt;, one as regular methods and another with &lt;code&gt;static&lt;/code&gt; keyword. Will that work in JavaScript?&lt;/p&gt; 
&lt;p&gt;It turns out that JavaScript is quite flexible. It supports both property and method if they are declared with the same name as long as they are either regular property (or method) or static property (or method).&lt;/p&gt; 
&lt;p&gt;The last thing you should be aware of is that the method &lt;code&gt;static render()&lt;/code&gt; only calls the static property, here is &lt;code&gt;static theName = &quot;Real React&quot;;&lt;/code&gt; So does the regular method &lt;code&gt;render().&lt;/code&gt; As such, the code does not run into any issues.&lt;/p&gt; 
&lt;p&gt;So the correct answer is A.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;63. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class js {
  say = &quot;hello&quot;;
}

js.prototype.say = &quot;goodbye&quot;;
console.log(new js().say);

js.prototype.thename = &quot;google&quot;;
console.log(new js().thename);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: Error - Error&lt;/li&gt; 
 &lt;li&gt;B: &quot;hello&quot; - &quot;google&quot;&lt;/li&gt; 
 &lt;li&gt;C: &quot;goodbye&quot; - &quot;google&quot;&lt;/li&gt; 
 &lt;li&gt;D: Error - &quot;google&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;js&lt;/code&gt; is a standard class declared in the code snippet above that has only one property with the name &lt;code&gt;say.&lt;/code&gt; Then we again declare another property with the same name &lt;code&gt;say&lt;/code&gt; for it. You might think that the property &lt;code&gt;say&lt;/code&gt; has been overwritten with a new value &lt;code&gt;goodbye.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;That is not the case as we will get &lt;code&gt;hello&lt;/code&gt; when we run &lt;code&gt;console.log(new js().say);&lt;/code&gt;. It is clear that the JavaScript engine prioritizes the property declared inside the class more than the property declared later using the prototype mechanism.&lt;/p&gt; 
&lt;p&gt;If the property has not been declared inside the class itself, we can then add a new one with the help of &lt;code&gt;prototype&lt;/code&gt; as in &lt;code&gt;thename&lt;/code&gt;. Without the doubt, the code &lt;code&gt;console.log(new js().thename);&lt;/code&gt; gives us &lt;code&gt;google&lt;/code&gt; as expected.&lt;/p&gt; 
&lt;p&gt;So the correct answer is B.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;64. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
const App = ([y, x, z]) =&amp;gt; {			
	return ()=&amp;gt;{
			++x
		return ()=&amp;gt;{
			return x++;
		}
	}	
}

console.log(App([10, 20, 30, 40])()())

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 10&lt;/li&gt; 
 &lt;li&gt;B: 32&lt;/li&gt; 
 &lt;li&gt;C: 21&lt;/li&gt; 
 &lt;li&gt;D: 22&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: C&lt;/h4&gt; 
&lt;p&gt;To answer the question raised on the above code snippet, you might want to revisit two concepts, &lt;code&gt;currying function&lt;/code&gt; and &lt;code&gt;destructing array or object.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;First, &lt;code&gt;currying function&lt;/code&gt; means we convert a function with multiple parameters into multiple functions with a SINGLE parameter. Then you can easily manipulate the flow of the data. Noted that &lt;code&gt;currying function&lt;/code&gt; is relevant to &lt;code&gt;higher-order function&lt;/code&gt;, you might want to have a look.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;destructing array or object&lt;/code&gt; means we attempt to extract a complex array or object more conveniently. For example, &lt;code&gt;[y, x, z] = [10, 20, 30, 40]&lt;/code&gt; will extract y, x and z with the value 10, 20 and 30 respectively.&lt;/p&gt; 
&lt;p&gt;The last thing is incremental operator here &lt;code&gt;++x&lt;/code&gt; returns 21 but &lt;code&gt;x++&lt;/code&gt; does not as it still returns 21.&lt;/p&gt; 
&lt;p&gt;So the correct answer is C.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;65. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
const numbers = [5, 6, 7];

function callback(accumulator, currentValue){
	return accumulator + currentValue;
}

const theCallBack = (accumulator, currentValue) =&amp;gt; accumulator + currentValue;

const sum = numbers.reduce(callback, numbers.reduce(theCallBack, numbers.reduce(theCallBack, 7)));

console.log(sum); 

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 54&lt;/li&gt; 
 &lt;li&gt;B: 55&lt;/li&gt; 
 &lt;li&gt;C: 60&lt;/li&gt; 
 &lt;li&gt;D: 61&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt; is a bit perplexed built-in method that allows you to manipulate data in an array. It returns a single value from the array predefined as in the case with &lt;code&gt;map&lt;/code&gt; or &lt;code&gt;filter&lt;/code&gt;. The syntaxt of the function is &lt;code&gt;arr.reduce(callback( accumulator, currentValue, [, index[, array]] )[, initialValue])&lt;/code&gt;, so it accepts a callback function with four arguments including &lt;code&gt;accumulator&lt;/code&gt;, &lt;code&gt;currentValue&lt;/code&gt;, &lt;code&gt;currentIndex&lt;/code&gt; (optional) and &lt;code&gt;array&lt;/code&gt; (optional).&lt;/p&gt; 
&lt;p&gt;The second argument of the &lt;code&gt;reduce&lt;/code&gt; method, which is optional, is called &lt;code&gt;initialValue&lt;/code&gt; that will be counted as the first element with the index 0 when &lt;code&gt;reduce&lt;/code&gt; is executing. If &lt;code&gt;initialValue&lt;/code&gt; is not provided, then &lt;code&gt;reduce&lt;/code&gt; will run with the index 1 instead. &lt;code&gt;reduce()&lt;/code&gt; sounds complicated, but truly it is not. In case you want to revise the function, kindly take a look at MDN here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&lt;/p&gt; 
&lt;p&gt;The above code has two callback functions named &lt;code&gt;callback&lt;/code&gt; and &lt;code&gt;thecallback&lt;/code&gt;, which do the same thing. The seemingly creepy code is the variable &lt;code&gt;sum&lt;/code&gt;, which is returned by a couple of nested &lt;code&gt;reduce&lt;/code&gt; functions. It turns out that there is only one &quot;real&quot; &lt;code&gt;reduce&lt;/code&gt; function and the other ones give us &lt;code&gt;initialValue&lt;/code&gt; only.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The first &lt;code&gt;initialValue&lt;/code&gt; is 7;&lt;/li&gt; 
 &lt;li&gt;The first nested &lt;code&gt;reduce&lt;/code&gt; function gives us 7 (initialValue) + 5 + 6 + 7 = 25.&lt;/li&gt; 
 &lt;li&gt;The second nested &lt;code&gt;reduce&lt;/code&gt; has 25 as the initialValue, which we get from the above. Then it returns 25 + 5 + 6 + 7 = 43;&lt;/li&gt; 
 &lt;li&gt;The &quot;real&quot; &lt;code&gt;reduce&lt;/code&gt; function now has 43 as the initialValue, the we get the final result: 43 + 5+ 6 + 7 = 61.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;66. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
const a = {name: &quot;hoccoban.com&quot;};
const b = {name: &quot;youtube.com/hoccoban&quot;};

const first = {...a}.name.length;
const second = {...a, ...b}.name.length;
const third = {...a, ...b, name: &quot;hello&quot;}.name.length;

console.log(first + second + third)

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 12&lt;/li&gt; 
 &lt;li&gt;B: 37&lt;/li&gt; 
 &lt;li&gt;C: 5&lt;/li&gt; 
 &lt;li&gt;D: 20&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: B&lt;/h4&gt; 
&lt;p&gt;The code snippet above is relatively trivial. What we can learn from it is all about the &lt;code&gt;spread operator&lt;/code&gt; (three-dot ...). Sometimes it is also used as a &lt;code&gt;rest operator&lt;/code&gt; to extract data from an object or array.&lt;/p&gt; 
&lt;p&gt;We have two simple objects which both have the same key &lt;code&gt;name&lt;/code&gt; but different values. The constant &lt;code&gt;first&lt;/code&gt; gives us the length of the string value of the keyword &lt;code&gt;name&lt;/code&gt; that is copied from &lt;code&gt;a&lt;/code&gt;. So, &lt;code&gt;first&lt;/code&gt; is now 12.&lt;/p&gt; 
&lt;p&gt;The constant &lt;code&gt;second&lt;/code&gt; merges &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; into one object. However, as &lt;code&gt;b&lt;/code&gt; has the same key &lt;code&gt;name&lt;/code&gt; with &lt;code&gt;a&lt;/code&gt;, the object created by merging two objects will have the value of &lt;code&gt;b&lt;/code&gt;. It means the constant &lt;code&gt;second&lt;/code&gt; gives us the length of &lt;code&gt;youtube.com/hoccoban&lt;/code&gt;, which is 20.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;third&lt;/code&gt; does the same thing with &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt; as it merges two objects into one. However, it also adds another key-value to the object. Coincidently, the key now is &lt;code&gt;name&lt;/code&gt;, which is the same with the key attained from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. Hence, this key and value will take over the merged object. That means &lt;code&gt;third&lt;/code&gt; is the length of the string &lt;code&gt;hello&lt;/code&gt;, which is 5.&lt;/p&gt; 
&lt;p&gt;In total, we have 12 + 20 + 5, and the final result is 37.&lt;/p&gt; 
&lt;p&gt;So the correct answer is B.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;67. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
const hocCoBan = {};

Object.defineProperty(hocCoBan, &quot;domain&quot;, {
    value: &quot;hoccoban.com&quot;,    
})

async function App({year, age}){	
	return year - age + hocCoBan.domain.length;
}

App({year: 2021, age: 30}).then(r =&amp;gt; console.log(r));

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: 2051&lt;/li&gt; 
 &lt;li&gt;B: 2001&lt;/li&gt; 
 &lt;li&gt;C: 30&lt;/li&gt; 
 &lt;li&gt;D: 2003&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;The code snippet above seems complicated regarding how we take advantage of &lt;code&gt;Object.defineProperty&lt;/code&gt; to add key and value to the object &lt;code&gt;hocCoBan&lt;/code&gt;. In fact, &lt;code&gt;Object.defineProperty&lt;/code&gt; has a couple of handy features that allow us to control the behavior of the object in some situations where we want to make sure that the object created is mutable or not, whether it is iterable (using &lt;code&gt;for..in&lt;/code&gt;) and so for. For example, if we set &lt;code&gt;configurable: false&lt;/code&gt; when we declare an object with &lt;code&gt;Object.defineProperty&lt;/code&gt;, we cannot use &lt;code&gt;delete&lt;/code&gt; operator to delete the object&#39;s property. We cannot change the value of that property as well.&lt;/p&gt; 
&lt;p&gt;The second &quot;take away&quot; message when reading the code above is the unpacking object technique, or a more frequent term is the destructing object. Say you have an object with two keys called &lt;code&gt;year&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;, then you can get them by using the destructing object technique as follows: &lt;code&gt;{year, age} = theOBject;&lt;/code&gt;. In the code above, when declaring the function &lt;code&gt;App&lt;/code&gt;, we also use destructing object technique to get the key from the object and use them as the parameters.&lt;/p&gt; 
&lt;p&gt;If you are familiar with asynchronous code in JavaScript when using the keyword &lt;code&gt;async,&lt;/code&gt; it is not a big deal to understand why we need to use &lt;code&gt;then&lt;/code&gt; to get the function &lt;code&gt;App&lt;/code&gt; being called. It fact, &lt;code&gt;async&lt;/code&gt; always returns a promise, so we need to use &lt;code&gt;then&lt;/code&gt; method to get the data we want.&lt;/p&gt; 
&lt;p&gt;The flow of the code is: 2021 - 30 + &lt;code&gt;&quot;hoccoban.com&quot;.length&lt;/code&gt; (which is 12).&lt;/p&gt; 
&lt;p&gt;The final result is 2003. So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;68. What&#39;s the output?&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
class hoccoban {
  #thisyear = 2021;
  constructor(covidTheFirstYear) {
    this.covidTheFirstYear = covidTheFirstYear;
  }

  getThisYear() {
    return this.#thisyear;
  }

	getCovidFirstYear() {
    return this.covidTheFirstYear;
  }
}

const message = new hoccoban(2019);

const result = hoccoban.hello ?? message.getThisYear() - message.getCovidFirstYear();

console.log(result)

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;A: NaN&lt;/li&gt; 
 &lt;li&gt;B: 2019&lt;/li&gt; 
 &lt;li&gt;C: undefined&lt;/li&gt; 
 &lt;li&gt;D: 2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h4&gt;Answer: D&lt;/h4&gt; 
&lt;p&gt;This challenge partly illustrates the newest features of JavaScript detailed in ECMAScript 2020 or ES11.&lt;/p&gt; 
&lt;p&gt;Now you can declare a private property in a class thanks to the symbol &lt;code&gt;#&lt;/code&gt;. Like other languages, a private property in JavaScript can only be accessed from inside the class. It will trigger an error when you attempt to call it outside the class, surely.&lt;/p&gt; 
&lt;p&gt;The second feature you might see on the code snippet above is the &lt;code&gt;nullish coalescing operator&lt;/code&gt; or &lt;code&gt;??&lt;/code&gt;. When declaring some variable such as &lt;code&gt;let myVariable = number ?? 7&lt;/code&gt;, if the variable &lt;code&gt;number&lt;/code&gt; is either &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;, the variable &lt;code&gt;myVariable&lt;/code&gt; will be assigned the value &lt;code&gt;7&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So &lt;code&gt;hoccoban.hello&lt;/code&gt; means &lt;code&gt;undefined&lt;/code&gt; because we have not added any value yet. Then by using &lt;code&gt;nullish coalescing operator&lt;/code&gt; with &lt;code&gt;??&lt;/code&gt; the variable &lt;code&gt;result&lt;/code&gt; simply returns 2 as &lt;code&gt;message.getThisYear()&lt;/code&gt; gives us 2020 and &lt;code&gt;message.getCovidFirstYear()&lt;/code&gt; gives us 2019. Note that we can access the private property outside of the class via a method, as in the method &lt;code&gt;getThisYear()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So the correct answer is D.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>nextauthjs/next-auth</title>
      <link>https://github.com/nextauthjs/next-auth</link>
      <description>&lt;p&gt;Authentication for Next.js&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;NextAuth.js is a complete open source authentication solution for &lt;a href=&quot;http://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; applications.&lt;/p&gt; 
&lt;p&gt;It is designed from the ground up to support Next.js and Serverless.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm install --save next-auth
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The easiest way to continue getting started, is to follow the &lt;a href=&quot;https://next-auth.js.org/getting-started/example&quot;&gt;getting started&lt;/a&gt; section in our docs.&lt;/p&gt; 
&lt;p&gt;We also have a section of &lt;a href=&quot;https://next-auth.js.org/tutorials&quot;&gt;tutorials&lt;/a&gt; for those looking for more specific examples.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://next-auth.js.org&quot;&gt;next-auth.js.org&lt;/a&gt; for more information and documentation.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Flexible and easy to use&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Designed to work with any OAuth service, it supports OAuth 1.0, 1.0A and 2.0&lt;/li&gt; 
 &lt;li&gt;Built-in support for &lt;a href=&quot;https://next-auth.js.org/configuration/providers&quot;&gt;many popular sign-in services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Supports email / passwordless authentication&lt;/li&gt; 
 &lt;li&gt;Supports stateless authentication with any backend (Active Directory, LDAP, etc)&lt;/li&gt; 
 &lt;li&gt;Supports both JSON Web Tokens and database sessions&lt;/li&gt; 
 &lt;li&gt;Designed for Serverless but runs anywhere (AWS Lambda, Docker, Heroku, etc…)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Own your own data&lt;/h3&gt; 
&lt;p&gt;NextAuth.js can be used with or without a database.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An open source solution that allows you to keep control of your data&lt;/li&gt; 
 &lt;li&gt;Supports Bring Your Own Database (BYOD) and can be used with any database&lt;/li&gt; 
 &lt;li&gt;Built-in support for &lt;a href=&quot;https://next-auth.js.org/configuration/databases&quot;&gt;MySQL, MariaDB, Postgres, Microsoft SQL Server, MongoDB and SQLite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Works great with databases from popular hosting providers&lt;/li&gt; 
 &lt;li&gt;Can also be used &lt;em&gt;without a database&lt;/em&gt; (e.g. OAuth + JWT)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Secure by default&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Promotes the use of passwordless sign in mechanisms&lt;/li&gt; 
 &lt;li&gt;Designed to be secure by default and encourage best practice for safeguarding user data&lt;/li&gt; 
 &lt;li&gt;Uses Cross Site Request Forgery Tokens on POST routes (sign in, sign out)&lt;/li&gt; 
 &lt;li&gt;Default cookie policy aims for the most restrictive policy appropriate for each cookie&lt;/li&gt; 
 &lt;li&gt;When JSON Web Tokens are enabled, they are signed by default (JWS) with HS512&lt;/li&gt; 
 &lt;li&gt;Use JWT encryption (JWE) by setting the option &lt;code&gt;encryption: true&lt;/code&gt; (defaults to A256GCM)&lt;/li&gt; 
 &lt;li&gt;Auto-generates symmetric signing and encryption keys for developer convenience&lt;/li&gt; 
 &lt;li&gt;Features tab/window syncing and keepalive messages to support short lived sessions&lt;/li&gt; 
 &lt;li&gt;Attempts to implement the latest guidance published by &lt;a href=&quot;https://owasp.org/&quot;&gt;Open Web Application Security Project&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Advanced options allow you to define your own routines to handle controlling what accounts are allowed to sign in, for encoding and decoding JSON Web Tokens and to set custom cookie security policies and session properties, so you can control who is able to sign in and how often sessions have to be re-validated.&lt;/p&gt; 
&lt;h3&gt;TypeScript&lt;/h3&gt; 
&lt;p&gt;You can install the appropriate types via the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install --save-dev @types/next-auth
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As of now, TypeScript is a community effort. If you encounter any problems with the types package, please create an issue at &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/next-auth&quot;&gt;DefinitelyTyped&lt;/a&gt;. Alternatively, you can open a pull request directly with your fixes there. We welcome anyone to start a discussion on migrating this package to TypeScript, or how to improve the TypeScript experience in general.&lt;/p&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;h3&gt;Add API Route&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import NextAuth from &#39;next-auth&#39;
import Providers from &#39;next-auth/providers&#39;

export default NextAuth({
  providers: [
    // OAuth authentication providers
    Providers.Apple({
      clientId: process.env.APPLE_ID,
      clientSecret: process.env.APPLE_SECRET
    }),
    Providers.Google({
      clientId: process.env.GOOGLE_ID,
      clientSecret: process.env.GOOGLE_SECRET
    }),
    // Sign in with passwordless email link
    Providers.Email({
      server: process.env.MAIL_SERVER,
      from: &#39;&amp;lt;no-reply@example.com&amp;gt;&#39;
    }),
  ],
  // SQL or MongoDB database (or leave empty)
  database: process.env.DATABASE_URL
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Add React Component&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import {
  useSession, signIn, signOut
} from &#39;next-auth/client&#39;

export default function Component() {
  const [ session, loading ] = useSession()
  if(session) {
    return &amp;lt;&amp;gt;
      Signed in as {session.user.email} &amp;lt;br/&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; signOut()}&amp;gt;Sign out&amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  }
  return &amp;lt;&amp;gt;
    Not signed in &amp;lt;br/&amp;gt;
    &amp;lt;button onClick={() =&amp;gt; signIn()}&amp;gt;Sign in&amp;lt;/button&amp;gt;
  &amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://next-auth.js.org/contributors&quot;&gt;NextAuth.js is made possible thanks to all of its contributors.&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;re open to all community contributions! If you&#39;d like to contribute in any way, please first read our &lt;a href=&quot;https://github.com/nextauthjs/next-auth/blob/canary/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;ISC&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flybywiresim/a32nx</title>
      <link>https://github.com/flybywiresim/a32nx</link>
      <description>&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/UjzuHMU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub latest release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt; 
&lt;p&gt;The following aircraft configuration is currently simulated:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Model      A320-251N
Engine     LEAP 1A-26
FMGS       Honeywell Pegasus II
FWC Std.   H2F9E
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that this configuration may change in the future as the A32NX project evolves and changes.&lt;/p&gt; 
&lt;h3&gt;SimBrief Airframe with the correct weights&lt;/h3&gt; 
&lt;p&gt;✈&lt;a href=&quot;https://www.simbrief.com/system/dispatch.php?sharefleet=eyJ0cyI6IjE2MDU4MjAwNzg5NDYiLCJiYXNldHlwZSI6IkEzMjAiLCJjb21tZW50cyI6IkZMWSBCWSBXSVJFIiwiaWNhbyI6IkEyME4iLCJuYW1lIjoiQTMyME5FTyBGQlciLCJlbmdpbmVzIjoiTEVBUC0xQTI2IiwicmVnIjoiQTIwTiIsImZpbiI6IiIsInNlbGNhbCI6IiIsImhleGNvZGUiOiIiLCJjYXQiOiJNIiwicGVyIjoiQyIsImVxdWlwIjoiU0RFM0ZHSElSV1kiLCJ0cmFuc3BvbmRlciI6IkxCMSIsInBibiI6IkExQjFDMUQxTzFTMSIsImV4dHJhcm1rIjoiIiwibWF4cGF4IjoiMTgwIiwid2d0dW5pdHMiOiJLR1MiLCJvZXciOiI0MTAwMCIsIm16ZnciOiI2MjUwMCIsIm10b3ciOiI3OTAwMCIsIm1sdyI6IjY2MDAwIiwibWF4ZnVlbCI6IjIxMjczIiwicGF4d2d0IjoiMTA0IiwiZGVmYXVsdGNpIjoiIiwiZnVlbGZhY3RvciI6IlAwMCIsImNydWlzZW9mZnNldCI6IlAwMDAwIn0-&quot;&gt;SimBrief Airframe with the correct weights&lt;/a&gt; Credits: &lt;a href=&quot;https://github.com/viniciusfont&quot;&gt;@viniciusfont&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;h3&gt;A32NX Installer&lt;/h3&gt; 
&lt;p&gt;Download the new A32NX installer where you can select either the Stable or Developer build, and download and install the mod directly into your community folder, &lt;a href=&quot;https://api.flybywiresim.com/installer&quot;&gt;download here&lt;/a&gt; (&lt;a href=&quot;https://github.com/flybywiresim/installer/&quot;&gt;source&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Traditional Download Methods&lt;/h3&gt; 
&lt;h4&gt;Latest Stable Release&lt;/h4&gt; 
&lt;p&gt;This is the recommended stable release, as it has been thoroughly tested.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest/download/flybywiresim-a32nx.zip&quot;&gt;Download the stable release here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can see the changelog on the releases page: &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases&quot;&gt;View Here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build&lt;/h4&gt; 
&lt;p&gt;This has the latest features, but is much more unstable, use at your own risk.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/download/vmaster/A32NX-master.zip&quot;&gt;Download developer build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/tag/vmaster&quot;&gt;View info about the latest build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build (with custom FBW)&lt;/h4&gt; 
&lt;p&gt;This version is the same as the regular master/development version, but with the WIP custom fly-by-wire system. Expect issues with flight directors/autopilot if you intend to use this version. No support will be provided via Discord.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://flybywiresim-packages.nyc3.cdn.digitaloceanspaces.com/vmaster-cfbw/A32NX-master-cfbw.zip&quot;&gt;Download custom FBW development build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/tree/fbw/docs&quot;&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; view warnings and info for the custom FBW build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Please follow ALL steps in this README if you encounter any issues with installation before seeking support.&lt;/h3&gt; 
&lt;p&gt;Open the zip that you downloaded from one of the links above, and drag the A32NX folder inside the zip into your Community folder.&lt;/p&gt; 
&lt;p&gt;See below for the location of your Community folder:&lt;/p&gt; 
&lt;p&gt;For the Microsoft Store edition AND/OR Gamepass edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\Packages\Microsoft.FlightSimulator_&amp;lt;RANDOMLETTERS&amp;gt;\LocalCache\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Steam edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Roaming\Microsoft Flight Simulator\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Boxed edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\MSFSPackages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above methods do not work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can find your community folder by going into FS2020 general options and enabling developer mode. You will see a menu appear on top. Go to tools and virtual file system. Click on watch bases and your community folder will be listed in one of the folders.&lt;/li&gt; 
 &lt;li&gt;Please make sure you&#39;re copying the &quot;A32NX&quot; folder into your community package folder, NOT the &quot;flybywiresim-a32nx&quot; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Known Issues (Please note that most issues are being worked on and some of them may even be fixed in the master branch)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Captain&#39;s PFD may occasionally turn off during flight&lt;/li&gt; 
 &lt;li&gt;No Smoking switch doesn&#39;t use a full range of motion.&lt;/li&gt; 
 &lt;li&gt;F/CTL page does not have working speedbrake integration&lt;/li&gt; 
 &lt;li&gt;BLEED page is not fully functional&lt;/li&gt; 
 &lt;li&gt;Automatic ECAM page switching has minor bugs&lt;/li&gt; 
 &lt;li&gt;APU/Engine fire covers cannot be retracted once opened&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The contents of this repository are DUAL LICENSED.&lt;/p&gt; 
&lt;p&gt;Textual-form source code in this repository is licensed under the GNU General Public License version 3. Artistic assets (including but not limited to images, sound banks, 3D models, and textures) are licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Creative Commons CC BY-NC-SA 4.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Any other works found to be not explicitly covered by the above definitions are all rights reserved to avoid ambiguities at the moment, but we are very permissive about their use if you contact us.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can I download the aircraft in the current state?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Yes, see &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Where is the plane in-sim?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The mod is added on top of the default A320neo from Asobo. If you want to uninstall it and revert to the original aircraft, just delete the A32NX folder in your community folder.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: What are the liveries available?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: All liveries for the default A320 are compatible with the A32NX Mod. You can download some of your favourite liveries at &lt;a href=&quot;https://flightsim.to&quot;&gt;Flightsim.to&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When will it be released?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The project is an ongoing rolling release. See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When is the next update?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We don&#39;t know, since it depends on many factors. We will announce each Stable build update via &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;discord&lt;/a&gt; and our social media: &lt;a href=&quot;https://www.facebook.com/FlyByWireSimulations&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/FlybywireSim&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do I join the team?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Head over to &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Is it payware?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: No, it is a completely free aircraft, open-source.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do we report bugs?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Report bugs to us in the &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;Discord server&lt;/a&gt;, under the #help channel, or by creating a GitHub issue. Just make sure to search for existing issues first before creating a new one.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Why is my version not the same as what I see others using?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We have two versions, the Stable and Developer (Master). The Stable version is a &#39;snapshot&#39; of the development which we regard as stable with the current version of the simulator. The Developer build is updated daily and is a constant work in progress and although we test thoroughly each update, minor issues may occur from time to time. If you find this to be the case, you can report these issues in #help in discord or via GitHub Issues (Check there is not an existing issue of the same nature as yours).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
