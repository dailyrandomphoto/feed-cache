<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Tue, 14 Sep 2021 01:51:48 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;ÌïúÍµ≠Ïñ¥&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;Êó•Êú¨Ë™û&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Fran√ßais&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Espa√±ol&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Portugu√™s&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;–†—É—Å—Å–∫–∏–π&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;T√ºrk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md&quot;&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‚òù Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/binary-floating-point&quot;&gt;Binary Floating Point&lt;/a&gt; - binary representation of the floating-point numbers.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui œÄ Algorithm&lt;/a&gt; - approximate œÄ calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher‚ÄìYates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - &quot;0/1&quot; and &quot;Unbound&quot; ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#39;s) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth‚ÄìMorris‚ÄìPratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In case if linting or testing is failing try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;‚ñ∂ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Big O Notation&lt;/th&gt; 
   &lt;th&gt;Computations for 10 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 100 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 1000 elements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;1000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;600&lt;/td&gt; 
   &lt;td&gt;9000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;10000&lt;/td&gt; 
   &lt;td&gt;1000000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1024&lt;/td&gt; 
   &lt;td&gt;1.26e+29&lt;/td&gt; 
   &lt;td&gt;1.07e+301&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3628800&lt;/td&gt; 
   &lt;td&gt;9.3e+157&lt;/td&gt; 
   &lt;td&gt;4.02e+2567&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Data Structure&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Access&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Search&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Insertion&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Deletion&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;False positives are possible while searching&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Best&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Average&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Worst&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Memory&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Stable&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Quicksort is usually done in-place with O(log(n)) stack space&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;depends on gap sequence&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;r - biggest number in array&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;k - length of longest key&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;‚àë = 0&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ÑπÔ∏è A few more &lt;a href=&quot;https://trekhleb.dev/projects/&quot;&gt;projects&lt;/a&gt; and &lt;a href=&quot;https://trekhleb.dev/blog/&quot;&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href=&quot;https://trekhleb.dev&quot;&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;üíØ Curated interview preparation materials for busy engineers&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/website/static/img/logo.svg?sanitize=true&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready to Code&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;em&gt;Credits: &lt;a href=&quot;https://dribbble.com/shots/3831443-Tech-Interview-Handbook&quot;&gt;Illustration&lt;/a&gt; by &lt;a href=&quot;https://dribbble.com/leftaligned&quot;&gt;@leftaligned&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot;&gt;Follow us on Facebook&lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;Get paid more. Moonchaser has negotiated hundreds of tech offers. Get 1-1 guidance from their experienced team of ex-FAANG PMs, SWEs, and Recruiters. &lt;a href=&quot;https://www.moonchaser.io/?utm_source=techinterviewhandbook&amp;amp;utm_medium=referral&amp;amp;utm_content=github&quot; target=&quot;_blank&quot;&gt;Find out more&lt;/a&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;No one has time to do a few hundred LeetCode questions. Here&#39;s &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by the author of the &lt;a href=&quot;https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU&quot;&gt;Blind 75 List&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/coding-round-overview&quot;&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/cheatsheet&quot;&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/algorithms/algorithms-introduction&quot;&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;&quot;Front-end Job Interview Questions&quot; answers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/interview-formats&quot;&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/behavioral-questions&quot;&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/questions-to-ask&quot;&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/resume&quot;&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do&#39;s and Don&#39;ts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;em&gt;practical&lt;/em&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;strong&gt;üí∞ Looking for a job? Sign up for free with &lt;a href=&quot;https://triplebyte.com/a/PJaJNpO/tihg&quot;&gt;Triplebyte&lt;/a&gt; to efficiently interview with top tech companies! üí∞&lt;/strong&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. üòé&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front end-related content have been extracted out into a separate repository - &lt;a href=&quot;https://github.com/yangshun/front-end-interview-handbook&quot;&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://github.com/facebook/docusaurus&quot;&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Online one-click setup for contributing&lt;/h3&gt; 
&lt;p&gt;You can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the tech-interview-handbook repo.&lt;/li&gt; 
 &lt;li&gt;install the dependencies.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So that you can start straight away.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! üôè [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun&quot;&gt;Yangshun Tay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louietyj&quot;&gt;Louie Tan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HashLips/generative-art-node</title>
      <link>https://github.com/HashLips/generative-art-node</link>
      <description>&lt;p&gt;Create generative art by using the canvas api and node js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to HashLips&lt;/h1&gt; 
&lt;p&gt;All the code in these repos was created and explained by HashLips on the main YouTube channel.&lt;/p&gt; 
&lt;p&gt;Important: There is a new repo for this code. &lt;a href=&quot;https://github.com/HashLips/hashlips_art_engine&quot;&gt;https://github.com/HashLips/hashlips_art_engine&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To find out more please visit:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC1LV4_VQGBJHTJjEWUmy8nA&quot;&gt;HashLips YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/hashlipsnft&quot;&gt;HashLips Telegram&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/hashlipsnft&quot;&gt;HashLips Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hashlips.online/HashLips&quot;&gt;HashLips Website&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;generative-art-node&lt;/h1&gt; 
&lt;p&gt;Create generative art by using the canvas api and node js&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/HashLips/generative-art-node/raw/main/src/preview.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/HashLips/generative-art-node

yarn add all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Create your different layers as folders in the &#39;layers&#39; directory, and add all the layer assets in these directories. Optionally, append &#39;_r&#39; and &#39;_sr&#39; to the layer file names to make those layer files rare or super rare respectively.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt; If you had an ball layer you would create a ball directory, and then a file might be called:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;red_eye_ball_sr.png&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;red_eye_ball_r.png&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;red_eye_ball.png&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Rarity is customizable in &lt;code&gt;src/config.js&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Once you have all your layers, go into &lt;code&gt;src/config.js&lt;/code&gt; and update the &lt;code&gt;layersOrder&lt;/code&gt; array to be your layer folders name in order of the back layer to the front layer.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt; If you were creating a portrait design, you might have a background, then a head, a mouth, eyes, eyewear, and then headwear, so your &lt;code&gt;layersOrder&lt;/code&gt; would look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const layersOrder = [
    { name: &#39;background&#39;, number: 1 },
    { name: &#39;ball&#39;, number: 2 },
    { name: &#39;eye color&#39;, number: 12 },
    { name: &#39;iris&#39;, number: 3 },
    { name: &#39;shine&#39;, number: 1 },
    { name: &#39;bottom lid&#39;, number: 3 },
    { name: &#39;top lid&#39;, number: 3 },
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;name&lt;/code&gt; of each layer object represents the name of the folder (in &lt;code&gt;/layers/&lt;/code&gt;) that the images reside in. The &lt;code&gt;number&lt;/code&gt; of each layer object represents the total number of image files you want to select from (possibly including blanks.) For instance, if you have three images in a layer folder and want to pick one of those each time, the &lt;code&gt;number&lt;/code&gt; should be &lt;code&gt;3&lt;/code&gt;. If you have a single image in a layer that you want to increase the rarity of to 1 in 100, the &lt;code&gt;number&lt;/code&gt; for that layer should be &lt;code&gt;100&lt;/code&gt;. In this case, 99 times out of 100, you will get a completely transparent layer.&lt;/p&gt; 
&lt;p&gt;Then optionally, update your &lt;code&gt;format&lt;/code&gt; size, ie the outputted image size, and the defaultEdition, which is the amount of variation outputted.&lt;/p&gt; 
&lt;p&gt;When you are all ready, run the following command and your outputted art will be in the &lt;code&gt;build&lt;/code&gt; directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>brunosimon/my-room-in-3d</title>
      <link>https://github.com/brunosimon/my-room-in-3d</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;My Room in 3D&lt;/h1&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brunosimon/my-room-in-3d&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://my-room-in-3d.vercel.app&quot;&gt;Live&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;Download &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt;. Run this followed commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install dependencies (only the first time)
npm install

# Run the local server at localhost:8080
npm run dev

# Build for production in the dist/ directory
npm run build
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>jklepatch/eattheblocks</title>
      <link>https://github.com/jklepatch/eattheblocks</link>
      <description>&lt;p&gt;Source code for Eat The Blocks, a screencast for Ethereum Dapp Developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EaTheBlocks&lt;/h1&gt; 
&lt;p&gt;Blockchain tutorials of EatTheBlocks. Learn how to build Decentralized Applications (Dapps) on Ethereum and Solidity Smart contracts&lt;/p&gt; 
&lt;p&gt;Covers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ethereum&lt;/li&gt; 
 &lt;li&gt;Solidity&lt;/li&gt; 
 &lt;li&gt;Web3&lt;/li&gt; 
 &lt;li&gt;Truffle&lt;/li&gt; 
 &lt;li&gt;DeFi (Decentralized Finance)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Organization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Youtube: &lt;code&gt;screencast&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Courses: other folders&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks.com/6-figure-blockchain-developer/&quot;&gt;6-Figures Blockchain Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks-pro.teachable.com/p/profitable-flashloans&quot;&gt;Profitable Flashloan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>NARKOZ/hacker-scripts</title>
      <link>https://github.com/NARKOZ/hacker-scripts</link>
      <description>&lt;p&gt;Based on a true story&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/NARKOZ/hacker-scripts/master/README.zh-CN.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Hacker Scripts&lt;/h1&gt; 
&lt;p&gt;Based on a &lt;em&gt;&lt;a href=&quot;https://www.jitbit.com/alexblog/249-now-thats-what-i-call-a-hacker/&quot;&gt;true story&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: OK, so, our build engineer has left for another company. The dude was literally living inside the terminal. You know, that type of a guy who loves Vim, creates diagrams in Dot and writes wiki-posts in Markdown... If something - anything - requires more than 90 seconds of his time, he writes a script to automate that.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: So we&#39;re sitting here, looking through his, uhm, &quot;legacy&quot;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: You&#39;re gonna love this&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/raw/master/smack-my-bitch-up.sh&quot;&gt;&lt;code&gt;smack-my-bitch-up.sh&lt;/code&gt;&lt;/a&gt; - sends a text message &quot;late at work&quot; to his wife (apparently). Automatically picks reasons from an array of strings, randomly. Runs inside a cron-job. The job fires if there are active SSH-sessions on the server after 9pm with his login.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/raw/master/kumar-asshole.sh&quot;&gt;&lt;code&gt;kumar-asshole.sh&lt;/code&gt;&lt;/a&gt; - scans the inbox for emails from &quot;Kumar&quot; (a DBA at our clients). Looks for keywords like &quot;help&quot;, &quot;trouble&quot;, &quot;sorry&quot; etc. If keywords are found - the script SSHes into the clients server and rolls back the staging database to the latest backup. Then sends a reply &quot;no worries mate, be careful next time&quot;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/raw/master/hangover.sh&quot;&gt;&lt;code&gt;hangover.sh&lt;/code&gt;&lt;/a&gt; - another cron-job that is set to specific dates. Sends automated emails like &quot;not feeling well/gonna work from home&quot; etc. Adds a random &quot;reason&quot; from another predefined array of strings. Fires if there are no interactive sessions on the server at 8:45am.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: (and the oscar goes to) &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/raw/master/fucking-coffee.sh&quot;&gt;&lt;code&gt;fucking-coffee.sh&lt;/code&gt;&lt;/a&gt; - this one waits exactly 17 seconds (!), then opens a telnet session to our coffee-machine (we had no frikin idea the coffee machine is on the network, runs linux and has a TCP socket up and running) and sends something like &lt;code&gt;sys brew&lt;/code&gt;. Turns out this thing starts brewing a mid-sized half-caf latte and waits another 24 (!) seconds before pouring it into a cup. The timing is exactly how long it takes to walk to the machine from the dudes desk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: holy sh*t I&#39;m keeping those&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Original: &lt;a href=&quot;http://bash.im/quote/436725&quot;&gt;http://bash.im/quote/436725&lt;/a&gt; (in Russian)&lt;br&gt; Pull requests with other implementations (Python, Perl, Shell, etc) are welcome.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;You need these environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# used in `smack-my-bitch-up` and `hangover` scripts
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

# used in `kumar_asshole` script
GMAIL_USERNAME=admin@example.org
GMAIL_PASSWORD=password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Ruby scripts you need to install gems: &lt;code&gt;gem install dotenv twilio-ruby gmail&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Cron jobs&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Runs `smack-my-bitch-up.sh` monday to friday at 9:20 pm.
20 21 * * 1-5 /path/to/scripts/smack-my-bitch-up.sh &amp;gt;&amp;gt; /path/to/smack-my-bitch-up.log 2&amp;gt;&amp;amp;1

# Runs `hangover.sh` monday to friday at 8:45 am.
45 8 * * 1-5 /path/to/scripts/hangover.sh &amp;gt;&amp;gt; /path/to/hangover.log 2&amp;gt;&amp;amp;1

# Runs `kumar-asshole.sh` every 10 minutes.
*/10 * * * * /path/to/scripts/kumar-asshole.sh

# Runs `fucking-coffee.sh` hourly from 9am to 6pm on weekdays.
0 9-18 * * 1-5 /path/to/scripts/fucking-coffee.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;Code is released under WTFPL.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PercyJon/bopufeng-mall</title>
      <link>https://github.com/PercyJon/bopufeng-mall</link>
      <description>&lt;p&gt;Gatsby starter for creating a blog&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;bopufeng-mallÂïÜÂüéÔºåÂåÖÂê´Â∞èÁ®ãÂ∫èÁ´ØÂíåÂêéÂè∞CRMÁÆ°ÁêÜÊéßÂà∂Âè∞&lt;/h3&gt; 
&lt;h3&gt;È°πÁõÆËØ¥Êòé&lt;/h3&gt; 
&lt;hr&gt; 
&lt;ol&gt; 
 &lt;li&gt;bopufeng-mallÊòØ‰ª•SpringBoot+Shiro+Mybatis plus‰∏∫Ê†∏ÂøÉÂºÄÂèëÁöÑÁ≤æÁÆÄÂïÜÂüéÂêéÂè∞Âü∫Á°ÄÁ≥ªÁªü„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÂåÖÂê´Áî®Êà∑ÁÆ°ÁêÜ,ËßíËâ≤ÁÆ°ÁêÜ,ÈÉ®Èó®ÁÆ°ÁêÜ,ÊùÉÈôêÁÆ°ÁêÜ,ËèúÂçïÁÆ°ÁêÜÁ≠âÁ≥ªÁªü‰∏öÂä°Ê®°ÂùóÔºåÂèäÂïÜÂüéÁÆ°ÁêÜÁ≥ªÁªüÊ®°Âùó„ÄÇ&lt;/li&gt; 
 &lt;li&gt;FreeMarkerÊ®°Êùø,È°µÈù¢ÊãÜÂàÜ,Â∞ÅË£ÖÂÖ¨ÂÖ±ÈÉ®ÂàÜ,Á¨¨‰∏âÊñπMybatis-plus‰Ωú‰∏∫ORMÊ°ÜÊû∂„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Êï¥Âêàredis„ÄÅEncacheÁºìÂ≠òÂàáÊç¢, ÈõÜÊàêÈòøÈáå‰∫ëossÊñá‰ª∂ÁÆ°ÁêÜ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰ΩøÁî®AdminLTE‰Ωú‰∏∫ÂâçÁ´ØUIÊ°ÜÊû∂, ÈõÜÊàêËØ∏Â§öÂâçÁ´ØÁõ∏ÂÖ≥Êèí‰ª∂ÂÆåÂñÑÁÆÄËÄåÁæéÁöÑÂäüËÉΩËÆæËÆ°„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰ΩøÁî®AdminLTE‰Ωú‰∏∫ÂâçÁ´ØUIÊ°ÜÊû∂, ÂâçÁ´ØÂèÇËÄÉ:&lt;a href=&quot;https://gitee.com/liyucc/adminlte-tab&quot;&gt;https://gitee.com/liyucc/adminlte-tab&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;ÊäÄÊúØÈÄâÂûã&lt;/h3&gt; 
&lt;hr&gt; 
&lt;p&gt;AdminLTE„ÄÅSpring MVC„ÄÅShiro„ÄÅMybatis„ÄÅMybatis-Plus„ÄÅMysql„ÄÅMaven„ÄÅknife4j&lt;/p&gt; 
&lt;h3&gt;Âø´ÈÄüÂºÄÂßã&lt;/h3&gt; 
&lt;hr&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÂàõÂª∫Êï∞ÊçÆÂ∫ìbopufeng-mall,ÂØºÂÖ•resource/db/mall.sql&lt;/li&gt; 
 &lt;li&gt;ÂØºÂÖ•bopufeng-mallÂêéÂè∞Ê∫êÁ†ÅÂà∞EclispeÊàñËÄÖIDEA&lt;/li&gt; 
 &lt;li&gt;‰øÆÊîπÁõ∏ÂÖ≥ÈÖçÁΩÆÂèÇÊï∞Ôºåmysql„ÄÅredisÁ≠âÁõ∏ÂÖ≥ÈÖçÁΩÆ,‰øÆÊîπworkDirÊñá‰ª∂Â≠òÂÇ®‰ΩçÁΩÆ&lt;/li&gt; 
 &lt;li&gt;ËøêË°å MallApplication ÂêØÂä®Á±ª&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://localhost:8080,%E8%B4%A6%E5%8F%B7/%E5%AF%86%E7%A0%81:admin/admin123&quot;&gt;http://localhost:8080,Ë¥¶Âè∑/ÂØÜÁ†Å:admin/admin123&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>bchiang7/v4</title>
      <link>https://github.com/bchiang7/v4</link>
      <description>&lt;p&gt;Fourth iteration of my personal website built with Gatsby&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img alt=&quot;Logo&quot; src=&quot;https://raw.githubusercontent.com/bchiang7/v4/main/src/images/logo.png&quot; width=&quot;100&quot;&gt; 
&lt;/div&gt; 
&lt;h1 align=&quot;center&quot;&gt; brittanychiang.com - v4 &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; The fourth iteration of &lt;a href=&quot;https://brittanychiang.com&quot; target=&quot;_blank&quot;&gt;brittanychiang.com&lt;/a&gt; built with &lt;a href=&quot;https://www.gatsbyjs.org/&quot; target=&quot;_blank&quot;&gt;Gatsby&lt;/a&gt; and hosted with &lt;a href=&quot;https://www.netlify.com/&quot; target=&quot;_blank&quot;&gt;Netlify&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Previous iterations: &lt;a href=&quot;https://github.com/bchiang7/v1&quot; target=&quot;_blank&quot;&gt;v1&lt;/a&gt;, &lt;a href=&quot;https://github.com/bchiang7/v2&quot; target=&quot;_blank&quot;&gt;v2&lt;/a&gt;, &lt;a href=&quot;https://github.com/bchiang7/bchiang7.github.io&quot; target=&quot;_blank&quot;&gt;v3&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://app.netlify.com/sites/brittanychiang/deploys&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://api.netlify.com/api/v1/badges/1963b488-7b78-48c9-9e2d-6fb5e47ab3af/deploy-status&quot; alt=&quot;Netlify Status&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bchiang7/v4/main/src/images/demo.png&quot; alt=&quot;demo&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;üö® Forking this repo (please read!)&lt;/h2&gt; 
&lt;p&gt;Many people have contacted me asking me if they can use this code for their own website, and the answer to that question is usually &lt;strong&gt;yes, with attribution&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;I value keeping my site open source, but as you all know, &lt;em&gt;&lt;strong&gt;plagiarism is bad&lt;/strong&gt;&lt;/em&gt;. It&#39;s always disheartening whenever I find that someone has copied my site without giving me credit. I spent a non-trivial amount of effort building and designing this iteration of my website, and I am proud of it! All I ask of you all is to not claim this effort as your own.&lt;/p&gt; 
&lt;p&gt;Please also note that I did not build this site with the intention of it being a starter theme, so if you have questions about implementation, please refer to the &lt;a href=&quot;https://www.gatsbyjs.org/docs/&quot;&gt;Gatsby docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;TL;DR&lt;/h3&gt; 
&lt;p&gt;Yes, you can fork this repo. Please give me proper credit by linking back to &lt;a href=&quot;https://brittanychiang.com&quot;&gt;brittanychiang.com&lt;/a&gt;. Thanks!&lt;/p&gt; 
&lt;h2&gt;üõ† Installation &amp;amp; Set Up&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the Gatsby CLI&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install -g gatsby-cli
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install and use the correct version of Node using &lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;NVM&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start the development server&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üöÄ Building and Running for Production&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Generate a full static production build&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Preview the site as it will appear once deployed&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üé® Color Reference&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Color&lt;/th&gt; 
   &lt;th&gt;Hex&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Navy&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://via.placeholder.com/10/0a192f?text=+&quot; alt=&quot;#0a192f&quot;&gt; &lt;code&gt;#0a192f&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Light Navy&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://via.placeholder.com/10/0a192f?text=+&quot; alt=&quot;#112240&quot;&gt; &lt;code&gt;#112240&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Lightest Navy&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://via.placeholder.com/10/303C55?text=+&quot; alt=&quot;#233554&quot;&gt; &lt;code&gt;#233554&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Slate&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://via.placeholder.com/10/8892b0?text=+&quot; alt=&quot;#8892b0&quot;&gt; &lt;code&gt;#8892b0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Light Slate&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://via.placeholder.com/10/a8b2d1?text=+&quot; alt=&quot;#a8b2d1&quot;&gt; &lt;code&gt;#a8b2d1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Lightest Slate&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://via.placeholder.com/10/ccd6f6?text=+&quot; alt=&quot;#ccd6f6&quot;&gt; &lt;code&gt;#ccd6f6&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;White&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://via.placeholder.com/10/e6f1ff?text=+&quot; alt=&quot;#e6f1ff&quot;&gt; &lt;code&gt;#e6f1ff&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Green&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://via.placeholder.com/10/64ffda?text=+&quot; alt=&quot;#64ffda&quot;&gt; &lt;code&gt;#64ffda&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>eritislami/evobot</title>
      <link>https://github.com/eritislami/evobot</link>
      <description>&lt;p&gt;ü§ñ EvoBot is a Discord Music Bot built with discord.js &amp; uses Command Handler from discordjs.guide&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;http://commitizen.github.io/cz-cli/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?sanitize=true&quot; alt=&quot;Commitizen friendly&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://repository-images.githubusercontent.com/186841818/8aa95700-7730-11e9-84be-e80f28520325&quot; alt=&quot;logo&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;ü§ñ EvoBot (Discord Music Bot)&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;EvoBot is a Discord Music Bot built with discord.js &amp;amp; uses Command Handler from &lt;a href=&quot;https://discordjs.guide&quot;&gt;discordjs.guide&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Discord Bot Token &lt;strong&gt;&lt;a href=&quot;https://discordjs.guide/preparations/setting-up-a-bot-application.html#creating-your-bot&quot;&gt;Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;YouTube Data API v3 Key &lt;strong&gt;&lt;a href=&quot;https://developers.google.com/youtube/v3/getting-started&quot;&gt;Guide&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; 2.1 &lt;strong&gt;(Optional)&lt;/strong&gt; Soundcloud Client ID &lt;strong&gt;&lt;a href=&quot;https://github.com/zackradisic/node-soundcloud-downloader#client-id&quot;&gt;Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Node.js v14.0.0 or newer&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/eritislami/evobot.git
cd evobot
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After installation finishes you can use &lt;code&gt;node index.js&lt;/code&gt; to start the bot.&lt;/p&gt; 
&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; 
&lt;p&gt;Copy or Rename &lt;code&gt;config.json.example&lt;/code&gt; to &lt;code&gt;config.json&lt;/code&gt; and fill out the values:&lt;/p&gt; 
&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;Note: Never commit or share your token or api keys publicly&lt;/strong&gt; ‚ö†Ô∏è&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;TOKEN&quot;: &quot;&quot;,
  &quot;YOUTUBE_API_KEY&quot;: &quot;&quot;,
  &quot;SOUNDCLOUD_CLIENT_ID&quot;: &quot;&quot;,
  &quot;MAX_PLAYLIST_SIZE&quot;: 10,
  &quot;PREFIX&quot;: &quot;/&quot;,
  &quot;PRUNING&quot;: false,
  &quot;LOCALE&quot;: &quot;en&quot;,
  &quot;DEFAULT_VOLUME&quot;: 100,
  &quot;STAY_TIME&quot;: 30
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Currently available locales are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;English (en)&lt;/li&gt; 
 &lt;li&gt;Arabic (ar)&lt;/li&gt; 
 &lt;li&gt;Brazilian Portuguese (pt_br)&lt;/li&gt; 
 &lt;li&gt;Dutch (nl)&lt;/li&gt; 
 &lt;li&gt;French (fr)&lt;/li&gt; 
 &lt;li&gt;German (de)&lt;/li&gt; 
 &lt;li&gt;Italian (it)&lt;/li&gt; 
 &lt;li&gt;Japanese (ja)&lt;/li&gt; 
 &lt;li&gt;Korean (ko)&lt;/li&gt; 
 &lt;li&gt;Polish (pl)&lt;/li&gt; 
 &lt;li&gt;Russian (ru)&lt;/li&gt; 
 &lt;li&gt;Simplified Chinese (zh_cn)&lt;/li&gt; 
 &lt;li&gt;Singaporean Mandarin (zh_sg)&lt;/li&gt; 
 &lt;li&gt;Spanish (es)&lt;/li&gt; 
 &lt;li&gt;Swedish (sv)&lt;/li&gt; 
 &lt;li&gt;Traditional Chinese (zh_tw)&lt;/li&gt; 
 &lt;li&gt;Thai (th)&lt;/li&gt; 
 &lt;li&gt;Turkish (tr)&lt;/li&gt; 
 &lt;li&gt;Vietnamese (vi)&lt;/li&gt; 
 &lt;li&gt;Check &lt;a href=&quot;https://raw.githubusercontent.com/eritislami/evobot/master/#-contributing&quot;&gt;Contributing&lt;/a&gt; if you wish to help add more languages!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìù Features &amp;amp; Commands&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The default prefix is &#39;/&#39;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;üé∂ Play music from YouTube via url&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;/play https://www.youtube.com/watch?v=GLvohMXgcBo&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üîé Play music from YouTube via search query&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;/play under the bridge red hot chili peppers&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üé∂ Play music from Soundcloud via url&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;/play https://soundcloud.com/blackhorsebrigade/pearl-jam-alive&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üîé Search and select music to play&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;/search Pearl Jam&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Reply with song number or numbers seperated by comma that you wish to play&lt;/p&gt; 
&lt;p&gt;Examples: &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;1,2,3&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìÉ Play youtube playlists via url&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;/playlist https://www.youtube.com/watch?v=YlUKcNNmywk&amp;amp;list=PL5RNCwK3GIO13SR_o57bGJCEmqFAwq82c&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üîé Play youtube playlists via search query&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;/playlist linkin park meteora&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Now Playing (/np)&lt;/li&gt; 
 &lt;li&gt;Queue system (/queue, /q)&lt;/li&gt; 
 &lt;li&gt;Loop / Repeat (/loop)&lt;/li&gt; 
 &lt;li&gt;Shuffle (/shuffle)&lt;/li&gt; 
 &lt;li&gt;Volume control (/volume, /v)&lt;/li&gt; 
 &lt;li&gt;Lyrics (/lyrics, /ly)&lt;/li&gt; 
 &lt;li&gt;Pause (/pause)&lt;/li&gt; 
 &lt;li&gt;Resume (/resume, /r)&lt;/li&gt; 
 &lt;li&gt;Skip (/skip, /s)&lt;/li&gt; 
 &lt;li&gt;Skip to song # in queue (/skipto, /st)&lt;/li&gt; 
 &lt;li&gt;Move a song in the queue (/move, /mv)&lt;/li&gt; 
 &lt;li&gt;Remove song # from queue (/remove, /rm)&lt;/li&gt; 
 &lt;li&gt;Play an mp3 clip (/clip song.mp3) (put the file in sounds folder)&lt;/li&gt; 
 &lt;li&gt;List all clips (/clips)&lt;/li&gt; 
 &lt;li&gt;Show ping to Discord API (/ping)&lt;/li&gt; 
 &lt;li&gt;Show bot uptime (/uptime)&lt;/li&gt; 
 &lt;li&gt;Toggle pruning of bot messages (/pruning)&lt;/li&gt; 
 &lt;li&gt;Help (/help, /h)&lt;/li&gt; 
 &lt;li&gt;Command Handler from &lt;a href=&quot;https://discordjs.guide/&quot;&gt;discordjs.guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Media Controls via Reactions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/9S7Omf9.png&quot; alt=&quot;reactions&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eritislami/evobot/fork&quot;&gt;Fork the repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Clone your fork: &lt;code&gt;git clone https://github.com/your-username/evobot.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create your feature branch: &lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Stage changes &lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Commit your changes: &lt;code&gt;cz&lt;/code&gt; OR &lt;code&gt;npm run commit&lt;/code&gt; do not use &lt;code&gt;git commit&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Push to the branch: &lt;code&gt;git push origin my-new-feature&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üìù Credits&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/iCrawl&quot;&gt;@iCrawl&lt;/a&gt; For the queue system used in this application which was adapted from &lt;a href=&quot;https://github.com/iCrawl/discord-music-bot&quot;&gt;@iCrawl/discord-music-bot&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DIYgod/RSSHub</title>
      <link>https://github.com/DIYgod/RSSHub</link>
      <description>&lt;p&gt;üç∞ Everything is RSSible&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.loli.net/2019/04/23/5cbeb7e41414c.png&quot; alt=&quot;RSSHub&quot; width=&quot;100&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;RSSHub&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üç∞ Everything is RSSible&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/rsshub&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-telegram-brightgreen.svg?style=flat-square&quot; alt=&quot;telegram&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/DIYgod/RSSHub&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/DIYgod/RSSHub/master.svg?style=flat-square&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/github/DIYgod/RSSHub?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/DIYgod/RSSHub.svg?style=flat-square&quot; alt=&quot;Test coverage&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;RSSHub is an open source, easy to use, and extensible RSS feed generator. It&#39;s capable of generating RSS feeds from pretty much everything.&lt;/p&gt; 
&lt;p&gt;RSSHub delivers millions of contents aggregated from all kinds of sources, our vibrant open source community is ensuring the deliver of RSSHub&#39;s new routes, new features and bug fixes.&lt;/p&gt; 
&lt;p&gt;RSSHub can be used with browser extension &lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; and mobile auxiliary app &lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt; (iOS) and &lt;a href=&quot;https://github.com/LeetaoGoooo/RSSAid&quot;&gt;RSSAid&lt;/a&gt; (Android)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app/en&quot;&gt;English docs&lt;/a&gt; | &lt;a href=&quot;https://t.me/rsshub&quot;&gt;Telegram Group&lt;/a&gt; | &lt;a href=&quot;https://t.me/awesomeRSSHub&quot;&gt;Telegram Channel&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;RSSHub ÊòØ‰∏Ä‰∏™ÂºÄÊ∫ê„ÄÅÁÆÄÂçïÊòìÁî®„ÄÅÊòì‰∫éÊâ©Â±ïÁöÑ RSS ÁîüÊàêÂô®ÔºåÂèØ‰ª•Áªô‰ªª‰ΩïÂ•áÂ•áÊÄ™ÊÄ™ÁöÑÂÜÖÂÆπÁîüÊàê RSS ËÆ¢ÈòÖÊ∫ê„ÄÇRSSHub ÂÄüÂä©‰∫éÂºÄÊ∫êÁ§æÂå∫ÁöÑÂäõÈáèÂø´ÈÄüÂèëÂ±ï‰∏≠ÔºåÁõÆÂâçÂ∑≤ÈÄÇÈÖçÊï∞ÁôæÂÆ∂ÁΩëÁ´ôÁöÑ‰∏äÂçÉÈ°πÂÜÖÂÆπ&lt;/p&gt; 
&lt;p&gt;ÂèØ‰ª•ÈÖçÂêàÊµèËßàÂô®Êâ©Â±ï &lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; Âíå ÁßªÂä®Á´ØËæÖÂä© App &lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt; (iOS) ‰∏é &lt;a href=&quot;https://github.com/LeetaoGoooo/RSSAid&quot;&gt;RSSAid&lt;/a&gt; (Android) È£üÁî®&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app&quot;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt; | &lt;a href=&quot;https://t.me/rsshub&quot;&gt;Telegram Áæ§&lt;/a&gt; | &lt;a href=&quot;https://t.me/awesomeRSSHub&quot;&gt;Telegram È¢ëÈÅì&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;h3&gt;Special Sponsors&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a href=&quot;https://rss3.io/&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;60px&quot; src=&quot;https://i.imgur.com/v7TF0jp.jpg&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 &lt;a href=&quot;https://sa.net/&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;60px&quot; src=&quot;https://i.imgur.com/3rM8nWI.png&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/SayoriStudio&quot;&gt;Sayori Studio&lt;/a&gt; . &lt;a href=&quot;https://blog.sion.moe&quot;&gt;Sion Kazama&lt;/a&gt; . &lt;a href=&quot;https://www.shaoyaoju.org/&quot;&gt;ÁêöËá¥Ëøú&lt;/a&gt; . &lt;a href=&quot;https://www.coolapk.com/apk/239500&quot;&gt;Rolly RSS ÈòÖËØªÂô®&lt;/a&gt; . &lt;a href=&quot;https://www.mokeyjay.com/&quot;&gt;mokeyjay&lt;/a&gt; . &lt;a href=&quot;https://www.moeunion.com&quot;&gt;ËêåÂºÄÊ∫êËÅîÁõü&lt;/a&gt; . &lt;a href=&quot;https://github.com/hooke007/MPV_lazy&quot;&gt;hooke007&lt;/a&gt; . &lt;a href=&quot;https://feeds.pub&quot;&gt;feeds.pub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.rsshub.app/en/support/&quot;&gt;&lt;img src=&quot;https://opencollective.com/static/images/become_sponsor.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/DIYgod/RSSHub/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/RSSHub/contributors.svg?width=890&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Logo designer &lt;a href=&quot;https://dribbble.com/sheldonrrr&quot;&gt;sheldonrrr&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.cloudflare.com&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;50px&quot; src=&quot;https://i.imgur.com/7Ph27Fq.png&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://www.netlify.com&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;40px&quot; src=&quot;https://i.imgur.com/cU01915.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DIYgod/RSSHub-Radar&quot;&gt;RSSHub Radar&lt;/a&gt; | ‰∏Ä‰∏™ÂèØ‰ª•Â∏ÆÂä©‰Ω†Âø´ÈÄüÂèëÁé∞ÂíåËÆ¢ÈòÖÂΩìÂâçÁΩëÁ´ô RSS Âíå RSSHub ÁöÑÊµèËßàÂô®Êâ©Â±ï&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cay-Zhang/RSSBud&quot;&gt;RSSBud&lt;/a&gt; (&lt;a href=&quot;https://testflight.apple.com/join/rjCVzzHP&quot;&gt;TestFlight ÂÖ¨Êµã&lt;/a&gt;) | iOS Âπ≥Âè∞ÁöÑ RSSHub RadarÔºå‰∏ì‰∏∫ÁßªÂä®ÁîüÊÄÅ‰ºòÂåñ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeetaoGoooo/RSSAid&quot;&gt;RSSAid&lt;/a&gt; | Âü∫‰∫é Flutter ÊûÑÂª∫ÁöÑ Android Âπ≥Âè∞ÁöÑ RSSHub Radar&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join Us&lt;/h2&gt; 
&lt;p&gt;We welcome all pull requests. Suggestions and feedback are also welcomed &lt;a href=&quot;https://github.com/DIYgod/RSSHub/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/joinus/quick-start.html&quot;&gt;Join Us&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ËßÅ &lt;a href=&quot;https://docs.rsshub.app/joinus/quick-start.html&quot;&gt;ÂèÇ‰∏éÊàë‰ª¨&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/install/&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ËßÅ &lt;a href=&quot;https://docs.rsshub.app/install/&quot;&gt;ÈÉ®ÁΩ≤&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support RSSHub&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://docs.rsshub.app/en/support/&quot;&gt;Support RSSHub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ËßÅ &lt;a href=&quot;https://docs.rsshub.app/support/&quot;&gt;ÊîØÊåÅ RSSHub&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RSSHub is open source and completely free under the MIT license. However, just like any other open source project, as the project grows, the hosting, development and maintenance requires funding support.&lt;/p&gt; 
&lt;p&gt;You can support RSSHub via donations.&lt;/p&gt; 
&lt;h3&gt;Recurring Donation&lt;/h3&gt; 
&lt;p&gt;Recurring donors will be rewarded via express issue response, or even have your name displayed on our GitHub page and website.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Become a Sponser on &lt;a href=&quot;https://www.patreon.com/DIYgod&quot;&gt;Patreon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Become a Sponser on &lt;a href=&quot;https://afdian.net/@diygod&quot;&gt;Áà±ÂèëÁîµ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contact us directly: &lt;a href=&quot;mailto:i@diygod.me&quot;&gt;i@diygod.me&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;One-time Donation&lt;/h3&gt; 
&lt;p&gt;We accept donations via the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://diygod.me/images/wx.jpg&quot;&gt;WeChat Pay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://diygod.me/images/zfb.jpg&quot;&gt;Alipay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.me/DIYgod&quot;&gt;Paypal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;RSSHub&lt;/strong&gt; ¬© &lt;a href=&quot;https://github.com/DIYgod&quot;&gt;DIYgod&lt;/a&gt;, Released under the &lt;a href=&quot;https://raw.githubusercontent.com/DIYgod/RSSHub/master/LICENSE&quot;&gt;MIT&lt;/a&gt; License.&lt;br&gt; Authored and maintained by DIYgod with help from contributors (&lt;a href=&quot;https://github.com/DIYgod/RSSHub/contributors&quot;&gt;list&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Blog &lt;a href=&quot;https://diygod.me&quot;&gt;@DIYgod&lt;/a&gt; ¬∑ GitHub &lt;a href=&quot;https://github.com/DIYgod&quot;&gt;@DIYgod&lt;/a&gt; ¬∑ Twitter &lt;a href=&quot;https://twitter.com/DIYgod&quot;&gt;@DIYgod&lt;/a&gt; ¬∑ Telegram Channel &lt;a href=&quot;https://t.me/awesomeDIYgod&quot;&gt;@awesomeDIYgod&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>kleampa/not-paid</title>
      <link>https://github.com/kleampa/not-paid</link>
      <description>&lt;p&gt;Client did not pay? Add opacity to the body tag and decrease it every day until their site completely fades away&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Client did not pay?&lt;/h2&gt; 
&lt;p&gt;Add opacity to the body tag and decrease it every day until their site completely fades away. Set a due date and customize the number of days you offer them until the website is fully vanished.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/* change these variables as you wish */
var due_date = new Date(&#39;2017-02-27&#39;);
var days_deadline = 60;
/* stop changing here */
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;PS: Next time use &lt;a href=&quot;https://letsdeel.com&quot;&gt;letsdeel.com&lt;/a&gt; to make sure you get paid.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Just load the not-paid.js file in &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Wordpress plugin is also available &lt;a href=&quot;https://github.com/SurfEdge/not-paid-wp&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;There&#39;s also an Android version available &lt;a href=&quot;https://github.com/theapache64/faded&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;There&#39;s also an Windows Forms version available &lt;a href=&quot;https://github.com/g-otn/winforms-not-paid&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flutter version available &lt;a href=&quot;https://github.com/krishnakumarcn/faded&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Inspired from twitter (@riklomas) Made by Ciprian (@kleampa), Romania&lt;/p&gt; 
&lt;p&gt;PS: No PR&#39;s or issues will be accepted for this project.&lt;/p&gt; 
&lt;h2&gt;Advertising&lt;/h2&gt; 
&lt;p&gt;Because this repo is going viral from time to time to developers, I&#39;m open for discussion if you want to promote a product/service in this README file. Just mail me at kleampa[]gmail&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/iptv-org/iptv/actions/workflows/auto-update.yml&quot;&gt;&lt;img src=&quot;https://github.com/iptv-org/iptv/actions/workflows/auto-update.yml/badge.svg?sanitize=true&quot; alt=&quot;auto-update&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Collection of publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player which supports M3U-playlists.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.readme/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.nsfw.m3u&lt;/code&gt; (includes adult channels)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h3&gt;Playlists by category&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Category&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Auto&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/auto.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Animation&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/animation.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Business&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/business.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Classic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;71&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/classic.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Comedy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;71&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/comedy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Cooking&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;43&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/cooking.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Culture&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/culture.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Documentary&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/documentary.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Education&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/education.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Entertainment&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;230&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/entertainment.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Family&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/family.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;General&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;301&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/general.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kids&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;192&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/kids.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Legislative&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;62&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/legislative.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lifestyle&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;84&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/lifestyle.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Local&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;526&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/local.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Movies&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;276&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/movies.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Music&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;389&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/music.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;News&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;450&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/news.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Outdoor&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;38&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/outdoor.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Relax&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/relax.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Religious&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;266&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/religious.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Series&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;240&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/series.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Science&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/science.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Shop&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;46&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/shop.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Sports&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;210&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/sports.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Travel&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/travel.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Weather&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/weather.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;XXX&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;37&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/xxx.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Other&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3925&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/other.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h3&gt;Playlists by language&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Akan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aka.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Albanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;32&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sqi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Amharic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/amh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;363&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ara.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Armenian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hye.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Assyrian Neo-Aramaic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aii.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Azerbaijani&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aze.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bashkir&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bak.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bengali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ben.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bhojpuri&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bho.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bosnian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bos.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bulgarian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bul.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Burmese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mya.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Catalan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cat.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;558&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zho.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Croatian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hrv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Czech&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ces.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Danish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Dutch&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;53&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nld.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;English&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2148&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eng.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Estonian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/est.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Faroese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Finnish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;French&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;167&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fra.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Galician&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/glg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Georgian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kat.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;German&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;189&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/deu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hebrew&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/heb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hindi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;108&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hun.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Icelandic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/isl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Indonesian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;70&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ind.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Inuktitut&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/iku.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Italian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;126&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ita.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Japanese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jpn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Javanese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jav.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kannada&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kazakh&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kaz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Khmer&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/khm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kinyarwanda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Korean&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;33&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kor.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kurdish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;31&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kur.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kyrgyz&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kir.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Latvian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lav.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lithuanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lit.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Luxembourgish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ltz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Macedonian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mkd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Malay (macrolanguage)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/msa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Malayalam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;68&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mal.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Maltese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mlt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Mandarin Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;50&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cmn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Maori&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mri.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Marathi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mar.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Min Nan Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Modern Greek (1453-)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;42&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ell.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Mongolian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mon.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Montenegrin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cnr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Nepali (macrolanguage)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nep.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Norwegian Bokm√•l&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nob.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Panjabi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Pashto&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pus.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Persian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;164&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fas.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Polish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;34&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pol.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Portuguese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;92&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/por.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Romanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;49&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ron.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Russian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;266&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/rus.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Serbian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/srp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Sinhala&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Slovak&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/slk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Slovenian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/slv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Somali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/som.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Spanish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;642&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/spa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Sundanese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sun.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Swedish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/swe.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Tagalog&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tgl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Tamil&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;38&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tam.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Telugu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tel.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Thai&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tha.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Turkish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;66&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tur.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Turkmen&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tuk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Ukrainian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;61&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ukr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Urdu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/urd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Uzbek&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/uzb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Vietnamese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;66&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/vie.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Western Frisian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fry.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Yue Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/yue.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Undefined&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1900&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/undefined.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h3&gt;Playlists by country&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Country&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá´&amp;nbsp;Afghanistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/af.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá±&amp;nbsp;Albania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;37&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/al.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá©üáø&amp;nbsp;Algeria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá∏&amp;nbsp;American Samoa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/as.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá©&amp;nbsp;Andorra&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ad.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá¥&amp;nbsp;Angola&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá¨&amp;nbsp;Antigua &amp;amp; Barbuda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ag.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá∑&amp;nbsp;Argentina&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;72&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ar.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá≤&amp;nbsp;Armenia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/am.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üáº&amp;nbsp;Aruba&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/aw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá∫&amp;nbsp;Australia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;80&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/au.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üáπ&amp;nbsp;Austria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;37&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/at.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üáø&amp;nbsp;Azerbaijan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/az.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá∏&amp;nbsp;Bahamas&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bs.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá≠&amp;nbsp;Bahrain&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;52&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá©&amp;nbsp;Bangladesh&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüáß&amp;nbsp;Barbados&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüáæ&amp;nbsp;Belarus&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/by.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá™&amp;nbsp;Belgium&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;31&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/be.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüáØ&amp;nbsp;Benin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüáπ&amp;nbsp;Bhutan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá¥&amp;nbsp;Bolivia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;31&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá¶&amp;nbsp;Bosnia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ba.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüáº&amp;nbsp;Botswana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá∑&amp;nbsp;Brazil&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;146&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/br.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá≥&amp;nbsp;Brunei&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá¨&amp;nbsp;Bulgaria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá´&amp;nbsp;Burkina Faso&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüáÆ&amp;nbsp;Burundi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üá≠&amp;nbsp;Cambodia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá≤&amp;nbsp;Cameroon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá¶&amp;nbsp;Canada&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;166&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ca.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üáª&amp;nbsp;Cape Verde&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá´&amp;nbsp;Central African Republic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá©&amp;nbsp;Chad&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/td.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá±&amp;nbsp;Chile&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;85&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá≥&amp;nbsp;China&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;485&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá¥&amp;nbsp;Colombia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;62&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/co.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üá≤&amp;nbsp;Comoros&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;41&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/km.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá¨&amp;nbsp;Congo - Brazzaville&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá©&amp;nbsp;Congo - Kinshasa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá∞&amp;nbsp;Cook Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ck.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá∑&amp;nbsp;Costa Rica&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≠üá∑&amp;nbsp;Croatia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá∫&amp;nbsp;Cuba&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üáº&amp;nbsp;Cura√ßao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üáæ&amp;nbsp;Cyprus&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;32&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üáø&amp;nbsp;Czechia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;41&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üáÆ&amp;nbsp;C√¥te d‚ÄôIvoire&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ci.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá©üá∞&amp;nbsp;Denmark&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá©üáØ&amp;nbsp;Djibouti&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;43&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá©üá¥&amp;nbsp;Dominican Republic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;77&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/do.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá™üá®&amp;nbsp;Ecuador&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ec.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá™üá¨&amp;nbsp;Egypt&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;73&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/eg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üáª&amp;nbsp;El Salvador&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;34&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá∂&amp;nbsp;Equatorial Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá™üá∑&amp;nbsp;Eritrea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/er.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá™üá™&amp;nbsp;Estonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ee.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üáø&amp;nbsp;Eswatini&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá™üáπ&amp;nbsp;Ethiopia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/et.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá´üá¥&amp;nbsp;Faroe Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá´üáØ&amp;nbsp;Fiji&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá´üáÆ&amp;nbsp;Finland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá´üá∑&amp;nbsp;France&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;171&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá´&amp;nbsp;French Guiana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá´&amp;nbsp;French Polynesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá´&amp;nbsp;French Southern Territories&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá¶&amp;nbsp;Gabon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ga.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá≤&amp;nbsp;Gambia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá™&amp;nbsp;Georgia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ge.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá©üá™&amp;nbsp;Germany&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;246&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/de.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá≠&amp;nbsp;Ghana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá∑&amp;nbsp;Greece&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;104&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üáµ&amp;nbsp;Guadeloupe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá∫&amp;nbsp;Guam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üáπ&amp;nbsp;Guatemala&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üá≥&amp;nbsp;Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üáº&amp;nbsp;Guinea-Bissau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≠üáπ&amp;nbsp;Haiti&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ht.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≠üá≥&amp;nbsp;Honduras&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;38&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≠üá∞&amp;nbsp;Hong Kong&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≠üá∫&amp;nbsp;Hungary&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;37&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáÆüá∏&amp;nbsp;Iceland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/is.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáÆüá≥&amp;nbsp;India&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;328&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/in.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáÆüá©&amp;nbsp;Indonesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;84&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/id.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üåç&amp;nbsp;International&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;38&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/int.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáÆüá∑&amp;nbsp;Iran&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;185&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ir.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáÆüá∂&amp;nbsp;Iraq&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;109&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/iq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáÆüá™&amp;nbsp;Ireland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ie.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáÆüá±&amp;nbsp;Israel&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/il.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáÆüáπ&amp;nbsp;Italy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;287&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/it.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáØüá≤&amp;nbsp;Jamaica&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáØüáµ&amp;nbsp;Japan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;37&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáØüá¥&amp;nbsp;Jordan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;58&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üáø&amp;nbsp;Kazakhstan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üá™&amp;nbsp;Kenya&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ke.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üáÆ&amp;nbsp;Kiribati&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ki.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáΩüá∞&amp;nbsp;Kosovo&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/xk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üáº&amp;nbsp;Kuwait&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;68&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üá¨&amp;nbsp;Kyrgyzstan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üá¶&amp;nbsp;Laos&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/la.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üáª&amp;nbsp;Latvia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üáß&amp;nbsp;Lebanon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;74&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üá∏&amp;nbsp;Lesotho&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ls.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üá∑&amp;nbsp;Liberia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üáæ&amp;nbsp;Libya&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;49&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ly.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üáÆ&amp;nbsp;Liechtenstein&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/li.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üáπ&amp;nbsp;Lithuania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üá∫&amp;nbsp;Luxembourg&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá¥&amp;nbsp;Macao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá¨&amp;nbsp;Madagascar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üáº&amp;nbsp;Malawi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üáæ&amp;nbsp;Malaysia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;35&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/my.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üáª&amp;nbsp;Maldives&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá±&amp;nbsp;Mali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ml.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üáπ&amp;nbsp;Malta&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá≠&amp;nbsp;Marshall Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá∂&amp;nbsp;Martinique&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá∑&amp;nbsp;Mauritania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;41&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá∫&amp;nbsp;Mauritius&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáæüáπ&amp;nbsp;Mayotte&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/yt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üáΩ&amp;nbsp;Mexico&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;61&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mx.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá´üá≤&amp;nbsp;Micronesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá©&amp;nbsp;Moldova&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/md.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá®&amp;nbsp;Monaco&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá≥&amp;nbsp;Mongolia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá™&amp;nbsp;Montenegro&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/me.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá¶&amp;nbsp;Morocco&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;62&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ma.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üáø&amp;nbsp;Mozambique&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá≤&amp;nbsp;Myanmar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá¶&amp;nbsp;Namibia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/na.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá∑&amp;nbsp;Nauru&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üáµ&amp;nbsp;Nepal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/np.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá±&amp;nbsp;Netherlands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;98&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá®&amp;nbsp;New Caledonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üáø&amp;nbsp;New Zealand&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üáÆ&amp;nbsp;Nicaragua&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ni.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá™&amp;nbsp;Niger&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ne.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá¨&amp;nbsp;Nigeria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ng.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá∫&amp;nbsp;Niue&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá´&amp;nbsp;Norfolk Island&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üáµ&amp;nbsp;North Korea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá∞&amp;nbsp;North Macedonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üáµ&amp;nbsp;Northern Mariana Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≥üá¥&amp;nbsp;Norway&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/no.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¥üá≤&amp;nbsp;Oman&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;54&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/om.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá∞&amp;nbsp;Pakistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüáº&amp;nbsp;Palau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá∏&amp;nbsp;Palestine&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;72&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ps.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá¶&amp;nbsp;Panama&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá¨&amp;nbsp;Papua New Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüáæ&amp;nbsp;Paraguay&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/py.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá™&amp;nbsp;Peru&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;152&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pe.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá≠&amp;nbsp;Philippines&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ph.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá≥&amp;nbsp;Pitcairn Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá±&amp;nbsp;Poland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüáπ&amp;nbsp;Portugal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;37&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáµüá∑&amp;nbsp;Puerto Rico&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;31&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∂üá¶&amp;nbsp;Qatar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;54&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/qa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∑üá¥&amp;nbsp;Romania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;64&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ro.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∑üá∫&amp;nbsp;Russia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;337&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ru.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∑üáº&amp;nbsp;Rwanda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/rw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∑üá™&amp;nbsp;R√©union&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/re.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáºüá∏&amp;nbsp;Samoa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ws.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá≤&amp;nbsp;San Marino&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá¶&amp;nbsp;Saudi Arabia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;91&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá≥&amp;nbsp;Senegal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∑üá∏&amp;nbsp;Serbia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;32&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/rs.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá®&amp;nbsp;Seychelles&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá±&amp;nbsp;Sierra Leone&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá¨&amp;nbsp;Singapore&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá∞&amp;nbsp;Slovakia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;38&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üáÆ&amp;nbsp;Slovenia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/si.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üáß&amp;nbsp;Solomon Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá¥&amp;nbsp;Somalia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/so.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáøüá¶&amp;nbsp;South Africa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/za.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∞üá∑&amp;nbsp;South Korea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;70&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá∏&amp;nbsp;South Sudan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ss.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá™üá∏&amp;nbsp;Spain&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;299&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/es.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá±üá∞&amp;nbsp;Sri Lanka&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáßüá±&amp;nbsp;St. Barth√©lemy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá≠&amp;nbsp;St. Helena&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá≤üá´&amp;nbsp;St. Martin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá©&amp;nbsp;Sudan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üá™&amp;nbsp;Sweden&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/se.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá®üá≠&amp;nbsp;Switzerland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;116&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ch.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üáæ&amp;nbsp;Syria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;71&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∏üáπ&amp;nbsp;S√£o Tom√© &amp;amp; Pr√≠ncipe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/st.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüáº&amp;nbsp;Taiwan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;78&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüáØ&amp;nbsp;Tajikistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüáø&amp;nbsp;Tanzania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá≠&amp;nbsp;Thailand&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;63&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/th.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá±&amp;nbsp;Timor-Leste&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá¨&amp;nbsp;Togo&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá∞&amp;nbsp;Tokelau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá¥&amp;nbsp;Tonga&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/to.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüáπ&amp;nbsp;Trinidad &amp;amp; Tobago&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá≥&amp;nbsp;Tunisia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;49&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá∑&amp;nbsp;Turkey&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;198&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüá≤&amp;nbsp;Turkmenistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáπüáª&amp;nbsp;Tuvalu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáªüáÆ&amp;nbsp;U.S. Virgin Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∫üá¨&amp;nbsp;Uganda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ug.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∫üá¶&amp;nbsp;Ukraine&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;109&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ua.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¶üá™&amp;nbsp;United Arab Emirates&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;86&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ae.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá¨üáß&amp;nbsp;United Kingdom&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;169&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∫üá∏&amp;nbsp;United States&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1998&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/us.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∫üáæ&amp;nbsp;Uruguay&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá∫üáø&amp;nbsp;Uzbekistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáªüá∫&amp;nbsp;Vanuatu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáªüá¶&amp;nbsp;Vatican City&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/va.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáªüá™&amp;nbsp;Venezuela&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;34&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ve.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáªüá≥&amp;nbsp;Vietnam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;72&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáºüá´&amp;nbsp;Wallis &amp;amp; Futuna&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/wf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üá™üá≠&amp;nbsp;Western Sahara&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/eh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáæüá™&amp;nbsp;Yemen&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;57&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ye.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáøüá≤&amp;nbsp;Zambia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/zm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;üáøüáº&amp;nbsp;Zimbabwe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/zw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Undefined&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;333&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/undefined.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;languages&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;countries&quot;: [
      {
        &quot;code&quot;: &quot;us&quot;,
        &quot;name&quot;: &quot;United States&quot;
      },
      {
        &quot;code&quot;: &quot;ca&quot;,
        &quot;name&quot;: &quot;Canada&quot;
      }
    ],
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue. However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that&#39;s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alshedivat/al-folio</title>
      <link>https://github.com/alshedivat/al-folio</link>
      <description>&lt;p&gt;A beautiful, simple, clean, and responsive Jekyll theme for academics&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;al-folio&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/alshedivat/al-folio&quot;&gt;&lt;img src=&quot;https://travis-ci.org/alshedivat/al-folio.svg?branch=master&quot; alt=&quot;build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://alshedivat.github.io/al-folio/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/theme-demo-brightgreen.svg?sanitize=true&quot; alt=&quot;demo&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/alshedivat/al-folio/graphs/contributors/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/alshedivat/al-folio.svg?sanitize=true&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/alshedivat/al-folio&quot; alt=&quot;GitHub release (latest SemVer)&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/alshedivat/al-folio?color=blue&quot; alt=&quot;GitHub&quot;&gt; &lt;a href=&quot;https://github.com/alshedivat/al-folio&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/alshedivat/al-folio&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/alshedivat/al-folio/fork&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/alshedivat/al-folio&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://ko-fi.com/alshedivat&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/support-Ko--fi-yellow.svg?sanitize=true&quot; alt=&quot;support&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A simple, clean, and responsive &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; theme for academics. If you like the theme, give it a star!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://alshedivat.github.io/al-folio/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/al-folio-preview.png&quot; alt=&quot;Preview&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;User community&lt;/h2&gt; 
&lt;p&gt;The vibrant community of &lt;strong&gt;al-folio&lt;/strong&gt; users is growing! Academics around the world use this theme for their homepages, blogs, lab pages, as well as webpages for courses, workshops, conferences, meetups, and more. Check out the community webpages below. Feel free to add your own page(s) by sending a PR.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;Academics&lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;http://maruan.alshedivat.com&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://www.cs.columbia.edu/~chen1ru/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://maithraraghu.com&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;http://platanois.org&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://otiliastr.github.io&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://www.maths.dur.ac.uk/~sxwc62/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;http://jessachandler.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://mayankm96.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://markdean.info/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://kakodkar.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sahirbhatnagar.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://spd.gr/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://jay-sarkar.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://aborowska.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://aditisgh.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://alexhaydock.co.uk/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://alixkeener.net/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://andreea7b.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://rishabhjoshi.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sheelabhadra.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://giograno.me/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://immsrini.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://apooladian.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://chinmoy-dutta.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://liamcli.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://yoonholee.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://zrqiao.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://abstractgeek.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://www.compphys.de/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://julianstreyczek.github.io&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sdaza.com&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Labs&lt;/td&gt; 
   &lt;td&gt; &lt;a href=&quot;https://www.haylab.caltech.edu/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://sjkimlab.github.io/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://systemconsultantgroup.github.io/scg-folio/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://decisionlab.ucsf.edu/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;a href=&quot;https://programming-group.com/&quot; target=&quot;_blank&quot;&gt;‚òÖ&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Courses&lt;/td&gt; 
   &lt;td&gt; CMU PGM (&lt;a href=&quot;https://sailinglab.github.io/pgm-spring-2019/&quot; target=&quot;_blank&quot;&gt;S-19&lt;/a&gt;) &lt;br&gt; CMU DeepRL (&lt;a href=&quot;https://cmudeeprl.github.io/703website_f19/&quot; target=&quot;_blank&quot;&gt;F-19&lt;/a&gt;, &lt;a href=&quot;https://cmudeeprl.github.io/Spring202010403website/&quot; target=&quot;_blank&quot;&gt;S-20&lt;/a&gt;, &lt;a href=&quot;https://cmudeeprl.github.io/703website/&quot; target=&quot;_blank&quot;&gt;F-20&lt;/a&gt;) &lt;br&gt; CMU MMML (&lt;a href=&quot;https://cmu-multicomp-lab.github.io/mmml-course/fall2020/&quot; target=&quot;_blank&quot;&gt;F-20&lt;/a&gt;) &lt;br&gt; CMU Distributed Systems (&lt;a href=&quot;https://andrew.cmu.edu/course/15-440/&quot; target=&quot;_blank&quot;&gt;S-21&lt;/a&gt;) &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Conferences &amp;amp; workshops&lt;/td&gt; 
   &lt;td&gt; ML Retrospectives (NeurIPS: &lt;a href=&quot;https://ml-retrospectives.github.io/neurips2019/&quot; target=&quot;_blank&quot;&gt;2019&lt;/a&gt;, &lt;a href=&quot;https://ml-retrospectives.github.io/neurips2020/&quot; target=&quot;_blank&quot;&gt;2020&lt;/a&gt;; ICML: &lt;a href=&quot;https://ml-retrospectives.github.io/icml2020/&quot; target=&quot;_blank&quot;&gt;2020&lt;/a&gt;) &lt;br&gt; HAMLETS (NeurIPS: &lt;a href=&quot;https://hamlets-workshop.github.io/&quot; target=&quot;_blank&quot;&gt;2020&lt;/a&gt;) &lt;br&gt; ICBINB (NeurIPS: &lt;a href=&quot;https://i-cant-believe-its-not-better.github.io/&quot; target=&quot;_blank&quot;&gt;2020&lt;/a&gt;) &lt;br&gt; Neural Compression (ICLR: &lt;a href=&quot;https://neuralcompression.github.io/&quot; target=&quot;_blank&quot;&gt;2021&lt;/a&gt;) &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;For more about how to use Jekyll, check out &lt;a href=&quot;https://www.taniarascia.com/make-a-static-website-with-jekyll/&quot;&gt;this tutorial&lt;/a&gt;. Why Jekyll? Read &lt;a href=&quot;https://karpathy.github.io/2014/07/01/switching-to-jekyll/&quot;&gt;Andrej Karpathy&#39;s blog post&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;h4&gt;Local setup&lt;/h4&gt; 
&lt;p&gt;Assuming you have &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; and &lt;a href=&quot;https://bundler.io/&quot;&gt;Bundler&lt;/a&gt; installed on your system (&lt;em&gt;hint: for ease of managing ruby gems, consider using &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt;&lt;/em&gt;), first &lt;a href=&quot;https://guides.github.com/activities/forking/&quot;&gt;fork&lt;/a&gt; the theme from &lt;code&gt;github.com:alshedivat/al-folio&lt;/code&gt; to &lt;code&gt;github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-repo-name&amp;gt;&lt;/code&gt; and do the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone git@github.com:&amp;lt;your-username&amp;gt;/&amp;lt;your-repo-name&amp;gt;.git
$ cd &amp;lt;your-repo-name&amp;gt;
$ bundle install
$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, feel free to customize the theme however you like (don&#39;t forget to change the name!). After you are done, &lt;strong&gt;commit&lt;/strong&gt; your final changes.&lt;/p&gt; 
&lt;h4&gt;Deployment&lt;/h4&gt; 
&lt;p&gt;Deploying your website to &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; is the most popular option. Starting version &lt;a href=&quot;https://github.com/alshedivat/al-folio/releases/tag/v0.3.5&quot;&gt;v0.3.5&lt;/a&gt;, &lt;strong&gt;al-folio&lt;/strong&gt; will automatically re-deploy your webpage each time you push new changes to your repository! &lt;span&gt;‚ú®&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For project pages (default):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make changes, commit, and push!&lt;/li&gt; 
 &lt;li&gt;After deployment, the webpage will become available at &lt;code&gt;&amp;lt;your-github-username&amp;gt;.github.io/&amp;lt;your-repository-name&amp;gt;/&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;master&lt;/code&gt; branch should be used for the source code of your webpage and &lt;code&gt;gh-pages&lt;/code&gt; branch (will be created on the first deployment) will be used for deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;For personal and organization webpages:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rename your repository to &lt;code&gt;&amp;lt;your-github-username&amp;gt;.github.io&lt;/code&gt; or &lt;code&gt;&amp;lt;your-github-orgname&amp;gt;.github.io&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Click on &lt;strong&gt;Actions&lt;/strong&gt; tab and &lt;strong&gt;Enable GitHub Actions&lt;/strong&gt;; you no need to worry about creating any workflows as everything has already been set for you.&lt;/li&gt; 
 &lt;li&gt;Make sure the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; fields in &lt;code&gt;_config.yml&lt;/code&gt; are empty.&lt;/li&gt; 
 &lt;li&gt;Make any other changes to your webpage, commit, and push. This will automatically trigger the &lt;strong&gt;Deploy&lt;/strong&gt; action.&lt;/li&gt; 
 &lt;li&gt;Wait for a few minutes and let the action complete. You can see the progress in the &lt;strong&gt;Actions&lt;/strong&gt; tab. If completed successfully, in addition to the &lt;code&gt;master&lt;/code&gt; branch, your repository should now have a newly built &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/li&gt; 
 &lt;li&gt;Finally, in the &lt;strong&gt;Settings&lt;/strong&gt;, in the Pages section, set the branch to &lt;code&gt;gh-pages&lt;/code&gt; (&lt;strong&gt;NOT&lt;/strong&gt; to &lt;code&gt;master&lt;/code&gt;). See &lt;a href=&quot;https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#choosing-a-publishing-source&quot;&gt;Configuring a publishing source for your GitHub Pages site&lt;/a&gt; for more details.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;Manual deployment to GitHub Pages:&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;If you need to manually re-deploy your website to GitHub pages, run the deploy script from the root directory of your repository:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ./bin/deploy
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;uses the &lt;code&gt;master&lt;/code&gt; branch for the source code and deploys the webpage to &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;Deployment to another hosting server (non GitHub Pages):&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;If you decide to not use GitHub Pages and host your page elsewhere, simply run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bundle exec jekyll build
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;which will (re-)generate the static webpage in the &lt;code&gt;_site/&lt;/code&gt; folder. Then simply copy the contents of the &lt;code&gt;_site/&lt;/code&gt; foder to your hosting server.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure to correctly set the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; fields in &lt;code&gt;_config.yml&lt;/code&gt; before building the webpage. If you are deploying your webpage to &lt;code&gt;your-domain.com/your-project/&lt;/code&gt;, you must set &lt;code&gt;url: your-domain.com&lt;/code&gt; and &lt;code&gt;baseurl: /your-project/&lt;/code&gt;. If you are deploing directly to &lt;code&gt;your-domain.com&lt;/code&gt;, leave &lt;code&gt;baseurl&lt;/code&gt; blank.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;Deployment to a separate repository (advanced users only):&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Do not try using this method unless you know what you are doing (make sure you are familiar with &lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/about-github-pages#publishing-sources-for-github-pages-sites&quot;&gt;publishing sources&lt;/a&gt;). This approach allows to have the website&#39;s source code in one repository and the deployment version in a different repository.&lt;/p&gt; 
 &lt;p&gt;Let&#39;s assume that your website&#39;s publishing source is a &lt;code&gt;publishing-source&lt;/code&gt; sub-directory of a git-versioned repository cloned under &lt;code&gt;$HOME/repo/&lt;/code&gt;. For a user site this could well be something like &lt;code&gt;$HOME/&amp;lt;user&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Firstly, from the deployment repo dir, checkout the git branch hosting your publishing source.&lt;/p&gt; 
 &lt;p&gt;Then from the website sources dir (commonly your al-folio fork&#39;s clone):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bundle exec jekyll build --destination $HOME/repo/publishing-source
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This will instruct jekyll to deploy the website under &lt;code&gt;$HOME/repo/publishing-source&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Jekyll will clean &lt;code&gt;$HOME/repo/publishing-source&lt;/code&gt; before building!&lt;/p&gt; 
 &lt;p&gt;The quote below is taken directly from the &lt;a href=&quot;https://jekyllrb.com/docs/configuration/options/&quot;&gt;jekyll configuration docs&lt;/a&gt;:&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Destination folders are cleaned on site builds&lt;/p&gt; 
  &lt;p&gt;The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Some files could be retained by specifying them within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.&lt;/p&gt; 
  &lt;p&gt;Do not use an important location for &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt;; instead, use it as a staging area and copy files from there to your web server.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;If &lt;code&gt;$HOME/repo/publishing-source&lt;/code&gt; contains files that you want jekyll to leave untouched, specify them under &lt;code&gt;keep_files&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;. In its default configuration, al-folio will copy the top-level &lt;code&gt;README.md&lt;/code&gt; to the publishing source. If you want to change this behaviour, add &lt;code&gt;README.md&lt;/code&gt; under &lt;code&gt;exclude&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Do &lt;em&gt;not&lt;/em&gt; run &lt;code&gt;jekyll clean&lt;/code&gt; on your publishing source repo as this will result in the entire directory getting deleted, irrespective of the content of &lt;code&gt;keep_files&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Upgrading from a previous version&lt;/h4&gt; 
&lt;p&gt;If you installed &lt;strong&gt;al-folio&lt;/strong&gt; as described above, you can upgrade to the latest version as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Assuming the current directory is &amp;lt;your-repo-name&amp;gt;
$ git remote add upstream https://github.com/alshedivat/al-folio.git
$ git fetch upstream
$ git rebase upstream/v0.3.5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have extensively customized a previous version, it might be trickier to upgrade. You can still follow the steps above, but &lt;code&gt;git rebase&lt;/code&gt; may result in merge conflicts that must be resolved. See &lt;a href=&quot;https://help.github.com/en/github/using-git/about-git-rebase&quot;&gt;git rebase manual&lt;/a&gt; and how to &lt;a href=&quot;https://help.github.com/en/github/using-git/resolving-merge-conflicts-after-a-git-rebase&quot;&gt;resolve conflicts&lt;/a&gt; for more information. If rebasing is too complicated, we recommend to re-install the new version of the theme from scratch and port over your content and changes from the previous version manually.&lt;/p&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;Here are some frequently asked questions. If you have a different question, please ask using &lt;a href=&quot;https://github.com/alshedivat/al-folio/discussions/categories/q-a&quot;&gt;Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; After I fork and setup the repo, I get a deployment error. Isn&#39;t the website supposed to correctly deploy automatically? &lt;br&gt; &lt;strong&gt;A:&lt;/strong&gt; Yes, if you are using release &lt;code&gt;v0.3.5&lt;/code&gt; or later, the website will automatically and correctly re-deploy right after your first commit. Please make some changes (e.g., change your website info in &lt;code&gt;_config.yml&lt;/code&gt;), commit, and push. Make sure to follow &lt;a href=&quot;https://github.com/alshedivat/al-folio#deployment&quot;&gt;deployment instructions&lt;/a&gt; in the previous section. (Relevant issue: &lt;a href=&quot;https://github.com/alshedivat/al-folio/issues/209#issuecomment-798849211&quot;&gt;209&lt;/a&gt;.)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; I am using a custom domain (e.g., &lt;code&gt;foo.com&lt;/code&gt;). My custom domain becomes blank in the repository settings after each deployment. How do I fix that? &lt;br&gt; &lt;strong&gt;A:&lt;/strong&gt; You need to add &lt;code&gt;CNAME&lt;/code&gt; file to the &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; branch of your repository. The file should contain your custom domain name. (Relevant issue: &lt;a href=&quot;https://github.com/alshedivat/al-folio/issues/130&quot;&gt;130&lt;/a&gt;.)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; My webpage works locally. But after deploying, it is not displayed correctly (CSS and JS is not loaded properly). How do I fix that? &lt;br&gt; &lt;strong&gt;A:&lt;/strong&gt; Make sure to correctly specify the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; paths in &lt;code&gt;_config.yml&lt;/code&gt;. If you are deploying a personal or organization website to GitHub Pages, leave both fields blank. If you are deploying a project page to GitHub Pages, leave &lt;code&gt;url&lt;/code&gt; blank and set &lt;code&gt;baseurl: /&amp;lt;your-project-name&amp;gt;/&lt;/code&gt;. Generally, if you are deploying your webpage to &lt;code&gt;your-domain.com/your-project/&lt;/code&gt;, you must set &lt;code&gt;url: your-domain.com&lt;/code&gt; and &lt;code&gt;baseurl: /your-project/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Atom feed doesn&#39;t work. Why? &lt;br&gt; &lt;strong&gt;A:&lt;/strong&gt; Make sure to correctly specify the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; paths in &lt;code&gt;_config.yml&lt;/code&gt;. RSS Feed plugin works with these correctly set up fields: &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;author&lt;/code&gt;. Make sure to fill them in an appropriate way and try again.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Publications&lt;/h3&gt; 
&lt;p&gt;Your publications page is generated automatically from your BibTex bibliography. Simply edit &lt;code&gt;_bibliography/papers.bib&lt;/code&gt;. You can also add new &lt;code&gt;*.bib&lt;/code&gt; files and customize the look of your publications however you like by editing &lt;code&gt;_pages/publications.md&lt;/code&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/publications-screenshot.png&quot; width=&quot;800&quot;&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;Author annotation:&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;In publications, the author entry for yourself is identified by string &lt;code&gt;scholar:last_name&lt;/code&gt; and string array &lt;code&gt;scholar:first_name&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;scholar:
  last_name: Einstein
  first_name: [Albert, A.]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If the entry matches the last name and one form of the first names, it will be underlined. Keep meta-information about your co-authors in &lt;code&gt;_data/coauthors.yml&lt;/code&gt; and Jekyll will insert links to their webpages automatically. The coauthor data format in &lt;code&gt;_data/coauthors.yml&lt;/code&gt; is as follows,&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;&quot;Adams&quot;:
  - firstname: [&quot;Edwin&quot;, &quot;E.&quot;, &quot;E. P.&quot;, &quot;Edwin Plimpton&quot;]
    url: https://en.wikipedia.org/wiki/Edwin_Plimpton_Adams

&quot;Podolsky&quot;:
  - firstname: [&quot;Boris&quot;, &quot;B.&quot;, &quot;B. Y.&quot;, &quot;Boris Yakovlevich&quot;]
    url: https://en.wikipedia.org/wiki/Boris_Podolsky

&quot;Rosen&quot;:
  - firstname: [&quot;Nathan&quot;, &quot;N.&quot;]
    url: https://en.wikipedia.org/wiki/Nathan_Rosen

&quot;Bach&quot;:
  - firstname: [&quot;Johann Sebastian&quot;, &quot;J. S.&quot;]
    url: https://en.wikipedia.org/wiki/Johann_Sebastian_Bach

  - firstname: [&quot;Carl Philipp Emanuel&quot;, &quot;C. P. E.&quot;]
    url: https://en.wikipedia.org/wiki/Carl_Philipp_Emanuel_Bach
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If the entry matches one of the combinations of the last names and the first names, it will be highlighted and linked to the url provided.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Collections&lt;/h3&gt; 
&lt;p&gt;This Jekyll theme implements &lt;code&gt;collections&lt;/code&gt; to let you break up your work into categories. The theme comes with two default collections: &lt;code&gt;news&lt;/code&gt; and &lt;code&gt;projects&lt;/code&gt;. Items from the &lt;code&gt;news&lt;/code&gt; collection are automatically displayed on the home page. Items from the &lt;code&gt;projects&lt;/code&gt; collection are displayed on a responsive grid on projects page.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/projects-screenshot.png&quot; width=&quot;700&quot;&gt;&lt;/p&gt; 
&lt;p&gt;You can easily create your own collections, apps, short stories, courses, or whatever your creative work is. To do this, edit the collections in the &lt;code&gt;_config.yml&lt;/code&gt; file, create a corresponding folder, and create a landing page for your collection, similar to &lt;code&gt;_pages/projects.md&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Layouts&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;al-folio&lt;/strong&gt; comes with stylish layouts for pages and blog posts.&lt;/p&gt; 
&lt;h4&gt;The iconic style of Distill&lt;/h4&gt; 
&lt;p&gt;The theme allows you to create blog posts in the &lt;a href=&quot;https://distill.pub/&quot;&gt;distill.pub&lt;/a&gt; style:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://alshedivat.github.io/al-folio/blog/2018/distill/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/distill-screenshot.png&quot; width=&quot;700&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For more details on how to create distill-styled posts using &lt;code&gt;&amp;lt;d-*&amp;gt;&lt;/code&gt; tags, please refer to &lt;a href=&quot;https://alshedivat.github.io/al-folio/blog/2018/distill/&quot;&gt;the example&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Full support for math &amp;amp; code&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;al-folio&lt;/strong&gt; supports fast math typesetting through &lt;a href=&quot;https://katex.org/&quot;&gt;KaTeX&lt;/a&gt; and code syntax highlighting using &lt;a href=&quot;https://github.com/jwarby/jekyll-pygments-themes&quot;&gt;GitHub style&lt;/a&gt;:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://alshedivat.github.io/al-folio/blog/2015/math/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/math-screenshot.png&quot; width=&quot;400&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://alshedivat.github.io/al-folio/blog/2015/code/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/code-screenshot.png&quot; width=&quot;400&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h4&gt;Photos&lt;/h4&gt; 
&lt;p&gt;Photo formatting is made simple using &lt;a href=&quot;https://getbootstrap.com/docs/4.4/layout/grid/&quot;&gt;Bootstrap&#39;s grid system&lt;/a&gt;. Easily create beautiful grids within your blog posts and project pages:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://alshedivat.github.io/al-folio/projects/1_project/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/assets/img/photos-screenshot.png&quot; width=&quot;75%&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Other features&lt;/h3&gt; 
&lt;h4&gt;Theming&lt;/h4&gt; 
&lt;p&gt;Six beautiful theme colors have been selected to choose from. The default is purple, but you can quickly change it by editing &lt;code&gt;$theme-color&lt;/code&gt; variable in the &lt;code&gt;_sass/_themes.scss&lt;/code&gt; file. Other color variables are listed there as well.&lt;/p&gt; 
&lt;h4&gt;Social media previews&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;al-folio&lt;/strong&gt; supports preview images on social media. To enable this functionality you will need to set &lt;code&gt;serve_og_meta&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt;. Once you have done so, all your site&#39;s pages will include Open Graph data in the HTML head element.&lt;/p&gt; 
&lt;p&gt;You will then need to configure what image to display in your site&#39;s social media previews. This can be configured on a per-page basis, by setting the &lt;code&gt;og_image&lt;/code&gt; page variable. If for an individual page this variable is not set, then the theme will fall back to a site-wide &lt;code&gt;og_image&lt;/code&gt; variable, configurable in your &lt;code&gt;_config.yml&lt;/code&gt;. In both the page-specific and site-wide cases, the &lt;code&gt;og_image&lt;/code&gt; variable needs to hold the URL for the image you wish to display in social media previews.&lt;/p&gt; 
&lt;h4&gt;Atom (RSS-like) Feed&lt;/h4&gt; 
&lt;p&gt;It generates an Atom (RSS-like) feed of your posts, useful for Atom and RSS readers. The feed is reachable simply by typing after your homepage &lt;code&gt;/feed.xml&lt;/code&gt;. E.g. assuming your website mountpoint is the main folder, you can type &lt;code&gt;yourusername.github.io/feed.xml&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to al-folio are very welcome! Before you get started, please take a look at &lt;a href=&quot;https://raw.githubusercontent.com/alshedivat/al-folio/master/CONTRIBUTING.md&quot;&gt;the guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you would like to improve documentation, add your webpage to the list below, or fix a minor inconsistency or bug, please feel free to send a PR directly to &lt;code&gt;master&lt;/code&gt;. For more complex issues/bugs or feature requests, please open an issue using the appropriate template.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The theme is available as open source under the terms of the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Originally, &lt;strong&gt;al-folio&lt;/strong&gt; was based on the &lt;a href=&quot;https://github.com/bogoli/-folio&quot;&gt;*folio theme&lt;/a&gt; (published by &lt;a href=&quot;http://liabogoev.com&quot;&gt;Lia Bogoev&lt;/a&gt; and under the MIT license). Since then, it got a full re-write of the styles and many additional cool features.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>slow/nitro-sniper</title>
      <link>https://github.com/slow/nitro-sniper</link>
      <description>&lt;p&gt;A lightweight, fast and efficient discord nitro sniper, giveaway sniper &amp; invite sniper.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Nitro/Giveaway/Invite Sniper&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/slow/nitro-sniper/main/#&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/slow/nitro-sniper/badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/slow/nitro-sniper/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/slow/nitro-sniper?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/slow/nitro-sniper/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/slow/nitro-sniper?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://paypal.me/eternal404&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/donate-paypal-blue&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; A lightweight, fast and efficient discord nitro sniper, giveaway sniper &amp;amp; invite sniper. &lt;br&gt; &lt;img src=&quot;https://media.wtf/11603354&quot;&gt; &lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Light, fast &amp;amp; efficient&lt;/li&gt; 
 &lt;li&gt;Nitro sniper&lt;/li&gt; 
 &lt;li&gt;Giveaway sniper&lt;/li&gt; 
 &lt;li&gt;Limit nitro redeems (e.g. 2 codes / 24 hours)&lt;/li&gt; 
 &lt;li&gt;Custom giveaway reaction delay (randomized between &lt;strong&gt;delay&lt;/strong&gt; and (&lt;strong&gt;delay&lt;/strong&gt; * 1.5))&lt;/li&gt; 
 &lt;li&gt;DM host on giveaway win&lt;/li&gt; 
 &lt;li&gt;Custom DM Delay&lt;/li&gt; 
 &lt;li&gt;Custom DM Message&lt;/li&gt; 
 &lt;li&gt;Status Changer&lt;/li&gt; 
 &lt;li&gt;One-click Deploy&lt;/li&gt; 
 &lt;li&gt;Duplicate Protection&lt;/li&gt; 
 &lt;li&gt;Fake Code Detection&lt;/li&gt; 
 &lt;li&gt;Multi-Account Support&lt;/li&gt; 
 &lt;li&gt;3 Modes - &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;alts&lt;/code&gt;, &lt;code&gt;both&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Webhook support (Giveaways &amp;amp; Nitro)&lt;/li&gt; 
 &lt;li&gt;Fully customizable webhook&lt;/li&gt; 
 &lt;li&gt;Ability to turn the webhook on/off for certain events&lt;/li&gt; 
 &lt;li&gt;Ability to decide when the webhook should ping @everyone&lt;/li&gt; 
 &lt;li&gt;Ability to turn the ping on/off for certain events&lt;/li&gt; 
 &lt;li&gt;Whitelist and blacklist words for the giveaway sniper&lt;/li&gt; 
 &lt;li&gt;Whitelist only mode for giveaway sniper (Blacklist still applies)&lt;/li&gt; 
 &lt;li&gt;Blacklist and whitelist servers from the giveaway sniper&lt;/li&gt; 
 &lt;li&gt;Announce nitro type on snipe&lt;/li&gt; 
 &lt;li&gt;Invite Sniper&lt;/li&gt; 
 &lt;li&gt;Minimum and maximum member count for invite sniper&lt;/li&gt; 
 &lt;li&gt;Limit invite joins (e.g. 10 invites / 6 hours)&lt;/li&gt; 
 &lt;li&gt;Minimum and maximum delay before sniping invite&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h4&gt;Repl.it (recommended)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Visit the &lt;a href=&quot;https://replit.com/~&quot;&gt;dashboard&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the &lt;code&gt;New Repl&lt;/code&gt; button as seen below.&lt;br&gt; &lt;img src=&quot;https://media.wtf/21365449&quot; alt=&quot;Image&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the &lt;code&gt;Import from GitHub&lt;/code&gt; tab&lt;br&gt; &lt;img src=&quot;https://media.wtf/63105027&quot; alt=&quot;Image&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Paste the following inside the box:&lt;br&gt; &lt;code&gt;https://github.com/slow/nitro-sniper&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After the process completes, visit the environment variables tab.&lt;br&gt; &lt;img src=&quot;https://media.wtf/52361997&quot; alt=&quot;Image&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set the key as &lt;code&gt;settings&lt;/code&gt; and paste &lt;a href=&quot;https://raw.githubusercontent.com/slow/nitro-sniper/main/#default-configuration&quot;&gt;this&lt;/a&gt; inside the value text box; proceed to edit your configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After you are done editing your configuration, click &lt;code&gt;Add new secret&lt;/code&gt;. (You can go back to that tab whenever to change your settings)&lt;br&gt; &lt;img src=&quot;https://media.wtf/49612563&quot; alt=&quot;Image&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can now use &lt;kbd&gt;CTRL&lt;/kbd&gt; + &lt;kbd&gt;ENTER&lt;/kbd&gt; or &lt;kbd&gt;CMD&lt;/kbd&gt; + &lt;kbd&gt;ENTER&lt;/kbd&gt; to start the sniper or by using the &lt;code&gt;Run&lt;/code&gt; button at the top of the page.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Tips:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;To see the output of the sniper, go to the &lt;code&gt;Console&lt;/code&gt; tab. &lt;br&gt; &lt;img src=&quot;https://media.wtf/37329719&quot; alt=&quot;Image&quot;&gt;&lt;/li&gt; 
   &lt;li&gt;If you wish to update the sniper when a new version is released you can run &lt;code&gt;git pull&lt;/code&gt; in the &lt;code&gt;Shell&lt;/code&gt; tab as seen in this screenshot: &lt;br&gt; &lt;img src=&quot;https://media.wtf/81080054&quot; alt=&quot;Image&quot;&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Local&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node v14+&lt;/a&gt; is installed on your system and open a command prompt/terminal.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;git clone https://github.com/slow/nitro-sniper nitro-sniper&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;cd nitro-sniper&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Edit the .env file.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;node .&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Default Configuration&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
   tokens: {
      // Main Token (ex: Nz...)
      main: &#39;&#39;,
      // Alt Tokens (ex: Nz...)
      alts: [
         &#39;&#39;,
      ],
   },
   // The mode to run the sniper in. Options: main (only main account), alts (only alts), both
   mode: &#39;both&#39;,
   /* 
      The status the accounts should be on.
      Options: online, dnd, idle, offline, default
      default means the status will not be modified.
   */
   status: {
      // The status the main account will have IF it&#39;s logged in
      main: &#39;default&#39;,
      // The status the logged in alts will have
      alts: &#39;default&#39;
   },
   nitro: {
      // The amount of nitros needed to be sniped for the cooldown to activate
      max: 2,
      // Cooldown to activate after max nitro has been hit (in hours)
      cooldown: 24
   },
   giveaway: {
      // Wether or not to activate the giveaway sniper (true/false)
      enabled: true,
      // Delay to react to the giveaway (in seconds)
      delay: 30,
      // DM the hoster on giveaway win (true/false)
      dm: true,
      // Message to DM the host
      dmMessage: &#39;Hey, i won the giveaway. Could i redeem my prize?&#39;,
      // How long to wait to DM (in seconds)
      dmDelay: 25,
      // Blacklisted words for giveaway prizes
      blacklistedWords: [
         &#39;bot&#39;,
         &#39;test&#39;,
         &#39;ban&#39;
      ],
      // Only react to whitelisted giveaway prizes (true/false)
      whitelistOnly: false,
      // Whitelisted words for giveaway prizes
      whitelistedWords: [
         &#39;nitro&#39;
      ],
      // Blacklisted Server IDs to not snipe giveaways on
      blacklistedServers: [
         &#39;&#39;
      ],
      // Only snipe giveaways on whitelisted servers (true/false)
      whitelistServersOnly: false,
      whitelistedServers: [
        &#39;&#39;
      ]
   },
   invite: {
      // Wether or not to activate the invite sniper (true/false)
      enabled: false,
      delay: {
         // Minimum delay to join the server (in seconds)
         min: 10,
         // Maximum delay to join the server (in seconds)
         max: 20
      },
      members: {
         // The minimum member count the server should have
         min: 1500,
         // The maximum member count the server should have
         max: 50000
      },
      // The amount of joined invites needed for the cooldown to activate
      max: 10,
      // Cooldown to activate after max joined invites has been hit (in hours)
      cooldown: 6,
      // Wether to allow the main token to snipe invites (true/false)
      onlyAlts: true
   },
   webhook: {
      // URL to fire webhook to for notifications (ex: https://discord.com/api/webhooks/.../...)
      url: &#39;&#39;,
      enabled: {
         // Fire webhook on invalid code (true/false)
         codeInvalid: false,
         // Fire webhook on already redeemed code (true/false)
         codeAlreadyRedeemed: false,
         // Fire webhook on sniped code (true/false)
         codeSuccess: true,
         // Fire webhook on giveaway enter (true/false)
         giveawayEntered: true,
         // Fire webhook on giveaway win (true/false)
         giveawayWin: true,
         // Fire webhook on invite join (true/false)
         inviteJoin: false,
         // Fire webhook on failure of sniping invite (true/false)
         inviteFail: false
      },
      mentionEveryone: {
         // Mention on invalid code (true/false)
         codeInvalid: false,
         // Mention on already redeemed code (true/false)
         codeAlreadyRedeemed: false,
         // Mention on sniped code (true/false)
         codeSuccess: true,
         // Mention on giveaway enter (true/false)
         giveawayEntered: false,
         // Mention on giveaway win (true/false)
         giveawayWin: true,
         // Mention on invite join (true/false)
         inviteJoin: false,
         // Mention on failure of sniping invite (true/false)
         inviteFail: false
      }
   }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;How to obtain your token&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter/wiki/Obtaining-Token-and-Channel-IDs#how-to-get-a-user-token&quot;&gt;https://github.com/Tyrrrz/DiscordChatExporter/wiki/Obtaining-Token-and-Channel-IDs#how-to-get-a-user-token&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Tips&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Try to get a low latency to discord servers as there can be competition with other snipers.&lt;/li&gt; 
 &lt;li&gt;This is technically a self-bot: mentioning this in a discord chat is enough to make your account reportable to Trust &amp;amp; Safety.&lt;/li&gt; 
 &lt;li&gt;Running more than one instance or different snipers is an easy way to get your account deactivated.&lt;/li&gt; 
 &lt;li&gt;Before using, consider the moral implications of stealing gifts from communities you have nothing to do with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you enjoy my projects, please consider leaving a &lt;span&gt;‚≠ê&lt;/span&gt; in the top right on the repo :)&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>medusajs/medusa</title>
      <link>https://github.com/medusajs/medusa</link>
      <description>&lt;p&gt;Take ownership of your commerce stack&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.medusa-commerce.com&quot;&gt; &lt;img alt=&quot;Medusa&quot; src=&quot;https://user-images.githubusercontent.com/7554214/129161578-19b83dc8-fac5-4520-bd48-53cba676edd2.png&quot; width=&quot;100&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Medusa &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; Medusa is an open-source headless commerce engine that enables developers to create amazing digital commerce experiences. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;Medusa is released under the MIT license.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/medusajs/medusa&quot;&gt; &lt;img src=&quot;https://circleci.com/gh/medusajs/medusa.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/CONTRIBUTING.md&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs welcome!&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/xpCwq3Kfn8&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289DA.svg?sanitize=true&quot; alt=&quot;Discord Chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=medusajs&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/medusajs.svg?label=Follow%20@medusajs&quot; alt=&quot;Follow @medusajs&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;üöÄ Quickstart&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Medusa CLI&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g @medusajs/medusa-cli
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a new Medusa project&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;medusa new my-medusa-store --seed
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start your Medusa engine&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;medusa develop
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use the API&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl localhost:9000/store/products | python -m json.tool
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;After these four steps and only a couple of minutes, you now have a complete commerce engine running locally. You may now explore &lt;a href=&quot;https://docs.medusa-commerce.com/api&quot;&gt;the documentation&lt;/a&gt; to learn how to interact with the Medusa API. You may also add &lt;a href=&quot;https://github.com/medusajs/medusa/tree/master/packages&quot;&gt;plugins&lt;/a&gt; to your Medusa store by specifying them in your &lt;code&gt;medusa-config.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;üõí Setting up a storefront for your Medusa project&lt;/h2&gt; 
&lt;p&gt;Medusa is a headless commerce engine which means that it can be used for any type of digital commerce experience - you may use it as the backend for an app, a voice application, social commerce experiences or a traditional e-commerce website, you may even want to integrate Medusa into your own software to enable commerce functionality. All of these are use cases that Medusa supports - to learn more read the documentation or reach out.&lt;/p&gt; 
&lt;p&gt;To provide a quick way to get you started with a storefront install one of our traditional e-commerce starters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/medusajs/gatsby-starter-medusa&quot;&gt;Gatsby Starter&lt;/a&gt; &lt;pre&gt;&lt;code&gt;npm install -g gatsby-cli
gatsby new my-medusa-storefront https://github.com/medusajs/gatsby-starter-medusa
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/medusajs/nextjs-starter-medusa&quot;&gt;Nextjs Starter&lt;/a&gt; &lt;pre&gt;&lt;code&gt;npx create-next-app -e https://github.com/medusajs/nextjs-starter-medusa my-medusa-storefront
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With your starter and your Medusa store running you can open &lt;a href=&quot;http://localhost:8000&quot;&gt;http://localhost:8000&lt;/a&gt; (for Gatsby) or &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; (for Nextjs) in your browser and view the products in your store, build a cart, add shipping details and pay and complete an order.&lt;/p&gt; 
&lt;h2&gt;‚≠êÔ∏è Features&lt;/h2&gt; 
&lt;p&gt;Medusa comes with a set of building blocks that allow you to create amazing digital commerce experiences, below is a list of some of the features that Medusa come with out of the box:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Headless&lt;/strong&gt;: Medusa is a highly customizable commerce API which means that you may use any presentation layer such as a website, app, chatbots, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Regions&lt;/strong&gt; allow you to specify currencies, payment providers, shipping providers, tax rates and more for one or more countries for truly international sales.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orders&lt;/strong&gt; come with all the functionality necessary to perform powerful customer service operations with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Carts&lt;/strong&gt; allow customers to collect products for purchase, add shipping details and complete payments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Products&lt;/strong&gt; come with relevant fields for customs, stock keeping and sales. Medusa supports multiple options and unlimited variants.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Swaps&lt;/strong&gt; allow customers to exchange products after purchase (e.g. for incorrect sizes). Accounting, payment and fulfillment plugins handle all the tedious work for you for automated customer service.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Claims&lt;/strong&gt; can be created if customers experience problems with one of their products. Plugins make sure to automate sending out replacements, handling refunds and collecting valuable data for analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Returns&lt;/strong&gt; allow customers to send back products and can be configured to function in a 100% automated flow through accounting and payment plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fulfillment API&lt;/strong&gt; makes it easy to integrate with any fulfillment provider by creating fulfillment plugins, check the &lt;code&gt;/packages&lt;/code&gt; directory for a full list of plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Payments API&lt;/strong&gt; makes it easy to integrate with any payment provider by creating payment plugins, we already support Stripe, Paypal and Klarna.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notification API&lt;/strong&gt; allow integrations with email providers, chatbots, Slack channels, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customer Login&lt;/strong&gt; to give customers a way of managing their data, viewing their orders and saving payment details.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shipping Options &amp;amp; Profiles&lt;/strong&gt; enable powerful rules for free shipping limits, multiple fulfillment methods and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Medusa&#39;s Plugin Architecture&lt;/strong&gt; makes it intuitive and easy to manage your integrations, switch providers and grow with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt; is supported for those special use cases that all the other e-commerce platforms can&#39;t accommodate.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Database support&lt;/h2&gt; 
&lt;p&gt;In production Medusa requires Postgres and Redis, but SQLite is supported for development and testing purposes. If you plan on using Medusa for a project it is recommended that you install Postgres and Redis on your dev machine.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/download/&quot;&gt;Install PostgreSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redis.io/download&quot;&gt;Install Redis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To use Postgres and Redis you should provide a &lt;code&gt;database_url&lt;/code&gt; and &lt;code&gt;redis_url&lt;/code&gt; in your &lt;code&gt;medusa-config.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Medusa is all about the community. Therefore, we would love for you to help us build the most robust and powerful commerce engine on the market. Whether its fixing bugs, improving our documentation or simply spreading the word, please feel free to join in. Please check &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/CONTRIBUTING.md&quot;&gt;our contribution guide&lt;/a&gt; for further details about how to contribute.&lt;/p&gt; 
&lt;h2&gt;Repository structure&lt;/h2&gt; 
&lt;p&gt;The Medusa repository is a mono-repository managed using Lerna. Lerna allows us to have all Medusa packages in one place, and still distribute them as separate NPM packages.&lt;/p&gt; 
&lt;h2&gt;Licensed&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Thank you!&lt;/h2&gt; 
&lt;p&gt; &lt;a href=&quot;https://www.medusa-commerce.com&quot;&gt; Website &lt;/a&gt; | &lt;a href=&quot;https://medusajs.notion.site/medusajs/Medusa-Home-3485f8605d834a07949b17d1a9f7eafd&quot;&gt; Notion Home &lt;/a&gt; | &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=medusajs&quot;&gt; Twitter &lt;/a&gt; | &lt;a href=&quot;https://docs.medusa-commerce.com&quot;&gt; Docs &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BlueWallet/BlueWallet</title>
      <link>https://github.com/BlueWallet/BlueWallet</link>
      <description>&lt;p&gt;Bitcoin thin client for iOS &amp; Android. Built with React Native&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BlueWallet - A Bitcoin &amp;amp; Lightning Wallet&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/BlueWallet/BlueWallet&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/BlueWallet/BlueWallet/master/package.json&amp;amp;query=$.version&amp;amp;label=Version&quot; alt=&quot;GitHub tag&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/BlueWallet/BlueWallet&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/BlueWallet/BlueWallet.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.com/BlueWallet/BlueWallet&quot;&gt;&lt;img src=&quot;https://travis-ci.com/BlueWallet/BlueWallet.svg?branch=master&quot; alt=&quot;e2e on master&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square&quot; alt=&quot;code style: prettier&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/license/BlueWallet/BlueWallet.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Thin Bitcoin Wallet. Built with React Native and Electrum.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/bluewallet-bitcoin-wallet/id1376878040?l=ru&amp;amp;ls=1&amp;amp;mt=8&quot;&gt;&lt;img src=&quot;https://bluewallet.io/uploads/app-store-badge-blue.svg?sanitize=true&quot; alt=&quot;Appstore&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.bluewallet.bluewallet&quot;&gt;&lt;img src=&quot;https://bluewallet.io/uploads/play-store-badge-blue.svg?sanitize=true&quot; alt=&quot;Playstore&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Website: &lt;a href=&quot;https://bluewallet.io&quot;&gt;bluewallet.io&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Community: &lt;a href=&quot;https://t.me/bluewallet&quot;&gt;telegram group&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Private keys never leave your device&lt;/li&gt; 
 &lt;li&gt;Lightning Network supported&lt;/li&gt; 
 &lt;li&gt;SegWit-first. Replace-By-Fee support&lt;/li&gt; 
 &lt;li&gt;Encryption. Plausible deniability&lt;/li&gt; 
 &lt;li&gt;And many more &lt;a href=&quot;https://bluewallet.io/features&quot;&gt;features...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://i.imgur.com/hHYJnMj.png&quot; width=&quot;100%&quot;&gt; 
&lt;h2&gt;BUILD &amp;amp; RUN IT&lt;/h2&gt; 
&lt;p&gt;Please refer to the engines field in package.json file for the minimum required versions of Node and npm. It is preferred that you use an even-numbered version of Node as these are LTS versions.&lt;/p&gt; 
&lt;p&gt;To view the version of Node and npm in your environment, run the following in your console:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node --version &amp;amp;&amp;amp; npm --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;In your console:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/BlueWallet/BlueWallet.git
cd BlueWallet
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please make sure that your console is running the most stable versions of npm and node (even-numbered versions).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To run on Android:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You will now need to either connect an Android device to your computer or run an emulated Android device using AVD Manager which comes shipped with Android Studio. To run an emulator using AVD Manager:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download and run Android Studio&lt;/li&gt; 
 &lt;li&gt;Click on &quot;Open an existing Android Studio Project&quot;&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;build.gradle&lt;/code&gt; file under &lt;code&gt;BlueWallet/android/&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Android Studio will take some time to set things up. Once everything is set up, go to &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;AVD Manager&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;üìù This option &lt;a href=&quot;https://stackoverflow.com/questions/47173708/why-avd-manager-options-are-not-showing-in-android-studio&quot;&gt;may take some time to appear in the menu&lt;/a&gt; if you&#39;re opening the project in a freshly-installed version of Android Studio.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Click on &quot;Create Virtual Device...&quot; and go through the steps to create a virtual device&lt;/li&gt; 
 &lt;li&gt;Launch your newly created virtual device by clicking the &lt;code&gt;Play&lt;/code&gt; button under &lt;code&gt;Actions&lt;/code&gt; column&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Once you connected an Android device or launched an emulator, run this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx react-native run-android
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above command will build the app and install it. Once you launch the app it will take some time for all of the dependencies to load. Once everything loads up, you should have the built app running.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To run on iOS:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;npx pod-install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In another terminal window within the BlueWallet folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx react-native run-ios
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;To run on macOS using Mac Catalyst:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;npm run maccatalystpatches
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the patches are applied, open Xcode and select &quot;My Mac&quot; as destination. If you are running macOS Catalina, you may need to remove all iOS 14 Widget targets.&lt;/p&gt; 
&lt;h2&gt;TESTS&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;MOTIVATION TO BUILD IT&lt;/h2&gt; 
&lt;p&gt;I was not satisfied with existing iOS Bitcoin apps, especially with BreadWallet (the one I mainly used) where development stalled and they could not even deliver such features as SegWit, RBF and custom fees (at the times where custom fees were especially needed). So I knew I could create one to use myself and let others use it. I had experience with awesome bitcoin-js lib (javascript), and since I dont own any Macs, don&#39;t plan to and not going to learn ObjC/Swift - ReactNative (where you also write in javascript) was an obvious choice.&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;h2&gt;WANT TO CONTRIBUTE?&lt;/h2&gt; 
&lt;p&gt;Grab an issue from &lt;a href=&quot;https://github.com/BlueWallet/BlueWallet/projects/1&quot;&gt;the backlog&lt;/a&gt;, try to start or submit a PR, any doubts we will try to guide you. Contributors have a private telegram group, request access by email &lt;a href=&quot;mailto:bluewallet@bluewallet.io&quot;&gt;bluewallet@bluewallet.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We accepts translations via &lt;a href=&quot;https://www.transifex.com/bluewallet/bluewallet/&quot;&gt;Transifex&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To participate you need to:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Sign up to Transifex&lt;/li&gt; 
 &lt;li&gt;Find BlueWallet project&lt;/li&gt; 
 &lt;li&gt;Send join request&lt;/li&gt; 
 &lt;li&gt;After we accept your request you will be able to start translating! That&#39;s it!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please note the values in curly braces should not be translated. These are the names of the variables that will be inserted into the translated string. For example, the original string &lt;code&gt;&quot;{number} of {total}&quot;&lt;/code&gt; in Russian will be &lt;code&gt;&quot;{number} –∏–∑ {total}&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Transifex automatically creates Pull Request when language reaches 100% translation. We also trigger this by hand before each release, so don&#39;t worry if you can&#39;t translate everything, every word counts.&lt;/p&gt; 
&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; 
&lt;p&gt;Builds automated and tested with BrowserStack&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;&lt;img src=&quot;https://i.imgur.com/syscHCN.png&quot; width=&quot;160px&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bugs reported via BugSnag&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.bugsnag.com&quot;&gt;&lt;img src=&quot;https://images.typeform.com/images/QKuaAssrFCq7/image/default&quot; width=&quot;160px&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;RESPONSIBLE DISCLOSURE&lt;/h2&gt; 
&lt;p&gt;Found critical bugs/vulnerabilities? Please email them &lt;a href=&quot;mailto:bluewallet@bluewallet.io&quot;&gt;bluewallet@bluewallet.io&lt;/a&gt; Thanks!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ryanmcdermott/clean-code-javascript</title>
      <link>https://github.com/ryanmcdermott/clean-code-javascript</link>
      <description>&lt;p&gt;üõÅ Clean Code concepts adapted for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;clean-code-javascript&lt;/h1&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#objects-and-data-structures&quot;&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#classes&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#solid&quot;&gt;SOLID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#concurrency&quot;&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#error-handling&quot;&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#formatting&quot;&gt;Formatting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://www.osnews.com/images/comics/wtfm.jpg&quot; alt=&quot;Humorous image of software quality estimation as a count of how many expletives you shout when reading code&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Software engineering principles, from Robert C. Martin&#39;s book &lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;, adapted for JavaScript. This is not a style guide. It&#39;s a guide to producing &lt;a href=&quot;https://github.com/ryanmcdermott/3rs-of-software-architecture&quot;&gt;readable, reusable, and refactorable&lt;/a&gt; software in JavaScript.&lt;/p&gt; 
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be universally agreed upon. These are guidelines and nothing more, but they are ones codified over many years of collective experience by the authors of &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Our craft of software engineering is just a bit over 50 years old, and we are still learning a lot. When software architecture is as old as architecture itself, maybe then we will have harder rules to follow. For now, let these guidelines serve as a touchstone by which to assess the quality of the JavaScript code that you and your team produce.&lt;/p&gt; 
&lt;p&gt;One more thing: knowing these won&#39;t immediately make you a better software developer, and working with them for many years doesn&#39;t mean you won&#39;t make mistakes. Every piece of code starts as a first draft, like wet clay getting shaped into its final form. Finally, we chisel away the imperfections when we review it with our peers. Don&#39;t beat yourself up for first drafts that need improvement. Beat up the code instead!&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use meaningful and pronounceable variable names&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const yyyymmdstr = moment().format(&quot;YYYY/MM/DD&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const currentDate = moment().format(&quot;YYYY/MM/DD&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use the same vocabulary for the same type of variable&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getUserInfo();
getClientData();
getCustomerRecord();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getUser();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use searchable names&lt;/h3&gt; 
&lt;p&gt;We will read more code than we will ever write. It&#39;s important that the code we do write is readable and searchable. By &lt;em&gt;not&lt;/em&gt; naming variables that end up being meaningful for understanding our program, we hurt our readers. Make your names searchable. Tools like &lt;a href=&quot;https://github.com/danielstjules/buddy.js&quot;&gt;buddy.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/eslint/eslint/raw/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md&quot;&gt;ESLint&lt;/a&gt; can help identify unnamed constants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// What the heck is 86400000 for?
setTimeout(blastOff, 86400000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Declare them as capitalized named constants.
const MILLISECONDS_PER_DAY = 60 * 60 * 24 * 1000; //86400000;

setTimeout(blastOff, MILLISECONDS_PER_DAY);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use explanatory variables&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(
  address.match(cityZipCodeRegex)[1],
  address.match(cityZipCodeRegex)[2]
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const address = &quot;One Infinite Loop, Cupertino 95014&quot;;
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [_, city, zipCode] = address.match(cityZipCodeRegex) || [];
saveCityZipCode(city, zipCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Mental Mapping&lt;/h3&gt; 
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(l =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  // Wait, what is `l` for again?
  dispatch(l);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const locations = [&quot;Austin&quot;, &quot;New York&quot;, &quot;San Francisco&quot;];
locations.forEach(location =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  dispatch(location);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t add unneeded context&lt;/h3&gt; 
&lt;p&gt;If your class/object name tells you something, don&#39;t repeat that in your variable name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Car = {
  carMake: &quot;Honda&quot;,
  carModel: &quot;Accord&quot;,
  carColor: &quot;Blue&quot;
};

function paintCar(car, color) {
  car.carColor = color;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Car = {
  make: &quot;Honda&quot;,
  model: &quot;Accord&quot;,
  color: &quot;Blue&quot;
};

function paintCar(car, color) {
  car.color = color;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use default arguments instead of short circuiting or conditionals&lt;/h3&gt; 
&lt;p&gt;Default arguments are often cleaner than short circuiting. Be aware that if you use them, your function will only provide default values for &lt;code&gt;undefined&lt;/code&gt; arguments. Other &quot;falsy&quot; values such as &lt;code&gt;&#39;&#39;&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;, will not be replaced by a default value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMicrobrewery(name) {
  const breweryName = name || &quot;Hipster Brew Co.&quot;;
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMicrobrewery(name = &quot;Hipster Brew Co.&quot;) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Function arguments (2 or fewer ideally)&lt;/h3&gt; 
&lt;p&gt;Limiting the amount of function parameters is incredibly important because it makes testing your function easier. Having more than three leads to a combinatorial explosion where you have to test tons of different cases with each separate argument.&lt;/p&gt; 
&lt;p&gt;One or two arguments is the ideal case, and three should be avoided if possible. Anything more than that should be consolidated. Usually, if you have more than two arguments then your function is trying to do too much. In cases where it&#39;s not, most of the time a higher-level object will suffice as an argument.&lt;/p&gt; 
&lt;p&gt;Since JavaScript allows you to make objects on the fly, without a lot of class boilerplate, you can use an object if you are finding yourself needing a lot of arguments.&lt;/p&gt; 
&lt;p&gt;To make it obvious what properties the function expects, you can use the ES2015/ES6 destructuring syntax. This has a few advantages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;When someone looks at the function signature, it&#39;s immediately clear what properties are being used.&lt;/li&gt; 
 &lt;li&gt;It can be used to simulate named parameters.&lt;/li&gt; 
 &lt;li&gt;Destructuring also clones the specified primitive values of the argument object passed into the function. This can help prevent side effects. Note: objects and arrays that are destructured from the argument object are NOT cloned.&lt;/li&gt; 
 &lt;li&gt;Linters can warn you about unused properties, which would be impossible without destructuring.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMenu(title, body, buttonText, cancellable) {
  // ...
}

createMenu(&quot;Foo&quot;, &quot;Bar&quot;, &quot;Baz&quot;, true);

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createMenu({ title, body, buttonText, cancellable }) {
  // ...
}

createMenu({
  title: &quot;Foo&quot;,
  body: &quot;Bar&quot;,
  buttonText: &quot;Baz&quot;,
  cancellable: true
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should do one thing&lt;/h3&gt; 
&lt;p&gt;This is by far the most important rule in software engineering. When functions do more than one thing, they are harder to compose, test, and reason about. When you can isolate a function to just one action, it can be refactored easily and your code will read much cleaner. If you take nothing else away from this guide other than this, you&#39;ll be ahead of many developers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function emailClients(clients) {
  clients.forEach(client =&amp;gt; {
    const clientRecord = database.lookup(client);
    if (clientRecord.isActive()) {
      email(client);
    }
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function emailActiveClients(clients) {
  clients.filter(isActiveClient).forEach(email);
}

function isActiveClient(client) {
  const clientRecord = database.lookup(client);
  return clientRecord.isActive();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function names should say what they do&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addToDate(date, month) {
  // ...
}

const date = new Date();

// It&#39;s hard to tell from the function name what is added
addToDate(date, 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addMonthToDate(month, date) {
  // ...
}

const date = new Date();
addMonthToDate(1, date);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should only be one level of abstraction&lt;/h3&gt; 
&lt;p&gt;When you have more than one level of abstraction your function is usually doing too much. Splitting up functions leads to reusability and easier testing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach(token =&amp;gt; {
    // lex...
  });

  ast.forEach(node =&amp;gt; {
    // parse...
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const syntaxTree = parse(tokens);
  syntaxTree.forEach(node =&amp;gt; {
    // parse...
  });
}

function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(&quot; &quot;);
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      tokens.push(/* ... */);
    });
  });

  return tokens;
}

function parse(tokens) {
  const syntaxTree = [];
  tokens.forEach(token =&amp;gt; {
    syntaxTree.push(/* ... */);
  });

  return syntaxTree;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove duplicate code&lt;/h3&gt; 
&lt;p&gt;Do your absolute best to avoid duplicate code. Duplicate code is bad because it means that there&#39;s more than one place to alter something if you need to change some logic.&lt;/p&gt; 
&lt;p&gt;Imagine if you run a restaurant and you keep track of your inventory: all your tomatoes, onions, garlic, spices, etc. If you have multiple lists that you keep this on, then all have to be updated when you serve a dish with tomatoes in them. If you only have one list, there&#39;s only one place to update!&lt;/p&gt; 
&lt;p&gt;Oftentimes you have duplicate code because you have two or more slightly different things, that share a lot in common, but their differences force you to have two or more separate functions that do much of the same things. Removing duplicate code means creating an abstraction that can handle this set of different things with just one function/module/class.&lt;/p&gt; 
&lt;p&gt;Getting the abstraction right is critical, that&#39;s why you should follow the SOLID principles laid out in the &lt;em&gt;Classes&lt;/em&gt; section. Bad abstractions can be worse than duplicate code, so be careful! Having said this, if you can make a good abstraction, do it! Don&#39;t repeat yourself, otherwise you&#39;ll find yourself updating multiple places anytime you want to change one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function showDeveloperList(developers) {
  developers.forEach(developer =&amp;gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach(manager =&amp;gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function showEmployeeList(employees) {
  employees.forEach(employee =&amp;gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    const data = {
      expectedSalary,
      experience
    };

    switch (employee.type) {
      case &quot;manager&quot;:
        data.portfolio = employee.getMBAProjects();
        break;
      case &quot;developer&quot;:
        data.githubLink = employee.getGithubLink();
        break;
    }

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Set default objects with Object.assign&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const menuConfig = {
  title: null,
  body: &quot;Bar&quot;,
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || &quot;Foo&quot;;
  config.body = config.body || &quot;Bar&quot;;
  config.buttonText = config.buttonText || &quot;Baz&quot;;
  config.cancellable =
    config.cancellable !== undefined ? config.cancellable : true;
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const menuConfig = {
  title: &quot;Order&quot;,
  // User did not include &#39;body&#39; key
  buttonText: &quot;Send&quot;,
  cancellable: true
};

function createMenu(config) {
  let finalConfig = Object.assign(
    {
      title: &quot;Foo&quot;,
      body: &quot;Bar&quot;,
      buttonText: &quot;Baz&quot;,
      cancellable: true
    },
    config
  );
  return finalConfig
  // config now equals: {title: &quot;Order&quot;, body: &quot;Bar&quot;, buttonText: &quot;Send&quot;, cancellable: true}
  // ...
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t use flags as function parameters&lt;/h3&gt; 
&lt;p&gt;Flags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 1)&lt;/h3&gt; 
&lt;p&gt;A function produces a side effect if it does anything other than take a value in and return another value or values. A side effect could be writing to a file, modifying some global variable, or accidentally wiring all your money to a stranger.&lt;/p&gt; 
&lt;p&gt;Now, you do need to have side effects in a program on occasion. Like the previous example, you might need to write to a file. What you want to do is to centralize where you are doing this. Don&#39;t have several functions and classes that write to a particular file. Have one service that does it. One and only one.&lt;/p&gt; 
&lt;p&gt;The main point is to avoid common pitfalls like sharing state between objects without any structure, using mutable data types that can be written to by anything, and not centralizing where your side effects occur. If you can do this, you will be happier than the vast majority of other programmers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Global variable referenced by following function.
// If we had another function that used this name, now it&#39;d be an array and it could break it.
let name = &quot;Ryan McDermott&quot;;

function splitIntoFirstAndLastName() {
  name = name.split(&quot; &quot;);
}

splitIntoFirstAndLastName();

console.log(name); // [&#39;Ryan&#39;, &#39;McDermott&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function splitIntoFirstAndLastName(name) {
  return name.split(&quot; &quot;);
}

const name = &quot;Ryan McDermott&quot;;
const newName = splitIntoFirstAndLastName(name);

console.log(name); // &#39;Ryan McDermott&#39;;
console.log(newName); // [&#39;Ryan&#39;, &#39;McDermott&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 2)&lt;/h3&gt; 
&lt;p&gt;In JavaScript, some values are unchangeable (immutable) and some are changeable (mutable). Objects and arrays are two kinds of mutable values so it&#39;s important to handle them carefully when they&#39;re passed as parameters to a function. A JavaScript function can change an object&#39;s properties or alter the contents of an array which could easily cause bugs elsewhere.&lt;/p&gt; 
&lt;p&gt;Suppose there&#39;s a function that accepts an array parameter representing a shopping cart. If the function makes a change in that shopping cart array - by adding an item to purchase, for example - then any other function that uses that same &lt;code&gt;cart&lt;/code&gt; array will be affected by this addition. That may be great, however it could also be bad. Let&#39;s imagine a bad situation:&lt;/p&gt; 
&lt;p&gt;The user clicks the &quot;Purchase&quot; button which calls a &lt;code&gt;purchase&lt;/code&gt; function that spawns a network request and sends the &lt;code&gt;cart&lt;/code&gt; array to the server. Because of a bad network connection, the &lt;code&gt;purchase&lt;/code&gt; function has to keep retrying the request. Now, what if in the meantime the user accidentally clicks an &quot;Add to Cart&quot; button on an item they don&#39;t actually want before the network request begins? If that happens and the network request begins, then that purchase function will send the accidentally added item because the &lt;code&gt;cart&lt;/code&gt; array was modified.&lt;/p&gt; 
&lt;p&gt;A great solution would be for the &lt;code&gt;addItemToCart&lt;/code&gt; function to always clone the &lt;code&gt;cart&lt;/code&gt;, edit it, and return the clone. This would ensure that functions that are still using the old shopping cart wouldn&#39;t be affected by the changes.&lt;/p&gt; 
&lt;p&gt;Two caveats to mention to this approach:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;There might be cases where you actually want to modify the input object, but when you adopt this programming practice you will find that those cases are pretty rare. Most things can be refactored to have no side effects!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloning big objects can be very expensive in terms of performance. Luckily, this isn&#39;t a big issue in practice because there are &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;great libraries&lt;/a&gt; that allow this kind of programming approach to be fast and not as memory intensive as it would be for you to manually clone objects and arrays.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addItemToCart = (cart, item) =&amp;gt; {
  cart.push({ item, date: Date.now() });
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addItemToCart = (cart, item) =&amp;gt; {
  return [...cart, { item, date: Date.now() }];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t write to global functions&lt;/h3&gt; 
&lt;p&gt;Polluting globals is a bad practice in JavaScript because you could clash with another library and the user of your API would be none-the-wiser until they get an exception in production. Let&#39;s think about an example: what if you wanted to extend JavaScript&#39;s native Array method to have a &lt;code&gt;diff&lt;/code&gt; method that could show the difference between two arrays? You could write your new function to the &lt;code&gt;Array.prototype&lt;/code&gt;, but it could clash with another library that tried to do the same thing. What if that other library was just using &lt;code&gt;diff&lt;/code&gt; to find the difference between the first and last elements of an array? This is why it would be much better to just use ES2015/ES6 classes and simply extend the &lt;code&gt;Array&lt;/code&gt; global.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&amp;gt; !hash.has(elem));
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&amp;gt; !hash.has(elem));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Favor functional programming over imperative programming&lt;/h3&gt; 
&lt;p&gt;JavaScript isn&#39;t a functional language in the way that Haskell is, but it has a functional flavor to it. Functional languages can be cleaner and easier to test. Favor this style of programming when you can.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

let totalOutput = 0;

for (let i = 0; i &amp;lt; programmerOutput.length; i++) {
  totalOutput += programmerOutput[i].linesOfCode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const programmerOutput = [
  {
    name: &quot;Uncle Bobby&quot;,
    linesOfCode: 500
  },
  {
    name: &quot;Suzie Q&quot;,
    linesOfCode: 1500
  },
  {
    name: &quot;Jimmy Gosling&quot;,
    linesOfCode: 150
  },
  {
    name: &quot;Gracie Hopper&quot;,
    linesOfCode: 1000
  }
];

const totalOutput = programmerOutput.reduce(
  (totalLines, output) =&amp;gt; totalLines + output.linesOfCode,
  0
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Encapsulate conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (fsm.state === &quot;fetching&quot; &amp;amp;&amp;amp; isEmpty(listNode)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function shouldShowSpinner(fsm, listNode) {
  return fsm.state === &quot;fetching&quot; &amp;amp;&amp;amp; isEmpty(listNode);
}

if (shouldShowSpinner(fsmInstance, listNodeInstance)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid negative conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isDOMNodeNotPresent(node) {
  // ...
}

if (!isDOMNodeNotPresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isDOMNodePresent(node) {
  // ...
}

if (isDOMNodePresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid conditionals&lt;/h3&gt; 
&lt;p&gt;This seems like an impossible task. Upon first hearing this, most people say, &quot;how am I supposed to do anything without an &lt;code&gt;if&lt;/code&gt; statement?&quot; The answer is that you can use polymorphism to achieve the same task in many cases. The second question is usually, &quot;well that&#39;s great but why would I want to do that?&quot; The answer is a previous clean code concept we learned: a function should only do one thing. When you have classes and functions that have &lt;code&gt;if&lt;/code&gt; statements, you are telling your user that your function does more than one thing. Remember, just do one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Airplane {
  // ...
  getCruisingAltitude() {
    switch (this.type) {
      case &quot;777&quot;:
        return this.getMaxAltitude() - this.getPassengerCount();
      case &quot;Air Force One&quot;:
        return this.getMaxAltitude();
      case &quot;Cessna&quot;:
        return this.getMaxAltitude() - this.getFuelExpenditure();
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Airplane {
  // ...
}

class Boeing777 extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getPassengerCount();
  }
}

class AirForceOne extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude();
  }
}

class Cessna extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getFuelExpenditure();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 1)&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, which means your functions can take any type of argument. Sometimes you are bitten by this freedom and it becomes tempting to do type-checking in your functions. There are many ways to avoid having to do this. The first thing to consider is consistent APIs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function travelToTexas(vehicle) {
  if (vehicle instanceof Bicycle) {
    vehicle.pedal(this.currentLocation, new Location(&quot;texas&quot;));
  } else if (vehicle instanceof Car) {
    vehicle.drive(this.currentLocation, new Location(&quot;texas&quot;));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function travelToTexas(vehicle) {
  vehicle.move(this.currentLocation, new Location(&quot;texas&quot;));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 2)&lt;/h3&gt; 
&lt;p&gt;If you are working with basic primitive values like strings and integers, and you can&#39;t use polymorphism but you still feel the need to type-check, you should consider using TypeScript. It is an excellent alternative to normal JavaScript, as it provides you with static typing on top of standard JavaScript syntax. The problem with manually type-checking normal JavaScript is that doing it well requires so much extra verbiage that the faux &quot;type-safety&quot; you get doesn&#39;t make up for the lost readability. Keep your JavaScript clean, write good tests, and have good code reviews. Otherwise, do all of that but with TypeScript (which, like I said, is a great alternative!).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(val1, val2) {
  if (
    (typeof val1 === &quot;number&quot; &amp;amp;&amp;amp; typeof val2 === &quot;number&quot;) ||
    (typeof val1 === &quot;string&quot; &amp;amp;&amp;amp; typeof val2 === &quot;string&quot;)
  ) {
    return val1 + val2;
  }

  throw new Error(&quot;Must be of type String or Number&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(val1, val2) {
  return val1 + val2;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t over-optimize&lt;/h3&gt; 
&lt;p&gt;Modern browsers do a lot of optimization under-the-hood at runtime. A lot of times, if you are optimizing then you are just wasting your time. &lt;a href=&quot;https://github.com/petkaantonov/bluebird/wiki/Optimization-killers&quot;&gt;There are good resources&lt;/a&gt; for seeing where optimization is lacking. Target those in the meantime, until they are fixed if they can be.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// On old browsers, each iteration with uncached `list.length` would be costly
// because of `list.length` recomputation. In modern browsers, this is optimized.
for (let i = 0, len = list.length; i &amp;lt; len; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (let i = 0; i &amp;lt; list.length; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove dead code&lt;/h3&gt; 
&lt;p&gt;Dead code is just as bad as duplicate code. There&#39;s no reason to keep it in your codebase. If it&#39;s not being called, get rid of it! It will still be safe in your version history if you still need it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function oldRequestModule(url) {
  // ...
}

function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker(&quot;apples&quot;, req, &quot;www.inventory-awesome.io&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker(&quot;apples&quot;, req, &quot;www.inventory-awesome.io&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Objects and Data Structures&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use getters and setters&lt;/h3&gt; 
&lt;p&gt;Using getters and setters to access data on objects could be better than simply looking for a property on an object. &quot;Why?&quot; you might ask. Well, here&#39;s an unorganized list of reasons why:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When you want to do more beyond getting an object property, you don&#39;t have to look up and change every accessor in your codebase.&lt;/li&gt; 
 &lt;li&gt;Makes adding validation simple when doing a &lt;code&gt;set&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Encapsulates the internal representation.&lt;/li&gt; 
 &lt;li&gt;Easy to add logging and error handling when getting and setting.&lt;/li&gt; 
 &lt;li&gt;You can lazy load your object&#39;s properties, let&#39;s say getting it from a server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeBankAccount() {
  // ...

  return {
    balance: 0
    // ...
  };
}

const account = makeBankAccount();
account.balance = 100;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeBankAccount() {
  // this one is private
  let balance = 0;

  // a &quot;getter&quot;, made public via the returned object below
  function getBalance() {
    return balance;
  }

  // a &quot;setter&quot;, made public via the returned object below
  function setBalance(amount) {
    // ... validate before updating the balance
    balance = amount;
  }

  return {
    // ...
    getBalance,
    setBalance
  };
}

const account = makeBankAccount();
account.setBalance(100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Make objects have private members&lt;/h3&gt; 
&lt;p&gt;This can be accomplished through closures (for ES5 and below).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Employee = function(name) {
  this.name = name;
};

Employee.prototype.getName = function getName() {
  return this.name;
};

const employee = new Employee(&quot;John Doe&quot;);
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeEmployee(name) {
  return {
    getName() {
      return name;
    }
  };
}

const employee = makeEmployee(&quot;John Doe&quot;);
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Prefer ES2015/ES6 classes over ES5 plain functions&lt;/h3&gt; 
&lt;p&gt;It&#39;s very difficult to get readable class inheritance, construction, and method definitions for classical ES5 classes. If you need inheritance (and be aware that you might not), then prefer ES2015/ES6 classes. However, prefer small functions over classes until you find yourself needing larger and more complex objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Animal = function(age) {
  if (!(this instanceof Animal)) {
    throw new Error(&quot;Instantiate Animal with `new`&quot;);
  }

  this.age = age;
};

Animal.prototype.move = function move() {};

const Mammal = function(age, furColor) {
  if (!(this instanceof Mammal)) {
    throw new Error(&quot;Instantiate Mammal with `new`&quot;);
  }

  Animal.call(this, age);
  this.furColor = furColor;
};

Mammal.prototype = Object.create(Animal.prototype);
Mammal.prototype.constructor = Mammal;
Mammal.prototype.liveBirth = function liveBirth() {};

const Human = function(age, furColor, languageSpoken) {
  if (!(this instanceof Human)) {
    throw new Error(&quot;Instantiate Human with `new`&quot;);
  }

  Mammal.call(this, age, furColor);
  this.languageSpoken = languageSpoken;
};

Human.prototype = Object.create(Mammal.prototype);
Human.prototype.constructor = Human;
Human.prototype.speak = function speak() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Animal {
  constructor(age) {
    this.age = age;
  }

  move() {
    /* ... */
  }
}

class Mammal extends Animal {
  constructor(age, furColor) {
    super(age);
    this.furColor = furColor;
  }

  liveBirth() {
    /* ... */
  }
}

class Human extends Mammal {
  constructor(age, furColor, languageSpoken) {
    super(age, furColor);
    this.languageSpoken = languageSpoken;
  }

  speak() {
    /* ... */
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use method chaining&lt;/h3&gt; 
&lt;p&gt;This pattern is very useful in JavaScript and you see it in many libraries such as jQuery and Lodash. It allows your code to be expressive, and less verbose. For that reason, I say, use method chaining and take a look at how clean your code will be. In your class functions, simply return &lt;code&gt;this&lt;/code&gt; at the end of every function, and you can chain further class methods onto it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
  }

  setModel(model) {
    this.model = model;
  }

  setColor(color) {
    this.color = color;
  }

  save() {
    console.log(this.make, this.model, this.color);
  }
}

const car = new Car(&quot;Ford&quot;, &quot;F-150&quot;, &quot;red&quot;);
car.setColor(&quot;pink&quot;);
car.save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
    // NOTE: Returning this for chaining
    return this;
  }

  setModel(model) {
    this.model = model;
    // NOTE: Returning this for chaining
    return this;
  }

  setColor(color) {
    this.color = color;
    // NOTE: Returning this for chaining
    return this;
  }

  save() {
    console.log(this.make, this.model, this.color);
    // NOTE: Returning this for chaining
    return this;
  }
}

const car = new Car(&quot;Ford&quot;, &quot;F-150&quot;, &quot;red&quot;).setColor(&quot;pink&quot;).save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Prefer composition over inheritance&lt;/h3&gt; 
&lt;p&gt;As stated famously in &lt;a href=&quot;https://en.wikipedia.org/wiki/Design_Patterns&quot;&gt;&lt;em&gt;Design Patterns&lt;/em&gt;&lt;/a&gt; by the Gang of Four, you should prefer composition over inheritance where you can. There are lots of good reasons to use inheritance and lots of good reasons to use composition. The main point for this maxim is that if your mind instinctively goes for inheritance, try to think if composition could model your problem better. In some cases it can.&lt;/p&gt; 
&lt;p&gt;You might be wondering then, &quot;when should I use inheritance?&quot; It depends on your problem at hand, but this is a decent list of when inheritance makes more sense than composition:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your inheritance represents an &quot;is-a&quot; relationship and not a &quot;has-a&quot; relationship (Human-&amp;gt;Animal vs. User-&amp;gt;UserDetails).&lt;/li&gt; 
 &lt;li&gt;You can reuse code from the base classes (Humans can move like all animals).&lt;/li&gt; 
 &lt;li&gt;You want to make global changes to derived classes by changing a base class. (Change the caloric expenditure of all animals when they move).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  // ...
}

// Bad because Employees &quot;have&quot; tax data. EmployeeTaxData is not a type of Employee
class EmployeeTaxData extends Employee {
  constructor(ssn, salary) {
    super();
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class EmployeeTaxData {
  constructor(ssn, salary) {
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}

class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  setTaxData(ssn, salary) {
    this.taxData = new EmployeeTaxData(ssn, salary);
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;SOLID&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Single Responsibility Principle (SRP)&lt;/h3&gt; 
&lt;p&gt;As stated in Clean Code, &quot;There should never be more than one reason for a class to change&quot;. It&#39;s tempting to jam-pack a class with a lot of functionality, like when you can only take one suitcase on your flight. The issue with this is that your class won&#39;t be conceptually cohesive and it will give it many reasons to change. Minimizing the amount of times you need to change a class is important. It&#39;s important because if too much functionality is in one class and you modify a piece of it, it can be difficult to understand how that will affect other dependent modules in your codebase.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class UserSettings {
  constructor(user) {
    this.user = user;
  }

  changeSettings(settings) {
    if (this.verifyCredentials()) {
      // ...
    }
  }

  verifyCredentials() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class UserAuth {
  constructor(user) {
    this.user = user;
  }

  verifyCredentials() {
    // ...
  }
}

class UserSettings {
  constructor(user) {
    this.user = user;
    this.auth = new UserAuth(user);
  }

  changeSettings(settings) {
    if (this.auth.verifyCredentials()) {
      // ...
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Open/Closed Principle (OCP)&lt;/h3&gt; 
&lt;p&gt;As stated by Bertrand Meyer, &quot;software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification.&quot; What does that mean though? This principle basically states that you should allow users to add new functionalities without changing existing code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;ajaxAdapter&quot;;
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;nodeAdapter&quot;;
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    if (this.adapter.name === &quot;ajaxAdapter&quot;) {
      return makeAjaxCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    } else if (this.adapter.name === &quot;nodeAdapter&quot;) {
      return makeHttpCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    }
  }
}

function makeAjaxCall(url) {
  // request and return promise
}

function makeHttpCall(url) {
  // request and return promise
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;ajaxAdapter&quot;;
  }

  request(url) {
    // request and return promise
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = &quot;nodeAdapter&quot;;
  }

  request(url) {
    // request and return promise
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    return this.adapter.request(url).then(response =&amp;gt; {
      // transform response and return
    });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Liskov Substitution Principle (LSP)&lt;/h3&gt; 
&lt;p&gt;This is a scary term for a very simple concept. It&#39;s formally defined as &quot;If S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of that program (correctness, task performed, etc.).&quot; That&#39;s an even scarier definition.&lt;/p&gt; 
&lt;p&gt;The best explanation for this is if you have a parent class and a child class, then the base class and child class can be used interchangeably without getting incorrect results. This might still be confusing, so let&#39;s take a look at the classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the &quot;is-a&quot; relationship via inheritance, you quickly get into trouble.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Rectangle {
  constructor() {
    this.width = 0;
    this.height = 0;
  }

  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }

  setWidth(width) {
    this.width = width;
  }

  setHeight(height) {
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Rectangle {
  setWidth(width) {
    this.width = width;
    this.height = width;
  }

  setHeight(height) {
    this.width = height;
    this.height = height;
  }
}

function renderLargeRectangles(rectangles) {
  rectangles.forEach(rectangle =&amp;gt; {
    rectangle.setWidth(4);
    rectangle.setHeight(5);
    const area = rectangle.getArea(); // BAD: Returns 25 for Square. Should be 20.
    rectangle.render(area);
  });
}

const rectangles = [new Rectangle(), new Rectangle(), new Square()];
renderLargeRectangles(rectangles);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Shape {
  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }
}

class Rectangle extends Shape {
  constructor(width, height) {
    super();
    this.width = width;
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Shape {
  constructor(length) {
    super();
    this.length = length;
  }

  getArea() {
    return this.length * this.length;
  }
}

function renderLargeShapes(shapes) {
  shapes.forEach(shape =&amp;gt; {
    const area = shape.getArea();
    shape.render(area);
  });
}

const shapes = [new Rectangle(4, 5), new Rectangle(4, 5), new Square(5)];
renderLargeShapes(shapes);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Interface Segregation Principle (ISP)&lt;/h3&gt; 
&lt;p&gt;JavaScript doesn&#39;t have interfaces so this principle doesn&#39;t apply as strictly as others. However, it&#39;s important and relevant even with JavaScript&#39;s lack of type system.&lt;/p&gt; 
&lt;p&gt;ISP states that &quot;Clients should not be forced to depend upon interfaces that they do not use.&quot; Interfaces are implicit contracts in JavaScript because of duck typing.&lt;/p&gt; 
&lt;p&gt;A good example to look at that demonstrates this principle in JavaScript is for classes that require large settings objects. Not requiring clients to setup huge amounts of options is beneficial, because most of the time they won&#39;t need all of the settings. Making them optional helps prevent having a &quot;fat interface&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.settings.animationModule.setup();
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName(&quot;body&quot;),
  animationModule() {} // Most of the time, we won&#39;t need to animate when traversing.
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.options = settings.options;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.setupOptions();
  }

  setupOptions() {
    if (this.options.animationModule) {
      // ...
    }
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName(&quot;body&quot;),
  options: {
    animationModule() {}
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Dependency Inversion Principle (DIP)&lt;/h3&gt; 
&lt;p&gt;This principle states two essential things:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt; 
 &lt;li&gt;Abstractions should not depend upon details. Details should depend on abstractions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This can be hard to understand at first, but if you&#39;ve worked with AngularJS, you&#39;ve seen an implementation of this principle in the form of Dependency Injection (DI). While they are not identical concepts, DIP keeps high-level modules from knowing the details of its low-level modules and setting them up. It can accomplish this through DI. A huge benefit of this is that it reduces the coupling between modules. Coupling is a very bad development pattern because it makes your code hard to refactor.&lt;/p&gt; 
&lt;p&gt;As stated previously, JavaScript doesn&#39;t have interfaces so the abstractions that are depended upon are implicit contracts. That is to say, the methods and properties that an object/class exposes to another object/class. In the example below, the implicit contract is that any Request module for an &lt;code&gt;InventoryTracker&lt;/code&gt; will have a &lt;code&gt;requestItems&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class InventoryRequester {
  constructor() {
    this.REQ_METHODS = [&quot;HTTP&quot;];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryTracker {
  constructor(items) {
    this.items = items;

    // BAD: We have created a dependency on a specific request implementation.
    // We should just have requestItems depend on a request method: `request`
    this.requester = new InventoryRequester();
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

const inventoryTracker = new InventoryTracker([&quot;apples&quot;, &quot;bananas&quot;]);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class InventoryTracker {
  constructor(items, requester) {
    this.items = items;
    this.requester = requester;
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

class InventoryRequesterV1 {
  constructor() {
    this.REQ_METHODS = [&quot;HTTP&quot;];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryRequesterV2 {
  constructor() {
    this.REQ_METHODS = [&quot;WS&quot;];
  }

  requestItem(item) {
    // ...
  }
}

// By constructing our dependencies externally and injecting them, we can easily
// substitute our request module for a fancy new one that uses WebSockets.
const inventoryTracker = new InventoryTracker(
  [&quot;apples&quot;, &quot;bananas&quot;],
  new InventoryRequesterV2()
);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Testing is more important than shipping. If you have no tests or an inadequate amount, then every time you ship code you won&#39;t be sure that you didn&#39;t break anything. Deciding on what constitutes an adequate amount is up to your team, but having 100% coverage (all statements and branches) is how you achieve very high confidence and developer peace of mind. This means that in addition to having a great testing framework, you also need to use a &lt;a href=&quot;https://gotwarlost.github.io/istanbul/&quot;&gt;good coverage tool&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There&#39;s no excuse to not write tests. There are &lt;a href=&quot;https://jstherightway.org/#testing-tools&quot;&gt;plenty of good JS test frameworks&lt;/a&gt;, so find one that your team prefers. When you find one that works for your team, then aim to always write tests for every new feature/module you introduce. If your preferred method is Test Driven Development (TDD), that is great, but the main point is to just make sure you are reaching your coverage goals before launching any feature, or refactoring an existing one.&lt;/p&gt; 
&lt;h3&gt;Single concept per test&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import assert from &quot;assert&quot;;

describe(&quot;MomentJS&quot;, () =&amp;gt; {
  it(&quot;handles date boundaries&quot;, () =&amp;gt; {
    let date;

    date = new MomentJS(&quot;1/1/2015&quot;);
    date.addDays(30);
    assert.equal(&quot;1/31/2015&quot;, date);

    date = new MomentJS(&quot;2/1/2016&quot;);
    date.addDays(28);
    assert.equal(&quot;02/29/2016&quot;, date);

    date = new MomentJS(&quot;2/1/2015&quot;);
    date.addDays(28);
    assert.equal(&quot;03/01/2015&quot;, date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import assert from &quot;assert&quot;;

describe(&quot;MomentJS&quot;, () =&amp;gt; {
  it(&quot;handles 30-day months&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;1/1/2015&quot;);
    date.addDays(30);
    assert.equal(&quot;1/31/2015&quot;, date);
  });

  it(&quot;handles leap year&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;2/1/2016&quot;);
    date.addDays(28);
    assert.equal(&quot;02/29/2016&quot;, date);
  });

  it(&quot;handles non-leap year&quot;, () =&amp;gt; {
    const date = new MomentJS(&quot;2/1/2015&quot;);
    date.addDays(28);
    assert.equal(&quot;03/01/2015&quot;, date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use Promises, not callbacks&lt;/h3&gt; 
&lt;p&gt;Callbacks aren&#39;t clean, and they cause excessive amounts of nesting. With ES2015/ES6, Promises are a built-in global type. Use them!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request&quot;;
import { writeFile } from &quot;fs&quot;;

get(
  &quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;,
  (requestErr, response, body) =&amp;gt; {
    if (requestErr) {
      console.error(requestErr);
    } else {
      writeFile(&quot;article.html&quot;, body, writeErr =&amp;gt; {
        if (writeErr) {
          console.error(writeErr);
        } else {
          console.log(&quot;File written&quot;);
        }
      });
    }
  }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

get(&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;)
  .then(body =&amp;gt; {
    return writeFile(&quot;article.html&quot;, body);
  })
  .then(() =&amp;gt; {
    console.log(&quot;File written&quot;);
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Async/Await are even cleaner than Promises&lt;/h3&gt; 
&lt;p&gt;Promises are a very clean alternative to callbacks, but ES2017/ES8 brings async and await which offer an even cleaner solution. All you need is a function that is prefixed in an &lt;code&gt;async&lt;/code&gt; keyword, and then you can write your logic imperatively without a &lt;code&gt;then&lt;/code&gt; chain of functions. Use this if you can take advantage of ES2017/ES8 features today!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

get(&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;)
  .then(body =&amp;gt; {
    return writeFile(&quot;article.html&quot;, body);
  })
  .then(() =&amp;gt; {
    console.log(&quot;File written&quot;);
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { get } from &quot;request-promise&quot;;
import { writeFile } from &quot;fs-extra&quot;;

async function getCleanCodeArticle() {
  try {
    const body = await get(
      &quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;
    );
    await writeFile(&quot;article.html&quot;, body);
    console.log(&quot;File written&quot;);
  } catch (err) {
    console.error(err);
  }
}

getCleanCodeArticle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Thrown errors are a good thing! They mean the runtime has successfully identified when something in your program has gone wrong and it&#39;s letting you know by stopping function execution on the current stack, killing the process (in Node), and notifying you in the console with a stack trace.&lt;/p&gt; 
&lt;h3&gt;Don&#39;t ignore caught errors&lt;/h3&gt; 
&lt;p&gt;Doing nothing with a caught error doesn&#39;t give you the ability to ever fix or react to said error. Logging the error to the console (&lt;code&gt;console.log&lt;/code&gt;) isn&#39;t much better as often times it can get lost in a sea of things printed to the console. If you wrap any bit of code in a &lt;code&gt;try/catch&lt;/code&gt; it means you think an error may occur there and therefore you should have a plan, or create a code path, for when it occurs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  functionThatMightThrow();
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  functionThatMightThrow();
} catch (error) {
  // One option (more noisy than console.log):
  console.error(error);
  // Another option:
  notifyUserOfError(error);
  // Another option:
  reportErrorToService(error);
  // OR do all three!
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Don&#39;t ignore rejected promises&lt;/h3&gt; 
&lt;p&gt;For the same reason you shouldn&#39;t ignore caught errors from &lt;code&gt;try/catch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    console.log(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    // One option (more noisy than console.log):
    console.error(error);
    // Another option:
    notifyUserOfError(error);
    // Another option:
    reportErrorToService(error);
    // OR do all three!
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Formatting is subjective. Like many rules herein, there is no hard and fast rule that you must follow. The main point is DO NOT ARGUE over formatting. There are &lt;a href=&quot;https://standardjs.com/rules.html&quot;&gt;tons of tools&lt;/a&gt; to automate this. Use one! It&#39;s a waste of time and money for engineers to argue over formatting.&lt;/p&gt; 
&lt;p&gt;For things that don&#39;t fall under the purview of automatic formatting (indentation, tabs vs. spaces, double vs. single quotes, etc.) look here for some guidance.&lt;/p&gt; 
&lt;h3&gt;Use consistent capitalization&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, so capitalization tells you a lot about your variables, functions, etc. These rules are subjective, so your team can choose whatever they want. The point is, no matter what you all choose, just be consistent.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const DAYS_IN_WEEK = 7;
const daysInMonth = 30;

const songs = [&quot;Back In Black&quot;, &quot;Stairway to Heaven&quot;, &quot;Hey Jude&quot;];
const Artists = [&quot;ACDC&quot;, &quot;Led Zeppelin&quot;, &quot;The Beatles&quot;];

function eraseDatabase() {}
function restore_database() {}

class animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const DAYS_IN_WEEK = 7;
const DAYS_IN_MONTH = 30;

const SONGS = [&quot;Back In Black&quot;, &quot;Stairway to Heaven&quot;, &quot;Hey Jude&quot;];
const ARTISTS = [&quot;ACDC&quot;, &quot;Led Zeppelin&quot;, &quot;The Beatles&quot;];

function eraseDatabase() {}
function restoreDatabase() {}

class Animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function callers and callees should be close&lt;/h3&gt; 
&lt;p&gt;If a function calls another, keep those functions vertically close in the source file. Ideally, keep the caller right above the callee. We tend to read code from top-to-bottom, like a newspaper. Because of this, make your code read that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  lookupPeers() {
    return db.lookup(this.employee, &quot;peers&quot;);
  }

  lookupManager() {
    return db.lookup(this.employee, &quot;manager&quot;);
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  lookupPeers() {
    return db.lookup(this.employee, &quot;peers&quot;);
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  lookupManager() {
    return db.lookup(this.employee, &quot;manager&quot;);
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Comments&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Only comment things that have business logic complexity.&lt;/h3&gt; 
&lt;p&gt;Comments are an apology, not a requirement. Good code &lt;em&gt;mostly&lt;/em&gt; documents itself.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hashIt(data) {
  // The hash
  let hash = 0;

  // Length of string
  const length = data.length;

  // Loop through every character in data
  for (let i = 0; i &amp;lt; length; i++) {
    // Get character code.
    const char = data.charCodeAt(i);
    // Make the hash
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;
    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hashIt(data) {
  let hash = 0;
  const length = data.length;

  for (let i = 0; i &amp;lt; length; i++) {
    const char = data.charCodeAt(i);
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;

    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t leave commented out code in your codebase&lt;/h3&gt; 
&lt;p&gt;Version control exists for a reason. Leave old code in your history.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doStuff();
// doOtherStuff();
// doSomeMoreStuff();
// doSoMuchStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;doStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don&#39;t have journal comments&lt;/h3&gt; 
&lt;p&gt;Remember, use version control! There&#39;s no need for dead code, commented code, and especially journal comments. Use &lt;code&gt;git log&lt;/code&gt; to get history!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/**
 * 2016-12-20: Removed monads, didn&#39;t understand them (RM)
 * 2016-10-01: Improved using special monads (JP)
 * 2016-02-03: Removed type-checking (LI)
 * 2015-03-14: Added combine with type-checking (JR)
 */
function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid positional markers&lt;/h3&gt; 
&lt;p&gt;They usually just add noise. Let the functions and variable names along with the proper indentation and formatting give the visual structure to your code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;////////////////////////////////////////////////////////////////////////////////
// Scope Model Instantiation
////////////////////////////////////////////////////////////////////////////////
$scope.model = {
  menu: &quot;foo&quot;,
  nav: &quot;bar&quot;
};

////////////////////////////////////////////////////////////////////////////////
// Action setup
////////////////////////////////////////////////////////////////////////////////
const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$scope.model = {
  menu: &quot;foo&quot;,
  nav: &quot;bar&quot;
};

const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Armenia.png&quot; alt=&quot;am&quot;&gt; &lt;strong&gt;Armenian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hanumanum/clean-code-javascript&quot;&gt;hanumanum/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bangladesh.png&quot; alt=&quot;bd&quot;&gt; &lt;strong&gt;Bangla(‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/InsomniacSabbir/clean-code-javascript/&quot;&gt;InsomniacSabbir/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fesnt/clean-code-javascript&quot;&gt;fesnt/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Simplified Chinese&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/alivebao/clean-code-js&quot;&gt;alivebao/clean-code-js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/beginor/clean-code-javascript&quot;&gt;beginor/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Traditional Chinese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AllJointTW/clean-code-javascript&quot;&gt;AllJointTW/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GavBaros/clean-code-javascript-fr&quot;&gt;GavBaros/clean-code-javascript-fr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/marcbruederlin/clean-code-javascript&quot;&gt;marcbruederlin/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Indonesia.png&quot; alt=&quot;id&quot;&gt; &lt;strong&gt;Indonesia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/andirkh/clean-code-javascript/&quot;&gt;andirkh/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/frappacchio/clean-code-javascript/&quot;&gt;frappacchio/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;ja&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/clean-code-javascript/&quot;&gt;mitsuruog/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/qkraudghgh/clean-code-javascript-ko&quot;&gt;qkraudghgh/clean-code-javascript-ko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Poland.png&quot; alt=&quot;pl&quot;&gt; &lt;strong&gt;Polish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greg-dev/clean-code-javascript-pl&quot;&gt;greg-dev/clean-code-javascript-pl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/BoryaMogila/clean-code-javascript-ru/&quot;&gt;BoryaMogila/clean-code-javascript-ru/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/maksugr/clean-code-javascript&quot;&gt;maksugr/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tureey/clean-code-javascript&quot;&gt;tureey/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Uruguay.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/andersontr15/clean-code-javascript-es&quot;&gt;andersontr15/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Serbia.png&quot; alt=&quot;rs&quot;&gt; &lt;strong&gt;Serbian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/doskovicmilos/clean-code-javascript&quot;&gt;doskovicmilos/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bsonmez/clean-code-javascript/tree/turkish-translation&quot;&gt;bsonmez/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mindfr1k/clean-code-javascript-ua&quot;&gt;mindfr1k/clean-code-javascript-ua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vi&quot;&gt; &lt;strong&gt;Vietnamese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hienvd/clean-code-javascript/&quot;&gt;hienvd/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;GitHub Docs 
 &lt;!-- omit in toc --&gt;&lt;/h2&gt; 
&lt;p&gt;This repository contains the documentation website code and Markdown source files for &lt;a href=&quot;https://docs.github.com&quot;&gt;docs.github.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;GitHub&#39;s Docs team works on pre-production content in a private repo that regularly syncs with this public repo.&lt;/p&gt; 
&lt;p&gt;In this article:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#readmes&quot;&gt;READMEs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Start contributing right now:&lt;/h3&gt; 
&lt;p&gt;We accept a lot of &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md/#types-of-contributions-memo&quot;&gt;different contributions&lt;/a&gt;, including some that don&#39;t require you to write a single line of code.&lt;/p&gt; 
&lt;h4&gt;Click &lt;strong&gt;make a contribution&lt;/strong&gt; from docs&lt;/h4&gt; 
&lt;p&gt;As you&#39;re using GitHub Docs, you may find something in an article that you&#39;d like to add to, update, or change. Click on &lt;strong&gt;make a contribution&lt;/strong&gt; to navigate directly to that article in the codebase, so that you can begin making your contribution.&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/github/docs/main/assets/images/contribution_cta.png&quot; width=&quot;400&quot;&gt; 
&lt;h4&gt;Open an issue&lt;/h4&gt; 
&lt;p&gt;If you&#39;ve found a problem, you can open an issue using a &lt;a href=&quot;https://github.com/github/docs/issues/new/choose&quot;&gt;template&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Solve an issue&lt;/h4&gt; 
&lt;p&gt;If you have a solution to one of the open issues, you will need to fork the repository and submit a pull request using the &lt;a href=&quot;https://github.com/github/docs/raw/main/CONTRIBUTING.md#pull-request-template&quot;&gt;template&lt;/a&gt; that is visible automatically in the pull request body. For more details about this process, please check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Join us in discussions&lt;/h4&gt; 
&lt;p&gt;We use GitHub Discussions to talk about all sorts of topics related to documentation and this site. For example: if you&#39;d like help troubleshooting a PR, have a great new idea, or want to share something amazing you&#39;ve learned in our docs, join us in &lt;a href=&quot;https://github.com/github/docs/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;And that&#39;s it!&lt;/h4&gt; 
&lt;p&gt;That&#39;s how you can get started easily as a member of the GitHub Documentation community. &lt;span&gt;‚ú®&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;If you want to know more, or you&#39;re making a more complex contribution, check out &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;Getting Started with Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few more things to know when you&#39;re getting started with this repo:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you&#39;re having trouble with your GitHub account, contact &lt;a href=&quot;https://support.github.com/contact&quot;&gt;Support&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;We do not accept pull requests for translated content - see &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;READMEs&lt;/h2&gt; 
&lt;p&gt;In addition to the README you&#39;re reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/README.md&quot;&gt;content/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/graphql/README.md&quot;&gt;content/graphql/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/content/rest/README.md&quot;&gt;content/rest/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/contributing/README.md&quot;&gt;contributing/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/README.md&quot;&gt;data/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/reusables/README.md&quot;&gt;data/reusables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/data/variables/README.md&quot;&gt;data/variables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/liquid-tags/README.md&quot;&gt;includes/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/includes/README.md&quot;&gt;includes/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/components/README.md&quot;&gt;components/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/lib/liquid-tags/README.md&quot;&gt;lib/liquid-tags/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/middleware/README.md&quot;&gt;middleware/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/script/README.md&quot;&gt;script/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/stylesheets/README.md&quot;&gt;stylesheets/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/tests/README.md&quot;&gt;tests/README.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The GitHub product documentation in the assets, content, and data folders are licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE&quot;&gt;CC-BY license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All other code in this repository is licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using the GitHub logos, be sure to follow the &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Androz2091/AtlantaBot</title>
      <link>https://github.com/Androz2091/AtlantaBot</link>
      <description>&lt;p&gt;ü§ñ‚ÄÄAnother powerful Discord Bot with a web-dashboard used by more than 130k users!&lt;/p&gt;&lt;hr&gt;&lt;img width=&quot;150&quot; height=&quot;150&quot; align=&quot;left&quot; style=&quot;float: left; margin: 0 10px 0 0;&quot; alt=&quot;Atlanta&quot; src=&quot;https://i.goopics.net/lEENx.png&quot;&gt; 
&lt;h1&gt;Atlanta&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/Za9zxTH&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/565048515357835264.svg?logo=discord&amp;amp;colorB=7289DA&amp;amp;label=Atlanta%20Support&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/NPkySYKMkN&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/568120814776614924.svg?logo=discord&amp;amp;colorB=00BFFF&amp;amp;label=Atlanta%20Emojis&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/discordjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/discord.js-v13.0.0--dev-blue.svg?logo=npm&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/androz2091&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/patreon-donate-orange.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/Androz2091/AtlantaBot&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/Androz2091/AtlantaBot/badge&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This bot is used by more than 130,000 Discord users and more than 800 servers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Atlanta is a open source Discord bot coded in JavaScript with &lt;a href=&quot;https://discord.js.org&quot;&gt;Discord.js&lt;/a&gt; and &lt;a href=&quot;https://mongoosejs.com/docs/api.html&quot;&gt;Mongoose&lt;/a&gt; by &lt;a href=&quot;https://github.com/Androz2091&quot;&gt;Androz2091&lt;/a&gt;.&lt;br&gt; Feel free to add a star ‚≠ê to the repository to promote the project!&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Complete Bot&lt;/h3&gt; 
&lt;p&gt;Atlanta offers (non-exhaustive list):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úâÔ∏è Support for commands in direct messages&lt;/li&gt; 
 &lt;li&gt;üá´üá∑ Support for translations (illimited languages)&lt;/li&gt; 
 &lt;li&gt;‚öôÔ∏è Guild configuration (prefix, ignored channels, etc...)&lt;/li&gt; 
 &lt;li&gt;üòÄ Commands made pleasant thanks to the many emojis&lt;/li&gt; 
 &lt;li&gt;üó≥Ô∏è Support for Discordbots.org votes with rewards&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Atlanta also adds &lt;strong&gt;a new mention&lt;/strong&gt; like @everyone and @here, the &lt;code&gt;@someone&lt;/code&gt;, which allows you to pick a random member of the server!&lt;/p&gt; 
&lt;h3&gt;Many commands&lt;/h3&gt; 
&lt;p&gt;Atlanta has a lot of features, with &lt;strong&gt;7 main categories&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üë©‚Äçüíº &lt;strong&gt;Administration&lt;/strong&gt;: &lt;code&gt;slowmode&lt;/code&gt;, &lt;code&gt;welcome&lt;/code&gt;, &lt;code&gt;addcommand&lt;/code&gt;, &lt;code&gt;automod&lt;/code&gt;, &lt;code&gt;backup&lt;/code&gt; and &lt;strong&gt;11&lt;/strong&gt; more!&lt;/li&gt; 
 &lt;li&gt;üöì &lt;strong&gt;Moderation&lt;/strong&gt;: &lt;code&gt;see-warns&lt;/code&gt;, &lt;code&gt;setlogs&lt;/code&gt;, &lt;code&gt;checkinvites&lt;/code&gt;, &lt;code&gt;poll&lt;/code&gt;, and &lt;strong&gt;6&lt;/strong&gt; more!&lt;/li&gt; 
 &lt;li&gt;üéµ &lt;strong&gt;Music&lt;/strong&gt;: &lt;code&gt;play&lt;/code&gt;, &lt;code&gt;skip&lt;/code&gt;, &lt;code&gt;queue&lt;/code&gt;, &lt;code&gt;np&lt;/code&gt;, and &lt;strong&gt;2&lt;/strong&gt; more!&lt;/li&gt; 
 &lt;li&gt;üí∞ &lt;strong&gt;Economy&lt;/strong&gt;: &lt;code&gt;profile&lt;/code&gt;, &lt;code&gt;work&lt;/code&gt;, &lt;code&gt;badge&lt;/code&gt;, &lt;code&gt;slots&lt;/code&gt;, &lt;code&gt;balance&lt;/code&gt;, &lt;code&gt;leaderboard&lt;/code&gt;, and &lt;strong&gt;6&lt;/strong&gt; more!&lt;/li&gt; 
 &lt;li&gt;üëª &lt;strong&gt;Fun&lt;/strong&gt;: &lt;code&gt;lmg&lt;/code&gt;, &lt;code&gt;findwords&lt;/code&gt;, &lt;code&gt;flip&lt;/code&gt;, &lt;code&gt;lovecalc&lt;/code&gt;, &lt;code&gt;random&lt;/code&gt; and &lt;strong&gt;6&lt;/strong&gt; more!&lt;/li&gt; 
 &lt;li&gt;üñ®Ô∏è &lt;strong&gt;General&lt;/strong&gt;: &lt;code&gt;minimize&lt;/code&gt;, &lt;code&gt;setafk&lt;/code&gt;, &lt;code&gt;translate&lt;/code&gt;, &lt;code&gt;remindme&lt;/code&gt;, &lt;code&gt;hastebin&lt;/code&gt;, &lt;code&gt;fortnite&lt;/code&gt;, &lt;code&gt;minecraft&lt;/code&gt; and &lt;strong&gt;10&lt;/strong&gt; more!&lt;/li&gt; 
 &lt;li&gt;üëë &lt;strong&gt;Owner&lt;/strong&gt;: &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;getinvite&lt;/code&gt;, &lt;code&gt;servers-list&lt;/code&gt; and &lt;strong&gt;2&lt;/strong&gt; more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.atlanta-bot.fr/commands&quot;&gt;See the full commands list&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;A powerful Dashboard&lt;/h3&gt; 
&lt;p&gt;Atlanta has its own dashboard which also offers many features! The dashboard runs with Express and EJS!&lt;/p&gt; 
&lt;img align=&quot;left&quot; style=&quot;float: centrer; margin: 0 10px 0 0;&quot; src=&quot;https://zupimages.net/up/19/31/c3ya.png&quot; height=&quot;200&quot; width=&quot;350&quot;&gt; 
&lt;img align=&quot;center&quot; style=&quot;float: left; margin: 0 10px 0 0;&quot; src=&quot;https://zupimages.net/up/19/31/vnq5.png&quot; height=&quot;200&quot; width=&quot;350&quot;&gt; 
&lt;img align=&quot;center&quot; style=&quot;float: centrer; margin: 0 10px 0 0;&quot; src=&quot;https://zupimages.net/up/19/31/htga.png&quot; height=&quot;200&quot; width=&quot;350&quot;&gt; 
&lt;p&gt;You can directly &lt;strong&gt;edit your configuration&lt;/strong&gt;, &lt;strong&gt;manage your servers&lt;/strong&gt;, &lt;strong&gt;view rankings&lt;/strong&gt;, &lt;strong&gt;modify your profile&lt;/strong&gt; and much more!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find the code in the dashboard folder!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Non-customized version&lt;/h3&gt; 
&lt;p&gt;If you don&#39;t want to edit the code of the bot, a permanent online version is available, which you can invite to your own Discord!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discordbots.org/bot/557445719892688897&quot;&gt;&lt;img src=&quot;https://discordbots.org/api/widget/557445719892688897.svg?sanitize=true&quot; alt=&quot;Discord Bots&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Customized version&lt;/h3&gt; 
&lt;p&gt;If you want to edit the bot&#39;s code and host it on your machine, it&#39;s possible!&lt;br&gt; You must follow the &lt;a href=&quot;https://www.atlanta-bot.fr/installation/&quot;&gt;installation guide&lt;/a&gt; to properly install it! Don&#39;t worry, it&#39;s fast and simple if you follow the guide!&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlanta-bot.fr/commands&quot;&gt;Commands List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlanta-bot.fr/installation&quot;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.atlanta-bot.fr/faq/&quot;&gt;F.A.Q&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/NPkySYKMkN&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/AtlantaBot&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Androz2091/AtlantaBot/&quot;&gt;Github&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dashboard.atlanta-bot.fr&quot;&gt;Dashboard&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before &lt;strong&gt;creating an issue&lt;/strong&gt;, please ensure that it hasn&#39;t already been reported/suggested, and double-check the &lt;a href=&quot;https://www.atlanta-bot.fr/faq&quot;&gt;F.A.Q&lt;/a&gt;.&lt;br&gt; And if you have a question, please ask it in the &lt;a href=&quot;https://discord.gg/NPkySYKMkN&quot;&gt;Discord server&lt;/a&gt; instead of opening an issue. If you wish to contribute to the Atlanta codebase or documentation, feel free to fork the repository and submit a pull request!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Atlanta is licensed under the GPL 3.0 license. See the file &lt;code&gt;LICENSE&lt;/code&gt; for more information. If you plan to use any part of this source code in your own bot, I would be grateful if you would include some form of credit somewhere.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Waikkii/Waikiki_ninja</title>
      <link>https://github.com/Waikkii/Waikiki_ninja</link>
      <description>&lt;p&gt;Ëá™Áî®Ôºå‰ªÖ‰∏∫ÈùíÈæôÂèòÈáèÊ∑ªÂä†Â∑•ÂÖ∑&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ninja&lt;/h1&gt; 
&lt;p&gt;Âü∫Êú¨ÂäüËÉΩÂ∑≤ÂÆåÂñÑÔºåÈ∏ΩÂá†Â§©ÔºåÊúâÈóÆÈ¢òÂÖà‰ªîÁªÜÁúãÊ≠§READMEÔºåÊúâÈúÄÊ±ÇÂèØ‰ª•ÊèêPR&lt;/p&gt; 
&lt;h2&gt;Ëá¥Ë∞¢&lt;/h2&gt; 
&lt;p&gt;ÊÑüË∞¢NinjaÂéü‰ΩúËÄÖÔºö@MoonBegonia&lt;/p&gt; 
&lt;p&gt;‰ªìÂ∫ìÂú∞ÂùÄÔºö&lt;a href=&quot;https://github.com/MoonBegonia/ninja&quot;&gt;https://github.com/MoonBegonia/ninja&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ÊÑüË∞¢WSCKÂäüËÉΩÂéü‰ΩúËÄÖÔºö@huiyi9420&lt;/p&gt; 
&lt;p&gt;‰ªìÂ∫ìÂú∞ÂùÄÔºö&lt;a href=&quot;https://github.com/huiyi9420/ninja&quot;&gt;https://github.com/huiyi9420/ninja&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Êñ∞&lt;/h2&gt; 
&lt;p&gt;ÂΩìÂâçÔºöÊîØÊåÅCKÊ≥®ÂÜåÔºåÁôªÂΩïÂíåÂà†Èô§ÔºåÊîØÊåÅWSKEYÂΩïÂÖ•ÂíåÂà†Èô§ÔºåÁôªÂΩïÊàêÂäüËøõÂÖ•‰∏™‰∫∫‰∏≠ÂøÉÔºåÂèØ‰øÆÊîπÂ§áÊ≥®„ÄÇÈªòËÆ§ÁôªÂΩïCKÊâçÂèØÊèê‰∫§WSCKÔºå‰∏ªÈ°µÊèê‰∫§WSCKÂÆπÊòì‰π±Ôºå‰∏çÂª∫ËÆÆ„ÄÇ&lt;/p&gt; 
&lt;p&gt;Êñ∞ÁâπÊÄßÔºöÊîØÊåÅGithub ActionÂâçÁ´ØÁºñËØëÂπ∂Ëá™Âä®ÊõøÊç¢Êñá‰ª∂„ÄÇFork‰πãÂêéÔºöAction-&amp;gt;BuildAndCommit-&amp;gt;Run workflow-&amp;gt;Run workflowÂç≥ÂèØ„ÄÇ&lt;/p&gt; 
&lt;h2&gt;ËØ¥Êòé&lt;/h2&gt; 
&lt;p&gt;Ninja ‰ªÖ‰æõÂ≠¶‰π†ÂèÇËÄÉ‰ΩøÁî®ÔºåËØ∑‰∫é‰∏ãËΩΩÂêéÁöÑ 24 Â∞èÊó∂ÂÜÖÂà†Èô§ÔºåÊú¨‰∫∫‰∏çÂØπ‰ΩøÁî®ËøáÁ®ã‰∏≠Âá∫Áé∞ÁöÑ‰ªª‰ΩïÈóÆÈ¢òË¥üË¥£ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫é &lt;code&gt;Êï∞ÊçÆ‰∏¢Â§±&lt;/code&gt; &lt;code&gt;Êï∞ÊçÆÊ≥ÑÈú≤&lt;/code&gt;„ÄÇ&lt;/p&gt; 
&lt;p&gt;Ninja ‰ªÖÊîØÊåÅ qinglong 2.8.2+&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/joinchat/sHKuteb_lfdjNmZl&quot;&gt;TG È¢ëÈÅì&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ÁâπÊÄß&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Â±ÄÂüüÁΩëÊâ´Á†ÅÔºåË∑≥ËΩ¨ÁôªÂΩïÊ∑ªÂä†/Êõ¥Êñ∞ cookie&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Ê∑ªÂä†/Êõ¥Êñ∞ cookie ÂêéÂèëÈÄÅÈÄöÁü•&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Êâ´Á†ÅÂèëÈÄÅÈÄöÁü•ÂèØÂÖ≥Èó≠&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ÈªòËÆ§Â§áÊ≥®‰∏∫Ë¥¶Âè∑&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ÂèØ‰øÆÊîπÂ§áÊ≥®&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; wskeyÊúâÊïàÊÄßÊ£ÄÊµã&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ÁôªÂΩïÁïåÈù¢Â±ïÁ§∫Ëá™ÂÆö‰πâÊ†áËØ≠&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Github ActionËá™Âä®ÁºñËØë&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; WSKEYÂΩïÂÖ•&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÊñáÊ°£&lt;/h2&gt; 
&lt;h3&gt;ÂÆπÂô®ÂÜÖ&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;ÂÆπÂô®Êò†Â∞Ñ 5701 Á´ØÂè£Ôºåninja ÁõÆÂΩïËá≥ÂÆø‰∏ªÊú∫&lt;/p&gt; &lt;p&gt;‰æãÔºàdocker-composeÔºâÔºö&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;version: &quot;3&quot;
services:
  qinglong:
    image: whyour/qinglong:latest
    container_name: qinglong
    restart: unless-stopped
    tty: true
    ports:
      - 5700:5700
+      - 5701:5701
    environment:
      - ENABLE_HANGUP=true
      - ENABLE_WEB_PANEL=true
    volumes:
      - ./config:/ql/config
      - ./log:/ql/log
      - ./db:/ql/db
      - ./repo:/ql/repo
      - ./raw:/ql/raw
      - ./scripts:/ql/scripts
      - ./jbot:/ql/jbot
+      - ./ninja:/ql/ninja
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;‰æãÔºàdocker-runÔºâÔºö&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;docker run -dit \
  -v $PWD/ql/config:/ql/config \
  -v $PWD/ql/log:/ql/log \
  -v $PWD/ql/db:/ql/db \
  -v $PWD/ql/repo:/ql/repo \
  -v $PWD/ql/raw:/ql/raw \
  -v $PWD/ql/scripts:/ql/scripts \
  -v $PWD/ql/jbot:/ql/jbot \
+ -v $PWD/ql/ninja:/ql/ninja \
  -p 5700:5700 \
+ -p 5701:5701 \
  --name qinglong \
  --hostname qinglong \
  --restart unless-stopped \
  whyour/qinglong:latest
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ËøõÂÆπÂô®ÂÜÖÊâßË°å‰ª•‰∏ãÂëΩ‰ª§&lt;/p&gt; &lt;p&gt;&lt;strong&gt;ËøõÂÆπÂô®ÂÜÖÊâßË°å‰ª•‰∏ãÂëΩ‰ª§&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/Waikkii/waikiki_ninja.git /ql/ninja
cd /ql/ninja/backend
pnpm install
cp .env.example .env # Â¶ÇÊúâÈúÄË¶Å, ‰øÆÊîπ.env
pm2 start
cp sendNotify.js /ql/scripts/sendNotify.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Â∞Ü‰ª•‰∏ãÂÜÖÂÆπÁ≤òË¥¥Âà∞ &lt;code&gt;extra.sh&lt;/code&gt;ÔºàÈáçÂêØÂêéËá™Âä®Êõ¥Êñ∞Âπ∂ÂêØÂä® NinjaÔºâ&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /ql/ninja/backend
git checkout .
git pull
pnpm install
pm2 start
cp sendNotify.js /ql/scripts/sendNotify.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;ÂÆπÂô®Â§ñ&lt;/h3&gt; 
&lt;p&gt;Ê≠§ÁßçÊñπÂºèÈúÄË¶ÅÂÆø‰∏ªÊú∫ÂÆâË£Ö &lt;code&gt;node&lt;/code&gt; &lt;code&gt;pnpm&lt;/code&gt; Á≠âÁéØÂ¢ÉÔºå‰∏çÂÅöËøáÂ§ö‰ªãÁªç„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰ΩøÁî®Ê≠§ÁßçÊñπÊ≥ïÊó†Ê≥ïË∑üÈöèÈùíÈæô‰∏ÄËµ∑ÂêØÂä®Ôºå&lt;strong&gt;Êó†Ê≥ïÂèëÈÄÅÊâ´Á†ÅÈÄöÁü•&lt;/strong&gt;ÔºåËØ∑Áü•ÊÇâ„ÄÇ&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/Waikkii/waikiki_ninja.git
cd ninja/backend
pnpm install
# Â§çÂà∂ sendNotify.js Âà∞ÂÆπÂô®ÂÜÖ scripts ÁõÆÂΩïÔºå`qinglong` ‰∏∫ÂÆπÂô®Âêç
sudo docker cp sendNotify.js qinglong:/ql/scripts/sendNotify.js
cp .env.example .env
# ‰øÆÊîπenvÊñá‰ª∂
vi .env
node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Âú® &lt;code&gt;.env&lt;/code&gt; Êñá‰ª∂‰∏≠Ê∑ªÂä†‰ª•‰∏ãÂÜÖÂÆπÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;QL_DIR=qinglong ÂÆπÂô®ÁöÑÊú¨Âú∞Ë∑ØÂæÑ
QL_URL=http://localhost:5700
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;node app.js&lt;/code&gt; ÊÉ≥Ë¶ÅÂú®ÂêéÂè∞ËøêË°åÂèØ‰ª•‰ΩøÁî® &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;nohup&lt;/code&gt; &lt;code&gt;screen&lt;/code&gt; Á≠âÂëΩ‰ª§„ÄÇ&lt;/p&gt; 
&lt;h3&gt;Ninja ÁéØÂ¢ÉÂèòÈáè&lt;/h3&gt; 
&lt;p&gt;ÁõÆÂâçÊîØÊåÅÁöÑÁéØÂ¢ÉÂèòÈáèÊúâÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;SHOW_QR&lt;/code&gt;ÔºöÊòØÂê¶ÊòæÁ§∫Êâ´Á†ÅÂç°ÁâáÔºåÈªòËÆ§‰∏çÊòæÁ§∫&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SHOW_WSCK&lt;/code&gt;ÔºöÊòØÂê¶ÊòæÁ§∫WSCKÂΩïÂÖ•ÔºåÈªòËÆ§‰∏çÊòæÁ§∫&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SHOW_CK&lt;/code&gt;ÔºöÊòØÂê¶ÊòæÁ§∫CKÁôªÂΩïÔºåÈªòËÆ§‰∏çÊòæÁ§∫&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALLOW_WSCK_ADD&lt;/code&gt;ÔºöÊòØÂê¶ÂÖÅËÆ∏Ê∑ªÂä†WSCKË¥¶Âè∑ ‰∏çÂÖÅËÆ∏Ê∑ªÂä†Êó∂ÂàôÂè™ÂÖÅËÆ∏Â∑≤ÊúâË¥¶Âè∑ÁôªÂΩï&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALLOW_WSCK_NUM&lt;/code&gt;ÔºöÂÖÅËÆ∏Ê∑ªÂä†WSCKË¥¶Âè∑ÁöÑÊúÄÂ§ßÊï∞Èáè&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALLOW_ADD&lt;/code&gt;: ÊòØÂê¶ÂÖÅËÆ∏Ê∑ªÂä†Ë¥¶Âè∑ ‰∏çÂÖÅËÆ∏Ê∑ªÂä†Êó∂ÂàôÂè™ÂÖÅËÆ∏Â∑≤ÊúâË¥¶Âè∑ÁôªÂΩïÔºàÈªòËÆ§ &lt;code&gt;true&lt;/code&gt;Ôºâ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALLOW_NUM&lt;/code&gt;: ÂÖÅËÆ∏Ê∑ªÂä†Ë¥¶Âè∑ÁöÑÊúÄÂ§ßÊï∞ÈáèÔºàÈªòËÆ§ &lt;code&gt;45&lt;/code&gt;Ôºâ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NINJA_PORT&lt;/code&gt;: Ninja ËøêË°åÁ´ØÂè£ÔºàÈªòËÆ§ &lt;code&gt;5701&lt;/code&gt;Ôºâ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NINJA_NOTIFY&lt;/code&gt;: ÊòØÂê¶ÂºÄÂêØÈÄöÁü•ÂäüËÉΩÔºàÈªòËÆ§ &lt;code&gt;true&lt;/code&gt;Ôºâ&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NINJA_UA&lt;/code&gt;: Ëá™ÂÆö‰πâ UAÔºåÈªòËÆ§‰∏∫ÈöèÊú∫&lt;/li&gt; 
 &lt;li&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ÈÖçÁΩÆÊñπÂºèÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /ql/ninja/backend
cp .env.example .env
vi .env
pm2 start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;‰øÆÊîπÂÆåÊàêÂêéÈúÄË¶Å &lt;code&gt;pm2 start&lt;/code&gt; ÈáçÂêØÁîüÊïà ÔºÅÔºÅÔºÅ&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;SendNotify ÁéØÂ¢ÉÂèòÈáè&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Ê≠§ÁéØÂ¢ÉÂèòÈáèÂú®ÈùíÈæô‰∏≠ÈÖçÁΩÆÔºÅÔºÅÔºÅ&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;NOTIFY_SKIP_LIST&lt;/code&gt;: ÈÄöÁü•ÈªëÂêçÂçïÔºå‰ΩøÁî® &lt;code&gt;&amp;amp;&lt;/code&gt; ÂàÜÈöîÔºå‰æãÂ¶Ç &lt;code&gt;‰∏ú‰∏ú‰πêÂõ≠&amp;amp;‰∏ú‰∏úËêåÂÆ†&lt;/code&gt;;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ninja Ëá™ÂÆö‰πâ&lt;/h3&gt; 
&lt;p&gt;ÔºàÊú™ÂÆåÊàêÔºâËá™ÂÆö‰πâÊé®ÈÄÅ‰∫åÁª¥Á†ÅÔºöÂ∞Ü &lt;code&gt;push.jpg&lt;/code&gt; Êñá‰ª∂Ê∑ªÂä†Âà∞ &lt;code&gt;/ql/ninja/backend/static/&lt;/code&gt; ÁõÆÂΩï‰∏ãÂà∑Êñ∞ÁΩëÈ°µÂç≥ÂèØ„ÄÇ&lt;/p&gt; 
&lt;p&gt;Ëá™ÂÆö‰πâÂ∏∏ËßÅÊ¥ªÂä®Ôºö‰øÆÊîπ &lt;code&gt;/ql/backend/static/activity.json&lt;/code&gt; Âç≥ÂèØ&lt;/p&gt; 
&lt;h2&gt;Ê≥®ÊÑè‰∫ãÈ°π&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ÈáçÂêØÂêéÂä°ÂøÖÊâßË°å‰∏ÄÊ¨° &lt;code&gt;ql extra&lt;/code&gt; ‰øùËØÅ Ninja ÈÖçÁΩÆÊàêÂäü„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Êõ¥Êñ∞ Ninja Âè™ÈúÄË¶ÅÂú®&lt;strong&gt;ÂÆπÂô®&lt;/strong&gt;‰∏≠ &lt;code&gt;ninja/backend&lt;/code&gt; ÁõÆÂΩïÊâßË°å &lt;code&gt;git pull&lt;/code&gt; ÁÑ∂Âêé &lt;code&gt;pm2 start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Qinglong ÈúÄË¶ÅÂú®ÁôªÂΩïÁä∂ÊÄÅÔºà&lt;code&gt;auth.json&lt;/code&gt; ‰∏≠Êúâ tokenÔºâ&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Â¶Ç‰ΩïÊõ¥Êñ∞Ninja&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /ql/ninja
git checkout .
git pull
pm2 start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Â¶Ç‰ΩïÂà†Èô§Ninja&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /ql/ninja
pm2 delete ninja
rm -rf *
rm -r ./.*
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>yangshun/front-end-interview-handbook</title>
      <link>https://github.com/yangshun/front-end-interview-handbook</link>
      <description>&lt;p&gt;üï∏ No-bullshit answers to the famous h5bp &quot;Front-end Job Interview Questions&quot;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Front End Interview Handbook&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://dribbble.com/shots/4263961-Front-End-Interview-Scroll&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/assets/scroll.svg?sanitize=true&quot; alt=&quot;Front End Interview Handbook&quot; width=&quot;400&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;em&gt;Credits: &lt;a href=&quot;https://dribbble.com/shots/4263961-Front-End-Interview-Scroll&quot;&gt;Illustration&lt;/a&gt; by &lt;a href=&quot;https://dribbble.com/yangheng&quot;&gt;@yangheng&lt;/a&gt; &lt;/em&gt; &lt;/p&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://frontendinterviewhandbook.com&quot;&gt;Read on the website&lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;Unlike typical software engineer job interviews, front-end job interviews have less emphasis on algorithms and have more questions on intricate knowledge and expertise about the domain‚Ää‚Äî‚ÄäHTML, CSS, JavaScript, just to name a few areas.&lt;/p&gt; 
&lt;p&gt;While there are some existing resources to help front end developers in preparing for interviews, they aren&#39;t as abundant as materials for a software engineer interview. Among the existing resources, probably the most helpful question bank would be &lt;a href=&quot;https://github.com/h5bp/Front-end-Developer-Interview-Questions&quot;&gt;Front-end Developer Interview Questions&lt;/a&gt;. Unfortunately, I couldn&#39;t find many complete and satisfactory answers to these questions online, hence here is my attempt at answering them. Being an open source repository, the project can live on with the support of the community as the state of web evolves.&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;h3&gt;Go From Zero to Hero&lt;/h3&gt; 
&lt;p&gt;Go from zero to front end interview hero with this handbook. No prior interview experience needed.&lt;/p&gt; 
&lt;h3&gt;Back to Basics&lt;/h3&gt; 
&lt;p&gt;Learn to walk before you learn to fly. While React, Vue and Angular are cool, make sure you also know your fundamentals.&lt;/p&gt; 
&lt;h3&gt;Community Effort&lt;/h3&gt; 
&lt;p&gt;The best thing about Open Source is that the community vets the contents, so you can be sure the answers here have been proofread by many.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company for a front end role and is looking to make sure they don&#39;t stumble on the basic questions. To be frank, I revise the answers here from time to time as well!&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;Get paid more. Moonchaser has negotiated hundreds of tech offers. Get 1-1 guidance from their experienced team of ex-FAANG PMs, SWEs, and Recruiters. &lt;a href=&quot;https://www.moonchaser.io/?utm_source=techinterviewhandbook&amp;amp;utm_medium=referral&amp;amp;utm_content=frontend_github&quot; target=&quot;_blank&quot;&gt;Find out more&lt;/a&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;Looking for Generic Interview Preparation?&lt;/h2&gt; 
&lt;p&gt;You might be interested in the &lt;a href=&quot;https://techinterviewhandbook.org&quot;&gt;Tech Interview Handbook&lt;/a&gt; which has helpful content on general coding interviews such as algorithms, behavioral questions and an &lt;a href=&quot;https://techinterviewhandbook.org/cheatsheet&quot;&gt;interview cheatsheet&lt;/a&gt;!&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/assets/coding.svg?sanitize=true&quot; alt=&quot;Web Technologies illustration&quot; width=&quot;400&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;em&gt;Credits: Illustration by &lt;a href=&quot;https://undraw.co/&quot;&gt;unDraw&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/en/html-questions.md&quot;&gt;HTML Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/en/css-questions.md&quot;&gt;CSS Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/en/javascript-questions.md&quot;&gt;JavaScript Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/en/README.md&quot;&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/zh/README.md&quot;&gt;Chinese (Simplified) (ÁÆÄ‰Ωì‰∏≠Êñá)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/jp/README.md&quot;&gt;Japanese (Êó•Êú¨Ë™û)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/kr/README.md&quot;&gt;Korean (ÌïúÍµ≠Ïñ¥)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/pl/README.md&quot;&gt;Polish (Polski)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/pr/README.md&quot;&gt;Portuguese (Portugu√™s)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/ru/README.md&quot;&gt;Russian (–†—É—Å—Å–∫–∏–π)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/contents/tl/README.md&quot;&gt;Tagalog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It&#39;s meant for reference and studying purposes, not really for production use.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Contributing Guide&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to learn about how you can contribute, how to propose improvements or if you are interested in translating the content.&lt;/p&gt; 
&lt;h3&gt;Supporting&lt;/h3&gt; 
&lt;p&gt;Many hours of hard work have gone into this project. Your support will be very appreciated!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important;width: auto !important;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All projects and packages in this repository are &lt;a href=&quot;https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flybywiresim/a32nx</title>
      <link>https://github.com/flybywiresim/a32nx</link>
      <description>&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/flybywiresim/fbw-branding/master/svg/FBW-Logo.svg?sanitize=true&quot; placeholder=&quot;FlyByWire&quot; width=&quot;400&quot;&gt; 
&lt;h1&gt;FlyByWire Simulations A32NX&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub latest release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/UjzuHMU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/FlybywireSim&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-@FlyByWireSim-e84393?label=&amp;amp;logo=twitter&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/c/FlyByWire-Simulations&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-FlyByWireSimulations-e84393?label=&amp;amp;logo=youtube&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;YouTube&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.facebook.com/FlyByWireSimulations/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-FlyByWireSimulations-e84393?label=&amp;amp;logo=facebook&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Facebook&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://instagram.com/flybywiresim&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-@FlyByWireSim-e84393?label=&amp;amp;logo=instagram&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&quot; alt=&quot;Instagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible.&lt;/p&gt; 
&lt;p&gt;The following aircraft configuration is currently simulated:&lt;/p&gt; 
&lt;h3&gt;A320neo&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Model       A320-251N
Engine      CFM LEAP 1A-26
APU         APS3200
FMGS        Honeywell Release H3
FWC Std.    H2F9C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that this configuration may change in the future as the A32NX project evolves and changes.&lt;/p&gt; 
&lt;h2&gt;How to download and use the aircraft&lt;/h2&gt; 
&lt;p&gt;To download the aircraft please go to the &lt;a href=&quot;https://flybywiresim.com&quot;&gt;FlyByWire Simulations website&lt;/a&gt;. Please be sure to thoroughly read the &lt;a href=&quot;https://docs.flybywiresim.com&quot;&gt;documentation&lt;/a&gt; on how to install and use the aircraft.&lt;/p&gt; 
&lt;p&gt;If you&#39;re still running into problems after reading through the documentation, feel free to jump into our Discord &lt;a href=&quot;https://discord.gg/snueqJjDUN&quot;&gt;#support channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;If you would like to contribute to the project, see &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Known issues and bug reporting&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://docs.flybywiresim.com/start/reported-issues&quot;&gt;known issues&lt;/a&gt; list contains the most commonly reported issues. Should you have an issue not found on this list, then please take a look at the reported issues within the &lt;a href=&quot;https://github.com/flybywiresim/a32nx/issues&quot;&gt;issue tracker&lt;/a&gt; and report a new issue if your issue isn&#39;t found there. You can also use the issue tracker to request a new feature.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What liveries are available?&lt;/h3&gt; 
&lt;p&gt;Liveries for the A32NX can be found on &lt;a href=&quot;https://flightsim.to/c/liveries/flybywire-a32nx/&quot;&gt;Flightsim.to&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;When is the next update?&lt;/h3&gt; 
&lt;p&gt;We don&#39;t know, since it depends on many factors. We will announce each new stable version via &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;Discord&lt;/a&gt; and our social media channels listed above.&lt;/p&gt; 
&lt;h3&gt;How do I join the team?&lt;/h3&gt; 
&lt;p&gt;Read &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; 
&lt;h3&gt;Is the A32NX payware?&lt;/h3&gt; 
&lt;p&gt;No, it is a completely free aircraft, open-source.&lt;/p&gt; 
&lt;h3&gt;How do we report bugs?&lt;/h3&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#known-issues-and-bug-reporting&quot;&gt;known Issues and bug reporting&lt;/a&gt; section.&lt;/p&gt; 
&lt;h3&gt;Is this going to be &quot;study-level&quot;?&lt;/h3&gt; 
&lt;p&gt;While many in the team dislike the term &quot;study-level&quot; as its use is mostly applicable to certified training devices, we are in fact very dedicated on bringing a high fidelity A320neo to the Microsoft Flight Simulator platform.&lt;/p&gt; 
&lt;h3&gt;Is feature X from the A320neo going to be implemented?&lt;/h3&gt; 
&lt;p&gt;Chances are, yes! While we do not guarantee every single detail of the aircraft will eventually be represented, our goal is to produce an extremely accurate simulation based on technical data and real-world testing. This means you can be almost certain every feature of the aircraft will eventually be simulated to the best of the simulator&#39;s ability as long as the technical data backs it up.&lt;/p&gt; 
&lt;h3&gt;Why has feature X not been implemented yet?&lt;/h3&gt; 
&lt;p&gt;It&#39;s very likely that the feature you are awaiting is already under development! However, we strive for the greatest accuracy possible when producing aircraft, and it is therefore likely that a great deal of time will be spent on developing a proper software design and gathering sufficient references before we are able to offer the feature.&lt;/p&gt; 
&lt;h3&gt;Why is my version not the same as what I see others using?&lt;/h3&gt; 
&lt;p&gt;We have two mainline versions: stable and development. The stable version is a &#39;snapshot&#39; of the development which we regard as stable with the current version of the simulator. The developer build is updated daily and is a constant work in progress and although we test thoroughly each update, minor issues may occur from time to time.&lt;/p&gt; 
&lt;p&gt;You can read more about the differences between the versions we offer &lt;a href=&quot;https://docs.flybywiresim.com/fbw-a32nx/fbw-versions/&quot;&gt;on our documentation portal&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Is there a list of features or a changelog available?&lt;/h3&gt; 
&lt;p&gt;We do not keep a list of features implemented, but a lengthy &lt;a href=&quot;https://github.com/flybywiresim/a32nx/raw/master/.github/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt; of what has been implemented, and their associated &lt;a href=&quot;https://github.com/flybywiresim/a32nx/pulls&quot;&gt;pull requests&lt;/a&gt; can be &lt;a href=&quot;https://github.com/flybywiresim/a32nx/raw/master/.github/CHANGELOG.md&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Original source code assets present in this repository are licensed under the GNU GPLv3. Original 3D assets are licensed under CC BY-NC 4.0.&lt;/p&gt; 
&lt;p&gt;Microsoft Flight Simulator ¬© Microsoft Corporation. The FlyByWire Simulations A32NX was created under Microsoft&#39;s &quot;Game Content Usage Rules&quot; using assets from Microsoft Flight Simulator, and it is not endorsed by or affiliated with Microsoft.&lt;/p&gt; 
&lt;p&gt;The contents of distribution packages built from the sources in this repository are therefore licensed as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;in the case of original source code from FBW or compiled artifacts generated from it, under GPLv3.&lt;/li&gt; 
 &lt;li&gt;in the case of original 3D assets from FBW, under CC BY-NC 4.0.&lt;/li&gt; 
 &lt;li&gt;in the case of assets covered by the &quot;Game Content Usage Rules&quot;, under the license granted by those rules.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Superalgos/Superalgos</title>
      <link>https://github.com/Superalgos/Superalgos</link>
      <description>&lt;p&gt;Free, open-source crypto trading bot, automated bitcoin / cryptocurrency trading software, algorithmic trading bots. Visually design your crypto trading bot, leveraging an integrated charting system, data-mining, backtesting, paper trading, and multi-server crypto bot deployments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Superalgos Beta 11&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/contributors-anon/Superalgos/Superalgos?label=Contributors&quot; alt=&quot;contributors&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/issues-pr-closed-raw/Superalgos/Superalgos?color=blueviolet&quot; alt=&quot;pull-activity&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/last-commit/Superalgos/Superalgos/develop?label=last%20commit%20to%20develop&quot; alt=&quot;last-commit&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Bot%20Friendliness%20Level-119%25-yellow&quot; alt=&quot;bot-friendliness&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Superalgos is not just another open-source project. We are an open and welcoming community devised, nurtured, and incentivized with the project&#39;s native &lt;a href=&quot;https://superalgos.org/token-overview.shtml&quot; target=&quot;_blank&quot;&gt;Superalgos (SA) Token&lt;/a&gt; to build an &lt;a href=&quot;https://superalgos.org/&quot; target=&quot;_blank&quot;&gt;open trading intelligence network&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You will notice the difference as soon as you join the &lt;a href=&quot;https://t.me/superalgoscommunity&quot;&gt;Telegram Community Group&lt;/a&gt; or the new &lt;a href=&quot;https://discord.gg/CGeKC6WQQb&quot;&gt;Discord Server&lt;/a&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Can&#39;t wait to contribute? Start by giving a star to this repository in the top-right corner of this page!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/106380124-844d8980-63b0-11eb-9bd9-4f977b6c183b.gif&quot; alt=&quot;superalgos-readme&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started Guide&lt;/h1&gt; 
&lt;p&gt;All procedures are the same for Windows, Linux, or Mac OS. Raspberry Pi terminal commands have been included for ease of use.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Remote installations and minimalist hardware ‚Äî both virtual and physical ‚Äî are better suited for production deployments, where the use of the GUI is minimal. We highly recommend learning Superalgos in a local installation. Mastering the system takes time, and the use of the GUI to go through in-app tutorials is crucial during the learning process. Your experience will be orders of magnitude better if you follow this advice: leave remote installations and minimalist hardware for when you are ready to start trading live.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Pre-Requisites&lt;/h1&gt; 
&lt;h2&gt;1. Node JS Installation&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t have it yet, download and install Node.js.&lt;/p&gt; 
&lt;p&gt;Node JS is an open-source server environment required to run Superalgos.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; Go to the Node JS &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; Download your system&#39;s installer. Select &lt;em&gt;LTS Recommended for Most Users&lt;/em&gt; and click the big Windows or macOS Installer button. If you are on Linux, the installer is listed further down the page.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;C.&lt;/strong&gt; Run the installer with the default configuration ‚Äî just click Next until Node.JS is fully installed. That&#39;s it! You can continue with step 2 (Git Installation).&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;NODE JS INSTALLATION FOR RASPBERRY PI USERS&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may install Node.JS just like you would on any other machine as per the above instructions. As an alternative, you may also try the following from the SSH Terminal.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; It is best to use the most current and updated version of the FULL PiOS image.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Followed by:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install -y nodejs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is also required to install the Node Package Manager for dependancy management.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt install npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also type the following to verify Node.js and NPM installation and version.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;npm -v 
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h2&gt;2. Git Installation&lt;/h2&gt; 
&lt;p&gt;Download and install Git.&lt;/p&gt; 
&lt;p&gt;Git is an open-source distributed version control system required to download and stay up to date with Superalgos.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; Go to the Git &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; Download the version for your Operating System.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;C.&lt;/strong&gt; Run the installer with the default configuration ‚Äî just click Next until Git is fully installed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; The latest version of Git is required to handle the authentication with GitHub.com.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE FOR MAC USERS:&lt;/strong&gt; Depending on your setup, installing Git may be optional. The native XCode Command Line Developer Tools seems to work well. If you do install Git, we have tested Tim Harper&#39;s binary installer successfully.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;GIT INSTALLATION FOR RASPBERRY PI USERS&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Just like with Node.JS, you may follow the above instructions to install Git, or use the SSH Terminal command. The most recent version of PiOS has Git already installed, so this may give you an error. The error will not affect your installation.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h2&gt;3. Google Chrome or Safari&lt;/h2&gt; 
&lt;p&gt;Use Chrome, or Safari on Mac. These are the only tested browsers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; Go to the Chrome &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; Run the installer.&lt;/p&gt; 
&lt;p&gt;Before you begin, it is recommended that you set up Chrome/Safari as your default browser.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Use Chrome/Safari so that you have a similar environment as the dev team in case you need help. We are not testing on any other browsers, and it is a well-known fact that browsers behave differently.&lt;/p&gt; 
&lt;h1&gt;Superalgos Client Installation&lt;/h1&gt; 
&lt;h2&gt;1. Fork the Superalgos Repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; Scroll the page all the way to the top. Find and click the &lt;strong&gt;Fork&lt;/strong&gt; button to create your fork/copy of this repository. To fork Superalgos you need a Github account. If you don&#39;t have one, go ahead and create it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; A Fork is required for your contributions to the project. The reason why Superalgos is free and open-source is that the project has set up a &lt;a href=&quot;https://superalgos.org&quot; target=&quot;_blank&quot;&gt;collective business&lt;/a&gt; in which all users may participate. The way to participate is to &lt;a href=&quot;https://superalgos.org/community-contribute.shtml&quot; target=&quot;_blank&quot;&gt;contribute&lt;/a&gt; to make Superalgos better. The project&#39;s &lt;a href=&quot;https://superalgos.org/token-overview.shtml&quot; target=&quot;_blank&quot;&gt;token&lt;/a&gt; is distributed among contributors.&lt;/p&gt; 
&lt;h2&gt;2. Clone Your Fork&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; Once the fork is created, you will land on the page of your fork. Copy the URL from your browser&#39;s address bar.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; In your computer/laptop/server, open a command prompt or terminal. Make sure you are in a directory where you have write permissions (on most systems the terminal will open in your user&#39;s home directory, so you&#39;re good). Clone the git repository using the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone &amp;lt;URL of your Superalgos fork&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, if your Github username is John, the command will look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/John/Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This creates the &lt;code&gt;Superalgos&lt;/code&gt; folder in the current directory, which contains the whole installation.&lt;/p&gt; 
&lt;h2&gt;3. Install Node Dependencies&lt;/h2&gt; 
&lt;p&gt;After the Superalgos directory has been installed, the final step of installation is to set up the necessary node dependencies. In the same command prompt or terminal you just used, type the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That should take you inside the Superalgos folder created by the &lt;code&gt;git clone&lt;/code&gt; command earlier.&lt;/p&gt; 
&lt;p&gt;Now, you need to install dependencies, and there are two options:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; To install all basic dependencies run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then wait until you are able to type within the terminal again.&lt;/p&gt; 
&lt;p&gt;This command will install and configure all additional dependencies needed by Superalgos. It will also install desktop and start menu shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; If you intend to use the experimental implementation of the TensorFlow Project within Superalgos, then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node setup tensorflow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command will install all dependencies plus TensorFlow dependencies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE FOR WINDOWS USERS INSTALLING TENSORFLOW DEPENDENCIES:&lt;/strong&gt; You may get an error at the end of the set up process. If you do, please follow the instructions following the error message.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE FOR USERS INSTALLING MULTIPLE INSTANCES OF SUPERALGOS ON THE SAME MACHINE:&lt;/strong&gt; In order to avoid name conflicts between shortcuts, make sure to rename each Superalgos directory before running &lt;code&gt;node setup&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Congratulations your installation is complete!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;The Usage section below explains how to run the app.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;DEPENDENCY INSTALLATION FOR RASPBERRY PI USERS&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;As noted above, running &lt;code&gt;node setup&lt;/code&gt; installs GUI shortcuts by default. To suppress this behavior in headless installations, add the &lt;code&gt;noShortcuts&lt;/code&gt; flag as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node setup noShortcuts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, if you wish to try the TensorFlow implementation,...&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node setup tensorflow noShortcuts
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting Dependency Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you are having difficulty running the node setup command here are a few common issues that may be getting in the way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Check the version of node and npm you have installed. Make sure that you are running an updated version of node greater than version 12 and npm greater than version 5. You can check which version you have by typing &lt;code&gt;node -v&lt;/code&gt; and &lt;code&gt;npm -v&lt;/code&gt; into a command prompt or terminal. If your version numbers are below these, you can update your installation by following the instructions outlined in the &quot;Node JS Installation&quot; step above.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; If you are installing Superalgos in an administratively protected directory you will need to do one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;For Windows start your command prompt as an administrator.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For Linux and Mac Systems make sure to add the sudo command to node setup. This will look like &lt;code&gt;sudo node setup&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; For Windows it is important that you have C:\Windows\System32 added to your global PATH. For instructions on how to do this google &quot;add to the path on Windows 10.&quot;&lt;/p&gt; 
&lt;h2&gt;4. Installation Notes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; You need to make a fork so that you may contribute work. Superalgos is a Community project and you are expected to contribute, like everyone else. You don&#39;t need to be a technical person to contribute. Fixing a typo in the docs or translating a paragraph into your native language are valuable contributions too. Superalgos has built-in features that make contributing easy. Help make Superalgos better and Superalgos will better serve you! Free-riding is not cool, particularly on free, open-source, Community-driven projects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; The software includes an in-app self-update command / feature. It will help you stay up-to-date with the latest version of the software. Updates are on-demand, so don&#39;t worry about undesired updates. The project moves very fast and new features become available regularly, particularly if you choose to run the software in the &lt;code&gt;develop&lt;/code&gt; branch (you may switch branches from within the app).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;C.&lt;/strong&gt; It is a good idea to perodically run the &lt;code&gt;node setup&lt;/code&gt; command to keep the underlying dependencies for your Superalgos installation up to date.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D.&lt;/strong&gt; Before installing the client on a remote computer in an attempt to access the UI from a different machine, we highly recommend you do a standard installation on your PC / laptop first. Leave your Raspberry Pi or VPS for later, once you have done all available tutorials. This single tip will save you a lot of time: you don&#39;t need to add complexity before you learn how to handle the app, and the GUI performs best in a local installation.&lt;/p&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;h2&gt;1. Run the Client and GUI&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; To run Superalgos, go to the Superalgos directory/folder and run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node platform
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Client will run on your terminal and the GUI will launch on your default browser. If Chrome/Safari is not your default browser, copy the URL, close the browser, open Chrome/Safari, and paste the URL. Be patient... it takes a few seconds to fully load the GUI.&lt;/p&gt; 
&lt;p&gt;A Welcome Tutorial pops-up automatically. You must do this Tutorial to finish the setup and to learn the basics. It&#39;s the ultimate onboarding experience, superior to all other resources available, including videos and the Docs.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/107037804-e5fc6200-67bb-11eb-82f2-d0f40247fa14.gif&quot; alt=&quot;run-the-system-01&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you are running a headless Raspberry Pi (one without a screen) you may need to change directories first and run Superalgos with the &lt;code&gt;minMemo&lt;/code&gt; and &lt;code&gt;noBrowser&lt;/code&gt; options.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node platform  minMemo noBrowser
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition, you may use any of the automatically installed desktop and start menu shortcuts to launch Superalgos.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Shortcuts are not currently supported on Mac. Collaborators are needed to finish this feature.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; Enable Desktop Shortcut on Ubuntu&lt;/p&gt; 
&lt;p&gt;The majority of shortcuts that are automatically installed will work out of the box. Desktop shortcuts on Ubuntu, however, require a few additional steps to set up.&lt;/p&gt; 
&lt;p&gt;First, desktop icons need to be enabled within the Tweaks app.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check if Tweaks is installed.&lt;/li&gt; 
 &lt;li&gt;If not go to Ubuntu Software.&lt;/li&gt; 
 &lt;li&gt;Install Tweaks.&lt;/li&gt; 
 &lt;li&gt;Open Tweaks.&lt;/li&gt; 
 &lt;li&gt;Under extensions turn on Desktop Icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/55707292/117553927-f0780300-b019-11eb-9e36-46b509653283.gif&quot; alt=&quot;enable-ubuntu-shortcut&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; If you do not see the desktop shortcut appear right away you may need to restart your computer.&lt;/p&gt; 
&lt;p&gt;Finally, you will need to enable the desktop shortcut.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Right click Superalgos.desktop and select Allow Launching.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/55707292/117553933-fcfc5b80-b019-11eb-872c-4fad81b184d2.gif&quot; alt=&quot;allow-launching&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Now both launcher and desktop shortcuts will launch Superalgos like any other program on your computer.&lt;/p&gt; 
&lt;h2&gt;3. Usage Notes&lt;/h2&gt; 
&lt;p&gt;We are testing the UI on Google Chrome and Safari on macOS only. It may work on other browsers as well ‚Äî or not. If you are running on a different browser and ever need support, make sure you mention that fact upfront, or even better, try on Chrome/Safari first.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; If your computer has 8 GB of RAM or less, use &lt;code&gt;node platform minMemo&lt;/code&gt; to run the system with minimal RAM requirements.&lt;/p&gt; 
&lt;h1&gt;Running Superalgos on a Headless Linux Server as a Daemon&lt;/h1&gt; 
&lt;p&gt;If you&#39;re running Superalgos on a headless linux server like a Raspberry Pi, you might want to run it as a daemon so it isn&#39;t attached to your current login session. The easiest, most standard way to go about this is probably using &lt;code&gt;systemd&lt;/code&gt;. Most linux distributions use it as default init system/service manager.&lt;/p&gt; 
&lt;h2&gt;Using &lt;code&gt;systemd&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Create a &lt;code&gt;superalgos.service&lt;/code&gt; file looking like this (change &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; to your user name and &lt;code&gt;/path/to/Superalgos&lt;/code&gt; to your Superalgos folder, for instance &lt;code&gt;/home/John/Superalgos&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[Unit]
Description=Superalgos client

[Service]
Type=simple
User=&amp;lt;user&amp;gt;
WorkingDirectory=/path/to/Superalgos
ExecStart=/usr/bin/node platform minMemo noBrowser

[Install]
WantedBy=multi-user.target

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is no need to run Superalgos as root so we&#39;re running it as a user. The &lt;code&gt;minMemo&lt;/code&gt; option assumes you&#39;re running on a small machine like a Raspberry Pi, while &lt;code&gt;noBrowser&lt;/code&gt; makes sense for running daemonized.&lt;/p&gt; 
&lt;p&gt;Now, as root (or using &lt;code&gt;sudo&lt;/code&gt;), put the file &lt;code&gt;superalgos.service&lt;/code&gt; you just created in &lt;code&gt;/etc/systemd/system/&lt;/code&gt; and issue the command&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;systemctl enable superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will install the service so that Superalgos is started on boot. To start it manually, do (again as root or with &lt;code&gt;sudo&lt;/code&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;systemctl start superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see the output of Superalgos, use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;journalctl -u superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or to follow the output,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;journalctl -u superalgos -f
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Uninstall&lt;/h1&gt; 
&lt;p&gt;Superalgos writes nothing outside of the &lt;code&gt;Superalgos&lt;/code&gt; folder other than shortcut files. To uninstall the software, follow these steps:&lt;/p&gt; 
&lt;p&gt;Open a terminal or command prompt and navigate to your main Superalgos directory and type the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node uninstall
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will remove any shortcut files that have been installed.&lt;/p&gt; 
&lt;p&gt;Then simply delete the &lt;code&gt;Superalgos&lt;/code&gt; folder. There will be nothing left on your computor.&lt;/p&gt; 
&lt;h1&gt;Welcome Tutorial&lt;/h1&gt; 
&lt;p&gt;Once the app finishes loading, an interactive tutorial takes you by the hand and walks you all around the system while you learn the basic skills required to use the interface, mine data, backtest strategies, and even run a live trading session. It is highly recommended you follow the tutorial until the end, as it is carefully crafted to make your onboarding as easy as possible. Tutorials are the absolute best way to tackle the learning curve. You should do all tutorials before you start exploring other avenues on your own.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/107038771-4a6bf100-67bd-11eb-92e0-353525a972a9.gif&quot; alt=&quot;welcome-tutorial-00&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The tutorial uses Binance or Binance US as the exchange of choice. If you don&#39;t have an account with Binance or Binance US, you will still be able to follow 100% of the tutorial. When you get to the live trading section, keep going even if you don&#39;t intend to run the session. You may learn how to work with other exchanges later on.&lt;/p&gt; 
&lt;h1&gt;Docker Deployments&lt;/h1&gt; 
&lt;p&gt;Docker container images can be found at &lt;a href=&quot;https://github.com/users/Superalgos/packages/container/package/superalgos&quot;&gt;https://github.com/users/Superalgos/packages/container/package/superalgos&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you wish to run Superalgos over docker platform, follow these steps.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This has not been extensively tested yet. If you run into troubles, please contact us at the &lt;a href=&quot;https://t.me/superalgossupport&quot;&gt;Superalgos Support Group&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;1. Install Docker&lt;/h2&gt; 
&lt;p&gt;Follow the link to &lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;install docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;2. Run&lt;/h2&gt; 
&lt;h3&gt;Option A. Using pre-built container&lt;/h3&gt; 
&lt;p&gt;You will need to create local storage directories beforehand, by example with &lt;code&gt;mkdir Data-Storage Log-Files My-Workspaces&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run \
  -d \
  --rm \
  --name superalgos \
  -p 18041:18041 \
  -p 34248:34248 \
  -v $(pwd)/Data-Storage:/app/Data-Storage \
  -v $(pwd)/Log-Files:/app/Log-Files \
  -v $(pwd)/My-Workspaces:/app/My-Workspaces \
  ghcr.io/superalgos/superalgos:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can access the Superalgos UI at &lt;a href=&quot;http://127.0.0.1:34248&quot;&gt;http://127.0.0.1:34248&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To see console logs you can use &lt;code&gt;docker logs superalgos -f&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;When you&#39;re done just exec &lt;code&gt;docker kill superalgos&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Option B. Build container locally using docker-compose&lt;/h3&gt; 
&lt;p&gt;Follow the link to &lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;install docker-compose&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;docker-compose -f Docker/docker-compose.yml up&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Configure the Container Environment&lt;/h2&gt; 
&lt;h3&gt;Available image tags&lt;/h3&gt; 
&lt;p&gt;To avoid breaking changes, the &lt;code&gt;shasum hash&lt;/code&gt; and the &lt;code&gt;release&lt;/code&gt; tags are the best to use. These will generally ensure you are always running the same code. The other tags will change which code they are pointing to more frequently and without notice.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;latest&lt;/code&gt; : the absolute latest build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;master&lt;/code&gt; : the latest master branch build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; : the latest develop branch build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;shasum hash&amp;gt;&lt;/code&gt; : a specific git commit hash&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;release&amp;gt;&lt;/code&gt; : corresponds with a Github Release (git tag), i.e. &lt;code&gt;beta-10&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Environment variables&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;PUID&lt;/code&gt; and &lt;code&gt;GUID&lt;/code&gt; environment variables can be used to help avoid permissions issues in the mounted volumes between the container environment and the local OS environment. The default &lt;code&gt;PUID&lt;/code&gt; and &lt;code&gt;GUID&lt;/code&gt; is &lt;code&gt;1000&lt;/code&gt;. You can view the current user&#39;s PUID and GUID with the &lt;code&gt;id&lt;/code&gt; command.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;Some users have reported the Docker installation was not working, and the root cause was that the ad blocker was blocking the scripts to run.&lt;/p&gt; 
&lt;h1&gt;Superalgos is User-centric&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;No ads, anywhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;No sign-up / logins.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;No user/usage data collection of any kind.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;No user trading information collected or sold.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Runs 100% on uncompiled code anyone can read and audit.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Superalgos Development Pipeline&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Superalgos P2P Network:&lt;/strong&gt; Will allow the project to distribute trading intelligence produced by algo-traders.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Trading Signals:&lt;/strong&gt; Will allow providers to broadcast trading signals and be rewarded with SA Tokens.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Superalgos Mobile:&lt;/strong&gt; Will allow users to consume trading signals for free and autonomously execute trades from their mobile phones.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ethereum Integration:&lt;/strong&gt; Will allow mining data from an Ethereum network node, and bring it into the Superalgos workflow.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;What is the Superalgos Platform?&lt;/h1&gt; 
&lt;p&gt;Superalgos Platform is a set of tools to automate crypto-trading. It is implemented as a Node JS Client + Web App that runs on your hardware and scales from a single Raspberry Pi to a Trading Farm. The Platform is fully functional and has been used for trading live since 2020.&lt;/p&gt; 
&lt;p&gt;At Beta 12, trading signals will be able to be sent to the Suerpalgos Network from the Superalgos Platform.&lt;/p&gt; 
&lt;h2&gt;Superalgos Platform Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Visual Scripting Designer.&lt;/li&gt; 
 &lt;li&gt;Integrated Charting System.&lt;/li&gt; 
 &lt;li&gt;A Visual Strategy Debugger.&lt;/li&gt; 
 &lt;li&gt;Data Mining Tools.&lt;/li&gt; 
 &lt;li&gt;Coordinated Task Management across a Trading Farm.&lt;/li&gt; 
 &lt;li&gt;Community-built strategies to learn and start from.&lt;/li&gt; 
 &lt;li&gt;TensorFlow Machine Learning integration.&lt;/li&gt; 
 &lt;li&gt;In-App Tutorials.&lt;/li&gt; 
 &lt;li&gt;Complete In-App Documentation.&lt;/li&gt; 
 &lt;li&gt;SA Token / Project Governance System.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Platform Allows You To...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visually design your trading strategies.&lt;/li&gt; 
 &lt;li&gt;Visually debug your trading strategies.&lt;/li&gt; 
 &lt;li&gt;Visually design your indicators.&lt;/li&gt; 
 &lt;li&gt;Visually design your plotters to visualize indicators or mined data.&lt;/li&gt; 
 &lt;li&gt;Visually design your data-mining operations.&lt;/li&gt; 
 &lt;li&gt;Download historical market data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;Backtest your strategies against historical data.&lt;/li&gt; 
 &lt;li&gt;Run live trading sessions.&lt;/li&gt; 
 &lt;li&gt;Run arbitrary data-mining operations of any size.&lt;/li&gt; 
 &lt;li&gt;Feed your trading strategies with the data mined.&lt;/li&gt; 
 &lt;li&gt;Use your token holdings to vote and influence the direction of the project development.&lt;/li&gt; 
 &lt;li&gt;Produce real-time trading signals and send them via the p2p network. (under development)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Superalgos Platform for Developers&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;You may use Superalgos as a platform or as a component of a larger system.&lt;/li&gt; 
 &lt;li&gt;No proprietary code/libraries. All open-source and free.&lt;/li&gt; 
 &lt;li&gt;Superalgos features a library of community-contributed plugins (workspaces, strategies, indicators, plotters, tutorials, etc.).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Platform Saves You Time&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No need to code the download of historical data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;No need to code the streaming of market data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;No need to hardcode strategies. Use the visual designer for a more flexible approach.&lt;/li&gt; 
 &lt;li&gt;No need to debug what went wrong, line by line, or dive into log files with tons of data. You can see each variable of the state of the Trading Engine at every candle by hovering the mouse over the charts.&lt;/li&gt; 
 &lt;li&gt;No need to integrate a charting library, Superalgos features an integrated Charting System.&lt;/li&gt; 
 &lt;li&gt;No need to manage task data or execution dependencies. Superalgos allows you to define Tasks and distribute them across a Trading Farm and takes care of the data and execution dependencies so that each task automatically starts when their dependencies are ready.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Platform is Permissionless&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Don&#39;t like the UI?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the icons used?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Charting System?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Visual Designer?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Visual Debugger?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Docs?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Trading Bot?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Indicators?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Plotters?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like any other part of the system?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No problem, code or integrate libraries with your own version of any component and we promise we will merge your work and provide it as an alternative to users. We believe in Permissionless Innovation and that users, not team members, are the final judges and the ones who decide what they prefer to use. You are free to create an alternative for any part of the system that you believe that should work or should have been done in a different way. We will help you integrate your vision into the next release and enable a way for users to choose between different implementations of the same functionality. You will also be granted the title of maintainer of the functionality you provide and have decision power on how it evolves in the future.&lt;/p&gt; 
&lt;h1&gt;Superalgos Platform for Algo-Trders&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Superalgos is easy to install/uninstall.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to run.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to use.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to learn.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to debug.&lt;/li&gt; 
 &lt;li&gt;Superalgos is well documented.&lt;/li&gt; 
 &lt;li&gt;You have free online support via Telegram and Discord.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Platform Saves You Money&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;There are no paid plans or anything that costs you money.&lt;/li&gt; 
 &lt;li&gt;There is no locked functionality. You may use the full capacity of the software.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of backtests you may run.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of live sessions you may run.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of historical data you may download.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the volume of data you may process.&lt;/li&gt; 
 &lt;li&gt;You may use all the plugins available (indicators, plotters, strategies, etc.)&lt;/li&gt; 
 &lt;li&gt;You may install Superalgos in as many machines as you wish.&lt;/li&gt; 
 &lt;li&gt;Your installations may be used by as many people as required.&lt;/li&gt; 
 &lt;li&gt;You may connect to as many crypto exchanges as you wish.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Platform Minimizes Risks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No one can know what strategies you design/run.&lt;/li&gt; 
 &lt;li&gt;No one can front-run you.&lt;/li&gt; 
 &lt;li&gt;No one can steal your trading ideas.&lt;/li&gt; 
 &lt;li&gt;No one knows how much capital you trade.&lt;/li&gt; 
 &lt;li&gt;No one can see your exchange keys.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Superalgos Platform for Companies&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;No need to buy expensive software for monitoring crypto markets or trading execution.&lt;/li&gt; 
 &lt;li&gt;No need to hire your own developers.&lt;/li&gt; 
 &lt;li&gt;All your employees can use Superalgos for free.&lt;/li&gt; 
 &lt;li&gt;You can use Superalgos to its full capacity or just the features you are currently interested in.&lt;/li&gt; 
 &lt;li&gt;Superalgos may be integrated into your existing operation, feeding to and from other systems.&lt;/li&gt; 
 &lt;li&gt;You&#39;ve got a growing community of algo-traders constantly improving the software at zero cost for you.&lt;/li&gt; 
 &lt;li&gt;You&#39;ve got free online customer support via Telegram or Discord.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Support&lt;/h1&gt; 
&lt;p&gt;We just opened a brand new &lt;a href=&quot;https://discord.gg/CGeKC6WQQb&quot;&gt;Discord server for Support and the Community&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We also meet on several Telegram groups, where it all started!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;BEWARE OF IMPERSONATORS ‚Äî SCAMMERS ARE LURKING!&lt;/strong&gt; Superalgos Admins, the Core Team, and Community Mods will never contact you directly unless you contact them first. We will never ask you for API keys, coins, or cash. In fact, we will never ask you to trust us in any way. Our &lt;a href=&quot;https://superalgos.org/community-safety-policy.shtml&quot;&gt;Community Safety Policy&lt;/a&gt; explains why. In short, we want to make it clear that if someone contacts you directly claiming to work with or for the project, it is a scam. Please report scammers in the Community group so that they may be banned, and to increase awareness of the problem, but also block them and report them to Telegram if the option is available.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Via Telegram&lt;/h2&gt; 
&lt;p&gt;Online support through our &lt;a href=&quot;https://t.me/superalgossupport&quot;&gt;Superalgos User&#39;s Support Group&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;In-App Integrated Documentation&lt;/h2&gt; 
&lt;p&gt;Superalgos features interactive documentation built-in the system.&lt;/p&gt; 
&lt;h2&gt;Video Tutorials&lt;/h2&gt; 
&lt;p&gt;Subscribe to the &lt;a href=&quot;https://www.youtube.com/channel/UCmYSGbB151xFQPNxj7KfKBg&quot;&gt;Superalgos YouTube Channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;In-App Tutorials&lt;/h2&gt; 
&lt;p&gt;There are many interactive tutorials you may do and learn from.&lt;/p&gt; 
&lt;h1&gt;Other Resources&lt;/h1&gt; 
&lt;h2&gt;Web Site&lt;/h2&gt; 
&lt;p&gt;For an overview of what Superalgos can do for you, check the &lt;a href=&quot;https://superalgos.org/&quot;&gt;Superalgos Website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Telegram&lt;/h2&gt; 
&lt;p&gt;For official news, join the &lt;a href=&quot;https://t.me/superalgos&quot;&gt;Superalgos Announcements Channel&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Meet other users in the &lt;a href=&quot;https://t.me/superalgoscommunity&quot;&gt;Superalgos Telegram Community Group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Meet developers in the &lt;a href=&quot;https://t.me/superalgosdevelop&quot;&gt;Superalgos Telegram Developer&#39;s Group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Users meet in other topic-specific Telegram Groups. There&#39;s a &lt;a href=&quot;https://superalgos.org/community-join.shtml&quot;&gt;complete list of groups&lt;/a&gt; on the website.&lt;/p&gt; 
&lt;h2&gt;Blog&lt;/h2&gt; 
&lt;p&gt;Find official announcements and various articles on the &lt;a href=&quot;https://medium.com/superalgos&quot;&gt;Superalgos Blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Twitter&lt;/h2&gt; 
&lt;p&gt;To stay in the loop, follow &lt;a href=&quot;https://twitter.com/superalgos&quot;&gt;Superalgos on Twitter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Facebook&lt;/h2&gt; 
&lt;p&gt;Or follow &lt;a href=&quot;https://www.facebook.com/superalgos&quot;&gt;Superalgos on Facebook&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Superalgos is a Community Project built by users for users. Learn &lt;a href=&quot;https://superalgos.org/community-contribute.shtml&quot;&gt;how you may contribute&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Superalgos is open-source software released under &lt;a href=&quot;https://raw.githubusercontent.com/Superalgos/Superalgos/master/LICENSE&quot;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mmazzarolo/react-native-universal-monorepo</title>
      <link>https://github.com/mmazzarolo/react-native-universal-monorepo</link>
      <description>&lt;p&gt;React Native boilerplate supporting multiple platforms: Android, iOS, macOS, Windows, web, browser extensions, Electron.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Native Universal Monorepo (üöß WIP)&lt;/h1&gt; 
&lt;p&gt;A React Native monorepo boilerplate supporting multiple platforms: Android, iOS, macOS, Windows, web, browser extension, Electron.&lt;/p&gt; 
&lt;p&gt;üëâ Check out &lt;strong&gt;&lt;a href=&quot;https://mmazzarolo.com/blog/2021-09-11-running-react-native-everywhere/&quot;&gt;Running React Native everywhere&lt;/a&gt;&lt;/strong&gt; for an in-depth guide on how and why I recommend trying out this approach if you&#39;re planning to support multiple platforms in your app.&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p align=&quot;center&quot; margin-bottom=&quot;0&quot;&gt; &lt;img width=&quot;820&quot; height=&quot;auto&quot; src=&quot;https://raw.githubusercontent.com/mmazzarolo/react-native-universal-monorepo/master/.github/images/all-screenshot.png&quot;&gt; &lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This monorepo uses &lt;a href=&quot;https://classic.yarnpkg.com/en/docs/workspaces/&quot;&gt;Yarn workspaces&lt;/a&gt; and &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; to support a modular React Native project.&lt;/p&gt; 
&lt;p&gt;To reduce redundancy, most package managers employ some kind of hoisting scheme to extract and flatten all dependent modules, as much as possible, into a centralized location.&lt;br&gt; Yarn workspaces store the flattened dependencies in a &lt;code&gt;node_modules&lt;/code&gt; directory in the project root and makes it accessible to the workspace packages by symlinking the libraries in the packages&#39; &lt;code&gt;node_module&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;While it might appear that we can access all modules from the project‚Äôs root &lt;code&gt;node_modules&lt;/code&gt;, the reality is that build processes sometimes aren&#39;t able to traverse symlinks.&lt;br&gt; This problem is especially prominent in React Native apps, where both the &lt;a href=&quot;https://github.com/facebook/metro/issues/1&quot;&gt;metro bundler&lt;/a&gt; and the native code can&#39;t follow symlinks.&lt;/p&gt; 
&lt;p&gt;A common way to solve this issue in React Native monorepos, is to configure the metro bundler and the native layer to use the project&#39;s root &lt;code&gt;node_modules&lt;/code&gt; directory instead of the package&#39;s one.&lt;br&gt; While this approach ensures you gain all the benefits of the hoisting process, it introduces a few complexities:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Each time you update React Native (or a library that requires native linking), you must also update (or at least keep in sync) the native code with the root project&#39;s &lt;code&gt;node_modules&lt;/code&gt; directory. To me, this process have always seemed error prone, because you&#39;re dealing with multiple languages and build-tools.&lt;/li&gt; 
 &lt;li&gt;Suppose your packages need different versions of React Native (or of a library that requires native linking). In that case, you can&#39;t easily ensure it will be installed in a specific location (unless you give up the hoisting mechanism) ‚Äî adding even more complexities to the table.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For these reasons, React Native Universal Monorepo uses a different approach, fully embracing &lt;a href=&quot;https://classic.yarnpkg.com/blog/2018/02/15/nohoist/&quot;&gt;Yarn&#39;s &lt;code&gt;nohoist&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Of course, this comes with drawbacks. The most obvious one is that nohoist modules could be duplicated in multiple locations, denying the benefit of hoisting mentioned above. Therefore, we&#39;ll keep &lt;code&gt;nohoist&lt;/code&gt; scope as small and explicit as possible, targeting only problematic libraries.&lt;/p&gt; 
&lt;p&gt;Thanks to nohoist, we can avoid making changes to the native code, and we can keep the monorepo configuration in the JavaScript land. This means we can even &lt;a href=&quot;https://github.com/mmazzarolo/react-native-universal-monorepo/tree/master/packages/build-tools/src&quot;&gt;extract common metro and webpack settings in a workspace package&lt;/a&gt; to share them easily across the entire project.&lt;/p&gt; 
&lt;p&gt;Additionally, different platforms can use different versions of React Native (and native libraries), favoring incremental updates instead of migrating the entire project.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Please notice that I&#39;m not saying that this is the &lt;em&gt;right&lt;/em&gt; way to do React Native monorepos. It&#39;s just an approach that I enjoy using.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Supported platforms&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Android (React-Native 0.65)&lt;/li&gt; 
 &lt;li&gt;iOS (React-Native 0.65)&lt;/li&gt; 
 &lt;li&gt;Windows (React-Native 0.65)&lt;/li&gt; 
 &lt;li&gt;MacOS (React-Native 0.63)&lt;/li&gt; 
 &lt;li&gt;Web (React-Native 0.65)&lt;/li&gt; 
 &lt;li&gt;Web - Browser Extension (React-Native 0.65)&lt;/li&gt; 
 &lt;li&gt;Web - Electron (React-Native 0.65)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository: &lt;code&gt;git@github.com:mmazzarolo/react-native-universal-monorepo.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run yarn install &lt;code&gt;cd react-native-universal-monorepo &amp;amp;&amp;amp; yarn&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üöß I&#39;m working on a blog post to explain how to get to this monorepo structure from scratch: &lt;strong&gt;&lt;a href=&quot;https://mmazzarolo.com/blog/2021-09-11-running-react-native-everywhere/&quot;&gt;Running React Native everywhere&lt;/a&gt;&lt;/strong&gt; It&#39;s still a WIP. In the meanwhile, if you&#39;re interested, please check the following guides:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://mmazzarolo.com/blog/2020-10-24-adding-react-native-web/&quot;&gt;Run your React Native app on the web with React Native for Web &lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://mmazzarolo.com/blog/2021-08-12-building-an-electron-application-using-create-react-app/&quot;&gt;Building a desktop application using Electron and Create React App&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://mmazzarolo.com/blog/2019-10-19-browser-extension-development/&quot;&gt;Developing a browser extension with Create React App&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Available commands&lt;/h2&gt; 
&lt;p&gt;Development and build commands:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn android:metro&lt;/code&gt;: Start the metro server for android/iOS&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn android:start&lt;/code&gt;: Start developing the android app&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn android:studio&lt;/code&gt;: Open the android app on android Studio&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn ios:metro&lt;/code&gt;: Start the metro server for android/iOS&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn ios:start&lt;/code&gt;: Start developing the iOS app&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn ios:pods&lt;/code&gt;: Install iOS cocoapods dependencies&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn ios:xcode&lt;/code&gt;: Open the iOS app on XCode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn macos:metro&lt;/code&gt;: Start the metro server for macOS&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn macos:start&lt;/code&gt;: Start developing the macOS app&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn macos:pods&lt;/code&gt;: Install macOS cocoapods dependencies&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn macos:xcode&lt;/code&gt;: Open the macOS app on XCode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn web:start&lt;/code&gt;: Start developing the web app&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn web:build&lt;/code&gt;: Create a production build of the web app&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn electron:start&lt;/code&gt;: Start developing the electron app&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn electron&lt;span&gt;üì¶&lt;/span&gt;mac&lt;/code&gt;: Package the production binary of the electron app for macOS&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn electron&lt;span&gt;üì¶&lt;/span&gt;win&lt;/code&gt;: Package the production binary of the electron app for windows&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn electron&lt;span&gt;üì¶&lt;/span&gt;linux&lt;/code&gt;: Package the production binary of the electron app for linux&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn browser-ext:start&lt;/code&gt;: Start developing the browser extension&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn browser-ext:build&lt;/code&gt;: Create a production build of the browser extension&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn windows:metro&lt;/code&gt;: Start the metro server for windows&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn windows:start&lt;/code&gt;: Start developing the windows app&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other commands (we use &lt;a href=&quot;https://github.com/folke/ultra-runner&quot;&gt;ultra-runner&lt;/a&gt; to run these commands on all workspaces):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn lint&lt;/code&gt;: Lint each project&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn lint:fix&lt;/code&gt;: Lint + fix each project&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn test&lt;/code&gt;: Run tests of each project&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn typecheck&lt;/code&gt;: Run the TypeScript type-checking on each project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Native dependencies&lt;/h2&gt; 
&lt;p&gt;While working on React Native in a monorepo, you&#39;ll notice that several packages won&#39;t work correctly when hoisted ‚Äî either because they need to be natively linked or because they end up being bundled twice, breaking the build (e.g., &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react-dom&lt;/code&gt;).&lt;br&gt; This is not an issue with the approach used in this project per se. It&#39;s more of a common problem with monorepos.&lt;/p&gt; 
&lt;p&gt;To fix these issues, &lt;a href=&quot;https://classic.yarnpkg.com/blog/2018/02/15/nohoist/&quot;&gt;we mark them as nohoist&lt;/a&gt;, so they will be installed in each package that depends on them.&lt;/p&gt; 
&lt;p&gt;In this monorepo, you can see an example of such libraries in &lt;code&gt;react-native-async-storage&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In the metro bundler and Webpack configs used across the monorepo, &lt;a href=&quot;https://github.com/mmazzarolo/react-native-universal-monorepo/tree/master/packages/build-tools&quot;&gt;I&#39;m using a set of build-tools&lt;/a&gt; that ensures nohoisted packages are resolved correctly.&lt;br&gt; So, as long as you add these libraries &lt;a href=&quot;https://github.com/mmazzarolo/react-native-universal-monorepo/raw/a7dcfcbe7c7df66f6d11f06dd13f51ff94b1e70c/package.json#L9-L19&quot;&gt;to the &lt;code&gt;nohoist&lt;/code&gt; list&lt;/a&gt;, you should be good to go üëç&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions, discussions, and feedback are welcome! Please keep in mind that this project is still a WIP, so I suggest asking if there are any active plans on feature changes before submitting new PR üëç&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adiwajshing/Baileys</title>
      <link>https://github.com/adiwajshing/Baileys</link>
      <description>&lt;p&gt;Lightweight full-featured typescript/javascript WhatsApp Web API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Baileys - Typescript/Javascript WhatsApp Web API&lt;/h1&gt; 
&lt;p&gt;Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a &lt;strong&gt;WebSocket&lt;/strong&gt;. Not running Selenium or Chromimum saves you like &lt;strong&gt;half a gig&lt;/strong&gt; of ram :/&lt;/p&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng&quot;&gt;@Sigalor&lt;/a&gt; for writing his observations on the workings of WhatsApp Web and thanks to &lt;a href=&quot;https://github.com/Rhymen/go-whatsapp/&quot;&gt;@Rhymen&lt;/a&gt; for the &lt;strong&gt;go&lt;/strong&gt; implementation.&lt;/p&gt; 
&lt;p&gt;Baileys is type-safe, extensible and simple to use. If you require more functionality than provided, it&#39;ll super easy for you to write an extension. More on this &lt;a href=&quot;https://raw.githubusercontent.com/adiwajshing/Baileys/master/#writing-custom-functionality&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re interested in building a WhatsApp bot, you may wanna check out &lt;a href=&quot;https://github.com/adiwajshing/WhatsappInfoBot&quot;&gt;WhatsAppInfoBot&lt;/a&gt; and an actual bot built with it, &lt;a href=&quot;https://github.com/ashokatechmin/Messcat&quot;&gt;Messcat&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Read the docs &lt;a href=&quot;https://adiwajshing.github.io/Baileys&quot;&gt;here&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;Join the Discord &lt;a href=&quot;https://discord.gg/7FYURJyqng&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Do check out &amp;amp; run &lt;a href=&quot;https://raw.githubusercontent.com/adiwajshing/Baileys/master/Example/example.ts&quot;&gt;example.ts&lt;/a&gt; to see example usage of the library. The script covers most common use cases. To run the example script, download or clone the repo and then type the following in terminal:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;cd path/to/Baileys&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run example&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Create and cd to your NPM project directory and then in terminal, write:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;stable: &lt;code&gt;npm install @adiwajshing/baileys&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;stabl-ish w quicker fixes &amp;amp; latest features: &lt;code&gt;npm install github:adiwajshing/baileys&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Do note, the library will likely vary if you&#39;re using the NPM package, read that &lt;a href=&quot;https://www.npmjs.com/package/@adiwajshing/baileys&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Then import in your code using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { WAConnection } from &#39;@adiwajshing/baileys&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Unit Tests&lt;/h2&gt; 
&lt;p&gt;Baileys also comes with a unit test suite. Simply cd into the Baileys directory &amp;amp; run &lt;code&gt;npm test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You will require a phone with WhatsApp to test, and a second WhatsApp number to send messages to. Set the phone number you can randomly send messages to in a &lt;code&gt;.env&lt;/code&gt; file with &lt;code&gt;TEST_JID=1234@s.whatsapp.net&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Connecting&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { WAConnection } from &#39;@adiwajshing/baileys&#39;

async function connectToWhatsApp () {
    const conn = new WAConnection() 
    // called when WA sends chats
    // this can take up to a few minutes if you have thousands of chats!
    conn.on(&#39;chats-received&#39;, async ({ hasNewChats }) =&amp;gt; {
        console.log(`you have ${conn.chats.length} chats, new chats available: ${hasNewChats}`)

        const unread = await conn.loadAllUnreadMessages ()
        console.log (&quot;you have &quot; + unread.length + &quot; unread messages&quot;)
    })
    // called when WA sends chats
    // this can take up to a few minutes if you have thousands of contacts!
    conn.on(&#39;contacts-received&#39;, () =&amp;gt; {
        console.log(&#39;you have &#39; + Object.keys(conn.contacts).length + &#39; contacts&#39;)
    })

    await conn.connect ()
    conn.on(&#39;chat-update&#39;, chatUpdate =&amp;gt; {
        // `chatUpdate` is a partial object, containing the updated properties of the chat
        // received a new message
        if (chatUpdate.messages &amp;amp;&amp;amp; chatUpdate.count) {
            const message = chatUpdate.messages.all()[0]
            console.log (message)
        } else console.log (chatUpdate) // see updates (can be archived, pinned etc.)
    })
}
// run in main file
connectToWhatsApp ()
.catch (err =&amp;gt; console.log(&quot;unexpected error: &quot; + err) ) // catch any errors
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#39;ll be logged in!&lt;/p&gt; 
&lt;p&gt;Do note, the &lt;code&gt;conn.chats&lt;/code&gt; object is a &lt;a href=&quot;https://github.com/adiwajshing/keyed-db&quot;&gt;KeyedDB&lt;/a&gt;. This is done for the following reasons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Most applications require chats to be ordered in descending order of time. (&lt;code&gt;KeyedDB&lt;/code&gt; does this in &lt;code&gt;log(N)&lt;/code&gt; time)&lt;/li&gt; 
 &lt;li&gt;Most applications require pagination of chats (Use &lt;code&gt;chats.paginated()&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Most applications require &lt;strong&gt;O(1)&lt;/strong&gt; access to chats via the chat ID. (Use &lt;code&gt;chats.get(jid)&lt;/code&gt; with &lt;code&gt;KeyedDB&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuring the Connection&lt;/h2&gt; 
&lt;p&gt;You can configure the connection via the &lt;code&gt;connectOptions&lt;/code&gt; property. You can even specify an HTTPS proxy. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { WAConnection, ProxyAgent } from &#39;@adiwajshing/baileys&#39;

const conn = new WAConnecion ()
conn.connectOptions.agent = ProxyAgent (&#39;http://some-host:1234&#39;)

await conn.connect ()
console.log (&quot;oh hello &quot; + conn.user.name + &quot;! You connected via a proxy&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The entire &lt;code&gt;WAConnectOptions&lt;/code&gt; struct is mentioned here with default values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.connectOptions = {
    /** fails the connection if no data is received for X seconds */
    maxIdleTimeMs?: 60_000,
    /** maximum attempts to connect */
    maxRetries?: 10,
    /** max time for the phone to respond to a connectivity test */
    phoneResponseTime?: 15_000,
    /** minimum time between new connections */
    connectCooldownMs?: 4000,
    /** agent used for WS connections (could be a proxy agent) */
    agent?: Agent = undefined,
    /** agent used for fetch requests -- uploading/downloading media */
    fetchAgent?: Agent = undefined,
    /** always uses takeover for connecting */
    alwaysUseTakeover: true
	/** log QR to terminal */
    logQR: true
} as WAConnectOptions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Saving &amp;amp; Restoring Sessions&lt;/h2&gt; 
&lt;p&gt;You obviously don&#39;t want to keep scanning the QR code every time you want to connect.&lt;/p&gt; 
&lt;p&gt;So, you can save the credentials to log back in via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import * as fs from &#39;fs&#39;

const conn = new WAConnection() 
// this will be called as soon as the credentials are updated
conn.on (&#39;open&#39;, () =&amp;gt; {
    // save credentials whenever updated
    console.log (`credentials updated!`)
    const authInfo = conn.base64EncodedAuthInfo() // get all the auth info we need to restore this session
    fs.writeFileSync(&#39;./auth_info.json&#39;, JSON.stringify(authInfo, null, &#39;\t&#39;)) // save this info to a file
})
await conn.connect() // connect
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, to restore a session:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const conn = new WAConnection() 
conn.loadAuthInfo (&#39;./auth_info.json&#39;) // will load JSON credentials from file
await conn.connect() 
// yay connected without scanning QR
/*
    Optionally, you can load the credentials yourself from somewhere 
    &amp;amp; pass in the JSON object to loadAuthInfo () as well.
*/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;re considering switching from a Chromium/Puppeteer based library, you can use WhatsApp Web&#39;s Browser credentials to restore sessions too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.loadAuthInfo (&#39;./auth_info_browser.json&#39;)
await conn.connect() // works the same
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the browser credentials type in the docs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Upon every successive connection, WA can update part of the stored credentials. Whenever that happens, the credentials are uploaded, and you should probably update your saved credentials upon receiving the &lt;code&gt;open&lt;/code&gt; event. Not doing so &lt;em&gt;may&lt;/em&gt; lead WA to log you out after a few weeks with a 419 error code.&lt;/p&gt; 
&lt;h2&gt;QR Callback&lt;/h2&gt; 
&lt;p&gt;If you want to do some custom processing with the QR code used to authenticate, you can register for the following event:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.on(&#39;qr&#39;, qr =&amp;gt; {
    // Now, use the &#39;qr&#39; string to display in QR UI or send somewhere
}
await conn.connect ()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Handling Events&lt;/h2&gt; 
&lt;p&gt;Baileys now uses the EventEmitter syntax for events. They&#39;re all nicely typed up, so you shouldn&#39;t have any issues with an Intellisense editor like VS Code.&lt;/p&gt; 
&lt;p&gt;Also, these events are fired regardless of whether they are initiated by the Baileys client or are relayed from your phone.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;/** when the connection has opened successfully */
on (event: &#39;open&#39;, listener: (result: WAOpenResult) =&amp;gt; void): this
/** when the connection is opening */
on (event: &#39;connecting&#39;, listener: () =&amp;gt; void): this
/** when the connection has closed */
on (event: &#39;close&#39;, listener: (err: {reason?: DisconnectReason | string, isReconnecting: boolean}) =&amp;gt; void): this
/** when the socket is closed */
on (event: &#39;ws-close&#39;, listener: (err: {reason?: DisconnectReason | string}) =&amp;gt; void): this
/** when a new QR is generated, ready for scanning */
on (event: &#39;qr&#39;, listener: (qr: string) =&amp;gt; void): this
/** when the connection to the phone changes */
on (event: &#39;connection-phone-change&#39;, listener: (state: {connected: boolean}) =&amp;gt; void): this
/** when a contact is updated */
on (event: &#39;contact-update&#39;, listener: (update: WAContactUpdate) =&amp;gt; void): this
/** when a new chat is added */
on (event: &#39;chat-new&#39;, listener: (chat: WAChat) =&amp;gt; void): this
/** when contacts are sent by WA */
on (event: &#39;contacts-received&#39;, listener: (u: { updatedContacts: Partial&amp;lt;WAContact&amp;gt;[] }) =&amp;gt; void): this
/** when chats are sent by WA, and when all messages are received */
on (event: &#39;chats-received&#39;, listener: (update: {hasNewChats?: boolean}) =&amp;gt; void): this
/** when all initial messages are received from WA */
on (event: &#39;initial-data-received&#39;, listener: (update: {chatsWithMissingMessages: { jid: string, count: number }[] }) =&amp;gt; void): this
/** when multiple chats are updated (new message, updated message, deleted, pinned, etc) */
on (event: &#39;chats-update&#39;, listener: (chats: WAChatUpdate[]) =&amp;gt; void): this
/** when a chat is updated (new message, updated message, read message, deleted, pinned, presence updated etc) */
on (event: &#39;chat-update&#39;, listener: (chat: WAChatUpdate) =&amp;gt; void): this
/** when participants are added to a group */
on (event: &#39;group-participants-update&#39;, listener: (update: {jid: string, participants: string[], actor?: string, action: WAParticipantAction}) =&amp;gt; void): this
/** when the group is updated */
on (event: &#39;group-update&#39;, listener: (update: Partial&amp;lt;WAGroupMetadata&amp;gt; &amp;amp; {jid: string, actor?: string}) =&amp;gt; void): this
/** when WA sends back a pong */
on (event: &#39;received-pong&#39;, listener: () =&amp;gt; void): this
/** when a user is blocked or unblockd */
on (event: &#39;blocklist-update&#39;, listener: (update: BlocklistUpdate) =&amp;gt; void): this
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sending Messages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Send all types of messages with a single function:&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Non-Media Messages&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { MessageType, MessageOptions, Mimetype } from &#39;@adiwajshing/baileys&#39;

const id = &#39;abcd@s.whatsapp.net&#39; // the WhatsApp ID 
// send a simple text!
const sentMsg  = await conn.sendMessage (id, &#39;oh hello there&#39;, MessageType.text)
// send a location!
const sentMsg  = await conn.sendMessage(id, {degreesLatitude: 24.121231, degreesLongitude: 55.1121221}, MessageType.location)
// send a contact!
const vcard = &#39;BEGIN:VCARD\n&#39; // metadata of the contact card
            + &#39;VERSION:3.0\n&#39; 
            + &#39;FN:Jeff Singh\n&#39; // full name
            + &#39;ORG:Ashoka Uni;\n&#39; // the organization of the contact
            + &#39;TEL;type=CELL;type=VOICE;waid=911234567890:+91 12345 67890\n&#39; // WhatsApp ID + phone number
            + &#39;END:VCARD&#39;
const sentMsg  = await conn.sendMessage(id, {displayname: &quot;Jeff&quot;, vcard: vcard}, MessageType.contact)
// send a list message!
const rows = [
 {title: &#39;Row 1&#39;, description: &quot;Hello it&#39;s description 1&quot;, rowId:&quot;rowid1&quot;},
 {title: &#39;Row 2&#39;, description: &quot;Hello it&#39;s description 2&quot;, rowId:&quot;rowid2&quot;}
]

const sections = [{title: &quot;Section 1&quot;, rows: rows}]

const button = {
 buttonText: &#39;Click Me!&#39;,
 description: &quot;Hello it&#39;s list message&quot;,
 sections: sections,
 listType: 1
}

const sendMsg = await conn.sendMessage(id, button, MessageType.listMessage)

// send a buttons message!
const buttons = [
  {buttonId: &#39;id1&#39;, buttonText: {displayText: &#39;Button 1&#39;}, type: 1},
  {buttonId: &#39;id2&#39;, buttonText: {displayText: &#39;Button 2&#39;}, type: 1}
]

const buttonMessage = {
    contentText: &quot;Hi it&#39;s button message&quot;,
    footerText: &#39;Hello World&#39;,
    buttons: buttons,
    headerType: 1
}

const sendMsg = await conn.sendMessage(id, buttonMessage, MessageType.buttonsMessage)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Media Messages&lt;/h3&gt; 
&lt;p&gt;Sending media (video, stickers, images) is easier &amp;amp; more efficient than ever.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can specify a buffer, a local url or even a remote url.&lt;/li&gt; 
 &lt;li&gt;When specifying a media url, Baileys never loads the entire buffer into memory, it even encrypts the media as a readable stream.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { MessageType, MessageOptions, Mimetype } from &#39;@adiwajshing/baileys&#39;
// Sending gifs
await conn.sendMessage(
    id, 
    fs.readFileSync(&quot;Media/ma_gif.mp4&quot;), // load a gif and send it
    MessageType.video, 
    { mimetype: Mimetype.gif, caption: &quot;hello!&quot; }
)
await conn.sendMessage(
    id, 
    { url: &#39;Media/ma_gif.mp4&#39; }, // send directly from local file
    MessageType.video, 
    { mimetype: Mimetype.gif, caption: &quot;hello!&quot; }
)

await conn.sendMessage(
    id, 
    { url: &#39;https://giphy.com/gifs/11JTxkrmq4bGE0/html5&#39; }, // send directly from remote url!
    MessageType.video, 
    { mimetype: Mimetype.gif, caption: &quot;hello!&quot; }
)

// send an audio file
await conn.sendMessage(
    id, 
    { url: &quot;Media/audio.mp3&quot; }, // can send mp3, mp4, &amp;amp; ogg
    MessageType.audio, 
    { mimetype: Mimetype.mp4Audio } // some metadata (can&#39;t have caption in audio)
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;id&lt;/code&gt; is the WhatsApp ID of the person or group you&#39;re sending the message to. 
  &lt;ul&gt; 
   &lt;li&gt;It must be in the format &lt;code&gt;[country code without +][phone number]@s.whatsapp.net&lt;/code&gt;, for example &lt;code&gt;19999999999@s.whatsapp.net&lt;/code&gt; for people. For groups, it must be in the format &lt;code&gt;123456789-123345@g.us&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;For broadcast lists it&#39;s &lt;code&gt;[timestamp of creation]@broadcast&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;For stories, the ID is &lt;code&gt;status@broadcast&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;For media messages, the thumbnail can be generated automatically for images &amp;amp; stickers. Thumbnails for videos can also be generated automatically, though, you need to have &lt;code&gt;ffmpeg&lt;/code&gt; installed on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MessageOptions&lt;/strong&gt;: some extra info about the message. It can have the following &lt;strong&gt;optional&lt;/strong&gt; values: &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const info: MessageOptions = {
    quoted: quotedMessage, // the message you want to quote
    contextInfo: { forwardingScore: 2, isForwarded: true }, // some random context info (can show a forwarded message with this too)
    timestamp: Date(), // optional, if you want to manually set the timestamp of the message
    caption: &quot;hello there!&quot;, // (for media messages) the caption to send with the media (cannot be sent with stickers though)
    thumbnail: &quot;23GD#4/==&quot;, /*  (for location &amp;amp; media messages) has to be a base 64 encoded JPEG if you want to send a custom thumb, 
                                or set to null if you don&#39;t want to send a thumbnail.
                                Do not enter this field if you want to automatically generate a thumb
                            */
    mimetype: Mimetype.pdf, /* (for media messages) specify the type of media (optional for all media types except documents),
                                import {Mimetype} from &#39;@adiwajshing/baileys&#39;
                            */
    filename: &#39;somefile.pdf&#39;, // (for media messages) file name for the media
    /* will send audio messages as voice notes, if set to true */
    ptt: true,
    // will detect links &amp;amp; generate a link preview automatically (default true)
    detectLinks: true,
    /** Should it send as a disappearing messages. 
     * By default &#39;chat&#39; -- which follows the setting of the chat */
    sendEphemeral: &#39;chat&#39;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Forwarding Messages&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const messages = await conn.loadConversation (&#39;1234@s.whatsapp.net&#39;, 1)
const message = messages[0] // get the last message from this conversation
await conn.forwardMessage (&#39;455@s.whatsapp.net&#39;, message) // WA forward the message!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Reading Messages&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const id = &#39;1234-123@g.us&#39;
const messageID = &#39;AHASHH123123AHGA&#39; // id of the message you want to read

await conn.chatRead (id) // mark all messages in chat as read (equivalent of opening a chat in WA)
await conn.chatRead (id, &#39;unread&#39;) // mark the chat as unread
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The message ID is the unique identifier of the message that you are marking as read. On a &lt;code&gt;WAMessage&lt;/code&gt;, the &lt;code&gt;messageID&lt;/code&gt; can be accessed using &lt;code&gt;messageID = message.key.id&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Update Presence&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { Presence } from &#39;@adiwajshing/baileys&#39;
await conn.updatePresence(id, Presence.available) 

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This lets the person/group with &lt;code&gt;id&lt;/code&gt; know whether you&#39;re online, offline, typing etc. where &lt;code&gt;presence&lt;/code&gt; can be one of the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;export enum Presence {
    available = &#39;available&#39;, // &quot;online&quot;
    composing = &#39;composing&#39;, // &quot;typing...&quot;
    recording = &#39;recording&#39;, // &quot;recording...&quot;
    paused = &#39;paused&#39; // stopped typing, back to &quot;online&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The presence expires after about 10 seconds.&lt;/p&gt; 
&lt;h2&gt;Downloading Media Messages&lt;/h2&gt; 
&lt;p&gt;If you want to save the media you received&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { MessageType } from &#39;@adiwajshing/baileys&#39;
conn.on (&#39;message-new&#39;, async m =&amp;gt; {
    if (!m.message) return // if there is no text or media message
    const messageType = Object.keys (m.message)[0]// get what type of message it is -- text, image, video
    // if the message is not a text message
    if (messageType !== MessageType.text &amp;amp;&amp;amp; messageType !== MessageType.extendedText) {
        const buffer = await conn.downloadMediaMessage(m) // to decrypt &amp;amp; use as a buffer
        
        const savedFilename = await conn.downloadAndSaveMediaMessage (m) // to decrypt &amp;amp; save to file
        console.log(m.key.remoteJid + &quot; sent media, saved at: &quot; + savedFilename)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deleting Messages&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const jid = &#39;1234@s.whatsapp.net&#39; // can also be a group
const response = await conn.sendMessage (jid, &#39;hello!&#39;, MessageType.text) // send a message

await conn.deleteMessage (jid, {id: response.messageID, remoteJid: jid, fromMe: true}) // will delete the sent message for everyone!
await conn.clearMessage (jid, {id: response.messageID, remoteJid: jid, fromMe: true}) // will delete the sent message for only you!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Modifying Chats&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const jid = &#39;1234@s.whatsapp.net&#39; // can also be a group
await conn.modifyChat (jid, ChatModification.archive) // archive chat
await conn.modifyChat (jid, ChatModification.unarchive) // unarchive chat

const response = await conn.modifyChat (jid, ChatModification.pin) // pin the chat
await conn.modifyChat (jid, ChatModification.unpin) // unpin it

await conn.modifyChat (jid, ChatModification.mute, 8*60*60*1000) // mute for 8 hours
setTimeout (() =&amp;gt; {
    conn.modifyChat (jid, ChatModification.unmute)
}, 5000) // unmute after 5 seconds

await conn.modifyChat (jid, ChatModification.delete) // will delete the chat (can be a group or broadcast list as well)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; to unmute or unpin a chat, one must pass the timestamp of the pinning or muting. This is returned by the pin &amp;amp; mute functions. This is also available in the &lt;code&gt;WAChat&lt;/code&gt; objects of the respective chats, as a &lt;code&gt;mute&lt;/code&gt; or &lt;code&gt;pin&lt;/code&gt; property.&lt;/p&gt; 
&lt;h2&gt;Disappearing Messages&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const jid = &#39;1234@s.whatsapp.net&#39; // can also be a group
// turn on disappearing messages
await conn.toggleDisappearingMessages(
    jid, 
    WA_DEFAULT_EPHEMERAL // this is 1 week in seconds -- how long you want messages to appear for
) 
// will automatically send as a disappearing message
await conn.sendMessage(jid, &#39;Hello poof!&#39;, MessageType.text)
// turn off disappearing messages
await conn.toggleDisappearingMessages(jid, 0)

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Misc&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To load chats in a paginated manner &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const {chats, cursor} = await conn.loadChats (25)
if (cursor) {
    const moreChats = await conn.loadChats (25, cursor) // load the next 25 chats
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To check if a given ID is on WhatsApp Note: this method falls back to using &lt;code&gt;https://wa.me&lt;/code&gt; to determine whether a number is on WhatsApp in case the WebSocket connection is not open yet. &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const id = &#39;123456&#39;
const exists = await conn.isOnWhatsApp (id)
if (exists) console.log (`${id} exists on WhatsApp, as jid: ${exists.jid}`)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To query chat history on a group or with someone &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// query the last 25 messages (replace 25 with the number of messages you want to query)
const messages = await conn.loadMessages (&quot;xyz-abc@g.us&quot;, 25)
console.log(&quot;got back &quot; + messages.length + &quot; messages&quot;)
&lt;/code&gt;&lt;/pre&gt; You can also load the entire conversation history if you want &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.loadAllMessages (&quot;xyz@c.us&quot;, message =&amp;gt; console.log(&quot;Loaded message with ID: &quot; + message.key.id))
console.log(&quot;queried all messages&quot;) // promise resolves once all messages are retrieved
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To get the status of some person &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const status = await conn.getStatus (&quot;xyz@c.us&quot;) // leave empty to get your own status
console.log(&quot;status: &quot; + status)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To get the display picture of some person/group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const ppUrl = await conn.getProfilePicture (&quot;xyz@g.us&quot;) // leave empty to get your own
console.log(&quot;download profile picture from: &quot; + ppUrl)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To change your display picture or a group&#39;s &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const jid = &#39;111234567890-1594482450@g.us&#39; // can be your own too
const img = fs.readFileSync (&#39;new-profile-picture.jpeg&#39;) // can be PNG also
await conn.updateProfilePicture (jid, img)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To get someone&#39;s presence (if they&#39;re typing, online) &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// the presence update is fetched and called here
conn.on (&#39;CB:Presence&#39;, json =&amp;gt; console.log(json.id + &quot; presence is &quot; + json.type))
await conn.requestPresenceUpdate (&quot;xyz@c.us&quot;) // request the update
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To search through messages &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const response = await conn.searchMessages (&#39;so cool&#39;, null, 25, 1) // search in all chats
console.log (`got ${response.messages.length} messages in search`)

const response2 = await conn.searchMessages (&#39;so cool&#39;, &#39;1234@c.us&#39;, 25, 1) // search in given chat
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To block or unblock user &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.blockUser (&quot;xyz@c.us&quot;, &quot;add&quot;) // Block user
await conn.blockUser (&quot;xyz@c.us&quot;, &quot;remove&quot;) // Unblock user
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Of course, replace &lt;code&gt;xyz&lt;/code&gt; with an actual ID.&lt;/p&gt; 
&lt;h2&gt;Groups&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To create a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// title &amp;amp; participants
const group = await conn.groupCreate (&quot;My Fab Group&quot;, [&quot;abcd@s.whatsapp.net&quot;, &quot;efgh@s.whatsapp.net&quot;])
console.log (&quot;created group with id: &quot; + group.gid)
conn.sendMessage(group.gid, &quot;hello everyone&quot;, MessageType.extendedText) // say hello to everyone on the group
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To add people to a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// id &amp;amp; people to add to the group (will throw error if it fails)
const response = await conn.groupAdd (&quot;abcd-xyz@g.us&quot;, [&quot;abcd@s.whatsapp.net&quot;, &quot;efgh@s.whatsapp.net&quot;])
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To make/demote admins on a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// id &amp;amp; people to make admin (will throw error if it fails)
await conn.groupMakeAdmin (&quot;abcd-xyz@g.us&quot;, [&quot;abcd@s.whatsapp.net&quot;, &quot;efgh@s.whatsapp.net&quot;])
await conn.groupDemoteAdmin (&quot;abcd-xyz@g.us&quot;, [&quot;abcd@s.whatsapp.net&quot;, &quot;efgh@s.whatsapp.net&quot;]) // demote admins
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To change the group&#39;s subject &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.groupUpdateSubject(&quot;abcd-xyz@g.us&quot;, &quot;New Subject!&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To change the group&#39;s description &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.groupUpdateDescription(&quot;abcd-xyz@g.us&quot;, &quot;This group has a new description&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To change group settings &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { GroupSettingChange } from &#39;@adiwajshing/baileys&#39;
// only allow admins to send messages
await conn.groupSettingChange (&quot;abcd-xyz@g.us&quot;, GroupSettingChange.messageSend, true)
// allow everyone to modify the group&#39;s settings -- like display picture etc.
await conn.groupSettingChange (&quot;abcd-xyz@g.us&quot;, GroupSettingChange.settingsChange, false)
// only allow admins to modify the group&#39;s settings
await conn.groupSettingChange (&quot;abcd-xyz@g.us&quot;, GroupSettingChange.settingsChange, true)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To leave a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.groupLeave (&quot;abcd-xyz@g.us&quot;) // (will throw error if it fails)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To get the invite code for a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const code = await conn.groupInviteCode (&quot;abcd-xyz@g.us&quot;)
console.log(&quot;group code: &quot; + code)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To query the metadata of a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const metadata = await conn.groupMetadata (&quot;abcd-xyz@g.us&quot;) 
console.log(json.id + &quot;, title: &quot; + json.subject + &quot;, description: &quot; + json.desc)

// Or if you&#39;ve left the group -- call this
const metadata2 = await conn.groupMetadataMinimal (&quot;abcd-xyz@g.us&quot;) 
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To join the group using the invitation code &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const response = await conn.acceptInvite (&quot;xxx&quot;)
console.log(&quot;joined to: &quot; + response.gid)
&lt;/code&gt;&lt;/pre&gt; Of course, replace &lt;code&gt;xxx&lt;/code&gt; with invitation code.&lt;/li&gt; 
 &lt;li&gt;To revokes the current invite link of a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const response = await conn.revokeInvite (&quot;abcd-xyz@g.us&quot;)
console.log(&quot;new group code: &quot; + response.code)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Broadcast Lists &amp;amp; Stories&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can send messages to broadcast lists the same way you send messages to groups &amp;amp; individual chats.&lt;/li&gt; 
 &lt;li&gt;Unfortunately, WA Web does not support creating broadcast lists right now but you can still delete them.&lt;/li&gt; 
 &lt;li&gt;Broadcast IDs are in the format &lt;code&gt;12345678@broadcast&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;To query a broadcast list&#39;s recipients &amp;amp; name: &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const bList = await conn.getBroadcastListInfo (&quot;1234@broadcast&quot;)
console.log (`list name: ${bList.name}, recps: ${bList.recipients}`)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Writing Custom Functionality&lt;/h2&gt; 
&lt;p&gt;Baileys is written, keeping in mind, that you may require other custom functionality. Hence, instead of having to fork the project &amp;amp; re-write the internals, you can simply write extensions in your own code.&lt;/p&gt; 
&lt;p&gt;First, enable the logging of unhandled messages from WhatsApp by setting&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.logger.level = &#39;debug&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will enable you to see all sorts of messages WhatsApp sends in the console. Some examples:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Functionality to track of the battery percentage of your phone. You enable logging and you&#39;ll see a message about your battery pop up in the console: &lt;code&gt;s22, [&quot;action&quot;,null,[[&quot;battery&quot;,{&quot;live&quot;:&quot;false&quot;,&quot;value&quot;:&quot;52&quot;},null]]] &lt;/code&gt;&lt;/p&gt; &lt;p&gt;You now know what a battery update looks like. It&#39;ll have the following characteristics.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Given &lt;code&gt;const bMessage = [&quot;action&quot;,null,[[&quot;battery&quot;,{&quot;live&quot;:&quot;false&quot;,&quot;value&quot;:&quot;52&quot;},null]]]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bMessage[0]&lt;/code&gt; is always &lt;code&gt;&quot;action&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bMessage[1]&lt;/code&gt; is always &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bMessage[2][0][0]&lt;/code&gt; is always &lt;code&gt;&quot;battery&quot;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Hence, you can register a callback for an event using the following:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.on (`CB:action,,battery`, json =&amp;gt; {
    const batteryLevelStr = json[2][0][1].value
    const batterylevel = parseInt (batteryLevelStr)
    console.log (&quot;battery level: &quot; + batterylevel + &quot;%&quot;)
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This callback will be fired any time a message is received matching the following criteria: &lt;code&gt;message [0] === &quot;action&quot; &amp;amp;&amp;amp; message [1] === null &amp;amp;&amp;amp; message[2][0][0] === &quot;battery&quot;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Functionality to keep track of the pushname changes on your phone. You enable logging and you&#39;ll see an unhandled message about your pushanme pop up like this: &lt;code&gt;s24, [&quot;Conn&quot;,{&quot;pushname&quot;:&quot;adiwajshing&quot;}]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;You now know what a pushname update looks like. It&#39;ll have the following characteristics.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Given &lt;code&gt;const pMessage = [&quot;Conn&quot;,{&quot;pushname&quot;:&quot;adiwajshing&quot;}] &lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;pMessage[0]&lt;/code&gt; is always &lt;code&gt;&quot;Conn&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;pMessage[1]&lt;/code&gt; always has the key &lt;code&gt;&quot;pushname&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;pMessage[2]&lt;/code&gt; is always &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Following this, one can implement the following callback:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.on (&#39;CB:Conn,pushname&#39;, json =&amp;gt; {
    const pushname = json[1].pushname
    conn.user.name = pushname // update on client too
    console.log (&quot;Name updated: &quot; + pushname)
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This callback will be fired any time a message is received matching the following criteria: &lt;code&gt;message [0] === &quot;Conn&quot; &amp;amp;&amp;amp; message [1].pushname&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;A little more testing will reveal that almost all WhatsApp messages are in the format illustrated above. Note: except for the first parameter (in the above cases, &lt;code&gt;&quot;action&quot;&lt;/code&gt; or &lt;code&gt;&quot;Conn&quot;&lt;/code&gt;), all the other parameters are optional.&lt;/p&gt; 
&lt;h3&gt;Note&lt;/h3&gt; 
&lt;p&gt;This library was originally a project for &lt;strong&gt;CS-2362 at Ashoka University&lt;/strong&gt; and is in no way affiliated with WhatsApp. Use at your own discretion. Do not spam people with this.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
