<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 24 Oct 2021 01:53:08 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>reactjs/reactjs.org</title>
      <link>https://github.com/reactjs/reactjs.org</link>
      <description>&lt;p&gt;The React documentation website&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;reactjs.org&lt;/h1&gt; 
&lt;p&gt;This repo contains the source code and documentation powering &lt;a href=&quot;https://reactjs.org/&quot;&gt;reactjs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
 &lt;li&gt;Node: any 12.x version starting with v12.0.0 or greater&lt;/li&gt; 
 &lt;li&gt;Yarn: See &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/install/&quot;&gt;Yarn website for installation instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;A fork of the repo (for any contributions)&lt;/li&gt; 
 &lt;li&gt;A clone of the &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;reactjs.org repo&lt;/a&gt; on your local machine&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;cd reactjs.org&lt;/code&gt; to go into the project root&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn&lt;/code&gt; to install the website&#39;s npm dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Running locally&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;yarn dev&lt;/code&gt; to start the hot-reloading development server (powered by &lt;a href=&quot;https://www.gatsbyjs.org&quot;&gt;Gatsby&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;open http://localhost:8000&lt;/code&gt; to open the site in your favorite browser&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Guidelines&lt;/h3&gt; 
&lt;p&gt;The documentation is divided into several sections with a different tone and purpose. If you plan to write more than a few sentences, you might find it helpful to get familiar with the &lt;a href=&quot;https://github.com/reactjs/reactjs.org/raw/main/CONTRIBUTING.md#guidelines-for-text&quot;&gt;contributing guidelines&lt;/a&gt; for the appropriate sections.&lt;/p&gt; 
&lt;h3&gt;Create a branch&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;git checkout main&lt;/code&gt; from any folder in your local &lt;code&gt;reactjs.org&lt;/code&gt; repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git pull origin main&lt;/code&gt; to ensure you have the latest main code&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git checkout -b the-name-of-my-branch&lt;/code&gt; (replacing &lt;code&gt;the-name-of-my-branch&lt;/code&gt; with a suitable name) to create a branch&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Make the change&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow the &lt;a href=&quot;https://raw.githubusercontent.com/reactjs/reactjs.org/main/#running-locally&quot;&gt;&quot;Running locally&quot;&lt;/a&gt; instructions&lt;/li&gt; 
 &lt;li&gt;Save the files and check in the browser&lt;/li&gt; 
 &lt;li&gt;Changes to React components in &lt;code&gt;src&lt;/code&gt; will hot-reload&lt;/li&gt; 
 &lt;li&gt;Changes to markdown files in &lt;code&gt;content&lt;/code&gt; will hot-reload&lt;/li&gt; 
 &lt;li&gt;If working with plugins, you may need to remove the &lt;code&gt;.cache&lt;/code&gt; directory and restart the server&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Test the change&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;If possible, test any visual changes in all latest versions of common browsers, on both desktop and mobile.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;yarn check-all&lt;/code&gt; from the project root. (This will run Prettier, ESLint, and Flow.)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Push it&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;git add -A &amp;amp;&amp;amp; git commit -m &quot;My message&quot;&lt;/code&gt; (replacing &lt;code&gt;My message&lt;/code&gt; with a commit message, such as &lt;code&gt;Fix header logo on Android&lt;/code&gt;) to stage and commit your changes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git push my-fork-name the-name-of-my-branch&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Go to the &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;reactjs.org repo&lt;/a&gt; and you should see recently pushed branches.&lt;/li&gt; 
 &lt;li&gt;Follow GitHub&#39;s instructions.&lt;/li&gt; 
 &lt;li&gt;If possible, include screenshots of visual changes. A &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; build will also be automatically created once you make your PR so other people can see your change.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;If you are interested in translating &lt;code&gt;reactjs.org&lt;/code&gt;, please see the current translation efforts at &lt;a href=&quot;https://translations.reactjs.org/&quot;&gt;translations.reactjs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If your language does not have a translation and you would like to create one, please follow the instructions at &lt;a href=&quot;https://github.com/reactjs/reactjs.org-translation#translating-reactjsorg&quot;&gt;reactjs.org Translations&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn reset&lt;/code&gt; to clear the local cache&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Content submitted to &lt;a href=&quot;https://reactjs.org/&quot;&gt;reactjs.org&lt;/a&gt; is CC-BY-4.0 licensed, as found in the &lt;a href=&quot;https://github.com/open-source-explorer/reactjs.org/raw/master/LICENSE-DOCS.md&quot;&gt;LICENSE-DOCS.md&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;ÌïúÍµ≠Ïñ¥&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;Êó•Êú¨Ë™û&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Fran√ßais&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Espa√±ol&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Portugu√™s&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;–†—É—Å—Å–∫–∏–π&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;T√ºrk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md&quot;&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‚òù Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/binary-floating-point&quot;&gt;Binary Floating Point&lt;/a&gt; - binary representation of the floating-point numbers.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui œÄ Algorithm&lt;/a&gt; - approximate œÄ calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher‚ÄìYates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - &quot;0/1&quot; and &quot;Unbound&quot; ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#39;s) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth‚ÄìMorris‚ÄìPratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Statistics&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/statistics/weighted-random&quot;&gt;Weighted Random&lt;/a&gt; - select the random item from the list based on items&#39; weights&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In case if linting or testing is failing try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;‚ñ∂ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Big O Notation&lt;/th&gt; 
   &lt;th&gt;Computations for 10 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 100 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 1000 elements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;1000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;600&lt;/td&gt; 
   &lt;td&gt;9000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;10000&lt;/td&gt; 
   &lt;td&gt;1000000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1024&lt;/td&gt; 
   &lt;td&gt;1.26e+29&lt;/td&gt; 
   &lt;td&gt;1.07e+301&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3628800&lt;/td&gt; 
   &lt;td&gt;9.3e+157&lt;/td&gt; 
   &lt;td&gt;4.02e+2567&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Data Structure&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Access&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Search&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Insertion&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Deletion&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;False positives are possible while searching&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Best&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Average&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Worst&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Memory&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Stable&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Quicksort is usually done in-place with O(log(n)) stack space&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;depends on gap sequence&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;No&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + r&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;r - biggest number in array&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n * k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;n + k&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;k - length of longest key&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;‚àë = 0&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ÑπÔ∏è A few more &lt;a href=&quot;https://trekhleb.dev/projects/&quot;&gt;projects&lt;/a&gt; and &lt;a href=&quot;https://trekhleb.dev/blog/&quot;&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href=&quot;https://trekhleb.dev&quot;&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>mikecao/umami</title>
      <link>https://github.com/mikecao/umami</link>
      <description>&lt;p&gt;Umami is a simple, fast, website analytics alternative to Google Analytics.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;umami&lt;/h1&gt; 
&lt;p&gt;Umami is a simple, fast, website analytics alternative to Google Analytics.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;A detailed getting started guide can be found at &lt;a href=&quot;https://umami.is/docs/&quot;&gt;https://umami.is/docs/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing from source&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A server with Node.js 12 or newer&lt;/li&gt; 
 &lt;li&gt;A database (MySQL or Postgresql)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get the source code and install packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/mikecao/umami.git
cd umami
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create database tables&lt;/h3&gt; 
&lt;p&gt;Umami supports &lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;Postgresql&lt;/a&gt;. Create a database for your Umami installation and install the tables with the included scripts.&lt;/p&gt; 
&lt;p&gt;For MySQL:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mysql -u username -p databasename &amp;lt; sql/schema.mysql.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Postgresql:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;psql -h hostname -U username -d databasename -f sql/schema.postgresql.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will also create a login account with username &lt;strong&gt;admin&lt;/strong&gt; and password &lt;strong&gt;umami&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Configure umami&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file with the following&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;DATABASE_URL=(connection url)
HASH_SALT=(any random string)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The connection url is in the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;postgresql://username:mypassword@localhost:5432/mydb

mysql://username:mypassword@localhost:3306/mydb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;HASH_SALT&lt;/code&gt; is used to generate unique values for your installation.&lt;/p&gt; 
&lt;h3&gt;Build the application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start the application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default this will launch the application on &lt;code&gt;http://localhost:3000&lt;/code&gt;. You will need to either &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/&quot;&gt;proxy&lt;/a&gt; requests from your web server or change the &lt;a href=&quot;https://nextjs.org/docs/api-reference/cli#production&quot;&gt;port&lt;/a&gt; to serve the application directly.&lt;/p&gt; 
&lt;h2&gt;Installing with Docker&lt;/h2&gt; 
&lt;p&gt;To build the umami container and start up a Postgres database, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, to pull just the Umami Docker image with PostgreSQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull ghcr.io/mikecao/umami:postgresql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or with MySQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull ghcr.io/mikecao/umami:mysql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting updates&lt;/h2&gt; 
&lt;p&gt;To get the latest features, simply do a pull, install any new dependencies, and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>czj2369/jd_tb_auto</title>
      <link>https://github.com/czj2369/jd_tb_auto</link>
      <description>&lt;p&gt;Âü∫‰∫éAutoJsÁºñÂÜôÁöÑ618||ÂèåÂçÅ‰∏Ä||Ê∑òÂÆù||‰∫¨‰∏ú||ËµöÂñµÂ∏Å||ËµöÊ±™Ê±™Â∏Å‰ªªÂä°Ëá™Âä®ÂÆåÊàêËÑöÊú¨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;618||ÂèåÂçÅ‰∏Ä||Ê∑òÂÆù||‰∫¨‰∏ú||ËµöÂñµÁ≥ñ||ËµöÊ±™Ê±™Â∏Å‰ªªÂä°Ëá™Âä®ÂÆåÊàêËÑöÊú¨&lt;/h1&gt; 
&lt;p&gt;Âü∫‰∫éAutoJsÁºñÂÜôÁöÑ618||ÂèåÂçÅ‰∏Ä||Ê∑òÂÆù||‰∫¨‰∏ú||ËµöÂñµÁ≥ñ||ËµöÊ±™Ê±™Â∏Å‰ªªÂä°Ëá™Âä®ÂÆåÊàêËÑöÊú¨&lt;/p&gt; 
&lt;h1&gt;ÈáçË¶ÅËØ¥Êòé&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;JD&lt;del&gt;ÈÉ®ÂàÜ&lt;/del&gt;ËæÉÂ∞ë‰ªªÂä°Êó†Ê≥ïÂà§Êñ≠ÊòØÁ≠âÂæÖËøòÊòØÂç≥ÂàªËøîÂõûÔºåÊïÖÊúâ‰∫õ‰ªªÂä°ÈúÄË¶ÅÁ≠âÂæÖ30SËá™Âä®ËøîÂõûÔºåÂêéÁª≠ÁúãËÉΩ‰∏çËÉΩËß£ÂÜ≥&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;del&gt;JDÁöÑÊ¥ªÂä®ÁïåÈù¢Ê≤°ÂäûÊ≥ïËé∑ÂæóÂÆÉÊéß‰ª∂Â±ûÊÄßÈÇ£‰∫õÔºåËøôÊ¨°ÁâàÊú¨‰ΩøÁî®ÁöÑÊòØÂùêÊ†áÁÇπÂáªÁöÑÔºåÂèØËÉΩ‰ºöÊúâ‰∏Ä‰∫õÈóÆÈ¢ò&lt;/del&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;JDÂ¶ÇÊûúÊ≤°ÂäûÊ≥ïËá™Âä®ËøõÂÖ•ÂÅö‰ªªÂä°ÁïåÈù¢ÔºåËØ∑ÊâãÂä®ËøõÂÖ•&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;JDÊúâ‰∏™Âà´Ê¥ªÂä®ÊòØË∑≥ËøáÁöÑÔºåÊØîÂ¶ÇÈúÄË¶ÅÂºÄ‰ºöÂëòÁöÑÔºåÊØîÂ¶ÇÂàÜ‰∫´ÁöÑÔºåËøòÊúâ‰∏ãÂçïÁöÑ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;TBË¶ÅÂÖàÂÅöÂ•ΩÊñ∞ÊâãÊïôÁ®ã&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;TB‰∏™Âà´Ê¥ªÂä®ÊòØË∑≥ËøáÁöÑÔºåÊØîÂ¶ÇÊñΩËÇ•ÔºåÊØîÂ¶ÇÂñÇÈ∏°ÔºåÂÖ∑‰ΩìÁúã‰ª£Á†ÅÁöÑËøôÈáåÂøΩÁï•ÁöÑ‰ªªÂä°&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var IGNORE_LIST = [&#39;ÂÜúÂú∫&#39;, &#39;Ëä≠Ëä≠ÂÜúÂú∫&#39;,&#39;‰∏ãÂçï&#39;,&#39;ËöÇËöÅ&#39;,&#39;Ê∑òÁâπ&#39;,&#39;Â∞è‰∫íÂä®&#39;,&#39;ÁÇπÊ∑ò&#39;,&#39;ÂÖÖËØùË¥π&#39;,&#39;ÂèÇ‰∏éÂêà‰ºô&#39;];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Êõ¥Êñ∞&lt;/h1&gt; 
&lt;p&gt;2021Âπ¥10Êúà23Êó•&lt;/p&gt; 
&lt;p&gt;1.[00:39:47]„ÄêJD„ÄëÂéªÈô§ÂùêÊ†áÁÇπÂáªÊ≥ïÔºåÂèëÁé∞Ê≤°ÂäûÊ≥ïÈÄöÁî®ÔºåÊîπ‰∫ÜÈÄªËæëÔºå‰∫íÂä®ÁßçËçâÂüéËøòÊúâÈ¢ÜÁ∫¢ÂåÖÂèØËÉΩÈúÄË¶ÅËá™Â∑±ÊâãÂä®ÔºåÂâ©‰∏ãBUGÂÜçÊîπ‰∫Ü„ÄÇ„ÄÇÊµãËØï‰∫Ü‰∏§‰∏™Ë¥¶Âè∑ÔºåÂü∫Êú¨ËÉΩÁ®≥ÂÆöË∑ëÂÆåÔºà‰∏≠ÈÄîÈúÄË¶ÅÊâãÂä®ÂÆåÊàêÈ¢ÜÁ∫¢ÂåÖ‰ªªÂä°Ôºâ&lt;/p&gt; 
&lt;p&gt;2.[23:24:23]„ÄêJDTB„ÄëÊõ¥Êñ∞JDTB&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;2021Âπ¥10Êúà22Êó•&lt;/p&gt; 
&lt;p&gt;1.[00:37:15]„ÄêJD„Äë‰øÆÂ§çÂ∑≤Áü•BUGÔºå‰ª•Âèä‰ºòÂåñÈÄªËæë&lt;/p&gt; 
&lt;p&gt;2.[13:09:19]„ÄêTB„ÄëÊ∑ªÂä†ÂñÇÂ∞èÈ∏°ÂøΩÁï•‰ªªÂä°Ôºå‰øÆÂ§çÊó†Ê≥ïËøõÂÖ•Ê¥ªÂä®ÁïåÈù¢&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;2021Âπ¥10Êúà21Êó•&lt;/p&gt; 
&lt;p&gt;1.[01:02:51]„ÄêJD„Äë‰øÆÂ§ç‰∏Ä‰∫õbugÔºåÁõÆÂâçÂ∑≤Áü•bugÔºö‰∫íÂä®ÁßçËçâÂüéÂíåÂà∞Â∫ïÈÉ®ÁÇπÂáªÂïÜÂìÅÈóÆÈ¢ò&lt;/p&gt; 
&lt;p&gt;2.[13:16:49]„ÄêTB„ÄëTBÁöÑ‰ªªÂä°Ê≤°ÂÅöÂï•Êõ¥Êñ∞ÔºåÊàëÁî®618ÁöÑ‰ª£Á†Å‰øÆÊîπ‰∫Ü‰∏ÄÁÇπÂ∞±ËÉΩË∑ë‰∫ÜÔºåÊöÇÊó∂Êèê‰∫§Á¨¨‰∏ÄÁâàÂÖà&lt;/p&gt; 
&lt;p&gt;3.[20:50:50]„ÄêTBJD„Äë‰øÆÂ§çÂ∑≤Áü•BUG~&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;2021Âπ¥10Êúà20Êó•&lt;/p&gt; 
&lt;p&gt;1.[23:02:50]„ÄêJD„ÄëÊèê‰∫§Á¨¨‰∏ÄÁâàÔºåÁõÆÂâçÂ≠òÂú®ËÆ∏Â§öBUGÔºÅÔºÅÔºÅ&lt;/p&gt; 
&lt;h1&gt;Â¶Ç‰ΩïÂÖ≥Èó≠&lt;/h1&gt; 
&lt;p&gt;Èü≥Èáè‰∏äÈîÆ&lt;/p&gt; 
&lt;h1&gt;ÂÖ∂‰ªñ&lt;/h1&gt; 
&lt;p&gt;1.ÊµãËØïÊâãÊú∫ÂûãÂè∑ÔºöRedmi K40&lt;/p&gt; 
&lt;p&gt;2.JDÁâàÊú¨Ôºö9.2.0ÔºåTBÁâàÊú¨Ôºö10.5.0&lt;/p&gt; 
&lt;h1&gt;&lt;del&gt;ÈáçË¶ÅËØ¥Êòé&lt;/del&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;del&gt;TBÁöÑÊúâ‰ª£Á†ÅÔºå‰ΩÜÊòØÂõ†‰∏∫Ê£ÄÊµãÊó†ÈöúÁ¢çÁöÑÂéüÂõ†ÂØºËá¥ÂÅöÂÆå‰ªªÂä°Ëé∑ÂæóÁöÑÈáëÂ∏ÅÊï∞Èáè100-200ÔºåÊâæ‰∏çÂà∞Ëß£ÂÜ≥ÊñπÊ≥ï&lt;/del&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;JDÊ≠£Â∏∏‰ΩøÁî®ÔºåÈúÄË¶ÅÊâãÂä®ËøõÂÖ•Âà∞Ê¥ªÂä®ÁïåÈù¢&lt;/del&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;del&gt;Êõ¥Êñ∞&lt;/del&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;del&gt;2021-06-08&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;1.„ÄêTB618„Äë‰∏ä‰º†TBËá™Âä®Âåñ‰ª£Á†Å Ê≥®Ôºö‰ΩøÁî®ËØ•ËÑöÊú¨ÊûÅÂ§ßÊ¶ÇÁéáËé∑ÂæóÈáëÂ∏Å‰∏∫100ÔºàÂèçÊ≠£ÊàëÊòØÁöÑÔºåÊàëËøôÈáåÊèê‰æõËÑöÊú¨ÔºåÂ¶ÇÊûúËß£ÂÜ≥TBÊ£ÄÊµãÊó†ÈöúÁ¢çÁöÑÈóÆÈ¢ò‰∫§Áªô‰Ω†‰ª¨‰∫ÜÔºâ&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;2.„ÄêJD618„ÄëÊõ¥ÊîπÂ∞ëÈáè‰∏çÂêàÁêÜÊ≥®Èáä&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;2021-06-07&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;1.„ÄêJD618„ÄëÊ∑ªÂä†Êó•ÂøóÊâìÂç∞Á™óÂè£&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;2.„ÄêJD618„ÄëÊ∑ªÂä†Ëá™Âä®Âà§Êñ≠Á®ãÂ∫èÊòØÂê¶Âç°Âú®Êüê‰∏™ÁïåÈù¢&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;Ê≥®ÔºöJDÈúÄË¶ÅÊâãÂä®ËøõÂÖ•Âà∞Ê¥ªÂä®ÁïåÈù¢&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;2021-06-06&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;1.„ÄêJD618„Äë‰∏ä‰º†JDËá™Âä®Âåñ‰ª£Á†ÅÔºåÊØîËæÉÁÆÄÂçïÔºå‰∏çÊèê‰æõÊâìÂåÖapk&lt;/del&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;del&gt;Âè¶Â§ñ&lt;/del&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;del&gt;ÂèØËÉΩÊØèÂ§©‰ºöÊúâ‰∏çÂêåÁöÑÊ¥ªÂä®ÔºåÊàëËøôÈáåÂÅö‰∫Ü‰∏Ä‰∏™ÈúÄË¶ÅÂÅöÁöÑÊ¥ªÂä®Âíå‰∏çÈúÄË¶ÅÂÅöÁöÑÊ¥ªÂä®ÂàóË°®ÔºåÂ¶ÇÊûúËá™Â∑±ÂèëÁé∞Á®ãÂ∫èÊ≤°Êõ¥Êñ∞ÔºåÂèØ‰ª•Ëá™Â∑±Âú®‰ª£Á†ÅÈáåÈù¢Ê∑ªÂä†&lt;/del&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ÈúÄË¶ÅÂøΩÁï•ÁöÑ‰ªªÂä°‰∏≠ÂåÖÂê´ÁöÑÂÖ≥ÈîÆÂ≠ó
const IGNORE_LIST = [&#39;Â•ΩÂèã&#39;,&#39;ÊàêÂäüÂÖ•‰ºö&#39;,&#39;Âä†ÂÖ•ÊàòÈòü&#39;,&#39;ÂèÇ‰∏éÂèØÂæó2000ÈáëÂ∏Å&#39;];
// ÁÇπÂáª‰πãÂêéËøîÂõûÁöÑ‰ªªÂä°
const BACK_LIST = [&#39;ÊµèËßàÂπ∂ÂÖ≥Ê≥®&#39;,&#39;ÈÄõÂ∫óÂèØÂæó&#39;,&#39;ÊàêÂäüÊµèËßàÂèØÂæó1000ÈáëÂ∏Å&#39;];
// ÂéªÂÆåÊàêÊåâÈíÆ
const GO_FINISH = &#39;ÂéªÂÆåÊàê&#39;;
// ÈúÄË¶ÅÂÅöÁöÑ‰ªªÂä°
const FINISHED_TASK = [&#39;ÊÇ®ÊâÄËÆøÈóÆÁöÑÈ°µÈù¢‰∏çÂ≠òÂú®&#39;,&#39;ÂÖ®ÈÉ®ÂÆåÊàêÂï¶&#39;,/Ëé∑Âæó\w+ÈáëÂ∏Å/,&#39;Â∑≤ÊµèËßà&#39;];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;del&gt;ÊØîÂ¶ÇÊàëËøôÈáåÂøΩÁï•‰∫ÜÂÖ•‰ºöÁöÑÈÇ£‰∏™Ê¥ªÂä®ÔºåÂ∞±ÊääÈÇ£‰∏™‰ªªÂä°ÁöÑÂÖ≥ÈîÆÂ≠ó‚ÄúÊàêÂäüÂÖ•‰ºö‚ÄùÊîæÂú®‰∫ÜIGNORE_LISTÁöÑÂèòÈáèÈáåÈù¢ÔºåÂèàÊØîÂ¶ÇÊúâÁöÑÊ¥ªÂä®ÊòØÁÇπËøõÂéªÁõ¥Êé•ËøîÂõûÂ∞±Ë°åÔºåËøôÈáå‰πüÊúâËøõË°åÂà§Êñ≠ÁöÑÂàóË°®-BACK_LISTÔºåÂè™ÈúÄË¶ÅÊää‰ªªÂä°ÁöÑÂÖ≥ÈîÆÂ≠óÂä†ÂÖ•Âç≥ÂèØ„ÄÇ&lt;/del&gt;&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;È´òÁâàÊú¨Ê∑òÂÆùÊúâÂà∂Ë£ÅËßÑÂàôÔºå‰ºöÁõëÊéßauto.jsÁ≠âËÑöÊú¨appËøõÁ®ãÔºåÂ•ñÂä±‰ºöÂèòÂæóÁâπÂà´‰Ωé&lt;br&gt;&lt;/del&gt; &lt;del&gt;‰∫≤ÊµãÊ∑òÂÆùV9.5.7Áâà‰∏ç‰ºöÁõëÊéßËøõÁ®ãÔºåÂèØ‰ª•Ëé∑ÂæóÂÖ®È¢ùÂ•ñÂä±ÔºåÊé®Ëçê‰ΩøÁî®Ê≠§ÁâàÊú¨&lt;br&gt;&lt;/del&gt; &lt;del&gt;&lt;a href=&quot;https://www.wandoujia.com/apps/32267/history_v278&quot;&gt;&lt;span&gt;Ê∑òÂÆù9.5.7‰∏ãËΩΩ&lt;/span&gt;&lt;/a&gt;&lt;br&gt;&lt;/del&gt; &lt;del&gt;ÊÑüË∞¢@hyue418&lt;/del&gt; &lt;del&gt;È°πÁõÆÂú∞ÂùÄÔºö&lt;a href=&quot;https://github.com/hyue418/taobao-11-11&quot;&gt;https://github.com/hyue418/taobao-11-11&lt;/a&gt;&lt;/del&gt; &lt;del&gt;&lt;br&gt;&lt;/del&gt; &lt;del&gt;‰ΩøÁî®ÊñπÊ≥ïÔºö&lt;br&gt;&lt;/del&gt; &lt;del&gt;1„ÄÅ&lt;a href=&quot;https://zhuanlan.zhihu.com/p/90065914&quot;&gt;https://zhuanlan.zhihu.com/p/90065914&lt;/a&gt; Ê†πÊçÆËøô‰∏™ÊñáÁ´†ÂÆâË£ÖÂ•ΩAutoJsÔºåÂ∞Ü‰ª£Á†ÅÂØºËøõÂéªÔºåÁÑ∂ÂêéËÆæÁΩÆÊó†ÈöúÁ¢çÊúçÂä°ËøêË°åÂç≥ÂèØ„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2„ÄÅÁõ¥Êé•ÂÆâË£ÖÊâìÂåÖÂ•ΩÁöÑapkÔºåÂÆâË£ÖÂÆåÊØïËÆæÁΩÆÂ•ΩÊó†ÈöúÁ¢çÊúçÂä°ËøêË°åÂç≥ÂèØ„ÄÇ&lt;br&gt;&lt;/del&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;del&gt;Â¶Ç‰ΩïÂÖ≥Èó≠&lt;br&gt;&lt;/del&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;del&gt;Áõ¥Êé•cutÊéâÂêéÂè∞ËøõÁ®ãÂç≥ÂèØ„ÄÇ&lt;/del&gt; &lt;del&gt;&lt;br&gt;&lt;/del&gt; &lt;del&gt;&lt;br&gt;&lt;/del&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;del&gt;Êõ¥Êñ∞Êó•Âøó&lt;/del&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;del&gt;2020Âπ¥11Êúà4Êó•ÔºöÊõ¥Êñ∞TB„ÄÇ&lt;/del&gt; &lt;del&gt;2020Âπ¥11Êúà2Êó•ÔºöÂæà‰πÖÊ≤°Êõ¥Êñ∞‰∫Ü„ÄÇ„ÄÇËøôÂá†Â§©Ê≤°‰ªÄ‰πàÊó∂Èó¥ÔºåÂ∞±Ê≤°Êêû‰∫ÜÔºåÁÑ∂ÂêéJDÁâàÊú¨ÁöÑÊêû‰∏çÂ•ΩÔºåÂéªÊâæÂÖ∂‰ªñÂ§ß‰Ω¨Âêß„ÄÇ„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥10Êúà26Êó•ÔºöÊñ∞Â¢ûJDÂÖ®Ê∞ëËê•‰∏öÔºõ‰ºòÂåñÈÉ®ÂàÜ‰ª£Á†Å„ÄÇÔºàPSÔºöÊò®Â§©ÁúãÊØîËµõÂéª‰∫ÜÔºåÊ≤°ÁúãÂà∞ÊúâJDËøô‰∏™Ê¥ªÂä®Ôºå‰ªäÂ§©‰∏ãÁè≠ÁÑ∂ÂêéË°•ÂÖÖ‰∫ÜÁ¨¨‰∏Ä‰∏™ÁâàÊú¨„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥10Êúà25Êó•Ôºö‰øÆÊîπbug„ÄÇÔºàÁúãÊØîËµõÁúãÊØîËµõÔºâ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥10Êúà24Êó•Ôºö‰ºòÂåñÈÉ®ÂàÜ‰ª£Á†Å,ÁÑ∂ÂêéÂèëÁé∞‰∫ÜTBÊúâÂØπauto.jsËøõË°åÂà∂Ë£ÅÁöÑÈóÆÈ¢òÔºåÂú®ÁΩëÁªú‰∏äÊâæÂà∞‰∏™ÁâàÊú¨Èò≤Âà∂Ë£Å„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥10Êúà23Êó•Ôºö‰øÆÂ§çËøõÂÖ•Ê∑òÂÆùÁâπ‰ª∑ÁïåÈù¢ÁöÑÊó∂ÂÄôÊó†Ê≥ïÁªßÁª≠ËøêË°å„ÄÇÔºàPS:ÊàëËá™Â∑±Êú¨Êú∫ÊòØÊ≤°ÈóÆÈ¢òÁöÑÔºåÂ¶ÇÊûúÊúâÈóÆÈ¢òÊòéÂ§©ÂÜç‰øÆÂ§çÔºåÂô¢ÂØπ‰∫ÜÊòØ‰ªäÂ§©„ÄÇ„ÄÇ‰∏çÂ∞èÂøÉËøá‰∫Ü‰∏ÄÂ§©‰∫ÜÔºâ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥10Êúà21Êó•ÔºöÂèåÂçÅ‰∏ÄÊ¥ªÂä®ÂºÄÂßã‰∫ÜÔºåÊàëÂèàÊù•‰∫ÜÔºåÔºàÂÖ∂ÂÆûÊòØÊèêÈÜíÊàëÊâçÁü•ÈÅìÁöÑhhhhÔºâ„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;&lt;br&gt;&lt;/del&gt; &lt;del&gt;&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥5Êúà24Êó•ÔºöËøôÊòØ‰∏Ä‰∏™ÂàùÊ≠•ÊµãËØïÁöÑDemoÔºåÁõÆÂâçÂ≠òÂú®ÁöÑÈóÆÈ¢òÊòØÔºåÊúâ‰∫õ‰ªªÂä°ÈúÄË¶Å‰∫∫Â∑•ÁÇπÂáªÔºåÂõ†‰∏∫Âè™Êúâ‰∏Ä‰∏™Â∏êÂè∑Êó†Ê≥ïÈ°æÂèäÂÖ®ÈÉ®ÂèØËÉΩÊÄßÔºåÂêéÁª≠‰ºö‰∏çÊñ≠Êõ¥Êñ∞„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥5Êúà25Êó•ÔºöÂçÅÁÇπ‰∏ãÁè≠ÂõûÊù•ÂºÑ‰∫Ü‰∏ãÔºåÊó©‰∏äÂèëÁªôÊúãÂèãÊµãËØïÂèëÁé∞Êä•Èîô‰∫ÜÔºåÂéüÊù•Âá∫‰∫Ü‰∏™ÈÄªËæëÈóÆÈ¢òÔºåÂä†‰∏™continueÂ∞±ËÉΩËß£ÂÜ≥„ÄÇÁÑ∂ÂêéËá™Â∑±ÂèàË∑ë‰∫ÜÈÅçÔºåÊ∑ªÂä†‰∫Ü‰∏Ä‰∫õÊ¥ªÂä®Êìç‰ΩúÔºåÊòéÂ§©ÁªßÁª≠„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥5Êúà26Êó•ÔºöÂÜçÊ¨°Ë∑ëÂÆå‰∏ÄÈÅçÊ¥ªÂä®Âπ∂‰∏îËß£ÂÜ≥‰∫ÜÈÉ®ÂàÜÈóÆÈ¢òÂíåÂä†ÂÖ•‰∫ÜÊàëÁõÆÂâçÈÅáÂà∞ÁöÑÊ¥ªÂä®È°µÈù¢Êìç‰ΩúÔºåÂõ†‰∏∫ÊØèÂ§©Âè™ËÉΩÊµã‰∏Ä‰∏™Âè∑ÔºåÊîπÂÆå‰πãÂêé‰πüÊ≤°ËøõË°åÁ¨¨‰∫åÊ¨°ÊµãËØï„ÄÇËøôÊ¨°Âä†‰∫ÜÂÜôÊó•Âøó‰ª£Á†ÅÊñπ‰æøË∞ÉËØïÔºåÊúâÂÖ¥Ë∂£ÁöÑÊúãÂèãÂèØ‰ª•ÂéªË∞ÉËØï‰∏ã„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥5Êúà27Êó•Ôºö‰øÆÂ§çÂ∞èbugÔºåÂü∫Êú¨ËÉΩË∑ëÂÆåÂÖ®Á®ãÔºåÂèØËÉΩÊúâ‰∫õÊ¥ªÂä®ÁïåÈù¢Ê≤°Ë¶ÜÁõñÂà∞ÊâÄ‰ª•ÊâãÂä®ÁÇπ‰∏Ä‰∏ã‰πüÂèØ„ÄÇËøòÊúâÂ∞±ÊòØÊò®Â§©ÊâìÂåÖÁöÑÈÇ£‰∏™apkÊâìÂåÖÈîô‰∫ÜÂØºËá¥Áî®‰∏ç‰∫ÜÔºåÊó©‰∏äÊâçÂèëÁé∞„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥5Êúà28Êó•Ôºö‰øÆÂ§çË¥≠Áâ©ËΩ¶bugÔºåÊñ∞Âä†‰∏§‰∏™Ê¥ªÂä®È°µÈù¢Êìç‰Ωú„ÄÇÔºàÊÑüË∞¢ÁΩëÂèã‰ΩøÁî®Âπ∂‰∏îissue~^^Ôºâ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥5Êúà30Êó•ÔºöJDÁöÑÂü∫Êú¨Ê≤°Âï•ÈóÆÈ¢ò‰∫ÜÂêßÔºüÊúâÈóÆÈ¢òÊàë‰ºöÂèäÊó∂‰øÆÊîπ„ÄÇÁÑ∂ÂêéÊàëÂèëÁé∞TB‰πüÂºÄÂßã‰∫Ü„ÄÇ„ÄÇ„ÄÇ‰∫éÊòØÊàëÈ°∫‰æøÊääTBÁöÑ‰πüÂÜôËøõÊù•ÔºåËá≥‰∫éÊ†áÈ¢òÊàëÂ∞±‰∏çÊîπ‰∫ÜÔºåÁî®Êñá‰ª∂Â§πÂàÜÂºÄ„ÄÇËøòÊ≤°ÂÆåÊàêÔºåÂõ†‰∏∫ÂÜôÁùÄÂÜôÁùÄTBÈÇ£‰∏™È°µÈù¢Âá∫Áé∞‰∫ÜBUGÔºåÊ≤°ÂäûÊ≥ïÁªßÁª≠ÂÜô„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥5Êúà30Êó•ÔºöÊ†πÊçÆÁΩëÂèãÊèêËÆÆÊîπ‰∫ÜÁÇπ‰ª£Á†ÅÔºåtbÁöÑ‰πüÂÅö‰∫ÜÁ¨¨‰∏Ä‰∏™ÁâàÊú¨Ôºå‰ΩÜ‰∏çÊòØÂæàÁ®≥ÂÆöÔºàÊàëËá™Â∑±ËØï‰∫Ü‰∏Ä‰∏™Âè∑ËÄåÂ∑≤ÔºâÔºüËøòÊúâJDÈÇ£‰∏™ÈáëÂ∏ÅÂ∞è‰∫∫‰πüÂºÑ‰∫Ü‰∏™ÁâàÊú¨ÔºåÊ≤°ÂÅöÂà∞‰∏ÄËµ∑ÔºåÊúâËÉΩÂäõÁöÑÊúãÂèãÂèØ‰ª•Êï¥Âà∞‰∏ÄËµ∑„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥5Êúà31Êó•ÔºöÂèØËÉΩÁî±‰∫éÊâãÊú∫ÂíåappÁâàÊú¨ÈóÆÈ¢òÔºåÂá∫Áé∞‰∫Ü‰∏çËÉΩÈÄÇÈÖçÁöÑÊÉÖÂÜµÔºåÂ¶ÇÊûúËÑöÊú¨‰∏çËÉΩËá™Â∑±ËøõÂÖ•Âè†ËõãÁ≥ïÁïåÈù¢ÁöÑËØùÂèØ‰ª•ÂÖàËá™Â∑±ÊâìÂºÄappËøõÂÖ•Âà∞Ê¥ªÂä®ÁïåÈù¢„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥6Êúà3Êó•ÔºöËøô‰∏§Â§©ÊúâÁÇπÂøôÂ∞±Ê≤°ÊÄé‰πàÊîπÔºå‰ªäÂ§©Âì¶‰∏çÔºåÊò®Â§©Êó©‰∏ãÁè≠Â∞±Êîπ‰∫Ü‰∏ãÔºåÁÑ∂ÂêéÊ∑ªÂä†‰∫Ü‰∏Ä‰∏™ÁïåÈù¢Ôºå‰ΩÜÊòØÊâìÂåÖ‰πãÂêéËøêË°å‰∏ç‰∫ÜÔºåÊàëÂÖàÊää‰ª£Á†ÅÊèê‰∫§ÂêßÔºåÂÆâË£ÖÂåÖÁöÑÈóÆÈ¢òÂÜçÁúãÔºåÂèØ‰ª•Áî®AutoJSËøêË°å‰ª£Á†Å„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥6Êúà6Êó•ÔºöÂë®Êú´Áª¥Êä§Êõ¥Êñ∞&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥6Êúà10Êó•ÔºöÊõ¥Êñ∞‰∫ÜJDÁöÑÔºåÊúÄËøë‰ΩøÁî®ÊØîËæÉ‰∏çÁ®≥ÂÆöÔºåËÄå‰∏îÂ§ö‰∫Ü‰∏™ÂºÄ‰ºöÂëòÁöÑÊ¥ªÂä®ÔºåÊàëÊ≤°ÊúâÂ∞ÜÈÇ£‰∏™Ê¥ªÂä®ÂÜôËøõÂéªÔºåÂõ†‰∏∫ÊÑüËßâÁõ¥Êé•ÂºÄÂç°ÊØîËæÉ‰∏çÂ•ΩÔºåÂ¶ÇÊûúÊúâÈúÄË¶ÅÁöÑËØùÊàëÂÜçÂÅöÂè¶‰∏ÄÁâàÊúâÂºÄ‰ºöÂëòÊ¥ªÂä®ÁöÑ„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥6Êúà16Êó•ÔºöÊõ¥Êñ∞‰∫ÜJDÂíå‰ºòÂåñ‰∫ÜTBÔºåÊúâ‰∏™ÂÖÑÂºüËØ¥JDÊ≤°ÂäûÊ≥ïËá™Âä®ËøõÂÖ•Âà∞Ê¥ªÂä®ÁïåÈù¢ÔºåÂèØ‰ª•Âú®È¶ñÈ°µËøõÂÖ•Ôºå‰ΩÜÊòØÈ¶ñÈ°µÈÇ£‰∏™ÊàëÂÜô‰∫Ü‰πãÂêéÔºå‰ª£Á†ÅÊòØÊúâÂèçÊò†‰ΩÜÊòØÂ∞±ÊòØÊ≤°ÂäûÊ≥ïËøõÂéªÔºåÊâÄ‰ª•ÊàëÂ∞±‰∏çËß£ÂÜ≥‰∫ÜÔºåÂè™ËÉΩËá™Â∑±ÊâãÂä®ËøõÂÖ•Âà∞Ê¥ªÂä®ÁïåÈù¢‰∫Ü„ÄÇ&lt;br&gt;&lt;/del&gt; &lt;del&gt;2020Âπ¥6Êúà19Êó•ÔºöÊ¥ªÂä®ÁªìÊùü~ÊÑüË∞¢ÊúãÂèã‰ª¨ÁöÑ40‰∏™startÔºå‰ª•ÂêéÊúâÁ±ª‰ººÁöÑÊ¥ªÂä®‰ºöÁªßÁª≠Êõ¥Êñ∞ bye&lt;br&gt;&lt;/del&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jerosoler/Drawflow</title>
      <link>https://github.com/jerosoler/Drawflow</link>
      <description>&lt;p&gt;Simple flow library üñ•Ô∏èüñ±Ô∏è&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/drawflow&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/drawflow?color=green&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/npm/dy/drawflow&quot; alt=&quot;npm&quot;&gt; &lt;img src=&quot;https://img.shields.io/bundlephobia/minzip/drawflow&quot; alt=&quot;npm bundle size&quot;&gt; &lt;a href=&quot;https://github.com/jerosoler/Drawflow/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/jerosoler/Drawflow&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/jerosoler&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fjerosoler&quot; alt=&quot;Twitter URL&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Drawflow&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/jerosoler/Drawflow/raw/master/docs/drawflow.gif&quot; alt=&quot;Demo&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Simple flow library.&lt;/p&gt; 
&lt;p&gt;Drawflow allows you to create data flows easily and quickly.&lt;/p&gt; 
&lt;p&gt;Installing only a javascript library and with four lines of code.&lt;/p&gt; 
&lt;p&gt;‚≠ê &lt;a href=&quot;https://jerosoler.github.io/Drawflow/&quot;&gt;LIVE DEMO&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;üé® &lt;a href=&quot;https://jerosoler.github.io/drawflow-theme-generator/&quot;&gt;THEME EDIT GENERATOR&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#running&quot;&gt;Running&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#mouse-and-keys&quot;&gt;Mouse and Keys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#editor&quot;&gt;Editor&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#editor-options&quot;&gt;Options&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#nodes&quot;&gt;Nodes&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#node-example&quot;&gt;Node example&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#register-node&quot;&gt;Register Node&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#methods&quot;&gt;Methods&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#methods-example&quot;&gt;Methods example&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#events&quot;&gt;Events&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#events-example&quot;&gt;Events example&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#export-/-import&quot;&gt;Export / Import&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#export-example&quot;&gt;Export example&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#example&quot;&gt;Example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Drag Nodes&lt;/li&gt; 
 &lt;li&gt;Multiple Inputs / Outputs&lt;/li&gt; 
 &lt;li&gt;Multiple connections&lt;/li&gt; 
 &lt;li&gt;Delete Nodes and Connections&lt;/li&gt; 
 &lt;li&gt;Add/Delete inputs/outputs&lt;/li&gt; 
 &lt;li&gt;Reroute connections&lt;/li&gt; 
 &lt;li&gt;Data sync on Nodes&lt;/li&gt; 
 &lt;li&gt;Zoom in / out&lt;/li&gt; 
 &lt;li&gt;Clear data module&lt;/li&gt; 
 &lt;li&gt;Support modules&lt;/li&gt; 
 &lt;li&gt;Editor mode &lt;code&gt;edit&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt; or &lt;code&gt;view&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Import / Export data&lt;/li&gt; 
 &lt;li&gt;Events&lt;/li&gt; 
 &lt;li&gt;Mobile support&lt;/li&gt; 
 &lt;li&gt;Vanilla javascript (No dependencies)&lt;/li&gt; 
 &lt;li&gt;NPM&lt;/li&gt; 
 &lt;li&gt;Vue Support component nodes &amp;amp;&amp;amp; Nuxt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Download or clone repository and copy the dist folder, CDN option Or npm.&lt;/p&gt; 
&lt;h4&gt;Clone&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;git clone https://github.com/jerosoler/Drawflow.git&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;CDN&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/jerosoler/Drawflow/dist/drawflow.min.css&quot;&amp;gt;
&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/jerosoler/Drawflow/dist/drawflow.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
# or
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/drawflow@0.0.45/dist/drawflow.min.css&quot; /&amp;gt;
&amp;lt;script src=&quot;https://unpkg.com/drawflow@0.0.45/dist/drawflow.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;NPM&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm i drawflow
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Typescript&lt;/h3&gt; 
&lt;p&gt;External package. More info &lt;a href=&quot;https://github.com/jerosoler/Drawflow/issues/119&quot;&gt;#119&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install -D @types/drawflow
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Import&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import Drawflow from &#39;drawflow&#39;
import styleDrawflow from &#39;drawflow/dist/drawflow.min.css&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Require&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var Drawflow = require(&#39;drawflow&#39;)
var styleDrawflow = require(&#39;drawflow/dist/drawflow.min.css&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create the parent element of &lt;strong&gt;drawflow&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&quot;drawflow&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running&lt;/h3&gt; 
&lt;p&gt;Start drawflow.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var id = document.getElementById(&quot;drawflow&quot;);
const editor = new Drawflow(id);
editor.start();
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Object&lt;/td&gt; 
   &lt;td&gt;Name of module&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;render&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Object&lt;/td&gt; 
   &lt;td&gt;It&#39;s for &lt;code&gt;Vue&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Object&lt;/td&gt; 
   &lt;td&gt;It&#39;s for &lt;code&gt;Vue&lt;/code&gt;. The parent Instance&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;For vue 2 example.&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import Vue from &#39;vue&#39;

// Pass render Vue
this.editor = new Drawflow(id, Vue, this);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;For vue 3 example.&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { h, getCurrentInstance, render } from &#39;vue&#39;
const Vue = { version: 3, h, render };

this.editor = new Drawflow(id, Vue);
// Pass render Vue 3 Instance
const internalInstance = getCurrentInstance()
editor.value = new Drawflow(id, Vue, internalInstance.appContext.app._context);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nuxt&lt;/h3&gt; 
&lt;p&gt;Add to &lt;code&gt;nuxt.config.js&lt;/code&gt; file&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;build: {
    transpile: [&#39;drawflow&#39;],
    ...
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Mouse and Keys&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;del key&lt;/code&gt; to remove element.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Right click&lt;/code&gt; to show remove options (Mobile long press).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Left click press&lt;/code&gt; to move editor or node selected.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ctrl + Mouse Wheel&lt;/code&gt; Zoom in/out (Mobile pinch).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Editor&lt;/h2&gt; 
&lt;p&gt;You can change the editor to &lt;strong&gt;fixed&lt;/strong&gt; type to block. Only editor can be moved. You can put it before start.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;editor.editor_mode = &#39;edit&#39;; // Default
editor.editor_mode = &#39;fixed&#39;; // Only scroll
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also adjust the zoom values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;editor.zoom_max = 1.6;
editor.zoom_min = 0.5;
editor.zoom_value = 0.1;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Editor options&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;reroute&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Boolean&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Active reroute&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;reroute_fix_curvature&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Boolean&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Fix adding points&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;curvature&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
   &lt;td&gt;Curvature&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;reroute_curvature_start_end&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
   &lt;td&gt;Curvature reroute first point and las point&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;reroute_curvature&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
   &lt;td&gt;Curvature reroute&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;reroute_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;Width of reroute&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_path&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;Width of line&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;force_first_input&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Boolean&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Force the first input to drop the connection on top of the node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;editor_mode&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Text&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;edit&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;edit&lt;/code&gt; for edit, &lt;code&gt;fixed&lt;/code&gt; for nodes fixed but their input fields available, &lt;code&gt;view&lt;/code&gt; for view only&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zoom&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Default zoom&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zoom_max&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;1.6&lt;/td&gt; 
   &lt;td&gt;Default zoom max&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zoom_min&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
   &lt;td&gt;Default zoom min&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zoom_value&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;0.1&lt;/td&gt; 
   &lt;td&gt;Default zoom value update&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zoom_last_value&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Default zoom last value&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;draggable_inputs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Boolean&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Drag nodes on click inputs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;useuuid&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Boolean&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Use UUID as node ID instead of integer index. Only affect newly created nodes, do not affect imported nodes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Reroute&lt;/h3&gt; 
&lt;p&gt;Active reroute connections. Use before &lt;code&gt;start&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;editor.reroute = true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create point with doble click on line connection. Doble click on point for remove.&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;Separate your flows in different editors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;editor.addModule(&#39;nameNewModule&#39;);
editor.changeModule(&#39;nameNewModule&#39;);
editor.removeModule(&#39;nameModule&#39;);
// Default Module is Home
editor.changeModule(&#39;Home&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;RemovedModule&lt;/code&gt; if it is in the same module redirects to the &lt;code&gt;Home&lt;/code&gt; module&lt;/p&gt; 
&lt;h2&gt;Nodes&lt;/h2&gt; 
&lt;p&gt;Adding a node is simple.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;editor.addNode(name, inputs, outputs, posx, posy, class, data, html);
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;text&lt;/td&gt; 
   &lt;td&gt;Name of module&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;inputs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;Number of de inputs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;outputs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;Number of de outputs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pos_x&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;Position on start node left&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pos_y&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;Position on start node top&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;class&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;text&lt;/td&gt; 
   &lt;td&gt;Added classname to de node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;data&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;json&lt;/td&gt; 
   &lt;td&gt;Data passed to node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;text&lt;/td&gt; 
   &lt;td&gt;HTML drawn on node or &lt;code&gt;name&lt;/code&gt; of register node.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;typenode&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;boolean &amp;amp; text&lt;/td&gt; 
   &lt;td&gt;Default &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; for Object HTML, &lt;code&gt;vue&lt;/code&gt; for vue&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You can use the attribute &lt;code&gt;df-*&lt;/code&gt; in &lt;strong&gt;inputs, textarea or select&lt;/strong&gt; to synchronize with the node data and &lt;strong&gt;contenteditable&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Atrributs multiples parents support &lt;code&gt;df-*-*...&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Node example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var html = `
&amp;lt;div&amp;gt;&amp;lt;input type=&quot;text&quot; df-name&amp;gt;&amp;lt;/div&amp;gt;
`;
var data = { &quot;name&quot;: &#39;&#39; };

editor.addNode(&#39;github&#39;, 0, 1, 150, 300, &#39;github&#39;, data, html);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Register Node&lt;/h3&gt; 
&lt;p&gt;it&#39;s possible register nodes for reuse.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var html = document.createElement(&quot;div&quot;);
html.innerHTML =  &quot;Hello Drawflow!!&quot;;
editor.registerNode(&#39;test&#39;, html);
// Use
editor.addNode(&#39;github&#39;, 0, 1, 150, 300, &#39;github&#39;, data, &#39;test&#39;, true);

// For vue
import component from &#39;~/components/testcomponent.vue&#39;
editor.registerNode(&#39;name&#39;, component, props, options);
// Use for vue
editor.addNode(&#39;github&#39;, 0, 1, 150, 300, &#39;github&#39;, data, &#39;name&#39;, &#39;vue&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;text&lt;/td&gt; 
   &lt;td&gt;Name of module registered.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;html&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;text&lt;/td&gt; 
   &lt;td&gt;HTML to drawn or &lt;code&gt;vue&lt;/code&gt; component.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;props&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;json&lt;/td&gt; 
   &lt;td&gt;Only for &lt;code&gt;vue&lt;/code&gt;. Props of component. &lt;code&gt;Not Required&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;options&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;json&lt;/td&gt; 
   &lt;td&gt;Only for &lt;code&gt;vue&lt;/code&gt;. Options of component. &lt;code&gt;Not Required&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Methods&lt;/h2&gt; 
&lt;p&gt;Other available functions.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Mehtod&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zoom_in()&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Increment zoom +0.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zoom_out()&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Decrement zoom -0.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;getNodeFromId(id)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Get Info of node. Ex: id: &lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;getNodesFromName(name)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Return Array of nodes id. Ex: name: &lt;code&gt;telegram&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;removeNodeId(id)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Remove node. Ex id: &lt;code&gt;node-x&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;updateNodeDataFromId&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Update data element. Ex: &lt;code&gt;5, { name: &#39;Drawflow&#39; }&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;addNodeInput(id)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Add input to node. Ex id: &lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;addNodeOutput(id)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Add output to node. Ex id: &lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;removeNodeInput(id, input_class)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Remove input to node. Ex id: &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;input_2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;removeNodeOutput(id, output_class)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Remove output to node. Ex id: &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;output_2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;addConnection(id_output, id_input, output_class, input_class)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Add connection. Ex: &lt;code&gt;15,16,&#39;output_1&#39;,&#39;input_1&#39;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;removeSingleConnection(id_output, id_input, output_class, input_class)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Remove connection. Ex: &lt;code&gt;15,16,&#39;output_1&#39;,&#39;input_1&#39;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;updateConnectionNodes(id)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Update connections position from Node Ex id: &lt;code&gt;node-x&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;removeConnectionNodeId(id)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Remove node connections. Ex id: &lt;code&gt;node-x&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;getModuleFromNodeId(id)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Get name of module where is the id. Ex id: &lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clearModuleSelected()&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Clear data of module selected&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Clear all data of all modules and modules remove.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Methods example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;editor.removeNodeId(&#39;node-4&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;You can detect events that are happening.&lt;/p&gt; 
&lt;p&gt;List of available events:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Event&lt;/th&gt; 
   &lt;th&gt;Return&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nodeCreated&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of Node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nodeRemoved&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of Node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nodeDataChanged&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of Node df-* attributes changed.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nodeSelected&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of Node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nodeUnselected&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Unselect node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nodeMoved&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of Node&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;connectionStart&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;{ output_id, output_class }&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of nodes and ouput selected&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;connectionCancel&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Connection Cancel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;connectionCreated&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;{ output_id, input_id, output_class, input_class }&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&#39;s of nodes and ouput/input selected&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;connectionRemoved&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;{ output_id, input_id, output_class, input_class }&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&#39;s of nodes and ouput/input selected&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;connectionSelected&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;{ output_id, input_id, output_class, input_class }&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&#39;s of nodes and ouput/input selected&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;connectionUnselected&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Unselect connection&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;addReroute&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of Node output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;removeReroute&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of Node output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;rerouteMoved&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;id&lt;/code&gt; of Node output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;moduleCreated&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;name&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;name&lt;/code&gt; of Module&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;moduleChanged&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;name&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;name&lt;/code&gt; of Module&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;moduleRemoved&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;name&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;name&lt;/code&gt; of Module&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;click&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;event&lt;/td&gt; 
   &lt;td&gt;Click event&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clickEnd&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;event&lt;/td&gt; 
   &lt;td&gt;Once the click changes have been made&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;contextmenu&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;event&lt;/td&gt; 
   &lt;td&gt;Click second button mouse event&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;mouseMove&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;{ x, y }&lt;/td&gt; 
   &lt;td&gt;Position&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;keydown&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;event&lt;/td&gt; 
   &lt;td&gt;Keydown event&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zoom&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;zoom_level&lt;/td&gt; 
   &lt;td&gt;Level of zoom&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;translate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;{ x, y }&lt;/td&gt; 
   &lt;td&gt;Position translate editor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;import&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;import&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Finish import&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;export&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;data&lt;/td&gt; 
   &lt;td&gt;Data export&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Events example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;editor.on(&#39;nodeCreated&#39;, function(id) {
  console.log(&quot;Node created &quot; + id);
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Export / Import&lt;/h2&gt; 
&lt;p&gt;You can export and import your data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var exportdata = editor.export();
editor.import(exportdata);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Export example&lt;/h3&gt; 
&lt;p&gt;Example of exported data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;drawflow&quot;: {
        &quot;Home&quot;: {
            &quot;data&quot;: {}
        },
        &quot;Other&quot;: {
            &quot;data&quot;: {
                &quot;16&quot;: {
                    &quot;id&quot;: 16,
                    &quot;name&quot;: &quot;facebook&quot;,
                    &quot;data&quot;: {},
                    &quot;class&quot;: &quot;facebook&quot;,
                    &quot;html&quot;: &quot;\n        
\n          
 Facebook Message
\n        
\n        &quot;,
                    &quot;inputs&quot;: {},
                    &quot;outputs&quot;: {
                        &quot;output_1&quot;: {
                            &quot;connections&quot;: [
                                {
                                    &quot;node&quot;: &quot;17&quot;,
                                    &quot;output&quot;: &quot;input_1&quot;
                                }
                            ]
                        }
                    },
                    &quot;pos_x&quot;: 226,
                    &quot;pos_y&quot;: 138
                },
                &quot;17&quot;: {
                    &quot;id&quot;: 17,
                    &quot;name&quot;: &quot;log&quot;,
                    &quot;data&quot;: {},
                    &quot;class&quot;: &quot;log&quot;,
                    &quot;html&quot;: &quot;\n            
\n              
 Save log file
\n            
\n            &quot;,
                    &quot;inputs&quot;: {
                        &quot;input_1&quot;: {
                            &quot;connections&quot;: [
                                {
                                    &quot;node&quot;: &quot;16&quot;,
                                    &quot;input&quot;: &quot;output_1&quot;
                                }
                            ]
                        }
                    },
                    &quot;outputs&quot;: {},
                    &quot;pos_x&quot;: 690,
                    &quot;pos_y&quot;: 129
                }
            }
        }
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;View the complete example in folder &lt;a href=&quot;https://github.com/jerosoler/Drawflow/tree/master/docs&quot;&gt;docs&lt;/a&gt;.&lt;br&gt; There is also an &lt;a href=&quot;https://raw.githubusercontent.com/jerosoler/Drawflow/master/docs/drawflow-element.html&quot;&gt;example&lt;/a&gt; how to use Drawflow in a custom element. (based on &lt;a href=&quot;https://lit-element.polymer-project.org&quot;&gt;LitElement&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>josdejong/jsoneditor</title>
      <link>https://github.com/josdejong/jsoneditor</link>
      <description>&lt;p&gt;A web-based tool to view, edit, format, and validate JSON&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JSON Editor&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/jsoneditor&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/jsoneditor.svg?sanitize=true&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/jsoneditor&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/jsoneditor.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/josdejong/jsoneditor/pulse&quot;&gt;&lt;img src=&quot;https://img.shields.io/maintenance/yes/2021.svg?sanitize=true&quot; alt=&quot;Maintenance&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/josdejong/jsoneditor/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/josdejong/jsoneditor.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bgithub.com%2Fjosdejong%2Fjsoneditor?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjosdejong%2Fjsoneditor.svg?type=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;JSON Editor is a web-based tool to view, edit, format, and validate JSON. It has various modes such as a tree editor, a code editor, and a plain text editor.&lt;/p&gt; 
&lt;p&gt;The editor can be used as a component in your own web application. The library can be loaded as CommonJS module, AMD module, or as a regular javascript file.&lt;/p&gt; 
&lt;p&gt;Supported browsers: Chrome, Firefox, Safari, Opera, Edge, Internet Explorer 11.&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;json editor&quot; src=&quot;https://raw.github.com/josdejong/jsoneditor/master/misc/jsoneditor.png&quot;&gt; &amp;nbsp; &lt;img alt=&quot;code editor&quot; src=&quot;https://raw.github.com/josdejong/jsoneditor/master/misc/codeeditor.png&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Cross browser testing for JSONEditor is generously provided by &lt;a href=&quot;https://www.browserstack.com&quot; target=&quot;_blank&quot;&gt;BrowserStack&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;BrowserStack&quot; src=&quot;https://raw.github.com/josdejong/jsoneditor/master/misc/browserstack.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;JSONEditor has various modes, with the following features.&lt;/p&gt; 
&lt;h3&gt;Tree mode&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change, add, move, remove, and duplicate fields and values.&lt;/li&gt; 
 &lt;li&gt;Sort arrays and objects.&lt;/li&gt; 
 &lt;li&gt;Transform JSON using &lt;a href=&quot;http://jmespath.org/&quot;&gt;JMESPath&lt;/a&gt; queries.&lt;/li&gt; 
 &lt;li&gt;Colorized code.&lt;/li&gt; 
 &lt;li&gt;Color picker.&lt;/li&gt; 
 &lt;li&gt;Search &amp;amp; highlight text in the tree view.&lt;/li&gt; 
 &lt;li&gt;Undo and redo all actions.&lt;/li&gt; 
 &lt;li&gt;JSON schema validation (powered by &lt;a href=&quot;https://github.com/epoberezkin/ajv&quot;&gt;ajv&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Code mode&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Colorized code (powered by &lt;a href=&quot;https://ace.c9.io&quot;&gt;Ace&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Inspect JSON (powered by &lt;a href=&quot;https://ace.c9.io&quot;&gt;Ace&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Format and compact JSON.&lt;/li&gt; 
 &lt;li&gt;Repair JSON.&lt;/li&gt; 
 &lt;li&gt;JSON schema validation (powered by &lt;a href=&quot;https://github.com/epoberezkin/ajv&quot;&gt;ajv&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Text mode&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Format and compact JSON.&lt;/li&gt; 
 &lt;li&gt;Repair JSON.&lt;/li&gt; 
 &lt;li&gt;JSON schema validation (powered by &lt;a href=&quot;https://github.com/epoberezkin/ajv&quot;&gt;ajv&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Preview mode&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Handle large JSON documents up to 500 MiB.&lt;/li&gt; 
 &lt;li&gt;Transform JSON using &lt;a href=&quot;http://jmespath.org/&quot;&gt;JMESPath&lt;/a&gt; queries.&lt;/li&gt; 
 &lt;li&gt;Format and compact JSON.&lt;/li&gt; 
 &lt;li&gt;Repair JSON.&lt;/li&gt; 
 &lt;li&gt;JSON schema validation (powered by &lt;a href=&quot;https://github.com/epoberezkin/ajv&quot;&gt;ajv&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/josdejong/jsoneditor/tree/master/docs/api.md&quot;&gt;API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/josdejong/jsoneditor/tree/master/docs/usage.md&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/josdejong/jsoneditor/tree/master/docs/shortcut_keys.md&quot;&gt;Shortcut keys&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josdejong/jsoneditor/tree/master/examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josdejong/jsoneditor&quot;&gt;Source&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josdejong/jsoneditor/raw/master/HISTORY.md&quot;&gt;History&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;with npm (recommended):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install jsoneditor
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that to use JSONEditor in Internet Explorer 11, it is necessary to load a polyfill for &lt;code&gt;Promise&lt;/code&gt; in your application.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Alternatively, you can use another JavaScript package manager like &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;https://yarnpkg.com/&lt;/a&gt;, or a CDN such as &lt;a href=&quot;https://cdnjs.com/&quot;&gt;https://cdnjs.com/&lt;/a&gt; or &lt;a href=&quot;https://www.jsdelivr.com/&quot;&gt;https://www.jsdelivr.com/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Use&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that in the following example, you&#39;ll have to change the urls &lt;code&gt;jsoneditor/dist/jsoneditor.min.js&lt;/code&gt; and &lt;code&gt;jsoneditor/dist/jsoneditor.min.css&lt;/code&gt; to match the place where you&#39;ve downloaded the library, or fill in the URL of the CDN you&#39;re using.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;!-- when using the mode &quot;code&quot;, it&#39;s important to specify charset utf-8 --&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;

    &amp;lt;link href=&quot;jsoneditor/dist/jsoneditor.min.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&amp;gt;
    &amp;lt;script src=&quot;jsoneditor/dist/jsoneditor.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&quot;jsoneditor&quot; style=&quot;width: 400px; height: 400px;&quot;&amp;gt;&amp;lt;/div&amp;gt;

    &amp;lt;script&amp;gt;
        // create the editor
        const container = document.getElementById(&quot;jsoneditor&quot;)
        const options = {}
        const editor = new JSONEditor(container, options)

        // set json
        const initialJson = {
            &quot;Array&quot;: [1, 2, 3],
            &quot;Boolean&quot;: true,
            &quot;Null&quot;: null,
            &quot;Number&quot;: 123,
            &quot;Object&quot;: {&quot;a&quot;: &quot;b&quot;, &quot;c&quot;: &quot;d&quot;},
            &quot;String&quot;: &quot;Hello World&quot;
        }
        editor.set(initialJson)

        // get json
        const updatedJson = editor.get()
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;The code of the JSON Editor is located in the folder &lt;code&gt;./src&lt;/code&gt;. To build jsoneditor:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build JSON Editor:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will generate the files &lt;code&gt;./jsoneditor.js&lt;/code&gt;, &lt;code&gt;./jsoneditor.css&lt;/code&gt;, and&lt;br&gt; minified versions in the dist of the project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To automatically build when a source file has changed:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will update &lt;code&gt;./jsoneditor.js&lt;/code&gt; and &lt;code&gt;./jsoneditor.css&lt;/code&gt; in the dist folder on every change, but it will &lt;strong&gt;NOT&lt;/strong&gt; update the minified versions as that&#39;s an expensive operation.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Test&lt;/h2&gt; 
&lt;p&gt;Run unit tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run code linting (&lt;a href=&quot;https://standardjs.com/&quot;&gt;JavaScript Standard Style&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom builds&lt;/h2&gt; 
&lt;p&gt;The source code of JSONEditor consists of CommonJS modules. JSONEditor can be bundled in a customized way using a module bundler like &lt;a href=&quot;http://browserify.org/&quot;&gt;browserify&lt;/a&gt; or &lt;a href=&quot;http://webpack.github.io/&quot;&gt;webpack&lt;/a&gt;. First, install all dependencies of jsoneditor:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To create a custom bundle of the source code using browserify:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;browserify ./index.js -o ./jsoneditor.custom.js -s JSONEditor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Ace editor, used in mode &lt;code&gt;code&lt;/code&gt;, accounts for about one third of the total size of the library. To exclude the Ace editor from the bundle:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;browserify ./index.js -o ./jsoneditor.custom.js -s JSONEditor -x brace -x brace/mode/json -x brace/ext/searchbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To minify the generated bundle, use &lt;a href=&quot;https://github.com/mishoo/UglifyJS2&quot;&gt;uglifyjs&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uglifyjs ./jsoneditor.custom.js -o ./jsoneditor.custom.min.js -m -c
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>VirgilClyne/iRingo</title>
      <link>https://github.com/VirgilClyne/iRingo</link>
      <description>&lt;p&gt;Ëß£ÈîÅÂÆåÊï¥ÁöÑÔ£ø AppleÂäüËÉΩÂíåÈõÜÊàêÊúçÂä°&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iRingo&lt;/h1&gt; 
&lt;p&gt;Ëß£ÈîÅÂÆåÊï¥ÁöÑAppleÊêúÁ¥¢ÂäüËÉΩÂíåÈõÜÊàêÊúçÂä°&lt;br&gt; macOS 12.0.1, iOS 15.0.2, iOS 14.8 ÊµãËØïÈÄöËøá&lt;br&gt; ÈúÄË¶ÅÂêØÁî®MitMÂäüËÉΩ&lt;br&gt; ‰ª•‰∏ãÂäüËÉΩÂèäÊ®°Âùó‰∫íÊó†‰æùËµñÔºåÂùáÂèØÂçïÁã¨ÊàñÊê≠ÈÖç‰ΩøÁî®&lt;/p&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÁõÆÂΩï&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;#General#%20Configuration&quot;&gt;ÊïôÁ®ã:ÈÄöÁî®ÈÖçÁΩÆ&lt;/a&gt; (todo)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/#Location%20Services&quot;&gt;ÂÆö‰ΩçÊúçÂä°&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/#Siri%20&amp;amp;%20Search&quot;&gt;Siri‰∏éÊêúÁ¥¢&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/#Apple%20Maps&quot;&gt;Apple Maps&lt;/a&gt; (todo)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/#Apple%20News&quot;&gt;Apple News&lt;/a&gt; (üößÊµãËØï‰∏≠ÔºåÊúâÈóÆÈ¢òËØ∑ÂèçÈ¶à)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;a id=&quot;General Configuration&quot;&gt; ÊïôÁ®ã:ÈÄöÁî®ÈÖçÁΩÆ &lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;todo&lt;br&gt; ‰æãÂ¶ÇÔºåÂêåÊó∂ÂêØÁî®‰ª•‰∏ã‰∏â‰∏™Ê®°Âùó:&lt;br&gt; &lt;code&gt;Âú∞Âå∫Ê£ÄÊµã‰∏∫üá∫üá∏US&lt;/code&gt; + &lt;code&gt;‰øÆÊîπApple Maps‰∏∫üá®üá≥CN&lt;/code&gt; + &lt;code&gt;‰øÆÊîπApple News‰∏∫üá∫üá∏US&lt;/code&gt;&lt;br&gt; ÊïàÊûú:Âú∞Âå∫Ê£ÄÊµã‰∏∫USÔºåApple Maps‰∏∫È´òÂæ∑Âú∞ÂõæÔºåApple NewsÂèØÁî®&lt;br&gt; (ÊúâSIMÂç°ÁöÑËÆæÂ§áÔºåÂ¶ÇiPhoneÔºåÁ¨¨‰∏ÄÊ¨°ÊâìÂºÄApple NewsÂâçÔºåÈúÄË¶ÅÂºÄÂêØÈ£ûË°åÊ®°ÂºèË∑≥ËøáSIMÂç°Ê£ÄÊµãÔºåËøõÂÖ•APPÂêéÂèØÂÖ≥Èó≠È£ûË°åÊ®°ÂºèÊ≠£Â∏∏‰ΩøÁî®)&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;a id=&quot;Location Services&quot;&gt; ÂÆö‰ΩçÊúçÂä° &lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ÁÆÄ‰ªã:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ÂêØÁî®Ê®°ÂùóÂêéÁõ¥ËøûÂç≥ÂèØ‰øÆÊîπËá≥ÂØπÂ∫îÂú∞Âå∫ÔºåÊó†ÈúÄÊõ¥Êîπ‰ª£ÁêÜÁ∫øË∑Ø„ÄÅÂºÄÂêØÈ£ûË°åÊ®°Âºè„ÄÅÂÖ≥Èó≠ÂÆö‰Ωç„ÄÅÊõ¥ÊîπÂõΩÂÆ∂Âú∞Âå∫ËØ≠Ë®ÄÁ≠â&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÂÆâË£ÖÈìæÊé•:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Loon: 
    &lt;ul&gt; 
     &lt;li&gt;‰øÆÊîπÂú∞Âå∫Ê£ÄÊµã‰∏∫üá∫üá∏US:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/plugin/Geo_Services.plugin?raw=true&quot; title=&quot;Ô£ø Redirect Geo Services to üá∫üá∏US&quot;&gt;Geo_Services.plugin&lt;/a&gt; (Author:@Tartarus2014)&lt;/li&gt; 
     &lt;li&gt;‰øÆÊîπÂú∞Âå∫Ê£ÄÊµã‰∏∫üá®üá≥CN:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/plugin/Geo_Services_CN.plugin?raw=true&quot; title=&quot;Ô£ø Redirect Geo Services to üá®üá≥CN&quot;&gt;Geo_Services_CN.plugin&lt;/a&gt; (Author:@Tartarus2014)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Quantumult X: 
    &lt;ul&gt; 
     &lt;li&gt;‰øÆÊîπÂú∞Âå∫Ê£ÄÊµã‰∏∫üá∫üá∏US:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/conf/Geo_Services.conf?raw=true&quot; title=&quot;Ô£ø Redirect Geo Services to üá∫üá∏US&quot;&gt;Geo_Services.conf&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;‰øÆÊîπÂú∞Âå∫Ê£ÄÊµã‰∏∫üá®üá≥CN:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/conf/Geo_Services_CN.conf?raw=true&quot; title=&quot;Ô£ø Redirect Geo Services to üá®üá≥CN&quot;&gt;Geo_Services_CN.conf&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Surge: 
    &lt;ul&gt; 
     &lt;li&gt;‰øÆÊîπÂú∞Âå∫Ê£ÄÊµã‰∏∫üá∫üá∏US:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Geo_Services.sgmodule?raw=true&quot; title=&quot;Ô£ø Redirect Geo Services to üá∫üá∏US&quot;&gt;Geo_Services.sgmodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;‰øÆÊîπÂú∞Âå∫Ê£ÄÊµã‰∏∫üá®üá≥CN:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Geo_Services_CN.sgmodule?raw=true&quot; title=&quot;Ô£ø Redirect Geo Services to üá®üá≥CN&quot;&gt;Geo_Services_CN.sgmodule&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÈúÄËß¶Âèë‰∏ÄÊ¨°ÂÆö‰ΩçÊ£ÄÊµã(&lt;code&gt;com.apple.geod&lt;/code&gt;ËøõÁ®ãÁöÑ&lt;code&gt;configuration.ls.apple.com&lt;/code&gt;, &lt;code&gt;gspe1-ssl.ls.apple.com&lt;/code&gt;‰∫åËøûËÆøÈóÆ)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÂèØÈÄöËøáÈáçÂêØ„ÄÅÂÆåÂÖ®ÈáçÂºÄÂú∞ÂõæÂ∫îÁî®„ÄÅÂºÄÂÖ≥ÂÆö‰ΩçÊúçÂä°Á≠âËß¶ÂèëÊ£ÄÊµã&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;macOS/iOSÈÄÇÁî®&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;‰ΩúÁî®:&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Êõ¥ÊîπÂú∞Âå∫Ê£ÄÊµãËá≥Ê®°ÂùóÊåáÂÆöÂú∞Âå∫&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ÂâØ‰ΩúÁî®:‰ºöÂêåÊó∂ÂΩ±ÂìçApple MapsÂíåApple NewsÁ≠âÁöÑÂú∞Âå∫Âà§Êñ≠(ÂèØÈÄöËøáÁõ∏Â∫îÁöÑÊ®°ÂùóÂçïÁã¨‰øÆÊîπ)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ÊøÄÊ¥ªApple NewsÊó∂‰∏çÈúÄË¶ÅÂÖ®Â±Ä‰ª£ÁêÜ„ÄÅÂÖ≥Èó≠ÂÆö‰ΩçÊúçÂä° (IPÊ£ÄÊµã‰∏çÂú®Ê≠§Ê®°ÂùóËß£ÂÜ≥ËåÉÂõ¥)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ÊøÄÊ¥ª„ÄåÊù•Ëá™APPLEÁöÑÂÜÖÂÆπ\Êù•Ëá™APPLEÁöÑÂª∫ËÆÆ\SiriÂª∫ËÆÆ„Äç(‰∏çÈúÄË¶Å‰øùÊåÅ&lt;code&gt;Geo_Services.sgmodule&lt;/code&gt;‰∏ÄÁõ¥ÂêØÁî®)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ê≥®:Êú¨Ê®°ÂùóÂè™‰øÆÊîπÂÆö‰ΩçÊúçÂä°Ôºå‰∏ç‰øÆÊîπÂÖ∂‰ªñËøõÁ®ã„ÄÅÈìæÊé•„ÄÅÂüüÂêç„ÄÅÁ∫øË∑ØËßÑÂàô(Â¶Ç:SiriÂª∫ËÆÆ,AppleMap,Apple NewsÁ≠âÊúçÂä°)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;a id=&quot;Siri &amp;amp; Search&quot;&gt; Siri‰∏éÊêúÁ¥¢ &lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ÁÆÄ‰ªã:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;‰øùÊåÅÊ®°ÂùóÂêØÁî®,Âç≥ÂèØÊ≠£Â∏∏‰ΩøÁî®„ÄåÊù•Ëá™APPLEÁöÑÂÜÖÂÆπ\Êù•Ëá™APPLEÁöÑÂª∫ËÆÆ\SiriÂª∫ËÆÆ„Äç&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÂÆâË£ÖÈìæÊé•:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Loon: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/plugin/Siri_Suggestions.plugin?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions.plugin&lt;/a&gt; (Author:@Tartarus2014) (ËØ•Êèí‰ª∂ÈúÄË¶ÅÂåπÈÖç‰ª£ÁêÜÁ≠ñÁï•ÁªÑ)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Quantumult X: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/conf/Siri_Suggestions.conf?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions.conf&lt;/a&gt; (Author:Telegram:@YiEwha)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Surge: 
    &lt;ul&gt; 
     &lt;li&gt;‰ªÖÈÄÇÁî®‰∫éiOS/iPadOSÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Siri_Suggestions_noRuleSet.sgmodule?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions_noRuleSet.sgmodule&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;macOSÁî®ÂüüÂêçÈõÜ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/RuleSet/Wikipedia_for_Look_Up.list?raw=true&quot; title=&quot;Wikipedia for Look Up&quot;&gt;Wikipedia_for_Look_Up.list&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;Ê≠§ÂüüÂêçÈõÜÂè™‰ΩúÁî®‰∫émacOSÁöÑÁª¥Âü∫ÁôæÁßëÊêúÁ¥¢ÈõÜÊàê,iOS/iPadOS‰∏çÈúÄË¶ÅÊ≠§ÂüüÂêçÈõÜ„ÄÇ&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;macOS/iOSÈÄöÁî®Ê®°Âùó: 
      &lt;ul&gt; 
       &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫PROXYÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Siri_Suggestions.sgmodule?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions.sgmodule&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫ProxyÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Siri_Suggestions_for_Proxy.sgmodule?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions_for_Proxy.sgmodule&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫üåëProxyÁöÑÊ®°Âùó(Â¶Ç:DivineEngine):&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Siri_Suggestions_for_DivineEngine.sgmodule?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions_for_DivineEngine.sgmodule&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫AppleÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Siri_Suggestions_for_Apple.sgmodule?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions_for_Apple.sgmodule&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫üçéAppleÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Siri_Suggestions_for_Apple_icon.sgmodule?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions_for_Apple_icon.sgmodule&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫üçé ËãπÊûúÊúçÂä°ÁöÑÊ®°Âùó(Â¶Ç:ACL4SSR):&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Siri_Suggestions_for_ACL4SSR.sgmodule?raw=true&quot; title=&quot;Ô£ø Enable Siri Suggestions&quot;&gt;Siri_Suggestions_for_ACL4SSR.sgmodule&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;macOS/iOSÈÄÇÁî®&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Â¶ÇÂêØÁî®Êú¨Ê®°ÂùóÂêéÊú™Á´ãÂàªÁîüÊïàÔºåÂèØÈááÁî®‰∏ãÂàóÊñπÊ≥ïÊâãÂä®Âà∑Êñ∞ÊøÄÊ¥ª„ÄåSiriÂª∫ËÆÆ„Äç:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;macOS‰∏äÂÖ≥Èó≠ÂÜçÂºÄÂêØ&lt;code&gt;Á≥ªÁªüÂÅèÂ•ΩËÆæÁΩÆ&lt;/code&gt;-&lt;code&gt;ËÅöÁÑ¶&lt;/code&gt;-&lt;code&gt;SiriÂª∫ËÆÆ&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;iOS‰∏äÂÖ≥Èó≠ÂÜçÂºÄÂêØ&lt;code&gt;ËÆæÁΩÆ&lt;/code&gt;-&lt;code&gt;Siri‰∏éÊêúÁ¥¢&lt;/code&gt;-&lt;code&gt;Êù•Ëá™APPLEÁöÑÂÜÖÂÆπ&lt;/code&gt;Âíå&lt;code&gt;Êù•Ëá™APPLEÁöÑÂª∫ËÆÆ&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Êõ¥Êîπ&lt;code&gt;ËÆæÁΩÆ&lt;/code&gt;-&lt;code&gt;ÈÄöÁî®&lt;/code&gt;-&lt;code&gt;ËØ≠Ë®Ä‰∏éÂú∞Âå∫&lt;/code&gt;-&lt;code&gt;Âú∞Âå∫&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;ÂêØÁî®&lt;code&gt;Geo_Services.sgmodule&lt;/code&gt;Ê®°ÂùóÂπ∂ÊâìÂºÄ&lt;code&gt;Apple Maps&lt;/code&gt;ÔºåÂà∑Êñ∞Âú∞ÂõæÂêéÂÜçÂÖ≥Èó≠&lt;code&gt;Geo_Services.sgmodule&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Á≠âÂæÖÁ∫¶ÂçäÂ∞èÊó∂Ôºå„ÄåSiriÂª∫ËÆÆ„Äç‰ºöÂêëÊúçÂä°Âô®&lt;code&gt;*.smoot.apple.com/bag&lt;/code&gt;ËØ∑Ê±ÇÂà∑Êñ∞Âå∫ÂüüËÆæÁΩÆ‰∏éÂäüËÉΩÂèØÁî®Áä∂ÊÄÅ&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;„ÄåËØ¢ÈóÆSiri„ÄçÁöÑÊêúÁ¥¢ÁªìÊûúÁõ¥Êé•Êù•Ê∫ê‰∫é&lt;code&gt;guzzoni.apple.com&lt;/code&gt;,Êó†Ê≥ïMitMÊîπÂÜôËØ∑Ê±Ç&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Âú®‰ª•‰∏ã‰ΩçÁΩÆÂèäÂäüËÉΩ‰∏≠ÂèØÁî®:&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ËÅöÁÑ¶ÊêúÁ¥¢(Spotlight)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Êü•ËØ¢(Look Up)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; SafariÊµèËßàÂô®(Safari)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; ËØ¢ÈóÆSiri (Ask Siri on iOS:ÂõΩÂÜÖÁâà/macOS:Êµ∑Â§ñÁâà)&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ÂêØÁî®ÁöÑÂäüËÉΩ:&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Êù•Ëá™APPLEÁöÑÂÜÖÂÆπ(CONTENT FROM APPLE)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Êù•Ëá™APPLEÁöÑÂª∫ËÆÆ(SUGGESTIONS FROM APPLE)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; SiriÂª∫ËÆÆ(Siri Suggestions) (SafariÊµèËßàÂô®Ëµ∑ÂßãÈ°µ‰∏≠ÁöÑ„ÄåSiriÂª∫ËÆÆ„ÄçÊöÇ‰∏çÂèØÁî®)&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Â∑≤Áü•ÂèØÁî®ÁöÑ‰ø°ÊÅØÂç°Áâá:&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; SiriËµÑÊñô(Siri Knowledge) Êà™Âõæ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/Siri%20Knowledge%20-%20Spotlight%20-%20macOS.png?raw=true&quot; title=&quot;Siri Knowledge - Spotlight - macOS&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; SiriÂª∫ËÆÆÁöÑÁΩëÁ´ô(Siri Suggested Websites)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Áª¥Âü∫ÁôæÁßë (macOSÁ´ØÈúÄË¶ÅSurgeÂêØÁî®‚ÄúÂ¢ûÂº∫Ê®°Âºè‚Äù)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ‰ΩìËÇ≤ Êà™Âõæ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/Sports%20-%20Spotlight%20-%20macOS.png?raw=true&quot; title=&quot;Sports - Spotlight - macOS&quot;&gt;macOS&lt;/a&gt; / &lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/Sports%20-%20Spotlight%20-%20iOS.jpeg?raw=true&quot; title=&quot;Sports - Spotlight - iOS&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ËÇ°Á•® Êà™Âõæ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/Stock%20-%20Spotlight%20-%20macOS.png?raw=true&quot; title=&quot;Stock - Spotlight - macOS&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Ëà™Áè≠ Êà™Âõæ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/Flights%20-%20Spotlight%20-%20macOS.png?raw=true&quot; title=&quot;Flights - Spotlight - macOS&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; App Store\Mac App Store Êà™Âõæ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/Mac%20App%20Store%20-%20Spotlight%20-%20macOS.png?raw=true&quot; title=&quot;Mac App Store - Spotlight - macOS&quot;&gt;macOS&lt;/a&gt; / &lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/App%20Store%20-%20Spotlight%20-%20iOS.jpeg?raw=true&quot; title=&quot;App Store - Spotlight - iOS&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; ÁîµÂΩ± &amp;amp; ÁîµËßÜËäÇÁõÆ 
    &lt;ul&gt; 
     &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Ô£øtv Êà™Âõæ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/%EF%A3%BFtv%20-%20Spotlight%20-%20macOS.png?raw=true&quot; title=&quot;Ô£øtv - Spotlight - macOS&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; iTunes&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Èü≥‰πê 
    &lt;ul&gt; 
     &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Apple Music Êà™Âõæ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/Apple%20Music%20-%20Spotlight%20-%20macOS.png?raw=true&quot; title=&quot;Apple Music - Spotlight - macOS&quot;&gt;macOS&lt;/a&gt; / &lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/ScreenShots/Apple%20Music%20-%20Spotlight%20-%20iOS.jpeg?raw=true&quot; title=&quot;Apple Music - Spotlight - iOS&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; iTunes&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Êñ∞Èóª&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;del&gt;Ê≥®:ÂØπÂåóÁæéÂú∞Âå∫„ÄåSiriÂª∫ËÆÆ„ÄçÊúçÂä°Âô®Êó†Êïà(SSL Pinning)&lt;/del&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÁªèÁæ§ÂèãÊµãËØïÂØπÁæéË•ø„ÄåSiriÂª∫ËÆÆ„ÄçÊúçÂä°Âô®ÊúâÊïà&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÂèØÈÄöËøáSurgeÁöÑ&lt;code&gt;Â∑•ÂÖ∑&lt;/code&gt;-&lt;code&gt;ÊúÄËøëËØ∑Ê±Ç&lt;/code&gt;Êàñ&lt;code&gt;ËØ∑Ê±ÇÊü•ÁúãÂô®&lt;/code&gt;Êü•ÁúãÊúÄËøëÁöÑ*.smoot.apple.comÂâçÁºÄÂà§Êñ≠ÂΩìÂâçÊúçÂä°Âô®&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;del&gt;Â¶ÇÂàÜÈÖçËá≥api-glb-uswÊúçÂä°Âô®‰∏îMitMÂ§±Ë¥•ÔºåÂèØ‰ª•ÈÄöËøáÂºÄÂÖ≥È£ûË°åÊ®°Âºè„ÄÅÊ∏ÖÈô§DNSÁºìÂ≠ò„ÄÅÊõ¥ÊîπVPNÁ∫øË∑Ø„ÄÅÊõ¥Êñ∞/Êõ¥Êç¢GeoIPÊï∞ÊçÆÂ∫ìÁ≠âÊñπÂºèÂà∑Êñ∞Ëá≥ÊîØÊåÅÁöÑÊúçÂä°Âô®&lt;/del&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;„ÄåSiriÂª∫ËÆÆ„ÄçÊúçÂä°Âô®ÊîØÊåÅÊÉÖÂÜµ:&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://api.smoot.apple.com&quot;&gt;https://api.smoot.apple.com&lt;/a&gt; (ÊúâÊïà)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://api-aka.smoot.apple.com&quot;&gt;https://api-aka.smoot.apple.com&lt;/a&gt; (ÊúâÊïà)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://api-glb.smoot.apple.com&quot;&gt;https://api-glb.smoot.apple.com&lt;/a&gt; (ÊúâÊïà)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://api-glb-usw.smoot.apple.com&quot;&gt;https://api-glb-usw.smoot.apple.com&lt;/a&gt; (ÁæéË•øÔºöÊúâÊïà)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://api-glb-euc.smoot.apple.com&quot;&gt;https://api-glb-euc.smoot.apple.com&lt;/a&gt; (Ê¨ßÊ¥≤‰∏≠ÔºöÊúâÊïà)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://api-glb-apne.smoot.apple.com&quot;&gt;https://api-glb-apne.smoot.apple.com&lt;/a&gt; (‰∫öÂ§™‰∏úÂåóÔºöÊúâÊïà)&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; &lt;a href=&quot;https://api-glb-apse.smoot.apple.com&quot;&gt;https://api-glb-apse.smoot.apple.com&lt;/a&gt; (‰∫öÂ§™‰∏úÂçóÔºöÊúâÊïà)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;a id=&quot;Apple Maps&quot;&gt; Apple Maps &lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÂÆâË£ÖÈìæÊé•: 
  &lt;ul&gt; 
   &lt;li&gt;Surge: 
    &lt;ul&gt; 
     &lt;li&gt;‰øÆÊîπApple Maps‰∏∫üá∫üá∏US:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_Maps.sgmodule?raw=true&quot; title=&quot;Ô£ø Redirect Apple Maps to üá∫üá∏US&quot;&gt;Apple Maps.sgmodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;‰øÆÊîπApple Maps‰∏∫üá®üá≥CN:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_Maps_CN.sgmodule?raw=true&quot; title=&quot;Ô£ø Redirect Apple Maps to üá®üá≥CN&quot;&gt;Apple Maps_CN.sgmodule&lt;/a&gt;&lt;br&gt; todo&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;a id=&quot;Apple News&quot;&gt; Apple News &lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÁÆÄ‰ªã: 
  &lt;ul&gt; 
   &lt;li&gt;‰øùÊåÅÊ®°ÂùóÂêØÁî®,Âç≥ÂèØÊ≠£Â∏∏‰ΩøÁî®„ÄåApple News„Äç(‰æùËµñÂÖ∂‰ªñÊ®°Âùó)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÂÆâË£ÖÈìæÊé•: 
  &lt;ul&gt; 
   &lt;li&gt;Loon: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/plugin/Apple_News.plugin?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News.plugin&lt;/a&gt; (Author:@Tartarus2014) (ËØ•Êèí‰ª∂ÈúÄË¶ÅÂåπÈÖç‰ª£ÁêÜÁ≠ñÁï•ÁªÑ)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Surge: 
    &lt;ul&gt; 
     &lt;li&gt;‰∏çÂê´ËßÑÂàôÈõÜÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_News_noRuleSet.sgmodule?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News_noRuleSet.sgmodule&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;ÂüüÂêçÈõÜ:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/RuleSet/Apple_News.list?raw=true&quot; title=&quot;Apple_News&quot;&gt;Apple_News.list&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫PROXYÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_News.sgmodule?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News.sgmodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫ProxyÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_News_for_Proxy.sgmodule?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News_for_Proxy.sgmodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫üåëProxyÁöÑÊ®°Âùó(Â¶Ç:DivineEngine):&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_News_for_DivineEngine.sgmodule?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News_for_DivineEngine.sgmodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫AppleÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_News_for_Apple.sgmodule?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News_for_Apple.sgmodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫üçéAppleÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_News_for_Apple_icon.sgmodule?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News_for_Apple_icon.sgmodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫üçé ËãπÊûúÊúçÂä°ÁöÑÊ®°Âùó(Â¶Ç:ACL4SSR):&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_News_for_ACL4SSR.sgmodule?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News_for_ACL4SSR.sgmodule&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;ÈíàÂØπÁ≠ñÁï•ÁªÑ‰∏∫Apple NewsÁöÑÊ®°Âùó:&lt;a href=&quot;https://raw.githubusercontent.com/VirgilClyne/iRingo/main/sgmodule/Apple_News_for_Apple_News.sgmodule?raw=true&quot; title=&quot;Ô£ø Unlock Apple News üá∫üá∏US&quot;&gt;Apple_News_for_Apple_News.sgmodule&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ÈúÄË¶ÅÂêåÊó∂ÂêØÁî®&lt;code&gt;Geo_Services.sgmodule&lt;/code&gt;Ê®°ÂùóËææÊàê‰øÆÊîπÂú∞Âå∫ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;ÂêØÁî®Ê®°ÂùóÂêéÊâìÂºÄ‰∏ÄÊ¨°Âú∞ÂõæÂç≥ÂèØÂàáÊç¢Âå∫ÂüüËá≥&lt;code&gt;US&lt;/code&gt;(ÁæéÂõΩ)‰∏îÂèØ‰ª•‰ΩøÁî®Apple NewsÔºåÊó†ÈúÄ‰øùÊåÅÈ£ûË°åÊ®°ÂºèÂºÄÂêØ„ÄÅÁßªÈô§SIMÂç°„ÄÅÂÖ≥Èó≠ÂÆö‰Ωç„ÄÅÊõ¥ÊîπËØ≠Ë®ÄÁ≠â&lt;/li&gt; 
 &lt;li&gt;macOS/iOSÈÄÇÁî®&lt;/li&gt; 
 &lt;li&gt;ÊïôÁ®ã&amp;amp;Ê≠•È™§: 
  &lt;ul&gt; 
   &lt;li&gt;iOS(ÊúâSIMÂç°ÁöÑËÆæÂ§áÔºåÂ¶ÇiPhone)‰ΩøÁî®ÊñπÊ≥ï: 
    &lt;ol&gt; 
     &lt;li&gt;ÂêØÁî®&lt;code&gt;Âú∞Âå∫Ê£ÄÊµã‰∏∫üá∫üá∏US&lt;/code&gt; + &lt;code&gt;‰øÆÊîπApple Maps‰∏∫üá®üá≥CN&lt;/code&gt; + &lt;code&gt;‰øÆÊîπApple News‰∏∫üá∫üá∏US&lt;/code&gt;‰∏â‰∏™Ê®°Âùó&lt;/li&gt; 
     &lt;li&gt;‰øÆÊîπÁõ∏ÂÖ≥Á∫øË∑Ø‰∏∫üá∫üá∏ÁæéÂõΩ(‰ºòÂåñ‰∏≠)&lt;/li&gt; 
     &lt;li&gt;ÊâìÂºÄÈ£ûË°åÊ®°Âºè&lt;/li&gt; 
     &lt;li&gt;ÊâìÂºÄ&lt;code&gt;Âú∞Âõæ&lt;/code&gt;Ëß¶Âèë‰∏ÄÊ¨°Âú∞Âå∫Ê£ÄÊµãÔºåÂú∞ÂõæÁª¥ÊåÅ‰∏∫È´òÂæ∑Âú∞Âõæ„ÄÇ(&lt;code&gt;com.apple.geod&lt;/code&gt;ËøõÁ®ãÁöÑ&lt;code&gt;configuration.ls.apple.com&lt;/code&gt;, &lt;code&gt;gspe1-ssl.ls.apple.com&lt;/code&gt;‰∫åËøûËÆøÈóÆ)&lt;/li&gt; 
     &lt;li&gt;ÊâìÂºÄApple News&lt;/li&gt; 
     &lt;li&gt;ÂÖ≥Èó≠È£ûË°åÊ®°Âºè&lt;/li&gt; 
     &lt;li&gt;Enjoy&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;iPadOS/macOS‰ΩøÁî®ÊñπÊ≥ï: 
    &lt;ol&gt; 
     &lt;li&gt;ÂêØÁî®&lt;code&gt;Âú∞Âå∫Ê£ÄÊµã‰∏∫üá∫üá∏US&lt;/code&gt; + &lt;code&gt;‰øÆÊîπApple Maps‰∏∫üá®üá≥CN&lt;/code&gt; + &lt;code&gt;‰øÆÊîπApple News‰∏∫üá∫üá∏US&lt;/code&gt;‰∏â‰∏™Ê®°Âùó&lt;/li&gt; 
     &lt;li&gt;‰øÆÊîπÁõ∏ÂÖ≥Á∫øË∑Ø‰∏∫üá∫üá∏ÁæéÂõΩ(‰ºòÂåñ‰∏≠)&lt;/li&gt; 
     &lt;li&gt;ÊâìÂºÄ&lt;code&gt;Âú∞Âõæ&lt;/code&gt;Ëß¶Âèë‰∏ÄÊ¨°Âú∞Âå∫Ê£ÄÊµãÔºåÂú∞ÂõæÁª¥ÊåÅ‰∏∫È´òÂæ∑Âú∞Âõæ„ÄÇ(&lt;code&gt;com.apple.geod&lt;/code&gt;ËøõÁ®ãÁöÑ&lt;code&gt;configuration.ls.apple.com&lt;/code&gt;, &lt;code&gt;gspe1-ssl.ls.apple.com&lt;/code&gt;‰∫åËøûËÆøÈóÆ)&lt;/li&gt; 
     &lt;li&gt;ÊâìÂºÄApple News&lt;/li&gt; 
     &lt;li&gt;Enjoy&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>HashLips/generative-art-opensource</title>
      <link>https://github.com/HashLips/generative-art-opensource</link>
      <description>&lt;p&gt;Create generative art by using the canvas api and node js, feel free to contribute to this repo with new ideas.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to HashLips üëÑ&lt;/h1&gt; 
&lt;p&gt;Important: There is a new repo for this code. &lt;a href=&quot;https://github.com/HashLips/hashlips_art_engine&quot;&gt;https://github.com/HashLips/hashlips_art_engine&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;All the code in these repos was created and explained by HashLips on the main YouTube channel.&lt;/p&gt; 
&lt;p&gt;To find out more please visit:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC1LV4_VQGBJHTJjEWUmy8nA&quot;&gt;üì∫ YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.com/invite/qh6MWhMJDN&quot;&gt;üëÑ Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/hashlipsnft&quot;&gt;üí¨ Telegram&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/hashlipsnft&quot;&gt;üê¶ Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hashlips.online/HashLips&quot;&gt;‚ÑπÔ∏è Website&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;generative-art-opensource&lt;/h1&gt; 
&lt;p&gt;Create generative art by using the canvas api and node js, feel free to contribute to this repo with new ideas.&lt;/p&gt; 
&lt;h1&gt;Project Setup&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;install &lt;code&gt;node.js&lt;/code&gt; on your local system (&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;https://nodejs.org/en/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;clone the repository to your local system &lt;code&gt;git@github.com:HashLips/generative-art-opensource.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn install&lt;/code&gt; to install dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;How to use&lt;/h1&gt; 
&lt;h2&gt;Run the code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;node index.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the &lt;code&gt;./output&lt;/code&gt; folder to find your generated images to use as NFTs, as well as the metadata to use for NFT marketplaces.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Adjust the provided configuration and resources&lt;/h2&gt; 
&lt;h3&gt;Configuration file&lt;/h3&gt; 
&lt;p&gt;The file &lt;code&gt;./input/config.js&lt;/code&gt; contains the following properties that can be adjusted to your preference in order to change the behavior of the NFT generation procedure:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;width: - of your image in pixels. Default: &lt;code&gt;1000px&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;height: - of your image in pixels. Default: &lt;code&gt;1000px&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;dir: - where image parts are stored. Default: &lt;code&gt;./input&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;description: - of your generated NFT. Default: &lt;code&gt;This is an NFT made by the coolest generative code.&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;baseImageUri: - URL base to access your NFTs from. This will be used by platforms to find your image resource. This expects the image to be accessible by it&#39;s id like &lt;code&gt;${baseImageUri}/${id}&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;startEditionFrom: - number (int) to start naming NFTs from. Default: &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;editionSize: - number (int) to end edition at. Default: &lt;code&gt;10&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;editionDnaPrefix: - value (number or string) that indicates which dna from an edition is used there. I.e. dna &lt;code&gt;0&lt;/code&gt; from to independent batches in the same edition may differ, and can be differentiated using this. Default: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;rarityWeights: - allows to provide rarity categories and how many of each type to include in an edition. Default: &lt;code&gt;1 super_rare, 4 rare, 5 original&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;layers: list of layers that should be used to render the image. See next section for detail.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image layers&lt;/h3&gt; 
&lt;p&gt;The image layers are different parts that make up a full image by overlaying on top of each other. E.g. in the example input content of this repository we start with the eyeball and layer features like the eye lids or iris on top to create the completed and unique eye, which we can then use as part of our NFT collection. To ensure uniqueness, we want to add various features and multiple options for each of them in order to allow enough permutations for the amount of unique images we require.&lt;/p&gt; 
&lt;p&gt;To start, copy the layers/features and their images in a flat hierarchy at a directory of your choice (by default we expect them in &lt;code&gt;./input/&lt;/code&gt;). The features should contain options for each rarity that is provided via the config file.&lt;/p&gt; 
&lt;p&gt;After adding the &lt;code&gt;layers&lt;/code&gt;, adjust them accordingly in the &lt;code&gt;config.js&lt;/code&gt; by providing the directory path, positioning and sizes. Use the existing &lt;code&gt;addLayers&lt;/code&gt; calls as guidance for how to add layers. This can either only use the name of the layer and will use default positioning (x=0, y=0) and sizes (width=configured width, height=configure height), or positioning and sizes can be provided for more flexibility.&lt;/p&gt; 
&lt;h3&gt;Allowing different rarities for certain rarity/layer combinations&lt;/h3&gt; 
&lt;p&gt;It is possible to provide a percentage at which e.g. a rare item would contain a rare vs. common part in a given layer. This can be done via the &lt;code&gt;addRarityPercentForLayer&lt;/code&gt; that can be found in the &lt;code&gt;config.js&lt;/code&gt; as well. This allows for more fine grained control over how much randomness there should be during the generation process, and allows a combination of common and rare parts.&lt;/p&gt; 
&lt;h1&gt;Development suggestions&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preferably use VSCode with the prettifier plugin for a consistent coding style (or equivalent js formatting rules)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>hyue418/taobao-11-11</title>
      <link>https://github.com/hyue418/taobao-11-11</link>
      <description>&lt;p&gt;üöÄ2020Ê∑òÂÆù+‰∫¨‰∏ú+ÊîØ‰ªòÂÆùÂèåÂçÅ‰∏Ä|Âèå11ÂÖ®Ê∞ëÂÖªÁå´|ÂÖ®Ê∞ëËê•‰∏öËá™Âä®ÂåñËÑöÊú¨„ÄêÂÖ®È¢ùÂ•ñÂä±ÔºåÈò≤Ê£ÄÊµã„Äë&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ê∑òÂÆù+‰∫¨‰∏úÂèåÂçÅ‰∏ÄÊ¥ªÂä®ËÑöÊú¨&lt;/h1&gt; 
&lt;h2&gt;ÊîØÊåÅÊ∑òÂÆù\ÊîØ‰ªòÂÆù\‰∫¨‰∏úÂèå11‰ªªÂä°Ëá™Âä®ÊâßË°å&lt;/h2&gt; 
&lt;h3&gt;Ê∑òÂÆù&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®„ÄêÁ≠æÂà∞„Äë&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®„ÄêÈ¢ÜÂèñÂ•ñÂä±„Äë&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®ÂÅö„ÄêÂéªÂÆåÊàê„ÄëÁ±ª‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®ÂÅö„ÄêÂéªÊµèËßà„ÄëÁ±ª‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®ÂÅö„ÄêÂéªÊêúÁ¥¢„ÄëÁ±ª‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®ÂÅö„ÄêÂéªËßÇÁúã„ÄëÁ±ª‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®„ÄêÊãçÁå´Áå´„ÄëÔºàÂèØËá™ÂÆö‰πâÊ¨°Êï∞Ôºâ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÊîØ‰ªòÂÆù&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®„ÄêÁ≠æÂà∞„Äë&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®ÂÅö„ÄêÈÄõ‰∏ÄÈÄõ„ÄëÁ±ª‰ªªÂä°&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‰∫¨‰∏ú&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®„ÄêÁ≠æÂà∞„Äë&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®„ÄêÊî∂ÂèñÈáëÂ∏Å„Äë&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®ÂÅö„ÄêÊµèËßà„ÄëÁ±ª‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®ÂÅö„ÄêÂïÜÂìÅÊµèËßà„Äë‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™Âä®ÂÅö„ÄêÂïÜÂìÅÂä†Ë¥≠„Äë‰ªªÂä°&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Êõ¥Êñ∞Êó•Âøó&lt;/h2&gt; 
&lt;h3&gt;V 2.5.0 ‚Äî‚Äî2020.11.08 16:42&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢û‰∫¨‰∏úÂÆπÈîôÊú∫Âà∂ÔºåÂ§ßÂπÖÂ¢ûÂä†ËÑöÊú¨Á®≥ÂÆöÊÄßÔºåÂèØ‰ª•‰∏ÄÊ¨°‰ªªÂä°ÊâßË°åÂà∞Â∫ï‰∫Ü&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñ‰ª£Á†Å&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.4.1 ‚Äî‚Äî2020.11.07 23:02&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§çÈÉ®ÂàÜÊú∫ÂûãËøêË°å‰∫¨‰∏ú‰ªªÂä°Êä•ÈîôÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.4.0 ‚Äî‚Äî2020.11.05 13:48&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§ç‰∫¨‰∏úÊ¥ªÂä®È°µÊõ¥Êñ∞ÂêéËÑöÊú¨Êó†Ê≥ïÊ≠£Â∏∏ËøêË°åÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢û‰∫¨‰∏úËá™Âä®„ÄêÊî∂ÂèñÈáëÂ∏Å„ÄëÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§ç‰∫¨‰∏ú‰ªªÂä°Âç°‰∏ú‰∏úË∂ÖÂ∏ÇÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.3.1 ‚Äî‚Äî2020.10.30 09:35&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§ç‰∫¨‰∏úÊ¥ªÂä®Âç°‰∫¨ÂèãÂúàÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.3.0 ‚Äî‚Äî2020.10.28 00:01&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûÊîØÊåÅËá™Âä®ÂÅö‰∫¨‰∏ú„ÄêÂïÜÂìÅÊµèËßà„Äë‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûÊîØÊåÅËá™Âä®ÂÅö‰∫¨‰∏ú„ÄêÂïÜÂìÅÂä†Ë¥≠„Äë‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;ÊãçÁå´Áå´ÂèØÈÄâÊ¨°Êï∞‰øÆÊîπ‰∏∫50„ÄÅ100„ÄÅ200„ÄÅ300„ÄÅ400„ÄÅ500Ê¨°&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÂç°È°µÈù¢ÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.2.2 ‚Äî‚Äî2020.10.26 21:28&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûË∞ÉÈÄüÂäüËÉΩÔºåÂèØËá™Áî±ÈÄâÊã©Ë∞ÉËäÇËÑöÊú¨ÁöÑÊìç‰ΩúÈó¥ÈöîÔºåÊóßÊâãÊú∫ÁöÑÁ¶èÈü≥&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñ‰∫¨‰∏úÊ¥ªÂä®ÂàÜ‰∫´‰ªªÂä°ÁöÑËØÜÂà´Ë∑≥ËøáÊú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÊ∑òÂÆùÊ¥ªÂä®ËøõÂÖ•Áõ¥Êí≠‰ªªÂä°‰ºöÂàíËµ∞Êó†Ê≥ïËé∑ÂæóÂ•ñÂä±ÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;ÊãçÁå´Áå´ÂèØÈÄâÊ¨°Êï∞Â¢ûÂä†ÂèØÊãç300Ê¨°&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.1.0 ‚Äî‚Äî2020.10.25 18:05&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ºòÂåñÊ®°ÊãüÁÇπÂáªÁÆóÊ≥ïÔºåÂä†ÂÖ•Êåâ‰ΩèÊó∂ÈïøÁª¥Â∫¶ÔºåÊØèÊ¨°Áü≠ÊåâÂ±èÂπïÊó∂ÈïøÈöèÊú∫ÂåñÔºåÊõ¥Âä†Êé•ËøëÁúü‰∫∫Êìç‰Ωú&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢û‰∫¨‰∏úËá™Âä®Á≠æÂà∞ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§ç‰∫¨‰∏úËÑöÊú¨‰ºöÂç°Âú®ÂïÜÂúàÊ¥ªÂä®ÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;Êéß‰ª∂Êú™ÁÇπÂáªÊàêÂäüÊó∂ÔºåËá™Âä®Âæ™ÁéØÂÜçÁÇπÂáªÔºåÊèêÈ´òÁÇπÂáªÊàêÂäüÁéá&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñÊìç‰ΩúÊó∂Èó¥Èó¥Èöî&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.0.2 ‚Äî‚Äî2020.10.25 15:56&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§çÂÅ∂ÂèëÊÄßÊú™ÁÇπËøõ‰ªªÂä°ÂÜÖÈ°µÔºå‰ºöÂú®‰ªªÂä°È¶ñÈ°µÊªëÂä®ÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‰øÆÂ§çÂÅ∂ÂèëÊÄßÈÄÄÂá∫Âà∞‰∫¨‰∏úÈ¶ñÈ°µÔºåÂØºËá¥ËÑöÊú¨ÊèêÂâçÁªìÊùüÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñ‰∫¨‰∏úÊâìÂºÄÊ¥ªÂä®È°µÈÄªËæë&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.0.1 ‚Äî‚Äî2020.10.25 15:19&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§çÈÉ®ÂàÜÊú∫ÂûãËøõÂÖ•‰∫¨‰∏úÊ¥ªÂä®È°µ‰ºöÂç°‰ΩèÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 2.0.0 ‚Äî‚Äî2020.10.25 14:15&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢û‰∫¨‰∏úÂèå11ÂÖ®Ê∞ëËê•‰∏öÊ¥ªÂä®Ëá™Âä®Âåñ‰ªªÂä°&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.4.2 ‚Äî‚Äî2020.10.25 00:12&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊãçÁå´Áå´Â∞èBUG‰øÆÂ§ç&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.4.1 ‚Äî‚Äî2020.10.24 23:44&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§çÊó†ÈöúÁ¢çÂºÄÂÖ≥Âà§ÂÆöÂÅ∂ÂèëÈîôËØØÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.4.0 ‚Äî‚Äî2020.10.24 23:04&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ºòÂåñ‰ªªÂä°ÊâßË°åÊ®°ÂºèÔºåÂèØÈÄâÊã©ÊÄßÂãæÈÄâÊ∑òÂÆùËµöÂñµÂ∏Å„ÄÅÊ∑òÂÆùÊãçÁå´Áå´„ÄÅÊîØ‰ªòÂÆùËµöÂñµÂ∏Å‰ªªÂä°&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûÊ∑òÂÆùËá™Âä®ÊãçÁå´ÂäüËÉΩÔºåÂèØËá™Áî±ÈÄâÊã©ÊãçÁå´Ê¨°Êï∞&lt;/li&gt; 
 &lt;li&gt;Êñ∞Â¢ûËá™Âä®ÂÅö„ÄêÂéªËßÇÁúã„ÄëÁ±ª‰ªªÂä°ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñÁ≠âÂæÖÈÄªËæëÔºåÊèêÂçáÊéß‰ª∂ËØÜÂà´ËÉΩÂäõ&lt;/li&gt; 
 &lt;li&gt;‰ºòÂåñ‰ª£Á†ÅËßÑËåÉÂèäÊ≥®ÈáäÔºåÊñπ‰æøÂ≠¶‰π†&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.3.2 ‚Äî‚Äî2020.10.24 00:57&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûÊ∑òÂÆùÊ¥ªÂä®È°µËá™Âä®Á≠æÂà∞ÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.3.1 ‚Äî‚Äî2020.10.24 00:46&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûÊîØ‰ªòÂÆùËá™Âä®Á≠æÂà∞ÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.3.0 ‚Äî‚Äî2020.10.23 18:11&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢ûÊîØ‰ªòÂÆùËá™Âä®Âåñ‰ªªÂä°ÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.2.0 ‚Äî‚Äî2020.10.23 11:24&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰øÆÂ§çËøõÂÖ•ÊâìÂºÄÊ∑òÂÆùÁâπ‰ª∑Áâà‰ªªÂä°‰ºöÂç°‰ΩèÁöÑÈóÆÈ¢ò&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.1.1 ‚Äî‚Äî2020.10.22 12:29&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ºòÂåñÊâìÂºÄÊ¥ªÂä®È°µÊñπÂºèÔºåËøêË°åËÑöÊú¨ÂèØËá™Âä®ÊâìÂºÄÊ¥ªÂä®È°µ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V 1.1.0 ‚Äî‚Äî2020.10.22 11:02&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êñ∞Â¢û‰ªøÁúüÊªëÂ±èÂä®‰ΩúÔºåÈÅøÂºÄËÑöÊú¨Ê£ÄÊµã&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Ê∑òÂÆùË¢´Âà∂Ë£ÅÈóÆÈ¢ò&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;È´òÁâàÊú¨Ê∑òÂÆùÊúâ&lt;strong&gt;Âà∂Ë£ÅÊú∫Âà∂&lt;/strong&gt;Ôºå‰ºöÁõëÊéßauto.jsÁ≠âËÑöÊú¨appËøõÁ®ãÔºå&lt;strong&gt;Â•ñÂä±‰ºöÂèòÂæóÁâπÂà´‰Ωé&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ÁõÆÂâçV9.5.7ÁâàÊ∑òÂÆù‰πüË¢´Âà∂Ë£Å‰∫ÜÔºå‰∏çÂÜçÊé®Ëçê‰ΩøÁî®&lt;/li&gt; 
 &lt;li&gt;ÊúâÁî®Êà∑ÊèêÂá∫‰ΩøÁî®V9.0.0/V8.11.0ÁâàÊ∑òÂÆùÂèØ‰ª•Ëé∑ÂæóÂÖ®È¢ùÂ•ñÂä±ÔºåÂèØ‰ª•Â∞ùËØï‰∏Ä‰∏ã&lt;/li&gt; 
 &lt;li&gt;ÊúâÂÖ∂‰ªñÁâàÊú¨ÂèØ‰ª•‰ΩøÁî®ÁöÑÔºå‰πüÂèØ‰ª•Âú®IssuesÂÜÖÂàÜ‰∫´&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wandoujia.com/apps/32267/history&quot;&gt;Ë±åË±ÜËçöÊ∑òÂÆùÊóßÁâàÊú¨&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;2020Âπ¥10Êúà24Êó•22:58ÊµãËØïÔºàÊ≤°rootÔºâÔºåÂÆåÂÖ®Ê≠£Â∏∏ÔºåÂèØ‰ª•Ëé∑ÂæóÂÖ®È¢ùÂ•ñÂä±&lt;/h2&gt; 
&lt;p&gt;‰∏ÄÂÆöË¶Å‰ΩøÁî®‰ΩéÁâàÊú¨Ê∑òÂÆùÔºàV5.7Âèä‰ª•‰∏ãÔºâÔºåÂÖ≥ÊéâÊ∑òÂÆùÁöÑËá™Âä®Êõ¥Êñ∞&lt;/p&gt; 
&lt;p&gt;ÊúâÁî®Êà∑ËØ¥ÂéüÊú¨ËÉΩÊúâÂ•ñÂä±ÁöÑÔºåËøá‰∫Ü‰∏Ä‰∏§Â§©‰πãÂêéÊ≤°Â•ñÂä±‰∫ÜÔºåÊòØÂõ†‰∏∫Ê∑òÂÆùËá™Âä®Êõ¥Êñ∞Âï¶&lt;/p&gt; 
&lt;p&gt;Â§ßÈÉ®ÂàÜÊ®°ÊãüÂô®ËøêË°åÊ∑òÂÆùÈÉΩ‰ºöÊó†Ê≥ïËé∑ÂèñÂ•ñÂä±ÔºàÂºÄ‰∏çÂºÄËÑöÊú¨ÈÉΩ‰∏ÄÊ†∑ÔºâÔºå‰∏çÂª∫ËÆÆ‰ΩøÁî®Ê®°ÊãüÂô®&lt;/p&gt; 
&lt;p&gt;ÂêæÁà±ÊúâÁî®Êà∑ËØ¥rootÁéØÂ¢É‰∏ãÂºÄ‰∫ÜEDXPÁöÑËØùÂøÖÂà∂Ë£ÅÔºåÂª∫ËÆÆÂèØ‰ª•ÂÖ≥ÊéâÂ∞ùËØï‰∏ã&lt;/p&gt; 
&lt;h2&gt;Âàõ‰ΩúËØ¥Êòé&lt;/h2&gt; 
&lt;p&gt;Áúã‰∫ÜÂæàÂ§öÁΩë‰∏ä‰º†ÁöÑÂèåÂçÅ‰∏ÄËÑöÊú¨ÁöÑÊ∫êÁ†ÅÔºåÂ§ßÂ§öÈÉΩ&lt;strong&gt;ÈááÁî®findÊéß‰ª∂ÂÜçclickËøôÁßçËß¶Âèë‰∫ã‰ª∂&lt;/strong&gt;ÁöÑÊñπÂºè&lt;/p&gt; 
&lt;p&gt;ÊÑüËßâËøòÊòØÊúâ‰∫õÈóÆÈ¢òÁöÑÔºåÂõ†‰∏∫&lt;strong&gt;Êï¥‰∏™ËÑöÊú¨Âπ∂Ê≤°ÊúâÁõ¥Êé•ÂéªÁÇπÂáªÂ±èÂπï&lt;/strong&gt;ÔºàÂú®ÂºÄÂèëËÄÖÊ®°ÂºèÊòØÊäì‰∏çÂà∞ÁÇπÂáªÁä∂ÊÄÅÁöÑÔºâ&lt;/p&gt; 
&lt;p&gt;ËÄå‰∏î„ÄÇ„ÄÇ„ÄÇËøô‰∫õËÑöÊú¨ÊâÄÊúâÂä®‰ΩúÁöÑÊó∂Èó¥Èó¥ÈöîÈÉΩÊòØ&lt;strong&gt;Âõ∫ÂÆö‰∏çÂèò&lt;/strong&gt;ÁöÑÔºåÊï¥‰∏™ËÑöÊú¨ÊµÅÁ®ã‰ºö&lt;strong&gt;ÁîüÁ°¨ËÆ∏Â§ö&lt;/strong&gt;Ôºå&lt;strong&gt;ÂæàÂÆπÊòìË¢´Ê£ÄÊµãÂà∞&lt;/strong&gt;„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰Ωú‰∏∫‰∏Ä‰∏™&lt;strong&gt;PHPer&lt;/strong&gt;Ôºå‰πüÊáÇÁÇπauto.jsÔºåÊâÄ‰ª•Â∞±Ëá™Â∑±ÂÜô‰∫Ü‰∏™ÂèåÂçÅ‰∏ÄÁöÑËÑöÊú¨„ÄÇ„ÄÇ„ÄÇ&lt;/p&gt; 
&lt;p&gt;Ëøô‰∏™ËÑöÊú¨&lt;strong&gt;ÂÆåÂÖ®Ê®°Êãü‰∫∫Â∑•ÁÇπÂáªÊìç‰Ωú&lt;/strong&gt;ÔºåÊ≤°ÊúâÈááÁî®Áõ¥Êé•Ëß¶ÂèëÊéß‰ª∂‰∫ã‰ª∂ÁöÑÊñπÂºè„ÄÇ&lt;/p&gt; 
&lt;p&gt;ËÄåÊòØÊâæÂà∞Êéß‰ª∂ÁöÑÂùêÊ†áËåÉÂõ¥ÔºåÂÜçÂú®Ëøô‰∏™ËåÉÂõ¥ÁîüÊàêÈöèÊú∫Êï∞&lt;strong&gt;ÈöèÊú∫Ê®°ÊãüÁÇπÂáª&lt;/strong&gt;„ÄÇ&lt;/p&gt; 
&lt;p&gt;ÊªëÂ±èÊìç‰Ωú‰πüÂπ∂ÈùûÊú∫Âô®ÂºèÁõ¥Á∫øÊªëÂ±èÔºå&lt;strong&gt;ÈÄöËøáÁÆóÊ≥ïÊ®°ÊãüÁúü‰∫∫ÊªëÂ±èÔºà‰ºöÊúâÊõ≤ÁéáÔºâÔºåÂπ∂ÊúâÁ∫øÊÄßÁöÑÈÄüÂ∫¶ÔºàÊªëÂä®ËøáÁ®ãÂÖàÂø´ÂêéÊÖ¢Ôºâ&lt;/strong&gt;ÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂèØ‰ª•Âú®ÂºÄÂèëËÄÖÂ∑•ÂÖ∑Áúã‰∏Ä‰∏ãÊªëÂ±èÊõ≤Á∫ø&lt;/p&gt; 
&lt;p&gt;Âè¶Â§ñÂë¢Ôºå&lt;strong&gt;ÊâÄÊúâÊìç‰ΩúÁöÑÊó∂Èó¥Èó¥Èöî‰πüÂä†ÂÖ•‰∫ÜÈöèÊú∫Êï∞&lt;/strong&gt;Ôºå‰∏ç‰ºöÂõ∫ÂÆö‰∏Ä‰∏™Èó¥ÈöîÔºåÊâÄ‰ª•Â∫îËØ•ËÉΩÊØîËæÉÂ•ΩÂú∞ÈÅøÂºÄÈ£éÊéßÊ£ÄÊµã&lt;/p&gt; 
&lt;p&gt;ÁõÆÂâçÊù•ËØ¥Ôºå&lt;strong&gt;Â§öË¥¶Âè∑Â§öÊâãÊú∫‰∫≤ÊµãÂèØÁî®ÔºåÂèØËé∑ÂÖ®È¢ùÂ•ñÂä±&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;‰ΩøÁî®ËØ¥Êòé&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆâÂçìËÆæÂ§á&lt;/strong&gt;ÔºàÊó†ÈúÄrootÔºâÂÆâË£ÖAuto.jsÔºåAPP‰∏ãÂØºÂÖ•jsËÑöÊú¨&lt;/li&gt; 
 &lt;li&gt;ÂºÄÂêØÊó†ÈöúÁ¢çÊúçÂä°Âπ∂ÊéàÊùÉÁªôAuto.js&lt;/li&gt; 
 &lt;li&gt;Auto.js APP‰∏ãÂØºÂÖ•jsËÑöÊú¨ÔºåËøêË°åÂç≥ÂèØ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://share.weiyun.com/5a9g8ys&quot;&gt;auto.js-4.1.0‰∏ãËΩΩ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;‰ªç‰∏ç‰∫ÜËß£ÊÄé‰πà‰ΩøÁî®ÁöÑÔºåÂª∫ËÆÆÂ∫¶Â®ò‰∏Ä‰∏ã&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‰∏ãËΩΩÈìæÊé•&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊâãÊú∫ËøõGitHub‰∏çÂ•Ω‰∏ãËΩΩËÑöÊú¨ÁöÑÔºåÂèØ‰ª•Âà∞‰∏ãÊñπÈìæÊé•‰∏ãËΩΩ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cdn.jsdelivr.net/gh/hyue418/taobao-11-11/&quot;&gt;https://cdn.jsdelivr.net/gh/hyue418/taobao-11-11/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>project-serum/spl-token-wallet</title>
      <link>https://github.com/project-serum/spl-token-wallet</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SPL Token Wallet&lt;/h1&gt; 
&lt;p&gt;Example Solana wallet with support for &lt;a href=&quot;https://spl.solana.com/token&quot;&gt;SPL tokens&lt;/a&gt; and Serum integration.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://www.sollet.io&quot;&gt;sollet.io&lt;/a&gt; or the &lt;a href=&quot;https://chrome.google.com/webstore/detail/sollet/fhmfendgdocmcbmfikdcogofphimnkno&quot;&gt;Sollet Chrome Extension&lt;/a&gt; for a demo.&lt;/p&gt; 
&lt;p&gt;Wallet keys are stored in &lt;code&gt;localStorage&lt;/code&gt;, optionally encrypted by a password.&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;yarn start&lt;/code&gt; to start a development server or &lt;code&gt;yarn build&lt;/code&gt; to create a production build that can be served by a static file server.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/getting-started&quot;&gt;Create React App documentation&lt;/a&gt; for other commands and options.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>getify/Functional-Light-JS</title>
      <link>https://github.com/getify/Functional-Light-JS</link>
      <description>&lt;p&gt;Pragmatic, balanced FP in JavaScript. @FLJSBook on twitter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Functional-Light JavaScript&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by-nc-nd/4.0/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-CC%20BY--NC--ND%204.0-blue.svg?sanitize=true&quot; alt=&quot;License: CC BY-NC-ND 4.0&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://fljsbook.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/images/marketing/front-cover-small.png&quot; width=&quot;25%&quot; align=&quot;right&quot; hspace=&quot;20&quot; vspace=&quot;20&quot; title=&quot;Functional-Light JavaScript&quot; alt=&quot;Book Cover&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This book is a balanced, pragmatic look at FP in JavaScript. The first edition is now complete. Read here online &lt;strong&gt;for free&lt;/strong&gt;, or:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;http://fljsbook.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Buy-Leanpub-yellow.svg?sanitize=true&quot; title=&quot;Buy on Leanpub&quot; alt=&quot;Buy on Leanpub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://manning.fljsbook.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Buy-Manning-yellow.svg?sanitize=true&quot; title=&quot;Buy on Manning&quot; alt=&quot;Buy on Manning&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://amazon.fljsbook.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Buy-Amazon-yellow.svg?sanitize=true&quot; title=&quot;Buy on Amazon&quot; alt=&quot;Buy on Amazon&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&quot;Functional-Light JavaScript&quot; explores the core principles of functional programming (FP) as they are applied to JavaScript. But what makes this book different is that we approach these principles without drowning in all the heavy terminology. We look at a subset of FP foundational concepts that I call &quot;Functional-Light Programming&quot; (FLP) and apply it to JavaScript.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Despite the word &quot;Light&quot; in the title, I do not consider or recommend this book as a &quot;beginner&quot;, &quot;easy&quot;, or &quot;intro&quot; book on the topic. This book is rigorous and full of gritty detail; it expects a solid foundation of JS knowledge before diving in. &quot;Light&quot; means limited in scope; instead of being more broad, this book goes much deeper into each topic than you typically find in other FP-JavaScript books.&lt;/p&gt; 
&lt;p&gt;Let&#39;s face it: unless you&#39;re already a member of the FP cool kids club (I&#39;m not!), a statement like, &quot;a monad is just a monoid in the category of endofunctors&quot;, just doesn&#39;t mean anything useful to us.&lt;/p&gt; 
&lt;p&gt;That&#39;s not to say the terms are meaning&lt;em&gt;less&lt;/em&gt; or that FPrs are bad for using them. Once you graduate from Functional-Light, you&#39;ll maybe/hopefully want to study FP more formally, and you&#39;ll certainly have plenty of exposure to what they mean and why.&lt;/p&gt; 
&lt;p&gt;But I want you to be able to apply some of the fundamentals of FP to your JavaScript &lt;em&gt;now&lt;/em&gt;, because I believe it will help you write better, more &lt;em&gt;reason&lt;/em&gt;able code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;To read more about the motivations and perspective behind this book, check out the &lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/preface.md&quot;&gt;Preface&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Book&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/README.md/#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/foreword.md/#foreword&quot;&gt;Foreword&lt;/a&gt; (by &lt;a href=&quot;https://twitter.com/DrBoolean&quot;&gt;Brian Lonsdorf, aka &quot;Prof Frisby&quot;&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/preface.md/#preface&quot;&gt;Preface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch1.md/#chapter-1-why-functional-programming&quot;&gt;Chapter 1: Why Functional Programming?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch2.md/#chapter-2-the-nature-of-functions&quot;&gt;Chapter 2: The Nature Of Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch3.md/#chapter-3-managing-function-inputs&quot;&gt;Chapter 3: Managing Function Inputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch4.md/#chapter-4-composing-functions&quot;&gt;Chapter 4: Composing Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch5.md/#chapter-5-reducing-side-effects&quot;&gt;Chapter 5: Reducing Side Effects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch6.md/#chapter-6-value-immutability&quot;&gt;Chapter 6: Value Immutability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch7.md/#chapter-7-closure-vs-object&quot;&gt;Chapter 7: Closure vs Object&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch8.md/#chapter-8-recursion&quot;&gt;Chapter 8: Recursion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch9.md/#chapter-9-list-operations&quot;&gt;Chapter 9: List Operations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch10.md/#chapter-10-functional-async&quot;&gt;Chapter 10: Functional Async&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/ch11.md/#chapter-11-putting-it-all-together&quot;&gt;Chapter 11: Putting It All Together&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/apA.md/#appendix-a-transducing&quot;&gt;Appendix A: Transducing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/apB.md/#appendix-b-the-humble-monad&quot;&gt;Appendix B: The Humble Monad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/manuscript/apC.md/#appendix-c-fp-libraries&quot;&gt;Appendix C: FP Libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Publishing&lt;/h2&gt; 
&lt;p&gt;This book has been published and is now available for purchase (in both ebook and print formats) from these sources:&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;http://fljsbook.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Buy-Leanpub-yellow.svg?sanitize=true&quot; title=&quot;Buy on Leanpub&quot; alt=&quot;Buy on Leanpub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://manning.fljsbook.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Buy-Manning-yellow.svg?sanitize=true&quot; title=&quot;Buy on Manning&quot; alt=&quot;Buy on Manning&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://amazon.fljsbook.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Buy-Amazon-yellow.svg?sanitize=true&quot; title=&quot;Buy on Amazon&quot; alt=&quot;Buy on Amazon&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;If you&#39;d like additionally to contribute financially towards the effort (or any of my other OSS work) aside from purchasing the book, I do have a &lt;a href=&quot;https://www.patreon.com/getify&quot;&gt;patreon&lt;/a&gt; that I would always appreciate your generosity towards.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.patreon.com/getify&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.patreon.com/getify&quot;&gt;&lt;img src=&quot;https://c5.patreon.com/external/logo/become_a_patron_button.png&quot; alt=&quot;patreon.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;In-person Training&lt;/h2&gt; 
&lt;p&gt;The content for this book derives heavily from a training workshop I teach professionally (in both public and private-corporate workshop format) of the same name.&lt;/p&gt; 
&lt;p&gt;If you like this content and would like to contact me regarding conducting training on this, or other various JS/HTML5/Node.js topics, please reach out to me through email: getify @ gmail&lt;/p&gt; 
&lt;h2&gt;Online Video Training&lt;/h2&gt; 
&lt;p&gt;I also have several JS training courses available in on-demand video format. I &lt;a href=&quot;https://FrontendMasters.com/teachers/kyle-simpson&quot;&gt;teach courses&lt;/a&gt; through &lt;a href=&quot;https://FrontendMasters.com&quot;&gt;Frontend Masters&lt;/a&gt;, like my &lt;a href=&quot;https://frontendmasters.com/courses/functional-javascript-v2/&quot;&gt;Functional-Light JavaScript v2&lt;/a&gt; workshop. Some of my courses are also available on &lt;a href=&quot;https://www.pluralsight.com/search?q=kyle%20simpson&amp;amp;categories=all&quot;&gt;PluralSight&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;Any contributions you make to this effort &lt;strong&gt;are of course greatly appreciated&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;But &lt;strong&gt;PLEASE&lt;/strong&gt; read the &lt;a href=&quot;https://raw.githubusercontent.com/getify/Functional-Light-JS/master/CONTRIBUTING.md&quot;&gt;Contributions Guidelines&lt;/a&gt; carefully before submitting a PR.&lt;/p&gt; 
&lt;h2&gt;License &amp;amp; Copyright&lt;/h2&gt; 
&lt;p&gt;The materials herein are all (c) 2016-2018 Kyle Simpson.&lt;/p&gt; 
&lt;p&gt;&lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-nc-nd/4.0/&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; style=&quot;border-width:0&quot; src=&quot;https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png&quot;&gt;&lt;/a&gt;&lt;br&gt;This work is licensed under a &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-nc-nd/4.0/&quot;&gt;Creative Commons Attribution-NonCommercial-NoDerivs 4.0 Unported License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MonsterNone/tmall-miao</title>
      <link>https://github.com/MonsterNone/tmall-miao</link>
      <description>&lt;p&gt;ÂèåÂçÅ‰∏ÄÂ§©Áå´„ÄÅ‰∫¨‰∏ú‰ªªÂä°‰∏ÄÈîÆÂÆåÊàêÔºàÁªïËøáÊ∑òÂÆùÊ£ÄÊµãÔºåÊñ∞ÁâàÊ∑òÂÆù‰πüËÉΩÁî®Ôºâ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tmall-miao&lt;/h1&gt; 
&lt;p&gt;&lt;del&gt;Â§©Áå´618/ÂèåÂçÅ‰∏ÄÂñµÂ∏Å‰ªªÂä°‰∏ÄÈîÆÂÆåÊàê&lt;/del&gt; &lt;del&gt;Áé∞Âú®ÊòØÂπ¥Ë¥ßËäÇ‰ªªÂä°‰∫Ü&lt;/del&gt; &lt;del&gt;2021618ÂºÄÂßã‰∫Ü&lt;/del&gt; &lt;del&gt;Â§©Áå´Â••Ëøê‰ªªÂä°&lt;/del&gt; Â§©Áå´„ÄÅ‰∫¨‰∏ú2021ÂèåÂçÅ‰∏Ä‰ªªÂä°&lt;/p&gt; 
&lt;h1&gt;ÁâπÂà´Áî≥Êòé&lt;/h1&gt; 
&lt;p&gt;Êú¨‰ªìÂ∫ì‰ªÖÁî®‰∫éÊµãËØïÂíåÂ≠¶‰π†Á†îÁ©∂ÔºåÁ¶ÅÊ≠¢Áî®‰∫éÂïÜ‰∏öÁî®ÈÄîÔºå‰∏çËÉΩ‰øùËØÅÂÖ∂ÂêàÊ≥ïÊÄßÔºåÂáÜÁ°ÆÊÄßÔºåÂÆåÊï¥ÊÄßÂíåÊúâÊïàÊÄßÔºåËØ∑Ê†πÊçÆÊÉÖÂÜµËá™Ë°åÂà§Êñ≠„ÄÇ&lt;/p&gt; 
&lt;p&gt;Êú¨È°πÁõÆÂÜÖÊâÄÊúâËµÑÊ∫êÊñá‰ª∂ÔºåÁ¶ÅÊ≠¢‰ªª‰ΩïÂÖ¨‰ºóÂè∑„ÄÅËá™Â™í‰ΩìËøõË°å‰ªª‰ΩïÂΩ¢ÂºèÁöÑËΩ¨ËΩΩ„ÄÅÂèëÂ∏É„ÄÇ&lt;/p&gt; 
&lt;p&gt;Êú¨‰∫∫ÂØπ‰ªª‰ΩïËÑöÊú¨ÈóÆÈ¢òÊ¶Ç‰∏çË¥üË¥£ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÁî±‰ªª‰ΩïËÑöÊú¨ÈîôËØØÂØºËá¥ÁöÑ‰ªª‰ΩïÊçüÂ§±ÊàñÊçüÂÆ≥„ÄÇ&lt;/p&gt; 
&lt;p&gt;ËØ∑ÂãøÂ∞ÜÊ≠§È°πÁõÆÁöÑ‰ªª‰ΩïÂÜÖÂÆπÁî®‰∫éÂïÜ‰∏öÊàñÈùûÊ≥ïÁõÆÁöÑÔºåÂê¶ÂàôÂêéÊûúËá™Ë¥ü„ÄÇ&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Êñ∞Áâà‰ΩøÁî®‰∫ÜÊñ∞ÁöÑÊâìÂåÖÊñπÂºèÔºåÂ∑≤Áªè‰∏ç‰ºöË¢´Ê∑òÂÆùÊ£ÄÊµãÂà∞‰∫ÜÔºå10.0.0Ê∑òÂÆùÊµãËØïOK&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Â¶ÇÊûú‰ªªÂä°Âè™ÊúâÂá†ÁôæÂñµÂ∏ÅÔºåËØ∑ÂÖàÊ£ÄÊü•ÊòØÂê¶ÂÆâË£Ö‰∫ÜÂÖ∂‰ªñËæÖÂä©„ÄÇÊ∑òÂÆù‰ºöÊ£ÄÊµãÊó†ÈöúÁ¢çÊúçÂä°ÁöÑÂåÖÂêçÔºå‰ªª‰ΩïÂåÖÂê´autojs„ÄÅËÑöÊú¨Á≤æÁÅµÁ≠âÂåÖÂêçÁöÑÊúçÂä°ÈÉΩ‰ºöË¢´Âà§ÂÆö‰ΩúÂºä„ÄÇ **Â¶ÇÊûú‰∏çÊÉ≥Âà†Èô§ÂÖ∂‰ªñËæÖÂä©ÔºåÂèØ‰ª•ËØïËØïÂèåÂºÄÊ∑òÂÆùÔºåÁî®Êñ∞ÂºÄÁöÑÊ∑òÂÆùÁôªÂΩïÂ∏êÂè∑ËøêË°åËÑöÊú¨„ÄÇ**ÊàñËÄÖÂèØ‰ª•Âú®Â∫îÁî®ÂàóË°®‰∏≠‚ÄúÂº∫Âà∂ÂÅúÊ≠¢‚ÄùÂÖ∂‰ªñËæÖÂä©ÔºàÊùÄÊéâÂêéÂè∞ÔºâÔºå‰∏çÊé®Ëçê„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÊöÇ‰∏çÊ∏ÖÊ•örootÊùÉÈôêÊòØÂê¶‰ºöÈÄ†ÊàêÂΩ±Âìç„ÄÇxposedÂíåmagiskÊúâÊ¶ÇÁéáË¢´Âà§ÂÆö„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;Âü∫‰∫éAuto.JSÂπ≥Âè∞ÔºåÊâìÂåÖÁâàAPK‰∏ãËΩΩÂú∞ÂùÄ &lt;a href=&quot;https://github.com/MonsterNone/tmall-miao/releases/latest&quot;&gt;https://github.com/MonsterNone/tmall-miao/releases/latest&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Âá∫Áé∞bugÁõ¥Êé•ÊèêissueÔºåËØ∑ÈôÑ‰∏äÊú∫Âûã„ÄÅÁ≥ªÁªüÁâàÊú¨„ÄÅÊà™Âõæ„ÄÅÈîôËØØÊó•ÂøóÁ≠â&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Âõ†‰∏∫ÂÜÖÂê´ÊâìÂºÄÊ∑òÂÆùÁöÑÊìç‰ΩúÔºåÈÉ®ÂàÜÊâãÊú∫ÁÆ°ÂÆ∂‰ºöÊä•È£éÈô©ËΩØ‰ª∂„ÄÇÈô§‰∫ÜÊó†ÈöúÁ¢çÊìç‰ΩúÂíåÊÇ¨ÊµÆÁ™óÊùÉÈôêÂ§ñÔºåÂÖ∂‰ªñ‰ªª‰ΩïÊùÉÈôêÈÉΩÂèØ‰ª•ÊãíÁªùÊéà‰∫à„ÄÇÔºàÊé®ËçêÂÖÅËÆ∏ÁΩëÁªúÊùÉÈôêÊ£ÄÊü•Êõ¥Êñ∞ÔºâÂ∞èÁ±≥ÊâãÊú∫ÂøÖÈ°ªÊâìÂºÄ&lt;code&gt;ÂêéÂè∞ÂºπÂá∫Á™óÂè£&lt;/code&gt;ÊùÉÈôêÔºåÂê¶ÂàôÊó†Ê≥ïÁî≥ËØ∑Êà™Â±èÊùÉÈôê„ÄÇ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zero205/JD_tencent_scf</title>
      <link>https://github.com/zero205/JD_tencent_scf</link>
      <description>&lt;p&gt;Ëá™Áî®‰∫¨‰∏úJSËÑöÊú¨ÔºåÂ∑≤Âä†ÂÖ•Âä©ÂäõÊ±†ÔºõÊîØÊåÅ„ÄêÈùíÈæô„Äë„ÄÅ„ÄêËÖæËÆØ‰∫ëÂáΩÊï∞„Äë„ÄÅ„ÄêelecV2P„ÄëÔºõ‰ΩéË∞É‰ΩøÁî®ÔºåËØ∑ÂãøforkÔºÅÔºÅÔºÅ&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Á¶ÅÊ≠¢Star/Fork!!&lt;/h2&gt; 
&lt;h2&gt;ËØ∑Âãø‰ΩøÁî®ActionËøêË°åËÑöÊú¨!&lt;/h2&gt; 
&lt;h2&gt;ÊúâÊù°ÔºàÁßëÂ≠¶Ôºâ‰ª∂Ôºà‰∏äÁΩëÔºâÁöÑÂèØ‰ª• &lt;a href=&quot;https://t.me/jd_zero_205&quot;&gt;ÁÇπÊ≠§Âä†ÂÖ•ÁªÑÁªá&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;Êú¨‰ªìÂ∫ìÈÉ®ÂàÜËÑöÊú¨Â∑≤Âä†ÂÖ•JDHelloWorldÂ§ß‰Ω¨Âä©ÂäõÊ±†ÔºåÈªòËÆ§Âä†ÂÖ•Âä©ÂäõÊ±†‰∫íÂä©&lt;/h2&gt; 
&lt;h2&gt;Áî±‰∫éÈôêÂà∂TGÁæ§ÂÜÖÊàêÂëòÊèê‰∫§Âä©ÂäõÁ†ÅÔºåËØ∑ÈúÄË¶Å‰∫íÂä©ÁöÑ &lt;a href=&quot;https://t.me/jd_zero_205&quot;&gt;Âä†ÂÖ•ÁªÑÁªá&lt;/a&gt;ÔºåÂõûÂ§çÂä©ÂäõÊ±†ÔºåËé∑Âèñ‰ΩøÁî®&lt;a href=&quot;https://t.me/jd_zero205_tz/53&quot;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;‰∏çÈúÄË¶ÅÂä©ÂäõÊ±†ËØ∑Ê∑ªÂä†ÁéØÂ¢ÉÂèòÈáèÔºåÂèòÈáèÂêçÔºö&lt;code&gt;JD_JOIN_ZLC&lt;/code&gt;ÔºåÂèòÈáèÂÄºÔºö&lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;h2&gt;ËØ∑ÂãøÁõ¥Êé•forkÔºÅÔºÅ‰∫ëÂáΩÊï∞Áî®Êà∑ÂÖàÊåâÁÖß‰∏ãÊñπÊïôÁ®ãÂª∫Á´ãÁßÅÂ∫ìÔºÅÔºÅÔºÅ&lt;/h2&gt; 
&lt;h2&gt;Â∑≤ÁªèÂàõÂª∫ÂÖ¨ÂºÄ‰ªìÂ∫ìÁöÑËØ∑ÁÇπÂáª‰ªìÂ∫ìÂè≥‰∏äËßí&lt;code&gt;Setting&lt;/code&gt;ÔºåÊãâÂà∞È°µÈù¢ÊúÄ‰∏ãÊñπÔºåÁÇπÂáª&lt;code&gt;Change visibility&lt;/code&gt;ÔºåÈÄâÊã©&lt;code&gt;Make private&lt;/code&gt;ÔºåÂ°´ÂÖ•Èªë‰Ωì‰ªìÂ∫ìÂêçÁß∞ËøõË°åÁ°ÆËÆ§!&lt;/h2&gt; 
&lt;h3&gt;ÊñπÂºè‰∏Ä(Â¶ÇÊûúÊúâ‰∏ÄÂÆögithubÂü∫Á°ÄÔºåÂçÅÂàÜÂª∫ËÆÆÁõ¥Êé•ÊñπÂºè‰∫å)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Âª∫ËÆÆÈòÖËØª@hshx123Â§ß‰Ω¨ÁöÑ&lt;a href=&quot;https://66ccff.work/teach/jd.html&quot;&gt;ÊïôÁ®ã&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;ÊñπÂºè‰∫å&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊúâËÉΩÂäõÁî®Êà∑ÂèØ‰ª•ËøõË°åÂ∞ùËØï,ÈÄöËøá‰ªª‰ΩïÊñπÊ≥ïÈÉΩÂèØ‰ª•,Âú®Á©∫‰ªìÂ∫ìÂÜÖ(‰øùËØÅÂàÜÊîØÂêçÁß∞‰∏∫&lt;code&gt;main&lt;/code&gt;),ÊåâÈúÄËøêË°å‰∏ÄÊ¨° &lt;a href=&quot;https://github.com/Ca11back/doge-template&quot;&gt;https://github.com/Ca11back/doge-template&lt;/a&gt; ÁöÑactionÂç≥ÂèØ&lt;/li&gt; 
 &lt;li&gt;Á¨¨‰∫åÁßç:Áõ¥Êé•clone‰∏Ä‰∏™&lt;code&gt;scf2&lt;/code&gt;ÂàÜÊîØ(ÂêçÂ≠óÈúÄË¶Å‰∏∫&lt;code&gt;main&lt;/code&gt;,cloneÂì™‰∏™ÂèñÂÜ≥‰∫é‰Ω†Ë¶ÅÁî®ÁöÑÈÉ®ÁΩ≤ÊñπÂºè)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ëá™Âä®ÂêåÊ≠•Êú¨‰ªìÂ∫ìËÑöÊú¨ÊïôÁ®ãÔºö&lt;a href=&quot;https://github.com/zero205/JD_tencent_scf/raw/main/backUp/reposync.md&quot;&gt;ÁÇπÊ≠§Êü•Áúã&lt;/a&gt;&lt;/h2&gt; 
&lt;h1&gt;‰ΩøÁî®ÊïôÁ®ã&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;„ÄêÈùíÈæô„ÄëÊãâÂèñ‰ªìÂ∫ìÂëΩ‰ª§Ôºö&lt;code&gt;ql repo https://github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|getJDCookie&quot; &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign&quot; &quot;main&quot;&lt;/code&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;blockquote&gt; 
     &lt;p&gt;‰∏äÈù¢ÂëΩ‰ª§ÊãâÂèñÈîôËØØÁöÑ‰ΩøÁî®Ëøô‰∏™Ôºö&lt;code&gt;ql repo https://ghproxy.com/https://github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|getJDCookie&quot; &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign&quot; &quot;main&quot;&lt;/code&gt;&lt;/p&gt; 
    &lt;/blockquote&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;ËÖæËÆØ‰∫ëÂáΩÊï∞ÈÉ®ÁΩ≤Âª∫ËÆÆÈòÖËØª@hshx123Â§ß‰Ω¨ÁöÑ&lt;a href=&quot;https://66ccff.work/teach/jd.html&quot;&gt;ÊïôÁ®ã&lt;/a&gt;„ÄêÊé®Ëçê„Äë.&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/tencentscf.md&quot;&gt;ÊóßÊïôÁ®ã&lt;/a&gt;„ÄêÂ§áÁî®„Äë&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;a href=&quot;https://github.com/elecV2/elecV2P&quot;&gt;elecV2P&lt;/a&gt; ÈÉ®ÁΩ≤„ÄêÈöèÁºòÁª¥Êä§ÔºåÂª∫ËÆÆËΩ¨Êàò‚ûü&lt;a href=&quot;https://www.runoob.com/docker/windows-docker-install.html&quot;&gt;Docker&lt;/a&gt; &lt;a href=&quot;https://github.com/whyour/qinglong&quot;&gt;ÈùíÈæô&lt;/a&gt;„Äë&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ÂÆâË£ÖÊïôÁ®ãÔºö&lt;a href=&quot;https://github.com/elecV2/elecV2P-dei/raw/master/docs/01-overview.md&quot;&gt;ÁÇπÊ≠§Êü•Áúã&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;ËÆ¢ÈòÖ‰ªªÂä°Ôºö&lt;code&gt;https://ghproxy.com/https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/jd_task.json&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;elecV2P‰∫¨‰∏úCK„ÄÅÈÄöÁü•Â°´ÂÜôÊ†ºÂºèÁ≠âÁõ∏ÂÖ≥Ë°•ÂÖÖËØ¥ÊòéÔºö&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/elecV2P.md&quot;&gt;ÁÇπÊ≠§Êü•Áúã&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ëé∑Âèñ‰∫¨‰∏úcookieÊïôÁ®ãÂèØÂèÇËÄÉÔºö&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/GetJdCookie.md&quot;&gt;ÊµèËßàÂô®Ëé∑Âèñ‰∫¨‰∏úcookieÊïôÁ®ã&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/GetJdCookie2.md&quot;&gt;Êèí‰ª∂Ëé∑Âèñ‰∫¨‰∏úcookieÊïôÁ®ã&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/GetJdCookie3.md&quot;&gt;ÊµèËßàÂô®Êâ©Â±ïÁ®ãÂ∫èËé∑Âèñ‰∫¨‰∏úcookieÊïôÁ®ã&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÁâπÂà´Â£∞Êòé:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Êú¨‰ªìÂ∫ìÂèëÂ∏ÉÁöÑScriptÈ°πÁõÆ‰∏≠Ê∂âÂèäÁöÑ‰ªª‰ΩïËß£ÈîÅÂíåËß£ÂØÜÂàÜÊûêËÑöÊú¨Ôºå‰ªÖÁî®‰∫éÊµãËØïÂíåÂ≠¶‰π†Á†îÁ©∂ÔºåÁ¶ÅÊ≠¢Áî®‰∫éÂïÜ‰∏öÁî®ÈÄîÔºå‰∏çËÉΩ‰øùËØÅÂÖ∂ÂêàÊ≥ïÊÄßÔºåÂáÜÁ°ÆÊÄßÔºåÂÆåÊï¥ÊÄßÂíåÊúâÊïàÊÄßÔºåËØ∑Ê†πÊçÆÊÉÖÂÜµËá™Ë°åÂà§Êñ≠.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Êú¨È°πÁõÆÂÜÖÊâÄÊúâËµÑÊ∫êÊñá‰ª∂ÔºåÁ¶ÅÊ≠¢‰ªª‰ΩïÂÖ¨‰ºóÂè∑„ÄÅËá™Â™í‰ΩìËøõË°å‰ªª‰ΩïÂΩ¢ÂºèÁöÑËΩ¨ËΩΩ„ÄÅÂèëÂ∏É„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;lxk0301ÂØπ‰ªª‰ΩïËÑöÊú¨ÈóÆÈ¢òÊ¶Ç‰∏çË¥üË¥£ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÁî±‰ªª‰ΩïËÑöÊú¨ÈîôËØØÂØºËá¥ÁöÑ‰ªª‰ΩïÊçüÂ§±ÊàñÊçüÂÆ≥.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Èó¥Êé•‰ΩøÁî®ËÑöÊú¨ÁöÑ‰ªª‰ΩïÁî®Êà∑ÔºåÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÂª∫Á´ãVPSÊàñÂú®Êüê‰∫õË°å‰∏∫ËøùÂèçÂõΩÂÆ∂/Âú∞Âå∫Ê≥ïÂæãÊàñÁõ∏ÂÖ≥Ê≥ïËßÑÁöÑÊÉÖÂÜµ‰∏ãËøõË°å‰º†Êí≠, lxk0301 ÂØπ‰∫éÁî±Ê≠§ÂºïËµ∑ÁöÑ‰ªª‰ΩïÈöêÁßÅÊ≥ÑÊºèÊàñÂÖ∂‰ªñÂêéÊûúÊ¶Ç‰∏çË¥üË¥£.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ËØ∑ÂãøÂ∞ÜScriptÈ°πÁõÆÁöÑ‰ªª‰ΩïÂÜÖÂÆπÁî®‰∫éÂïÜ‰∏öÊàñÈùûÊ≥ïÁõÆÁöÑÔºåÂê¶ÂàôÂêéÊûúËá™Ë¥ü.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Â¶ÇÊûú‰ªª‰ΩïÂçï‰ΩçÊàñ‰∏™‰∫∫ËÆ§‰∏∫ËØ•È°πÁõÆÁöÑËÑöÊú¨ÂèØËÉΩÊ∂âÂ´å‰æµÁäØÂÖ∂ÊùÉÂà©ÔºåÂàôÂ∫îÂèäÊó∂ÈÄöÁü•Âπ∂Êèê‰æõË∫´‰ªΩËØÅÊòéÔºåÊâÄÊúâÊùÉËØÅÊòéÔºåÊàë‰ª¨Â∞ÜÂú®Êî∂Âà∞ËÆ§ËØÅÊñá‰ª∂ÂêéÂà†Èô§Áõ∏ÂÖ≥ËÑöÊú¨.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;‰ªª‰Ωï‰ª•‰ªª‰ΩïÊñπÂºèÊü•ÁúãÊ≠§È°πÁõÆÁöÑ‰∫∫ÊàñÁõ¥Êé•ÊàñÈó¥Êé•‰ΩøÁî®ËØ•ScriptÈ°πÁõÆÁöÑ‰ªª‰ΩïËÑöÊú¨ÁöÑ‰ΩøÁî®ËÄÖÈÉΩÂ∫î‰ªîÁªÜÈòÖËØªÊ≠§Â£∞Êòé„ÄÇlxk0301 ‰øùÁïôÈöèÊó∂Êõ¥ÊîπÊàñË°•ÂÖÖÊ≠§ÂÖçË¥£Â£∞ÊòéÁöÑÊùÉÂà©„ÄÇ‰∏ÄÊó¶‰ΩøÁî®Âπ∂Â§çÂà∂‰∫Ü‰ªª‰ΩïÁõ∏ÂÖ≥ËÑöÊú¨ÊàñScriptÈ°πÁõÆÁöÑËßÑÂàôÔºåÂàôËßÜ‰∏∫ÊÇ®Â∑≤Êé•ÂèóÊ≠§ÂÖçË¥£Â£∞Êòé.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;ÊÇ®ÂøÖÈ°ªÂú®‰∏ãËΩΩÂêéÁöÑ24Â∞èÊó∂ÂÜÖ‰ªéËÆ°ÁÆóÊú∫ÊàñÊâãÊú∫‰∏≠ÂÆåÂÖ®Âà†Èô§‰ª•‰∏äÂÜÖÂÆπ.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;ÊÇ®‰ΩøÁî®ÊàñËÄÖÂ§çÂà∂‰∫ÜÊú¨‰ªìÂ∫ì‰∏îÊú¨‰∫∫Âà∂‰ΩúÁöÑ‰ªª‰ΩïËÑöÊú¨ÔºåÂàôËßÜ‰∏∫&lt;code&gt;Â∑≤Êé•Âèó&lt;/code&gt;Ê≠§Â£∞ÊòéÔºåËØ∑‰ªîÁªÜÈòÖËØª&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ÁéØÂ¢ÉÂèòÈáè&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/githubAction.md&quot;&gt;ÁéØÂ¢ÉÂèòÈáèÈõÜÂêà&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÁâπÂà´ÊÑüË∞¢(ÊéíÂêç‰∏çÂàÜÂÖàÂêé)Ôºö&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/liuxiaoyucc&quot;&gt;@liuxiaoyucc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Zero-S1&quot;&gt;@Zero-S1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/uniqueque&quot;&gt;@uniqueque&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/nzw9314&quot;&gt;@nzw9314&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/JDHelloWorld&quot;&gt;@JDHelloWorld&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/smiek2221&quot;&gt;@smiek2221&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/star261&quot;&gt;@star261&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Wenmoux&quot;&gt;@Wenmoux&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Tsukasa007&quot;&gt;@Tsukasa007&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Aaron&quot;&gt;@Aaron&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>BetterDiscord/BetterDiscord</title>
      <link>https://github.com/BetterDiscord/BetterDiscord</link>
      <description>&lt;p&gt;Better Discord enhances Discord desktop app with new features.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BetterDiscord &lt;a href=&quot;https://lgtm.com/projects/g/BetterDiscord/BetterDiscord/context:javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/grade/javascript/g/BetterDiscord/BetterDiscord.svg?style=flat-square&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/BetterDiscord/BetterDiscord/latest/total?style=flat-square&quot; alt=&quot;GitHub Releases&quot;&gt; &lt;a href=&quot;https://patreon.com/Zerebos&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Fshieldsio-patreon.vercel.app%2Fapi%3Fusername%3DZerebos%26type%3Dpatrons&amp;amp;style=flat-square&quot; alt=&quot;Patreon&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://paypal.me/ZackRauen&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Paypal-Donate!-%2300457C.svg?logo=paypal&amp;amp;style=flat-square&quot; alt=&quot;Paypal&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;BetterDiscord is a client modification for Discord. This allows you to add plugins and themes to your personal copy of Discord. BetterDiscord also adds a number of other features out of the box.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;h2&gt;Auto Installers&lt;/h2&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Grab the &lt;code&gt;exe&lt;/code&gt; file from &lt;a href=&quot;https://github.com/BetterDiscord/Installer/releases/latest/download/BetterDiscord-Windows.exe&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;macOS/OS X&lt;/h3&gt; 
&lt;p&gt;Grab the &lt;code&gt;zip&lt;/code&gt; file from &lt;a href=&quot;https://github.com/BetterDiscord/Installer/releases/latest/download/BetterDiscord-Mac.zip&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;Grab the &lt;code&gt;AppImage&lt;/code&gt; file from &lt;a href=&quot;https://github.com/BetterDiscord/Installer/releases/latest/download/BetterDiscord-Linux.AppImage&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Manual Installation&lt;/h2&gt; 
&lt;p&gt;For normal users, installing via the installers makes the most sense. However when wanting to either develop BetterDiscord, or when the installers do not work, this option can be used.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: &lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; 12.x+ and the package manager &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repository &lt;code&gt;git clone https://github.com/BetterDiscord/BetterDiscord.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies with &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build both the Injector and Renderer bundles with &lt;code&gt;npm run build&lt;/code&gt; this will create a &lt;code&gt;injector.js&lt;/code&gt;, &lt;code&gt;preload.js&lt;/code&gt;, and &lt;code&gt;renderer.js&lt;/code&gt; in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/li&gt; 
 &lt;li&gt;Run the inject script to inject the local files into your Discord client (&lt;code&gt;npm run inject&lt;/code&gt;). Alternately install it to non-stable using &lt;code&gt;npm run inject canary&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;FAQ&lt;/h1&gt; 
&lt;h3&gt;What is this?&lt;/h3&gt; 
&lt;p&gt;This is a client modification for Discord. It allows you to add plugins and themes to your client. Plugins can add functionality and useful features. Themes can completely change the look and feel of Discord.&lt;/p&gt; 
&lt;p&gt;BD has some other built-in features such as Emotes from Twitch, FFZ, and BBTV, as well as an in-client server browser.&lt;/p&gt; 
&lt;h3&gt;Where can I get plugins and themes?&lt;/h3&gt; 
&lt;p&gt;The easiest way to find plugins and themes is to browse them on &lt;a href=&quot;https://betterdiscord.app/&quot;&gt;our website: https://betterdiscord.app/&lt;/a&gt;. Additionally, in our &lt;a href=&quot;https://raw.githubusercontent.com/BetterDiscord/BetterDiscord/main/#support-servers&quot;&gt;support servers&lt;/a&gt; we have channels with lists of &lt;u&gt;official&lt;/u&gt; plugins and themes.&lt;/p&gt; 
&lt;h3&gt;Support Servers?&lt;/h3&gt; 
&lt;p&gt;There are two: &lt;a href=&quot;https://discord.gg/bnSUxedypU&quot;&gt;The main server&lt;/a&gt;, and &lt;a href=&quot;https://discord.gg/XqSpb9e3dq&quot;&gt;the backup&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Supporters&lt;/h1&gt; 
&lt;p&gt;These people have all subscribed to the &lt;code&gt;True Supporter&lt;/code&gt; tier on Patreon to support me.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/196098063092154368/90f1a7202955dac7a6c685cca3181ab1.webp&quot; width=&quot;100px;&quot; alt=&quot;Kraken&quot;&gt;&lt;br&gt; &lt;strong&gt;Kraken&lt;/strong&gt;&lt;br&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/attachments/585514483699417089/585552300354043915/34959069_500_500.jpg&quot; width=&quot;100px;&quot; alt=&quot;SPHHAX&quot;&gt;&lt;br&gt; &lt;a href=&quot;http://sphh.ax/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;&lt;strong&gt;SPHHAX&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/attachments/622954403262889995/622957122765848587/5364774.jpg&quot; width=&quot;100px;&quot; alt=&quot;DefCon42&quot;&gt;&lt;br&gt; &lt;a href=&quot;https://twitter.com/def_con42&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;&lt;strong&gt;DefCon42&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/629231564261425163/a_36cc7d2940b4ffb8a660b1076ab2087f.webp&quot; width=&quot;100px;&quot; alt=&quot;Justxn&quot;&gt;&lt;br&gt; &lt;strong&gt;Justxn&lt;/strong&gt;&lt;br&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/attachments/682750073448169513/682763113296429087/definitely_not_the_dick_police.png&quot; width=&quot;100px;&quot; alt=&quot;monkey&quot;&gt;&lt;br&gt; &lt;a href=&quot;https://heartunderbla.de&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;&lt;strong&gt;monkey&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://avatars3.githubusercontent.com/u/20338746?s=460&amp;amp;u=d9ebab4f6f0f5221390bca1eaf8f191acd275afe&amp;amp;v=4&quot; width=&quot;100px;&quot; alt=&quot;Gibbu&quot;&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/Gibbu&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;&lt;strong&gt;Gibbu&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.imgur.com/ImS2OCB.png&quot; width=&quot;100px;&quot; alt=&quot;Orekieh&quot;&gt;&lt;br&gt; &lt;strong&gt;Orekieh&lt;/strong&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h1&gt;Bandagers&lt;/h1&gt; 
&lt;p&gt;These people have all subscribed to the &lt;code&gt;Bandager&lt;/code&gt; tier on Patreon to support me.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/332199319169925120/4709f8f0c9cb7ababd85459bf71848b9.png&quot; width=&quot;50px;&quot; alt=&quot;William JCM&quot;&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/williamjcm&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;&lt;strong&gt;William JCM&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://avatars0.githubusercontent.com/u/24623601&quot; width=&quot;50px;&quot; alt=&quot;NFLD99&quot;&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/NFLD99&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;&lt;strong&gt;NFLD99&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.postimg.cc/5NVxqMnb/Cute-Squid-Circle.png&quot; width=&quot;50px;&quot; alt=&quot;Tenuit&quot;&gt;&lt;br&gt; &lt;strong&gt;Tenuit&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://avatars0.githubusercontent.com/u/16616715&quot; width=&quot;50px;&quot; alt=&quot;Pu&quot;&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/Puv1s&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;&lt;strong&gt;Pu&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/attachments/769608503496278036/769680733693804625/tacoindustries.jpg&quot; width=&quot;50px;&quot; alt=&quot;Paco&quot;&gt;&lt;br&gt; &lt;strong&gt;Paco&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/198801443279339520/4ae8e82ea9b136da4831ca6ac7c5082b.png&quot; width=&quot;50px;&quot; alt=&quot;Jordan&quot;&gt;&lt;br&gt; &lt;a href=&quot;https://reddit.com/r/kotlin&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;&lt;strong&gt;Jordan&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h1&gt;Donors&lt;/h1&gt; 
&lt;p&gt;These people have either donated or subscribed to the most basic patron tier to support me.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/284122164582416385/ebaa1b63191ce70e48ae24f32f452773.webp&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;aetheryx&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/216782345779281921/d4b651b606f108cd2f96a19af68f942f.png&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;JBeauDee&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/261673576216789004/31d590fb92329e270a6225a13d500c1d.png&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;vantiss&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/122204411962327043/7f44a9b036b9e2691f4e81d9e34a78b4.webp&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;xstefen&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/219400174869413888/7c88015869990ba97b614b1ac784f8e8.png&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;„ÄéSorey„Äè&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/95263213842608128/5024b83e1bff3096d7fc93e8de09d582.gif&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;LiVeR&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/144458450192171008/13a3e66d73d216974504b8aad257b7b4.png&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;SweetLilyCake&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.discordapp.com/avatars/398951709336010793/eb6f63eb2f3a5102fb900e60d1a26cdc.png&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;GameKuchen&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.imgur.com/qrWcKfH.png&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;Lozo&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://media.discordapp.net/attachments/575576868166828032/692136786893340752/pfp.gif&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;Akira&lt;/strong&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.pinimg.com/originals/07/c3/7d/07c37d854719dd633a11ff3f681d2019.jpg&quot; width=&quot;25px;&quot;&gt;&lt;br&gt; &lt;strong&gt;Pixel&lt;/strong&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>outline/outline</title>
      <link>https://github.com/outline/outline</link>
      <description>&lt;p&gt;The fastest wiki and knowledge base for growing teams. Beautiful, feature rich, and markdown compatible.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/31465/34380645-bd67f474-eb0b-11e7-8d03-0151c1730654.png&quot; height=&quot;29&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;i&gt;An open, extensible, wiki for your team built using React and Node.js.&lt;br&gt;Try out Outline using our hosted version at &lt;a href=&quot;https://www.getoutline.com&quot;&gt;www.getoutline.com&lt;/a&gt;.&lt;/i&gt; &lt;br&gt; &lt;img width=&quot;1640&quot; alt=&quot;screenshot&quot; src=&quot;https://user-images.githubusercontent.com/380914/110356468-26374600-7fef-11eb-9f6a-f2cc2c8c6590.png&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://circleci.com/gh/outline/outline&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/outline/outline.svg?style=shield&amp;amp;circle-token=c0c4c2f39990e277385d5c1ae96169c409eb887a&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/styled-components/styled-components&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/style-%F0%9F%92%85%20styled--components-orange.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://translate.getoutline.com/project/outline&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/outline/localized.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This is the source code that runs &lt;a href=&quot;https://www.getoutline.com&quot;&gt;&lt;strong&gt;Outline&lt;/strong&gt;&lt;/a&gt; and all the associated services. If you want to use Outline then you don&#39;t need to run this code, we offer a hosted version of the app at &lt;a href=&quot;https://www.getoutline.com&quot;&gt;getoutline.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to run your own copy of Outline or contribute to development then this is the place for you.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Outline requires the following dependencies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; &amp;gt;= 12&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/download/&quot;&gt;Postgres&lt;/a&gt; &amp;gt;=9.5&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; &amp;gt;= 4&lt;/li&gt; 
 &lt;li&gt;AWS S3 bucket or compatible API for file storage&lt;/li&gt; 
 &lt;li&gt;Slack, Google, Azure, or OIDC application for authentication&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Self-Hosted Production&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;For a manual self-hosted production installation these are the recommended steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;First setup Redis and Postgres servers, this is outside the scope of the guide.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download the latest official Docker image, new releases are available around the middle of every month:&lt;/p&gt; &lt;p&gt;&lt;code&gt;docker pull outlinewiki/outline&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Using the &lt;a href=&quot;https://raw.githubusercontent.com/outline/outline/main/.env.sample&quot;&gt;.env.sample&lt;/a&gt; as a reference, set the required variables in your production environment. You can export the environment variables directly, or create a &lt;code&gt;.env&lt;/code&gt; file and pass it to the docker image like so:&lt;/p&gt; &lt;p&gt;&lt;code&gt;docker run --env-file=.env outlinewiki/outline&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Setup the database with &lt;code&gt;yarn db:migrate&lt;/code&gt;. Production assumes an SSL connection to the database by default, if Postgres is on the same machine and is not SSL you can migrate with &lt;code&gt;yarn db:migrate --env=production-ssl-disabled&lt;/code&gt;, for example:&lt;/p&gt; &lt;p&gt;&lt;code&gt;docker run --rm outlinewiki/outline yarn db:migrate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start the container:&lt;/p&gt; &lt;p&gt;&lt;code&gt;docker run outlinewiki/outline&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Visit http://you_server_ip:3000 and you should be able to see Outline page&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Port number can be changed using the &lt;code&gt;PORT&lt;/code&gt; environment variable&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(Optional) You can add an &lt;code&gt;nginx&lt;/code&gt; or other reverse proxy to serve your instance of Outline for a clean URL without the port number, support SSL, etc.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Terraform&lt;/h3&gt; 
&lt;p&gt;Alternatively a community member maintains a script to deploy Outline on Google Cloud Platform with &lt;a href=&quot;https://github.com/rjsgn/outline-terraform-ansible&quot;&gt;Terraform &amp;amp; Ansible&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Upgrading&lt;/h3&gt; 
&lt;h4&gt;Docker&lt;/h4&gt; 
&lt;p&gt;If you&#39;re running Outline with Docker you&#39;ll need to run migrations within the docker container after updating the image. The command will be something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker run --rm outlinewiki/outline:latest yarn db:migrate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Git&lt;/h4&gt; 
&lt;p&gt;If you&#39;re running Outline by cloning this repository, run the following command to upgrade:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn run upgrade
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Local Development&lt;/h2&gt; 
&lt;p&gt;For contributing features and fixes you can quickly get an environment running using Docker by following these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install these dependencies if you don&#39;t already have them 
  &lt;ol&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.docker.com&quot;&gt;Docker for Desktop&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; (v12 LTS preferred)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Clone this repo&lt;/li&gt; 
 &lt;li&gt;Register a Slack app at &lt;a href=&quot;https://api.slack.com/apps&quot;&gt;https://api.slack.com/apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Copy the file &lt;code&gt;.env.sample&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Fill out the following fields: 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt; (follow instructions in the comments at the top of &lt;code&gt;.env&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;SLACK_KEY&lt;/code&gt; (this is called &quot;Client ID&quot; in Slack admin)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;SLACK_SECRET&lt;/code&gt; (this is called &quot;Client Secret&quot; in Slack admin)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Configure your Slack app&#39;s Oauth &amp;amp; Permissions settings 
  &lt;ol&gt; 
   &lt;li&gt;Slack recently prevented the use of &lt;code&gt;http&lt;/code&gt; protocol for localhost. For local development, you can use a tool like &lt;a href=&quot;https://ngrok.com&quot;&gt;ngrok&lt;/a&gt; or a package like &lt;code&gt;mkcert&lt;/code&gt;. (&lt;a href=&quot;https://web.dev/how-to-use-local-https/&quot;&gt;How to use HTTPS for local development&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;Add &lt;code&gt;https://my_ngrok_address/auth/slack.callback&lt;/code&gt; as an Oauth redirect URL&lt;/li&gt; 
   &lt;li&gt;Ensure that the bot token scope contains at least &lt;code&gt;users:read&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;make up&lt;/code&gt;. This will download dependencies, build and launch a development version of Outline&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Outline is built and maintained by a small team ‚Äì we&#39;d love your help to fix bugs and add features!&lt;/p&gt; 
&lt;p&gt;Before submitting a pull request please let the core team know by creating or commenting in an issue on &lt;a href=&quot;https://www.github.com/outline/outline/issues&quot;&gt;GitHub&lt;/a&gt;, and we&#39;d also love to hear from you in the &lt;a href=&quot;https://www.github.com/outline/outline/discussions&quot;&gt;Discussions&lt;/a&gt;. This way we can ensure that an approach is agreed on before code is written. This will result in a much higher liklihood of code being accepted.&lt;/p&gt; 
&lt;p&gt;If you‚Äôre looking for ways to get started, here&#39;s a list of ways to help us improve Outline:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/outline/outline/main/docs/TRANSLATION.md&quot;&gt;Translation&lt;/a&gt; into other languages&lt;/li&gt; 
 &lt;li&gt;Issues with &lt;a href=&quot;https://github.com/outline/outline/labels/good%20first%20issue&quot;&gt;&lt;code&gt;good first issue&lt;/code&gt;&lt;/a&gt; label&lt;/li&gt; 
 &lt;li&gt;Performance improvements, both on server and frontend&lt;/li&gt; 
 &lt;li&gt;Developer happiness and documentation&lt;/li&gt; 
 &lt;li&gt;Bugs and other issues listed on GitHub&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;If you&#39;re interested in contributing or learning more about the Outline codebase please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/outline/outline/main/docs/ARCHITECTURE.md&quot;&gt;architecture document&lt;/a&gt; first for a high level overview of how the application is put together.&lt;/p&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;p&gt;In development Outline outputs simple logging to the console, prefixed by categories. In production it outputs JSON logs, these can be easily parsed by your preferred log ingestion pipeline.&lt;/p&gt; 
&lt;p&gt;HTTP logging is disabled by default, but can be enabled by setting the &lt;code&gt;DEBUG=http&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;We aim to have sufficient test coverage for critical parts of the application and aren&#39;t aiming for 100% unit test coverage. All API endpoints and anything authentication related should be thoroughly tested.&lt;/p&gt; 
&lt;p&gt;To add new tests, write your tests with &lt;a href=&quot;https://facebook.github.io/jest/&quot;&gt;Jest&lt;/a&gt; and add a file with &lt;code&gt;.test.js&lt;/code&gt; extension next to the tested code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# To run all tests
make test

# To run backend tests in watch mode
make watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the test database is created with &lt;code&gt;make test&lt;/code&gt; you may individually run frontend and backend tests directly.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# To run backend tests
yarn test:server

# To run frontend tests
yarn test:app
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Migrations&lt;/h2&gt; 
&lt;p&gt;Sequelize is used to create and run migrations, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn sequelize migration:generate --name my-migration
yarn sequelize db:migrate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or to run migrations on test database:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn sequelize db:migrate --env test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Outline is &lt;a href=&quot;https://raw.githubusercontent.com/outline/outline/main/LICENSE&quot;&gt;BSL 1.1 licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/docsy</title>
      <link>https://github.com/google/docsy</link>
      <description>&lt;p&gt;A set of Hugo doc templates for launching open source content.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docsy&lt;/h1&gt; 
&lt;p&gt;Docsy is a &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; theme for technical documentation sets, providing simple navigation, site structure, and more.&lt;/p&gt; 
&lt;p&gt;This is not an officially supported Google product. This project is actively being maintained.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;The following are basic prerequisites for using Docsy in your site:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install a recent release of the Hugo &quot;extended&quot; version (we recommend version 0.53 or later). If you install from the &lt;a href=&quot;https://github.com/gohugoio/hugo/releases&quot;&gt;release page&lt;/a&gt;, make sure you download the &lt;code&gt;_extended&lt;/code&gt; version which supports SCSS.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;code&gt;PostCSS&lt;/code&gt; so that the site build can create the final CSS assets. You can install it locally by running the following commands from the root directory of your project:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo npm install -D --save autoprefixer
sudo npm install -D --save postcss-cli
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example and usage&lt;/h2&gt; 
&lt;p&gt;You can find an example project that uses Docsy in the &lt;a href=&quot;https://github.com/google/docsy-example&quot;&gt;Docsy Example Project repo&lt;/a&gt;.The Docsy Example Project is hosted at &lt;a href=&quot;https://example.docsy.dev/&quot;&gt;https://example.docsy.dev/&lt;/a&gt;. For real-life examples of sites that use Docsy (and their source repos), see our &lt;a href=&quot;https://www.docsy.dev/docs/examples/&quot;&gt;Examples&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To use the Docsy theme for your own site:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;(Recommended) Use the &lt;a href=&quot;https://github.com/google/docsy-example&quot;&gt;example project&lt;/a&gt;, which includes the Docsy theme as a submodule, as a template to create your project. You can customize this pre-configured basic site into your own Docsy themed site. &lt;a href=&quot;https://github.com/google/docsy-example&quot;&gt;Learn more...&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add Docsy to your existing Hugo site repo&#39;s &lt;code&gt;themes&lt;/code&gt; directory. You can either add Docsy as a Git submodule, or clone the Docsy theme into your project.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docsy.dev/docs/getting-started/&quot;&gt;Docsy Getting Started Guide&lt;/a&gt; for details about the various usage options.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Docsy has its own user guide (using Docsy, of course!) with lots more information about using the theme, which you can find at &lt;a href=&quot;https://docsy.dev/&quot;&gt;https://docsy.dev/&lt;/a&gt;. Alternatively you can use Hugo to generate and serve a local copy of the guide (also useful for testing local theme changes), making sure you have installed all the prerequisites listed above:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone --recurse-submodules --depth 1 https://github.com/google/docsy.git
cd docsy/userguide/
hugo server --themesDir ../..
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: you need the &lt;code&gt;themesDir&lt;/code&gt; flag when running Hugo because the site files are inside the theme repo.&lt;/p&gt; 
&lt;h2&gt;Contributing &lt;img src=&quot;https://img.shields.io/github/contributors/google/docsy&quot; alt=&quot;GitHub&quot;&gt;&lt;/h2&gt; 
&lt;p&gt;Please read &lt;a href=&quot;https://github.com/google/docsy/raw/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for details on our code of conduct, and the process for submitting pull requests to us. See also the list of &lt;a href=&quot;https://github.com/google/docsy/graphs/contributors&quot;&gt;contributors&lt;/a&gt; who participated in this project.&lt;/p&gt; 
&lt;h2&gt;License &lt;img src=&quot;https://img.shields.io/github/license/google/docsy&quot; alt=&quot;GitHub&quot;&gt;&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0 - see the &lt;a href=&quot;https://github.com/google/docsy/raw/master/LICENSE&quot;&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cdle/carry</title>
      <link>https://github.com/cdle/carry</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;carry&lt;/h1&gt; 
&lt;p&gt;Êê¨ËøêÂ≠¶‰π†&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dequelabs/axe-core</title>
      <link>https://github.com/dequelabs/axe-core</link>
      <description>&lt;p&gt;Accessibility engine for automated Web UI testing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;axe-core&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/axe-core.svg?sanitize=true&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/axe-core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/axe-core.svg?sanitize=true&quot; alt=&quot;Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/axe-core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/axe-core.svg?sanitize=true&quot; alt=&quot;Total npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dequelabs/axe-core/commits/develop&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/y/dequelabs/axe-core.svg?sanitize=true&quot; alt=&quot;Commits&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dequelabs/axe-core/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/dequelabs/axe-core.svg?sanitize=true&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://accessibility.deque.com/axe-community&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-chat-purple.svg?logo=slack&quot; alt=&quot;Join our Slack chat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://packagequality.com/#?package=axe-core&quot;&gt;&lt;img src=&quot;http://npm.packagequality.com/shield/axe-core.svg?sanitize=true&quot; alt=&quot;Package Quality&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Axe is an accessibility testing engine for websites and other HTML-based user interfaces. It&#39;s fast, secure, lightweight, and was built to seamlessly integrate with any existing test environment so you can automate accessibility testing alongside your regular functional testing.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hubs.ly/H0fsN0b0&quot;&gt;Sign up for axe news&lt;/a&gt; to get the latest on axe features, future releases, and events.&lt;/p&gt; 
&lt;h2&gt;The Accessibility Rules&lt;/h2&gt; 
&lt;p&gt;Axe-core has different types of rules, for WCAG 2.0 and 2.1 on level A and AA, as well as a number of best practices that help you identify common accessibility practices like ensuring every page has an &lt;code&gt;h1&lt;/code&gt; heading, and to help you avoid &quot;gotchas&quot; in ARIA like where an ARIA attribute you used will get ignored.&lt;/p&gt; 
&lt;p&gt;With axe-core, you can find &lt;strong&gt;on average 57% of WCAG issues automatically&lt;/strong&gt;. Additionally, axe-core will return elements as &quot;incomplete&quot; where axe-core could not be certain, and manual review is needed.&lt;/p&gt; 
&lt;p&gt;To catch bugs earlier in the development cycle we recommend using the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=deque-systems.vscode-axe-linter&quot;&gt;axe-linter vscode extension&lt;/a&gt;. To improve test coverage even further we recommend the &lt;a href=&quot;https://www.youtube.com/watch?v=AtsX0dPCG_4&amp;amp;feature=youtu.be&amp;amp;ab_channel=DequeSystems&quot;&gt;intelligent guided tests&lt;/a&gt; in the &lt;a href=&quot;https://www.deque.com/axe/browser-extensions/&quot;&gt;axe Extension&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The complete list of rules, grouped WCAG level and best practice, can found in &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/rule-descriptions.md&quot;&gt;doc/rule-descriptions.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;First download the package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;npm install axe-core --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now include the javascript file in each of your iframes in your fixtures or test systems:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;node_modules/axe-core/axe.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now insert calls at each point in your tests where a new piece of UI becomes visible or exposed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axe
  .run()
  .then(results =&amp;gt; {
    if (results.violations.length) {
      throw new Error(&#39;Accessibility issues found&#39;);
    }
  })
  .catch(err =&amp;gt; {
    console.error(&#39;Something bad happened:&#39;, err.message);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;The web can only become an accessible, inclusive space if developers are empowered to take responsibility for accessibility testing and accessible coding practices.&lt;/p&gt; 
&lt;p&gt;Automated accessibility testing is a huge timesaver, it doesn&#39;t require special expertise, and it allows teams to focus expert resources on the accessibility issues that really need them. Unfortunately, most accessibility tools are meant to be run on sites and applications that have reached the end of the development process and often don&#39;t give clear or consistent results, causing frustration and delays just when you thought your product was ready to ship.&lt;/p&gt; 
&lt;p&gt;Axe was built to reflect how web development actually works. It works with all modern browsers, tools, and testing environments a dev team might use. With axe, accessibility testing can be performed as part of your unit testing, integration testing, browser testing, and any other functional testing your team already performs on a day-to-day basis. Building accessibility testing into the early development process saves time, resources, and all kinds of frustration.&lt;/p&gt; 
&lt;h2&gt;About axe - our Manifesto&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Axe is open source.&lt;/li&gt; 
 &lt;li&gt;It returns zero false positives (bugs notwithstanding).&lt;/li&gt; 
 &lt;li&gt;It&#39;s designed to work on all modern browsers and with whatever tools, frameworks, libraries and environments you use today.&lt;/li&gt; 
 &lt;li&gt;It&#39;s actively supported by &lt;a href=&quot;https://www.deque.com&quot;&gt;Deque Systems&lt;/a&gt;, a major accessibility vendor.&lt;/li&gt; 
 &lt;li&gt;It integrates with your existing functional/acceptance automated tests.&lt;/li&gt; 
 &lt;li&gt;It automatically determines which rules to run based on the evaluation context.&lt;/li&gt; 
 &lt;li&gt;Axe supports in-memory fixtures, static fixtures, integration tests and iframes of infinite depth.&lt;/li&gt; 
 &lt;li&gt;Axe is highly configurable.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/API.md&quot;&gt;axe-core API&lt;/a&gt; fully supports the following browsers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Microsoft Edge v40 and above&lt;/li&gt; 
 &lt;li&gt;Google Chrome v42 and above&lt;/li&gt; 
 &lt;li&gt;Mozilla Firefox v38 and above&lt;/li&gt; 
 &lt;li&gt;Apple Safari v7 and above&lt;/li&gt; 
 &lt;li&gt;Internet Explorer v11&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Support means that we will fix bugs and attempt to test each browser regularly. Only Firefox, Chrome, and Internet Explorer 11 are currently tested on every pull request.&lt;/p&gt; 
&lt;p&gt;There is limited support for JSDOM. We will attempt to make all rules compatible with JSDOM but where this is not possible, we recommend turning those rules off. Currently the &lt;code&gt;color-contrast&lt;/code&gt; rule is known not to work with JSDOM.&lt;/p&gt; 
&lt;p&gt;We can only support environments where features are either natively supported or polyfilled correctly. We do not support the deprecated v0 Shadow DOM implementation.&lt;/p&gt; 
&lt;h2&gt;Contents of the API Package&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/API.md&quot;&gt;axe-core API&lt;/a&gt; package consists of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;axe.js&lt;/code&gt; - the JavaScript file that should be included in your web site under test (API)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;axe.min.js&lt;/code&gt; - a minified version of the above file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;Axe can be built using your local language. To do so, a localization file must be added to the &lt;code&gt;./locales&lt;/code&gt; directory. This file must have be named in the following manner: &lt;code&gt;&amp;lt;langcode&amp;gt;.json&lt;/code&gt;. To build axe using this locale, instead of the default, run axe with the &lt;code&gt;--lang&lt;/code&gt; flag, like so:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;grunt build --lang=nl&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;or equivalently:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm run build -- --lang=nl&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This will create a new build for axe, called &lt;code&gt;axe.&amp;lt;lang&amp;gt;.js&lt;/code&gt; and &lt;code&gt;axe.&amp;lt;lang&amp;gt;.min.js&lt;/code&gt;. If you want to build localized versions, simply pass in &lt;code&gt;--all-lang&lt;/code&gt; instead. If you want to build multiple localized versions (but not all of them), you can pass in a comma-separated list of langages to the &lt;code&gt;--lang&lt;/code&gt; flag, like &lt;code&gt;--lang=nl,ja&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To create a new translation for axe, start by running &lt;code&gt;grunt translate --lang=&amp;lt;langcode&amp;gt;&lt;/code&gt;. This will create a json file fin the &lt;code&gt;./locales&lt;/code&gt; directory, with the default English text in it for you to translate. We welcome any localization for axe-core. For details on how to contribute, see the Contributing section below. For details on the message syntax, see &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/docs/check-message-template.md&quot;&gt;Check Message Template&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To update existing translation file, re-run &lt;code&gt;grunt translate --lang=&amp;lt;langcode&amp;gt;&lt;/code&gt;. This will add new messages used in English and remove messages which were not used in English.&lt;/p&gt; 
&lt;p&gt;Additionally, locale can be applied at runtime by passing a &lt;code&gt;locale&lt;/code&gt; object to &lt;code&gt;axe.configure()&lt;/code&gt;. The locale object must be of the same shape as existing locales in the &lt;code&gt;./locales&lt;/code&gt; directory. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;axe.configure({
  locale: {
    lang: &#39;de&#39;,
    rules: {
      accesskeys: {
        help: &#39;Der Wert des accesskey-Attributes muss einzigartig sein.&#39;
      }
      // ...
    },
    checks: {
      abstractrole: {
        fail: &#39;Abstrakte ARIA-Rollen d√ºrfen nicht direkt verwendet werden.&#39;
      },
      &#39;aria-errormessage&#39;: {
        // Note: doT (https://github.com/olado/dot) templates are supported here.
        fail:
          &#39;Der Wert der aria-errormessage ${data.values}` muss eine Technik verwenden, um die Message anzuk√ºndigen (z. B., aria-live, aria-describedby, role=alert, etc.).&#39;
      }
      // ...
    }
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Supported Locales&lt;/h3&gt; 
&lt;p&gt;Axe-core supports the following locales. Do note that since locales are contributed by our community, they are not guaranteed to include all translations needed in a release.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Basque&lt;/li&gt; 
 &lt;li&gt;Danish&lt;/li&gt; 
 &lt;li&gt;Dutch&lt;/li&gt; 
 &lt;li&gt;French&lt;/li&gt; 
 &lt;li&gt;German&lt;/li&gt; 
 &lt;li&gt;Japanese&lt;/li&gt; 
 &lt;li&gt;Korean&lt;/li&gt; 
 &lt;li&gt;Polish&lt;/li&gt; 
 &lt;li&gt;Portuguese (Brazilian)&lt;/li&gt; 
 &lt;li&gt;Spanish&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Updates &amp;amp; Security&lt;/h2&gt; 
&lt;p&gt;Axe-core has a new minor release every 3 to 5 months, which usually introduces new rules and features. We recommend scheduling time to upgrade to these versions. Security updates will be made available for minor version lines up to &lt;strong&gt;18 months old&lt;/strong&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/release-and-support.md&quot;&gt;release and support&lt;/a&gt; for details on the frequency of releases, long-term support and recommendations on upgrading axe-core.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/backwards-compatibility-doc.md&quot;&gt;backward compatibility&lt;/a&gt; for details on the types of changes different releases may introduce.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported ARIA Roles and Attributes.&lt;/h2&gt; 
&lt;p&gt;Refer &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/aria-supported.md&quot;&gt;axe-core ARIA support&lt;/a&gt; for a complete list of ARIA supported roles and attributes by axe.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/rule-proposal.md&quot;&gt;Proposing Axe-core Rules guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/developer-guide.md&quot;&gt;documentation on the architecture&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/CONTRIBUTING.md&quot;&gt;documentation on contributing&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Projects using axe-core&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/projects.md&quot;&gt;List of projects using axe-core&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Thanks to Dulin Marat for his &lt;a href=&quot;https://www.npmjs.com/package/css-selector-parser&quot;&gt;css-selector-parser&lt;/a&gt; implementation which is included for shadow DOM support.&lt;/p&gt; 
&lt;p&gt;Thanks to the &lt;a href=&quot;https://github.com/mootools/slick/raw/master/Source/Slick.Parser.js&quot;&gt;Slick Parser&lt;/a&gt; implementers for their contribution, we have used some of their algorithms in our shadow DOM support code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cloudflare/cloudflare-docs</title>
      <link>https://github.com/cloudflare/cloudflare-docs</link>
      <description>&lt;p&gt;Cloudflare‚Äôs developer docs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cloudflare Docs&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://developers.cloudflare.com/docs/&quot;&gt;View the docs ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://developers.cloudflare.com/docs-engine/contributing/to-cloudflare-docs&quot;&gt;Contribute to the docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://developers.cloudflare.com/docs-engine/contributing/development-setup&quot;&gt;Set up local development&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;For Cloudflare employees&lt;/h2&gt; 
&lt;p&gt;To get write access to this repo, please reach out to the &lt;strong&gt;Developer Docs&lt;/strong&gt; room in chat.&lt;/p&gt; 
&lt;h2&gt;Products&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Product&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;code&gt;pathPrefix&lt;/code&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Test&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Prod&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;1.1.1.1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;1.1.1.1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://1-1-1-1.cloudflare-docs.workers.dev/1.1.1.1&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/1.1.1.1&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Analytics&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;analytics&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://analytics.cloudflare-docs.workers.dev/analytics&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/analytics&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;API&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;api&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://api.cloudflare-docs.workers.dev/api&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/api&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Automatic Platform Optimization&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;automatic-platform-optimization&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://automatic-platform-optimization.cloudflare-docs.workers.dev/automatic-platform-optimization&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/automatic-platform-optimization&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Bots&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;bots&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://bots.cloudflare-docs.workers.dev/bots&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/bots&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;BYOIP&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;byoip&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://byoip.cloudflare-docs.workers.dev/byoip&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/byoip&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Cloudflare One&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;cloudflare-one&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cloudflare-one.cloudflare-docs.workers.dev/cloudflare-one&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/cloudflare-one&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Distributed Web Gateway&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;distributed-web&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://distributed-web.cloudflare-docs.workers.dev/distributed-web&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/distributed-web&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Docs Engine&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;docs-engine&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://docs-engine.cloudflare-docs.workers.dev/docs-engine&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/docs-engine&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Events&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;events&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://events.cloudflare-docs.workers.dev/events&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/events&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Firewall&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;firewall&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://firewall.cloudflare-docs.workers.dev/firewall&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/firewall&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Fundamentals&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;fundamentals&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://fundamentals.cloudflare-docs.workers.dev/fundamentals&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/fundamentals&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;HTTP/3&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;http3&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://http3.cloudflare-docs.workers.dev/http3&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/http3&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Image Optimization&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;images&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://images.cloudflare-docs.workers.dev/images&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/images&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Load Balancing&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;load-balancing&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://load-balancing.cloudflare-docs.workers.dev/load-balancing&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/load-balancing&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Logs&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;logs&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://logs.cloudflare-docs.workers.dev/logs&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/logs&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Magic Firewall&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;magic-firewall&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://magic-firewall.cloudflare-docs.workers.dev/magic-firewall&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/magic-firewall&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Magic Transit&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;magic-transit&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://magic-transit.cloudflare-docs.workers.dev/magic-transit&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/magic-transit&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Network Interconnect&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;network-interconnect&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://network-interconnect.cloudflare-docs.workers.dev/network-interconnect&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/network-interconnect&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Pages&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;pages&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://pages.cloudflare-docs.workers.dev/pages&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/pages&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Railgun&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;railgun&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://railgun.cloudflare-docs.workers.dev/railgun&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/railgun&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Randomness Beacon&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;randomness-beacon&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://randomness-beacon.cloudflare-docs.workers.dev/randomness-beacon&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/randomness-beacon&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Registrar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;registrar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://registrar.cloudflare-docs.workers.dev/registrar&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/registrar&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Rules&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;rules&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://rules.cloudflare-docs.workers.dev/rules&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/rules&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Ruleset Engine&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ruleset-engine&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://ruleset-engine.cloudflare-docs.workers.dev/ruleset-engine&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/ruleset-engine&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Spectrum&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;spectrum&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://spectrum.cloudflare-docs.workers.dev/spectrum&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/spectrum&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;SSL&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ssl&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://ssl.cloudflare-docs.workers.dev/ssl&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/ssl&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Stream&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;stream&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://stream.cloudflare-docs.workers.dev/stream&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/stream&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Tenant&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;tenant&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://tenant.cloudflare-docs.workers.dev/tenant&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/tenant&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Terraform&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;terraform&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://terraform.cloudflare-docs.workers.dev/terraform&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/terraform&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Time Services&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;time-services&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://time-services.cloudflare-docs.workers.dev/time-services&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/time-services&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;WAF&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;waf&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://waf.cloudflare-docs.workers.dev/waf&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/waf&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;WARP Client&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;warp-client&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://warp-client.cloudflare-docs.workers.dev/warp-client&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/warp-client&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Workers&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;workers&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://workers.cloudflare-docs.workers.dev/workers&quot;&gt;Test&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://developers.cloudflare.com/workers&quot;&gt;Prod&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Deployment&lt;/h3&gt; 
&lt;p&gt;Each &lt;a href=&quot;https://github.com/cloudflare/cloudflare-docs/tree/production/products&quot;&gt;product&lt;/a&gt;‚Äôs docs are automatically deployed via &lt;a href=&quot;https://github.com/cloudflare/wrangler&quot;&gt;@cloudflare/wrangler&lt;/a&gt; using GitHub Actions to both testing and production environments:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;TEST: https://$pathPrefix.cloudflare-docs.workers.dev/$pathPrefix/
PROD: https://developers.cloudflare.com/$pathPrefix/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;License and Legal Notices&lt;/h3&gt; 
&lt;p&gt;Except as otherwise noted, Cloudflare and any contributors grant you a license to the Cloudflare Developer Documentation and other content in this repository under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode&quot;&gt;Creative Commons Attribution 4.0 International Public License&lt;/a&gt;, see the &lt;a href=&quot;https://github.com/cloudflare/cloudflare-docs/raw/production/LICENSE&quot;&gt;LICENSE file&lt;/a&gt;, and grant you a license to any code in the repository under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;, see the &lt;a href=&quot;https://github.com/cloudflare/cloudflare-docs/raw/production/LICENSE-CODE&quot;&gt;LICENSE-CODE file&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Cloudflare products and services referenced in the documentation may be either trademarks or registered trademarks of Cloudflare in the United States and/or other countries. The licenses for this project do not grant you rights to use any Cloudflare names, logos, or trademarks. Cloudflare&#39;s general trademark guidelines can be found at &lt;a href=&quot;https://www.cloudflare.com/trademark/&quot;&gt;https://www.cloudflare.com/trademark/&lt;/a&gt;. Cloudflare and any contributors reserve all other rights, whether under their respective copyrights, patents, or trademarks, whether by implication, estoppel, or otherwise.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Web-Dev-For-Beginners</title>
      <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
      <description>&lt;p&gt;24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub pull-requests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Watch&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub watchers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Web Development for Beginners - A Curriculum&lt;/h1&gt; 
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about JavaScript, CSS, and HTML basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to &#39;stick&#39;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Hearty thanks to our authors Jen Looper, Chris Noring, Christopher Harrison, Jasmine Greenaway, Yohan Lasorsa, Floor Drees, and sketchnote artist Tomomi Imura!&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md&quot;&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. We&#39;d love your feedback &lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner&quot;&gt;in our discussion forum&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Students&lt;/strong&gt;, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. Try to create the projects by comprehending the lessons rather than copying the solution code; however that code is available in the /solutions folders in each project-oriented lesson. Another idea would be to form a study group with friends and go through the content together. For further study, we recommend &lt;a href=&quot;https://docs.microsoft.com/users/jenlooper-2911/collections/jg2gax8pzd6o81?WT.mc_id=academic-13441-cxa&quot;&gt;Microsoft Learn&lt;/a&gt; and by watching the videos mentioned below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtube.com/watch?v=R1wrdtmBSII&quot; title=&quot;Promo video&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/screenshot.png&quot; alt=&quot;Promo video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üé• Click the image above for a video about the project and the folks who created it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pedagogy&lt;/h2&gt; 
&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is project-based and that it includes frequent quizzes. By the end of this series, students will have built a typing game, a virtual terrarium, a &#39;green&#39; browser extension, a &#39;space invaders&#39; type game, and a business-type banking app, and will have learned the basics of JavaScript, HTML, and CSS along with the modern toolchain of today&#39;s web developer.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üéì You can take the first few lessons in this curriculum as a &lt;a href=&quot;https://docs.microsoft.com/learn/paths/web-development-101?WT.mc_id=academic-13441-cxa&quot;&gt;Learn Path&lt;/a&gt; on Microsoft Learn!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with video from the &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-JavaScript?WT.mc_id=academic-13441-cxa&quot;&gt;Beginners Series to: JavaScript&lt;/a&gt;&quot; collection of video tutorials, some of whose authors contributed to this curriculum.&lt;/p&gt; 
&lt;p&gt;In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12 week cycle.&lt;/p&gt; 
&lt;p&gt;While we have purposefully avoided introducing JavaScript frameworks so as to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node.js via another collection of videos: &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-Nodejs?WT.mc_id=academic-13441-cxa&quot;&gt;Beginner Series to: Node.js&lt;/a&gt;&quot;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/TRANSLATIONS.md&quot;&gt;Translation&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;pre-lesson warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lesson quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained &lt;a href=&quot;https://happy-mud-02d95f10f.azurestaticapps.net/&quot;&gt;in this app&lt;/a&gt;, for 48 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder. They are gradually being localized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Lessons&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Project Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Concepts Taught&lt;/th&gt; 
   &lt;th&gt;Learning Objectives&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linked Lesson&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Introduction to Programming and Tools of the Trade&lt;/td&gt; 
   &lt;td&gt;Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages/README.md&quot;&gt;Intro to Programming Languages and Tools of the Trade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Basics of GitHub, includes working with a team&lt;/td&gt; 
   &lt;td&gt;How to use GitHub in your project, how to collaborate with others on a code base&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/2-github-basics/README.md&quot;&gt;Intro to GitHub&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Floor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Accessibility&lt;/td&gt; 
   &lt;td&gt;Learn the basics of web accessibility&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/3-accessibility/README.md&quot;&gt;Accessibility Fundamentals&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JavaScript Data Types&lt;/td&gt; 
   &lt;td&gt;The basics of JavaScript data types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/1-data-types/README.md&quot;&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Functions and Methods&lt;/td&gt; 
   &lt;td&gt;Learn about functions and methods to manage an application&#39;s logic flow&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/2-functions-methods/README.md&quot;&gt;Functions and Methods&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine and Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Making Decisions with JS&lt;/td&gt; 
   &lt;td&gt;Learn how to create conditions in your code using decision-making methods&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/3-making-decisions/README.md&quot;&gt;Making Decisions&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Arrays and Loops&lt;/td&gt; 
   &lt;td&gt;Work with data using arrays and loops in JavaScript&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/4-arrays-loops/README.md&quot;&gt;Arrays and Loops&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;HTML in Practice&lt;/td&gt; 
   &lt;td&gt;Build the HTML to create an online terrarium, focusing on building a layout&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/1-intro-to-html/README.md&quot;&gt;Introduction to HTML&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;CSS in Practice&lt;/td&gt; 
   &lt;td&gt;Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/2-intro-to-css/README.md&quot;&gt;Introduction to CSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JavaScript Closures, DOM manipulation&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/3-intro-to-DOM-and-closures/README.md&quot;&gt;JavaScript Closures, DOM manipulation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/solution&quot;&gt;Typing Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Build a Typing Game&lt;/td&gt; 
   &lt;td&gt;Learn how to use keyboard events to drive the logic of your JavaScript app&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/typing-game/README.md&quot;&gt;Event-Driven Programming&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Working with Browsers&lt;/td&gt; 
   &lt;td&gt;Learn how browsers work, their history, and how to scaffold the first elements of a browser extension&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/1-about-browsers/README.md&quot;&gt;About Browsers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Building a form, calling an API and storing variables in local storage&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript elements of your browser extension to call an API using variables stored in local storage&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/2-forms-browsers-local-storage/README.md&quot;&gt;APIs, Forms, and Local Storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Background processes in the browser, web performance&lt;/td&gt; 
   &lt;td&gt;Use the browser&#39;s background processes to manage the extension&#39;s icon; learn about web performance and some optimizations to make&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/3-background-tasks-and-performance/README.md&quot;&gt;Background Tasks and Performance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;More Advanced Game Development with JavaScript&lt;/td&gt; 
   &lt;td&gt;Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/1-introduction/README.md&quot;&gt;Introduction to Advanced Game Development&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Drawing to canvas&lt;/td&gt; 
   &lt;td&gt;Learn about the Canvas API, used to draw elements to a screen&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/2-drawing-to-canvas/README.md&quot;&gt;Drawing to Canvas&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Moving elements around the screen&lt;/td&gt; 
   &lt;td&gt;Discover how elements can gain motion using the cartesian coordinates and the Canvas API&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/3-moving-elements-around/README.md&quot;&gt;Moving Elements Around&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Collision detection&lt;/td&gt; 
   &lt;td&gt;Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/4-collision-detection/README.md&quot;&gt;Collision Detection&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Keeping score&lt;/td&gt; 
   &lt;td&gt;Perform math calculations based on the game&#39;s status and performance&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/5-keeping-score/README.md&quot;&gt;Keeping Score&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Ending and restarting the game&lt;/td&gt; 
   &lt;td&gt;Learn about ending and restarting the game, including cleaning up assets and resetting variable values&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/6-end-condition/README.md&quot;&gt;The Ending Condition&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;HTML Templates and Routes in a Web App&lt;/td&gt; 
   &lt;td&gt;Learn how to create the scaffold of a multipage website&#39;s architecture using routing and HTML templates&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/1-template-route/README.md&quot;&gt;HTML Templates and Routes&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Build a Login and Registration Form&lt;/td&gt; 
   &lt;td&gt;Learn about building forms and handing validation routines&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/2-forms/README.md&quot;&gt;Forms&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Methods of Fetching and Using Data&lt;/td&gt; 
   &lt;td&gt;How data flows in and out of your app, how to fetch it, store it, and dispose of it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/3-data/README.md&quot;&gt;Data&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Concepts of State Management&lt;/td&gt; 
   &lt;td&gt;Learn how your app retains state and how to manage it programmatically&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/4-state-management/README.md&quot;&gt;State Management&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href=&quot;https://docsify.js.org/#/&quot;&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href=&quot;https://docsify.js.org/#/quickstart&quot;&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;PDF&lt;/h2&gt; 
&lt;p&gt;A PDF of all of the lessons can be found &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/pdf/readme.pdf&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Curricula&lt;/h2&gt; 
&lt;p&gt;Our team produces other curricula! Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/ml-beginners&quot;&gt;Machine Learning for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/iot-beginners&quot;&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/datascience-beginners&quot;&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>eKoopmans/html2pdf.js</title>
      <link>https://github.com/eKoopmans/html2pdf.js</link>
      <description>&lt;p&gt;Client-side HTML-to-PDF rendering using pure JS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;html2pdf.js&lt;/h1&gt; 
&lt;p&gt;html2pdf.js converts any webpage or element into a printable PDF entirely client-side using &lt;a href=&quot;https://github.com/niklasvh/html2canvas&quot;&gt;html2canvas&lt;/a&gt; and &lt;a href=&quot;https://github.com/MrRio/jsPDF&quot;&gt;jsPDF&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; There have been several issues reported in v0.10. They are being investigated but in the meantime you may wish to remain on v0.9.3 (&quot;^0.9.3&quot; in npm, or &lt;a href=&quot;https://cdnjs.com/libraries/html2pdf.js/0.9.3&quot;&gt;use cdnjs for HTML script tags&lt;/a&gt;).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#getting-started&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#cdn&quot;&gt;CDN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#raw-js&quot;&gt;Raw JS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#npm&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#bower&quot;&gt;Bower&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#console&quot;&gt;Console&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#advanced-usage&quot;&gt;Advanced usage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#workflow&quot;&gt;Workflow&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#worker-api&quot;&gt;Worker API&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#options&quot;&gt;Options&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#page-breaks&quot;&gt;Page-breaks&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#page-break-settings&quot;&gt;Page-break settings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#page-break-modes&quot;&gt;Page-break modes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#example-usage&quot;&gt;Example usage&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#image-type-and-quality&quot;&gt;Image type and quality&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#progress-tracking&quot;&gt;Progress tracking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#dependencies&quot;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#contributing&quot;&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#issues&quot;&gt;Issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#tests&quot;&gt;Tests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#pull-requests&quot;&gt;Pull requests&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h4&gt;CDN&lt;/h4&gt; 
&lt;p&gt;The simplest way to use html2pdf.js is to include it as a script in your HTML by using cdnjs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js&quot; integrity=&quot;sha512-GsLlZN/3F2ErC5ifS5QtgpiJtWd43JWSuIgh7mbzZ8zBps+dvLusV+eNQATqgA/HdeKFVgA5v3S/cIrLF7QnIg==&quot; crossorigin=&quot;anonymous&quot; referrerpolicy=&quot;no-referrer&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using a CDN URL will lock you to a specific version, which should ensure stability and give you control over when to change versions. cdnjs gives you access to &lt;a href=&quot;https://cdnjs.com/libraries/html2pdf.js&quot;&gt;all past versions of html2pdf.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: &lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#dependencies&quot;&gt;Read about dependences&lt;/a&gt; for more information about using the unbundled version &lt;code&gt;dist/html2canvas.min.js&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Raw JS&lt;/h4&gt; 
&lt;p&gt;You may also download &lt;code&gt;dist/html2pdf.bundle.min.js&lt;/code&gt; directly to your project folder and include it in your HTML with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;html2pdf.bundle.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;NPM&lt;/h4&gt; 
&lt;p&gt;Install html2pdf.js and its dependencies using NPM with &lt;code&gt;npm install --save html2pdf.js&lt;/code&gt; (make sure to include &lt;code&gt;.js&lt;/code&gt; in the package name).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: You can use NPM to create your project, but html2pdf.js &lt;strong&gt;will not run in Node.js&lt;/strong&gt;, it must be run in a browser.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Bower&lt;/h4&gt; 
&lt;p&gt;Install html2pdf.js and its dependencies using Bower with &lt;code&gt;bower install --save html2pdf.js&lt;/code&gt; (make sure to include &lt;code&gt;.js&lt;/code&gt; in the package name).&lt;/p&gt; 
&lt;h4&gt;Console&lt;/h4&gt; 
&lt;p&gt;If you&#39;re on a webpage that you can&#39;t modify directly and wish to use html2pdf.js to capture a screenshot, you can follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your browser&#39;s console (instructions for different browsers &lt;a href=&quot;https://webmasters.stackexchange.com/a/77337/94367&quot;&gt;here&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Paste in this code: &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function addScript(url) {
    var script = document.createElement(&#39;script&#39;);
    script.type = &#39;application/javascript&#39;;
    script.src = url;
    document.head.appendChild(script);
}
addScript(&#39;https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;You may now execute html2pdf.js commands directly from the console. To capture a default PDF of the entire page, use &lt;code&gt;html2pdf(document.body)&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once installed, html2pdf.js is ready to use. The following command will generate a PDF of &lt;code&gt;#element-to-print&lt;/code&gt; and prompt the user to save the result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var element = document.getElementById(&#39;element-to-print&#39;);
html2pdf(element);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Advanced usage&lt;/h3&gt; 
&lt;p&gt;Every step of html2pdf.js is configurable, using its new Promise-based API. If html2pdf.js is called without arguments, it will return a &lt;code&gt;Worker&lt;/code&gt; object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var worker = html2pdf();  // Or:  var worker = new html2pdf.Worker;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This worker has methods that can be chained sequentially, as each Promise resolves, and allows insertion of your own intermediate functions between steps. A prerequisite system allows you to skip over mandatory steps (like canvas creation) without any trouble:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// This will implicitly create the canvas and PDF objects before saving.
var worker = html2pdf().from(element).save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Workflow&lt;/h4&gt; 
&lt;p&gt;The basic workflow of html2pdf.js tasks (enforced by the prereq system) is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.from() -&amp;gt; .toContainer() -&amp;gt; .toCanvas() -&amp;gt; .toImg() -&amp;gt; .toPdf() -&amp;gt; .save()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Worker API&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;Arguments&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;from&lt;/td&gt; 
   &lt;td&gt;src, type&lt;/td&gt; 
   &lt;td&gt;Sets the source (HTML string or element) for the PDF. Optional &lt;code&gt;type&lt;/code&gt; specifies other sources: &lt;code&gt;&#39;string&#39;&lt;/code&gt;, &lt;code&gt;&#39;element&#39;&lt;/code&gt;, &lt;code&gt;&#39;canvas&#39;&lt;/code&gt;, or &lt;code&gt;&#39;img&#39;&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;to&lt;/td&gt; 
   &lt;td&gt;target&lt;/td&gt; 
   &lt;td&gt;Converts the source to the specified target (&lt;code&gt;&#39;container&#39;&lt;/code&gt;, &lt;code&gt;&#39;canvas&#39;&lt;/code&gt;, &lt;code&gt;&#39;img&#39;&lt;/code&gt;, or &lt;code&gt;&#39;pdf&#39;&lt;/code&gt;). Each target also has its own &lt;code&gt;toX&lt;/code&gt; method that can be called directly: &lt;code&gt;toContainer()&lt;/code&gt;, &lt;code&gt;toCanvas()&lt;/code&gt;, &lt;code&gt;toImg()&lt;/code&gt;, and &lt;code&gt;toPdf()&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;output&lt;/td&gt; 
   &lt;td&gt;type, options, src&lt;/td&gt; 
   &lt;td&gt;Routes to the appropriate &lt;code&gt;outputPdf&lt;/code&gt; or &lt;code&gt;outputImg&lt;/code&gt; method based on specified &lt;code&gt;src&lt;/code&gt; (&lt;code&gt;&#39;pdf&#39;&lt;/code&gt; (default) or &lt;code&gt;&#39;img&#39;&lt;/code&gt;).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;outputPdf&lt;/td&gt; 
   &lt;td&gt;type, options&lt;/td&gt; 
   &lt;td&gt;Sends &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; to the jsPDF object&#39;s &lt;code&gt;output&lt;/code&gt; method, and returns the result as a Promise (use &lt;code&gt;.then&lt;/code&gt; to access). See the &lt;a href=&quot;https://rawgit.com/MrRio/jsPDF/master/docs/jspdf.js.html#line992&quot;&gt;jsPDF source code&lt;/a&gt; for more info.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;outputImg&lt;/td&gt; 
   &lt;td&gt;type, options&lt;/td&gt; 
   &lt;td&gt;Returns the specified data type for the image as a Promise (use &lt;code&gt;.then&lt;/code&gt; to access). Supported types: &lt;code&gt;&#39;img&#39;&lt;/code&gt;, &lt;code&gt;&#39;datauristring&#39;&lt;/code&gt;/&lt;code&gt;&#39;dataurlstring&#39;&lt;/code&gt;, and &lt;code&gt;&#39;datauri&#39;&lt;/code&gt;/&lt;code&gt;&#39;dataurl&#39;&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;save&lt;/td&gt; 
   &lt;td&gt;filename&lt;/td&gt; 
   &lt;td&gt;Saves the PDF object with the optional filename (creates user download prompt).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;set&lt;/td&gt; 
   &lt;td&gt;opt&lt;/td&gt; 
   &lt;td&gt;Sets the specified properties. See &lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#options&quot;&gt;Options&lt;/a&gt; below for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;get&lt;/td&gt; 
   &lt;td&gt;key, cbk&lt;/td&gt; 
   &lt;td&gt;Returns the property specified in &lt;code&gt;key&lt;/code&gt;, either as a Promise (use &lt;code&gt;.then&lt;/code&gt; to access), or by calling &lt;code&gt;cbk&lt;/code&gt; if provided.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;then&lt;/td&gt; 
   &lt;td&gt;onFulfilled, onRejected&lt;/td&gt; 
   &lt;td&gt;Standard Promise method, with &lt;code&gt;this&lt;/code&gt; re-bound to the Worker, and with added progress-tracking (see &lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#progress&quot;&gt;Progress&lt;/a&gt; below). Note that &lt;code&gt;.then&lt;/code&gt; returns a &lt;code&gt;Worker&lt;/code&gt;, which is a subclass of Promise.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;thenCore&lt;/td&gt; 
   &lt;td&gt;onFulFilled, onRejected&lt;/td&gt; 
   &lt;td&gt;Standard Promise method, with &lt;code&gt;this&lt;/code&gt; re-bound to the Worker (no progress-tracking). Note that &lt;code&gt;.thenCore&lt;/code&gt; returns a &lt;code&gt;Worker&lt;/code&gt;, which is a subclass of Promise.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;thenExternal&lt;/td&gt; 
   &lt;td&gt;onFulfilled, onRejected&lt;/td&gt; 
   &lt;td&gt;True Promise method. Using this &#39;exits&#39; the Worker chain - you will not be able to continue chaining Worker methods after &lt;code&gt;.thenExternal&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;catch, catchExternal&lt;/td&gt; 
   &lt;td&gt;onRejected&lt;/td&gt; 
   &lt;td&gt;Standard Promise method. &lt;code&gt;catchExternal&lt;/code&gt; exits the Worker chain - you will not be able to continue chaining Worker methods after &lt;code&gt;.catchExternal&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;error&lt;/td&gt; 
   &lt;td&gt;msg&lt;/td&gt; 
   &lt;td&gt;Throws an error in the Worker&#39;s Promise chain.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;A few aliases are also provided for convenience:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;save&lt;/td&gt; 
   &lt;td&gt;saveAs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;set&lt;/td&gt; 
   &lt;td&gt;using&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;output&lt;/td&gt; 
   &lt;td&gt;export&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;then&lt;/td&gt; 
   &lt;td&gt;run&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Options&lt;/h2&gt; 
&lt;p&gt;html2pdf.js can be configured using an optional &lt;code&gt;opt&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var element = document.getElementById(&#39;element-to-print&#39;);
var opt = {
  margin:       1,
  filename:     &#39;myfile.pdf&#39;,
  image:        { type: &#39;jpeg&#39;, quality: 0.98 },
  html2canvas:  { scale: 2 },
  jsPDF:        { unit: &#39;in&#39;, format: &#39;letter&#39;, orientation: &#39;portrait&#39; }
};

// New Promise-based usage:
html2pdf().set(opt).from(element).save();

// Old monolithic-style usage:
html2pdf(element, opt);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;opt&lt;/code&gt; parameter has the following optional fields:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;margin&lt;/td&gt; 
   &lt;td&gt;number or array&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;PDF margin (in jsPDF units). Can be a single number, &lt;code&gt;[vMargin, hMargin]&lt;/code&gt;, or &lt;code&gt;[top, left, bottom, right]&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;filename&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&#39;file.pdf&#39;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The default filename of the exported PDF.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pagebreak&lt;/td&gt; 
   &lt;td&gt;object&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{mode: [&#39;css&#39;, &#39;legacy&#39;]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Controls the pagebreak behaviour on the page. See &lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#page-breaks&quot;&gt;Page-breaks&lt;/a&gt; below.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;image&lt;/td&gt; 
   &lt;td&gt;object&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{type: &#39;jpeg&#39;, quality: 0.95}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The image type and quality used to generate the PDF. See &lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/#image-type-and-quality&quot;&gt;Image type and quality&lt;/a&gt; below.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;enableLinks&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;If enabled, PDF hyperlinks are automatically added ontop of all anchor tags.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;html2canvas&lt;/td&gt; 
   &lt;td&gt;object&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{ }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configuration options sent directly to &lt;code&gt;html2canvas&lt;/code&gt; (&lt;a href=&quot;https://html2canvas.hertzen.com/configuration&quot;&gt;see here&lt;/a&gt; for usage).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;jsPDF&lt;/td&gt; 
   &lt;td&gt;object&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{ }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configuration options sent directly to &lt;code&gt;jsPDF&lt;/code&gt; (&lt;a href=&quot;http://rawgit.com/MrRio/jsPDF/master/docs/jsPDF.html&quot;&gt;see here&lt;/a&gt; for usage).&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Page-breaks&lt;/h3&gt; 
&lt;p&gt;html2pdf.js has the ability to automatically add page-breaks to clean up your document. Page-breaks can be added by CSS styles, set on individual elements using selectors, or avoided from breaking inside all elements (&lt;code&gt;avoid-all&lt;/code&gt; mode).&lt;/p&gt; 
&lt;p&gt;By default, html2pdf.js will respect most CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/break-before&quot;&gt;&lt;code&gt;break-before&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/break-after&quot;&gt;&lt;code&gt;break-after&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/break-inside&quot;&gt;&lt;code&gt;break-inside&lt;/code&gt;&lt;/a&gt; rules, and also add page-breaks after any element with class &lt;code&gt;html2pdf__page-break&lt;/code&gt; (for legacy purposes).&lt;/p&gt; 
&lt;h4&gt;Page-break settings&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setting&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mode&lt;/td&gt; 
   &lt;td&gt;string or array&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;[&#39;css&#39;, &#39;legacy&#39;]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The mode(s) on which to automatically add page-breaks. One or more of &lt;code&gt;&#39;avoid-all&#39;&lt;/code&gt;, &lt;code&gt;&#39;css&#39;&lt;/code&gt;, and &lt;code&gt;&#39;legacy&#39;&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;before&lt;/td&gt; 
   &lt;td&gt;string or array&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;CSS selectors for which to add page-breaks before each element. Can be a specific element with an ID (&lt;code&gt;&#39;#myID&#39;&lt;/code&gt;), all elements of a type (e.g. &lt;code&gt;&#39;img&#39;&lt;/code&gt;), all of a class (&lt;code&gt;&#39;.myClass&#39;&lt;/code&gt;), or even &lt;code&gt;&#39;*&#39;&lt;/code&gt; to match every element.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;after&lt;/td&gt; 
   &lt;td&gt;string or array&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Like &#39;before&#39;, but adds a page-break immediately after the element.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;avoid&lt;/td&gt; 
   &lt;td&gt;string or array&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Like &#39;before&#39;, but avoids page-breaks on these elements. You can enable this feature on every element using the &#39;avoid-all&#39; mode.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Page-break modes&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Mode&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;avoid-all&lt;/td&gt; 
   &lt;td&gt;Automatically adds page-breaks to avoid splitting any elements across pages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;css&lt;/td&gt; 
   &lt;td&gt;Adds page-breaks according to the CSS &lt;code&gt;break-before&lt;/code&gt;, &lt;code&gt;break-after&lt;/code&gt;, and &lt;code&gt;break-inside&lt;/code&gt; properties. Only recognizes &lt;code&gt;always/left/right&lt;/code&gt; for before/after, and &lt;code&gt;avoid&lt;/code&gt; for inside.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;legacy&lt;/td&gt; 
   &lt;td&gt;Adds page-breaks after elements with class &lt;code&gt;html2pdf__page-break&lt;/code&gt;. This feature may be removed in the future.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Example usage&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Avoid page-breaks on all elements, and add one before #page2el.
html2pdf().set({
  pagebreak: { mode: &#39;avoid-all&#39;, before: &#39;#page2el&#39; }
});

// Enable all &#39;modes&#39;, with no explicit elements.
html2pdf().set({
  pagebreak: { mode: [&#39;avoid-all&#39;, &#39;css&#39;, &#39;legacy&#39;] }
});

// No modes, only explicit elements.
html2pdf().set({
  pagebreak: { before: &#39;.beforeClass&#39;, after: [&#39;#after1&#39;, &#39;#after2&#39;], avoid: &#39;img&#39; }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Image type and quality&lt;/h3&gt; 
&lt;p&gt;You may customize the image type and quality exported from the canvas by setting the &lt;code&gt;image&lt;/code&gt; option. This must be an object with the following fields:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;type&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&#39;jpeg&#39;&lt;/td&gt; 
   &lt;td&gt;The image type. HTMLCanvasElement only supports &#39;png&#39;, &#39;jpeg&#39;, and &#39;webp&#39; (on Chrome).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;quality&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;0.95&lt;/td&gt; 
   &lt;td&gt;The image quality, from 0 to 1. This setting is only used for jpeg/webp (not png).&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;These options are limited to the available settings for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL&quot;&gt;HTMLCanvasElement.toDataURL()&lt;/a&gt;, which ignores quality settings for &#39;png&#39; images. To enable png image compression, try using the &lt;a href=&quot;https://github.com/ShyykoSerhiy/canvas-png-compression&quot;&gt;canvas-png-compression shim&lt;/a&gt;, which should be an in-place solution to enable png compression via the &lt;code&gt;quality&lt;/code&gt; option.&lt;/p&gt; 
&lt;h2&gt;Progress tracking&lt;/h2&gt; 
&lt;p&gt;The Worker object returned by &lt;code&gt;html2pdf()&lt;/code&gt; has a built-in progress-tracking mechanism. It will be updated to allow a progress callback that will be called with each update, however it is currently a work-in-progress.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;html2pdf.js depends on the external packages &lt;a href=&quot;https://github.com/niklasvh/html2canvas&quot;&gt;html2canvas&lt;/a&gt;, &lt;a href=&quot;https://github.com/MrRio/jsPDF&quot;&gt;jsPDF&lt;/a&gt;, and &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt;. These dependencies are automatically loaded when using NPM or the bundled package.&lt;/p&gt; 
&lt;p&gt;If using the unbundled &lt;code&gt;dist/html2pdf.min.js&lt;/code&gt; (or its un-minified version), you must also include each dependency. Order is important, otherwise html2canvas will be overridden by jsPDF&#39;s own internal implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;es6-promise.auto.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;jspdf.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;html2canvas.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;html2pdf.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Issues&lt;/h3&gt; 
&lt;p&gt;When submitting an issue, please provide reproducible code that highlights the issue, preferably by creating a fork of &lt;a href=&quot;https://jsfiddle.net/u6o6ne41/&quot;&gt;this template jsFiddle&lt;/a&gt; (which has html2pdf.js already loaded). Remember that html2pdf.js uses &lt;a href=&quot;https://github.com/niklasvh/html2canvas&quot;&gt;html2canvas&lt;/a&gt; and &lt;a href=&quot;https://github.com/MrRio/jsPDF&quot;&gt;jsPDF&lt;/a&gt; as dependencies, so it&#39;s a good idea to check each of those repositories&#39; issue trackers to see if your problem has already been addressed.&lt;/p&gt; 
&lt;h4&gt;Known issues&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rendering:&lt;/strong&gt; The rendering engine html2canvas isn&#39;t perfect (though it&#39;s pretty good!). If html2canvas isn&#39;t rendering your content correctly, I can&#39;t fix it.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can test this with something like &lt;a href=&quot;https://jsfiddle.net/eKoopmans/z1rupL4c/&quot;&gt;this fiddle&lt;/a&gt;, to see if there&#39;s a problem in the canvas creation itself.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Node cloning (CSS etc):&lt;/strong&gt; The way html2pdf.js clones your content before sending to html2canvas is buggy. A fix is currently being developed - try out:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;direct file: Go to &lt;a href=&quot;https://raw.githubusercontent.com/eKoopmans/html2pdf.js/master/eKoopmans/html2pdf.js/tree/bugfix/clone-nodes-BUILD&quot;&gt;html2pdf.js/bugfix/clone-nodes-BUILD&lt;/a&gt; and replace the files in your project with the relevant files (e.g. &lt;code&gt;dist/html2pdf.bundle.js&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;npm: &lt;code&gt;npm install eKoopmans/html2pdf.js#bugfix/clone-nodes-BUILD&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Related project: &lt;a href=&quot;https://github.com/eKoopmans/html2pdf.js/projects/9&quot;&gt;Bugfix: Cloned nodes&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resizing:&lt;/strong&gt; Currently, html2pdf.js resizes the root element to fit onto a PDF page (causing internal content to &quot;reflow&quot;).&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;This is often desired behaviour, but not always.&lt;/li&gt; 
   &lt;li&gt;There are plans to add alternate behaviour (e.g. &quot;shrink-to-page&quot;), but nothing that&#39;s ready to test yet.&lt;/li&gt; 
   &lt;li&gt;Related project: &lt;a href=&quot;https://github.com/eKoopmans/html2pdf.js/projects/1&quot;&gt;Feature: Single-page PDFs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rendered as image:&lt;/strong&gt; html2pdf.js renders all content into an image, then places that image into a PDF.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;This means text is &lt;em&gt;not selectable or searchable&lt;/em&gt;, and causes large file sizes.&lt;/li&gt; 
   &lt;li&gt;This is currently unavoidable, however recent improvements in jsPDF mean that it may soon be possible to render straight into vector graphics.&lt;/li&gt; 
   &lt;li&gt;Related project: &lt;a href=&quot;https://github.com/eKoopmans/html2pdf.js/projects/4&quot;&gt;Feature: New renderer&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Promise clashes:&lt;/strong&gt; html2pdf.js relies on specific Promise behaviour, and can fail when used with custom Promise libraries.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;In the next release, Promises will be sandboxed in html2pdf.js to remove this issue.&lt;/li&gt; 
   &lt;li&gt;Related project: &lt;a href=&quot;https://github.com/eKoopmans/html2pdf.js/projects/11&quot;&gt;Bugfix: Sandboxed promises&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Maximum size:&lt;/strong&gt; HTML5 canvases have a &lt;a href=&quot;https://stackoverflow.com/a/11585939/4080966&quot;&gt;maximum height/width&lt;/a&gt;. Anything larger will fail to render.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;This is a limitation of HTML5 itself, and results in large PDFs rendering completely blank in html2pdf.js.&lt;/li&gt; 
   &lt;li&gt;The jsPDF canvas renderer (mentioned in Known Issue #4) may be able to fix this issue!&lt;/li&gt; 
   &lt;li&gt;Related project: &lt;a href=&quot;https://github.com/eKoopmans/html2pdf.js/projects/5&quot;&gt;Bugfix: Maximum canvas size&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Tests&lt;/h3&gt; 
&lt;p&gt;html2pdf.js is currently sorely lacking in unit tests. Any contributions or suggestions of automated (or manual) tests are welcome. This is high on the to-do list for this project.&lt;/p&gt; 
&lt;h3&gt;Pull requests&lt;/h3&gt; 
&lt;p&gt;If you want to create a new feature or bugfix, please feel free to fork and submit a pull request! Create a fork, branch off of &lt;code&gt;master&lt;/code&gt;, and make changes to the &lt;code&gt;/src/&lt;/code&gt; files (rather than directly to &lt;code&gt;/dist/&lt;/code&gt;). You can test your changes by rebuilding with &lt;code&gt;npm run build&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/eKoopmans&quot;&gt;Erik Koopmans&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Contributors&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WilcoBreedt&quot;&gt;@WilcoBreedt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ranger1230&quot;&gt;@Ranger1230&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Special thanks&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://saucelabs.com/&quot;&gt;Sauce Labs&lt;/a&gt; for unit testing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;The MIT License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2017-2019 Erik Koopmans &amp;lt;&lt;a href=&quot;http://www.erik-koopmans.com/&quot;&gt;http://www.erik-koopmans.com/&lt;/a&gt;&amp;gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>agalwood/Motrix</title>
      <link>https://github.com/agalwood/Motrix</link>
      <description>&lt;p&gt;A full-featured download manager.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Motrix&lt;/h1&gt; 
&lt;a href=&quot;https://motrix.app&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/static/512x512.png&quot; width=&quot;256&quot; alt=&quot;App Icon&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;A full-featured download manager&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/agalwood/Motrix.svg?sanitize=true&quot; alt=&quot;GitHub release&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/agalwood/Motrix/workflows/Build/release/badge.svg?sanitize=true&quot; alt=&quot;Build/release&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/agalwood/Motrix/total.svg?sanitize=true&quot; alt=&quot;Total Downloads&quot;&gt; &lt;img src=&quot;https://camo.githubusercontent.com/a50c47295f350646d08f2e1ccd797ceca3840e52/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6d61634f5325323025374325323057696e646f77732532302537432532304c696e75782d6c69676874677265792e737667&quot; alt=&quot;Support Platforms&quot;&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/README-CN.md&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc.&lt;/p&gt; 
&lt;p&gt;Motrix has a clean and easy to use interface. I hope you will like it üëª.&lt;/p&gt; 
&lt;p&gt;‚úàÔ∏è &lt;a href=&quot;https://motrix.app&quot;&gt;Official Website&lt;/a&gt; | üìñ &lt;a href=&quot;https://github.com/agalwood/Motrix/wiki&quot;&gt;Manual&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üíΩ Installation&lt;/h2&gt; 
&lt;p&gt;Download from &lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;GitHub Releases&lt;/a&gt; and install it.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc.&lt;/p&gt; 
&lt;p&gt;If you use package management tools to manage applications on Windows, such as &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt;. You can use them to install Motrix.&lt;/p&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/iYato&quot;&gt;@Yato&lt;/a&gt; for continuing to maintain the &lt;a href=&quot;https://community.chocolatey.org/packages/motrix&quot;&gt;Motrix Chocolatey&lt;/a&gt; package. To install motrix, run the following command from the &lt;code&gt;command line&lt;/code&gt; or from &lt;code&gt;PowerShell&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install
choco install motrix

# Upgrade
choco upgrade motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;scoop&lt;/h4&gt; 
&lt;p&gt;If you prefer the portable version, you can use &lt;a href=&quot;https://github.com/lukesampson/scoop&quot;&gt;scoop&lt;/a&gt; (need Windows 7+) to install Motrix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scoop bucket add extras
scoop install motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;The macOS users can install Motrix using &lt;code&gt;brew cask&lt;/code&gt;, thanks to &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/pull/59494&quot;&gt;PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/Mitscherlich&quot;&gt;@Mitscherlich&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew update &amp;amp;&amp;amp; brew install --cask motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;You can download the &lt;code&gt;AppImage&lt;/code&gt; (for all Linux distributions) or &lt;code&gt;snap&lt;/code&gt; to install Motrix, see &lt;a href=&quot;https://github.com/agalwood/Motrix/releases&quot;&gt;GitHub/release&lt;/a&gt; for more Linux installation package formats.&lt;/p&gt; 
&lt;p&gt;Motrix may need to run with &lt;code&gt;sudo&lt;/code&gt; for the first time in Linux because there is no permission to create the download session file (&lt;code&gt;/var/cache/aria2.session&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;If you want to build from source code, please read the &lt;strong&gt;Build&lt;/strong&gt; section.&lt;/p&gt; 
&lt;h4&gt;AppImage&lt;/h4&gt; 
&lt;p&gt;The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of &lt;a href=&quot;https://github.com/TheAssassin/AppImageLauncher&quot;&gt;AppImageLauncher&lt;/a&gt; .&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Desktop Integration Since electron-builder 21 desktop integration is not a part of produced AppImage file. &lt;a href=&quot;https://github.com/TheAssassin/AppImageLauncher&quot;&gt;AppImageLauncher&lt;/a&gt; is the recommended way to integrate AppImages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Deepin 20 Beta users failed to install Motrix, please follow the steps below:&lt;/p&gt; 
&lt;p&gt;Open the &lt;code&gt;Terminal&lt;/code&gt;, paste and run the following command to install Motrix again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt --fix-broken install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Snap&lt;/h4&gt; 
&lt;p&gt;Motrix has been listed on &lt;a href=&quot;https://snapcraft.io/motrix&quot;&gt;Snapcraft&lt;/a&gt; , Ubuntu users recommend downloading from the Snap Store.&lt;/p&gt; 
&lt;p&gt;Tips for v1.5.10&lt;/p&gt; 
&lt;p&gt;The tray may not display the indicator normally, which makes it inconvenient to exit the application.&lt;/p&gt; 
&lt;p&gt;Please unchecked Preferences--Basic Settings--Hide App Menu (Windows &amp;amp; Linux Only), click Save &amp;amp; Apply. Then click &quot;Exit&quot; in the File menu to exit the application.&lt;/p&gt; 
&lt;p&gt;Please update to v1.5.12 and above, you can use the keyboard shortcut &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;q&lt;/kbd&gt; to quickly exit the application.&lt;/p&gt; 
&lt;h4&gt;AUR&lt;/h4&gt; 
&lt;p&gt;For Arch Linux users, Motrix is available in &lt;a href=&quot;https://aur.archlinux.org/packages/motrix/&quot;&gt;aur&lt;/a&gt;, thanks to the maintainer &lt;a href=&quot;https://github.com/weearc&quot;&gt;@weearc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run the following command to install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yay motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Flatpak&lt;/h4&gt; 
&lt;p&gt;Thanks to the &lt;a href=&quot;https://github.com/flathub/flathub/pull/2334&quot;&gt;PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/proletarius101&quot;&gt;@proletarius101&lt;/a&gt;, Motrix has been listed &lt;a href=&quot;https://flathub.org/apps/details/net.agalwood.Motrix&quot;&gt;Flathub&lt;/a&gt;, Linux users who like the Flatpak can try it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install
flatpak install flathub net.agalwood.Motrix

# Run
flatpak run net.agalwood.Motrix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üïπ Simple and clear user interface&lt;/li&gt; 
 &lt;li&gt;ü¶Ñ Supports BitTorrent &amp;amp; Magnet&lt;/li&gt; 
 &lt;li&gt;‚òëÔ∏è BitTorrent selective download&lt;/li&gt; 
 &lt;li&gt;üì° Update tracker list every day automatically&lt;/li&gt; 
 &lt;li&gt;üîå UPnP &amp;amp; NAT-PMP Port Mapping&lt;/li&gt; 
 &lt;li&gt;üéõ Up to 10 concurrent download tasks&lt;/li&gt; 
 &lt;li&gt;üöÄ Supports 64 threads in a single task&lt;/li&gt; 
 &lt;li&gt;üö• Supports speed limit&lt;/li&gt; 
 &lt;li&gt;üï∂ Mock User-Agent&lt;/li&gt; 
 &lt;li&gt;üîî Download completed Notification&lt;/li&gt; 
 &lt;li&gt;üíª Ready for Touch Bar (Mac only)&lt;/li&gt; 
 &lt;li&gt;ü§ñ Resident system tray for quick operation&lt;/li&gt; 
 &lt;li&gt;üìü Tray speed meter displays real-time speed (Mac only)&lt;/li&gt; 
 &lt;li&gt;üåë Dark mode&lt;/li&gt; 
 &lt;li&gt;üóë Delete related files when removing tasks (optional)&lt;/li&gt; 
 &lt;li&gt;üåç I18n, &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/#-internationalization&quot;&gt;View supported languages&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;üõ† More features in development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üñ• User Interface&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/129147/1589782238501-e7b39166-da58-4152-ae34-65a061cafa48.png&quot; alt=&quot;motrix-screenshot-task-en.png&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;‚å®Ô∏è Development&lt;/h2&gt; 
&lt;h3&gt;Clone Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git@github.com:agalwood/Motrix.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install Dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd Motrix
yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Error: Electron failed to install correctly, please delete node_modules/electron and try installing again&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;Electron&lt;/code&gt; failed to install correctly, please refer to &lt;a href=&quot;https://github.com/electron/electron/issues/8466#issuecomment-571425574&quot;&gt;https://github.com/electron/electron/issues/8466#issuecomment-571425574&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dev Mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build Release&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After building, the application will be found in the project&#39;s &lt;code&gt;release&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;üõ† Technology Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; + &lt;a href=&quot;https://vuex.vuejs.org/&quot;&gt;VueX&lt;/a&gt; + &lt;a href=&quot;https://element.eleme.io&quot;&gt;Element&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aria2.github.io/&quot;&gt;Aria2&lt;/a&gt; (Note: macOS and Linux versions use 64-bit aria2c, Windows version uses 32-bit)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚òëÔ∏è TODO&lt;/h2&gt; 
&lt;p&gt;Development Roadmap see: &lt;a href=&quot;https://trello.com/b/qNUzA0bv/motrix&quot;&gt;Trello&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ü§ù Contribute &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;If you are interested in participating in joint development, PR and Forks are welcome!&lt;/p&gt; 
&lt;h2&gt;üåç Internationalization&lt;/h2&gt; 
&lt;p&gt;Translations into versions for other languages are welcome üßê! Please read the &lt;a href=&quot;https://raw.githubusercontent.com/agalwood/Motrix/master/CONTRIBUTING.md#-translation-guide&quot;&gt;translation guide&lt;/a&gt; before starting translations.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/hadialqattan&quot;&gt;@hadialqattan&lt;/a&gt;, &lt;a href=&quot;https://github.com/AhmedElTabarani&quot;&gt;@AhmedElTabarani&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bg&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;–ë—ä–ª–≥–∞—Ä—Å–∫–∏—è—Ç –µ–∑–∏–∫&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/null-none&quot;&gt;@null-none&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ca&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Catal√†&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/marcizhu&quot;&gt;@marcizhu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;de&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Deutsch&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/Schloemicher&quot;&gt;@Schloemicher&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;el&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/Likecinema&quot;&gt;@Likecinema&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;en-US&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;English&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;es&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Espa√±ol&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/Chofito&quot;&gt;@Chofito&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fa&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ŸÅÿßÿ±ÿ≥€å&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/Nima-Ra&quot;&gt;@Nima-Ra&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fr&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Fran√ßais&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/gpatarin&quot;&gt;@gpatarin&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hu&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/zalnaRs&quot;&gt;@zalnaRs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Indonesia&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/aarestu&quot;&gt;@aarestu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;it&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Italiano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/blackcat-917&quot;&gt;@blackcat-917&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ja&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Êó•Êú¨Ë™û&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/hbkrkzk&quot;&gt;@hbkrkzk&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ko&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ÌïúÍµ≠Ïñ¥&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/KOZ39&quot;&gt;@KOZ39&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nb&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Norsk Bokm√•l&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/rubjo&quot;&gt;@rubjo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pl&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Polski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/KanarekLife&quot;&gt;@KanarekLife&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pt-BR&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Portuguese (Brazil)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/andrenoberto&quot;&gt;@andrenoberto&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ro&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Rom√¢nƒÉ&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/alyn3d&quot;&gt;@alyn3d&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ru&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;–†—É—Å—Å–∫–∏–π&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/bladeaweb&quot;&gt;@bladeaweb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tr&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;T√ºrk√ße&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/abdullah&quot;&gt;@abdullah&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uk&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/bladeaweb&quot;&gt;@bladeaweb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Ti·∫øng Vi·ªát&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/duythanhvn&quot;&gt;@duythanhvn&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-CN&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zh-TW&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;‚úîÔ∏è &lt;a href=&quot;https://github.com/Yukaii&quot;&gt;@Yukaii&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üìú License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt; Copyright (c) 2018-present Dr_rOot&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nightscout/cgm-remote-monitor</title>
      <link>https://github.com/nightscout/cgm-remote-monitor</link>
      <description>&lt;p&gt;nightscout web monitor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nightscout Web Monitor (a.k.a. cgm-remote-monitor)&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/751143/8425633/93c94dc0-1ebc-11e5-99e7-71a8f464caac.png&quot; alt=&quot;nightscout horizontal&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/nightscout/cgm-remote-monitor&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/nightscout/cgm-remote-monitor.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/nightscout/cgm-remote-monitor&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/nightscout/cgm-remote-monitor.svg?sanitize=true&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/nightscout/cgm-remote-monitor/dev.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codacy.com/app/Nightscout/cgm-remote-monitor&quot;&gt;&lt;img src=&quot;https://www.codacy.com/project/badge/f79327216860472dad9afda07de39d3b&quot; alt=&quot;Codacy Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/rTKhrqz&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/629952586895851530?label=discord%20chat&quot; alt=&quot;Discord chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/nightscout/cgm-remote-monitor&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.png&quot; alt=&quot;Deploy to Heroku&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://nightscout.github.io/pages/update-fork/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/docs/update.png&quot; alt=&quot;Update your site&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This acts as a web-based CGM (Continuous Glucose Monitor) to allow multiple caregivers to remotely view a patient&#39;s glucose data in real time. The server reads a MongoDB which is intended to be data from a physical CGM, where it sends new SGV (sensor glucose values) as the data becomes available. The data is then displayed graphically and blood glucose values are predicted 0.5 hours ahead using an autoregressive second order model. Alarms are generated for high and low values, which can be cleared by any watcher of the data.&lt;/p&gt; 
&lt;h1&gt;Looking for documentation?&lt;/h1&gt; 
&lt;h2&gt;End user?&lt;/h2&gt; 
&lt;p&gt;Nightscout documentation is currently split to two locations. This page lists all the configuration options in Nightscout and is useful for users who&#39;ve already gone through the installation process. IF you&#39;re looking for the documentation that looks like it&#39;s written for non-programmers, that&#39;s located at &lt;a href=&quot;https://nightscout.github.io/&quot;&gt;nightscout.github.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Older documentation is available at &lt;a href=&quot;http://nightscout.info&quot;&gt;nightscout.info&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Developer?&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://twitter.com/hashtag/wearenotwaiting?src=hash&amp;amp;vertical=default&amp;amp;f=images&quot;&gt;#WeAreNotWaiting&lt;/a&gt; and &lt;a href=&quot;https://vimeo.com/109767890&quot;&gt;this&lt;/a&gt; is why.&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/nightscout/cgm-remote-monitor/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#install&quot;&gt;Install&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#supported-configurations&quot;&gt;Supported configurations:&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#recommended-minimum-browser-versions-for-using-nightscout&quot;&gt;Recommended minimum browser versions for using Nightscout:&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#windows-installation-software-requirements&quot;&gt;Windows installation software requirements:&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#installation-notes-for-users-with-nginx-or-apache-reverse-proxy-for-ssltls-offloading&quot;&gt;Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#installation-notes-for-microsoft-azure-windows&quot;&gt;Installation notes for Microsoft Azure, Windows:&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#development&quot;&gt;Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#updating-my-version&quot;&gt;Updating my version?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#configure-my-uploader-to-match&quot;&gt;Configure my uploader to match&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#nightscout-api&quot;&gt;Nightscout API&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#example-queries&quot;&gt;Example Queries&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#environment&quot;&gt;Environment&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#required&quot;&gt;Required&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#alarms&quot;&gt;Alarms&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#core&quot;&gt;Core&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#predefined-values-for-your-browser-settings-optional&quot;&gt;Predefined values for your browser settings (optional)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#predefined-values-for-your-server-settings-optional&quot;&gt;Predefined values for your server settings (optional)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#views&quot;&gt;Views&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#plugins&quot;&gt;Plugins&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#default-plugins&quot;&gt;Default Plugins&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#delta-bg-delta&quot;&gt;&lt;code&gt;delta&lt;/code&gt; (BG Delta)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#direction-bg-direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt; (BG Direction)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#upbat-uploader-battery&quot;&gt;&lt;code&gt;upbat&lt;/code&gt; (Uploader Battery)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#timeago-time-ago&quot;&gt;&lt;code&gt;timeago&lt;/code&gt; (Time Ago)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#devicestatus-device-status&quot;&gt;&lt;code&gt;devicestatus&lt;/code&gt; (Device Status)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#errorcodes-cgm-error-codes&quot;&gt;&lt;code&gt;errorcodes&lt;/code&gt; (CGM Error Codes)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#ar2-ar2-forecasting&quot;&gt;&lt;code&gt;ar2&lt;/code&gt; (AR2 Forecasting)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#simplealarms-simple-bg-alarms&quot;&gt;&lt;code&gt;simplealarms&lt;/code&gt; (Simple BG Alarms)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#profile-treatment-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt; (Treatment Profile)&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#advanced-plugins&quot;&gt;Advanced Plugins:&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#careportal-careportal&quot;&gt;&lt;code&gt;careportal&lt;/code&gt; (Careportal)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#boluscalc-bolus-wizard&quot;&gt;&lt;code&gt;boluscalc&lt;/code&gt; (Bolus Wizard)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#food-custom-foods&quot;&gt;&lt;code&gt;food&lt;/code&gt; (Custom Foods)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#rawbg-raw-bg&quot;&gt;&lt;code&gt;rawbg&lt;/code&gt; (Raw BG)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#iob-insulin-on-board&quot;&gt;&lt;code&gt;iob&lt;/code&gt; (Insulin-on-Board)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#cob-carbs-on-board&quot;&gt;&lt;code&gt;cob&lt;/code&gt; (Carbs-on-Board)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#bwp-bolus-wizard-preview&quot;&gt;&lt;code&gt;bwp&lt;/code&gt; (Bolus Wizard Preview)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#cage-cannula-age&quot;&gt;&lt;code&gt;cage&lt;/code&gt; (Cannula Age)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#sage-sensor-age&quot;&gt;&lt;code&gt;sage&lt;/code&gt; (Sensor Age)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#iage-insulin-age&quot;&gt;&lt;code&gt;iage&lt;/code&gt; (Insulin Age)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#bage-battery-age&quot;&gt;&lt;code&gt;bage&lt;/code&gt; (Battery Age)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#treatmentnotify-treatment-notifications&quot;&gt;&lt;code&gt;treatmentnotify&lt;/code&gt; (Treatment Notifications)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#basal-basal-profile&quot;&gt;&lt;code&gt;basal&lt;/code&gt; (Basal Profile)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#bolus-bolus-rendering&quot;&gt;&lt;code&gt;bolus&lt;/code&gt; (Bolus Rendering)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#bridge-share2nightscout-bridge&quot;&gt;&lt;code&gt;bridge&lt;/code&gt; (Share2Nightscout bridge)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#mmconnect-minimed-connect-bridge&quot;&gt;&lt;code&gt;mmconnect&lt;/code&gt; (MiniMed Connect bridge)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#pump-pump-monitoring&quot;&gt;&lt;code&gt;pump&lt;/code&gt; (Pump Monitoring)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#openaps-openaps&quot;&gt;&lt;code&gt;openaps&lt;/code&gt; (OpenAPS)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#loop-loop&quot;&gt;&lt;code&gt;loop&lt;/code&gt; (Loop)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#override-override-mode&quot;&gt;&lt;code&gt;override&lt;/code&gt; (Override Mode)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#xdripjs-xdrip-js&quot;&gt;&lt;code&gt;xdripjs&lt;/code&gt; (xDrip-js)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#alexa-amazon-alexa&quot;&gt;&lt;code&gt;alexa&lt;/code&gt; (Amazon Alexa)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#googlehome-google-homedialogflow&quot;&gt;&lt;code&gt;googlehome&lt;/code&gt; (Google Home/DialogFLow)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#speech-speech&quot;&gt;&lt;code&gt;speech&lt;/code&gt; (Speech)&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#cors-cors&quot;&gt;&lt;code&gt;cors&lt;/code&gt; (CORS)&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#extended-settings&quot;&gt;Extended Settings&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#pushover&quot;&gt;Pushover&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#ifttt-maker&quot;&gt;IFTTT Maker&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#treatment-profile&quot;&gt;Treatment Profile&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#setting-environment-variables&quot;&gt;Setting environment variables&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#vagrant-install&quot;&gt;Vagrant install&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#more-questions&quot;&gt;More questions?&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#browser-testing-suite-provided-by&quot;&gt;Browser testing suite provided by&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h1&gt;Install&lt;/h1&gt; 
&lt;h2&gt;Supported configurations:&lt;/h2&gt; 
&lt;p&gt;If you plan to use Nightscout, we recommend using &lt;a href=&quot;https://nightscout.github.io/nightscout/new_user/&quot;&gt;Heroku&lt;/a&gt; as this is free and easy to use. We used to recommend hostig at Azure, but the resource needs of Nightscout have grown over the years and Azure won&#39;t comfortably run Nightscout anymore in the free tier. If you&#39;re hosting in Azure and looking to update your site, we recommend you &lt;a href=&quot;http://openaps.readthedocs.io/en/latest/docs/While%20You%20Wait%20For%20Gear/nightscout-setup.html#switching-from-azure-to-heroku&quot;&gt;switch from Azure to Heroku&lt;/a&gt; as you&#39;re likely to hit issues in the process of updating the site.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nightscout.github.io/nightscout/new_user/&quot;&gt;Nightscout Setup with Heroku&lt;/a&gt; (recommended)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;While you can install Nightscout on a virtual server or a Raspberry Pi, we do not recommend this unless you have at least some experience hosting Node applications and development using the toolchain in use with Nightscout. Heroku automates all of the hosting for you and even many of the dvelopers run their production sites in Heroku due to convenience.&lt;/p&gt; 
&lt;p&gt;If you&#39;re a hosting provider and want to provide our users additional free hosting options, you&#39;re welcome to issue a documentation pull request with instructions on how to setup Nightscout on your system.&lt;/p&gt; 
&lt;h2&gt;Recommended minimum browser versions for using Nightscout:&lt;/h2&gt; 
&lt;p&gt;Older versions of the browsers might work, but are untested.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Android 4&lt;/li&gt; 
 &lt;li&gt;iOS 6&lt;/li&gt; 
 &lt;li&gt;Chrome 35&lt;/li&gt; 
 &lt;li&gt;Edge 17&lt;/li&gt; 
 &lt;li&gt;Firefox 61&lt;/li&gt; 
 &lt;li&gt;Opera 12.1&lt;/li&gt; 
 &lt;li&gt;Safari 6 (macOS 10.7)&lt;/li&gt; 
 &lt;li&gt;Internet Explorer: not supported&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some features may not work with devices/browsers on the older end of these requirements.&lt;/p&gt; 
&lt;h2&gt;Windows installation software requirements:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; Latest Node 12 LTS. Node versions that do not have the latest security patches will not work. Use &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;Install instructions for Node&lt;/a&gt; or use &lt;code&gt;bin/setup.sh&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/download-center?jmp=nav#community&quot;&gt;MongoDB&lt;/a&gt; 3.x or later. MongoDB 2.4 is only supported for Raspberry Pi.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As a non-root user clone this repo then install dependencies into the root of the project:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Your site redirects insecure connections to &lt;code&gt;https&lt;/code&gt; by default. If you use a reverse proxy like nginx or Apache to handle the connection security for you, make sure it sets the &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; header. Otherwise nightscout will be unable to know if it was called through a secure connection and will try to redirect you to the https version. If you&#39;re unable to set this Header, you can change the &lt;code&gt;INSECURE_USE_HTTP&lt;/code&gt; setting in nightscout to true in order to allow insecure connections without being redirected.&lt;/li&gt; 
 &lt;li&gt;In case you use a proxy. Do not use an external network interfaces for hosting Nightscout. Make sure the unsecure port is not available from a remote network connection&lt;/li&gt; 
 &lt;li&gt;HTTP Strict Transport Security (HSTS) headers are enabled by default, use settings &lt;code&gt;SECURE_HSTS_HEADER&lt;/code&gt; and &lt;code&gt;SECURE_HSTS_HEADER_*&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#predefined-values-for-your-server-settings-optional&quot;&gt;Predefined values for your server settings&lt;/a&gt; for more details&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation notes for Microsoft Azure, Windows:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If deploying the software to Microsoft Azure, you must set ** in the app settings for &lt;em&gt;WEBSITE_NODE_DEFAULT_VERSION&lt;/em&gt; and &lt;em&gt;SCM_COMMAND_IDLE_TIMEOUT&lt;/em&gt; &lt;strong&gt;before&lt;/strong&gt; you deploy the latest Nightscout or the site deployment will likely fail. Other hosting environments do not require this setting. Additionally, if using the Azure free hosting tier, the installation might fail due to resource constraints imposed by Azure on the free hosting. Please set the following settings to the environment in Azure:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;WEBSITE_NODE_DEFAULT_VERSION=10.15.2
SCM_COMMAND_IDLE_TIMEOUT=300
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://github.com/jaylagorio/Nightscout-on-Windows-Server&quot;&gt;install MongoDB, Node.js, and Nightscouton a single Windows system&lt;/a&gt;. if you want to host your Nightscout outside of the cloud. Although the instructions are intended for Windows Server the procedure is compatible with client versions of Windows such as Windows 7 and Windows 10.&lt;/li&gt; 
 &lt;li&gt;If you deploy to Windows and want to develop or test you need to install &lt;a href=&quot;https://www.cygwin.com/&quot;&gt;Cygwin&lt;/a&gt; (use &lt;a href=&quot;https://www.cygwin.com/setup-x86_64.exe&quot;&gt;setup-x86_64.exe&lt;/a&gt; and make sure to install &lt;code&gt;build-essential&lt;/code&gt; package. Test your configuration by executing &lt;code&gt;make&lt;/code&gt; and check if all tests are ok.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;p&gt;Want to help with development, or just see how Nightscout works? Great! See &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for development-related documentation.&lt;/p&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;p&gt;The data being uploaded from the server to the client is from a MongoDB server such as [MongoDB Atlas][https://www.mongodb.com].&lt;/p&gt; 
&lt;h2&gt;Updating my version?&lt;/h2&gt; 
&lt;p&gt;The easiest way to update your version of cgm-remote-monitor to the latest version is to use the &lt;a href=&quot;http://nightscout.github.io/pages/update-fork/&quot;&gt;update tool&lt;/a&gt;. A step-by-step guide is available [here][http://www.nightscout.info/wiki/welcome/how-to-update-to-latest-cgm-remote-monitor-aka-cookie]. To downgrade to an older version, follow [this guide][http://www.nightscout.info/wiki/welcome/how-to-deploy-an-older-version-of-nightscout].&lt;/p&gt; 
&lt;h2&gt;Configure my uploader to match&lt;/h2&gt; 
&lt;p&gt;Use the &lt;a href=&quot;https://nightscout.github.io/pages/configure/&quot;&gt;autoconfigure tool&lt;/a&gt; to sync an uploader to your config.&lt;/p&gt; 
&lt;h2&gt;Nightscout API&lt;/h2&gt; 
&lt;p&gt;The Nightscout API enables direct access to your data without the need for Mongo access. You can find CGM data in &lt;code&gt;/api/v1/entries&lt;/code&gt;, Care Portal Treatments in &lt;code&gt;/api/v1/treatments&lt;/code&gt;, and Treatment Profiles in &lt;code&gt;/api/v1/profile&lt;/code&gt;. The server status and settings are available from &lt;code&gt;/api/v1/status.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;By default the &lt;code&gt;/entries&lt;/code&gt; and &lt;code&gt;/treatments&lt;/code&gt; APIs limit results to the the most recent 10 values from the last 2 days. You can get many more results, by using the &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;dateString&lt;/code&gt;, and &lt;code&gt;created_at&lt;/code&gt; parameters, depending on the type of data you&#39;re looking for.&lt;/p&gt; 
&lt;p&gt;Once you&#39;ve installed Nightscout, you can access API documentation by loading &lt;code&gt;/api-docs/&lt;/code&gt; URL in your instance.&lt;/p&gt; 
&lt;h4&gt;Example Queries&lt;/h4&gt; 
&lt;p&gt;(replace &lt;code&gt;http://localhost:1337&lt;/code&gt; with your own URL)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;100&#39;s: &lt;code&gt;http://localhost:1337/api/v1/entries.json?find[sgv]=100&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Count of 100&#39;s in a month: &lt;code&gt;http://localhost:1337/api/v1/count/entries/where?find[dateString][$gte]=2016-09&amp;amp;find[dateString][$lte]=2016-10&amp;amp;find[sgv]=100&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;BGs between 2 days: &lt;code&gt;http://localhost:1337/api/v1/entries/sgv.json?find[dateString][$gte]=2015-08-28&amp;amp;find[dateString][$lte]=2015-08-30&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Juice Box corrections in a year: &lt;code&gt;http://localhost:1337/api/v1/treatments.json?count=1000&amp;amp;find[carbs]=15&amp;amp;find[eventType]=Carb+Correction&amp;amp;find[created_at][$gte]=2015&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Boluses over 2U: &lt;code&gt;http://localhost:1337/api/v1/treatments.json?find[insulin][$gte]=2&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The API is Swagger enabled, so you can generate client code to make working with the API easy. To learn more about the Nightscout API, visit &lt;a href=&quot;https://YOUR-SITE.com/api-docs/&quot;&gt;https://YOUR-SITE.com/api-docs/&lt;/a&gt; or review &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/swagger.yaml&quot;&gt;swagger.yaml&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Environment&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;VARIABLE&lt;/code&gt; (default) - description&lt;/p&gt; 
&lt;h3&gt;Required&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MONGODB_URI&lt;/code&gt; - The connection string for your Mongo database. Something like &lt;code&gt;mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;API_SECRET&lt;/code&gt; - A secret passphrase that must be at least 12 characters long.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MONGODB_COLLECTION&lt;/code&gt; (&lt;code&gt;entries&lt;/code&gt;) - The Mongo collection where CGM entries are stored.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DISPLAY_UNITS&lt;/code&gt; (&lt;code&gt;mg/dl&lt;/code&gt;) - Options are &lt;code&gt;mg/dl&lt;/code&gt; or &lt;code&gt;mmol/L&lt;/code&gt; (or just &lt;code&gt;mmol&lt;/code&gt;). Setting to &lt;code&gt;mmol/L&lt;/code&gt; puts the entire server into &lt;code&gt;mmol/L&lt;/code&gt; mode by default, no further settings needed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ENABLE&lt;/code&gt; - Used to enable optional features, expects a space delimited list, such as: &lt;code&gt;careportal rawbg iob&lt;/code&gt;, see &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#plugins&quot;&gt;plugins&lt;/a&gt; below&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt; - Used to disable default features, expects a space delimited list, such as: &lt;code&gt;direction upbat&lt;/code&gt;, see &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#plugins&quot;&gt;plugins&lt;/a&gt; below&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BASE_URL&lt;/code&gt; - Used for building links to your site&#39;s API, i.e. Pushover callbacks, usually the URL of your Nightscout site.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AUTH_DEFAULT_ROLES&lt;/code&gt; (&lt;code&gt;readable&lt;/code&gt;) - possible values &lt;code&gt;readable&lt;/code&gt;, &lt;code&gt;denied&lt;/code&gt;, or any valid role name. When &lt;code&gt;readable&lt;/code&gt;, anyone can view Nightscout without a token. Setting it to &lt;code&gt;denied&lt;/code&gt; will require a token from every visit, using &lt;code&gt;status-only&lt;/code&gt; will enable api-secret based login.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IMPORT_CONFIG&lt;/code&gt; - Used to import settings and extended settings from a url such as a gist. Structure of file should be something like: &lt;code&gt;{&quot;settings&quot;: {&quot;theme&quot;: &quot;colors&quot;}, &quot;extendedSettings&quot;: {&quot;upbat&quot;: {&quot;enableAlerts&quot;: true}}}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TREATMENTS_AUTH&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;. Deprecated, if set to &lt;code&gt;off&lt;/code&gt; the &lt;code&gt;careportal&lt;/code&gt; role will be added to &lt;code&gt;AUTH_DEFAULT_ROLES&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Alarms&lt;/h3&gt; 
&lt;p&gt;These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TYPES&lt;/code&gt; (&lt;code&gt;simple&lt;/code&gt; if any &lt;code&gt;BG_&lt;/code&gt;* ENV&#39;s are set, otherwise &lt;code&gt;predict&lt;/code&gt;) - currently 2 alarm types are supported, and can be used independently or combined. The &lt;code&gt;simple&lt;/code&gt; alarm type only compares the current BG to &lt;code&gt;BG_&lt;/code&gt; thresholds above, the &lt;code&gt;predict&lt;/code&gt; alarm type uses highly tuned formula that forecasts where the BG is going based on it&#39;s trend. &lt;code&gt;predict&lt;/code&gt; &lt;strong&gt;DOES NOT&lt;/strong&gt; currently use any of the &lt;code&gt;BG_&lt;/code&gt;* ENV&#39;s&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BG_HIGH&lt;/code&gt; (&lt;code&gt;260&lt;/code&gt;) - the high BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BG_TARGET_TOP&lt;/code&gt; (&lt;code&gt;180&lt;/code&gt;) - the top of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BG_TARGET_BOTTOM&lt;/code&gt; (&lt;code&gt;80&lt;/code&gt;) - the bottom of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BG_LOW&lt;/code&gt; (&lt;code&gt;55&lt;/code&gt;) - the low BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_URGENT_HIGH&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_URGENT_HIGH_MINS&lt;/code&gt; (&lt;code&gt;30 60 90 120&lt;/code&gt;) - Number of minutes to snooze urgent high alarms, space separated for options in browser, first used for pushover&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_HIGH&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_HIGH_MINS&lt;/code&gt; (&lt;code&gt;30 60 90 120&lt;/code&gt;) - Number of minutes to snooze high alarms, space separated for options in browser, first used for pushover&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_LOW&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_LOW_MINS&lt;/code&gt; (&lt;code&gt;15 30 45 60&lt;/code&gt;) - Number of minutes to snooze low alarms, space separated for options in browser, first used for pushover&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_URGENT_LOW&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_URGENT_LOW_MINS&lt;/code&gt; (&lt;code&gt;15 30 45&lt;/code&gt;) - Number of minutes to snooze urgent low alarms, space separated for options in browser, first used for pushover&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_URGENT_MINS&lt;/code&gt; (&lt;code&gt;30 60 90 120&lt;/code&gt;) - Number of minutes to snooze urgent alarms (that aren&#39;t tagged as high or low), space separated for options in browser, first used for pushover&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_WARN_MINS&lt;/code&gt; (&lt;code&gt;30 60 90 120&lt;/code&gt;) - Number of minutes to snooze warning alarms (that aren&#39;t tagged as high or low), space separated for options in browser, first used for pushover&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Core&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MONGO_TREATMENTS_COLLECTION&lt;/code&gt; (&lt;code&gt;treatments&lt;/code&gt;) -The collection used to store treatments entered in the Care Portal, see the &lt;code&gt;ENABLE&lt;/code&gt; env var above&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MONGO_DEVICESTATUS_COLLECTION&lt;/code&gt;(&lt;code&gt;devicestatus&lt;/code&gt;) - The collection used to store device status information such as uploader battery&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MONGO_PROFILE_COLLECTION&lt;/code&gt;(&lt;code&gt;profile&lt;/code&gt;) - The collection used to store your profiles&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MONGO_FOOD_COLLECTION&lt;/code&gt;(&lt;code&gt;food&lt;/code&gt;) - The collection used to store your food database&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MONGO_ACTIVITY_COLLECTION&lt;/code&gt;(&lt;code&gt;activity&lt;/code&gt;) - The collection used to store activity data&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PORT&lt;/code&gt; (&lt;code&gt;1337&lt;/code&gt;) - The port that the node.js application will listen on.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HOSTNAME&lt;/code&gt; - The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use &lt;code&gt;::&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SSL_KEY&lt;/code&gt; - Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let&#39;s Encrypt, make this variable the path to your privkey.pem file (private key).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SSL_CERT&lt;/code&gt; - Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let&#39;s Encrypt, make this variable the path to fullchain.pem file (cert + ca).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SSL_CA&lt;/code&gt; - Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let&#39;s Encrypt, make this variable the path to chain.pem file (chain).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HEARTBEAT&lt;/code&gt; (&lt;code&gt;60&lt;/code&gt;) - Number of seconds to wait in between database checks&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DEBUG_MINIFY&lt;/code&gt; (&lt;code&gt;true&lt;/code&gt;) - Debug option, setting to &lt;code&gt;false&lt;/code&gt; will disable bundle minification to help tracking down error and speed up development&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DE_NORMALIZE_DATES&lt;/code&gt;(&lt;code&gt;true&lt;/code&gt;) - The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to &lt;code&gt;true&lt;/code&gt; causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Predefined values for your browser settings (optional)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;TIME_FORMAT&lt;/code&gt; (&lt;code&gt;12&lt;/code&gt;)- possible values &lt;code&gt;12&lt;/code&gt; or &lt;code&gt;24&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DAY_START&lt;/code&gt; (&lt;code&gt;7.0&lt;/code&gt;) - time for start of day (0.0 - 24.0) for features using day time / night time options&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DAY_END&lt;/code&gt; (&lt;code&gt;21.0&lt;/code&gt;) - time for end of day (0.0 - 24.0) for features using day time / night time options&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIGHT_MODE&lt;/code&gt; (&lt;code&gt;off&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SHOW_RAWBG&lt;/code&gt; (&lt;code&gt;never&lt;/code&gt;) - possible values &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt; or &lt;code&gt;noise&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CUSTOM_TITLE&lt;/code&gt; (&lt;code&gt;Nightscout&lt;/code&gt;) - Title for the main view&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;THEME&lt;/code&gt; (&lt;code&gt;colors&lt;/code&gt;) - possible values &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;colors&lt;/code&gt;, or &lt;code&gt;colorblindfriendly&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TIMEAGO_WARN&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TIMEAGO_WARN_MINS&lt;/code&gt; (&lt;code&gt;15&lt;/code&gt;) - minutes since the last reading to trigger a warning&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TIMEAGO_URGENT&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TIMEAGO_URGENT_MINS&lt;/code&gt; (&lt;code&gt;30&lt;/code&gt;) - minutes since the last reading to trigger a urgent alarm&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SHOW_PLUGINS&lt;/code&gt; - enabled plugins that should have their visualizations shown, defaults to all enabled&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SHOW_FORECAST&lt;/code&gt; (&lt;code&gt;ar2&lt;/code&gt;) - plugin forecasts that should be shown by default, supports space delimited values such as &lt;code&gt;&quot;ar2 openaps&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LANGUAGE&lt;/code&gt; (&lt;code&gt;en&lt;/code&gt;) - language of Nightscout. If not available english is used 
  &lt;ul&gt; 
   &lt;li&gt;Currently supported language codes are: bg (–ë—ä–ª–≥–∞—Ä—Å–∫–∏), cs (ƒåe≈°tina), de (Deutsch), dk (Dansk), el (ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨), en (English), es (Espa√±ol), fi (Suomi), fr (Fran√ßais), he (◊¢◊ë◊®◊ô◊™), hr (Hrvatski), hu (magyar), it (Italiano), ko (ÌïúÍµ≠Ïñ¥), nb (Norsk (Bokm√•l)), nl (Nederlands), pl (Polski), pt (Portugu√™s (Brasil)), ro (Rom√¢nƒÉ), ru (–†—É—Å—Å–∫–∏–π), sk (Slovenƒçina), sv (Svenska), tr (Turkish), zh_cn (‰∏≠ÊñáÔºàÁÆÄ‰Ωì)), zh_tw (‰∏≠ÊñáÔºàÁπÅÈ´î))&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SCALE_Y&lt;/code&gt; (&lt;code&gt;log&lt;/code&gt;) - The type of scaling used for the Y axis of the charts system wide. 
  &lt;ul&gt; 
   &lt;li&gt;The default &lt;code&gt;log&lt;/code&gt; (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range.&lt;/li&gt; 
   &lt;li&gt;The &lt;code&gt;linear&lt;/code&gt; option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn&#39;t wasted.&lt;/li&gt; 
   &lt;li&gt;The &lt;code&gt;log-dynamic&lt;/code&gt; is similar to the default &lt;code&gt;log&lt;/code&gt; options, but uses the same dynamic range and the &lt;code&gt;linear&lt;/code&gt; scale.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EDIT_MODE&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;. Enables the icon allowing for editing of treatments in the main view.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Predefined values for your server settings (optional)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;INSECURE_USE_HTTP&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Redirect unsafe http traffic to https. Possible values &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt;. Your site redirects to &lt;code&gt;https&lt;/code&gt; by default. If you don&#39;t want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set &lt;code&gt;INSECURE_USE_HTTP&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Note: This will allow (unsafe) http traffic to your Nightscout instance and is not recommended.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SECURE_HSTS_HEADER&lt;/code&gt; (&lt;code&gt;true&lt;/code&gt;) - Add HTTP Strict Transport Security (HSTS) header. Possible values &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SECURE_HSTS_HEADER_INCLUDESUBDOMAINS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - includeSubdomains options for HSTS. Possible values &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SECURE_HSTS_HEADER_PRELOAD&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - ask for preload in browsers for HSTS. Possible values &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SECURE_CSP&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Add Content Security Policy headers. Possible values &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SECURE_CSP_REPORT_ONLY&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - If set to &lt;code&gt;true&lt;/code&gt; allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Views&lt;/h3&gt; 
&lt;p&gt;Nightscout allows to create custom, simplified views using a predefined set of elements. This option is available under &lt;code&gt;[+]&lt;/code&gt; link in the main menu.&lt;/p&gt; 
&lt;p&gt;List of available items:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;SGV&lt;/code&gt; - Sensor Glucose Value&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SGV age&lt;/code&gt; - time since the last SGV read&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SGV delta&lt;/code&gt; - change of SGV in the last 5 minutes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Trend arrow&lt;/code&gt; - icon of the SG trend&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Time&lt;/code&gt; - current time&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Line break&lt;/code&gt; - invisible item that will move following items to the next line (by default all are showing on the same level)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All visible items have &lt;code&gt;Size&lt;/code&gt; property which allows to customize the view even more. Also, all items may appear multiple times on the view.&lt;/p&gt; 
&lt;p&gt;Apart from adding items, it is possible to customize other aspects of the views, like selecting &lt;code&gt;Color&lt;/code&gt; or &lt;code&gt;Black&lt;/code&gt; background. The first one will indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above). &lt;code&gt;Show SGV age&lt;/code&gt; option will make &lt;code&gt;SGV age&lt;/code&gt; item appear &lt;code&gt;Always&lt;/code&gt; or only if the predefined threshold is reached: &lt;code&gt;Only after threshold&lt;/code&gt;. Breaching &lt;code&gt;SGV age threshold&lt;/code&gt; will also make &lt;code&gt;Color&lt;/code&gt; background turn grey and strike through &lt;code&gt;SGV&lt;/code&gt;. &lt;code&gt;Clock view configurator&lt;/code&gt; will generate an URL (available under &lt;code&gt;Open my clock view!&lt;/code&gt; link) that could be bookmarked.&lt;/p&gt; 
&lt;p&gt;There are a few default views available from the main menu:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Clock&lt;/code&gt; - Shows current BG, trend arrow, and time of day. Grey text on a black background.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Color&lt;/code&gt; - Shows current BG and trend arrow. White text on a color background.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Simple&lt;/code&gt; - Shows current BG. Grey text on a black background.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you launch one of these views in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view.&lt;/p&gt; 
&lt;h3&gt;Split View&lt;/h3&gt; 
&lt;p&gt;Some users will need easy access to multiple Nightscout views at the same time. We have a special view for this case, accessed on /split path on your Nightscout URL. The view supports any number of sites between 1 to 8 way split, where the content for the screen can be loaded from multiple Nightscout instances. Note you still need to host separate instances for each Nightscout being monitored including the one that hosts the split view page - these variables only add the ability to load multiple views into one browser page. To set the URLs from which the content is loaded, set:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;FRAME_URL_1&lt;/code&gt; - URL where content is loaded, for the first view (increment the number up to 8 to get more views)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FRAME_NAME_1&lt;/code&gt; - Name for the first split view portion of the screen (increment the number to name more views)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Plugins&lt;/h3&gt; 
&lt;p&gt;Plugins are used extend the way information is displayed, how notifications are sent, alarms are triggered, and more.&lt;/p&gt; 
&lt;p&gt;The built-in/example plugins that are available by default are listed below. The plugins may still need to be enabled by adding to the &lt;code&gt;ENABLE&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h4&gt;Default Plugins&lt;/h4&gt; 
&lt;p&gt;These can be disabled by adding them to the &lt;code&gt;DISABLE&lt;/code&gt; variable, for example &lt;code&gt;DISABLE=&quot;direction upbat&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;delta&lt;/code&gt; (BG Delta)&lt;/h5&gt; 
&lt;p&gt;Calculates and displays the change between the last 2 BG values.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;direction&lt;/code&gt; (BG Direction)&lt;/h5&gt; 
&lt;p&gt;Displays the trend direction.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;upbat&lt;/code&gt; (Uploader Battery)&lt;/h5&gt; 
&lt;p&gt;Displays the most recent battery status from the uploader phone. . Use these &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#extended-settings&quot;&gt;extended setting&lt;/a&gt; to adjust behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;UPBAT_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable uploader battery alarms via Pushover and IFTTT.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;UPBAT_WARN&lt;/code&gt; (&lt;code&gt;30&lt;/code&gt;) - Minimum battery percent to trigger warning.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;UPBAT_URGENT&lt;/code&gt; (&lt;code&gt;20&lt;/code&gt;) - Minimum battery percent to trigger urgent alarm.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;timeago&lt;/code&gt; (Time Ago)&lt;/h5&gt; 
&lt;p&gt;Displays the time since last CGM entry. Use these &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#extended-settings&quot;&gt;extended setting&lt;/a&gt; to adjust behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;TIMEAGO_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable stale data alarms via Pushover and IFTTT.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TIMEAGO_WARN&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TIMEAGO_WARN_MINS&lt;/code&gt; (&lt;code&gt;15&lt;/code&gt;) - minutes since the last reading to trigger a warning&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TIMEAGO_URGENT&lt;/code&gt; (&lt;code&gt;on&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALARM_TIMEAGO_URGENT_MINS&lt;/code&gt; (&lt;code&gt;30&lt;/code&gt;) - minutes since the last reading to trigger a urgent alarm&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;devicestatus&lt;/code&gt; (Device Status)&lt;/h5&gt; 
&lt;p&gt;Used by &lt;code&gt;upbat&lt;/code&gt; and other plugins to display device status info. Supports the &lt;code&gt;DEVICESTATUS_ADVANCED=&quot;true&quot;&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#extended-settings&quot;&gt;extended setting&lt;/a&gt; to send all device statuses to the client for retrospective use and to support other plugins.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;errorcodes&lt;/code&gt; (CGM Error Codes)&lt;/h5&gt; 
&lt;p&gt;Generates alarms for CGM codes &lt;code&gt;9&lt;/code&gt; (hourglass) and &lt;code&gt;10&lt;/code&gt; (???).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#extended-settings&quot;&gt;extended settings&lt;/a&gt; to adjust what errorcodes trigger notifications and alarms: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;ERRORCODES_INFO&lt;/code&gt; (&lt;code&gt;1 2 3 4 5 6 7 8&lt;/code&gt;) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or &lt;code&gt;off&lt;/code&gt; to disable&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ERRORCODES_WARN&lt;/code&gt; (&lt;code&gt;off&lt;/code&gt;) - By default there are no warning configured, set to a space separate list of numbers or &lt;code&gt;off&lt;/code&gt; to disable&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ERRORCODES_URGENT&lt;/code&gt; (&lt;code&gt;9 10&lt;/code&gt;) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or &lt;code&gt;off&lt;/code&gt; to disable&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;ar2&lt;/code&gt; (AR2 Forecasting)&lt;/h5&gt; 
&lt;p&gt;Generates alarms based on forecasted values. See &lt;a href=&quot;https://github.com/nightscout/nightscout.github.io/wiki/Forecasting&quot;&gt;Forecasting using AR2 algorithm&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enabled by default if no thresholds are set &lt;strong&gt;OR&lt;/strong&gt; &lt;code&gt;ALARM_TYPES&lt;/code&gt; includes &lt;code&gt;predict&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#extended-settings&quot;&gt;extended settings&lt;/a&gt; to adjust AR2 behavior: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;AR2_CONE_FACTOR&lt;/code&gt; (&lt;code&gt;2&lt;/code&gt;) - to adjust size of cone, use &lt;code&gt;0&lt;/code&gt; for a single line.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;simplealarms&lt;/code&gt; (Simple BG Alarms)&lt;/h5&gt; 
&lt;p&gt;Uses &lt;code&gt;BG_HIGH&lt;/code&gt;, &lt;code&gt;BG_TARGET_TOP&lt;/code&gt;, &lt;code&gt;BG_TARGET_BOTTOM&lt;/code&gt;, &lt;code&gt;BG_LOW&lt;/code&gt; thresholds to generate alarms.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enabled by default if 1 of these thresholds is set &lt;strong&gt;OR&lt;/strong&gt; &lt;code&gt;ALARM_TYPES&lt;/code&gt; includes &lt;code&gt;simple&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;profile&lt;/code&gt; (Treatment Profile)&lt;/h5&gt; 
&lt;p&gt;Add link to Profile Editor and allow to enter treatment profile settings. Also uses the extended setting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;PROFILE_HISTORY&lt;/code&gt; (&lt;code&gt;off&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;. Enable/disable NS ability to keep history of your profiles (still experimental)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PROFILE_MULTIPLE&lt;/code&gt; (&lt;code&gt;off&lt;/code&gt;) - possible values &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;. Enable/disable NS ability to handle and switch between multiple treatment profiles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Advanced Plugins:&lt;/h4&gt; 
&lt;h5&gt;&lt;code&gt;careportal&lt;/code&gt; (Careportal)&lt;/h5&gt; 
&lt;p&gt;An optional form to enter treatments.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;boluscalc&lt;/code&gt; (Bolus Wizard)&lt;/h5&gt; 
&lt;h5&gt;&lt;code&gt;food&lt;/code&gt; (Custom Foods)&lt;/h5&gt; 
&lt;p&gt;An option plugin to enable adding foods from database in Bolus Wizard and enable .&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;rawbg&lt;/code&gt; (Raw BG)&lt;/h5&gt; 
&lt;p&gt;Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#extended-settings&quot;&gt;extended setting&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;DISPLAY&lt;/code&gt; (&lt;code&gt;unsmoothed&lt;/code&gt;) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;unfiltered&lt;/code&gt; - Raw BG is calculated by applying the calibration to the glucose record&#39;s unfiltered value.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;filtered&lt;/code&gt; - Raw BG is calculated by applying the calibration to the glucose record&#39;s filtered value. The glucose record&#39;s filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;unsmoothed&lt;/code&gt; - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the &lt;code&gt;filtered&lt;/code&gt; setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the &lt;code&gt;unfiltered&lt;/code&gt; setting) by the ratio. The effect is to exagerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;iob&lt;/code&gt; (Insulin-on-Board)&lt;/h5&gt; 
&lt;p&gt;Adds the IOB pill visualization in the client and calculates values that used by other plugins. Uses treatments with insulin doses and the &lt;code&gt;dia&lt;/code&gt; and &lt;code&gt;sens&lt;/code&gt; fields from the &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#treatment-profile&quot;&gt;treatment profile&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;cob&lt;/code&gt; (Carbs-on-Board)&lt;/h5&gt; 
&lt;p&gt;Adds the COB pill visualization in the client and calculates values that used by other plugins. Uses treatments with carb doses and the &lt;code&gt;carbs_hr&lt;/code&gt;, &lt;code&gt;carbratio&lt;/code&gt;, and &lt;code&gt;sens&lt;/code&gt; fields from the &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#treatment-profile&quot;&gt;treatment profile&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;bwp&lt;/code&gt; (Bolus Wizard Preview)&lt;/h5&gt; 
&lt;p&gt;This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. &lt;em&gt;&lt;strong&gt;The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation.&lt;/strong&gt;&lt;/em&gt; The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the &lt;code&gt;iob&lt;/code&gt; plugin and &lt;code&gt;sens&lt;/code&gt;, &lt;code&gt;target_high&lt;/code&gt;, and &lt;code&gt;target_low&lt;/code&gt; fields from the &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#treatment-profile&quot;&gt;treatment profile&lt;/a&gt;. Defaults that can be adjusted with &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#extended-settings&quot;&gt;extended setting&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;BWP_WARN&lt;/code&gt; (&lt;code&gt;0.50&lt;/code&gt;) - If &lt;code&gt;BWP&lt;/code&gt; is &amp;gt; &lt;code&gt;BWP_WARN&lt;/code&gt; a warning alarm will be triggered.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BWP_URGENT&lt;/code&gt; (&lt;code&gt;1.00&lt;/code&gt;) - If &lt;code&gt;BWP&lt;/code&gt; is &amp;gt; &lt;code&gt;BWP_URGENT&lt;/code&gt; an urgent alarm will be triggered.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BWP_SNOOZE_MINS&lt;/code&gt; (&lt;code&gt;10&lt;/code&gt;) - minutes to snooze when there is enough IOB to cover a high BG.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BWP_SNOOZE&lt;/code&gt; - (&lt;code&gt;0.10&lt;/code&gt;) If BG is higher then the &lt;code&gt;target_high&lt;/code&gt; and &lt;code&gt;BWP&lt;/code&gt; &amp;lt; &lt;code&gt;BWP_SNOOZE&lt;/code&gt; alarms will be snoozed for &lt;code&gt;BWP_SNOOZE_MINS&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;cage&lt;/code&gt; (Cannula Age)&lt;/h5&gt; 
&lt;p&gt;Calculates the number of hours since the last &lt;code&gt;Site Change&lt;/code&gt; treatment that was recorded.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CAGE_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications to remind you of upcoming cannula change.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CAGE_INFO&lt;/code&gt; (&lt;code&gt;44&lt;/code&gt;) - If time since last &lt;code&gt;Site Change&lt;/code&gt; matches &lt;code&gt;CAGE_INFO&lt;/code&gt;, user will be warned of upcoming cannula change&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CAGE_WARN&lt;/code&gt; (&lt;code&gt;48&lt;/code&gt;) - If time since last &lt;code&gt;Site Change&lt;/code&gt; matches &lt;code&gt;CAGE_WARN&lt;/code&gt;, user will be alarmed to to change the cannula&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CAGE_URGENT&lt;/code&gt; (&lt;code&gt;72&lt;/code&gt;) - If time since last &lt;code&gt;Site Change&lt;/code&gt; matches &lt;code&gt;CAGE_URGENT&lt;/code&gt;, user will be issued a persistent warning of overdue change.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CAGE_DISPLAY&lt;/code&gt; (&lt;code&gt;hours&lt;/code&gt;) - Possible values are &#39;hours&#39; or &#39;days&#39;. If &#39;days&#39; is selected and age of canula is greater than 24h number is displayed in days and hours&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;sage&lt;/code&gt; (Sensor Age)&lt;/h5&gt; 
&lt;p&gt;Calculates the number of days and hours since the last &lt;code&gt;Sensor Start&lt;/code&gt; and &lt;code&gt;Sensor Change&lt;/code&gt; treatment that was recorded.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;SAGE_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications to remind you of upcoming sensor change.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SAGE_INFO&lt;/code&gt; (&lt;code&gt;144&lt;/code&gt;) - If time since last sensor event matches &lt;code&gt;SAGE_INFO&lt;/code&gt;, user will be warned of upcoming sensor change&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SAGE_WARN&lt;/code&gt; (&lt;code&gt;164&lt;/code&gt;) - If time since last sensor event matches &lt;code&gt;SAGE_WARN&lt;/code&gt;, user will be alarmed to to change/restart the sensor&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SAGE_URGENT&lt;/code&gt; (&lt;code&gt;166&lt;/code&gt;) - If time since last sensor event matches &lt;code&gt;SAGE_URGENT&lt;/code&gt;, user will be issued a persistent warning of overdue change.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;iage&lt;/code&gt; (Insulin Age)&lt;/h5&gt; 
&lt;p&gt;Calculates the number of days and hours since the last &lt;code&gt;Insulin Change&lt;/code&gt; treatment that was recorded.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;IAGE_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications to remind you of upcoming insulin reservoir change.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IAGE_INFO&lt;/code&gt; (&lt;code&gt;44&lt;/code&gt;) - If time since last &lt;code&gt;Insulin Change&lt;/code&gt; matches &lt;code&gt;IAGE_INFO&lt;/code&gt;, user will be warned of upcoming insulin reservoir change&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IAGE_WARN&lt;/code&gt; (&lt;code&gt;48&lt;/code&gt;) - If time since last &lt;code&gt;Insulin Change&lt;/code&gt; matches &lt;code&gt;IAGE_WARN&lt;/code&gt;, user will be alarmed to to change the insulin reservoir&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IAGE_URGENT&lt;/code&gt; (&lt;code&gt;72&lt;/code&gt;) - If time since last &lt;code&gt;Insulin Change&lt;/code&gt; matches &lt;code&gt;IAGE_URGENT&lt;/code&gt;, user will be issued a persistent warning of overdue change.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;bage&lt;/code&gt; (Battery Age)&lt;/h5&gt; 
&lt;p&gt;Calculates the number of days and hours since the last &lt;code&gt;Pump Battery Change&lt;/code&gt; treatment that was recorded.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;BAGE_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications to remind you of upcoming pump battery change.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BAGE_DISPLAY&lt;/code&gt; (&lt;code&gt;days&lt;/code&gt;) - Set to &lt;code&gt;hours&lt;/code&gt; to display time since last &lt;code&gt;Pump Battery Change&lt;/code&gt; in hours only.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BAGE_INFO&lt;/code&gt; (&lt;code&gt;312&lt;/code&gt;) - If time since last &lt;code&gt;Pump Battery Change&lt;/code&gt; matches &lt;code&gt;BAGE_INFO&lt;/code&gt; hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BAGE_WARN&lt;/code&gt; (&lt;code&gt;336&lt;/code&gt;) - If time since last &lt;code&gt;Pump Battery Change&lt;/code&gt; matches &lt;code&gt;BAGE_WARN&lt;/code&gt; hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BAGE_URGENT&lt;/code&gt; (&lt;code&gt;360&lt;/code&gt;) - If time since last &lt;code&gt;Pump Battery Change&lt;/code&gt; matches &lt;code&gt;BAGE_URGENT&lt;/code&gt; hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;treatmentnotify&lt;/code&gt; (Treatment Notifications)&lt;/h5&gt; 
&lt;p&gt;Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;TREATMENTNOTIFY_SNOOZE_MINS&lt;/code&gt; (&lt;code&gt;10&lt;/code&gt;) - Number of minutes to snooze notifications after a treatment is entered&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TREATMENTNOTIFY_INCLUDE_BOLUSES_OVER&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt;) - U value over which the bolus will trigger a notification and snooze alarms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;basal&lt;/code&gt; (Basal Profile)&lt;/h5&gt; 
&lt;p&gt;Adds the Basal pill visualization to display the basal rate for the current time. Also enables the &lt;code&gt;bwp&lt;/code&gt; plugin to calculate correction temp basal suggestions. Uses the &lt;code&gt;basal&lt;/code&gt; field from the &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#treatment-profile&quot;&gt;treatment profile&lt;/a&gt;. Also uses the extended setting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;BASAL_RENDER&lt;/code&gt; (&lt;code&gt;none&lt;/code&gt;) - Possible values are &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, or &lt;code&gt;icicle&lt;/code&gt; (inverted)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;bolus&lt;/code&gt; (Bolus Rendering)&lt;/h5&gt; 
&lt;p&gt;Settings to configure Bolus rendering&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;BOLUS_RENDER_OVER&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt;) - U value over which the bolus labels use the format defined in &lt;code&gt;BOLUS_RENDER_FORMAT&lt;/code&gt;. This value can be an integer or a float, e.g. 0.3, 1.5, 2, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BOLUS_RENDER_FORMAT&lt;/code&gt; (&lt;code&gt;default&lt;/code&gt;) - Possible values are &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt; (with leading zero and U), &lt;code&gt;concise&lt;/code&gt; (with U, without leading zero), and &lt;code&gt;minimal&lt;/code&gt; (without leading zero and U).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BOLUS_RENDER_FORMAT_SMALL&lt;/code&gt; (&lt;code&gt;default&lt;/code&gt;) - Possible values are &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt; (with leading zero and U), &lt;code&gt;concise&lt;/code&gt; (with U, without leading zero), and &lt;code&gt;minimal&lt;/code&gt; (without leading zero and U).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;bridge&lt;/code&gt; (Share2Nightscout bridge)&lt;/h5&gt; 
&lt;p&gt;Glucose reading directly from the Dexcom Share service, uses these extended settings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;BRIDGE_USER_NAME&lt;/code&gt; - Your username for the Share service.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BRIDGE_PASSWORD&lt;/code&gt; - Your password for the Share service.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BRIDGE_INTERVAL&lt;/code&gt; (&lt;code&gt;150000&lt;/code&gt; &lt;em&gt;2.5 minutes&lt;/em&gt;) - The time (in milliseconds) to wait between each update.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BRIDGE_MAX_COUNT&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;) - The number of records to attempt to fetch per update.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BRIDGE_FIRST_FETCH_COUNT&lt;/code&gt; (&lt;code&gt;3&lt;/code&gt;) - Changes max count during the very first update only.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BRIDGE_MAX_FAILURES&lt;/code&gt; (&lt;code&gt;3&lt;/code&gt;) - How many failures before giving up.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BRIDGE_MINUTES&lt;/code&gt; (&lt;code&gt;1400&lt;/code&gt;) - The time window to search for new data per update (the default value is one day in minutes).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BRIDGE_SERVER&lt;/code&gt; (``) - The default blank value is used to fetch data from Dexcom servers in the US. Set to (&lt;code&gt;EU&lt;/code&gt;) to fetch from European servers instead.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;mmconnect&lt;/code&gt; (MiniMed Connect bridge)&lt;/h5&gt; 
&lt;p&gt;Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout (&lt;a href=&quot;https://github.com/mddub/minimed-connect-to-nightscout&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MMCONNECT_USER_NAME&lt;/code&gt; - Your user name for CareLink Connect.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MMCONNECT_PASSWORD&lt;/code&gt; - Your password for CareLink Connect.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MMCONNECT_INTERVAL&lt;/code&gt; (&lt;code&gt;60000&lt;/code&gt; &lt;em&gt;1 minute&lt;/em&gt;) - Number of milliseconds to wait between requests to the CareLink server.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MMCONNECT_MAX_RETRY_DURATION&lt;/code&gt; (&lt;code&gt;32&lt;/code&gt;) - Maximum number of total seconds to spend retrying failed requests before giving up.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MMCONNECT_SGV_LIMIT&lt;/code&gt; (&lt;code&gt;24&lt;/code&gt;) - Maximum number of recent sensor glucose values to send to Nightscout on each request.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MMCONNECT_VERBOSE&lt;/code&gt; - Set this to &quot;true&quot; to log CareLink request information to the console.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MMCONNECT_STORE_RAW_DATA&lt;/code&gt; - Set this to &quot;true&quot; to store raw data returned from CareLink as &lt;code&gt;type: &quot;carelink_raw&quot;&lt;/code&gt; database entries (useful for development).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MMCONNECT_SERVER&lt;/code&gt; - Set this to &lt;code&gt;EU&lt;/code&gt; if you&#39;re using the European Medtronic services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;pump&lt;/code&gt; (Pump Monitoring)&lt;/h5&gt; 
&lt;p&gt;Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, with more on the way&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Requires &lt;code&gt;DEVICESTATUS_ADVANCED=&quot;true&quot;&lt;/code&gt; to be set&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications for Pump battery and reservoir.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_WARN_ON_SUSPEND&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to get an alarm when the pump is suspended.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_FIELDS&lt;/code&gt; (&lt;code&gt;reservoir battery&lt;/code&gt;) - The fields to display by default. Any of the following fields: &lt;code&gt;reservoir&lt;/code&gt;, &lt;code&gt;battery&lt;/code&gt;, &lt;code&gt;clock&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, and &lt;code&gt;device&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_RETRO_FIELDS&lt;/code&gt; (&lt;code&gt;reservoir battery clock&lt;/code&gt;) - The fields to display in retro mode. Any of the above fields.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_WARN_CLOCK&lt;/code&gt; (&lt;code&gt;30&lt;/code&gt;) - The number of minutes ago that needs to be exceed before an alert is triggered.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_URGENT_CLOCK&lt;/code&gt; (&lt;code&gt;60&lt;/code&gt;) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_WARN_RES&lt;/code&gt; (&lt;code&gt;10&lt;/code&gt;) - The number of units remaining, a warning will be triggered when dropping below this threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_URGENT_RES&lt;/code&gt; (&lt;code&gt;5&lt;/code&gt;) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_WARN_BATT_P&lt;/code&gt; (&lt;code&gt;30&lt;/code&gt;) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_URGENT_BATT_P&lt;/code&gt; (&lt;code&gt;20&lt;/code&gt;) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_WARN_BATT_V&lt;/code&gt; (&lt;code&gt;1.35&lt;/code&gt;) - The voltage (if percent isn&#39;t available) of the pump battery, a warning will be triggered when dropping below this threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_URGENT_BATT_V&lt;/code&gt; (&lt;code&gt;1.30&lt;/code&gt;) - The voltage (if percent isn&#39;t available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUMP_WARN_BATT_QUIET_NIGHT&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Do not generate battery alarms at night.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;openaps&lt;/code&gt; (OpenAPS)&lt;/h5&gt; 
&lt;p&gt;Integrated OpenAPS loop monitoring, uses these extended settings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Requires &lt;code&gt;DEVICESTATUS_ADVANCED=&quot;true&quot;&lt;/code&gt; to be set&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications when OpenAPS isn&#39;t looping. If OpenAPS is going to offline for a period of time, you can add an &lt;code&gt;OpenAPS Offline&lt;/code&gt; event for the expected duration from Careportal to avoid getting alerts.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_WARN&lt;/code&gt; (&lt;code&gt;30&lt;/code&gt;) - The number of minutes since the last loop that needs to be exceed before an alert is triggered&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_URGENT&lt;/code&gt; (&lt;code&gt;60&lt;/code&gt;) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggered&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_FIELDS&lt;/code&gt; (&lt;code&gt;status-symbol status-label iob meal-assist rssi&lt;/code&gt;) - The fields to display by default. Any of the following fields: &lt;code&gt;status-symbol&lt;/code&gt;, &lt;code&gt;status-label&lt;/code&gt;, &lt;code&gt;iob&lt;/code&gt;, &lt;code&gt;meal-assist&lt;/code&gt;, &lt;code&gt;freq&lt;/code&gt;, and &lt;code&gt;rssi&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_RETRO_FIELDS&lt;/code&gt; (&lt;code&gt;status-symbol status-label iob meal-assist rssi&lt;/code&gt;) - The fields to display in retro mode. Any of the above fields.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_PRED_IOB_COLOR&lt;/code&gt; (&lt;code&gt;#1e88e5&lt;/code&gt;) - The color to use for IOB prediction lines. Colors can be in &lt;code&gt;#RRGGBB&lt;/code&gt; format, but &lt;a href=&quot;https://www.w3.org/TR/css-color-3/#colorunits&quot;&gt;other CSS color units&lt;/a&gt; may be used as well.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_PRED_COB_COLOR&lt;/code&gt; (&lt;code&gt;#FB8C00&lt;/code&gt;) - The color to use for COB prediction lines. Same format as above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_PRED_ACOB_COLOR&lt;/code&gt; (&lt;code&gt;#FB8C00&lt;/code&gt;) - The color to use for ACOB prediction lines. Same format as above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_PRED_ZT_COLOR&lt;/code&gt; (&lt;code&gt;#00d2d2&lt;/code&gt;) - The color to use for ZT prediction lines. Same format as above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_PRED_UAM_COLOR&lt;/code&gt; (&lt;code&gt;#c9bd60&lt;/code&gt;) - The color to use for UAM prediction lines. Same format as above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPENAPS_COLOR_PREDICTION_LINES&lt;/code&gt; (&lt;code&gt;true&lt;/code&gt;) - Enables / disables the colored lines vs the classic purple color.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Also see &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#pushover&quot;&gt;Pushover&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#ifttt-maker&quot;&gt;IFTTT Maker&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;loop&lt;/code&gt; (Loop)&lt;/h5&gt; 
&lt;p&gt;iOS Loop app monitoring, uses these extended settings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Requires &lt;code&gt;DEVICESTATUS_ADVANCED=&quot;true&quot;&lt;/code&gt; to be set&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOOP_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications when Loop isn&#39;t looping.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOOP_WARN&lt;/code&gt; (&lt;code&gt;30&lt;/code&gt;) - The number of minutes since the last loop that needs to be exceeded before an alert is triggered&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOOP_URGENT&lt;/code&gt; (&lt;code&gt;60&lt;/code&gt;) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggered&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;loop&lt;/code&gt; to &lt;code&gt;SHOW_FORECAST&lt;/code&gt; to show forecasted BG.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For remote overrides, the following extended settings must be configured:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;LOOP_APNS_KEY&lt;/code&gt; - Apple Push Notifications service (APNs) Key, created in the Apple Developer website.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOOP_APNS_KEY_ID&lt;/code&gt; - The Key ID for the above key.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOOP_DEVELOPER_TEAM_ID&lt;/code&gt; - Your Apple developer team ID.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOOP_PUSH_SERVER_ENVIRONMENT&lt;/code&gt; - (optional) Set this to &lt;code&gt;production&lt;/code&gt; if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;override&lt;/code&gt; (Override Mode)&lt;/h5&gt; 
&lt;p&gt;Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Requires &lt;code&gt;DEVICESTATUS_ADVANCED=&quot;true&quot;&lt;/code&gt; to be set&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;xdripjs&lt;/code&gt; (xDrip-js)&lt;/h5&gt; 
&lt;p&gt;Integrated xDrip-js monitoring, uses these extended settings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Requires &lt;code&gt;DEVICESTATUS_ADVANCED=&quot;true&quot;&lt;/code&gt; to be set&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XDRIPJS_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications when CGM state is not OK or battery voltages fall below threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XDRIPJS_STATE_NOTIFY_INTRVL&lt;/code&gt; (&lt;code&gt;0.5&lt;/code&gt;) - Set to number of hours between CGM state notifications&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XDRIPJS_WARN_BAT_V&lt;/code&gt; (&lt;code&gt;300&lt;/code&gt;) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;alexa&lt;/code&gt; (Amazon Alexa)&lt;/h5&gt; 
&lt;p&gt;Integration with Amazon Alexa, &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/docs/plugins/alexa-plugin.md&quot;&gt;detailed setup instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;googlehome&lt;/code&gt; (Google Home/DialogFLow)&lt;/h5&gt; 
&lt;p&gt;Integration with Google Home (via DialogFlow), &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/docs/plugins/googlehome-plugin.md&quot;&gt;detailed setup instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;speech&lt;/code&gt; (Speech)&lt;/h5&gt; 
&lt;p&gt;Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;cors&lt;/code&gt; (CORS)&lt;/h5&gt; 
&lt;p&gt;Enabled &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt; so other websites can make request to your Nightscout site, uses these extended settings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CORS_ALLOW_ORIGIN&lt;/code&gt; (&lt;code&gt;*&lt;/code&gt;) - The list of sites that are allow to make requests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;code&gt;dbsize&lt;/code&gt; (Database Size)&lt;/h5&gt; 
&lt;p&gt;Show size of Nightscout Database, as a percentage of declared available space or in MiB.&lt;/p&gt; 
&lt;p&gt;Many deployments of Nightscout use free tier of MongoDB Atlas on Heroku, which is limited in size. After some time, as volume of stored data grows, it may happen that this limit is reached and system is unable to store new data. This plugin provides pill that indicates size of Database and shows (when configured) alarms regarding reaching space limit.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; This plugin can only check how much space database already takes, &lt;em&gt;but cannot infer&lt;/em&gt; max size available on server for it. To have correct alarms and realistic percentage, &lt;code&gt;DBSIZE_MAX&lt;/code&gt; need to be properly set - according to your mongoDB hosting configuration.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This plugin rely on db.stats() for reporting &lt;em&gt;logical&lt;/em&gt; size of database, which may be different than &lt;em&gt;physical&lt;/em&gt; size of database on server. It may work for free tier of MongoDB on Atlas, since it calculate quota according to logical size too, but may fail for other hostings or self-hosted database with quota based on physical size.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; MongoDB Atlas quota is for &lt;strong&gt;all&lt;/strong&gt; databases in cluster, while each instance will get only size of &lt;strong&gt;its own database only&lt;/strong&gt;. It is ok when you only have &lt;strong&gt;one&lt;/strong&gt; database in cluster (most common scenario) but will not work for multiple parallel databases. In such case, spliting known quota equally beetween databases and setting &lt;code&gt;DBSIZE_MAX&lt;/code&gt; to that fraction may help, but wont be precise.&lt;/p&gt; 
&lt;p&gt;All sizes are expressed as integers, in &lt;em&gt;Mebibytes&lt;/em&gt; &lt;code&gt;1 MiB == 1024 KiB == 1024*1024 B&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;DBSIZE_MAX&lt;/code&gt; (&lt;code&gt;496&lt;/code&gt;) - Maximal allowed size of database on your mongoDB server, in MiB. You need to adjust that value to match your database hosting limits - default value is for standard Heroku mongoDB free tier.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DBSIZE_WARN_PERCENTAGE&lt;/code&gt; (&lt;code&gt;60&lt;/code&gt;) - Threshold to show first warning about database size. When database reach this percentage of &lt;code&gt;DBSIZE_MAX&lt;/code&gt; size - pill will show size in yellow.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DBSIZE_URGENT_PERCENTAGE&lt;/code&gt; (&lt;code&gt;75&lt;/code&gt;) - Threshold to show urgent warning about database size. When database reach this percentage of &lt;code&gt;DBSIZE_MAX&lt;/code&gt; size, it is urgent to do backup and clean up old data. At this percentage info pill turns red.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DBSIZE_ENABLE_ALERTS&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to enable notifications about database size.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DBSIZE_IN_MIB&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) - Set to &lt;code&gt;true&lt;/code&gt; to display size of database in MiB-s instead of default percentage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This plugin should be enabled by default, if needed can be diasabled by adding &lt;code&gt;dbsize&lt;/code&gt; to the list of disabled plugins, for example: &lt;code&gt;DISABLE=&quot;dbsize&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Extended Settings&lt;/h4&gt; 
&lt;p&gt;Some plugins support additional configuration using extra environment variables. These are prefixed with the name of the plugin and a &lt;code&gt;_&lt;/code&gt;. For example setting &lt;code&gt;MYPLUGIN_EXAMPLE_VALUE=1234&lt;/code&gt; would make &lt;code&gt;extendedSettings.exampleValue&lt;/code&gt; available to the &lt;code&gt;MYPLUGIN&lt;/code&gt; plugin.&lt;/p&gt; 
&lt;p&gt;Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;DEVICESTATUS_ADVANCED&lt;/code&gt; (&lt;code&gt;true&lt;/code&gt;) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DEVICESTATUS_DAYS&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;) - Defaults to 1, can optionally be set to 2. Users can use this to show 48 hours of device status data for in retro mode, rather than the default 24 hours. Setting this value to 2 will roughly double the bandwidth usage of nightscout, so users with a data cap may not want to update this setting.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Pushover&lt;/h4&gt; 
&lt;p&gt;In addition to the normal web based alarms, there is also support for &lt;a href=&quot;https://pushover.net/&quot;&gt;Pushover&lt;/a&gt; based alarms and notifications.&lt;/p&gt; 
&lt;p&gt;To get started install the Pushover application on your iOS or Android device and create an account.&lt;/p&gt; 
&lt;p&gt;Using that account login to &lt;a href=&quot;https://pushover.net/&quot;&gt;Pushover&lt;/a&gt;, in the top left you‚Äôll see your User Key, you‚Äôll need this plus an application API Token/Key to complete this setup.&lt;/p&gt; 
&lt;p&gt;You‚Äôll need to &lt;a href=&quot;https://pushover.net/apps/build&quot;&gt;Create a Pushover Application&lt;/a&gt;. You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch. Maybe you&#39;d like to use &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/static/images/large.png&quot;&gt;this one&lt;/a&gt;?&lt;/p&gt; 
&lt;p&gt;Pushover is configured using the following Environment Variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;* `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=&quot;pushover&quot;`.
* `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below.
* `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user.  This also supports a space delimited list of keys.  To disable `INFO` level pushes set this to `off`.
* `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level &amp;gt; `WARN`).  If not defined this will fallback to `PUSHOVER_USER_KEY`.  A possible use for this is sending important messages and alarms to a CWD that you don&#39;t want to send all notification too.  This also support a space delimited list of keys.  To disable Alarm pushes set this to `off`.
* `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements.  If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`.  This also support a space delimited list of keys. To disable Announcement pushes set this to `off`.
* `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible.
* `API_SECRET` - Used for signing the pushover callback request for acknowledgments.

If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=&quot;off&quot;`
If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=&quot;off&quot;`
If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=&quot;off&quot;`

If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcements

For testing/development try [localtunnel](http://localtunnel.me/).
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;IFTTT Maker&lt;/h4&gt; 
&lt;p&gt;In addition to the normal web based alarms, and pushover, there is also integration for &lt;a href=&quot;https://ifttt.com/maker_webhooks&quot;&gt;IFTTT Webhooks&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;With Maker you are able to integrate with all the other &lt;a href=&quot;https://ifttt.com/services&quot;&gt;IFTTT Services&lt;/a&gt;. For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Setup IFTTT account: &lt;a href=&quot;https://ifttt.com/login&quot;&gt;login&lt;/a&gt; or &lt;a href=&quot;https://ifttt.com/join&quot;&gt;create an account&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/docs/plugins/maker-setup.md&quot;&gt;Detailed IFTTT setup Instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Configure Nightscout by setting these webpage environment variables:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ENABLE&lt;/code&gt; - &lt;code&gt;maker&lt;/code&gt; should be added to the list of plugins, for example: &lt;code&gt;ENABLE=&quot;maker&quot;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MAKER_KEY&lt;/code&gt; - Set this to your secret key (see [&lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/docs/plugins/maker-setup.md&quot;&gt;Detailed Instructions&lt;/a&gt; ) &lt;code&gt;MAKER_KEY=&quot;abcMyExampleabc123defjt1DeNSiftttmak-XQb69p&quot;&lt;/code&gt; This also supports a space delimited list of keys.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MAKER_ANNOUNCEMENT_KEY&lt;/code&gt; - An optional Maker key, will be used for system wide user generated announcements. If not defined this will fallback to &lt;code&gt;MAKER_KEY&lt;/code&gt;. A possible use for this is sending important messages and alarms to another device that you don&#39;t want to send all notification too. This also support a space delimited list of keys.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with &lt;code&gt;ns-&lt;/code&gt;. The core events are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ns-event&lt;/code&gt; - This event is sent to the maker service for all alarms and notifications. This is good catch all event for general logging.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ns-allclear&lt;/code&gt; - This event is sent to the maker service when an alarm has been ack&#39;d or when the server starts up without triggering any alarms. For example, you could use this event to turn a light to green.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ns-info&lt;/code&gt; - Plugins that generate notifications at the info level will cause this event to also be triggered. It will be sent in addition to &lt;code&gt;ns-event&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ns-warning&lt;/code&gt; - Alarms at the warning level with cause this event to also be triggered. It will be sent in addition to &lt;code&gt;ns-event&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ns-urgent&lt;/code&gt; - Alarms at the urgent level with cause this event to also be triggered. It will be sent in addition to &lt;code&gt;ns-event&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;see the &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/lib/plugins/maker-setup.md#events&quot;&gt;full list of events&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Treatment Profile&lt;/h3&gt; 
&lt;p&gt;Some of the &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/#plugins&quot;&gt;plugins&lt;/a&gt; make use of a treatment profile that can be edited using the Profile Editor, see the link in the Settings drawer on your site.&lt;/p&gt; 
&lt;p&gt;Treatment Profile Fields:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;timezone&lt;/code&gt; (Time Zone) - time zone local to the patient. &lt;em&gt;Should be set.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;units&lt;/code&gt; (Profile Units) - blood glucose units used in the profile, either &quot;mg/dl&quot; or &quot;mmol&quot;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dia&lt;/code&gt; (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;carbs_hr&lt;/code&gt; (Carbs per Hour) - The number of carbs that are processed per hour, for more information see &lt;a href=&quot;http://diyps.org/2014/05/29/determining-your-carbohydrate-absorption-rate-diyps-lessons-learned/&quot;&gt;#DIYPS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;carbratio&lt;/code&gt; (Carb Ratio) - grams per unit of insulin.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sens&lt;/code&gt; (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;basal&lt;/code&gt; The basal rate set on the pump.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;target_high&lt;/code&gt; - Upper target for correction boluses.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;target_low&lt;/code&gt; - Lower target for correction boluses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some example profiles are &lt;a href=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/docs/plugins/example-profiles.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Setting environment variables&lt;/h2&gt; 
&lt;p&gt;Easy to emulate on the commandline:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;    echo &#39;MONGO_CONNECTION=mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout&#39; &amp;gt;&amp;gt; my.env
    echo &#39;MONGO_COLLECTION=entries&#39; &amp;gt;&amp;gt; my.env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From now on you can run using&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;    $ (eval $(cat my.env | sed &#39;s/^/export /&#39;) &amp;amp;&amp;amp; PORT=1337 node server.js)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Your hosting provider probably has a way to set these through their GUI.&lt;/p&gt; 
&lt;h3&gt;Vagrant install&lt;/h3&gt; 
&lt;p&gt;Optionally, use &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; with the included &lt;code&gt;Vagrantfile&lt;/code&gt; and &lt;code&gt;bin/setup.sh&lt;/code&gt; to install OS and node packages to a virtual machine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;host$ vagrant up
host$ vagrant ssh
vm$ ./bin/setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The setup script will install OS packages then run &lt;code&gt;npm install&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The Vagrant VM serves to your host machine only on 192.168.33.10, you can access the web interface on &lt;a href=&quot;http://192.168.33.10:1337&quot;&gt;http://192.168.33.10:1337&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;More questions?&lt;/h2&gt; 
&lt;p&gt;Feel free to &lt;a href=&quot;https://github.com/nightscout/cgm-remote-monitor/issues&quot;&gt;post an issue&lt;/a&gt;, but read the &lt;a href=&quot;https://github.com/nightscout/cgm-remote-monitor/wiki&quot;&gt;wiki&lt;/a&gt; first.&lt;/p&gt; 
&lt;h3&gt;Browser testing suite provided by&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/static/images/browserstack-logo.png&quot; alt=&quot;BrowserStack&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;cgm-remote-monitor - web app to broadcast cgm readings
Copyright (C) 2017 Nightscout contributors.  See the COPYRIGHT file
at the root directory of this distribution and at
https://github.com/nightscout/cgm-remote-monitor/blob/master/COPYRIGHT

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>SheetJS/sheetjs</title>
      <link>https://github.com/SheetJS/sheetjs</link>
      <description>&lt;p&gt;üìó SheetJS Community Edition -- Spreadsheet Data Toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://sheetjs.com&quot;&gt;SheetJS&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Parser and writer for various spreadsheet formats. Pure-JS cleanroom implementation from official specifications, related documents, and test files. Emphasis on parsing and writing robustness, cross-format feature compatibility with a unified JS representation, and ES3/ES5 browser compatibility back to IE6.&lt;/p&gt; 
&lt;p&gt;This is the community version. We also offer a pro version with performance enhancements, additional features like styling, and dedicated support.&lt;/p&gt; 
&lt;p&gt;Community Translations of this README:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rockboom/SheetJS-docs-zh-CN&quot;&gt;Simplified Chinese&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://sheetjs.com/pro&quot;&gt;&lt;strong&gt;Pro Version&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://sheetjs.com/support&quot;&gt;&lt;strong&gt;Commercial Support&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.sheetjs.com/&quot;&gt;&lt;strong&gt;Rendered Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://sheetjs.com/demos&quot;&gt;&lt;strong&gt;In-Browser Demos&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://git.io/xlsx&quot;&gt;&lt;strong&gt;Source Code&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sheetjs/sheetjs/issues&quot;&gt;&lt;strong&gt;Issues and Bug Reports&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/license/SheetJS/sheetjs&quot; alt=&quot;License&quot;&gt; &lt;a href=&quot;https://github.com/SheetJS/sheetjs/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/sheetjs/sheetjs/Tests:%20node.js&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/github/SheetJS/sheetjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/snyk/vulnerabilities/github/SheetJS/sheetjs&quot; alt=&quot;Snyk Vulnerabilities&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/xlsx&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/xlsx.svg?sanitize=true&quot; alt=&quot;npm Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/npm/xlsx&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/xlsx/badge&quot; alt=&quot;jsDelivr Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SheetJS/sheetjs&quot;&gt;&lt;img src=&quot;https://ga-beacon.appspot.com/UA-36810333-1/SheetJS/sheetjs?pixel&quot; alt=&quot;Analytics&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://oss.sheetjs.com/sheetjs/tests/&quot;&gt;&lt;strong&gt;Browser Test and Support Matrix&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://saucelabs.com/u/sheetjs&quot;&gt;&lt;img src=&quot;https://saucelabs.com/browser-matrix/sheetjs.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Supported File Formats&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/formats.png&quot; alt=&quot;circo graph of format support&quot;&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Diagram Legend&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/legend.png&quot; alt=&quot;graph legend&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Expand to show Table of Contents&lt;/b&gt;&lt;/summary&gt; 
 &lt;!-- toc --&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#installation&quot;&gt;Installation&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#js-ecosystem-demos&quot;&gt;JS Ecosystem Demos&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#optional-modules&quot;&gt;Optional Modules&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#philosophy&quot;&gt;Philosophy&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#parsing-workbooks&quot;&gt;Parsing Workbooks&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#parsing-examples&quot;&gt;Parsing Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#streaming-read&quot;&gt;Streaming Read&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#working-with-the-workbook&quot;&gt;Working with the Workbook&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#parsing-and-writing-examples&quot;&gt;Parsing and Writing Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#writing-workbooks&quot;&gt;Writing Workbooks&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#writing-examples&quot;&gt;Writing Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#streaming-write&quot;&gt;Streaming Write&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#interface&quot;&gt;Interface&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#parsing-functions&quot;&gt;Parsing functions&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#writing-functions&quot;&gt;Writing functions&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#utilities&quot;&gt;Utilities&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#common-spreadsheet-format&quot;&gt;Common Spreadsheet Format&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#general-structures&quot;&gt;General Structures&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#cell-object&quot;&gt;Cell Object&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#data-types&quot;&gt;Data Types&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#dates&quot;&gt;Dates&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#sheet-objects&quot;&gt;Sheet Objects&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#worksheet-object&quot;&gt;Worksheet Object&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#chartsheet-object&quot;&gt;Chartsheet Object&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#macrosheet-object&quot;&gt;Macrosheet Object&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#dialogsheet-object&quot;&gt;Dialogsheet Object&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#workbook-object&quot;&gt;Workbook Object&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#workbook-file-properties&quot;&gt;Workbook File Properties&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#workbook-level-attributes&quot;&gt;Workbook-Level Attributes&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#defined-names&quot;&gt;Defined Names&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#workbook-views&quot;&gt;Workbook Views&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#miscellaneous-workbook-properties&quot;&gt;Miscellaneous Workbook Properties&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#document-features&quot;&gt;Document Features&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#formulae&quot;&gt;Formulae&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#column-properties&quot;&gt;Column Properties&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#row-properties&quot;&gt;Row Properties&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#number-formats&quot;&gt;Number Formats&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#hyperlinks&quot;&gt;Hyperlinks&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#cell-comments&quot;&gt;Cell Comments&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#sheet-visibility&quot;&gt;Sheet Visibility&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#vba-and-macros&quot;&gt;VBA and Macros&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#parsing-options&quot;&gt;Parsing Options&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#input-type&quot;&gt;Input Type&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#guessing-file-type&quot;&gt;Guessing File Type&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#writing-options&quot;&gt;Writing Options&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#supported-output-formats&quot;&gt;Supported Output Formats&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#output-type&quot;&gt;Output Type&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#utility-functions&quot;&gt;Utility Functions&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#array-of-arrays-input&quot;&gt;Array of Arrays Input&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#array-of-objects-input&quot;&gt;Array of Objects Input&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#html-table-input&quot;&gt;HTML Table Input&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#formulae-output&quot;&gt;Formulae Output&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#delimiter-separated-output&quot;&gt;Delimiter-Separated Output&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#utf-16-unicode-text&quot;&gt;UTF-16 Unicode Text&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#html-output&quot;&gt;HTML Output&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#json&quot;&gt;JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#file-formats&quot;&gt;File Formats&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#excel-2007-xml-xlsxxlsm&quot;&gt;Excel 2007+ XML (XLSX/XLSM)&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#excel-20-95-biff2biff3biff4biff5&quot;&gt;Excel 2.0-95 (BIFF2/BIFF3/BIFF4/BIFF5)&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#excel-97-2004-binary-biff8&quot;&gt;Excel 97-2004 Binary (BIFF8)&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#excel-2003-2004-spreadsheetml&quot;&gt;Excel 2003-2004 (SpreadsheetML)&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#excel-2007-binary-xlsb-biff12&quot;&gt;Excel 2007+ Binary (XLSB, BIFF12)&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#delimiter-separated-values-csvtxt&quot;&gt;Delimiter-Separated Values (CSV/TXT)&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#other-workbook-formats&quot;&gt;Other Workbook Formats&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#lotus-1-2-3-wkswk1wk2wk3wk4123&quot;&gt;Lotus 1-2-3 (WKS/WK1/WK2/WK3/WK4/123)&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#quattro-pro-wq1wq2wb1wb2wb3qpw&quot;&gt;Quattro Pro (WQ1/WQ2/WB1/WB2/WB3/QPW)&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#opendocument-spreadsheet-odsfods&quot;&gt;OpenDocument Spreadsheet (ODS/FODS)&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#uniform-office-spreadsheet-uos12&quot;&gt;Uniform Office Spreadsheet (UOS1/2)&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#other-single-worksheet-formats&quot;&gt;Other Single-Worksheet Formats&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#dbase-and-visual-foxpro-dbf&quot;&gt;dBASE and Visual FoxPro (DBF)&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#symbolic-link-sylk&quot;&gt;Symbolic Link (SYLK)&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#lotus-formatted-text-prn&quot;&gt;Lotus Formatted Text (PRN)&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#data-interchange-format-dif&quot;&gt;Data Interchange Format (DIF)&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#html&quot;&gt;HTML&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#rich-text-format-rtf&quot;&gt;Rich Text Format (RTF)&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#ethercalc-record-format-eth&quot;&gt;Ethercalc Record Format (ETH)&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#testing&quot;&gt;Testing&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#node&quot;&gt;Node&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#browser&quot;&gt;Browser&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#tested-environments&quot;&gt;Tested Environments&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#test-files&quot;&gt;Test Files&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#contributing&quot;&gt;Contributing&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#osxlinux&quot;&gt;OSX/Linux&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#windows&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#tests&quot;&gt;Tests&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;!-- tocstop --&gt; 
&lt;/details&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;In the browser, just add a script tag:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script lang=&quot;javascript&quot; src=&quot;dist/xlsx.full.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;CDN Availability&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;right&quot;&gt;CDN&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;URL&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;unpkg&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://unpkg.com/xlsx/&quot;&gt;https://unpkg.com/xlsx/&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;jsDelivr&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://jsdelivr.com/package/npm/xlsx&quot;&gt;https://jsdelivr.com/package/npm/xlsx&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;CDNjs&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://cdnjs.com/libraries/xlsx&quot;&gt;https://cdnjs.com/libraries/xlsx&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;packd&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://bundle.run/xlsx@latest?name=XLSX&quot;&gt;https://bundle.run/xlsx@latest?name=XLSX&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;code&gt;unpkg&lt;/code&gt; makes the latest version available at:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://unpkg.com/xlsx/dist/xlsx.full.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;With &lt;a href=&quot;https://www.npmjs.org/package/xlsx&quot;&gt;npm&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install xlsx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With &lt;a href=&quot;https://bower.io/search/?q=js-xlsx&quot;&gt;bower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bower install js-xlsx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JS Ecosystem Demos&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/&quot;&gt;&lt;code&gt;demos&lt;/code&gt; directory&lt;/a&gt; includes sample projects for:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Frameworks and APIs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/angular/&quot;&gt;&lt;code&gt;angularjs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/angular2/&quot;&gt;&lt;code&gt;angular and ionic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/knockout/&quot;&gt;&lt;code&gt;knockout&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/meteor/&quot;&gt;&lt;code&gt;meteor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/react/&quot;&gt;&lt;code&gt;react and react-native&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/vue/&quot;&gt;&lt;code&gt;vue 2.x and weex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/xhr/&quot;&gt;&lt;code&gt;XMLHttpRequest and fetch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/server/&quot;&gt;&lt;code&gt;nodejs server&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/database/&quot;&gt;&lt;code&gt;databases and key/value stores&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/array/&quot;&gt;&lt;code&gt;typed arrays and math&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bundlers and Tooling&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/browserify/&quot;&gt;&lt;code&gt;browserify&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/fusebox/&quot;&gt;&lt;code&gt;fusebox&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/parcel/&quot;&gt;&lt;code&gt;parcel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/requirejs/&quot;&gt;&lt;code&gt;requirejs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/rollup/&quot;&gt;&lt;code&gt;rollup&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/systemjs/&quot;&gt;&lt;code&gt;systemjs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/typescript/&quot;&gt;&lt;code&gt;typescript&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/webpack/&quot;&gt;&lt;code&gt;webpack 2.x&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Platforms and Integrations&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/electron/&quot;&gt;&lt;code&gt;electron application&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/nwjs/&quot;&gt;&lt;code&gt;nw.js application&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/chrome/&quot;&gt;&lt;code&gt;Chrome / Chromium extensions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/extendscript/&quot;&gt;&lt;code&gt;Adobe ExtendScript&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/headless/&quot;&gt;&lt;code&gt;Headless Browsers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/datagrid/&quot;&gt;&lt;code&gt;canvas-datagrid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/xspreadsheet/&quot;&gt;&lt;code&gt;x-spreadsheet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/altjs/&quot;&gt;&lt;code&gt;Swift JSC and other engines&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/function/&quot;&gt;&lt;code&gt;&quot;serverless&quot; functions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/oldie/&quot;&gt;&lt;code&gt;internet explorer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other examples are included in the &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/showcase/&quot;&gt;showcase&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Optional Modules&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Optional features&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The node version automatically requires modules for additional features. Some of these modules are rather large in size and are only needed in special circumstances, so they do not ship with the core. For browser use, they must be included directly:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- international support from js-codepage --&amp;gt;
&amp;lt;script src=&quot;dist/cpexcel.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;An appropriate version for each dependency is included in the dist/ directory.&lt;/p&gt; 
 &lt;p&gt;The complete single-file version is generated at &lt;code&gt;dist/xlsx.full.min.js&lt;/code&gt;&lt;/p&gt; 
 &lt;p&gt;A slimmer build is generated at &lt;code&gt;dist/xlsx.mini.min.js&lt;/code&gt;. Compared to full build:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;codepage library skipped (no support for XLS encodings)&lt;/li&gt; 
  &lt;li&gt;XLSX compression option not currently available&lt;/li&gt; 
  &lt;li&gt;no support for XLSB / XLS / Lotus 1-2-3 / SpreadsheetML 2003&lt;/li&gt; 
  &lt;li&gt;node stream utils removed&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Webpack and Browserify builds include optional modules by default. Webpack can be configured to remove support with &lt;code&gt;resolve.alias&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  /* uncomment the lines below to remove support */
  resolve: {
    alias: { &quot;./dist/cpexcel.js&quot;: &quot;&quot; } // &amp;lt;-- omit international support
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;ECMAScript 5 Compatibility&lt;/h3&gt; 
&lt;p&gt;Since the library uses functions like &lt;code&gt;Array#forEach&lt;/code&gt;, older browsers require &lt;a href=&quot;https://oss.sheetjs.com/sheetjs/shim.js&quot;&gt;shims to provide missing functions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use the shim, add the shim before the script tag that loads &lt;code&gt;xlsx.js&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- add the shim first --&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;shim.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- after the shim is referenced, add the library --&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;xlsx.full.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script also includes &lt;code&gt;IE_LoadFile&lt;/code&gt; and &lt;code&gt;IE_SaveFile&lt;/code&gt; for loading and saving files in Internet Explorer versions 6-9. The &lt;code&gt;xlsx.extendscript.js&lt;/code&gt; script bundles the shim in a format suitable for Photoshop and other Adobe products.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Philosophy&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Prior to SheetJS, APIs for processing spreadsheet files were format-specific. Third-party libraries either supported one format, or they involved a separate set of classes for each supported file type. Even though XLSB was introduced in Excel 2007, nothing outside of SheetJS or Excel supported the format.&lt;/p&gt; 
 &lt;p&gt;To promote a format-agnostic view, SheetJS starts from a pure-JS representation that we call the &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#common-spreadsheet-format&quot;&gt;&quot;Common Spreadsheet Format&quot;&lt;/a&gt;. Emphasizing a uniform object representation enables new features like format conversion (reading an XLSX template and saving as XLS) and circumvents the mess of classes. By abstracting the complexities of the various formats, tools need not worry about the specific file type!&lt;/p&gt; 
 &lt;p&gt;A simple object representation combined with careful coding practices enables use cases in older browsers and in alternative environments like ExtendScript and Web Workers. It is always tempting to use the latest and greatest features, but they tend to require the latest versions of browsers, limiting usability.&lt;/p&gt; 
 &lt;p&gt;Utility functions capture common use cases like generating JS objects or HTML. Most simple operations should only require a few lines of code. More complex operations generally should be straightforward to implement.&lt;/p&gt; 
 &lt;p&gt;Excel pushes the XLSX format as default starting in Excel 2007. However, there are other formats with more appealing properties. For example, the XLSB format is spiritually similar to XLSX but files often tend up taking less than half the space and open much faster! Even though an XLSX writer is available, other format writers are available so users can take advantage of the unique characteristics of each format.&lt;/p&gt; 
 &lt;p&gt;The primary focus of the Community Edition is correct data interchange, focused on extracting data from any compatible data representation and exporting data in various formats suitable for any third party interface.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Parsing Workbooks&lt;/h2&gt; 
&lt;p&gt;For parsing, the first step is to read the file. This involves acquiring the data and feeding it into the library. Here are a few common scenarios:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;nodejs read a file&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;readFile&lt;/code&gt; is only available in server environments. Browsers have no API for reading arbitrary files given a path, so another strategy must be used.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if(typeof require !== &#39;undefined&#39;) XLSX = require(&#39;xlsx&#39;);
var workbook = XLSX.readFile(&#39;test.xlsx&#39;);
/* DO SOMETHING WITH workbook HERE */
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Photoshop ExtendScript read a file&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;readFile&lt;/code&gt; wraps the &lt;code&gt;File&lt;/code&gt; logic in Photoshop and other ExtendScript targets. The specified path should be an absolute path:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;#include &quot;xlsx.extendscript.js&quot;
/* Read test.xlsx from the Documents folder */
var workbook = XLSX.readFile(Folder.myDocuments + &#39;/&#39; + &#39;test.xlsx&#39;);
/* DO SOMETHING WITH workbook HERE */
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/extendscript/&quot;&gt;&lt;code&gt;extendscript&lt;/code&gt; demo&lt;/a&gt; includes a more complex example.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Browser read TABLE element from page&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The &lt;code&gt;table_to_book&lt;/code&gt; and &lt;code&gt;table_to_sheet&lt;/code&gt; utility functions take a DOM TABLE element and iterate through the child nodes.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var workbook = XLSX.utils.table_to_book(document.getElementById(&#39;tableau&#39;));
/* DO SOMETHING WITH workbook HERE */
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Multiple tables on a web page can be converted to individual worksheets:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* create new workbook */
var workbook = XLSX.utils.book_new();

/* convert table &#39;table1&#39; to worksheet named &quot;Sheet1&quot; */
var ws1 = XLSX.utils.table_to_sheet(document.getElementById(&#39;table1&#39;));
XLSX.utils.book_append_sheet(workbook, ws1, &quot;Sheet1&quot;);

/* convert table &#39;table2&#39; to worksheet named &quot;Sheet2&quot; */
var ws2 = XLSX.utils.table_to_sheet(document.getElementById(&#39;table2&#39;));
XLSX.utils.book_append_sheet(workbook, ws2, &quot;Sheet2&quot;);

/* workbook now has 2 worksheets */
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Alternatively, the HTML code can be extracted and parsed:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var htmlstr = document.getElementById(&#39;tableau&#39;).outerHTML;
var workbook = XLSX.read(htmlstr, {type:&#39;string&#39;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Browser download file (ajax)&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Note: for a more complete example that works in older browsers, check the demo at &lt;a href=&quot;http://oss.sheetjs.com/sheetjs/ajax.html&quot;&gt;http://oss.sheetjs.com/sheetjs/ajax.html&lt;/a&gt;. The &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/xhr/&quot;&gt;&lt;code&gt;xhr&lt;/code&gt; demo&lt;/a&gt; includes more examples with &lt;code&gt;XMLHttpRequest&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt;.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var url = &quot;http://oss.sheetjs.com/test_files/formula_stress_test.xlsx&quot;;

/* set up async GET request */
var req = new XMLHttpRequest();
req.open(&quot;GET&quot;, url, true);
req.responseType = &quot;arraybuffer&quot;;

req.onload = function(e) {
  var workbook = XLSX.read(req.response);

  /* DO SOMETHING WITH workbook HERE */
}

req.send();
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Browser drag-and-drop&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;For modern browsers, &lt;code&gt;Blob#arrayBuffer&lt;/code&gt; can read data from files:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;async function handleDropAsync(e) {
  e.stopPropagation(); e.preventDefault();
  const f = evt.dataTransfer.files[0];
  const data = await f.arrayBuffer();
  const workbook = XLSX.read(data);

  /* DO SOMETHING WITH workbook HERE */
}
drop_dom_element.addEventListener(&#39;drop&#39;, handleDropAsync, false);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For maximal compatibility, the &lt;code&gt;FileReader&lt;/code&gt; API should be used:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function handleDrop(e) {
  e.stopPropagation(); e.preventDefault();
  var f = e.dataTransfer.files[0];
  var reader = new FileReader();
  reader.onload = function(e) {
    var workbook = XLSX.read(e.target.result);

    /* DO SOMETHING WITH workbook HERE */
  };
  reader.readAsArrayBuffer(f);
}
drop_dom_element.addEventListener(&#39;drop&#39;, handleDrop, false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Browser file upload form element&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Data from file input elements can be processed using the same APIs as in the drag-and-drop example.&lt;/p&gt; 
 &lt;p&gt;Using &lt;code&gt;Blob#arrayBuffer&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;async function handleFileAsync(e) {
  const file = evt.target.files[0];
  const data = await file.arrayBuffer();
  const workbook = XLSX.read(data);

  /* DO SOMETHING WITH workbook HERE */
}
input_dom_element.addEventListener(&#39;change&#39;, handleFileAsync, false);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Using &lt;code&gt;FileReader&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function handleFile(e) {
  var files = e.target.files, f = files[0];
  var reader = new FileReader();
  reader.onload = function(e) {
    var workbook = XLSX.read(e.target.result);

    /* DO SOMETHING WITH workbook HERE */
  };
  reader.readAsArrayBuffer(f);
}
input_dom_element.addEventListener(&#39;change&#39;, handleFile, false);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/oldie/&quot;&gt;&lt;code&gt;oldie&lt;/code&gt; demo&lt;/a&gt; shows an IE-compatible fallback scenario.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;More specialized cases, including mobile app file processing, are covered in the &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/&quot;&gt;included demos&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Parsing Examples&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oss.sheetjs.com/sheetjs/&quot;&gt;https://oss.sheetjs.com/sheetjs/&lt;/a&gt; HTML5 File API / Base64 Text / Web Workers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that older versions of IE do not support HTML5 File API, so the Base64 mode is used for testing.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Get Base64 encoding on OSX / Windows&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;On OSX you can get the Base64 encoding with:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &amp;lt;target_file base64 | pbcopy
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;On Windows XP and up you can get the Base64 encoding using &lt;code&gt;certutil&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;&amp;gt; certutil -encode target_file target_file.b64
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;(note: You have to open the file and remove the header and footer lines)&lt;/p&gt; 
&lt;/details&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://oss.sheetjs.com/sheetjs/ajax.html&quot;&gt;http://oss.sheetjs.com/sheetjs/ajax.html&lt;/a&gt; XMLHttpRequest&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Streaming Read&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why is there no Streaming Read API?&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The most common and interesting formats (XLS, XLSX/M, XLSB, ODS) are ultimately ZIP or CFB containers of files. Neither format puts the directory structure at the beginning of the file: ZIP files place the Central Directory records at the end of the logical file, while CFB files can place the storage info anywhere in the file! As a result, to properly handle these formats, a streaming function would have to buffer the entire file before commencing. That belies the expectations of streaming, so we do not provide any streaming read API.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;When dealing with Readable Streams, the easiest approach is to buffer the stream and process the whole thing at the end. This can be done with a temporary file or by explicitly concatenating the stream:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Explicitly concatenating streams&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var fs = require(&#39;fs&#39;);
var XLSX = require(&#39;xlsx&#39;);
function process_RS(stream/*:ReadStream*/, cb/*:(wb:Workbook)=&amp;gt;void*/)/*:void*/{
  var buffers = [];
  stream.on(&#39;data&#39;, function(data) { buffers.push(data); });
  stream.on(&#39;end&#39;, function() {
    var buffer = Buffer.concat(buffers);
    var workbook = XLSX.read(buffer, {type:&quot;buffer&quot;});

    /* DO SOMETHING WITH workbook IN THE CALLBACK */
    cb(workbook);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;More robust solutions are available using modules like &lt;code&gt;concat-stream&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Writing to filesystem first&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;This example uses &lt;a href=&quot;https://npm.im/tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; to generate file names:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var fs = require(&#39;fs&#39;), tempfile = require(&#39;tempfile&#39;);
var XLSX = require(&#39;xlsx&#39;);
function process_RS(stream/*:ReadStream*/, cb/*:(wb:Workbook)=&amp;gt;void*/)/*:void*/{
  var fname = tempfile(&#39;.sheetjs&#39;);
  console.log(fname);
  var ostream = fs.createWriteStream(fname);
  stream.pipe(ostream);
  ostream.on(&#39;finish&#39;, function() {
    var workbook = XLSX.readFile(fname);
    fs.unlinkSync(fname);

    /* DO SOMETHING WITH workbook IN THE CALLBACK */
    cb(workbook);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Working with the Workbook&lt;/h2&gt; 
&lt;p&gt;The full object format is described later in this README.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Reading a specific cell &lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;This example extracts the value stored in cell A1 from the first worksheet:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var first_sheet_name = workbook.SheetNames[0];
var address_of_cell = &#39;A1&#39;;

/* Get worksheet */
var worksheet = workbook.Sheets[first_sheet_name];

/* Find desired cell */
var desired_cell = worksheet[address_of_cell];

/* Get the value */
var desired_value = (desired_cell ? desired_cell.v : undefined);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Adding a new worksheet to a workbook&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;This example uses &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#array-of-arrays-input&quot;&gt;&lt;code&gt;XLSX.utils.aoa_to_sheet&lt;/code&gt;&lt;/a&gt; to make a sheet and &lt;code&gt;XLSX.utils.book_append_sheet&lt;/code&gt; to append the sheet to the workbook:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var ws_name = &quot;SheetJS&quot;;

/* make worksheet */
var ws_data = [
  [ &quot;S&quot;, &quot;h&quot;, &quot;e&quot;, &quot;e&quot;, &quot;t&quot;, &quot;J&quot;, &quot;S&quot; ],
  [  1 ,  2 ,  3 ,  4 ,  5 ]
];
var ws = XLSX.utils.aoa_to_sheet(ws_data);

/* Add the worksheet to the workbook */
XLSX.utils.book_append_sheet(wb, ws, ws_name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Creating a new workbook from scratch&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The workbook object contains a &lt;code&gt;SheetNames&lt;/code&gt; array of names and a &lt;code&gt;Sheets&lt;/code&gt; object mapping sheet names to sheet objects. The &lt;code&gt;XLSX.utils.book_new&lt;/code&gt; utility function creates a new workbook object:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* create a new blank workbook */
var wb = XLSX.utils.book_new();
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The new workbook is blank and contains no worksheets. The write functions will error if the workbook is empty.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Parsing and Writing Examples&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://sheetjs.com/demos/modify.html&quot;&gt;https://sheetjs.com/demos/modify.html&lt;/a&gt; read + modify + write files&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/SheetJS/sheetjs/raw/HEAD/bin/xlsx.njs&quot;&gt;https://github.com/SheetJS/sheetjs/blob/HEAD/bin/xlsx.njs&lt;/a&gt; node&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The node version installs a command line tool &lt;code&gt;xlsx&lt;/code&gt; which can read spreadsheet files and output the contents in various formats. The source is available at &lt;code&gt;xlsx.njs&lt;/code&gt; in the bin directory.&lt;/p&gt; 
&lt;p&gt;Some helper functions in &lt;code&gt;XLSX.utils&lt;/code&gt; generate different views of the sheets:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;XLSX.utils.sheet_to_csv&lt;/code&gt; generates CSV&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XLSX.utils.sheet_to_txt&lt;/code&gt; generates UTF16 Formatted Text&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XLSX.utils.sheet_to_html&lt;/code&gt; generates HTML&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XLSX.utils.sheet_to_json&lt;/code&gt; generates an array of objects&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XLSX.utils.sheet_to_formulae&lt;/code&gt; generates a list of formulae&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Writing Workbooks&lt;/h2&gt; 
&lt;p&gt;For writing, the first step is to generate output data. The helper functions &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;writeFile&lt;/code&gt; will produce the data in various formats suitable for dissemination. The second step is to actual share the data with the end point. Assuming &lt;code&gt;workbook&lt;/code&gt; is a workbook object:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;nodejs write a file&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;XLSX.writeFile&lt;/code&gt; uses &lt;code&gt;fs.writeFileSync&lt;/code&gt; in server environments:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if(typeof require !== &#39;undefined&#39;) XLSX = require(&#39;xlsx&#39;);
/* output format determined by filename */
XLSX.writeFile(workbook, &#39;out.xlsb&#39;);
/* at this point, out.xlsb is a file that you can distribute */
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Photoshop ExtendScript write a file&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;writeFile&lt;/code&gt; wraps the &lt;code&gt;File&lt;/code&gt; logic in Photoshop and other ExtendScript targets. The specified path should be an absolute path:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;#include &quot;xlsx.extendscript.js&quot;
/* output format determined by filename */
XLSX.writeFile(workbook, &#39;out.xlsx&#39;);
/* at this point, out.xlsx is a file that you can distribute */
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/extendscript/&quot;&gt;&lt;code&gt;extendscript&lt;/code&gt; demo&lt;/a&gt; includes a more complex example.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Browser add TABLE element to page&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The &lt;code&gt;sheet_to_html&lt;/code&gt; utility function generates HTML code that can be added to any DOM element.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var worksheet = workbook.Sheets[workbook.SheetNames[0]];
var container = document.getElementById(&#39;tableau&#39;);
container.innerHTML = XLSX.utils.sheet_to_html(worksheet);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Browser upload file (ajax)&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;A complete example using XHR is &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/xhr/&quot;&gt;included in the XHR demo&lt;/a&gt;, along with examples for fetch and wrapper libraries. This example assumes the server can handle Base64-encoded files (see the demo for a basic nodejs server):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* in this example, send a base64 string to the server */
var wopts = { bookType:&#39;xlsx&#39;, bookSST:false, type:&#39;base64&#39; };

var wbout = XLSX.write(workbook,wopts);

var req = new XMLHttpRequest();
req.open(&quot;POST&quot;, &quot;/upload&quot;, true);
var formdata = new FormData();
formdata.append(&#39;file&#39;, &#39;test.xlsx&#39;); // &amp;lt;-- server expects `file` to hold name
formdata.append(&#39;data&#39;, wbout); // &amp;lt;-- `data` holds the base64-encoded data
req.send(formdata);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Browser save file&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;XLSX.writeFile&lt;/code&gt; wraps a few techniques for triggering a file save:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;URL&lt;/code&gt; browser API creates an object URL for the file, which the library uses by creating a link and forcing a click. It is supported in modern browsers.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;msSaveBlob&lt;/code&gt; is an IE10+ API for triggering a file save.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;IE_FileSave&lt;/code&gt; uses VBScript and ActiveX to write a file in IE6+ for Windows XP and Windows 7. The shim must be included in the containing HTML page.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;There is no standard way to determine if the actual file has been downloaded.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* output format determined by filename */
XLSX.writeFile(workbook, &#39;out.xlsb&#39;);
/* at this point, out.xlsb will have been downloaded */
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Browser save file (compatibility)&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;XLSX.writeFile&lt;/code&gt; techniques work for most modern browsers as well as older IE. For much older browsers, there are workarounds implemented by wrapper libraries.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/eligrey/FileSaver.js/&quot;&gt;&lt;code&gt;FileSaver.js&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;saveAs&lt;/code&gt;. Note: &lt;code&gt;XLSX.writeFile&lt;/code&gt; will automatically call &lt;code&gt;saveAs&lt;/code&gt; if available.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* bookType can be any supported output type */
var wopts = { bookType:&#39;xlsx&#39;, bookSST:false, type:&#39;array&#39; };

var wbout = XLSX.write(workbook,wopts);

/* the saveAs call downloads a file on the local machine */
saveAs(new Blob([wbout],{type:&quot;application/octet-stream&quot;}), &quot;test.xlsx&quot;);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/dcneiner/downloadify&quot;&gt;&lt;code&gt;Downloadify&lt;/code&gt;&lt;/a&gt; uses a Flash SWF button to generate local files, suitable for environments where ActiveX is unavailable:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;Downloadify.create(id,{
	/* other options are required! read the downloadify docs for more info */
	filename: &quot;test.xlsx&quot;,
	data: function() { return XLSX.write(wb, {bookType:&quot;xlsx&quot;, type:&#39;base64&#39;}); },
	append: false,
	dataType: &#39;base64&#39;
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/oldie/&quot;&gt;&lt;code&gt;oldie&lt;/code&gt; demo&lt;/a&gt; shows an IE-compatible fallback scenario.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/demos/&quot;&gt;included demos&lt;/a&gt; cover mobile apps and other special deployments.&lt;/p&gt; 
&lt;h3&gt;Writing Examples&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sheetjs.com/demos/table.html&quot;&gt;http://sheetjs.com/demos/table.html&lt;/a&gt; exporting an HTML table&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sheetjs.com/demos/writexlsx.html&quot;&gt;http://sheetjs.com/demos/writexlsx.html&lt;/a&gt; generates a simple file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Streaming Write&lt;/h3&gt; 
&lt;p&gt;The streaming write functions are available in the &lt;code&gt;XLSX.stream&lt;/code&gt; object. They take the same arguments as the normal write functions but return a Readable Stream. They are only exposed in NodeJS.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;XLSX.stream.to_csv&lt;/code&gt; is the streaming version of &lt;code&gt;XLSX.utils.sheet_to_csv&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XLSX.stream.to_html&lt;/code&gt; is the streaming version of &lt;code&gt;XLSX.utils.sheet_to_html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;XLSX.stream.to_json&lt;/code&gt; is the streaming version of &lt;code&gt;XLSX.utils.sheet_to_json&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;nodejs convert to CSV and write file&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var output_file_name = &quot;out.csv&quot;;
var stream = XLSX.stream.to_csv(worksheet);
stream.pipe(fs.createWriteStream(output_file_name));
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;nodejs write JSON stream to screen&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* to_json returns an object-mode stream */
var stream = XLSX.stream.to_json(worksheet, {raw:true});

/* the following stream converts JS objects to text via JSON.stringify */
var conv = new Transform({writableObjectMode:true});
conv._transform = function(obj, e, cb){ cb(null, JSON.stringify(obj) + &quot;\n&quot;); };

stream.pipe(conv); conv.pipe(process.stdout);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sheetjs/sheetaki&quot;&gt;https://github.com/sheetjs/sheetaki&lt;/a&gt; pipes write streams to nodejs response.&lt;/p&gt; 
&lt;h2&gt;Interface&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;XLSX&lt;/code&gt; is the exposed variable in the browser and the exported node variable&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.version&lt;/code&gt; is the version of the library (added by the build script).&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.SSF&lt;/code&gt; is an embedded version of the &lt;a href=&quot;https://git.io/ssf&quot;&gt;format library&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Parsing functions&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;XLSX.read(data, read_opts)&lt;/code&gt; attempts to parse &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.readFile(filename, read_opts)&lt;/code&gt; attempts to read &lt;code&gt;filename&lt;/code&gt; and parse.&lt;/p&gt; 
&lt;p&gt;Parse options are described in the &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#parsing-options&quot;&gt;Parsing Options&lt;/a&gt; section.&lt;/p&gt; 
&lt;h3&gt;Writing functions&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;XLSX.write(wb, write_opts)&lt;/code&gt; attempts to write the workbook &lt;code&gt;wb&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.writeFile(wb, filename, write_opts)&lt;/code&gt; attempts to write &lt;code&gt;wb&lt;/code&gt; to &lt;code&gt;filename&lt;/code&gt;. In browser-based environments, it will attempt to force a client-side download.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.writeFileAsync(wb, filename, o, cb)&lt;/code&gt; attempts to write &lt;code&gt;wb&lt;/code&gt; to &lt;code&gt;filename&lt;/code&gt;. If &lt;code&gt;o&lt;/code&gt; is omitted, the writer will use the third argument as the callback.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.stream&lt;/code&gt; contains a set of streaming write functions.&lt;/p&gt; 
&lt;p&gt;Write options are described in the &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#writing-options&quot;&gt;Writing Options&lt;/a&gt; section.&lt;/p&gt; 
&lt;h3&gt;Utilities&lt;/h3&gt; 
&lt;p&gt;Utilities are available in the &lt;code&gt;XLSX.utils&lt;/code&gt; object and are described in the &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#utility-functions&quot;&gt;Utility Functions&lt;/a&gt; section:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Importing:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;aoa_to_sheet&lt;/code&gt; converts an array of arrays of JS data to a worksheet.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;json_to_sheet&lt;/code&gt; converts an array of JS objects to a worksheet.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;table_to_sheet&lt;/code&gt; converts a DOM TABLE element to a worksheet.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sheet_add_aoa&lt;/code&gt; adds an array of arrays of JS data to an existing worksheet.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sheet_add_json&lt;/code&gt; adds an array of JS objects to an existing worksheet.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Exporting:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;sheet_to_json&lt;/code&gt; converts a worksheet object to an array of JSON objects.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sheet_to_csv&lt;/code&gt; generates delimiter-separated-values output.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sheet_to_txt&lt;/code&gt; generates UTF16 formatted text.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sheet_to_html&lt;/code&gt; generates HTML output.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sheet_to_formulae&lt;/code&gt; generates a list of the formulae (with value fallbacks).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Cell and cell address manipulation:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;format_cell&lt;/code&gt; generates the text value for a cell (using number formats).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;encode_row / decode_row&lt;/code&gt; converts between 0-indexed rows and 1-indexed rows.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;encode_col / decode_col&lt;/code&gt; converts between 0-indexed columns and column names.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;encode_cell / decode_cell&lt;/code&gt; converts cell addresses.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;encode_range / decode_range&lt;/code&gt; converts cell ranges.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Common Spreadsheet Format&lt;/h2&gt; 
&lt;p&gt;SheetJS conforms to the Common Spreadsheet Format (CSF):&lt;/p&gt; 
&lt;h3&gt;General Structures&lt;/h3&gt; 
&lt;p&gt;Cell address objects are stored as &lt;code&gt;{c:C, r:R}&lt;/code&gt; where &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;R&lt;/code&gt; are 0-indexed column and row numbers, respectively. For example, the cell address &lt;code&gt;B5&lt;/code&gt; is represented by the object &lt;code&gt;{c:1, r:4}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Cell range objects are stored as &lt;code&gt;{s:S, e:E}&lt;/code&gt; where &lt;code&gt;S&lt;/code&gt; is the first cell and &lt;code&gt;E&lt;/code&gt; is the last cell in the range. The ranges are inclusive. For example, the range &lt;code&gt;A3:B7&lt;/code&gt; is represented by the object &lt;code&gt;{s:{c:0, r:2}, e:{c:1, r:6}}&lt;/code&gt;. Utility functions perform a row-major order walk traversal of a sheet range:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;for(var R = range.s.r; R &amp;lt;= range.e.r; ++R) {
  for(var C = range.s.c; C &amp;lt;= range.e.c; ++C) {
    var cell_address = {c:C, r:R};
    /* if an A1-style address is needed, encode the address */
    var cell_ref = XLSX.utils.encode_cell(cell_address);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Cell Object&lt;/h3&gt; 
&lt;p&gt;Cell objects are plain JS objects with keys and values following the convention:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;raw value (see Data Types section for more info)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;w&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;formatted text (if applicable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;t&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;type: &lt;code&gt;b&lt;/code&gt; Boolean, &lt;code&gt;e&lt;/code&gt; Error, &lt;code&gt;n&lt;/code&gt; Number, &lt;code&gt;d&lt;/code&gt; Date, &lt;code&gt;s&lt;/code&gt; Text, &lt;code&gt;z&lt;/code&gt; Stub&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;f&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;cell formula encoded as an A1-style string (if applicable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;F&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;range of enclosing array if formula is array formula (if applicable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;r&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;rich text encoding (if applicable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;h&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;HTML rendering of the rich text (if applicable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;c&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;comments associated with the cell&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;z&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;number format string associated with the cell (if requested)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;cell hyperlink object (&lt;code&gt;.Target&lt;/code&gt; holds link, &lt;code&gt;.Tooltip&lt;/code&gt; is tooltip)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;s&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;the style/theme of the cell (if applicable)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Built-in export utilities (such as the CSV exporter) will use the &lt;code&gt;w&lt;/code&gt; text if it is available. To change a value, be sure to delete &lt;code&gt;cell.w&lt;/code&gt; (or set it to &lt;code&gt;undefined&lt;/code&gt;) before attempting to export. The utilities will regenerate the &lt;code&gt;w&lt;/code&gt; text from the number format (&lt;code&gt;cell.z&lt;/code&gt;) and the raw value if possible.&lt;/p&gt; 
&lt;p&gt;The actual array formula is stored in the &lt;code&gt;f&lt;/code&gt; field of the first cell in the array range. Other cells in the range will omit the &lt;code&gt;f&lt;/code&gt; field.&lt;/p&gt; 
&lt;h4&gt;Data Types&lt;/h4&gt; 
&lt;p&gt;The raw value is stored in the &lt;code&gt;v&lt;/code&gt; value property, interpreted based on the &lt;code&gt;t&lt;/code&gt; type property. This separation allows for representation of numbers as well as numeric text. There are 6 valid cell types:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Type&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;b&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Boolean: value interpreted as JS &lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;e&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Error: value is a numeric code and &lt;code&gt;w&lt;/code&gt; property stores common name **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;n&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Number: value is a JS &lt;code&gt;number&lt;/code&gt; **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;d&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Date: value is a JS &lt;code&gt;Date&lt;/code&gt; object or string to be parsed as Date **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;s&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Text: value interpreted as JS &lt;code&gt;string&lt;/code&gt; and written as text **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;z&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Stub: blank stub cell that is ignored by data processing utilities **&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Error values and interpretation&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;right&quot;&gt;Value&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Error Meaning&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#NULL!&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;0x07&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#DIV/0!&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;0x0F&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#VALUE!&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;0x17&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#REF!&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;0x1D&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#NAME?&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;0x24&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#NUM!&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;0x2A&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#N/A&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;&lt;code&gt;0x2B&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#GETTING_DATA&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;Type &lt;code&gt;n&lt;/code&gt; is the Number type. This includes all forms of data that Excel stores as numbers, such as dates/times and Boolean fields. Excel exclusively uses data that can be fit in an IEEE754 floating point number, just like JS Number, so the &lt;code&gt;v&lt;/code&gt; field holds the raw number. The &lt;code&gt;w&lt;/code&gt; field holds formatted text. Dates are stored as numbers by default and converted with &lt;code&gt;XLSX.SSF.parse_date_code&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Type &lt;code&gt;d&lt;/code&gt; is the Date type, generated only when the option &lt;code&gt;cellDates&lt;/code&gt; is passed. Since JSON does not have a natural Date type, parsers are generally expected to store ISO 8601 Date strings like you would get from &lt;code&gt;date.toISOString()&lt;/code&gt;. On the other hand, writers and exporters should be able to handle date strings and JS Date objects. Note that Excel disregards timezone modifiers and treats all dates in the local timezone. The library does not correct for this error.&lt;/p&gt; 
&lt;p&gt;Type &lt;code&gt;s&lt;/code&gt; is the String type. Values are explicitly stored as text. Excel will interpret these cells as &quot;number stored as text&quot;. Generated Excel files automatically suppress that class of error, but other formats may elicit errors.&lt;/p&gt; 
&lt;p&gt;Type &lt;code&gt;z&lt;/code&gt; represents blank stub cells. They are generated in cases where cells have no assigned value but hold comments or other metadata. They are ignored by the core library data processing utility functions. By default these cells are not generated; the parser &lt;code&gt;sheetStubs&lt;/code&gt; option must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Dates&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Excel Date Code details&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;By default, Excel stores dates as numbers with a format code that specifies date processing. For example, the date &lt;code&gt;19-Feb-17&lt;/code&gt; is stored as the number &lt;code&gt;42785&lt;/code&gt; with a number format of &lt;code&gt;d-mmm-yy&lt;/code&gt;. The &lt;code&gt;SSF&lt;/code&gt; module understands number formats and performs the appropriate conversion.&lt;/p&gt; 
 &lt;p&gt;XLSX also supports a special date type &lt;code&gt;d&lt;/code&gt; where the data is an ISO 8601 date string. The formatter converts the date back to a number.&lt;/p&gt; 
 &lt;p&gt;The default behavior for all parsers is to generate number cells. Setting &lt;code&gt;cellDates&lt;/code&gt; to true will force the generators to store dates.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Time Zones and Dates&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Excel has no native concept of universal time. All times are specified in the local time zone. Excel limitations prevent specifying true absolute dates.&lt;/p&gt; 
 &lt;p&gt;Following Excel, this library treats all dates as relative to local time zone.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Epochs: 1900 and 1904&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Excel supports two epochs (January 1 1900 and January 1 1904). The workbook&#39;s epoch can be determined by examining the workbook&#39;s &lt;code&gt;wb.Workbook.WBProps.date1904&lt;/code&gt; property:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;!!(((wb.Workbook||{}).WBProps||{}).date1904)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Sheet Objects&lt;/h3&gt; 
&lt;p&gt;Each key that does not start with &lt;code&gt;!&lt;/code&gt; maps to a cell (using &lt;code&gt;A-1&lt;/code&gt; notation)&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;sheet[address]&lt;/code&gt; returns the cell object for the specified address.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Special sheet keys (accessible as &lt;code&gt;sheet[key]&lt;/code&gt;, each starting with &lt;code&gt;!&lt;/code&gt;):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sheet[&#39;!ref&#39;]&lt;/code&gt;: A-1 based range representing the sheet range. Functions that work with sheets should use this parameter to determine the range. Cells that are assigned outside of the range are not processed. In particular, when writing a sheet by hand, cells outside of the range are not included&lt;/p&gt; &lt;p&gt;Functions that handle sheets should test for the presence of &lt;code&gt;!ref&lt;/code&gt; field. If the &lt;code&gt;!ref&lt;/code&gt; is omitted or is not a valid range, functions are free to treat the sheet as empty or attempt to guess the range. The standard utilities that ship with this library treat sheets as empty (for example, the CSV output is empty string).&lt;/p&gt; &lt;p&gt;When reading a worksheet with the &lt;code&gt;sheetRows&lt;/code&gt; property set, the ref parameter will use the restricted range. The original range is set at &lt;code&gt;ws[&#39;!fullref&#39;]&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sheet[&#39;!margins&#39;]&lt;/code&gt;: Object representing the page margins. The default values follow Excel&#39;s &quot;normal&quot; preset. Excel also has a &quot;wide&quot; and a &quot;narrow&quot; preset but they are stored as raw measurements. The main properties are listed below:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Page margin details&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;key&lt;/th&gt; 
    &lt;th&gt;description&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;&quot;normal&quot;&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;&quot;wide&quot;&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;&quot;narrow&quot;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;left&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;left margin (inches)&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.7&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.25&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;right&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;right margin (inches)&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.7&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.25&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;top&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;top margin (inches)&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.75&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.75&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;bottom margin (inches)&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.75&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.75&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;header&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;header margin (inches)&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.3&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.3&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;footer&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;footer margin (inches)&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.3&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.3&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* Set worksheet sheet to &quot;normal&quot; */
ws[&quot;!margins&quot;]={left:0.7, right:0.7, top:0.75,bottom:0.75,header:0.3,footer:0.3}
/* Set worksheet sheet to &quot;wide&quot; */
ws[&quot;!margins&quot;]={left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5,footer:0.5}
/* Set worksheet sheet to &quot;narrow&quot; */
ws[&quot;!margins&quot;]={left:0.25,right:0.25,top:0.75,bottom:0.75,header:0.3,footer:0.3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h4&gt;Worksheet Object&lt;/h4&gt; 
&lt;p&gt;In addition to the base sheet keys, worksheets also add:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ws[&#39;!cols&#39;]&lt;/code&gt;: array of column properties objects. Column widths are actually stored in files in a normalized manner, measured in terms of the &quot;Maximum Digit Width&quot; (the largest width of the rendered digits 0-9, in pixels). When parsed, the column objects store the pixel width in the &lt;code&gt;wpx&lt;/code&gt; field, character width in the &lt;code&gt;wch&lt;/code&gt; field, and the maximum digit width in the &lt;code&gt;MDW&lt;/code&gt; field.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ws[&#39;!rows&#39;]&lt;/code&gt;: array of row properties objects as explained later in the docs. Each row object encodes properties including row height and visibility.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ws[&#39;!merges&#39;]&lt;/code&gt;: array of range objects corresponding to the merged cells in the worksheet. Plain text formats do not support merge cells. CSV export will write all cells in the merge range if they exist, so be sure that only the first cell (upper-left) in the range is set.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ws[&#39;!outline&#39;]&lt;/code&gt;: configure how outlines should behave. Options default to the default settings in Excel 2019:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;key&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Excel feature&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Uncheck &quot;Summary rows below detail&quot;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;left&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Uncheck &quot;Summary rows to the right of detail&quot;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ws[&#39;!protect&#39;]&lt;/code&gt;: object of write sheet protection properties. The &lt;code&gt;password&lt;/code&gt; key specifies the password for formats that support password-protected sheets (XLSX/XLSB/XLS). The writer uses the XOR obfuscation method. The following keys control the sheet protection -- set to &lt;code&gt;false&lt;/code&gt; to enable a feature when sheet is locked or set to &lt;code&gt;true&lt;/code&gt; to disable a feature:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Worksheet Protection Details&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;left&quot;&gt;key&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;feature (true=disabled / false=enabled)&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;default&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;selectLockedCells&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Select locked cells&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;enabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;selectUnlockedCells&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Select unlocked cells&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;enabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;formatCells&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Format cells&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;formatColumns&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Format columns&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;formatRows&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Format rows&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;insertColumns&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Insert columns&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;insertRows&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Insert rows&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;insertHyperlinks&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Insert hyperlinks&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;deleteColumns&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Delete columns&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;deleteRows&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Delete rows&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Sort&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;autoFilter&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Filter&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;pivotTables&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Use PivotTable reports&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;disabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;objects&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Edit objects&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;enabled&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;scenarios&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Edit scenarios&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;enabled&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ws[&#39;!autofilter&#39;]&lt;/code&gt;: AutoFilter object following the schema:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;type AutoFilter = {
  ref:string; // A-1 based range representing the AutoFilter table range
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Chartsheet Object&lt;/h4&gt; 
&lt;p&gt;Chartsheets are represented as standard sheets. They are distinguished with the &lt;code&gt;!type&lt;/code&gt; property set to &lt;code&gt;&quot;chart&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The underlying data and &lt;code&gt;!ref&lt;/code&gt; refer to the cached data in the chartsheet. The first row of the chartsheet is the underlying header.&lt;/p&gt; 
&lt;h4&gt;Macrosheet Object&lt;/h4&gt; 
&lt;p&gt;Macrosheets are represented as standard sheets. They are distinguished with the &lt;code&gt;!type&lt;/code&gt; property set to &lt;code&gt;&quot;macro&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Dialogsheet Object&lt;/h4&gt; 
&lt;p&gt;Dialogsheets are represented as standard sheets. They are distinguished with the &lt;code&gt;!type&lt;/code&gt; property set to &lt;code&gt;&quot;dialog&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Workbook Object&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;workbook.SheetNames&lt;/code&gt; is an ordered list of the sheets in the workbook&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;wb.Sheets[sheetname]&lt;/code&gt; returns an object representing the worksheet.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;wb.Props&lt;/code&gt; is an object storing the standard properties. &lt;code&gt;wb.Custprops&lt;/code&gt; stores custom properties. Since the XLS standard properties deviate from the XLSX standard, XLS parsing stores core properties in both places.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;wb.Workbook&lt;/code&gt; stores &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#workbook-level-attributes&quot;&gt;workbook-level attributes&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Workbook File Properties&lt;/h4&gt; 
&lt;p&gt;The various file formats use different internal names for file properties. The workbook &lt;code&gt;Props&lt;/code&gt; object normalizes the names:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;File Properties&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;left&quot;&gt;JS Name&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Excel Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Title&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Summary tab &quot;Title&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Summary tab &quot;Subject&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Author&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Summary tab &quot;Author&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Summary tab &quot;Manager&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Company&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Summary tab &quot;Company&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Category&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Summary tab &quot;Category&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Keywords&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Summary tab &quot;Keywords&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Comments&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Summary tab &quot;Comments&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;LastAuthor&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Statistics tab &quot;Last saved by&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;CreatedDate&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Statistics tab &quot;Created&quot;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;For example, to set the workbook title property:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if(!wb.Props) wb.Props = {};
wb.Props.Title = &quot;Insert Title Here&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Custom properties are added in the workbook &lt;code&gt;Custprops&lt;/code&gt; object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if(!wb.Custprops) wb.Custprops = {};
wb.Custprops[&quot;Custom Property&quot;] = &quot;Custom Value&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Writers will process the &lt;code&gt;Props&lt;/code&gt; key of the options object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* force the Author to be &quot;SheetJS&quot; */
XLSX.write(wb, {Props:{Author:&quot;SheetJS&quot;}});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Workbook-Level Attributes&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;wb.Workbook&lt;/code&gt; stores workbook-level attributes.&lt;/p&gt; 
&lt;h4&gt;Defined Names&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;wb.Workbook.Names&lt;/code&gt; is an array of defined name objects which have the keys:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Defined Name Properties&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;left&quot;&gt;Key&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Sheet&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Name scope. Sheet Index (0 = first sheet) or &lt;code&gt;null&lt;/code&gt; (Workbook)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Case-sensitive name. Standard rules apply **&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Ref&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;A1-style Reference (&lt;code&gt;&quot;Sheet1!$A$1:$D$20&quot;&lt;/code&gt;)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Comment&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Comment (only applicable for XLS/XLSX/XLSB)&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;Excel allows two sheet-scoped defined names to share the same name. However, a sheet-scoped name cannot collide with a workbook-scope name. Workbook writers may not enforce this constraint.&lt;/p&gt; 
&lt;h4&gt;Workbook Views&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;wb.Workbook.Views&lt;/code&gt; is an array of workbook view objects which have the keys:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Key&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;RTL&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, display right-to-left&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Miscellaneous Workbook Properties&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;wb.Workbook.WBProps&lt;/code&gt; holds other workbook properties:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Key&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;CodeName&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#vba-and-macros&quot;&gt;VBA Project Workbook Code Name&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;date1904&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;epoch: 0/false for 1900 system, 1/true for 1904&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;filterPrivacy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Warn or strip personally identifying info on save&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Document Features&lt;/h3&gt; 
&lt;p&gt;Even for basic features like date storage, the official Excel formats store the same content in different ways. The parsers are expected to convert from the underlying file format representation to the Common Spreadsheet Format. Writers are expected to convert from CSF back to the underlying file format.&lt;/p&gt; 
&lt;h4&gt;Formulae&lt;/h4&gt; 
&lt;p&gt;The A1-style formula string is stored in the &lt;code&gt;f&lt;/code&gt; field. Even though different file formats store the formulae in different ways, the formats are translated. Even though some formats store formulae with a leading equal sign, CSF formulae do not start with &lt;code&gt;=&lt;/code&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Representation of A1=1, A2=2, A3=A1+A2&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &quot;!ref&quot;: &quot;A1:A3&quot;,
  A1: { t:&#39;n&#39;, v:1 },
  A2: { t:&#39;n&#39;, v:2 },
  A3: { t:&#39;n&#39;, v:3, f:&#39;A1+A2&#39; }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Shared formulae are decompressed and each cell has the formula corresponding to its cell. Writers generally do not attempt to generate shared formulae.&lt;/p&gt; 
&lt;p&gt;Cells with formula entries but no value will be serialized in a way that Excel and other spreadsheet tools will recognize. This library will not automatically compute formula results! For example, to compute &lt;code&gt;BESSELJ&lt;/code&gt; in a worksheet:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Formula without known value&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &quot;!ref&quot;: &quot;A1:A3&quot;,
  A1: { t:&#39;n&#39;, v:3.14159 },
  A2: { t:&#39;n&#39;, v:2 },
  A3: { t:&#39;n&#39;, f:&#39;BESSELJ(A1,A2)&#39; }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;Array Formulae&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Array formulae are stored in the top-left cell of the array block. All cells of an array formula have a &lt;code&gt;F&lt;/code&gt; field corresponding to the range. A single-cell formula can be distinguished from a plain formula by the presence of &lt;code&gt;F&lt;/code&gt; field.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Array Formula examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;For example, setting the cell &lt;code&gt;C1&lt;/code&gt; to the array formula &lt;code&gt;{=SUM(A1:A3*B1:B3)}&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;worksheet[&#39;C1&#39;] = { t:&#39;n&#39;, f: &quot;SUM(A1:A3*B1:B3)&quot;, F:&quot;C1:C1&quot; };
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For a multi-cell array formula, every cell has the same array range but only the first cell specifies the formula. Consider &lt;code&gt;D1:D3=A1:A3*B1:B3&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;worksheet[&#39;D1&#39;] = { t:&#39;n&#39;, F:&quot;D1:D3&quot;, f:&quot;A1:A3*B1:B3&quot; };
worksheet[&#39;D2&#39;] = { t:&#39;n&#39;, F:&quot;D1:D3&quot; };
worksheet[&#39;D3&#39;] = { t:&#39;n&#39;, F:&quot;D1:D3&quot; };
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Utilities and writers are expected to check for the presence of a &lt;code&gt;F&lt;/code&gt; field and ignore any possible formula element &lt;code&gt;f&lt;/code&gt; in cells other than the starting cell. They are not expected to perform validation of the formulae!&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Formula Output Utility Function&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The &lt;code&gt;sheet_to_formulae&lt;/code&gt; method generates one line per formula or array formula. Array formulae are rendered in the form &lt;code&gt;range=formula&lt;/code&gt; while plain cells are rendered in the form &lt;code&gt;cell=formula or value&lt;/code&gt;. Note that string literals are prefixed with an apostrophe &lt;code&gt;&#39;&lt;/code&gt;, consistent with Excel&#39;s formula bar display.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Formulae File Format Details&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;left&quot;&gt;Storage Representation&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Formats&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;Read&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;Write&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;A1-style strings&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;XLSX&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;RC-style strings&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;XLML and plain text&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;BIFF Parsed formulae&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;XLSB and all XLS formats&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;OpenFormula formulae&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;ODS/FODS/UOS&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;Since Excel prohibits named cells from colliding with names of A1 or RC style cell references, a (not-so-simple) regex conversion is possible. BIFF Parsed formulae have to be explicitly unwound. OpenFormula formulae can be converted with regular expressions.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Column Properties&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;!cols&lt;/code&gt; array in each worksheet, if present, is a collection of &lt;code&gt;ColInfo&lt;/code&gt; objects which have the following properties:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;type ColInfo = {
  /* visibility */
  hidden?: boolean; // if true, the column is hidden

  /* column width is specified in one of the following ways: */
  wpx?:    number;  // width in screen pixels
  width?:  number;  // width in Excel&#39;s &quot;Max Digit Width&quot;, width*256 is integral
  wch?:    number;  // width in characters

  /* other fields for preserving features from files */
  level?:  number;  // 0-indexed outline / group level
  MDW?:    number;  // Excel&#39;s &quot;Max Digit Width&quot; unit, always integral
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why are there three width types?&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;There are three different width types corresponding to the three different ways spreadsheets store column widths:&lt;/p&gt; 
 &lt;p&gt;SYLK and other plain text formats use raw character count. Contemporaneous tools like Visicalc and Multiplan were character based. Since the characters had the same width, it sufficed to store a count. This tradition was continued into the BIFF formats.&lt;/p&gt; 
 &lt;p&gt;SpreadsheetML (2003) tried to align with HTML by standardizing on screen pixel count throughout the file. Column widths, row heights, and other measures use pixels. When the pixel and character counts do not align, Excel rounds values.&lt;/p&gt; 
 &lt;p&gt;XLSX internally stores column widths in a nebulous &quot;Max Digit Width&quot; form. The Max Digit Width is the width of the largest digit when rendered (generally the &quot;0&quot; character is the widest). The internal width must be an integer multiple of the the width divided by 256. ECMA-376 describes a formula for converting between pixels and the internal width. This represents a hybrid approach.&lt;/p&gt; 
 &lt;p&gt;Read functions attempt to populate all three properties. Write functions will try to cycle specified values to the desired type. In order to avoid potential conflicts, manipulation should delete the other properties first. For example, when changing the pixel width, delete the &lt;code&gt;wch&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; properties.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Implementation details&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Given the constraints, it is possible to determine the MDW without actually inspecting the font! The parsers guess the pixel width by converting from width to pixels and back, repeating for all possible MDW and selecting the MDW that minimizes the error. XLML actually stores the pixel width, so the guess works in the opposite direction.&lt;/p&gt; 
 &lt;p&gt;Even though all of the information is made available, writers are expected to follow the priority order:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;use &lt;code&gt;width&lt;/code&gt; field if available&lt;/li&gt; 
  &lt;li&gt;use &lt;code&gt;wpx&lt;/code&gt; pixel width if available&lt;/li&gt; 
  &lt;li&gt;use &lt;code&gt;wch&lt;/code&gt; character count if available&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h4&gt;Row Properties&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;!rows&lt;/code&gt; array in each worksheet, if present, is a collection of &lt;code&gt;RowInfo&lt;/code&gt; objects which have the following properties:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;type RowInfo = {
  /* visibility */
  hidden?: boolean; // if true, the row is hidden

  /* row height is specified in one of the following ways: */
  hpx?:    number;  // height in screen pixels
  hpt?:    number;  // height in points

  level?:  number;  // 0-indexed outline / group level
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Excel UI displays the base outline level as &lt;code&gt;1&lt;/code&gt; and the max level as &lt;code&gt;8&lt;/code&gt;. The &lt;code&gt;level&lt;/code&gt; field stores the base outline as &lt;code&gt;0&lt;/code&gt; and the max level as &lt;code&gt;7&lt;/code&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Implementation details&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Excel internally stores row heights in points. The default resolution is 72 DPI or 96 PPI, so the pixel and point size should agree. For different resolutions they may not agree, so the library separates the concepts.&lt;/p&gt; 
 &lt;p&gt;Even though all of the information is made available, writers are expected to follow the priority order:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;use &lt;code&gt;hpx&lt;/code&gt; pixel height if available&lt;/li&gt; 
  &lt;li&gt;use &lt;code&gt;hpt&lt;/code&gt; point height if available&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h4&gt;Number Formats&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;cell.w&lt;/code&gt; formatted text for each cell is produced from &lt;code&gt;cell.v&lt;/code&gt; and &lt;code&gt;cell.z&lt;/code&gt; format. If the format is not specified, the Excel &lt;code&gt;General&lt;/code&gt; format is used. The format can either be specified as a string or as an index into the format table. Parsers are expected to populate &lt;code&gt;workbook.SSF&lt;/code&gt; with the number format table. Writers are expected to serialize the table.&lt;/p&gt; 
&lt;p&gt;Custom tools should ensure that the local table has each used format string somewhere in the table. Excel convention mandates that the custom formats start at index 164. The following example creates a custom format from scratch:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;New worksheet with custom format&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var wb = {
  SheetNames: [&quot;Sheet1&quot;],
  Sheets: {
    Sheet1: {
      &quot;!ref&quot;:&quot;A1:C1&quot;,
      A1: { t:&quot;n&quot;, v:10000 },                    // &amp;lt;-- General format
      B1: { t:&quot;n&quot;, v:10000, z: &quot;0%&quot; },           // &amp;lt;-- Builtin format
      C1: { t:&quot;n&quot;, v:10000, z: &quot;\&quot;T\&quot;\ #0.00&quot; }  // &amp;lt;-- Custom format
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;The rules are slightly different from how Excel displays custom number formats. In particular, literal characters must be wrapped in double quotes or preceded by a backslash. For more info, see the Excel documentation article &lt;code&gt;Create or delete a custom number format&lt;/code&gt; or ECMA-376 18.8.31 (Number Formats)&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Default Number Formats&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The default formats are listed in ECMA-376 18.8.30:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;right&quot;&gt;ID&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Format&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;General&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.00&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#,##0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#,##0.00&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0%&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.00%&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0.00E+00&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;# ?/?&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;# ??/??&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;m/d/yy&lt;/code&gt; (see below)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;d-mmm-yy&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;d-mmm&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;mmm-yy&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;h:mm AM/PM&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;h:mm:ss AM/PM&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;h:mm&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;h:mm:ss&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;m/d/yy h:mm&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;37&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#,##0 ;(#,##0)&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;38&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#,##0 ;[Red](#,##0)&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;39&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#,##0.00;(#,##0.00)&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;40&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;#,##0.00;[Red](#,##0.00)&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;mm:ss&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;46&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;[h]:mm:ss&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;mmss.0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;48&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;##0.0E+0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;right&quot;&gt;49&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;@&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;Format 14 (&lt;code&gt;m/d/yy&lt;/code&gt;) is localized by Excel: even though the file specifies that number format, it will be drawn differently based on system settings. It makes sense when the producer and consumer of files are in the same locale, but that is not always the case over the Internet. To get around this ambiguity, parse functions accept the &lt;code&gt;dateNF&lt;/code&gt; option to override the interpretation of that specific format string.&lt;/p&gt; 
&lt;h4&gt;Hyperlinks&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Format Support&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Cell Hyperlinks&lt;/strong&gt;: XLSX/M, XLSB, BIFF8 XLS, XLML, ODS&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Tooltips&lt;/strong&gt;: XLSX/M, XLSB, BIFF8 XLS, XLML&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Hyperlinks are stored in the &lt;code&gt;l&lt;/code&gt; key of cell objects. The &lt;code&gt;Target&lt;/code&gt; field of the hyperlink object is the target of the link, including the URI fragment. Tooltips are stored in the &lt;code&gt;Tooltip&lt;/code&gt; field and are displayed when you move your mouse over the text.&lt;/p&gt; 
&lt;p&gt;For example, the following snippet creates a link from cell &lt;code&gt;A3&lt;/code&gt; to &lt;a href=&quot;https://sheetjs.com&quot;&gt;https://sheetjs.com&lt;/a&gt; with the tip &lt;code&gt;&quot;Find us @ SheetJS.com!&quot;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;ws[&#39;A1&#39;].l = { Target:&quot;https://sheetjs.com&quot;, Tooltip:&quot;Find us @ SheetJS.com!&quot; };
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that Excel does not automatically style hyperlinks -- they will generally be displayed as normal text.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Remote Links&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;HTTP / HTTPS links can be used directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;ws[&#39;A2&#39;].l = { Target:&quot;https://docs.sheetjs.com/#hyperlinks&quot; };
ws[&#39;A3&#39;].l = { Target:&quot;http://localhost:7262/yes_localhost_works&quot; };
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Excel also supports &lt;code&gt;mailto&lt;/code&gt; email links with subject line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;ws[&#39;A4&#39;].l = { Target:&quot;mailto:ignored@dev.null&quot; };
ws[&#39;A5&#39;].l = { Target:&quot;mailto:ignored@dev.null?subject=Test Subject&quot; };
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Local Links&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Links to absolute paths should use the &lt;code&gt;file://&lt;/code&gt; URI scheme:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;ws[&#39;B1&#39;].l = { Target:&quot;file:///SheetJS/t.xlsx&quot; }; /* Link to /SheetJS/t.xlsx */
ws[&#39;B2&#39;].l = { Target:&quot;file:///c:/SheetJS.xlsx&quot; }; /* Link to c:\SheetJS.xlsx */
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Links to relative paths can be specified without a scheme:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;ws[&#39;B3&#39;].l = { Target:&quot;SheetJS.xlsb&quot; }; /* Link to SheetJS.xlsb */
ws[&#39;B4&#39;].l = { Target:&quot;../SheetJS.xlsm&quot; }; /* Link to ../SheetJS.xlsm */
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Relative Paths have undefined behavior in the SpreadsheetML 2003 format. Excel 2019 will treat a &lt;code&gt;..\&lt;/code&gt; parent mark as two levels up.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Internal Links&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Links where the target is a cell or range or defined name in the same workbook (&quot;Internal Links&quot;) are marked with a leading hash character:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;ws[&#39;C1&#39;].l = { Target:&quot;#E2&quot; }; /* Link to cell E2 */
ws[&#39;C2&#39;].l = { Target:&quot;#Sheet2!E2&quot; }; /* Link to cell E2 in sheet Sheet2 */
ws[&#39;C3&#39;].l = { Target:&quot;#SomeDefinedName&quot; }; /* Link to Defined Name */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Cell Comments&lt;/h4&gt; 
&lt;p&gt;Cell comments are objects stored in the &lt;code&gt;c&lt;/code&gt; array of cell objects. The actual contents of the comment are split into blocks based on the comment author. The &lt;code&gt;a&lt;/code&gt; field of each comment object is the author of the comment and the &lt;code&gt;t&lt;/code&gt; field is the plain text representation.&lt;/p&gt; 
&lt;p&gt;For example, the following snippet appends a cell comment into cell &lt;code&gt;A1&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if(!ws.A1.c) ws.A1.c = [];
ws.A1.c.push({a:&quot;SheetJS&quot;, t:&quot;I&#39;m a little comment, short and stout!&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: XLSB enforces a 54 character limit on the Author name. Names longer than 54 characters may cause issues with other formats.&lt;/p&gt; 
&lt;p&gt;To mark a comment as normally hidden, set the &lt;code&gt;hidden&lt;/code&gt; property:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if(!ws.A1.c) ws.A1.c = [];
ws.A1.c.push({a:&quot;SheetJS&quot;, t:&quot;This comment is visible&quot;});

if(!ws.A2.c) ws.A2.c = [];
ws.A2.c.hidden = true;
ws.A2.c.push({a:&quot;SheetJS&quot;, t:&quot;This comment will be hidden&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Sheet Visibility&lt;/h4&gt; 
&lt;p&gt;Excel enables hiding sheets in the lower tab bar. The sheet data is stored in the file but the UI does not readily make it available. Standard hidden sheets are revealed in the &quot;Unhide&quot; menu. Excel also has &quot;very hidden&quot; sheets which cannot be revealed in the menu. It is only accessible in the VB Editor!&lt;/p&gt; 
&lt;p&gt;The visibility setting is stored in the &lt;code&gt;Hidden&lt;/code&gt; property of sheet props array.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;More details&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;center&quot;&gt;Value&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Definition&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Visible&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Hidden&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Very Hidden&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;With &lt;a href=&quot;https://rawgit.com/SheetJS/test_files/HEAD/sheet_visibility.xlsx&quot;&gt;https://rawgit.com/SheetJS/test_files/HEAD/sheet_visibility.xlsx&lt;/a&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;gt; wb.Workbook.Sheets.map(function(x) { return [x.name, x.Hidden] })
[ [ &#39;Visible&#39;, 0 ], [ &#39;Hidden&#39;, 1 ], [ &#39;VeryHidden&#39;, 2 ] ]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Non-Excel formats do not support the Very Hidden state. The best way to test if a sheet is visible is to check if the &lt;code&gt;Hidden&lt;/code&gt; property is logical truth:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;gt; wb.Workbook.Sheets.map(function(x) { return [x.name, !x.Hidden] })
[ [ &#39;Visible&#39;, true ], [ &#39;Hidden&#39;, false ], [ &#39;VeryHidden&#39;, false ] ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h4&gt;VBA and Macros&lt;/h4&gt; 
&lt;p&gt;VBA Macros are stored in a special data blob that is exposed in the &lt;code&gt;vbaraw&lt;/code&gt; property of the workbook object when the &lt;code&gt;bookVBA&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;. They are supported in &lt;code&gt;XLSM&lt;/code&gt;, &lt;code&gt;XLSB&lt;/code&gt;, and &lt;code&gt;BIFF8 XLS&lt;/code&gt; formats. The supported format writers automatically insert the data blobs if it is present in the workbook and associate with the worksheet names.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Custom Code Names&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The workbook code name is stored in &lt;code&gt;wb.Workbook.WBProps.CodeName&lt;/code&gt;. By default, Excel will write &lt;code&gt;ThisWorkbook&lt;/code&gt; or a translated phrase like &lt;code&gt;DieseArbeitsmappe&lt;/code&gt;. Worksheet and Chartsheet code names are in the worksheet properties object at &lt;code&gt;wb.Workbook.Sheets[i].CodeName&lt;/code&gt;. Macrosheets and Dialogsheets are ignored.&lt;/p&gt; 
 &lt;p&gt;The readers and writers preserve the code names, but they have to be manually set when adding a VBA blob to a different workbook.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Macrosheets&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Older versions of Excel also supported a non-VBA &quot;macrosheet&quot; sheet type that stored automation commands. These are exposed in objects with the &lt;code&gt;!type&lt;/code&gt; property set to &lt;code&gt;&quot;macro&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Detecting macros in workbooks&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The &lt;code&gt;vbaraw&lt;/code&gt; field will only be set if macros are present, so testing is simple:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function wb_has_macro(wb/*:workbook*/)/*:boolean*/ {
	if(!!wb.vbaraw) return true;
	const sheets = wb.SheetNames.map((n) =&amp;gt; wb.Sheets[n]);
	return sheets.some((ws) =&amp;gt; !!ws &amp;amp;&amp;amp; ws[&#39;!type&#39;]==&#39;macro&#39;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Parsing Options&lt;/h2&gt; 
&lt;p&gt;The exported &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;readFile&lt;/code&gt; functions accept an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Input data encoding (see Input Type below)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;raw&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, plain text parsing will not parse values **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;codepage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If specified, use code page when appropriate **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellFormula&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;true&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Save formulae to the .f field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellHTML&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;true&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Parse rich text and save HTML to the &lt;code&gt;.h&lt;/code&gt; field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Save number format string to the &lt;code&gt;.z&lt;/code&gt; field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellStyles&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Save style/theme info to the &lt;code&gt;.s&lt;/code&gt; field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellText&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;true&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Generated formatted text to the &lt;code&gt;.w&lt;/code&gt; field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellDates&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Store dates as type &lt;code&gt;d&lt;/code&gt; (default is &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If specified, use the string for date code 14 **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sheetStubs&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Create cell objects of type &lt;code&gt;z&lt;/code&gt; for stub cells&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sheetRows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If &amp;gt;0, read the first &lt;code&gt;sheetRows&lt;/code&gt; rows **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bookDeps&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, parse calculation chains&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bookFiles&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, add raw files to book object **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bookProps&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, only parse enough to get book metadata **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bookSheets&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, only parse enough to get the sheet names&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bookVBA&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, copy VBA blob to &lt;code&gt;vbaraw&lt;/code&gt; field **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&quot;&quot;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If defined and file is encrypted, use password **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;WTF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, throw errors on unexpected file features **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sheets&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If specified, only parse specified sheets **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;PRN&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, allow parsing of PRN files **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;xlfn&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, preserve &lt;code&gt;_xlfn.&lt;/code&gt; prefixes in formulae **&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;Even if &lt;code&gt;cellNF&lt;/code&gt; is false, formatted text will be generated and saved to &lt;code&gt;.w&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;In some cases, sheets may be parsed even if &lt;code&gt;bookSheets&lt;/code&gt; is false.&lt;/li&gt; 
 &lt;li&gt;Excel aggressively tries to interpret values from CSV and other plain text. This leads to surprising behavior! The &lt;code&gt;raw&lt;/code&gt; option suppresses value parsing.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bookSheets&lt;/code&gt; and &lt;code&gt;bookProps&lt;/code&gt; combine to give both sets of information&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Deps&lt;/code&gt; will be an empty object if &lt;code&gt;bookDeps&lt;/code&gt; is false&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bookFiles&lt;/code&gt; behavior depends on file type: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;keys&lt;/code&gt; array (paths in the ZIP) for ZIP-based formats&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;files&lt;/code&gt; hash (mapping paths to objects representing the files) for ZIP&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cfb&lt;/code&gt; object for formats using CFB containers&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sheetRows-1&lt;/code&gt; rows will be generated when looking at the JSON object output (since the header row is counted as a row when parsing the data)&lt;/li&gt; 
 &lt;li&gt;By default all worksheets are parsed. &lt;code&gt;sheets&lt;/code&gt; restricts based on input type: 
  &lt;ul&gt; 
   &lt;li&gt;number: zero-based index of worksheet to parse (&lt;code&gt;0&lt;/code&gt; is first worksheet)&lt;/li&gt; 
   &lt;li&gt;string: name of worksheet to parse (case insensitive)&lt;/li&gt; 
   &lt;li&gt;array of numbers and strings to select multiple worksheets.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bookVBA&lt;/code&gt; merely exposes the raw VBA CFB object. It does not parse the data. XLSM and XLSB store the VBA CFB object in &lt;code&gt;xl/vbaProject.bin&lt;/code&gt;. BIFF8 XLS mixes the VBA entries alongside the core Workbook entry, so the library generates a new XLSB-compatible blob from the XLS CFB container.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;codepage&lt;/code&gt; is applied to BIFF2 - BIFF5 files without &lt;code&gt;CodePage&lt;/code&gt; records and to CSV files without BOM in &lt;code&gt;type:&quot;binary&quot;&lt;/code&gt;. BIFF8 XLS always defaults to 1200.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PRN&lt;/code&gt; affects parsing of text files without a common delimiter character.&lt;/li&gt; 
 &lt;li&gt;Currently only XOR encryption is supported. Unsupported error will be thrown for files employing other encryption methods.&lt;/li&gt; 
 &lt;li&gt;Newer Excel functions are serialized with the &lt;code&gt;_xlfn.&lt;/code&gt; prefix, hidden from the user. SheetJS will strip &lt;code&gt;_xlfn.&lt;/code&gt; normally. The &lt;code&gt;xlfn&lt;/code&gt; option preserves them.&lt;/li&gt; 
 &lt;li&gt;WTF is mainly for development. By default, the parser will suppress read errors on single worksheets, allowing you to read from the worksheets that do parse properly. Setting &lt;code&gt;WTF:true&lt;/code&gt; forces those errors to be thrown.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Input Type&lt;/h3&gt; 
&lt;p&gt;Strings can be interpreted in multiple ways. The &lt;code&gt;type&lt;/code&gt; parameter for &lt;code&gt;read&lt;/code&gt; tells the library how to parse the data argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;code&gt;type&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;expected input&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;base64&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string: Base64 encoding of the file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;binary&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string: binary string (byte &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;data.charCodeAt(n)&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;string&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string: JS string (characters interpreted as UTF8)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;buffer&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;nodejs Buffer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;array&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;array: array of 8-bit unsigned int (byte &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;data[n]&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;file&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string: path of file that will be read (nodejs only)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Guessing File Type&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Implementation Details&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Excel and other spreadsheet tools read the first few bytes and apply other heuristics to determine a file type. This enables file type punning: renaming files with the &lt;code&gt;.xls&lt;/code&gt; extension will tell your computer to use Excel to open the file but Excel will know how to handle it. This library applies similar logic:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;left&quot;&gt;Byte 0&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Raw File Type&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Spreadsheet Types&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0xD0&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;CFB Container&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;BIFF 5/8 or password-protected XLSX/XLSB or WQ3/QPW&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x09&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;BIFF Stream&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;BIFF 2/3/4/5&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x3C&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;XML/HTML&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;SpreadsheetML / Flat ODS / UOS1 / HTML / plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x50&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;ZIP Archive&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;XLSB or XLSX/M or ODS or UOS2 or plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x49&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Plain Text&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;SYLK or plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x54&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Plain Text&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;DIF or plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0xEF&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;UTF8 Encoded&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;SpreadsheetML / Flat ODS / UOS1 / HTML / plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0xFF&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;UTF16 Encoded&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;SpreadsheetML / Flat ODS / UOS1 / HTML / plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Record Stream&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Lotus WK* or Quattro Pro or plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x7B&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Plain text&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;RTF or plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x0A&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Plain text&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;SpreadsheetML / Flat ODS / UOS1 / HTML / plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x0D&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Plain text&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;SpreadsheetML / Flat ODS / UOS1 / HTML / plain text&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;0x20&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;Plain text&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;SpreadsheetML / Flat ODS / UOS1 / HTML / plain text&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;DBF files are detected based on the first byte as well as the third and fourth bytes (corresponding to month and day of the file date)&lt;/p&gt; 
 &lt;p&gt;Plain text format guessing follows the priority order:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;left&quot;&gt;Format&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;Test&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;XML&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;lt;?xml&lt;/code&gt; appears in the first 1024 characters&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;HTML&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;starts with &lt;code&gt;&amp;lt;&lt;/code&gt; and HTML tags appear in the first 1024 characters *&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;XML&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;starts with &lt;code&gt;&amp;lt;&lt;/code&gt; and the first tag is valid&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;RTF&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;starts with &lt;code&gt;{\rt&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;DSV&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;starts with &lt;code&gt;/sep=.$/&lt;/code&gt;, separator is the specified character&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;DSV&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;more unquoted `&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;DSV&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;more unquoted &lt;code&gt;;&lt;/code&gt; chars than &lt;code&gt;\t&lt;/code&gt; or &lt;code&gt;,&lt;/code&gt; in the first 1024&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;TSV&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;more unquoted &lt;code&gt;\t&lt;/code&gt; chars than &lt;code&gt;,&lt;/code&gt; chars in the first 1024&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;CSV&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;one of the first 1024 characters is a comma &lt;code&gt;&quot;,&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;ETH&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;starts with &lt;code&gt;socialcalc:version:&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;PRN&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;PRN&lt;/code&gt; option is set to true&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;CSV&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;(fallback)&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;ul&gt; 
  &lt;li&gt;HTML tags include: &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;table&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;meta&lt;/code&gt;, &lt;code&gt;script&lt;/code&gt;, &lt;code&gt;style&lt;/code&gt;, &lt;code&gt;div&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why are random text files valid?&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Excel is extremely aggressive in reading files. Adding an XLS extension to any display text file (where the only characters are ANSI display chars) tricks Excel into thinking that the file is potentially a CSV or TSV file, even if it is only one column! This library attempts to replicate that behavior.&lt;/p&gt; 
 &lt;p&gt;The best approach is to validate the desired worksheet and ensure it has the expected number of rows or columns. Extracting the range is extremely simple:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var range = XLSX.utils.decode_range(worksheet[&#39;!ref&#39;]);
var ncols = range.e.c - range.s.c + 1, nrows = range.e.r - range.s.r + 1;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Writing Options&lt;/h2&gt; 
&lt;p&gt;The exported &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;writeFile&lt;/code&gt; functions accept an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Output data encoding (see Output Type below)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellDates&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Store dates as type &lt;code&gt;d&lt;/code&gt; (default is &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bookSST&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Generate Shared String Table **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bookType&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;&quot;xlsx&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Type of Workbook (see below for supported formats)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sheet&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Name of Worksheet for single-sheet formats **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;compression&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use ZIP compression for ZIP-based formats **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Props&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Override workbook properties when writing **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;themeXLSX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Override theme XML when writing XLSX/XLSB/XLSM **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;ignoreEC&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Suppress &quot;number as text&quot; errors **&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;bookSST&lt;/code&gt; is slower and more memory intensive, but has better compatibility with older versions of iOS Numbers&lt;/li&gt; 
 &lt;li&gt;The raw data is the only thing guaranteed to be saved. Features not described in this README may not be serialized.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cellDates&lt;/code&gt; only applies to XLSX output and is not guaranteed to work with third-party readers. Excel itself does not usually write cells with type &lt;code&gt;d&lt;/code&gt; so non-Excel tools may ignore the data or error in the presence of dates.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Props&lt;/code&gt; is an object mirroring the workbook &lt;code&gt;Props&lt;/code&gt; field. See the table from the &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#workbook-file-properties&quot;&gt;Workbook File Properties&lt;/a&gt; section.&lt;/li&gt; 
 &lt;li&gt;if specified, the string from &lt;code&gt;themeXLSX&lt;/code&gt; will be saved as the primary theme for XLSX/XLSB/XLSM files (to &lt;code&gt;xl/theme/theme1.xml&lt;/code&gt; in the ZIP)&lt;/li&gt; 
 &lt;li&gt;Due to a bug in the program, some features like &quot;Text to Columns&quot; will crash Excel on worksheets where error conditions are ignored. The writer will mark files to ignore the error by default. Set &lt;code&gt;ignoreEC&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to suppress.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported Output Formats&lt;/h3&gt; 
&lt;p&gt;For broad compatibility with third-party tools, this library supports many output formats. The specific file type is controlled with &lt;code&gt;bookType&lt;/code&gt; option:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;code&gt;bookType&lt;/code&gt;&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;file ext&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;container&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;sheets&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;xlsx&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xlsx&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;ZIP&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;multi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2007+ XML Format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;xlsm&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xlsm&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;ZIP&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;multi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2007+ Macro XML Format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;xlsb&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xlsb&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;ZIP&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;multi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2007+ Binary Format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;biff8&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xls&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;CFB&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;multi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 97-2004 Workbook Format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;biff5&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xls&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;CFB&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;multi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 5.0/95 Workbook Format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;biff4&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xls&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 4.0 Worksheet Format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;biff3&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xls&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 3.0 Worksheet Format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;biff2&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xls&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2.0 Worksheet Format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;xlml&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.xls&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;multi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2003-2004 (SpreadsheetML)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;ods&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.ods&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;ZIP&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;multi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;OpenDocument Spreadsheet&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;fods&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.fods&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;multi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Flat OpenDocument Spreadsheet&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.csv&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Comma Separated Values&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;txt&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.txt&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;UTF-16 Unicode Text (TXT)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sylk&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.sylk&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Symbolic Link (SYLK)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;html&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.html&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;HTML Document&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dif&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.dif&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Data Interchange Format (DIF)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dbf&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.dbf&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;dBASE II + VFP Extensions (DBF)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;rtf&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.rtf&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Rich Text Format (RTF)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;prn&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.prn&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Lotus Formatted Text&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;eth&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;code&gt;.eth&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;none&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;single&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Ethercalc Record Format (ETH)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;compression&lt;/code&gt; only applies to formats with ZIP containers.&lt;/li&gt; 
 &lt;li&gt;Formats that only support a single sheet require a &lt;code&gt;sheet&lt;/code&gt; option specifying the worksheet. If the string is empty, the first worksheet is used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;writeFile&lt;/code&gt; will automatically guess the output file format based on the file extension if &lt;code&gt;bookType&lt;/code&gt; is not specified. It will choose the first format in the aforementioned table that matches the extension.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Output Type&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;type&lt;/code&gt; argument for &lt;code&gt;write&lt;/code&gt; mirrors the &lt;code&gt;type&lt;/code&gt; argument for &lt;code&gt;read&lt;/code&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;code&gt;type&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;output&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;base64&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string: Base64 encoding of the file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;binary&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string: binary string (byte &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;data.charCodeAt(n)&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;string&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string: JS string (characters interpreted as UTF8)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;buffer&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;nodejs Buffer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;array&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ArrayBuffer, fallback array of 8-bit unsigned int&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;&quot;file&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;string: path of file that will be created (nodejs only)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Utility Functions&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;sheet_to_*&lt;/code&gt; functions accept a worksheet and an optional options object.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;*_to_sheet&lt;/code&gt; functions accept a data object and an optional options object.&lt;/p&gt; 
&lt;p&gt;The examples are based on the following worksheet:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;XXX| A | B | C | D | E | F | G |
---+---+---+---+---+---+---+---+
 1 | S | h | e | e | t | J | S |
 2 | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
 3 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Array of Arrays Input&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.aoa_to_sheet&lt;/code&gt; takes an array of arrays of JS values and returns a worksheet resembling the input data. Numbers, Booleans and Strings are stored as the corresponding styles. Dates are stored as date or numbers. Array holes and explicit &lt;code&gt;undefined&lt;/code&gt; values are skipped. &lt;code&gt;null&lt;/code&gt; values may be stubbed. All other values are stored as strings. The function takes an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;FMT 14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified date format in string output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellDates&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Store dates as type &lt;code&gt;d&lt;/code&gt; (default is &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sheetStubs&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Create cell objects of type &lt;code&gt;z&lt;/code&gt; for &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;nullError&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, emit &lt;code&gt;#NULL!&lt;/code&gt; error cells for &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;To generate the example sheet:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var ws = XLSX.utils.aoa_to_sheet([
  &quot;SheetJS&quot;.split(&quot;&quot;),
  [1,2,3,4,5,6,7],
  [2,3,4,5,6,7,8]
]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.sheet_add_aoa&lt;/code&gt; takes an array of arrays of JS values and updates an existing worksheet object. It follows the same process as &lt;code&gt;aoa_to_sheet&lt;/code&gt; and accepts an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;FMT 14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified date format in string output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellDates&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Store dates as type &lt;code&gt;d&lt;/code&gt; (default is &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sheetStubs&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Create cell objects of type &lt;code&gt;z&lt;/code&gt; for &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;nullError&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, emit &lt;code&gt;#NULL!&lt;/code&gt; error cells for &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;origin&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified cell as starting point (see below)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;code&gt;origin&lt;/code&gt; is expected to be one of:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;code&gt;origin&lt;/code&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(cell object)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified cell (cell object)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(string)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified cell (A1-style cell)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(number &amp;gt;= 0)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Start from the first column at specified row (0-indexed)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;-1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Append to bottom of worksheet starting on first column&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(default)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Start from cell A1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Consider the worksheet:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;XXX| A | B | C | D | E | F | G |
---+---+---+---+---+---+---+---+
 1 | S | h | e | e | t | J | S |
 2 | 1 | 2 |   |   | 5 | 6 | 7 |
 3 | 2 | 3 |   |   | 6 | 7 | 8 |
 4 | 3 | 4 |   |   | 7 | 8 | 9 |
 5 | 4 | 5 | 6 | 7 | 8 | 9 | 0 |
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This worksheet can be built up in the order &lt;code&gt;A1:G1, A2:B4, E2:G4, A5:G5&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* Initial row */
var ws = XLSX.utils.aoa_to_sheet([ &quot;SheetJS&quot;.split(&quot;&quot;) ]);

/* Write data starting at A2 */
XLSX.utils.sheet_add_aoa(ws, [[1,2], [2,3], [3,4]], {origin: &quot;A2&quot;});

/* Write data starting at E2 */
XLSX.utils.sheet_add_aoa(ws, [[5,6,7], [6,7,8], [7,8,9]], {origin:{r:1, c:4}});

/* Append row */
XLSX.utils.sheet_add_aoa(ws, [[4,5,6,7,8,9,0]], {origin: -1});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Array of Objects Input&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.json_to_sheet&lt;/code&gt; takes an array of objects and returns a worksheet with automatically-generated &quot;headers&quot; based on the keys of the objects. The default column order is determined by the first appearance of the field using &lt;code&gt;Object.keys&lt;/code&gt;. The function accepts an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified field order (default &lt;code&gt;Object.keys&lt;/code&gt;) **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;FMT 14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified date format in string output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellDates&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Store dates as type &lt;code&gt;d&lt;/code&gt; (default is &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;skipHeader&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, do not include header row in output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;nullError&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, emit &lt;code&gt;#NULL!&lt;/code&gt; error cells for &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;All fields from each row will be written. If &lt;code&gt;header&lt;/code&gt; is an array and it does not contain a particular field, the key will be appended to the array.&lt;/li&gt; 
 &lt;li&gt;Cell types are deduced from the type of each value. For example, a &lt;code&gt;Date&lt;/code&gt; object will generate a Date cell, while a string will generate a Text cell.&lt;/li&gt; 
 &lt;li&gt;Null values will be skipped by default. If &lt;code&gt;nullError&lt;/code&gt; is true, an error cell corresponding to &lt;code&gt;#NULL!&lt;/code&gt; will be written to the worksheet.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;The original sheet cannot be reproduced using plain objects since JS object keys must be unique. After replacing the second &lt;code&gt;e&lt;/code&gt; and &lt;code&gt;S&lt;/code&gt; with &lt;code&gt;e_1&lt;/code&gt; and &lt;code&gt;S_1&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var ws = XLSX.utils.json_to_sheet([
  { S:1, h:2, e:3, e_1:4, t:5, J:6, S_1:7 },
  { S:2, h:3, e:4, e_1:5, t:6, J:7, S_1:8 }
], {header:[&quot;S&quot;,&quot;h&quot;,&quot;e&quot;,&quot;e_1&quot;,&quot;t&quot;,&quot;J&quot;,&quot;S_1&quot;]});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Alternatively, the header row can be skipped:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var ws = XLSX.utils.json_to_sheet([
  { A:&quot;S&quot;, B:&quot;h&quot;, C:&quot;e&quot;, D:&quot;e&quot;, E:&quot;t&quot;, F:&quot;J&quot;, G:&quot;S&quot; },
  { A: 1,  B: 2,  C: 3,  D: 4,  E: 5,  F: 6,  G: 7  },
  { A: 2,  B: 3,  C: 4,  D: 5,  E: 6,  F: 7,  G: 8  }
], {header:[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;], skipHeader:true});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.sheet_add_json&lt;/code&gt; takes an array of objects and updates an existing worksheet object. It follows the same process as &lt;code&gt;json_to_sheet&lt;/code&gt; and accepts an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified column order (default &lt;code&gt;Object.keys&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;FMT 14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified date format in string output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellDates&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Store dates as type &lt;code&gt;d&lt;/code&gt; (default is &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;skipHeader&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, do not include header row in output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;nullError&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, emit &lt;code&gt;#NULL!&lt;/code&gt; error cells for &lt;code&gt;null&lt;/code&gt; values&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;origin&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified cell as starting point (see below)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;code&gt;origin&lt;/code&gt; is expected to be one of:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;code&gt;origin&lt;/code&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(cell object)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified cell (cell object)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(string)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified cell (A1-style cell)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(number &amp;gt;= 0)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Start from the first column at specified row (0-indexed)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;-1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Append to bottom of worksheet starting on first column&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(default)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Start from cell A1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Consider the worksheet:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;XXX| A | B | C | D | E | F | G |
---+---+---+---+---+---+---+---+
 1 | S | h | e | e | t | J | S |
 2 | 1 | 2 |   |   | 5 | 6 | 7 |
 3 | 2 | 3 |   |   | 6 | 7 | 8 |
 4 | 3 | 4 |   |   | 7 | 8 | 9 |
 5 | 4 | 5 | 6 | 7 | 8 | 9 | 0 |
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This worksheet can be built up in the order &lt;code&gt;A1:G1, A2:B4, E2:G4, A5:G5&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* Initial row */
var ws = XLSX.utils.json_to_sheet([
  { A: &quot;S&quot;, B: &quot;h&quot;, C: &quot;e&quot;, D: &quot;e&quot;, E: &quot;t&quot;, F: &quot;J&quot;, G: &quot;S&quot; }
], {header: [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;], skipHeader: true});

/* Write data starting at A2 */
XLSX.utils.sheet_add_json(ws, [
  { A: 1, B: 2 }, { A: 2, B: 3 }, { A: 3, B: 4 }
], {skipHeader: true, origin: &quot;A2&quot;});

/* Write data starting at E2 */
XLSX.utils.sheet_add_json(ws, [
  { A: 5, B: 6, C: 7 }, { A: 6, B: 7, C: 8 }, { A: 7, B: 8, C: 9 }
], {skipHeader: true, origin: { r: 1, c: 4 }, header: [ &quot;A&quot;, &quot;B&quot;, &quot;C&quot; ]});

/* Append row */
XLSX.utils.sheet_add_json(ws, [
  { A: 4, B: 5, C: 6, D: 7, E: 8, F: 9, G: 0 }
], {header: [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;], skipHeader: true, origin: -1});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;HTML Table Input&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.table_to_sheet&lt;/code&gt; takes a table DOM element and returns a worksheet resembling the input table. Numbers are parsed. All other data will be stored as strings.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.table_to_book&lt;/code&gt; produces a minimal workbook based on the worksheet.&lt;/p&gt; 
&lt;p&gt;Both functions accept options arguments:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;raw&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, every cell will hold raw strings&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;FMT 14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified date format in string output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellDates&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Store dates as type &lt;code&gt;d&lt;/code&gt; (default is &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sheetRows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If &amp;gt;0, read the first &lt;code&gt;sheetRows&lt;/code&gt; rows of the table&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, hidden rows and cells will not be parsed&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;To generate the example sheet, start with the HTML table:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;table id=&quot;sheetjs&quot;&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;S&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;h&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;e&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;e&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;t&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;J&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;S&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;1&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;2&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;3&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;4&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;5&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;6&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;7&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;2&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;3&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;4&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;5&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;6&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;7&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;8&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To process the table:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var tbl = document.getElementById(&#39;sheetjs&#39;);
var wb = XLSX.utils.table_to_book(tbl);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Note: &lt;code&gt;XLSX.read&lt;/code&gt; can handle HTML represented as strings.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.sheet_add_dom&lt;/code&gt; takes a table DOM element and updates an existing worksheet object. It follows the same process as &lt;code&gt;table_to_sheet&lt;/code&gt; and accepts an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;raw&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, every cell will hold raw strings&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;FMT 14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified date format in string output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;cellDates&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Store dates as type &lt;code&gt;d&lt;/code&gt; (default is &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sheetRows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If &amp;gt;0, read the first &lt;code&gt;sheetRows&lt;/code&gt; rows of the table&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, hidden rows and cells will not be parsed&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;code&gt;origin&lt;/code&gt; is expected to be one of:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;code&gt;origin&lt;/code&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(cell object)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified cell (cell object)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(string)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified cell (A1-style cell)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(number &amp;gt;= 0)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Start from the first column at specified row (0-indexed)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;-1&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Append to bottom of worksheet starting on first column&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(default)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Start from cell A1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;A small helper function can create gap rows between tables:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function create_gap_rows(ws, nrows) {
  var ref = XLSX.utils.decode_range(ws[&quot;!ref&quot;]);       // get original range
  ref.e.r += nrows;                                    // add to ending row
  ws[&quot;!ref&quot;] = XLSX.utils.encode_range(ref);           // reassign row
}

/* first table */
var ws = XLSX.utils.table_to_sheet(document.getElementById(&#39;table1&#39;));
create_gap_rows(ws, 1); // one row gap after first table

/* second table */
XLSX.utils.sheet_add_dom(ws, document.getElementById(&#39;table2&#39;), {origin: -1});
create_gap_rows(ws, 3); // three rows gap after second table

/* third table */
XLSX.utils.sheet_add_dom(ws, document.getElementById(&#39;table3&#39;), {origin: -1});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Formulae Output&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.sheet_to_formulae&lt;/code&gt; generates an array of commands that represent how a person would enter data into an application. Each entry is of the form &lt;code&gt;A1-cell-address=formula-or-value&lt;/code&gt;. String literals are prefixed with a &lt;code&gt;&#39;&lt;/code&gt; in accordance with Excel.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;For the example sheet:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;gt; var o = XLSX.utils.sheet_to_formulae(ws);
&amp;gt; [o[0], o[5], o[10], o[15], o[20]];
[ &#39;A1=\&#39;S&#39;, &#39;F1=\&#39;J&#39;, &#39;D2=4&#39;, &#39;B3=3&#39;, &#39;G3=8&#39; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Delimiter-Separated Output&lt;/h3&gt; 
&lt;p&gt;As an alternative to the &lt;code&gt;writeFile&lt;/code&gt; CSV type, &lt;code&gt;XLSX.utils.sheet_to_csv&lt;/code&gt; also produces CSV output. The function takes an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;FS&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;&quot;,&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&quot;Field Separator&quot; delimiter between fields&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;RS&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;&quot;\n&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&quot;Record Separator&quot; delimiter between rows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;FMT 14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified date format in string output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;strip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Remove trailing field separators in each record **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;blankrows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;true&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Include blank lines in the CSV output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;skipHidden&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Skips hidden rows/columns in the CSV output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;forceQuotes&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Force quotes around fields&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;strip&lt;/code&gt; will remove trailing commas from each line under default &lt;code&gt;FS/RS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;blankrows&lt;/code&gt; must be set to &lt;code&gt;false&lt;/code&gt; to skip blank lines.&lt;/li&gt; 
 &lt;li&gt;Fields containing the record or field separator will automatically be wrapped in double quotes; &lt;code&gt;forceQuotes&lt;/code&gt; forces all cells to be wrapped in quotes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;For the example sheet:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;gt; console.log(XLSX.utils.sheet_to_csv(ws));
S,h,e,e,t,J,S
1,2,3,4,5,6,7
2,3,4,5,6,7,8
&amp;gt; console.log(XLSX.utils.sheet_to_csv(ws, {FS:&quot;\t&quot;}));
S	h	e	e	t	J	S
1	2	3	4	5	6	7
2	3	4	5	6	7	8
&amp;gt; console.log(XLSX.utils.sheet_to_csv(ws,{FS:&quot;:&quot;,RS:&quot;|&quot;}));
S:h:e:e:t:J:S|1:2:3:4:5:6:7|2:3:4:5:6:7:8|
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h4&gt;UTF-16 Unicode Text&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;txt&lt;/code&gt; output type uses the tab character as the field separator. If the &lt;code&gt;codepage&lt;/code&gt; library is available (included in full distribution but not core), the output will be encoded in &lt;code&gt;CP1200&lt;/code&gt; and the BOM will be prepended.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.sheet_to_txt&lt;/code&gt; takes the same arguments as &lt;code&gt;sheet_to_csv&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;HTML Output&lt;/h3&gt; 
&lt;p&gt;As an alternative to the &lt;code&gt;writeFile&lt;/code&gt; HTML type, &lt;code&gt;XLSX.utils.sheet_to_html&lt;/code&gt; also produces HTML output. The function takes an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Specify the &lt;code&gt;id&lt;/code&gt; attribute for the &lt;code&gt;TABLE&lt;/code&gt; element&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;editable&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;false&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;If true, set &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; for every TD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Override header (default &lt;code&gt;html body&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;footer&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Override footer (default &lt;code&gt;/body /html&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;For the example sheet:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;gt; console.log(XLSX.utils.sheet_to_html(ws));
// ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;JSON&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;XLSX.utils.sheet_to_json&lt;/code&gt; generates different types of JS objects. The function takes an options argument:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Option Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Default&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;raw&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use raw values (true) or formatted strings (false)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;from WS&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Override Range (see table below)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Control output format (see table below)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dateNF&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;FMT 14&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified date format in string output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;defval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified value in place of null or undefined&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;blankrows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;**&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Include blank lines in the output **&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;raw&lt;/code&gt; only affects cells which have a format code (&lt;code&gt;.z&lt;/code&gt;) field or a formatted text (&lt;code&gt;.w&lt;/code&gt;) field.&lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;header&lt;/code&gt; is specified, the first row is considered a data row; if &lt;code&gt;header&lt;/code&gt; is not specified, the first row is the header row and not considered data.&lt;/li&gt; 
 &lt;li&gt;When &lt;code&gt;header&lt;/code&gt; is not specified, the conversion will automatically disambiguate header entries by affixing &lt;code&gt;_&lt;/code&gt; and a count starting at &lt;code&gt;1&lt;/code&gt;. For example, if three columns have header &lt;code&gt;foo&lt;/code&gt; the output fields are &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;foo_1&lt;/code&gt;, &lt;code&gt;foo_2&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;null&lt;/code&gt; values are returned when &lt;code&gt;raw&lt;/code&gt; is true but are skipped when false.&lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;defval&lt;/code&gt; is not specified, null and undefined values are skipped normally. If specified, all null and undefined points will be filled with &lt;code&gt;defval&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;When &lt;code&gt;header&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, the default is to generate blank rows. &lt;code&gt;blankrows&lt;/code&gt; must be set to &lt;code&gt;false&lt;/code&gt; to skip blank rows.&lt;/li&gt; 
 &lt;li&gt;When &lt;code&gt;header&lt;/code&gt; is not &lt;code&gt;1&lt;/code&gt;, the default is to skip blank rows. &lt;code&gt;blankrows&lt;/code&gt; must be true to generate blank rows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;range&lt;/code&gt; is expected to be one of:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(number)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use worksheet range but set starting row to the value&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(string)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified range (A1-style bounded range string)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(default)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use worksheet range (&lt;code&gt;ws[&#39;!ref&#39;]&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;code&gt;header&lt;/code&gt; is expected to be one of:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Generate an array of arrays (&quot;2D Array&quot;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;&quot;A&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Row object keys are literal column labels&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;array of strings&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Use specified strings as keys in row objects&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;(default)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Read and disambiguate first row as keys&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If header is not &lt;code&gt;1&lt;/code&gt;, the row object will contain the non-enumerable property &lt;code&gt;__rowNum__&lt;/code&gt; that represents the row of the sheet corresponding to the entry.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Examples&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;For the example sheet:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;gt; XLSX.utils.sheet_to_json(ws);
[ { S: 1, h: 2, e: 3, e_1: 4, t: 5, J: 6, S_1: 7 },
  { S: 2, h: 3, e: 4, e_1: 5, t: 6, J: 7, S_1: 8 } ]

&amp;gt; XLSX.utils.sheet_to_json(ws, {header:&quot;A&quot;});
[ { A: &#39;S&#39;, B: &#39;h&#39;, C: &#39;e&#39;, D: &#39;e&#39;, E: &#39;t&#39;, F: &#39;J&#39;, G: &#39;S&#39; },
  { A: &#39;1&#39;, B: &#39;2&#39;, C: &#39;3&#39;, D: &#39;4&#39;, E: &#39;5&#39;, F: &#39;6&#39;, G: &#39;7&#39; },
  { A: &#39;2&#39;, B: &#39;3&#39;, C: &#39;4&#39;, D: &#39;5&#39;, E: &#39;6&#39;, F: &#39;7&#39;, G: &#39;8&#39; } ]

&amp;gt; XLSX.utils.sheet_to_json(ws, {header:[&quot;A&quot;,&quot;E&quot;,&quot;I&quot;,&quot;O&quot;,&quot;U&quot;,&quot;6&quot;,&quot;9&quot;]});
[ { &#39;6&#39;: &#39;J&#39;, &#39;9&#39;: &#39;S&#39;, A: &#39;S&#39;, E: &#39;h&#39;, I: &#39;e&#39;, O: &#39;e&#39;, U: &#39;t&#39; },
  { &#39;6&#39;: &#39;6&#39;, &#39;9&#39;: &#39;7&#39;, A: &#39;1&#39;, E: &#39;2&#39;, I: &#39;3&#39;, O: &#39;4&#39;, U: &#39;5&#39; },
  { &#39;6&#39;: &#39;7&#39;, &#39;9&#39;: &#39;8&#39;, A: &#39;2&#39;, E: &#39;3&#39;, I: &#39;4&#39;, O: &#39;5&#39;, U: &#39;6&#39; } ]

&amp;gt; XLSX.utils.sheet_to_json(ws, {header:1});
[ [ &#39;S&#39;, &#39;h&#39;, &#39;e&#39;, &#39;e&#39;, &#39;t&#39;, &#39;J&#39;, &#39;S&#39; ],
  [ &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39; ],
  [ &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39; ] ]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Example showing the effect of &lt;code&gt;raw&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;gt; ws[&#39;A2&#39;].w = &quot;3&quot;;                          // set A2 formatted string value

&amp;gt; XLSX.utils.sheet_to_json(ws, {header:1, raw:false});
[ [ &#39;S&#39;, &#39;h&#39;, &#39;e&#39;, &#39;e&#39;, &#39;t&#39;, &#39;J&#39;, &#39;S&#39; ],
  [ &#39;3&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39; ],     // &amp;lt;-- A2 uses the formatted string
  [ &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39; ] ]

&amp;gt; XLSX.utils.sheet_to_json(ws, {header:1});
[ [ &#39;S&#39;, &#39;h&#39;, &#39;e&#39;, &#39;e&#39;, &#39;t&#39;, &#39;J&#39;, &#39;S&#39; ],
  [ 1, 2, 3, 4, 5, 6, 7 ],                   // &amp;lt;-- A2 uses the raw value
  [ 2, 3, 4, 5, 6, 7, 8 ] ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;File Formats&lt;/h2&gt; 
&lt;p&gt;Despite the library name &lt;code&gt;xlsx&lt;/code&gt;, it supports numerous spreadsheet file formats:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Format&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Read&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Write&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Excel Worksheet/Workbook Formats&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;:-----:&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;:-----:&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2007+ XML Formats (XLSX/XLSM)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2007+ Binary Format (XLSB BIFF12)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2003-2004 XML Format (XML &quot;SpreadsheetML&quot;)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 97-2004 (XLS BIFF8)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 5.0/95 (XLS BIFF5)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 4.0 (XLS/XLW BIFF4)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 3.0 (XLS BIFF3)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2.0/2.1 (XLS BIFF2)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Excel Supported Text Formats&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;:-----:&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;:-----:&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Delimiter-Separated Values (CSV/TXT)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Data Interchange Format (DIF)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Symbolic Link (SYLK/SLK)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Lotus Formatted Text (PRN)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;UTF-16 Unicode Text (TXT)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Other Workbook/Worksheet Formats&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;:-----:&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;:-----:&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;OpenDocument Spreadsheet (ODS)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Flat XML ODF Spreadsheet (FODS)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Uniform Office Format Spreadsheet (Ê†áÊñáÈÄö UOS1/UOS2)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;dBASE II/III/IV / Visual FoxPro (DBF)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Lotus 1-2-3 (WKS/WK1/WK2/WK3/WK4/123)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Quattro Pro Spreadsheet (WQ1/WQ2/WB1/WB2/WB3/QPW)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Other Common Spreadsheet Output Formats&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;:-----:&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;:-----:&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;HTML Tables&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Rich Text Format tables (RTF)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Ethercalc Record Format (ETH)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;‚úî&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Features not supported by a given file format will not be written. Formats with range limits will be silently truncated:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Format&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Last Cell&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Max Cols&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Max Rows&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2007+ XML Formats (XLSX/XLSM)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;XFD1048576&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;16384&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1048576&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2007+ Binary Format (XLSB BIFF12)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;XFD1048576&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;16384&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;1048576&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 97-2004 (XLS BIFF8)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;IV65536&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;256&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;65536&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 5.0/95 (XLS BIFF5)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;IV16384&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;256&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;16384&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 4.0 (XLS BIFF4)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;IV16384&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;256&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;16384&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 3.0 (XLS BIFF3)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;IV16384&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;256&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;16384&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Excel 2.0/2.1 (XLS BIFF2)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;IV16384&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;256&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;16384&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Excel 2003 SpreadsheetML range limits are governed by the version of Excel and are not enforced by the writer.&lt;/p&gt; 
&lt;h3&gt;Excel 2007+ XML (XLSX/XLSM)&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;XLSX and XLSM files are ZIP containers containing a series of XML files in accordance with the Open Packaging Conventions (OPC). The XLSM format, almost identical to XLSX, is used for files containing macros.&lt;/p&gt; 
 &lt;p&gt;The format is standardized in ECMA-376 and later in ISO/IEC 29500. Excel does not follow the specification, and there are additional documents discussing how Excel deviates from the specification.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Excel 2.0-95 (BIFF2/BIFF3/BIFF4/BIFF5)&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;BIFF 2/3 XLS are single-sheet streams of binary records. Excel 4 introduced the concept of a workbook (&lt;code&gt;XLW&lt;/code&gt; files) but also had single-sheet &lt;code&gt;XLS&lt;/code&gt; format. The structure is largely similar to the Lotus 1-2-3 file formats. BIFF5/8/12 extended the format in various ways but largely stuck to the same record format.&lt;/p&gt; 
 &lt;p&gt;There is no official specification for any of these formats. Excel 95 can write files in these formats, so record lengths and fields were determined by writing in all of the supported formats and comparing files. Excel 2016 can generate BIFF5 files, enabling a full suite of file tests starting from XLSX or BIFF2.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Excel 97-2004 Binary (BIFF8)&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;BIFF8 exclusively uses the Compound File Binary container format, splitting some content into streams within the file. At its core, it still uses an extended version of the binary record format from older versions of BIFF.&lt;/p&gt; 
 &lt;p&gt;The &lt;code&gt;MS-XLS&lt;/code&gt; specification covers the basics of the file format, and other specifications expand on serialization of features like properties.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Excel 2003-2004 (SpreadsheetML)&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;Predating XLSX, SpreadsheetML files are simple XML files. There is no official and comprehensive specification, although MS has released documentation on the format. Since Excel 2016 can generate SpreadsheetML files, mapping features is pretty straightforward.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Excel 2007+ Binary (XLSB, BIFF12)&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;Introduced in parallel with XLSX, the XLSB format combines the BIFF architecture with the content separation and ZIP container of XLSX. For the most part nodes in an XLSX sub-file can be mapped to XLSB records in a corresponding sub-file.&lt;/p&gt; 
 &lt;p&gt;The &lt;code&gt;MS-XLSB&lt;/code&gt; specification covers the basics of the file format, and other specifications expand on serialization of features like properties.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Delimiter-Separated Values (CSV/TXT)&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;Excel CSV deviates from RFC4180 in a number of important ways. The generated CSV files should generally work in Excel although they may not work in RFC4180 compatible readers. The parser should generally understand Excel CSV. The writer proactively generates cells for formulae if values are unavailable.&lt;/p&gt; 
 &lt;p&gt;Excel TXT uses tab as the delimiter and code page 1200.&lt;/p&gt; 
 &lt;p&gt;Notes:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Like in Excel, files starting with &lt;code&gt;0x49 0x44 (&quot;ID&quot;)&lt;/code&gt; are treated as Symbolic Link files. Unlike Excel, if the file does not have a valid SYLK header, it will be proactively reinterpreted as CSV. There are some files with semicolon delimiter that align with a valid SYLK file. For the broadest compatibility, all cells with the value of &lt;code&gt;ID&lt;/code&gt; are automatically wrapped in double-quotes.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Other Workbook Formats&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;Support for other formats is generally far XLS/XLSB/XLSX support, due in large part to a lack of publicly available documentation. Test files were produced in the respective apps and compared to their XLS exports to determine structure. The main focus is data extraction.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Lotus 1-2-3 (WKS/WK1/WK2/WK3/WK4/123)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;The Lotus formats consist of binary records similar to the BIFF structure. Lotus did release a specification decades ago covering the original WK1 format. Other features were deduced by producing files and comparing to Excel support.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Quattro Pro (WQ1/WQ2/WB1/WB2/WB3/QPW)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;The Quattro Pro formats use binary records in the same way as BIFF and Lotus. Some of the newer formats (namely WB3 and QPW) use a CFB enclosure just like BIFF8 XLS.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;OpenDocument Spreadsheet (ODS/FODS)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;ODS is an XML-in-ZIP format akin to XLSX while FODS is an XML format akin to SpreadsheetML. Both are detailed in the OASIS standard, but tools like LO/OO add undocumented extensions. The parsers and writers do not implement the full standard, instead focusing on parts necessary to extract and store raw data.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Uniform Office Spreadsheet (UOS1/2)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;UOS is a very similar format, and it comes in 2 varieties corresponding to ODS and FODS respectively. For the most part, the difference between the formats is in the names of tags and attributes.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Other Single-Worksheet Formats&lt;/h3&gt; 
&lt;p&gt;Many older formats supported only one worksheet:&lt;/p&gt; 
&lt;h4&gt;dBASE and Visual FoxPro (DBF)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;DBF is really a typed table format: each column can only hold one data type and each record omits type information. The parser generates a header row and inserts records starting at the second row of the worksheet. The writer makes files compatible with Visual FoxPro extensions.&lt;/p&gt; 
 &lt;p&gt;Multi-file extensions like external memos and tables are currently unsupported, limited by the general ability to read arbitrary files in the web browser. The reader understands DBF Level 7 extensions like DATETIME.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Symbolic Link (SYLK)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;There is no real documentation. All knowledge was gathered by saving files in various versions of Excel to deduce the meaning of fields. Notes:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Plain formulae are stored in the RC form.&lt;/li&gt; 
  &lt;li&gt;Column widths are rounded to integral characters.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h4&gt;Lotus Formatted Text (PRN)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;There is no real documentation, and in fact Excel treats PRN as an output-only file format. Nevertheless we can guess the column widths and reverse-engineer the original layout. Excel&#39;s 240 character width limitation is not enforced.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Data Interchange Format (DIF)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;There is no unified definition. Visicalc DIF differs from Lotus DIF, and both differ from Excel DIF. Where ambiguous, the parser/writer follows the expected behavior from Excel. In particular, Excel extends DIF in incompatible ways:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Since Excel automatically converts numbers-as-strings to numbers, numeric string constants are converted to formulae: &lt;code&gt;&quot;0.3&quot; -&amp;gt; &quot;=&quot;&quot;0.3&quot;&quot;&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;DIF technically expects numeric cells to hold the raw numeric data, but Excel permits formatted numbers (including dates)&lt;/li&gt; 
  &lt;li&gt;DIF technically has no support for formulae, but Excel will automatically convert plain formulae. Array formulae are not preserved.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h4&gt;HTML&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;Excel HTML worksheets include special metadata encoded in styles. For example, &lt;code&gt;mso-number-format&lt;/code&gt; is a localized string containing the number format. Despite the metadata the output is valid HTML, although it does accept bare &lt;code&gt;&amp;amp;&lt;/code&gt; symbols.&lt;/p&gt; 
 &lt;p&gt;The writer adds type metadata to the TD elements via the &lt;code&gt;t&lt;/code&gt; tag. The parser looks for those tags and overrides the default interpretation. For example, text like &lt;code&gt;&amp;lt;td&amp;gt;12345&amp;lt;/td&amp;gt;&lt;/code&gt; will be parsed as numbers but &lt;code&gt;&amp;lt;td t=&quot;s&quot;&amp;gt;12345&amp;lt;/td&amp;gt;&lt;/code&gt; will be parsed as text.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Rich Text Format (RTF)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;Excel RTF worksheets are stored in clipboard when copying cells or ranges from a worksheet. The supported codes are a subset of the Word RTF support.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Ethercalc Record Format (ETH)&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;a href=&quot;https://ethercalc.net/&quot;&gt;Ethercalc&lt;/a&gt; is an open source web spreadsheet powered by a record format reminiscent of SYLK wrapped in a MIME multi-part message.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;h3&gt;Node&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;make test&lt;/code&gt; will run the node-based tests. By default it runs tests on files in every supported format. To test a specific file type, set &lt;code&gt;FMTS&lt;/code&gt; to the format you want to test. Feature-specific tests are available with &lt;code&gt;make test_misc&lt;/code&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ make test_misc   # run core tests
$ make test        # run full tests
$ make test_xls    # only use the XLS test files
$ make test_xlsx   # only use the XLSX test files
$ make test_xlsb   # only use the XLSB test files
$ make test_xml    # only use the XML test files
$ make test_ods    # only use the ODS test files
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To enable all errors, set the environment variable &lt;code&gt;WTF=1&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ make test        # run full tests
$ WTF=1 make test  # enable all error messages
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;code&gt;flow&lt;/code&gt; and &lt;code&gt;eslint&lt;/code&gt; checks are available:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ make lint        # eslint checks
$ make flow        # make lint + Flow checking
$ make tslint      # check TS definitions
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;The core in-browser tests are available at &lt;code&gt;tests/index.html&lt;/code&gt; within this repo. Start a local server and navigate to that directory to run the tests. &lt;code&gt;make ctestserv&lt;/code&gt; will start a server on port 8000.&lt;/p&gt; 
 &lt;p&gt;&lt;code&gt;make ctest&lt;/code&gt; will generate the browser fixtures. To add more files, edit the &lt;code&gt;tests/fixtures.lst&lt;/code&gt; file and add the paths.&lt;/p&gt; 
 &lt;p&gt;To run the full in-browser tests, clone the repo for &lt;a href=&quot;https://github.com/SheetJS/SheetJS.github.io&quot;&gt;&lt;code&gt;oss.sheetjs.com&lt;/code&gt;&lt;/a&gt; and replace the &lt;code&gt;xlsx.js&lt;/code&gt; file (then open a browser window and go to &lt;code&gt;stress.html&lt;/code&gt;):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cp xlsx.js ../SheetJS.github.io
$ cd ../SheetJS.github.io
$ simplehttpserver # or &quot;python -mSimpleHTTPServer&quot; or &quot;serve&quot;
$ open -a Chromium.app http://localhost:8000/stress.html
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Tested Environments&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;NodeJS &lt;code&gt;0.8&lt;/code&gt;, &lt;code&gt;0.10&lt;/code&gt;, &lt;code&gt;0.12&lt;/code&gt;, &lt;code&gt;4.x&lt;/code&gt;, &lt;code&gt;5.x&lt;/code&gt;, &lt;code&gt;6.x&lt;/code&gt;, &lt;code&gt;7.x&lt;/code&gt;, &lt;code&gt;8.x&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;IE 6/7/8/9/10/11 (IE 6-9 require shims)&lt;/li&gt; 
  &lt;li&gt;Chrome 24+ (including Android 4.0+)&lt;/li&gt; 
  &lt;li&gt;Safari 6+ (iOS and Desktop)&lt;/li&gt; 
  &lt;li&gt;Edge 13+, FF 18+, and Opera 12+&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Tests utilize the mocha testing framework.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://saucelabs.com/u/sheetjs&quot;&gt;https://saucelabs.com/u/sheetjs&lt;/a&gt; for XLS* modules using Sauce Labs&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The test suite also includes tests for various time zones. To change the timezone locally, set the TZ environment variable:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ env TZ=&quot;Asia/Kolkata&quot; WTF=1 make test_misc
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Test Files&lt;/h3&gt; 
&lt;p&gt;Test files are housed in &lt;a href=&quot;https://github.com/SheetJS/test_files&quot;&gt;another repo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Running &lt;code&gt;make init&lt;/code&gt; will refresh the &lt;code&gt;test_files&lt;/code&gt; submodule and get the files. Note that this requires &lt;code&gt;svn&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;hg&lt;/code&gt; and other commands that may not be available. If &lt;code&gt;make init&lt;/code&gt; fails, please download the latest version of the test files snapshot from &lt;a href=&quot;https://github.com/SheetJS/test_files/releases&quot;&gt;the repo&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Latest Snapshot&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;Latest test files snapshot: &lt;a href=&quot;http://github.com/SheetJS/test_files/releases/download/20170409/test_files.zip&quot;&gt;http://github.com/SheetJS/test_files/releases/download/20170409/test_files.zip&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;(download and unzip to the &lt;code&gt;test_files&lt;/code&gt; subdirectory)&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Due to the precarious nature of the Open Specifications Promise, it is very important to ensure code is cleanroom. &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/CONTRIBUTING.md&quot;&gt;Contribution Notes&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;File organization&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;p&gt;At a high level, the final script is a concatenation of the individual files in the &lt;code&gt;bits&lt;/code&gt; folder. Running &lt;code&gt;make&lt;/code&gt; should reproduce the final output on all platforms. The README is similarly split into bits in the &lt;code&gt;docbits&lt;/code&gt; folder.&lt;/p&gt; 
 &lt;p&gt;Folders:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;left&quot;&gt;folder&lt;/th&gt; 
    &lt;th align=&quot;left&quot;&gt;contents&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bits&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;raw source files that make up the final script&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;docbits&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;raw markdown files that make up &lt;code&gt;README.md&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;bin&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;server-side bin scripts (&lt;code&gt;xlsx.njs&lt;/code&gt;)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;dist&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;dist files for web browsers and nonstandard JS environments&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;demos&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;demo projects for platforms like ExtendScript and Webpack&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;tests&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;browser tests (run &lt;code&gt;make ctest&lt;/code&gt; to rebuild)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;typescript definitions and tests&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;misc&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;miscellaneous supporting scripts&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;test_files&lt;/code&gt;&lt;/td&gt; 
    &lt;td align=&quot;left&quot;&gt;test files (pulled from the test files repository)&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;After cloning the repo, running &lt;code&gt;make help&lt;/code&gt; will display a list of commands.&lt;/p&gt; 
&lt;h3&gt;OSX/Linux&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;The &lt;code&gt;xlsx.js&lt;/code&gt; file is constructed from the files in the &lt;code&gt;bits&lt;/code&gt; subdirectory. The build script (run &lt;code&gt;make&lt;/code&gt;) will concatenate the individual bits to produce the script. Before submitting a contribution, ensure that running make will produce the &lt;code&gt;xlsx.js&lt;/code&gt; file exactly. The simplest way to test is to add the script:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git add xlsx.js
$ make clean
$ make
$ git diff xlsx.js
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To produce the dist files, run &lt;code&gt;make dist&lt;/code&gt;. The dist files are updated in each version release and &lt;em&gt;should not be committed between versions&lt;/em&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;The included &lt;code&gt;make.cmd&lt;/code&gt; script will build &lt;code&gt;xlsx.js&lt;/code&gt; from the &lt;code&gt;bits&lt;/code&gt; directory. Building is as simple as:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;&amp;gt; make
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To prepare development environment:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;&amp;gt; make init
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The full list of commands available in Windows are displayed in &lt;code&gt;make help&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;make init -- install deps and global modules
make lint -- run eslint linter
make test -- run mocha test suite
make misc -- run smaller test suite
make book -- rebuild README and summary
make help -- display this message
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;As explained in &lt;a href=&quot;https://raw.githubusercontent.com/SheetJS/sheetjs/master/#test-files&quot;&gt;Test Files&lt;/a&gt;, on Windows the release ZIP file must be downloaded and extracted. If Bash on Windows is available, it is possible to run the OSX/Linux workflow. The following steps prepares the environment:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install support programs for the build and test commands
sudo apt-get install make git subversion mercurial

# Install nodejs and NPM within the WSL
wget -qO- https://deb.nodesource.com/setup_8.x | sudo bash
sudo apt-get install nodejs

# Install dev dependencies
sudo npm install -g mocha voc blanket xlsjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Tests&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;(click to show)&lt;/summary&gt; 
 &lt;p&gt;The &lt;code&gt;test_misc&lt;/code&gt; target (&lt;code&gt;make test_misc&lt;/code&gt; on Linux/OSX / &lt;code&gt;make misc&lt;/code&gt; on Windows) runs the targeted feature tests. It should take 5-10 seconds to perform feature tests without testing against the entire test battery. New features should be accompanied with tests for the relevant file formats and features.&lt;/p&gt; 
 &lt;p&gt;For tests involving the read side, an appropriate feature test would involve reading an existing file and checking the resulting workbook object. If a parameter is involved, files should be read with different values to verify that the feature is working as expected.&lt;/p&gt; 
 &lt;p&gt;For tests involving a new write feature which can already be parsed, appropriate feature tests would involve writing a workbook with the feature and then opening and verifying that the feature is preserved.&lt;/p&gt; 
 &lt;p&gt;For tests involving a new write feature without an existing read ability, please add a feature test to the kitchen sink &lt;code&gt;tests/write.js&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Please consult the attached LICENSE file for details. All rights not explicitly granted by the Apache 2.0 License are reserved by the Original Author.&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;OSP-covered Specifications&lt;/b&gt; (click to show)&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;MS-CFB&lt;/code&gt;: Compound File Binary File Format&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-CTXLS&lt;/code&gt;: Excel Custom Toolbar Binary File Format&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-EXSPXML3&lt;/code&gt;: Excel Calculation Version 2 Web Service XML Schema&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-ODATA&lt;/code&gt;: Open Data Protocol (OData)&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-ODRAW&lt;/code&gt;: Office Drawing Binary File Format&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-ODRAWXML&lt;/code&gt;: Office Drawing Extensions to Office Open XML Structure&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-OE376&lt;/code&gt;: Office Implementation Information for ECMA-376 Standards Support&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-OFFCRYPTO&lt;/code&gt;: Office Document Cryptography Structure&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-OI29500&lt;/code&gt;: Office Implementation Information for ISO/IEC 29500 Standards Support&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-OLEDS&lt;/code&gt;: Object Linking and Embedding (OLE) Data Structures&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-OLEPS&lt;/code&gt;: Object Linking and Embedding (OLE) Property Set Data Structures&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-OODF3&lt;/code&gt;: Office Implementation Information for ODF 1.2 Standards Support&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-OSHARED&lt;/code&gt;: Office Common Data Types and Objects Structures&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-OVBA&lt;/code&gt;: Office VBA File Format Structure&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-XLDM&lt;/code&gt;: Spreadsheet Data Model File Format&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-XLS&lt;/code&gt;: Excel Binary File Format (.xls) Structure Specification&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-XLSB&lt;/code&gt;: Excel (.xlsb) Binary File Format&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;MS-XLSX&lt;/code&gt;: Excel (.xlsx) Extensions to the Office Open XML SpreadsheetML File Format&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;XLS&lt;/code&gt;: Microsoft Office Excel 97-2007 Binary File Format Specification&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;RTF&lt;/code&gt;: Rich Text Format&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;ul&gt; 
 &lt;li&gt;ISO/IEC 29500:2012(E) &quot;Information technology ‚Äî Document description and processing languages ‚Äî Office Open XML File Formats&quot;&lt;/li&gt; 
 &lt;li&gt;Open Document Format for Office Applications Version 1.2 (29 September 2011)&lt;/li&gt; 
 &lt;li&gt;Worksheet File Format (From Lotus) December 1984&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>sudheerj/javascript-interview-questions</title>
      <link>https://github.com/sudheerj/javascript-interview-questions</link>
      <description>&lt;p&gt;List of 1000 JavaScript Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Interview Questions &amp;amp; Answers&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click &lt;span&gt;‚≠ê&lt;/span&gt;if you like the project. Pull Requests are highly appreciated. Follow me &lt;a href=&quot;https://twitter.com/SudheerJonna&quot;&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Go to &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#coding-exercise&quot;&gt;Coding Exercise&lt;/a&gt; for coding specific questions&lt;/p&gt; 
&lt;h2&gt;Download PDF/Epub formats&lt;/h2&gt; 
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href=&quot;https://github.com/sudheerj/JavaScript-Interview-Questions/actions&quot;&gt;actions tab&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://zerotomastery.io/?utm_source=github&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=javascript-interview-questions&quot;&gt; &lt;img src=&quot;https://process.fs.teachablecdn.com/ADNupMnWyR7kCWRvm76Laz/resize=height:70/https://www.filepicker.io/api/file/AKYtjj5SSGyJuyZrkAB2&quot; alt=&quot;ZTM Logo&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt; &lt;/p&gt;
&lt;ol&gt; 
 &lt;li&gt;Take this &lt;a href=&quot;https://links.zerotomastery.io/jsp_sudheer&quot;&gt;JavaScript Projects&lt;/a&gt; course to go from a JavaScript beginner to confidently building your own projects&lt;/li&gt; 
 &lt;li&gt;Take this &lt;a href=&quot;https://links.zerotomastery.io/mci_sudheer2&quot;&gt;coding interview bootcamp&lt;/a&gt; if you‚Äôre serious about getting hired and don‚Äôt have a CS degree&lt;/li&gt; 
 &lt;li&gt;Take this &lt;a href=&quot;https://links.zerotomastery.io/ajs_sudheer&quot;&gt;Advanced JavaScript Course&lt;/a&gt; to learn advanced JS concepts and become a top JS developer&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;No.&lt;/th&gt; 
   &lt;th&gt;Questions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-possible-ways-to-create-objects-in-javascript&quot;&gt;What are the possible ways to create objects in JavaScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-prototype-chain&quot;&gt;What is prototype chain&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-call-apply-and-bind&quot;&gt;What is the difference between Call, Apply and Bind&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-json-and-its-common-operations&quot;&gt;What is JSON and its common operations&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-array-slice-method&quot;&gt;What is the purpose of the array slice method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-array-splice-method&quot;&gt;What is the purpose of the array splice method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-slice-and-splice&quot;&gt;What is the difference between slice and splice&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-object-and-map&quot;&gt;How do you compare Object and Map&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between--and--operators&quot;&gt;What is the difference between == and === operators&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-lambda-or-arrow-functions&quot;&gt;What are lambda or arrow functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-first-class-function&quot;&gt;What is a first class function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-first-order-function&quot;&gt;What is a first order function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-higher-order-function&quot;&gt;What is a higher order function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-unary-function&quot;&gt;What is a unary function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-currying-function&quot;&gt;What is the currying function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-pure-function&quot;&gt;What is a pure function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-the-let-keyword&quot;&gt;What is the purpose of the let keyword&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-let-and-var&quot;&gt;What is the difference between let and var&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-reason-to-choose-the-name-let-as-a-keyword&quot;&gt;What is the reason to choose the name let as a keyword&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-redeclare-variables-in-switch-block-without-an-error&quot;&gt;How do you redeclare variables in switch block without an error&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-temporal-dead-zone&quot;&gt;What is the Temporal Dead Zone&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-iifeimmediately-invoked-function-expression&quot;&gt;What is IIFE(Immediately Invoked Function Expression)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-benefit-of-using-modules&quot;&gt;What is the benefit of using modules&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-memoization&quot;&gt;What is memoization&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-hoisting&quot;&gt;What is Hoisting&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-classes-in-es6&quot;&gt;What are classes in ES6&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-closures&quot;&gt;What are closures&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-modules&quot;&gt;What are modules&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-modules&quot;&gt;Why do you need modules&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-scope-in-javascript&quot;&gt;What is scope in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;31&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-service-worker&quot;&gt;What is a service worker&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;32&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-manipulate-dom-using-a-service-worker&quot;&gt;How do you manipulate DOM using a service worker&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;33&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-reuse-information-across-service-worker-restarts&quot;&gt;How do you reuse information across service worker restarts&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;34&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-indexeddb&quot;&gt;What is IndexedDB&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;35&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-web-storage&quot;&gt;What is web storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;36&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-post-message&quot;&gt;What is a post message&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;37&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-cookie&quot;&gt;What is a cookie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;38&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-a-cookie&quot;&gt;Why do you need a Cookie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;39&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-options-in-a-cookie&quot;&gt;What are the options in a cookie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;40&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-delete-a-cookie&quot;&gt;How do you delete a cookie&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;41&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-are-the-differences-between-cookie-local-storage-and-session-storage&quot;&gt;What are the differences between cookie, local storage and session storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;42&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-main-difference-between-localstorage-and-sessionstorage&quot;&gt;What is the main difference between localStorage and sessionStorage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;43&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-access-web-storage&quot;&gt;How do you access web storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;44&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-methods-available-on-session-storage&quot;&gt;What are the methods available on session storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;45&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-storage-event-and-its-event-handler&quot;&gt;What is a storage event and its event handler&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;46&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-web-storage&quot;&gt;Why do you need web storage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;47&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-web-storage-browser-support&quot;&gt;How do you check web storage browser support&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;48&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-web-workers-browser-support&quot;&gt;How do you check web workers browser support&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;49&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-of-web-worker&quot;&gt;Give an example of web worker&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;50&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-restrictions-of-web-workers-on-dom&quot;&gt;What are the restrictions of web workers on DOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;51&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-promise&quot;&gt;What is a promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;52&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-a-promise&quot;&gt;Why do you need a promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;53&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-three-states-of-promise&quot;&gt;What are the three states of promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;54&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-callback-function&quot;&gt;What is a callback function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;55&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-we-need-callbacks&quot;&gt;Why do we need callbacks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;56&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-callback-hell&quot;&gt;What is a callback hell&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;57&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-server-sent-events&quot;&gt;What is server-sent events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;58&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-receive-server-sent-event-notifications&quot;&gt;How do you receive server-sent event notifications&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;59&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-browser-support-for-server-sent-events&quot;&gt;How do you check browser support for server-sent events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;60&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-events-available-for-server-sent-events&quot;&gt;What are the events available for server sent events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;61&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-main-rules-of-promise&quot;&gt;What are the main rules of promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;62&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-callback-in-callback&quot;&gt;What is callback in callback&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;63&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-promise-chaining&quot;&gt;What is promise chaining&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-promise.all&quot;&gt;What is promise.all&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;65&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-race-method-in-promise&quot;&gt;What is the purpose of race method in promise&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;66&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-strict-mode-in-javascript&quot;&gt;What is a strict mode in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;67&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-strict-mode&quot;&gt;Why do you need strict mode&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;68&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-declare-strict-mode&quot;&gt;How do you declare strict mode&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;69&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-double-exclamation&quot;&gt;What is the purpose of double exclamation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;70&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-delete-operator&quot;&gt;What is the purpose of delete operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;71&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-typeof-operator&quot;&gt;What is typeof operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;72&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-undefined-property&quot;&gt;What is undefined property&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;73&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-null-value&quot;&gt;What is null value&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;74&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-null-and-undefined&quot;&gt;What is the difference between null and undefined&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;75&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-is-eval&quot;&gt;What is eval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;76&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-window-and-document&quot;&gt;What is the difference between window and document&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;77&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-access-history-in-javascript&quot;&gt;How do you access history in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;78&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-caps-lock-key-turned-on-or-not&quot;&gt;How do you detect caps lock key turned on or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;79&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-isnan&quot;&gt;What is isNaN&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;80&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-undeclared-and-undefined-variables&quot;&gt;What are the differences between undeclared and undefined variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;81&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-global-variables&quot;&gt;What are global variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;82&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-problems-with-global-variables&quot;&gt;What are the problems with global variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;83&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-nan-property&quot;&gt;What is NaN property&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;84&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-isfinite-function&quot;&gt;What is the purpose of isFinite function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;85&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-flow&quot;&gt;What is an event flow&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;86&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-event-bubbling&quot;&gt;What is event bubbling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;87&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-event-capturing&quot;&gt;What is event capturing&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;88&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-submit-a-form-using-javascript&quot;&gt;How do you submit a form using JavaScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;89&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-operating-system-details&quot;&gt;How do you find operating system details&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;90&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-document-load-and-domcontentloaded-events&quot;&gt;What is the difference between document load and DOMContentLoaded events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;91&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-native,-host-and-user-objects&quot;&gt;What is the difference between native, host and user objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;92&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-tools-or-techniques-used-for-debugging-javascript-code&quot;&gt;What are the tools or techniques used for debugging JavaScript code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;93&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-pros-and-cons-of-promises-over-callbacks&quot;&gt;What are the pros and cons of promises over callbacks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;94&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-an-attribute-and-a-property&quot;&gt;What is the difference between an attribute and a property&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;95&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-same-origin-policy&quot;&gt;What is same-origin policy&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;96&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-void-0&quot;&gt;What is the purpose of void 0&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;97&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-a-compiled-or-interpreted-language&quot;&gt;Is JavaScript a compiled or interpreted language&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;98&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-a-case-sensitive-language&quot;&gt;Is JavaScript a case-sensitive language&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;99&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-there-any-relation-between-java-and-javascript&quot;&gt;Is there any relation between Java and JavaScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-events&quot;&gt;What are events&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;101&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#who-created-javascript&quot;&gt;Who created javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;102&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-preventdefault-method&quot;&gt;What is the use of preventDefault method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;103&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-stoppropagation-method&quot;&gt;What is the use of stopPropagation method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;104&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-steps-involved-in-return-false&quot;&gt;What are the steps involved in return false&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;105&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-bom&quot;&gt;What is BOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;106&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-settimeout&quot;&gt;What is the use of setTimeout&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;107&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-use-of-setinterval&quot;&gt;What is the use of setInterval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;108&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-is-javascript-treated-as-single-threaded&quot;&gt;Why is JavaScript treated as Single threaded&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;109&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-delegation&quot;&gt;What is an event delegation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;110&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-ecmascript&quot;&gt;What is ECMAScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;111&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-json&quot;&gt;What is JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;112&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-syntax-rules-of-json&quot;&gt;What are the syntax rules of JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;113&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-json-stringify&quot;&gt;What is the purpose JSON stringify&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;114&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-parse-json-string&quot;&gt;How do you parse JSON string&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;115&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-json&quot;&gt;Why do you need JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;116&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-pwas?&quot;&gt;What are PWAs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;117&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-cleartimeout-method&quot;&gt;What is the purpose of clearTimeout method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;118&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-clearinterval-method&quot;&gt;What is the purpose of clearInterval method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;119&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-redirect-new-page-in-javascript&quot;&gt;How do you redirect new page in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;120&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-a-string-contains-a-substring&quot;&gt;How do you check whether a string contains a substring&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;121&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-validate-an-email-in-javascript&quot;&gt;How do you validate an email in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;122&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-current-url-with-javascript&quot;&gt;How do you get the current url with javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;123&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-various-url-properties-of-location-object&quot;&gt;What are the various url properties of location object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;124&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-get-query-string-values-in-javascript&quot;&gt;How do get query string values in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;125&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-if-a-key-exists-in-an-object&quot;&gt;How do you check if a key exists in an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;126&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-loop-through-or-enumerate-javascript-object&quot;&gt;How do you loop through or enumerate javascript object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;127&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-test-for-an-empty-object&quot;&gt;How do you test for an empty object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;128&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-arguments-object&quot;&gt;What is an arguments object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;129&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-first-letter-of-the-string-in-an-uppercase&quot;&gt;How do you make first letter of the string in an uppercase&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;130&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-pros-and-cons-of-for-loop&quot;&gt;What are the pros and cons of for loop&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;131&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-display-the-current-date-in-javascript&quot;&gt;How do you display the current date in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;132&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-two-date-objects&quot;&gt;How do you compare two date objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;133&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-if-a-string-starts-with-another-string&quot;&gt;How do you check if a string starts with another string&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;134&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-trim-a-string-in-javascript&quot;&gt;How do you trim a string in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;135&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-add-a-key-value-pair-in-javascript&quot;&gt;How do you add a key value pair in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;136&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-the-&#39;!--&#39;-notation-represents-a-special-operator&quot;&gt;Is the &#39;!--&#39; notation represents a special operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;137&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-assign-default-values-to-variables&quot;&gt;How do you assign default values to variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;138&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-multiline-strings&quot;&gt;How do you define multiline strings&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;139&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-app-shell-model&quot;&gt;What is an app shell model&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;140&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-we-define-properties-for-functions&quot;&gt;Can we define properties for functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;141&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-way-to-find-the-number-of-parameters-expected-by-a-function&quot;&gt;What is the way to find the number of parameters expected by a function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;142&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-polyfill&quot;&gt;What is a polyfill&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;143&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-break-and-continue-statements&quot;&gt;What are break and continue statements&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;144&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-js-labels&quot;&gt;What are js labels&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;145&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-benefits-of-keeping-declarations-at-the-top&quot;&gt;What are the benefits of keeping declarations at the top&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;146&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-benefits-of-initializing-variables&quot;&gt;What are the benefits of initializing variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;147&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-recommendations-to-create-new-object&quot;&gt;What are the recommendations to create new object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;148&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-json-arrays&quot;&gt;How do you define JSON arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;149&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-generate-random-integers&quot;&gt;How do you generate random integers&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;150&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-you-write-a-random-integers-function-to-print-integers-with-in-a-range&quot;&gt;Can you write a random integers function to print integers with in a range&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;151&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-tree-shaking&quot;&gt;What is tree shaking&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;152&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-need-of-tree-shaking&quot;&gt;What is the need of tree shaking&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;153&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-recommended-to-use-eval&quot;&gt;Is it recommended to use eval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;154&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-regular-expression&quot;&gt;What is a Regular Expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;155&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-string-methods-available-in-regular-expression&quot;&gt;What are the string methods available in Regular expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;156&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-modifiers-in-regular-expression&quot;&gt;What are modifiers in regular expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;157&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-regular-expression-patterns&quot;&gt;What are regular expression patterns&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;158&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-regexp-object&quot;&gt;What is a RegExp object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;159&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-search-a-string-for-a-pattern&quot;&gt;How do you search a string for a pattern&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;160&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-exec-method&quot;&gt;What is the purpose of exec method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;161&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-change-style-of-a-html-element&quot;&gt;How do you change style of a HTML element&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;162&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-would-be-the-result-of-1+2+&#39;3&#39;&quot;&gt;What would be the result of 1+2+&#39;3&#39;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;163&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-debugger-statement&quot;&gt;What is a debugger statement&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;164&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-breakpoints-indebugging&quot;&gt;What is the purpose of breakpoints in debugging&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;165&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-use-reserved-words-as-identifiers&quot;&gt;Can I use reserved words as identifiers&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;166&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-mobile-browser&quot;&gt;How do you detect a mobile browser&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;167&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-mobile-browser-without-regexp&quot;&gt;How do you detect a mobile browser without regexp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;168&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-image-width-and-height-using-js&quot;&gt;How do you get the image width and height using JS&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;169&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-synchronous-http-request&quot;&gt;How do you make synchronous HTTP request&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;170&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-asynchronous-http-request&quot;&gt;How do you make asynchronous HTTP request&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;171&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-convert-date-to-another-timezone-in-javascript&quot;&gt;How do you convert date to another timezone in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;172&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-properties-used-to-get-size-of-window&quot;&gt;What are the properties used to get size of window&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;173&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-conditional-operator-in-javascript&quot;&gt;What is a conditional operator in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;174&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#Can-you-apply-chaining-on-conditional-operator&quot;&gt;Can you apply chaining on conditional operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;175&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-ways-to-execute-javascript-after-page-load&quot;&gt;What are the ways to execute javascript after page load&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;176&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-proto-and-prototype&quot;&gt;What is the difference between proto and prototype&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;177&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-where-do-you-really-need-semicolon&quot;&gt;Give an example where do you really need semicolon&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;178&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-freeze-method&quot;&gt;What is a freeze method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;179&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-freeze-method&quot;&gt;What is the purpose of freeze method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;180&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-i-need-to-use-freeze-method&quot;&gt;Why do I need to use freeze method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;181&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-a-browser-language-preference&quot;&gt;How do you detect a browser language preference&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;182&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-convert-string-to-title-case-with-javascript&quot;&gt;How to convert string to title case with javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;183&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-javascript-disabled-in-the-page&quot;&gt;How do you detect javascript disabled in the page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;184&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-various-operators-supported-by-javascript&quot;&gt;What are various operators supported by javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;185&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-rest-parameter&quot;&gt;What is a rest parameter&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;186&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-you-do-not-use-rest-parameter-as-a-last-argument&quot;&gt;What happens if you do not use rest parameter as a last argument&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;187&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-bitwise-operators-available-in-javascript&quot;&gt;What are the bitwise operators available in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;188&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-spread-operator&quot;&gt;What is a spread operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;189&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-whether-object-is-frozen-or-not&quot;&gt;How do you determine whether object is frozen or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;190&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-two-values-same-or-not-using-object&quot;&gt;How do you determine two values same or not using object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;191&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-using-object-is-method&quot;&gt;What is the purpose of using object is method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;192&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-copy-properties-from-one-object-to-other&quot;&gt;How do you copy properties from one object to other&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;193&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-applications-of-assign-method&quot;&gt;What are the applications of assign method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;194&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-proxy-object&quot;&gt;What is a proxy object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;195&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-seal-method&quot;&gt;What is the purpose of seal method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;196&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-applications-of-seal-method&quot;&gt;What are the applications of seal method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;197&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-freeze-and-seal-methods&quot;&gt;What are the differences between freeze and seal methods&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;198&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-determine-if-an-object-is-sealed-or-not&quot;&gt;How do you determine if an object is sealed or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;199&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-enumerable-key-and-value-pairs&quot;&gt;How do you get enumerable key and value pairs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;200&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-main-difference-between-object.values-and-object.entries-method&quot;&gt;What is the main difference between Object.values and Object.entries method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;201&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-can-you-get-the-list-of-keys-of-any-object&quot;&gt;How can you get the list of keys of any object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;202&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-object-with-prototype&quot;&gt;How do you create an object with prototype&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;203&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-weakset&quot;&gt;What is a WeakSet&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;204&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-weakset-and-set&quot;&gt;What are the differences between WeakSet and Set&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;205&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-the-collection-of-methods-available-on-weakset&quot;&gt;List down the collection of methods available on WeakSet&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;206&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-weakmap&quot;&gt;What is a WeakMap&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;207&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-weakmap-and-map&quot;&gt;What are the differences between WeakMap and Map&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;208&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-the-collection-of-methods-available-on-weakmap&quot;&gt;List down the collection of methods available on WeakMap&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;209&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-uneval&quot;&gt;What is the purpose of uneval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;210&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-encode-an-url&quot;&gt;How do you encode an URL&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;211&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-decode-an-url&quot;&gt;How do you decode an URL&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;212&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-print-the-contents-of-web-page&quot;&gt;How do you print the contents of web page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;213&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-uneval-and-eval&quot;&gt;What is the difference between uneval and eval&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;214&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-anonymous-function&quot;&gt;What is an anonymous function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;215&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-precedence-order-between-local-and-global-variables&quot;&gt;What is the precedence order between local and global variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;216&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-javascript-accessors&quot;&gt;What are javascript accessors&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;217&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-property-on-object-constructor&quot;&gt;How do you define property on Object constructor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;218&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-get-and-defineproperty&quot;&gt;What is the difference between get and defineProperty&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;219&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-getters-and-setters&quot;&gt;What are the advantages of Getters and Setters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;220&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-add-getters-and-setters-using-defineproperty-method&quot;&gt;Can I add getters and setters using defineProperty method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;221&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-switch-case&quot;&gt;What is the purpose of switch-case&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;222&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-conventions-to-be-followed-for-the-usage-of-swtich-case&quot;&gt;What are the conventions to be followed for the usage of swtich case&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;223&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-primitive-data-types&quot;&gt;What are primitive data types&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;224&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-access-object-properties&quot;&gt;What are the different ways to access object properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;225&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-function-parameter-rules&quot;&gt;What are the function parameter rules&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;226&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-error-object&quot;&gt;What is an error object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;227&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#when-you-get-a-syntax-error&quot;&gt;When you get a syntax error&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;228&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-error-names-from-error-object&quot;&gt;What are the different error names from error object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;229&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-various-statements-in-error-handling&quot;&gt;What are the various statements in error handling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;230&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-two-types-of-loops-in-javascript&quot;&gt;What are the two types of loops in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;231&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-nodejs&quot;&gt;What is nodejs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;232&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-intl-object&quot;&gt;What is an Intl object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;233&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-language-specific-date-and-time-formatting&quot;&gt;How do you perform language specific date and time formatting&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;234&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-iterator&quot;&gt;What is an Iterator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;235&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-does-synchronous-iteration-works&quot;&gt;How does synchronous iteration works&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;236&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-loop&quot;&gt;What is an event loop&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;237&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-call-stack&quot;&gt;What is call stack&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;238&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-queue&quot;&gt;What is an event queue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;239&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-decorator&quot;&gt;What is a decorator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;240&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-properties-of-intl-object&quot;&gt;What are the properties of Intl object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;241&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-unary-operator&quot;&gt;What is an Unary operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;242&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-sort-elements-in-an-array&quot;&gt;How do you sort elements in an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;243&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-comparefunction-while-sorting-arrays&quot;&gt;What is the purpose of compareFunction while sorting arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;244&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-reversing-an-array&quot;&gt;How do you reversing an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;245&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-min-and-max-value-in-an-array&quot;&gt;How do you find min and max value in an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;246&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-find-min-and-max-values-without--math-functions&quot;&gt;How do you find min and max values without Math functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;247&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-empty-statement-and-purpose-of-it&quot;&gt;What is an empty statement and purpose of it&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;248&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-meta-data-of-a-module&quot;&gt;How do you get meta data of a module&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;249&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-comma-operator&quot;&gt;What is a comma operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;250&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-advantage-of-a-comma-operator&quot;&gt;What is the advantage of a comma operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;251&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-typescript&quot;&gt;What is typescript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;252&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-javascript-and-typescript&quot;&gt;What are the differences between javascript and typescript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;253&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-typescript-over-javascript&quot;&gt;What are the advantages of typescript over javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;254&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-object-initializer&quot;&gt;What is an object initializer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;255&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-constructor-method&quot;&gt;What is a constructor method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;256&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-you-write-constructor-more-than-once-in-a-class&quot;&gt;What happens if you write constructor more than once in a class&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;257&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-call-the-constructor-of-a-parent-class&quot;&gt;How do you call the constructor of a parent class&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;258&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-prototype-of-an-object&quot;&gt;How do you get the prototype of an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;259&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-i-pass-string-type-for-getprototype-method&quot;&gt;What happens If I pass string type for getPrototype method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;260&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-set-prototype-of-one-object-to-another&quot;&gt;How do you set prototype of one object to another&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;261&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-an-object-can-be-extendable-or-not&quot;&gt;How do you check whether an object can be extendable or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;262&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-prevent-an-object-to-extend&quot;&gt;How do you prevent an object to extend&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;263&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-make-an-object-non-extensible&quot;&gt;What are the different ways to make an object non-extensible&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;264&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-multiple-properties-on-an-object&quot;&gt;How do you define multiple properties on an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;265&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-mean-in-javascript&quot;&gt;What is MEAN in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;266&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-obfuscation-in-javascript&quot;&gt;What Is Obfuscation in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;267&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-obfuscation&quot;&gt;Why do you need Obfuscation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;268&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-minification&quot;&gt;What is Minification&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;269&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-minification&quot;&gt;What are the advantages of minification&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;270&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-obfuscation-and-encryption&quot;&gt;What are the differences between Obfuscation and Encryption&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;271&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-common-tools-used-for-minification&quot;&gt;What are the common tools used for minification&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;272&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-form-validation-using-javascript&quot;&gt;How do you perform form validation using javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;273&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-perform-form-validation-without-javascript&quot;&gt;How do you perform form validation without javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;274&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-dom-methods-available-for-constraint-validation&quot;&gt;What are the DOM methods available for constraint validation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;275&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-available-constraint-validation-dom-properties&quot;&gt;What are the available constraint validation DOM properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;276&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-list-of-validity-properties&quot;&gt;What are the list of validity properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;277&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#give-an-example-usage-of-rangeoverflow-property&quot;&gt;Give an example usage of rangeOverflow property&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;278&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-enums-feature-available-in-javascript&quot;&gt;Is enums feature available in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;279&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#What-is-an-enum&quot;&gt;What is an enum&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;280&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-list-all-properties-of-an-object&quot;&gt;How do you list all properties of an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;281&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-property-descriptors-of-an-object&quot;&gt;How do you get property descriptors of an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;282&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-attributes-provided-by-a-property-descriptor&quot;&gt;What are the attributes provided by a property descriptor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;283&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-extend-classes&quot;&gt;How do you extend classes&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;284&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-i-modify-the-url-without-reloading-the-page&quot;&gt;How do I modify the url without reloading the page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;285&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-whether-an-array-includes-a-particular-value-or-not&quot;&gt;How do you check whether an array includes a particular value or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;286&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-compare-scalar-arrays&quot;&gt;How do you compare scalar arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;287&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-get-the-value-from-get-parameters&quot;&gt;How to get the value from get parameters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;288&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-print-numbers-with-commas-as-thousand-separators&quot;&gt;How do you print numbers with commas as thousand separators&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;289&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-java-and-javascript&quot;&gt;What is the difference between java and javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;290&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#does-javascript-supports-namespace&quot;&gt;Does javascript supports namespace&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;291&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-declare-namespace&quot;&gt;How do you declare namespace&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;292&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-invoke-javascript-code-in-an-iframe-from-parent-page&quot;&gt;How do you invoke javascript code in an iframe from parent page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;293&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-get-the-timezone-offset-from-date&quot;&gt;How do get the timezone offset from date&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;294&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-load-css-and-js-files-dynamically&quot;&gt;How do you load CSS and JS files dynamically&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;295&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-methods-to-find-html-elements-in-dom&quot;&gt;What are the different methods to find HTML elements in DOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;296&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-jquery&quot;&gt;What is jQuery&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;297&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-v8-javascript-engine&quot;&gt;What is V8 JavaScript engine&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;298&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-we-call-javascript-as-dynamic-language&quot;&gt;Why do we call javascript as dynamic language&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;299&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-void-operator&quot;&gt;What is a void operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;300&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-set-the-cursor-to-wait&quot;&gt;How to set the cursor to wait&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;301&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-infinite-loop&quot;&gt;How do you create an infinite loop&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;302&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#why-do-you-need-to-avoid-with-statement&quot;&gt;Why do you need to avoid with statement&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;303&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-for-loops&quot;&gt;What is the output of below for loops&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;304&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#list-down-some-of-the-features-of-es6&quot;&gt;List down some of the features of ES6&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;305&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-es6&quot;&gt;What is ES6&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;306&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-I-redeclare-let-and-const-variables&quot;&gt;Can I redeclare let and const variables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;307&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-const-variable-makes-the-value-immutable&quot;&gt;Is const variable makes the value immutable&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;308&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-default-parameters&quot;&gt;What are default parameters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;309&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-template-literals&quot;&gt;What are template literals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;310&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-write-multi-line-strings-in-template-literals&quot;&gt;How do you write multi-line strings in template literals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;311&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-nesting-templates&quot;&gt;What are nesting templates&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;312&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-tagged-templates&quot;&gt;What are tagged templates&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;313&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-raw-strings&quot;&gt;What are raw strings&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;314&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-destructuring-assignment&quot;&gt;What is destructuring assignment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;315&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-default-values-in-destructuring-assignment&quot;&gt;What are default values in destructuring assignment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;316&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-swap-variables-in-destructuring-assignment&quot;&gt;How do you swap variables in destructuring assignment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;317&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-enhanced-object-literals&quot;&gt;What are enhanced object literals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;318&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-dynamic-imports&quot;&gt;What are dynamic imports&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;319&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-use-cases-for-dynamic-imports&quot;&gt;What are the use cases for dynamic imports&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;320&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-typed-arrays&quot;&gt;What are typed arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;321&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-advantages-of-module-loaders&quot;&gt;What are the advantages of module loaders&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;322&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-collation&quot;&gt;What is collation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;323&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-for...of-statement&quot;&gt;What is for...of statement&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;324&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-spread-operator-array&quot;&gt;What is the output of below spread operator array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;325&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-postmessage-secure&quot;&gt;Is PostMessage secure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;326&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-problems-with-postmessage-target-origin-as-wildcard&quot;&gt;What are the problems with postmessage target origin as wildcard&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;327&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-avoid-receiving-postmessages-from-attackers&quot;&gt;How do you avoid receiving postMessages from attackers&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;328&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#can-i-avoid-using-postmessages-completely&quot;&gt;Can I avoid using postMessages completely&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;329&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-postmessages-synchronous&quot;&gt;Is postMessages synchronous&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;330&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-paradigm-is-javascript&quot;&gt;What paradigm is Javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;331&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-internal-and-external-javascript&quot;&gt;What is the difference between internal and external javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;332&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-javascript-faster-than-server-side-script&quot;&gt;Is JavaScript faster than server side script&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-the-status-of-a-checkbox&quot;&gt;How do you get the status of a checkbox&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;334&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-double-tilde-operator&quot;&gt;What is the purpose of double tilde operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;335&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-convert-character-to-ascii-code&quot;&gt;How do you convert character to ASCII code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;336&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-arraybuffer&quot;&gt;What is ArrayBuffer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;337&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-string-expression&quot;&gt;What is the output of below string expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;338&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-error-object&quot;&gt;What is the purpose of Error object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;339&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-evalerror-object&quot;&gt;What is the purpose of EvalError object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;340&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-list-of-cases-error-thrown-from-non-strict-mode-to-strict-mode&quot;&gt;What are the list of cases error thrown from non-strict mode to strict mode&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;341&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#do-all-objects-have-prototypes&quot;&gt;Do all objects have prototypes&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;342&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-a-parameter-and-an-argument&quot;&gt;What is the difference between a parameter and an argument&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;343&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-some-method-in-arrays&quot;&gt;What is the purpose of some method in arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;344&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-combine-two-or-more-arrays&quot;&gt;How do you combine two or more arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;345&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-shallow-and-deep-copy&quot;&gt;What is the difference between Shallow and Deep copy&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;346&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-specific-number-of-copies-of-a-string&quot;&gt;How do you create specific number of copies of a string&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;347&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-return-all-matching-strings-against-a-regular-expression&quot;&gt;How do you return all matching strings against a regular expression&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;348&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-trim-a-string-at-the-beginning-or-ending&quot;&gt;How do you trim a string at the beginning or ending&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;349&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-console-statement-with-unary-operator&quot;&gt;What is the output of below console statement with unary operator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;350&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#does-javascript-uses-mixins&quot;&gt;Does javascript uses mixins&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;351&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-thunk-function&quot;&gt;What is a thunk function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;352&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-asynchronous-thunks&quot;&gt;What are asynchronous thunks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;353&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-below-function-calls&quot;&gt;What is the output of below function calls&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;354&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-remove-all-line-breaks-from-a-string&quot;&gt;How to remove all line breaks from a string&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;355&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-reflow-and-repaint&quot;&gt;What is the difference between reflow and repaint&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;356&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-with-negating-an-array&quot;&gt;What happens with negating an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;357&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-happens-if-we-add-two-arrays&quot;&gt;What happens if we add two arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;358&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-output-of-prepend-additive-operator-on-falsy-values&quot;&gt;What is the output of prepend additive operator on falsy values&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;359&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-self-string-using-special-characters&quot;&gt;How do you create self string using special characters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;360&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-remove-falsy-values-from-an-array&quot;&gt;How do you remove falsy values from an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;361&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-get-unique-values-of-an-array&quot;&gt;How do you get unique values of an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;362&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-destructuring-aliases&quot;&gt;What is destructuring aliases&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;363&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-map-the-array-values-without-using-map-method&quot;&gt;How do you map the array values without using map method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;364&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-empty-an-array&quot;&gt;How do you empty an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;365&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-rounding-numbers-to-certain-decimals&quot;&gt;How do you rounding numbers to certain decimals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;366&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-convert-an-array-to-an-object&quot;&gt;What is the easiest way to convert an array to an object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;367&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-an-array-with-some-data&quot;&gt;How do you create an array with some data&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;368&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-placeholders-from-console-object&quot;&gt;What are the placeholders from console object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;369&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-possible-to-add-css-to-console-messages&quot;&gt;Is it possible to add CSS to console messages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;370&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-dir-method-of-console-object&quot;&gt;What is the purpose of dir method of console object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;371&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-it-possible-to-debug-html-elements-in-console&quot;&gt;Is it possible to debug HTML elements in console&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;372&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-display-data-in-a-tabular-format-using-console-object&quot;&gt;How do you display data in a tabular format using console object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;373&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-verify-that-an-argument-is-a-number-or-not&quot;&gt;How do you verify that an argument is a Number or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;374&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-create-copy-to-clipboard-button&quot;&gt;How do you create copy to clipboard button&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;375&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-shortcut-to-get-timestamp&quot;&gt;What is the shortcut to get timestamp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;376&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-flattening-multi-dimensional-arrays&quot;&gt;How do you flattening multi dimensional arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;377&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-multi-condition-checking&quot;&gt;What is the easiest multi condition checking&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;378&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-capture-browser-back-button&quot;&gt;How do you capture browser back button&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;379&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-disable-right-click-in-the-web-page&quot;&gt;How do you disable right click in the web page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;380&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-wrapper-objects&quot;&gt;What are wrapper objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;381&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-ajax&quot;&gt;What is AJAX&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;382&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-ways-to-deal-with-asynchronous-code&quot;&gt;What are the different ways to deal with Asynchronous Code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;383&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-cancel-a-fetch-request&quot;&gt;How to cancel a fetch request&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;384&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-web-speech-api&quot;&gt;What is web speech API&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;385&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-minimum-timeout-throttling&quot;&gt;What is minimum timeout throttling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;386&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-implement-zero-timeout-in-modern-browsers&quot;&gt;How do you implement zero timeout in modern browsers&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;387&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-tasks-in-event-loop&quot;&gt;What are tasks in event loop&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;388&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-microtasks&quot;&gt;What are microtasks&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;389&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-different-event-loops&quot;&gt;What are different event loops&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;390&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-purpose-of-queuemicrotask&quot;&gt;What is the purpose of queueMicrotask&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;391&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-use-javascript-libraries-in-typescript-file&quot;&gt;How do you use javascript libraries in typescript file&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;392&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-promises-and-observables&quot;&gt;What are the differences between promises and observables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;393&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-heap&quot;&gt;What is heap&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;394&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-event-table&quot;&gt;What is an event table&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;395&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-microtask-queue&quot;&gt;What is a microTask queue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;396&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-shim-and-polyfill&quot;&gt;What is the difference between shim and polyfill&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;397&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-detect-primitive-or-non-primitive-value-type&quot;&gt;How do you detect primitive or non primitive value type&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;398&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-babel&quot;&gt;What is babel&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;399&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-node.js-completely-single-threaded&quot;&gt;Is Node.js completely single threaded&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;400&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-common-use-cases-of-observables&quot;&gt;What are the common use cases of observables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;401&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-rxjs&quot;&gt;What is RxJS&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;402&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-function-constructor-and-function-declaration&quot;&gt;What is the difference between Function constructor and function declaration&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;403&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-short-circuit-condition&quot;&gt;What is a Short circuit condition&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;404&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-resize-an-array&quot;&gt;What is the easiest way to resize an array&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;405&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-observable&quot;&gt;What is an observable&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;406&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-function-and-class-declarations&quot;&gt;What is the difference between function and class declarations&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;407&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-an-async-function&quot;&gt;What is an async function&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;408&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-prevent-promises-swallowing-errors&quot;&gt;How do you prevent promises swallowing errors&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;409&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-deno&quot;&gt;What is deno&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;410&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-make-an-object-iterable-in-javascript&quot;&gt;How do you make an object iterable in javascript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;411&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-a-proper-tail-call&quot;&gt;What is a Proper Tail Call&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;412&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-check-an-object-is-a-promise-or-not&quot;&gt;How do you check an object is a promise or not&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;413&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-detect-if-a-function-is-called-as-constructor&quot;&gt;How to detect if a function is called as constructor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;414&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-arguments-object-and-rest-parameter&quot;&gt;What are the differences between arguments object and rest parameter&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;415&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-spread-operator-and-rest-parameter&quot;&gt;What are the differences between spread operator and rest parameter&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;416&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-different-kinds-of-generators&quot;&gt;What are the different kinds of generators&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;417&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-built-in-iterables&quot;&gt;What are the built-in iterables&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;418&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-are-the-differences-between-for...of-and-for...in-statements&quot;&gt;What are the differences between for...of and for...in statements&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;419&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-define-instance-and-non-instance-properties&quot;&gt;How do you define instance and non-instance properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;420&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-difference-between-isnan-and-number.isnan&quot;&gt;What is the difference between isNaN and Number.isNaN?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;421&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-to-invoke-an-iife-without-any-extra-brackets&quot;&gt;How to invoke an IIFE without any extra brackets?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;422&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#is-that-possible-to-use-expressions-in-switch-cases&quot;&gt;Is that possible to use expressions in switch cases?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;423&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-the-easiest-way-to-ignore-promise-errors&quot;&gt;What is the easiest way to ignore promise errors?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;424&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-style-the-console-output-using-css&quot;&gt;How do style the console output using CSS?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;425&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#what-is-nullish-coalescing-operator-(??)&quot;&gt;What is nullish coalescing operator(??)?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;426&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#how-do-you-group-and-nest-console-output&quot;&gt;How do you group and nest console output?&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible ways to create objects in JavaScript&lt;/h3&gt; &lt;p&gt;There are many ways to create objects in javascript as below&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object constructor:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The simplest way to create an empty object is using the Object constructor. Currently this approach is not recommended.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = new Object();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object&#39;s create method:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The create method of Object creates a new object by passing the prototype object as a parameter&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = Object.create(null);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object literal syntax:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The object literal syntax is equivalent to create method when it passes null as parameter&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function constructor:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create any function and apply the new operator to create object instances,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(name){
   this.name=name;
   this.age=21;
}
var object = new Person(&quot;Sudheer&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function constructor with prototype:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This is similar to function constructor but it uses prototype for their properties and methods,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person(){}
Person.prototype.name = &quot;Sudheer&quot;;
var object = new Person();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is equivalent to an instance created with an object create method with a function prototype and then call that function with an instance and parameters as arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func {};

new func(x, y, z);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;(OR)&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Create a new instance using function prototype.
var newInstance = Object.create(func.prototype)

// Call the function
var result = func.call(newInstance, x, y, z),

// If the result is a non-null object then use it otherwise just use the new instance.
console.log(result &amp;amp;&amp;amp; typeof result === &#39;object&#39; ? result : newInstance);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;ES6 Class syntax:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;ES6 introduces class feature to create the objects&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Person {
   constructor(name) {
      this.name = name;
   }
}

var object = new Person(&quot;Sudheer&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Singleton pattern:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;A Singleton is an object which can only be instantiated one time. Repeated calls to its constructor return the same instance and this way one can ensure that they don&#39;t accidentally create multiple instances.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = new function(){
   this.name = &quot;Sudheer&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a prototype chain&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Prototype chaining&lt;/strong&gt; is used to build new types of objects based on existing ones. It is similar to inheritance in a class based language.&lt;/p&gt; &lt;p&gt;The prototype on object instance is available through &lt;strong&gt;Object.getPrototypeOf(object)&lt;/strong&gt; or &lt;strong&gt;&lt;strong&gt;proto&lt;/strong&gt;&lt;/strong&gt; property whereas prototype on constructors function is available through &lt;strong&gt;Object.prototype&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/prototype_chain.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Call, Apply and Bind&lt;/h3&gt; &lt;p&gt;The difference between Call, Apply and Bind can be explained with below examples,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Call:&lt;/strong&gt; The call() method invokes a function with a given &lt;code&gt;this&lt;/code&gt; value and arguments provided one by one&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

invite.call(employee1, &#39;Hello&#39;, &#39;How are you?&#39;); // Hello John Rodson, How are you?
invite.call(employee2, &#39;Hello&#39;, &#39;How are you?&#39;); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Apply:&lt;/strong&gt; Invokes the function with a given &lt;code&gt;this&lt;/code&gt; value and allows you to pass in arguments as an array&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

invite.apply(employee1, [&#39;Hello&#39;, &#39;How are you?&#39;]); // Hello John Rodson, How are you?
invite.apply(employee2, [&#39;Hello&#39;, &#39;How are you?&#39;]); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;bind:&lt;/strong&gt; returns a new function, allowing you to pass any number of arguments&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var employee1 = {firstName: &#39;John&#39;, lastName: &#39;Rodson&#39;};
var employee2 = {firstName: &#39;Jimmy&#39;, lastName: &#39;Baily&#39;};

function invite(greeting1, greeting2) {
    console.log(greeting1 + &#39; &#39; + this.firstName + &#39; &#39; + this.lastName+ &#39;, &#39;+ greeting2);
}

var inviteEmployee1 = invite.bind(employee1);
var inviteEmployee2 = invite.bind(employee2);
inviteEmployee1(&#39;Hello&#39;, &#39;How are you?&#39;); // Hello John Rodson, How are you?
inviteEmployee2(&#39;Hello&#39;, &#39;How are you?&#39;); // Hello Jimmy Baily, How are you?
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Call and apply are pretty interchangeable. Both execute the current function immediately. You need to decide whether it‚Äôs easier to send in an array or a comma separated list of arguments. You can remember by treating Call is for &lt;strong&gt;comma&lt;/strong&gt; (separated list) and Apply is for &lt;strong&gt;Array&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;Whereas Bind creates a new function that will have &lt;code&gt;this&lt;/code&gt; set to the first parameter passed to bind().&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSON and its common operations&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt; is a text-based data format following JavaScript object syntax, which was popularized by &lt;code&gt;Douglas Crockford&lt;/code&gt;. It is useful when you want to transmit data across a network and it is basically just a text file with an extension of .json, and a MIME type of application/json&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Parsing:&lt;/strong&gt; Converting a string to a native object&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;JSON.parse(text)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Stringification:&lt;/strong&gt; converting a native object to a string so it can be transmitted across the network&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;JSON.stringify(object)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the array slice method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;slice()&lt;/strong&gt; method returns the selected elements in an array as a new array object. It selects the elements starting at the given start argument, and ends at the given optional end argument without including the last element. If you omit the second argument then it selects till the end.&lt;/p&gt; &lt;p&gt;Some of the examples of this method are,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIntegers = [1, 2, 3, 4, 5];
let arrayIntegers1 = arrayIntegers.slice(0,2); // returns [1,2]
let arrayIntegers2 = arrayIntegers.slice(2,3); // returns [3]
let arrayIntegers3 = arrayIntegers.slice(4); //returns [5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Slice method won&#39;t mutate the original array but it returns the subset as a new array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the array splice method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;splice()&lt;/strong&gt; method is used either adds/removes items to/from an array, and then returns the removed item. The first argument specifies the array position for insertion or deletion whereas the optional second argument indicates the number of elements to be deleted. Each additional argument is added to the array.&lt;/p&gt; &lt;p&gt;Some of the examples of this method are,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIntegersOriginal1 = [1, 2, 3, 4, 5];
let arrayIntegersOriginal2 = [1, 2, 3, 4, 5];
let arrayIntegersOriginal3 = [1, 2, 3, 4, 5];

let arrayIntegers1 = arrayIntegersOriginal1.splice(0,2); // returns [1, 2]; original array: [3, 4, 5]
let arrayIntegers2 = arrayIntegersOriginal2.splice(3); // returns [4, 5]; original array: [1, 2, 3]
let arrayIntegers3 = arrayIntegersOriginal3.splice(3, 1, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;); //returns [4]; original array: [1, 2, 3, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, 5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Splice method modifies the original array and returns the deleted array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between slice and splice&lt;/h3&gt; &lt;p&gt;Some of the major difference in a tabular form&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Slice&lt;/th&gt; 
     &lt;th&gt;Splice&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Doesn&#39;t modify the original array(immutable)&lt;/td&gt; 
     &lt;td&gt;Modifies the original array(mutable)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Returns the subset of original array&lt;/td&gt; 
     &lt;td&gt;Returns the deleted elements as array&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Used to pick the elements from array&lt;/td&gt; 
     &lt;td&gt;Used to insert or delete elements to/from array&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare Object and Map&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Objects&lt;/strong&gt; are similar to &lt;strong&gt;Maps&lt;/strong&gt; in that both let you set keys to values, retrieve those values, delete keys, and detect whether something is stored at a key. Due to this reason, Objects have been used as Maps historically. But there are important differences that make using a Map preferable in certain cases.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The keys of an Object are Strings and Symbols, whereas they can be any value for a Map, including functions, objects, and any primitive.&lt;/li&gt; 
   &lt;li&gt;The keys in Map are ordered while keys added to Object are not. Thus, when iterating over it, a Map object returns keys in order of insertion.&lt;/li&gt; 
   &lt;li&gt;You can get the size of a Map easily with the size property, while the number of properties in an Object must be determined manually.&lt;/li&gt; 
   &lt;li&gt;A Map is an iterable and can thus be directly iterated, whereas iterating over an Object requires obtaining its keys in some fashion and iterating over them.&lt;/li&gt; 
   &lt;li&gt;An Object has a prototype, so there are default keys in the map that could collide with your keys if you&#39;re not careful. As of ES5 this can be bypassed by using map = Object.create(null), but this is seldom done.&lt;/li&gt; 
   &lt;li&gt;A Map may perform better in scenarios involving frequent addition and removal of key pairs.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between == and === operators&lt;/h3&gt; &lt;p&gt;JavaScript provides both strict(===, !==) and type-converting(==, !=) equality comparison. The strict operators take type of variable in consideration, while non-strict operators make type correction/conversion based upon values of variables. The strict operators follow the below conditions for different types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Two strings are strictly equal when they have the same sequence of characters, same length, and same characters in corresponding positions.&lt;/li&gt; 
   &lt;li&gt;Two numbers are strictly equal when they are numerically equal. i.e, Having the same number value. There are two special cases in this, 
    &lt;ol&gt; 
     &lt;li&gt;NaN is not equal to anything, including NaN.&lt;/li&gt; 
     &lt;li&gt;Positive and negative zeros are equal to one another.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Two Boolean operands are strictly equal if both are true or both are false.&lt;/li&gt; 
   &lt;li&gt;Two objects are strictly equal if they refer to the same Object.&lt;/li&gt; 
   &lt;li&gt;Null and Undefined types are not equal with ===, but equal with ==. i.e, null===undefined --&amp;gt; false but null==undefined --&amp;gt; true&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Some of the example which covers the above cases,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;0 == false   // true
0 === false  // false
1 == &quot;1&quot;     // true
1 === &quot;1&quot;    // false
null == undefined // true
null === undefined // false
&#39;0&#39; == false // true
&#39;0&#39; === false // false
[]==[] or []===[] //false, refer different objects in memory
{}=={} or {}==={} //false, refer different objects in memory
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are lambda or arrow functions&lt;/h3&gt; &lt;p&gt;An arrow function is a shorter syntax for a function expression and does not have its own &lt;strong&gt;this, arguments, super, or new.target&lt;/strong&gt;. These functions are best suited for non-method functions, and they cannot be used as constructors.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a first class function&lt;/h3&gt; &lt;p&gt;In Javascript, functions are first class objects. First-class functions means when functions in that language are treated like any other variable.&lt;/p&gt; &lt;p&gt;For example, in such a language, a function can be passed as an argument to other functions, can be returned by another function and can be assigned as a value to a variable. For example, in the below example, handler functions assigned to a listener&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const handler = () =&amp;gt; console.log (&#39;This is a click handler function&#39;);
document.addEventListener (&#39;click&#39;, handler);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a first order function&lt;/h3&gt; &lt;p&gt;First-order function is a function that doesn‚Äôt accept another function as an argument and doesn‚Äôt return a function as its return value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const firstOrder = () =&amp;gt; console.log (&#39;I am a first order function!&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a higher order function&lt;/h3&gt; &lt;p&gt;Higher-order function is a function that accepts another function as an argument or returns a function as a return value or both.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const firstOrderFunc = () =&amp;gt; console.log (&#39;Hello, I am a First order function&#39;);
const higherOrder = ReturnFirstOrderFunc =&amp;gt; ReturnFirstOrderFunc();
higherOrder(firstOrderFunc);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a unary function&lt;/h3&gt; &lt;p&gt;Unary function (i.e. monadic) is a function that accepts exactly one argument. It stands for a single argument accepted by a function.&lt;/p&gt; &lt;p&gt;Let us take an example of unary function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const unaryFunction = a =&amp;gt; console.log (a + 10); // Add 10 to the given argument and display the value
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the currying function&lt;/h3&gt; &lt;p&gt;Currying is the process of taking a function with multiple arguments and turning it into a sequence of functions each with only a single argument. Currying is named after a mathematician &lt;strong&gt;Haskell Curry&lt;/strong&gt;. By applying currying, a n-ary function turns it into a unary function.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of n-ary function and how it turns into a currying function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const multiArgFunction = (a, b, c) =&amp;gt; a + b + c;
console.log(multiArgFunction(1,2,3));// 6

const curryUnaryFunction = a =&amp;gt; b =&amp;gt; c =&amp;gt; a + b + c;
curryUnaryFunction (1); // returns a function: b =&amp;gt; c =&amp;gt;  1 + b + c
curryUnaryFunction (1) (2); // returns a function: c =&amp;gt; 3 + c
curryUnaryFunction (1) (2) (3); // returns the number 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Curried functions are great to improve &lt;strong&gt;code reusability&lt;/strong&gt; and &lt;strong&gt;functional composition&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a pure function&lt;/h3&gt; &lt;p&gt;A &lt;strong&gt;Pure function&lt;/strong&gt; is a function where the return value is only determined by its arguments without any side effects. i.e, If you call a function with the same arguments &#39;n&#39; number of times and &#39;n&#39; number of places in the application then it will always return the same value.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to see the difference between pure and impure functions,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Impure
let numberArray = [];
const impureAddNumber = number =&amp;gt; numberArray.push(number);
//Pure
const pureAddNumber = number =&amp;gt; argNumberArray =&amp;gt;
  argNumberArray.concat([number]);

//Display the results
console.log (impureAddNumber(6)); // returns 1
console.log (numberArray); // returns [6]
console.log (pureAddNumber(7) (numberArray)); // returns [6, 7]
console.log (numberArray); // returns [6]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per above code snippets, &lt;strong&gt;Push&lt;/strong&gt; function is impure itself by altering the array and returning an push number index which is independent of parameter value. Whereas &lt;strong&gt;Concat&lt;/strong&gt; on the other hand takes the array and concatenates it with the other array producing a whole new array without side effects. Also, the return value is a concatenation of the previous array.&lt;/p&gt; &lt;p&gt;Remember that Pure functions are important as they simplify unit testing without any side effects and no need for dependency injection. They also avoid tight coupling and make it harder to break your application by not having any side effects. These principles are coming together with &lt;strong&gt;Immutability&lt;/strong&gt; concept of ES6 by giving preference to &lt;strong&gt;const&lt;/strong&gt; over &lt;strong&gt;let&lt;/strong&gt; usage.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the let keyword&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;let&lt;/code&gt; statement declares a &lt;strong&gt;block scope local variable&lt;/strong&gt;. Hence the variables defined with let keyword are limited in scope to the block, statement, or expression on which it is used. Whereas variables declared with the &lt;code&gt;var&lt;/code&gt; keyword used to define a variable globally, or locally to an entire function regardless of block scope.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to demonstrate the usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 30;
if (counter === 30) {
  let counter = 31;
  console.log(counter); // 31
}
console.log(counter); // 30 (because the variable in if block won&#39;t exist here)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between let and var&lt;/h3&gt; &lt;p&gt;You can list out the differences in a tabular format&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;var&lt;/th&gt; 
     &lt;th&gt;let&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It is been available from the beginning of JavaScript&lt;/td&gt; 
     &lt;td&gt;Introduced as part of ES6&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It has function scope&lt;/td&gt; 
     &lt;td&gt;It has block scope&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Variables will be hoisted&lt;/td&gt; 
     &lt;td&gt;Hoisted but not initialized&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;Let&#39;s take an example to see the difference,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function userDetails(username) {
   if(username) {
     console.log(salary); // undefined due to hoisting
     console.log(age); // ReferenceError: Cannot access &#39;age&#39; before initialization
     let age = 30;
     var salary = 10000;
   }
   console.log(salary); //10000 (accessible to due function scope)
   console.log(age); //error: age is not defined(due to block scope)
}
userDetails(&#39;John&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the reason to choose the name let as a keyword&lt;/h3&gt; &lt;p&gt;&lt;code&gt;let&lt;/code&gt; is a mathematical statement that was adopted by early programming languages like &lt;strong&gt;Scheme&lt;/strong&gt; and &lt;strong&gt;Basic&lt;/strong&gt;. It has been borrowed from dozens of other languages that use &lt;code&gt;let&lt;/code&gt; already as a traditional keyword as close to &lt;code&gt;var&lt;/code&gt; as possible.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you redeclare variables in switch block without an error&lt;/h3&gt; &lt;p&gt;If you try to redeclare variables in a &lt;code&gt;switch block&lt;/code&gt; then it will cause errors because there is only one block. For example, the below code block throws a syntax error as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 1;
switch(x) {
  case 0:
    let name;
    break;

  case 1:
    let name; // SyntaxError for redeclaration.
    break;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To avoid this error, you can create a nested block inside a case clause and create a new block scoped lexical environment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let counter = 1;
    switch(x) {
      case 0: {
        let name;
        break;
      }
      case 1: {
        let name; // No SyntaxError for redeclaration.
        break;
      }
    }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the Temporal Dead Zone&lt;/h3&gt; &lt;p&gt;The Temporal Dead Zone is a behavior in JavaScript that occurs when declaring a variable with the let and const keywords, but not with var. In ECMAScript 6, accessing a &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; variable before its declaration (within its scope) causes a ReferenceError. The time span when that happens, between the creation of a variable‚Äôs binding and its declaration, is called the temporal dead zone.&lt;/p&gt; &lt;p&gt;Let&#39;s see this behavior with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function somemethod() {
  console.log(counter1); // undefined
  console.log(counter2); // ReferenceError
  var counter1 = 1;
  let counter2 = 2;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is IIFE(Immediately Invoked Function Expression)&lt;/h3&gt; &lt;p&gt;IIFE (Immediately Invoked Function Expression) is a JavaScript function that runs as soon as it is defined. The signature of it would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function ()
    {
      // logic here
    }
 )
();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The primary reason to use an IIFE is to obtain data privacy because any variables declared within the IIFE cannot be accessed by the outside world. i.e, If you try to access variables with IIFE then it throws an error as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function ()
        {
          var message = &quot;IIFE&quot;;
          console.log(message);
        }
 )
();
console.log(message); //Error: message is not defined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of using modules&lt;/h3&gt; &lt;p&gt;There are a lot of benefits to using modules in favour of a sprawling. Some of the benefits are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Maintainability&lt;/li&gt; 
   &lt;li&gt;Reusability&lt;/li&gt; 
   &lt;li&gt;Namespacing&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is memoization&lt;/h3&gt; &lt;p&gt;Memoization is a programming technique which attempts to increase a function‚Äôs performance by caching its previously computed results. Each time a memoized function is called, its parameters are used to index the cache. If the data is present, then it can be returned, without executing the entire function. Otherwise the function is executed and then the result is added to the cache. Let&#39;s take an example of adding function with memoization,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const memoizAddition = () =&amp;gt; {
  let cache = {};
 return (value) =&amp;gt; {
  if (value in cache) {
   console.log(&#39;Fetching from cache&#39;);
   return cache[value]; // Here, cache.value cannot be used as property name starts with the number which is not a valid JavaScript  identifier. Hence, can only be accessed using the square bracket notation.
  }
  else {
   console.log(&#39;Calculating result&#39;);
   let result = value + 20;
   cache[value] = result;
   return result;
  }
 }
}
// returned function from memoizAddition
const addition = memoizAddition();
console.log(addition(20)); //output: 40 calculated
console.log(addition(20)); //output: 40 cached
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is Hoisting&lt;/h3&gt; &lt;p&gt;Hoisting is a JavaScript mechanism where variables and function declarations are moved to the top of their scope before code execution. Remember that JavaScript only hoists declarations, not initialisation. Let&#39;s take a simple example of variable hoisting,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(message); //output : undefined
var message = &#39;The variable Has been hoisted&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code looks like as below to the interpreter,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var message;
console.log(message);
message = &#39;The variable Has been hoisted&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are classes in ES6&lt;/h3&gt; &lt;p&gt;In ES6, Javascript classes are primarily syntactic sugar over JavaScript‚Äôs existing prototype-based inheritance. For example, the prototype based inheritance written in function expression as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Bike(model,color) {
    this.model = model;
    this.color = color;
}

Bike.prototype.getDetails = function() {
    return this.model + &#39; bike has&#39; + this.color + &#39; color&#39;;
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas ES6 classes can be defined as an alternative&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Bike{
  constructor(color, model) {
    this.color= color;
    this.model= model;
  }

  getDetails() {
    return this.model + &#39; bike has&#39; + this.color + &#39; color&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are closures&lt;/h3&gt; &lt;p&gt;A closure is the combination of a function and the lexical environment within which that function was declared. i.e, It is an inner function that has access to the outer or enclosing function‚Äôs variables. The closure has three scope chains&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Own scope where variables defined between its curly brackets&lt;/li&gt; 
   &lt;li&gt;Outer function‚Äôs variables&lt;/li&gt; 
   &lt;li&gt;Global variables&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s take an example of closure concept,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Welcome(name){
  var greetingInfo = function(message){
   console.log(message+&#39; &#39;+name);
  }
return greetingInfo;
}
var myFunction = Welcome(&#39;John&#39;);
myFunction(&#39;Welcome &#39;); //Output: Welcome John
myFunction(&#39;Hello Mr.&#39;); //output: Hello Mr.John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per the above code, the inner function(i.e, greetingInfo) has access to the variables in the outer function scope(i.e, Welcome) even after the outer function has returned.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are modules&lt;/h3&gt; &lt;p&gt;Modules refer to small units of independent, reusable code and also act as the foundation of many JavaScript design patterns. Most of the JavaScript modules export an object literal, a function, or a constructor&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need modules&lt;/h3&gt; &lt;p&gt;Below are the list of benefits using modules in javascript ecosystem&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Maintainability&lt;/li&gt; 
   &lt;li&gt;Reusability&lt;/li&gt; 
   &lt;li&gt;Namespacing&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is scope in javascript&lt;/h3&gt; &lt;p&gt;Scope is the accessibility of variables, functions, and objects in some particular part of your code during runtime. In other words, scope determines the visibility of variables and other resources in areas of your code.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a service worker&lt;/h3&gt; &lt;p&gt;A Service worker is basically a script (JavaScript file) that runs in the background, separate from a web page and provides features that don&#39;t need a web page or user interaction. Some of the major features of service workers are Rich offline experiences(offline first web application development), periodic background syncs, push notifications, intercept and handle network requests and programmatically managing a cache of responses.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you manipulate DOM using a service worker&lt;/h3&gt; &lt;p&gt;Service worker can&#39;t access the DOM directly. But it can communicate with the pages it controls by responding to messages sent via the &lt;code&gt;postMessage&lt;/code&gt; interface, and those pages can manipulate the DOM.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you reuse information across service worker restarts&lt;/h3&gt; &lt;p&gt;The problem with service worker is that it gets terminated when not in use, and restarted when it&#39;s next needed, so you cannot rely on global state within a service worker&#39;s &lt;code&gt;onfetch&lt;/code&gt; and &lt;code&gt;onmessage&lt;/code&gt; handlers. In this case, service workers will have access to IndexedDB API in order to persist and reuse across restarts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is IndexedDB&lt;/h3&gt; &lt;p&gt;IndexedDB is a low-level API for client-side storage of larger amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is web storage&lt;/h3&gt; &lt;p&gt;Web storage is an API that provides a mechanism by which browsers can store key/value pairs locally within the user&#39;s browser, in a much more intuitive fashion than using cookies. The web storage provides two mechanisms for storing data on the client.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Local storage:&lt;/strong&gt; It stores data for current origin with no expiration date.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Session storage:&lt;/strong&gt; It stores data for one session and the data is lost when the browser tab is closed.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a post message&lt;/h3&gt; &lt;p&gt;Post message is a method that enables cross-origin communication between Window objects.(i.e, between a page and a pop-up that it spawned, or between a page and an iframe embedded within it). Generally, scripts on different pages are allowed to access each other if and only if the pages follow same-origin policy(i.e, pages share the same protocol, port number, and host).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Cookie&lt;/h3&gt; &lt;p&gt;A cookie is a piece of data that is stored on your computer to be accessed by your browser. Cookies are saved as key/value pairs. For example, you can create a cookie named username as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/cookie.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need a Cookie&lt;/h3&gt; &lt;p&gt;Cookies are used to remember information about the user profile(such as username). It basically involves two steps,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When a user visits a web page, the user profile can be stored in a cookie.&lt;/li&gt; 
   &lt;li&gt;Next time the user visits the page, the cookie remembers the user profile.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the options in a cookie&lt;/h3&gt; &lt;p&gt;There are few below options available for a cookie,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;By default, the cookie is deleted when the browser is closed but you can change this behavior by setting expiry date (in UTC time).&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John; expires=Sat, 8 Jun 2019 12:00:00 UTC&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;By default, the cookie belongs to a current page. But you can tell the browser what path the cookie belongs to using a path parameter.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=John; path=/services&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you delete a cookie&lt;/h3&gt; &lt;p&gt;You can delete a cookie by setting the expiry date as a passed date. You don&#39;t need to specify a cookie value in this case. For example, you can delete a username cookie in the current page as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.cookie = &quot;username=; expires=Fri, 07 Jun 2019 00:00:00 UTC; path=/;&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You should define the cookie path option to ensure that you delete the right cookie. Some browsers doesn&#39;t allow to delete a cookie unless you specify a path parameter.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between cookie, local storage and session storage&lt;/h3&gt; &lt;p&gt;Below are some of the differences between cookie, local storage and session storage,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Feature&lt;/th&gt; 
     &lt;th&gt;Cookie&lt;/th&gt; 
     &lt;th&gt;Local storage&lt;/th&gt; 
     &lt;th&gt;Session storage&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Accessed on client or server side&lt;/td&gt; 
     &lt;td&gt;Both server-side &amp;amp; client-side&lt;/td&gt; 
     &lt;td&gt;client-side only&lt;/td&gt; 
     &lt;td&gt;client-side only&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Lifetime&lt;/td&gt; 
     &lt;td&gt;As configured using Expires option&lt;/td&gt; 
     &lt;td&gt;until deleted&lt;/td&gt; 
     &lt;td&gt;until tab is closed&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;SSL support&lt;/td&gt; 
     &lt;td&gt;Supported&lt;/td&gt; 
     &lt;td&gt;Not supported&lt;/td&gt; 
     &lt;td&gt;Not supported&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Maximum data size&lt;/td&gt; 
     &lt;td&gt;4KB&lt;/td&gt; 
     &lt;td&gt;5 MB&lt;/td&gt; 
     &lt;td&gt;5MB&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main difference between localStorage and sessionStorage&lt;/h3&gt; &lt;p&gt;LocalStorage is the same as SessionStorage but it persists the data even when the browser is closed and reopened(i.e it has no expiration time) whereas in sessionStorage data gets cleared when the page session ends.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access web storage&lt;/h3&gt; &lt;p&gt;The Window object implements the &lt;code&gt;WindowLocalStorage&lt;/code&gt; and &lt;code&gt;WindowSessionStorage&lt;/code&gt; objects which has &lt;code&gt;localStorage&lt;/code&gt;(window.localStorage) and &lt;code&gt;sessionStorage&lt;/code&gt;(window.sessionStorage) properties respectively. These properties create an instance of the Storage object, through which data items can be set, retrieved and removed for a specific domain and storage type (session or local). For example, you can read and write on local storage objects as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;localStorage.setItem(&#39;logo&#39;, document.getElementById(&#39;logo&#39;).value);
localStorage.getItem(&#39;logo&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the methods available on session storage&lt;/h3&gt; &lt;p&gt;The session storage provided methods for reading, writing and clearing the session data&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Save data to sessionStorage
sessionStorage.setItem(&#39;key&#39;, &#39;value&#39;);

// Get saved data from sessionStorage
let data = sessionStorage.getItem(&#39;key&#39;);

// Remove saved data from sessionStorage
sessionStorage.removeItem(&#39;key&#39;);

// Remove all saved data from sessionStorage
sessionStorage.clear();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a storage event and its event handler&lt;/h3&gt; &lt;p&gt;The StorageEvent is an event that fires when a storage area has been changed in the context of another document. Whereas onstorage property is an EventHandler for processing storage events. The syntax would be as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; window.onstorage = functionRef;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take the example usage of onstorage event handler which logs the storage key and it&#39;s values&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.onstorage = function(e) {
  console.log(&#39;The &#39; + e.key +
    &#39; key has been changed from &#39; + e.oldValue +
    &#39; to &#39; + e.newValue + &#39;.&#39;);
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need web storage&lt;/h3&gt; &lt;p&gt;Web storage is more secure, and large amounts of data can be stored locally, without affecting website performance. Also, the information is never transferred to the server. Hence this is a more recommended approach than Cookies.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check web storage browser support&lt;/h3&gt; &lt;p&gt;You need to check browser support for localStorage and sessionStorage before using web storage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(Storage) !== &quot;undefined&quot;) {
  // Code for localStorage/sessionStorage.
} else {
  // Sorry! No Web Storage support..
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check web workers browser support&lt;/h3&gt; &lt;p&gt;You need to check browser support for web workers before using it&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(Worker) !== &quot;undefined&quot;) {
  // code for Web worker support.
} else {
  // Sorry! No Web Worker support..
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example of a web worker&lt;/h3&gt; &lt;p&gt;You need to follow below steps to start using web workers for counting example&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create a Web Worker File: You need to write a script to increment the count value. Let&#39;s name it as counter.js&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let i = 0;

function timedCount() {
  i = i + 1;
  postMessage(i);
  setTimeout(&quot;timedCount()&quot;,500);
}

timedCount();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Here postMessage() method is used to post a message back to the HTML page&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create a Web Worker Object: You can create a web worker object by checking for browser support. Let&#39;s name this file as web_worker_example.js&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (typeof(w) == &quot;undefined&quot;) {
  w = new Worker(&quot;counter.js&quot;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and we can receive messages from web worker&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w.onmessage = function(event){
  document.getElementById(&quot;message&quot;).innerHTML = event.data;
};
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Terminate a Web Worker: Web workers will continue to listen for messages (even after the external script is finished) until it is terminated. You can use the terminate() method to terminate listening to the messages.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w.terminate();
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Reuse the Web Worker: If you set the worker variable to undefined you can reuse the code&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;w = undefined;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the restrictions of web workers on DOM&lt;/h3&gt; &lt;p&gt;WebWorkers don&#39;t have access to below javascript objects since they are defined in an external files&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Window object&lt;/li&gt; 
   &lt;li&gt;Document object&lt;/li&gt; 
   &lt;li&gt;Parent object&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a promise&lt;/h3&gt; &lt;p&gt;A promise is an object that may produce a single value some time in the future with either a resolved value or a reason that it‚Äôs not resolved(for example, network error). It will be in one of the 3 possible states: fulfilled, rejected, or pending.&lt;/p&gt; &lt;p&gt;The syntax of Promise creation looks like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    const promise = new Promise(function(resolve, reject) {
      // promise description
    })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The usage of a promise would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const promise = new Promise(resolve =&amp;gt; {
  setTimeout(() =&amp;gt; {
    resolve(&quot;I&#39;m a Promise!&quot;);
  }, 5000);
}, reject =&amp;gt; {

});

promise.then(value =&amp;gt; console.log(value));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The action flow of a promise will be as below,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/promises.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need a promise&lt;/h3&gt; &lt;p&gt;Promises are used to handle asynchronous operations. They provide an alternative approach for callbacks by reducing the callback hell and writing the cleaner code.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the three states of promise&lt;/h3&gt; &lt;p&gt;Promises have three states:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Pending:&lt;/strong&gt; This is an initial state of the Promise before an operation begins&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Fulfilled:&lt;/strong&gt; This state indicates that the specified operation was completed.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Rejected:&lt;/strong&gt; This state indicates that the operation did not complete. In this case an error value will be thrown.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a callback function&lt;/h3&gt; &lt;p&gt;A callback function is a function passed into another function as an argument. This function is invoked inside the outer function to complete an action. Let&#39;s take a simple example of how to use callback function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function callbackFunction(name) {
  console.log(&#39;Hello &#39; + name);
}

function outerFunction(callback) {
  let name = prompt(&#39;Please enter your name.&#39;);
  callback(name);
}

outerFunction(callbackFunction);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we need callbacks&lt;/h3&gt; &lt;p&gt;The callbacks are needed because javascript is an event driven language. That means instead of waiting for a response javascript will keep executing while listening for other events. Let&#39;s take an example with the first function invoking an API call(simulated by setTimeout) and the next function which logs the message.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function firstFunction(){
  // Simulate a code delay
  setTimeout( function(){
    console.log(&#39;First function called&#39;);
  }, 1000 );
}
function secondFunction(){
  console.log(&#39;Second function called&#39;);
}
firstFunction();
secondFunction();

Output
// Second function called
// First function called
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As observed from the output, javascript didn&#39;t wait for the response of the first function and the remaining code block got executed. So callbacks are used in a way to make sure that certain code doesn‚Äôt execute until the other code finishes execution.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a callback hell&lt;/h3&gt; &lt;p&gt;Callback Hell is an anti-pattern with multiple nested callbacks which makes code hard to read and debug when dealing with asynchronous logic. The callback hell looks like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async1(function(){
    async2(function(){
        async3(function(){
            async4(function(){
                ....
            });
        });
    });
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are server-sent events&lt;/h3&gt; &lt;p&gt;Server-sent events (SSE) is a server push technology enabling a browser to receive automatic updates from a server via HTTP connection without resorting to polling. These are a one way communications channel - events flow from server to client only. This has been used in Facebook/Twitter updates, stock price updates, news feeds etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you receive server-sent event notifications&lt;/h3&gt; &lt;p&gt;The EventSource object is used to receive server-sent event notifications. For example, you can receive messages from server as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(typeof(EventSource) !== &quot;undefined&quot;) {
  var source = new EventSource(&quot;sse_generator.js&quot;);
  source.onmessage = function(event) {
    document.getElementById(&quot;output&quot;).innerHTML += event.data + &quot;&amp;lt;br&amp;gt;&quot;;
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check browser support for server-sent events&lt;/h3&gt; &lt;p&gt;You can perform browser support for server-sent events before using it as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(typeof(EventSource) !== &quot;undefined&quot;) {
  // Server-sent events supported. Let&#39;s have some code here!
} else {
  // No server-sent events supported
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the events available for server sent events&lt;/h3&gt; &lt;p&gt;Below are the list of events available for server sent events&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Event&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;onopen&lt;/td&gt; 
     &lt;td&gt;It is used when a connection to the server is opened&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;onmessage&lt;/td&gt; 
     &lt;td&gt;This event is used when a message is received&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;onerror&lt;/td&gt; 
     &lt;td&gt;It happens when an error occurs&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main rules of promise&lt;/h3&gt; &lt;p&gt;A promise must follow a specific set of rules,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;A promise is an object that supplies a standard-compliant &lt;code&gt;.then()&lt;/code&gt; method&lt;/li&gt; 
   &lt;li&gt;A pending promise may transition into either fulfilled or rejected state&lt;/li&gt; 
   &lt;li&gt;A fulfilled or rejected promise is settled and it must not transition into any other state.&lt;/li&gt; 
   &lt;li&gt;Once a promise is settled, the value must not change.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is callback in callback&lt;/h3&gt; &lt;p&gt;You can nest one callback inside in another callback to execute the actions sequentially one by one. This is known as callbacks in callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;loadScript(&#39;/script1.js&#39;, function(script) {
   console.log(&#39;first script is loaded&#39;);

  loadScript(&#39;/script2.js&#39;, function(script) {

    console.log(&#39;second script is loaded&#39;);

    loadScript(&#39;/script3.js&#39;, function(script) {

        console.log(&#39;third script is loaded&#39;);
      // after all scripts are loaded
    });

  })

});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is promise chaining&lt;/h3&gt; &lt;p&gt;The process of executing a sequence of asynchronous tasks one after another using promises is known as Promise chaining. Let&#39;s take an example of promise chaining for calculating the final result,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new Promise(function(resolve, reject) {

  setTimeout(() =&amp;gt; resolve(1), 1000);

}).then(function(result) {

  console.log(result); // 1
  return result * 2;

}).then(function(result) {

  console.log(result); // 2
  return result * 3;

}).then(function(result) {

  console.log(result); // 6
  return result * 4;

});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above handlers, the result is passed to the chain of .then() handlers with the below work flow,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The initial promise resolves in 1 second,&lt;/li&gt; 
   &lt;li&gt;After that &lt;code&gt;.then&lt;/code&gt; handler is called by logging the result(1) and then return a promise with the value of result * 2.&lt;/li&gt; 
   &lt;li&gt;After that the value passed to the next &lt;code&gt;.then&lt;/code&gt; handler by logging the result(2) and return a promise with result * 3.&lt;/li&gt; 
   &lt;li&gt;Finally the value passed to the last &lt;code&gt;.then&lt;/code&gt; handler by logging the result(6) and return a promise with result * 4.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is promise.all&lt;/h3&gt; &lt;p&gt;Promise.all is a promise that takes an array of promises as an input (an iterable), and it gets resolved when all the promises get resolved or any one of them gets rejected. For example, the syntax of promise.all method is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.all([Promise1, Promise2, Promise3]) .then(result) =&amp;gt; {   console.log(result) }) .catch(error =&amp;gt; console.log(`Error in promises ${error}`))
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember that the order of the promises(output the result) is maintained as per input order.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the race method in promise&lt;/h3&gt; &lt;p&gt;Promise.race() method will return the promise instance which is firstly resolved or rejected. Let&#39;s take an example of race() method where promise2 is resolved first&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var promise1 = new Promise(function(resolve, reject) {
    setTimeout(resolve, 500, &#39;one&#39;);
});
var promise2 = new Promise(function(resolve, reject) {
    setTimeout(resolve, 100, &#39;two&#39;);
});

Promise.race([promise1, promise2]).then(function(value) {
  console.log(value); // &quot;two&quot; // Both promises will resolve, but promise2 is faster
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a strict mode in javascript&lt;/h3&gt; &lt;p&gt;Strict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a ‚Äústrict‚Äù operating context. This way it prevents certain actions from being taken and throws more exceptions. The literal expression &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; instructs the browser to use the javascript code in the Strict mode.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need strict mode&lt;/h3&gt; &lt;p&gt;Strict mode is useful to write &quot;secure&quot; JavaScript by notifying &quot;bad syntax&quot; into real errors. For example, it eliminates accidentally creating a global variable by throwing an error and also throws an error for assignment to a non-writable property, a getter-only property, a non-existing property, a non-existing variable, or a non-existing object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you declare strict mode&lt;/h3&gt; &lt;p&gt;The strict mode is declared by adding &quot;use strict&quot;; to the beginning of a script or a function. If declared at the beginning of a script, it has global scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;use strict&quot;;
x = 3.14; // This will cause an error because x is not declared
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and if you declare inside a function, it has local scope&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;x = 3.14;       // This will not cause an error.
myFunction();

function myFunction() {
  &quot;use strict&quot;;
  y = 3.14;   // This will cause an error
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of double exclamation&lt;/h3&gt; &lt;p&gt;The double exclamation or negation(!!) ensures the resulting type is a boolean. If it was falsey (e.g. 0, null, undefined, etc.), it will be false, otherwise, true. For example, you can test IE version using this expression as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let isIE8 = false;
isIE8 = !! navigator.userAgent.match(/MSIE 8.0/);
console.log(isIE8); // returns true or false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use this expression then it returns the original value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(navigator.userAgent.match(/MSIE 8.0/));  // returns either an Array or null
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The expression !! is not an operator, but it is just twice of ! operator.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the delete operator&lt;/h3&gt; &lt;p&gt;The delete keyword is used to delete the property as well as its value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user= {name: &quot;John&quot;, age:20};
delete user.age;

console.log(user); // {name: &quot;John&quot;}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the typeof operator&lt;/h3&gt; &lt;p&gt;You can use the JavaScript typeof operator to find the type of a JavaScript variable. It returns the type of a variable or an expression.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;typeof &quot;John Abraham&quot;     // Returns &quot;string&quot;
typeof (1 + 2)        // Returns &quot;number&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is undefined property&lt;/h3&gt; &lt;p&gt;The undefined property indicates that a variable has not been assigned a value, or not declared at all. The type of undefined value is undefined too.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user;    // Value is undefined, type is undefined
console.log(typeof(user)) //undefined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Any variable can be emptied by setting the value to undefined.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;user = undefined
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is null value&lt;/h3&gt; &lt;p&gt;The value null represents the intentional absence of any object value. It is one of JavaScript&#39;s primitive values. The type of null value is object. You can empty the variable by setting the value to null.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user = null;
console.log(typeof(user)) //object
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between null and undefined&lt;/h3&gt; &lt;p&gt;Below are the main differences between null and undefined,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Null&lt;/th&gt; 
     &lt;th&gt;Undefined&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It is an assignment value which indicates that variable points to no object.&lt;/td&gt; 
     &lt;td&gt;It is not an assignment value where a variable has been declared but has not yet been assigned a value.&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Type of null is object&lt;/td&gt; 
     &lt;td&gt;Type of undefined is undefined&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;The null value is a primitive value that represents the null, empty, or non-existent reference.&lt;/td&gt; 
     &lt;td&gt;The undefined value is a primitive value used when a variable has not been assigned a value.&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Indicates the absence of a value for a variable&lt;/td&gt; 
     &lt;td&gt;Indicates absence of variable itself&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Converted to zero (0) while performing primitive operations&lt;/td&gt; 
     &lt;td&gt;Converted to NaN while performing primitive operations&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is eval&lt;/h3&gt; &lt;p&gt;The eval() function evaluates JavaScript code represented as a string. The string can be a JavaScript expression, variable, statement, or sequence of statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(eval(&#39;1 + 2&#39;)); //  3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between window and document&lt;/h3&gt; &lt;p&gt;Below are the main differences between window and document,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Window&lt;/th&gt; 
     &lt;th&gt;Document&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It is the root level element in any web page&lt;/td&gt; 
     &lt;td&gt;It is the direct child of the window object. This is also known as Document Object Model(DOM)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;By default window object is available implicitly in the page&lt;/td&gt; 
     &lt;td&gt;You can access it via window.document or document.&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;It has methods like alert(), confirm() and properties like document, location&lt;/td&gt; 
     &lt;td&gt;It provides methods like getElementById, getElementsByTagName, createElement etc&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access history in javascript&lt;/h3&gt; &lt;p&gt;The window.history object contains the browser&#39;s history. You can load previous and next URLs in the history using back() and next() methods.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function goBack() {
  window.history.back()
}
function goForward() {
  window.history.forward()
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can also access history without window prefix.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect caps lock key turned on or not&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;mouseEvent getModifierState()&lt;/code&gt; is used to return a boolean value that indicates whether the specified modifier key is activated or not. The modifiers such as CapsLock, ScrollLock and NumLock are activated when they are clicked, and deactivated when they are clicked again.&lt;/p&gt; &lt;p&gt;Let&#39;s take an input element to detect the CapsLock on/off behavior with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;    &amp;lt;input type=&quot;password&quot; onmousedown=&quot;enterInput(event)&quot;&amp;gt;
      
    &amp;lt;p id=&quot;feedback&quot;&amp;gt;&amp;lt;/p&amp;gt;
      
    &amp;lt;script&amp;gt;
    function enterInput(e) {
      var flag = e.getModifierState(&quot;CapsLock&quot;);
      if(flag) {
          document.getElementById(&quot;feedback&quot;).innerHTML = &quot;CapsLock activated&quot;;
          
      } else {
          document.getElementById(&quot;feedback&quot;).innerHTML = &quot;CapsLock not activated&quot;;
      }
    }
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is isNaN&lt;/h3&gt; &lt;p&gt;The isNaN() function is used to determine whether a value is an illegal number (Not-a-Number) or not. i.e, This function returns true if the value equates to NaN. Otherwise it returns false.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isNaN(&#39;Hello&#39;) //true
isNaN(&#39;100&#39;) //false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between undeclared and undefined variables&lt;/h3&gt; &lt;p&gt;Below are the major differences between undeclared and undefined variables,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;undeclared&lt;/th&gt; 
     &lt;th&gt;undefined&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;These variables do not exist in a program and are not declared&lt;/td&gt; 
     &lt;td&gt;These variables declared in the program but have not assigned any value&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;If you try to read the value of an undeclared variable, then a runtime error is encountered&lt;/td&gt; 
     &lt;td&gt;If you try to read the value of an undefined variable, an undefined value is returned.&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are global variables&lt;/h3&gt; &lt;p&gt;Global variables are those that are available throughout the length of the code without any scope. The var keyword is used to declare a local variable but if you omit it then it will become global variable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;msg = &quot;Hello&quot; // var is missing, it becomes global variable
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems with global variables&lt;/h3&gt; &lt;p&gt;The problem with global variables is the conflict of variable names of local and global scope. It is also difficult to debug and test the code that relies on global variables.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is NaN property&lt;/h3&gt; &lt;p&gt;The NaN property is a global property that represents &quot;Not-a-Number&quot; value. i.e, It indicates that a value is not a legal number. It is very rare to use NaN in a program but it can be used as return value for few cases&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Math.sqrt(-1)
parseInt(&quot;Hello&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of isFinite function&lt;/h3&gt; &lt;p&gt;The isFinite() function is used to determine whether a number is a finite, legal number. It returns false if the value is +infinity, -infinity, or NaN (Not-a-Number), otherwise it returns true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isFinite(Infinity);  // false
isFinite(NaN);       // false
isFinite(-Infinity); // false

isFinite(100);         // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event flow&lt;/h3&gt; &lt;p&gt;Event flow is the order in which event is received on the web page. When you click an element that is nested in various other elements, before your click actually reaches its destination, or target element, it must trigger the click event for each of its parent elements first, starting at the top with the global window object. There are two ways of event flow&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Top to Bottom(Event Capturing)&lt;/li&gt; 
   &lt;li&gt;Bottom to Top (Event Bubbling)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is event bubbling&lt;/h3&gt; &lt;p&gt;Event bubbling is a type of event propagation where the event first triggers on the innermost target element, and then successively triggers on the ancestors (parents) of the target element in the same nesting hierarchy till it reaches the outermost DOM element.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is event capturing&lt;/h3&gt; &lt;p&gt;Event capturing is a type of event propagation where the event is first captured by the outermost element, and then successively triggers on the descendants (children) of the target element in the same nesting hierarchy till it reaches the innermost DOM element.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you submit a form using JavaScript&lt;/h3&gt; &lt;p&gt;You can submit a form using &lt;code&gt;document.forms[0].submit()&lt;/code&gt;. All the form input&#39;s information is submitted using onsubmit event handler&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function submit() {
    document.forms[0].submit();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find operating system details&lt;/h3&gt; &lt;p&gt;The window.navigator object contains information about the visitor&#39;s browser OS details. Some of the OS properties are available under platform property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(navigator.platform);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between document load and DOMContentLoaded events&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;DOMContentLoaded&lt;/code&gt; event is fired when the initial HTML document has been completely loaded and parsed, without waiting for assets(stylesheets, images, and subframes) to finish loading. Whereas The load event is fired when the whole page has loaded, including all dependent resources(stylesheets, images).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between native, host and user objects&lt;/h3&gt; &lt;p&gt;&lt;code&gt;Native objects&lt;/code&gt; are objects that are part of the JavaScript language defined by the ECMAScript specification. For example, String, Math, RegExp, Object, Function etc core objects defined in the ECMAScript spec. &lt;code&gt;Host objects&lt;/code&gt; are objects provided by the browser or runtime environment (Node). For example, window, XmlHttpRequest, DOM nodes etc are considered as host objects. &lt;code&gt;User objects&lt;/code&gt; are objects defined in the javascript code. For example, User objects created for profile information.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the tools or techniques used for debugging JavaScript code&lt;/h3&gt; &lt;p&gt;You can use below tools or techniques for debugging javascript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Chrome Devtools&lt;/li&gt; 
   &lt;li&gt;debugger statement&lt;/li&gt; 
   &lt;li&gt;Good old console.log statement&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the pros and cons of promises over callbacks&lt;/h3&gt; &lt;p&gt;Below are the list of pros and cons of promises over callbacks,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It avoids callback hell which is unreadable&lt;/li&gt; 
   &lt;li&gt;Easy to write sequential asynchronous code with .then()&lt;/li&gt; 
   &lt;li&gt;Easy to write parallel asynchronous code with Promise.all()&lt;/li&gt; 
   &lt;li&gt;Solves some of the common problems of callbacks(call the callback too late, too early, many times and swallow errors/exceptions)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It makes little complex code&lt;/li&gt; 
   &lt;li&gt;You need to load a polyfill if ES6 is not supported&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between an attribute and a property&lt;/h3&gt; &lt;p&gt;Attributes are defined on the HTML markup whereas properties are defined on the DOM. For example, the below HTML element has 2 attributes type and value,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;input type=&quot;text&quot; value=&quot;Name:&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can retrieve the attribute value as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const input = document.querySelector(&#39;input&#39;);
console.log(input.getAttribute(&#39;value&#39;)); // Good morning
console.log(input.value); // Good morning
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And after you change the value of the text field to &quot;Good evening&quot;, it becomes like&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(input.getAttribute(&#39;value&#39;)); // Good morning
console.log(input.value); // Good evening
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is same-origin policy&lt;/h3&gt; &lt;p&gt;The same-origin policy is a policy that prevents JavaScript from making requests across domain boundaries. An origin is defined as a combination of URI scheme, hostname, and port number. If you enable this policy then it prevents a malicious script on one page from obtaining access to sensitive data on another web page using Document Object Model(DOM).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of void 0&lt;/h3&gt; &lt;p&gt;Void(0) is used to prevent the page from refreshing. This will be helpful to eliminate the unwanted side-effect, because it will return the undefined primitive value. It is commonly used for HTML documents that use href=&quot;JavaScript:Void(0);&quot; within an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element. i.e, when you click a link, the browser loads a new page or refreshes the same page. But this behavior will be prevented using this expression. For example, the below link notify the message without reloading the page&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;a href=&quot;JavaScript:void(0);&quot; onclick=&quot;alert(&#39;Well done!&#39;)&quot;&amp;gt;Click Me!&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript a compiled or interpreted language&lt;/h3&gt; &lt;p&gt;JavaScript is an interpreted language, not a compiled language. An interpreter in the browser reads over the JavaScript code, interprets each line, and runs it. Nowadays modern browsers use a technology known as Just-In-Time (JIT) compilation, which compiles JavaScript to executable bytecode just as it is about to run.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript a case-sensitive language&lt;/h3&gt; &lt;p&gt;Yes, JavaScript is a case sensitive language. The language keywords, variables, function &amp;amp; object names, and any other identifiers must always be typed with a consistent capitalization of letters.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is there any relation between Java and JavaScript&lt;/h3&gt; &lt;p&gt;No, they are entirely two different programming languages and have nothing to do with each other. But both of them are Object Oriented Programming languages and like many other languages, they follow similar syntax for basic features(if, else, for, switch, break, continue etc).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are events&lt;/h3&gt; &lt;p&gt;Events are &quot;things&quot; that happen to HTML elements. When JavaScript is used in HTML pages, JavaScript can &lt;code&gt;react&lt;/code&gt; on these events. Some of the examples of HTML events are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Web page has finished loading&lt;/li&gt; 
   &lt;li&gt;Input field was changed&lt;/li&gt; 
   &lt;li&gt;Button was clicked&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s describe the behavior of click event for button element,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
   &amp;lt;script&amp;gt;
     function greeting() {
       alert(&#39;Hello! Good morning&#39;);
     }
   &amp;lt;/script&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
   &amp;lt;button type=&quot;button&quot; onclick=&quot;greeting()&quot;&amp;gt;Click me&amp;lt;/button&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Who created javascript&lt;/h3&gt; &lt;p&gt;JavaScript was created by Brendan Eich in 1995 during his time at Netscape Communications. Initially it was developed under the name &lt;code&gt;Mocha&lt;/code&gt;, but later the language was officially called &lt;code&gt;LiveScript&lt;/code&gt; when it first shipped in beta releases of Netscape.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of preventDefault method&lt;/h3&gt; &lt;p&gt;The preventDefault() method cancels the event if it is cancelable, meaning that the default action or behaviour that belongs to the event will not occur. For example, prevent form submission when clicking on submit button and prevent opening the page URL when clicking on hyperlink are some common use cases.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&quot;link&quot;).addEventListener(&quot;click&quot;, function(event){
 event.preventDefault();
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember that not all events are cancelable.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of stopPropagation method&lt;/h3&gt; &lt;p&gt;The stopPropagation method is used to stop the event from bubbling up the event chain. For example, the below nested divs with stopPropagation method prevents default event propagation when clicking on nested div(Div1)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;p&amp;gt;Click DIV1 Element&amp;lt;/p&amp;gt;
&amp;lt;div onclick=&quot;secondFunc()&quot;&amp;gt;DIV 2
  &amp;lt;div onclick=&quot;firstFunc(event)&quot;&amp;gt;DIV 1&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
function firstFunc(event) {
  alert(&quot;DIV 1&quot;);
  event.stopPropagation();
}

function secondFunc() {
  alert(&quot;DIV 2&quot;);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the steps involved in return false usage&lt;/h3&gt; &lt;p&gt;The return false statement in event handlers performs the below steps,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;First it stops the browser&#39;s default action or behaviour.&lt;/li&gt; 
   &lt;li&gt;It prevents the event from propagating the DOM&lt;/li&gt; 
   &lt;li&gt;Stops callback execution and returns immediately when called.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is BOM&lt;/h3&gt; &lt;p&gt;The Browser Object Model (BOM) allows JavaScript to &quot;talk to&quot; the browser. It consists of the objects navigator, history, screen, location and document which are children of the window. The Browser Object Model is not standardized and can change based on different browsers.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/bom.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of setTimeout&lt;/h3&gt; &lt;p&gt;The setTimeout() method is used to call a function or evaluate an expression after a specified number of milliseconds. For example, let&#39;s log a message after 2 seconds using setTimeout method,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setTimeout(function(){ console.log(&quot;Good morning&quot;); }, 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of setInterval&lt;/h3&gt; &lt;p&gt;The setInterval() method is used to call a function or evaluate an expression at specified intervals (in milliseconds). For example, let&#39;s log a message after 2 seconds using setInterval method,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setInterval(function(){ console.log(&quot;Good morning&quot;); }, 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why is JavaScript treated as Single threaded&lt;/h3&gt; &lt;p&gt;JavaScript is a single-threaded language. Because the language specification does not allow the programmer to write code so that the interpreter can run parts of it in parallel in multiple threads or processes. Whereas languages like java, go, C++ can make multi-threaded and multi-process programs.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event delegation&lt;/h3&gt; &lt;p&gt;Event delegation is a technique for listening to events where you delegate a parent element as the listener for all of the events that happen inside it.&lt;/p&gt; &lt;p&gt;For example, if you wanted to detect field changes in inside a specific form, you can use event delegation technique,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var form = document.querySelector(&#39;#registration-form&#39;);

// Listen for changes to fields inside the form
form.addEventListener(&#39;input&#39;, function (event) {

// Log the field that was changed
console.log(event.target);

}, false);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ECMAScript&lt;/h3&gt; &lt;p&gt;ECMAScript is the scripting language that forms the basis of JavaScript. ECMAScript standardized by the ECMA International standards organization in the ECMA-262 and ECMA-402 specifications. The first edition of ECMAScript was released in 1997.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSON&lt;/h3&gt; &lt;p&gt;JSON (JavaScript Object Notation) is a lightweight format that is used for data interchanging. It is based on a subset of JavaScript language in the way objects are built in JavaScript.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the syntax rules of JSON&lt;/h3&gt; &lt;p&gt;Below are the list of syntax rules of JSON&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The data is in name/value pairs&lt;/li&gt; 
   &lt;li&gt;The data is separated by commas&lt;/li&gt; 
   &lt;li&gt;Curly braces hold objects&lt;/li&gt; 
   &lt;li&gt;Square brackets hold arrays&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose JSON stringify&lt;/h3&gt; &lt;p&gt;When sending data to a web server, the data has to be in a string format. You can achieve this by converting JSON object into a string using stringify() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var userJSON = {&#39;name&#39;: &#39;John&#39;, age: 31}
var userString = JSON.stringify(user);
console.log(userString); //&quot;{&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:31}&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you parse JSON string&lt;/h3&gt; &lt;p&gt;When receiving the data from a web server, the data is always in a string format. But you can convert this string value to a javascript object using parse() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var userString = &#39;{&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:31}&#39;;
var userJSON = JSON.parse(userString);
console.log(userJSON);// {name: &quot;John&quot;, age: 31}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need JSON&lt;/h3&gt; &lt;p&gt;When exchanging data between a browser and a server, the data can only be text. Since JSON is text only, it can easily be sent to and from a server, and used as a data format by any programming language.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are PWAs&lt;/h3&gt; &lt;p&gt;Progressive web applications (PWAs) are a type of mobile app delivered through the web, built using common web technologies including HTML, CSS and JavaScript. These PWAs are deployed to servers, accessible through URLs, and indexed by search engines.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of clearTimeout method&lt;/h3&gt; &lt;p&gt;The clearTimeout() function is used in javascript to clear the timeout which has been set by setTimeout()function before that. i.e, The return value of setTimeout() function is stored in a variable and it‚Äôs passed into the clearTimeout() function to clear the timer.&lt;/p&gt; &lt;p&gt;For example, the below setTimeout method is used to display the message after 3 seconds. This timeout can be cleared by the clearTimeout() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script&amp;gt;
var msg;
function greeting() {
   alert(&#39;Good morning&#39;);
}
function start() {
  msg =setTimeout(greeting, 3000);

}

function stop() {
    clearTimeout(msg);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of clearInterval method&lt;/h3&gt; &lt;p&gt;The clearInterval() function is used in javascript to clear the interval which has been set by setInterval() function. i.e, The return value returned by setInterval() function is stored in a variable and it‚Äôs passed into the clearInterval() function to clear the interval.&lt;/p&gt; &lt;p&gt;For example, the below setInterval method is used to display the message for every 3 seconds. This interval can be cleared by the clearInterval() method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script&amp;gt;
var msg;
function greeting() {
   alert(&#39;Good morning&#39;);
}
function start() {
  msg = setInterval(greeting, 3000);

}

function stop() {
    clearInterval(msg);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you redirect new page in javascript&lt;/h3&gt; &lt;p&gt;In vanilla javascript, you can redirect to a new page using the &lt;code&gt;location&lt;/code&gt; property of window object. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function redirect() {
   window.location.href = &#39;newPage.html&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether a string contains a substring&lt;/h3&gt; &lt;p&gt;There are 3 possible ways to check whether a string contains a substring or not,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using includes:&lt;/strong&gt; ES6 provided &lt;code&gt;String.prototype.includes&lt;/code&gt; method to test a string contains a substring&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, subString = &quot;hell&quot;;
mainString.includes(subString)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using indexOf:&lt;/strong&gt; In an ES5 or older environment, you can use &lt;code&gt;String.prototype.indexOf&lt;/code&gt; which returns the index of a substring. If the index value is not equal to -1 then it means the substring exists in the main string.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, subString = &quot;hell&quot;;
mainString.indexOf(subString) !== -1
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using RegEx:&lt;/strong&gt; The advanced solution is using Regular expression&#39;s test method(&lt;code&gt;RegExp.test&lt;/code&gt;), which allows for testing for against regular expressions&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var mainString = &quot;hello&quot;, regex = /hell/;
regex.test(mainString)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you validate an email in javascript&lt;/h3&gt; &lt;p&gt;You can validate an email in javascript using regular expressions. It is recommended to do validations on the server side instead of the client side. Because the javascript can be disabled on the client side.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function validateEmail(email) {
    var re = /^(([^&amp;lt;&amp;gt;()\[\]\\.,;:\s@&quot;]+(\.[^&amp;lt;&amp;gt;()\[\]\\.,;:\s@&quot;]+)*)|(&quot;.+&quot;))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The above regular expression accepts unicode characters.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the current url with javascript&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;window.location.href&lt;/code&gt; expression to get the current url path and you can use the same expression for updating the URL too. You can also use &lt;code&gt;document.URL&lt;/code&gt; for read-only purposes but this solution has issues in FF.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;location.href&#39;, window.location.href); // Returns full URL
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the various url properties of location object&lt;/h3&gt; &lt;p&gt;The below &lt;code&gt;Location&lt;/code&gt; object properties can be used to access URL components of the page,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;href - The entire URL&lt;/li&gt; 
   &lt;li&gt;protocol - The protocol of the URL&lt;/li&gt; 
   &lt;li&gt;host - The hostname and port of the URL&lt;/li&gt; 
   &lt;li&gt;hostname - The hostname of the URL&lt;/li&gt; 
   &lt;li&gt;port - The port number in the URL&lt;/li&gt; 
   &lt;li&gt;pathname - The path name of the URL&lt;/li&gt; 
   &lt;li&gt;search - The query portion of the URL&lt;/li&gt; 
   &lt;li&gt;hash - The anchor portion of the URL&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do get query string values in javascript&lt;/h3&gt; &lt;p&gt;You can use URLSearchParams to get query string values in javascript. Let&#39;s see an example to get the client code value from URL query string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const urlParams = new URLSearchParams(window.location.search);
const clientCode = urlParams.get(&#39;clientCode&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check if a key exists in an object&lt;/h3&gt; &lt;p&gt;You can check whether a key exists in an object or not using three approaches,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using in operator:&lt;/strong&gt; You can use the in operator whether a key exists in an object or not&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;key&quot; in obj
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and If you want to check if a key doesn&#39;t exist, remember to use parenthesis,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;!(&quot;key&quot; in obj)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using hasOwnProperty method:&lt;/strong&gt; You can use &lt;code&gt;hasOwnProperty&lt;/code&gt; to particularly test for properties of the object instance (and not inherited properties)&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;obj.hasOwnProperty(&quot;key&quot;) // true
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using undefined comparison:&lt;/strong&gt; If you access a non-existing property from an object, the result is undefined. Let‚Äôs compare the properties against undefined to determine the existence of the property.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = {
  name: &#39;John&#39;
};

console.log(user.name !== undefined);     // true
console.log(user.nickName !== undefined); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you loop through or enumerate javascript object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;for-in&lt;/code&gt; loop to loop through javascript object. You can also make sure that the key you get is an actual property of an object, and doesn&#39;t come from the prototype using &lt;code&gt;hasOwnProperty&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {
    &quot;k1&quot;: &quot;value1&quot;,
    &quot;k2&quot;: &quot;value2&quot;,
    &quot;k3&quot;: &quot;value3&quot;
};

for (var key in object) {
    if (object.hasOwnProperty(key)) {
        console.log(key + &quot; -&amp;gt; &quot; + object[key]); // k1 -&amp;gt; value1 ...
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you test for an empty object&lt;/h3&gt; &lt;p&gt;There are different solutions based on ECMAScript versions&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object entries(ECMA 7+):&lt;/strong&gt; You can use object entries length along with constructor type.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.entries(obj).length === 0 &amp;amp;&amp;amp; obj.constructor === Object // Since date object length is 0, you need to check constructor check as well
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object keys(ECMA 5+):&lt;/strong&gt; You can use object keys length along with constructor type.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.keys(obj).length === 0 &amp;amp;&amp;amp; obj.constructor === Object // Since date object length is 0, you need to check constructor check as well
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using for-in with hasOwnProperty(Pre-ECMA 5):&lt;/strong&gt; You can use a for-in loop along with hasOwnProperty.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isEmpty(obj) {
  for(var prop in obj) {
    if(obj.hasOwnProperty(prop)) {
      return false;
    }
  }

  return JSON.stringify(obj) === JSON.stringify({});
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an arguments object&lt;/h3&gt; &lt;p&gt;The arguments object is an Array-like object accessible inside functions that contains the values of the arguments passed to that function. For example, let&#39;s see how to use arguments object inside sum function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function sum() {
    var total = 0;
    for (var i = 0, len = arguments.length; i &amp;lt; len; ++i) {
        total += arguments[i];
    }
    return total;
}

sum(1, 2, 3) // returns 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can&#39;t apply array methods on arguments object. But you can convert into a regular array as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var argsArray = Array.prototype.slice.call(arguments);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make first letter of the string in an uppercase&lt;/h3&gt; &lt;p&gt;You can create a function which uses a chain of string methods such as charAt, toUpperCase and slice methods to generate a string with the first letter in uppercase.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the pros and cons of for loop&lt;/h3&gt; &lt;p&gt;The for-loop is a commonly used iteration syntax in javascript. It has both pros and cons&lt;/p&gt; &lt;h4&gt;Pros&lt;/h4&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Works on every environment&lt;/li&gt; 
   &lt;li&gt;You can use break and continue flow control statements&lt;/li&gt; 
  &lt;/ol&gt; &lt;h4&gt;Cons&lt;/h4&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Too verbose&lt;/li&gt; 
   &lt;li&gt;Imperative&lt;/li&gt; 
   &lt;li&gt;You might face one-by-off errors&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you display the current date in javascript&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new Date()&lt;/code&gt; to generate a new Date object containing the current date and time. For example, let&#39;s display the current date in mm/dd/yyyy&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var today = new Date();
var dd = String(today.getDate()).padStart(2, &#39;0&#39;);
var mm = String(today.getMonth() + 1).padStart(2, &#39;0&#39;); //January is 0!
var yyyy = today.getFullYear();

today = mm + &#39;/&#39; + dd + &#39;/&#39; + yyyy;
document.write(today);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare two date objects&lt;/h3&gt; &lt;p&gt;You need to use date.getTime() method to compare date values instead of comparison operators (==, !=, ===, and !== operators)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var d1 = new Date();
var d2 = new Date(d1);
console.log(d1.getTime() === d2.getTime()); //True
console.log(d1 === d2); // False
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check if a string starts with another string&lt;/h3&gt; &lt;p&gt;You can use ECMAScript 6&#39;s &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; method to check if a string starts with another string or not. But it is not yet supported in all browsers. Let&#39;s see an example to see this usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;Good morning&quot;.startsWith(&quot;Good&quot;); // true
&quot;Good morning&quot;.startsWith(&quot;morning&quot;); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you trim a string in javascript&lt;/h3&gt; &lt;p&gt;JavaScript provided a trim method on string types to trim any whitespaces present at the beginning or ending of the string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;  Hello World   &quot;.trim(); //Hello World
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your browser(&amp;lt;IE9) doesn&#39;t support this method then you can use below polyfill.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (!String.prototype.trim) {
    (function() {
        // Make sure we trim BOM and NBSP
        var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
        String.prototype.trim = function() {
            return this.replace(rtrim, &#39;&#39;);
        };
    })();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you add a key value pair in javascript&lt;/h3&gt; &lt;p&gt;There are two possible solutions to add new properties to an object. Let&#39;s take a simple object to explain these solutions.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var object = {
    key1: value1,
    key2: value2
};
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using dot notation:&lt;/strong&gt; This solution is useful when you know the name of the property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;object.key3 = &quot;value3&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using square bracket notation:&lt;/strong&gt; This solution is useful when the name of the property is dynamically determined.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;obj[&quot;key3&quot;] = &quot;value3&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is the !-- notation represents a special operator&lt;/h3&gt; &lt;p&gt;No,that&#39;s not a special operator. But it is a combination of 2 standard operators one after the other,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;A logical not (!)&lt;/li&gt; 
   &lt;li&gt;A prefix decrement (--)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;At first, the value decremented by one and then tested to see if it is equal to zero or not for determining the truthy/falsy value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you assign default values to variables&lt;/h3&gt; &lt;p&gt;You can use the logical or operator &lt;code&gt;||&lt;/code&gt; in an assignment expression to provide a default value. The syntax looks like as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = b || c;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As per the above expression, variable &#39;a &#39;will get the value of &#39;c&#39; only if &#39;b&#39; is falsy (if is null, false, undefined, 0, empty string, or NaN), otherwise &#39;a&#39; will get the value of &#39;b&#39;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define multiline strings&lt;/h3&gt; &lt;p&gt;You can define multiline string literals using the &#39;\&#39; character followed by line terminator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var str = &quot;This is a \
very lengthy \
sentence!&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But if you have a space after the &#39;\&#39; character, the code will look exactly the same, but it will raise a SyntaxError.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an app shell model&lt;/h3&gt; &lt;p&gt;An application shell (or app shell) architecture is one way to build a Progressive Web App that reliably and instantly loads on your users&#39; screens, similar to what you see in native applications. It is useful for getting some initial HTML to the screen fast without a network.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can we define properties for functions&lt;/h3&gt; &lt;p&gt;Yes, We can define properties for functions because functions are also objects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;fn = function(x) {
   //Function code goes here
}

fn.name = &quot;John&quot;;

fn.profile = function(y) {
  //Profile code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the way to find the number of parameters expected by a function&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;function.length&lt;/code&gt; syntax to find the number of parameters expected by a function. Let&#39;s take an example of &lt;code&gt;sum&lt;/code&gt; function to calculate the sum of numbers,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function sum(num1, num2, num3, num4){
    return num1 + num2 + num3 + num4;
}
sum.length // 4 is the number of parameters expected.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a polyfill&lt;/h3&gt; &lt;p&gt;A polyfill is a piece of JS code used to provide modern functionality on older browsers that do not natively support it. For example, Silverlight plugin polyfill can be used to mimic the functionality of an HTML Canvas element on Microsoft Internet Explorer 7.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are break and continue statements&lt;/h3&gt; &lt;p&gt;The break statement is used to &quot;jump out&quot; of a loop. i.e, It breaks the loop and continues executing the code after the loop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (i = 0; i &amp;lt; 10; i++) {
  if (i === 5) { break; }
  text += &quot;Number: &quot; + i + &quot;&amp;lt;br&amp;gt;&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The continue statement is used to &quot;jump over&quot; one iteration in the loop. i.e, It breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (i = 0; i &amp;lt; 10; i++) {
    if (i === 5) { continue; }
    text += &quot;Number: &quot; + i + &quot;&amp;lt;br&amp;gt;&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are js labels&lt;/h3&gt; &lt;p&gt;The label statement allows us to name loops and blocks in JavaScript. We can then use these labels to refer back to the code later. For example, the below code with labels avoids printing the numbers when they are same,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var i, j;

loop1:
for (i = 0; i &amp;lt; 3; i++) {
   loop2:
   for (j = 0; j &amp;lt; 3; j++) {
      if (i === j) {
         continue loop1;
      }
      console.log(&#39;i = &#39; + i + &#39;, j = &#39; + j);
   }
}

// Output is:
//   &quot;i = 1, j = 0&quot;
//   &quot;i = 2, j = 0&quot;
//   &quot;i = 2, j = 1&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of keeping declarations at the top&lt;/h3&gt; &lt;p&gt;It is recommended to keep all declarations at the top of each script or function. The benefits of doing this are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Gives cleaner code&lt;/li&gt; 
   &lt;li&gt;It provides a single place to look for local variables&lt;/li&gt; 
   &lt;li&gt;Easy to avoid unwanted global variables&lt;/li&gt; 
   &lt;li&gt;It reduces the possibility of unwanted re-declarations&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of initializing variables&lt;/h3&gt; &lt;p&gt;It is recommended to initialize variables because of the below benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It gives cleaner code&lt;/li&gt; 
   &lt;li&gt;It provides a single place to initialize variables&lt;/li&gt; 
   &lt;li&gt;Avoid undefined values in the code&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the recommendations to create new object&lt;/h3&gt; &lt;p&gt;It is recommended to avoid creating new objects using &lt;code&gt;new Object()&lt;/code&gt;. Instead you can initialize values based on it&#39;s type to create the objects.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Assign {} instead of new Object()&lt;/li&gt; 
   &lt;li&gt;Assign &quot;&quot; instead of new String()&lt;/li&gt; 
   &lt;li&gt;Assign 0 instead of new Number()&lt;/li&gt; 
   &lt;li&gt;Assign false instead of new Boolean()&lt;/li&gt; 
   &lt;li&gt;Assign [] instead of new Array()&lt;/li&gt; 
   &lt;li&gt;Assign /()/ instead of new RegExp()&lt;/li&gt; 
   &lt;li&gt;Assign function (){} instead of new Function()&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;You can define them as an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var v1 = {};
var v2 = &quot;&quot;;
var v3 = 0;
var v4 = false;
var v5 = [];
var v6 = /()/;
var v7 = function(){};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define JSON arrays&lt;/h3&gt; &lt;p&gt;JSON arrays are written inside square brackets and arrays contain javascript objects. For example, the JSON array of users would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;users&quot;:[
  {&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Abrahm&quot;},
  {&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;},
  {&quot;firstName&quot;:&quot;Shane&quot;, &quot;lastName&quot;:&quot;Warn&quot;}
]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you generate random integers&lt;/h3&gt; &lt;p&gt;You can use Math.random() with Math.floor() to return random integers. For example, if you want generate random integers between 1 to 10, the multiplication factor should be 10,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Math.floor(Math.random() * 10) + 1;     // returns a random integer from 1 to 10
Math.floor(Math.random() * 100) + 1;     // returns a random integer from 1 to 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Math.random() returns a random number between 0 (inclusive), and 1 (exclusive)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can you write a random integers function to print integers with in a range&lt;/h3&gt; &lt;p&gt;Yes, you can create a proper random function to return a random number between min and max (both included)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function randomInteger(min, max) {
  return Math.floor(Math.random() * (max - min + 1) ) + min;
}
randomInteger(1, 100); // returns a random integer from 1 to 100
randomInteger(1, 1000); // returns a random integer from 1 to 1000
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is tree shaking&lt;/h3&gt; &lt;p&gt;Tree shaking is a form of dead code elimination. It means that unused modules will not be included in the bundle during the build process and for that it relies on the static structure of ES2015 module syntax,( i.e. import and export). Initially this has been popularized by the ES2015 module bundler &lt;code&gt;rollup&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the need of tree shaking&lt;/h3&gt; &lt;p&gt;Tree Shaking can significantly reduce the code size in any application. i.e, The less code we send over the wire the more performant the application will be. For example, if we just want to create a ‚ÄúHello World‚Äù Application using SPA frameworks then it will take around a few MBs, but by tree shaking it can bring down the size to just a few hundred KBs. Tree shaking is implemented in Rollup and Webpack bundlers.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it recommended to use eval&lt;/h3&gt; &lt;p&gt;No, it allows arbitrary code to be run which causes a security problem. As we know that the eval() function is used to run text as code. In most of the cases, it should not be necessary to use it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Regular Expression&lt;/h3&gt; &lt;p&gt;A regular expression is a sequence of characters that forms a search pattern. You can use this search pattern for searching data in a text. These can be used to perform all types of text search and text replace operations. Let&#39;s see the syntax format now,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/pattern/modifiers;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For example, the regular expression or search pattern with case-insensitive username would be,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;/John/i
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the string methods available in Regular expression&lt;/h3&gt; &lt;p&gt;Regular Expressions has two string methods: search() and replace(). The search() method uses an expression to search for a match, and returns the position of the match.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Hello John&quot;;
var n = msg.search(/John/i); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The replace() method is used to return a modified string where the pattern is replaced.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Hello John&quot;;
var n = msg.replace(/John/i, &quot;Buttler&quot;); // Hello Buttler
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are modifiers in regular expression&lt;/h3&gt; &lt;p&gt;Modifiers can be used to perform case-insensitive and global searches. Let&#39;s list down some of the modifiers,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Modifier&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;i&lt;/td&gt; 
     &lt;td&gt;Perform case-insensitive matching&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;g&lt;/td&gt; 
     &lt;td&gt;Perform a global match rather than stops at first match&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;m&lt;/td&gt; 
     &lt;td&gt;Perform multiline matching&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;Let&#39;s take an example of global modifier,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var text = &quot;Learn JS one by one&quot;;
var pattern = /one/g;
var result = text.match(pattern); // one,one
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are regular expression patterns&lt;/h3&gt; &lt;p&gt;Regular Expressions provide a group of patterns in order to match characters. Basically they are categorized into 3 types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Brackets:&lt;/strong&gt; These are used to find a range of characters. For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;[abc]: Used to find any of the characters between the brackets(a,b,c)&lt;/li&gt; 
     &lt;li&gt;[0-9]: Used to find any of the digits between the brackets&lt;/li&gt; 
     &lt;li&gt;(a|b): Used to find any of the alternatives separated with |&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Metacharacters:&lt;/strong&gt; These are characters with a special meaning For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;\d: Used to find a digit&lt;/li&gt; 
     &lt;li&gt;\s: Used to find a whitespace character&lt;/li&gt; 
     &lt;li&gt;\b: Used to find a match at the beginning or ending of a word&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Quantifiers:&lt;/strong&gt; These are useful to define quantities For example, below are some use cases, 
    &lt;ol&gt; 
     &lt;li&gt;n+: Used to find matches for any string that contains at least one n&lt;/li&gt; 
     &lt;li&gt;n*: Used to find matches for any string that contains zero or more occurrences of n&lt;/li&gt; 
     &lt;li&gt;n?: Used to find matches for any string that contains zero or one occurrences of n&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a RegExp object&lt;/h3&gt; &lt;p&gt;RegExp object is a regular expression object with predefined properties and methods. Let&#39;s see the simple usage of RegExp object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var regexp = new RegExp(&#39;\\w+&#39;);
console.log(regexp);
// expected output: /\w+/
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you search a string for a pattern&lt;/h3&gt; &lt;p&gt;You can use the test() method of regular expression in order to search a string for a pattern, and return true or false depending on the result.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var pattern = /you/;
console.log(pattern.test(&quot;How are you?&quot;)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of exec method&lt;/h3&gt; &lt;p&gt;The purpose of exec method is similar to test method but it executes a search for a match in a specified string and returns a result array, or null instead of returning true/false.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var pattern = /you/;
console.log(pattern.exec(&quot;How are you?&quot;)); //[&quot;you&quot;, index: 8, input: &quot;How are you?&quot;, groups: undefined]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you change the style of a HTML element&lt;/h3&gt; &lt;p&gt;You can change inline style or classname of a HTML element using javascript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using style property:&lt;/strong&gt; You can modify inline style using style property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&quot;title&quot;).style.fontSize = &quot;30px&quot;;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using ClassName property:&lt;/strong&gt; It is easy to modify element class using className property&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; document.getElementById(&quot;title&quot;).className = &quot;custom-title&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What would be the result of 1+2+&#39;3&#39;&lt;/h3&gt; &lt;p&gt;The output is going to be &lt;code&gt;33&lt;/code&gt;. Since &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; are numeric values, the result of the first two digits is going to be a numeric value &lt;code&gt;3&lt;/code&gt;. The next digit is a string type value because of that the addition of numeric value &lt;code&gt;3&lt;/code&gt; and string type value &lt;code&gt;3&lt;/code&gt; is just going to be a concatenation value &lt;code&gt;33&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a debugger statement&lt;/h3&gt; &lt;p&gt;The debugger statement invokes any available debugging functionality, such as setting a breakpoint. If no debugging functionality is available, this statement has no effect. For example, in the below function a debugger statement has been inserted. So execution is paused at the debugger statement just like a breakpoint in the script source.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function getProfile() {
// code goes here
debugger;
// code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of breakpoints in debugging&lt;/h3&gt; &lt;p&gt;You can set breakpoints in the javascript code once the debugger statement is executed and the debugger window pops up. At each breakpoint, javascript will stop executing, and let you examine the JavaScript values. After examining values, you can resume the execution of code using the play button.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use reserved words as identifiers&lt;/h3&gt; &lt;p&gt;No, you cannot use the reserved words as variables, labels, object or function names. Let&#39;s see one simple example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var else = &quot;hello&quot;; // Uncaught SyntaxError: Unexpected token else
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a mobile browser&lt;/h3&gt; &lt;p&gt;You can use regex which returns a true or false value depending on whether or not the user is browsing with a mobile.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.mobilecheck = function() {
  var mobileCheck = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) mobileCheck = true;})(navigator.userAgent||navigator.vendor||window.opera);
  return mobileCheck;
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a mobile browser without regexp&lt;/h3&gt; &lt;p&gt;You can detect mobile browsers by simply running through a list of devices and checking if the useragent matches anything. This is an alternative solution for RegExp usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function detectmob() {
 if( navigator.userAgent.match(/Android/i)
 || navigator.userAgent.match(/webOS/i)
 || navigator.userAgent.match(/iPhone/i)
 || navigator.userAgent.match(/iPad/i)
 || navigator.userAgent.match(/iPod/i)
 || navigator.userAgent.match(/BlackBerry/i)
 || navigator.userAgent.match(/Windows Phone/i)
 ){
    return true;
  }
 else {
    return false;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the image width and height using JS&lt;/h3&gt; &lt;p&gt;You can programmatically get the image and check the dimensions(width and height) using Javascript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var img = new Image();
img.onload = function() {
  console.log(this.width + &#39;x&#39; + this.height);
}
img.src = &#39;http://www.google.com/intl/en_ALL/images/logo.gif&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make synchronous HTTP request&lt;/h3&gt; &lt;p&gt;Browsers provide an XMLHttpRequest object which can be used to make synchronous HTTP requests from JavaScript&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function httpGet(theUrl)
{
    var xmlHttpReq = new XMLHttpRequest();
    xmlHttpReq.open( &quot;GET&quot;, theUrl, false ); // false for synchronous request
    xmlHttpReq.send( null );
    return xmlHttpReq.responseText;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make asynchronous HTTP request&lt;/h3&gt; &lt;p&gt;Browsers provide an XMLHttpRequest object which can be used to make asynchronous HTTP requests from JavaScript by passing the 3rd parameter as true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function httpGetAsync(theUrl, callback)
{
    var xmlHttpReq = new XMLHttpRequest();
    xmlHttpReq.onreadystatechange = function() {
        if (xmlHttpReq.readyState == 4 &amp;amp;&amp;amp; xmlHttpReq.status == 200)
            callback(xmlHttpReq.responseText);
    }
    xmlHttp.open(&quot;GET&quot;, theUrl, true); // true for asynchronous
    xmlHttp.send(null);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you convert date to another timezone in javascript&lt;/h3&gt; &lt;p&gt;You can use the toLocaleString() method to convert dates in one timezone to another. For example, let&#39;s convert current date to British English timezone as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(event.toLocaleString(&#39;en-GB&#39;, { timeZone: &#39;UTC&#39; })); //29/06/2019, 09:56:00
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the properties used to get size of window&lt;/h3&gt; &lt;p&gt;You can use innerWidth, innerHeight, clientWidth, clientHeight properties of windows, document element and document body objects to find the size of a window. Let&#39;s use them combination of these properties to calculate the size of a window or document,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var width = window.innerWidth
|| document.documentElement.clientWidth
|| document.body.clientWidth;

var height = window.innerHeight
|| document.documentElement.clientHeight
|| document.body.clientHeight;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a conditional operator in javascript&lt;/h3&gt; &lt;p&gt;The conditional (ternary) operator is the only JavaScript operator that takes three operands which acts as a shortcut for if statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var isAuthenticated = false;
console.log(isAuthenticated ? &#39;Hello, welcome&#39; : &#39;Sorry, you are not authenticated&#39;); //Sorry, you are not authenticated
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can you apply chaining on conditional operator&lt;/h3&gt; &lt;p&gt;Yes, you can apply chaining on conditional operators similar to if ‚Ä¶ else if‚Äà‚Ä¶ else if ‚Ä¶ else chain. The syntax is going to be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function traceValue(someParam) {
    return condition1 ? value1
         : condition2 ? value2
         : condition3 ? value3
         : value4;
}

// The above conditional operator is equivalent to:

function traceValue(someParam) {
    if (condition1) { return value1; }
    else if (condition2) { return value2; }
    else if (condition3) { return value3; }
    else { return value4; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the ways to execute javascript after page load&lt;/h3&gt; &lt;p&gt;You can execute javascript after page load in many different ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;window.onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.onload = function ...
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;document.onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.onload = function ...
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;body onload:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;body onload=&quot;script();&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between proto and prototype&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;__proto__&lt;/code&gt; object is the actual object that is used in the lookup chain to resolve methods, etc. Whereas &lt;code&gt;prototype&lt;/code&gt; is the object that is used to build &lt;code&gt;__proto__&lt;/code&gt; when you create an object with new&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;( new Employee ).__proto__ === Employee.prototype;
( new Employee ).prototype === undefined;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example where do you really need semicolon&lt;/h3&gt; &lt;p&gt;It is recommended to use semicolons after every statement in JavaScript. For example, in the below case it throws an error &quot;.. is not a function&quot; at runtime due to missing semicolon.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// define a function
var fn = function () {
    //...
} // semicolon missing at this line

// then execute some code inside a closure
(function () {
    //...
})();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and it will be interpreted as&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fn = function () {
    //...
}(function () {
    //...
})();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In this case, we are passing the second function as an argument to the first function and then trying to call the result of the first function call as a function. Hence, the second function will fail with a &quot;... is not a function&quot; error at runtime.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a freeze method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;freeze()&lt;/strong&gt; method is used to freeze an object. Freezing an object does not allow adding new properties to an object,prevents from removing and prevents changing the enumerability, configurability, or writability of existing properties. i.e, It returns the passed object and does not create a frozen copy.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {
  prop: 100
};

Object.freeze(obj);
obj.prop = 200; // Throws an error in strict mode

console.log(obj.prop); //100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It causes a TypeError if the argument passed is not an object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of freeze method&lt;/h3&gt; &lt;p&gt;Below are the main benefits of using freeze method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for freezing objects and arrays.&lt;/li&gt; 
   &lt;li&gt;It is used to make an object immutable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do I need to use freeze method&lt;/h3&gt; &lt;p&gt;In the Object-oriented paradigm, an existing API contains certain elements that are not intended to be extended, modified, or re-used outside of their current context. Hence it works as the &lt;code&gt;final&lt;/code&gt; keyword which is used in various languages.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect a browser language preference&lt;/h3&gt; &lt;p&gt;You can use navigator object to detect a browser language preference as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var language = navigator.languages &amp;amp;&amp;amp; navigator.languages[0] || // Chrome / Firefox
               navigator.language ||   // All browsers
               navigator.userLanguage; // IE &amp;lt;= 10

console.log(language);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to convert string to title case with javascript&lt;/h3&gt; &lt;p&gt;Title case means that the first letter of each word is capitalized. You can convert a string to title case using the below function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    function toTitleCase(str) {
        return str.replace(
            /\w\S*/g,
            function(txt) {
                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
            }
        );
    }
    toTitleCase(&quot;good morning john&quot;); // Good Morning John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect javascript disabled in the page&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; tag to detect javascript disabled or not. The code block inside &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; gets executed when JavaScript is disabled, and is typically used to display alternative content when the page generated in JavaScript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script type=&quot;javascript&quot;&amp;gt;
    // JS related code goes here
&amp;lt;/script&amp;gt;
&amp;lt;noscript&amp;gt;
    &amp;lt;a href=&quot;next_page.html?noJS=true&quot;&amp;gt;JavaScript is disabled in the page. Please click Next Page&amp;lt;/a&amp;gt;
&amp;lt;/noscript&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are various operators supported by javascript&lt;/h3&gt; &lt;p&gt;An operator is capable of manipulating(mathematical and logical computations) a certain value or operand. There are various operators supported by JavaScript as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Arithmetic Operators:&lt;/strong&gt; Includes + (Addition),‚Äì (Subtraction), * (Multiplication), / (Division), % (Modulus), + + (Increment) and ‚Äì ‚Äì (Decrement)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Comparison Operators:&lt;/strong&gt; Includes = =(Equal),!= (Not Equal), ===(Equal with type), &amp;gt; (Greater than),&amp;gt; = (Greater than or Equal to),&amp;lt; (Less than),&amp;lt;= (Less than or Equal to)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Logical Operators:&lt;/strong&gt; Includes &amp;amp;&amp;amp;(Logical AND),||(Logical OR),!(Logical NOT)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Assignment Operators:&lt;/strong&gt; Includes = (Assignment Operator), += (Add and Assignment Operator), ‚Äì = (Subtract and Assignment Operator), *= (Multiply and Assignment), /= (Divide and Assignment), %= (Modules and Assignment)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Ternary Operators:&lt;/strong&gt; It includes conditional(: ?) Operator&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;typeof Operator:&lt;/strong&gt; It uses to find type of variable. The syntax looks like &lt;code&gt;typeof variable&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a rest parameter&lt;/h3&gt; &lt;p&gt;Rest parameter is an improved way to handle function parameters which allows us to represent an indefinite number of arguments as an array. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function f(a, b, ...theArgs) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For example, let&#39;s take a sum example to calculate on dynamic number of parameters,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function total(‚Ä¶args){
let sum = 0;
for(let i of args){
sum+=i;
}
return sum;
}
console.log(fun(1,2)); //3
console.log(fun(1,2,3)); //6
console.log(fun(1,2,3,4)); //13
console.log(fun(1,2,3,4,5)); //15
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Rest parameter is added in ES2015 or ES6&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if you do not use rest parameter as a last argument&lt;/h3&gt; &lt;p&gt;The rest parameter should be the last argument, as its job is to collect all the remaining arguments into an array. For example, if you define a function like below it doesn‚Äôt make any sense and will throw an error.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function someFunc(a,‚Ä¶b,c){
//You code goes here
return;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the bitwise operators available in javascript&lt;/h3&gt; &lt;p&gt;Below are the list of bitwise logical operators used in JavaScript&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Bitwise AND ( &amp;amp; )&lt;/li&gt; 
   &lt;li&gt;Bitwise OR ( | )&lt;/li&gt; 
   &lt;li&gt;Bitwise XOR ( ^ )&lt;/li&gt; 
   &lt;li&gt;Bitwise NOT ( ~ )&lt;/li&gt; 
   &lt;li&gt;Left Shift ( &amp;lt;&amp;lt; )&lt;/li&gt; 
   &lt;li&gt;Sign Propagating Right Shift ( &amp;gt;&amp;gt; )&lt;/li&gt; 
   &lt;li&gt;Zero fill Right Shift ( &amp;gt;&amp;gt;&amp;gt; )&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a spread operator&lt;/h3&gt; &lt;p&gt;Spread operator allows iterables( arrays / objects / strings ) to be expanded into single arguments/elements. Let&#39;s take an example to see this behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function calculateSum(x, y, z) {
  return x + y + z;
}

const numbers = [1, 2, 3];

console.log(calculateSum(...numbers)); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine whether object is frozen or not&lt;/h3&gt; &lt;p&gt;Object.isFrozen() method is used to determine if an object is frozen or not.An object is frozen if all of the below conditions hold true,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If it is not extensible.&lt;/li&gt; 
   &lt;li&gt;If all of its properties are non-configurable.&lt;/li&gt; 
   &lt;li&gt;If all its data properties are non-writable. The usage is going to be as follows,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
   property: &#39;Welcome JS world&#39;
};
Object.freeze(object);
console.log(Object.isFrozen(object));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine two values same or not using object&lt;/h3&gt; &lt;p&gt;The Object.is() method determines whether two values are the same value. For example, the usage with different types of values would be,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.is(&#39;hello&#39;, &#39;hello&#39;);     // true
Object.is(window, window);   // true
Object.is([], []) // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Two values are the same if one of the following holds:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;both undefined&lt;/li&gt; 
   &lt;li&gt;both null&lt;/li&gt; 
   &lt;li&gt;both true or both false&lt;/li&gt; 
   &lt;li&gt;both strings of the same length with the same characters in the same order&lt;/li&gt; 
   &lt;li&gt;both the same object (means both object have same reference)&lt;/li&gt; 
   &lt;li&gt;both numbers and both +0 both -0 both NaN both non-zero and both not NaN and both have the same value.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of using object is method&lt;/h3&gt; &lt;p&gt;Some of the applications of Object&#39;s &lt;code&gt;is&lt;/code&gt; method are follows,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for comparison of two strings.&lt;/li&gt; 
   &lt;li&gt;It is used for comparison of two numbers.&lt;/li&gt; 
   &lt;li&gt;It is used for comparing the polarity of two numbers.&lt;/li&gt; 
   &lt;li&gt;It is used for comparison of two objects.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you copy properties from one object to other&lt;/h3&gt; &lt;p&gt;You can use the Object.assign() method which is used to copy the values and properties from one or more source objects to a target object. It returns the target object which has properties and values copied from the target object. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.assign(target, ...sources)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take example with one source and one target object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const target = { a: 1, b: 2 };
const source = { b: 3, c: 4 };

const returnedTarget = Object.assign(target, source);

console.log(target); // { a: 1, b: 3, c: 4 }

console.log(returnedTarget); // { a: 1, b: 3, c: 4 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As observed in the above code, there is a common property(&lt;code&gt;b&lt;/code&gt;) from source to target so it&#39;s value has been overwritten.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the applications of assign method&lt;/h3&gt; &lt;p&gt;Below are the some of main applications of Object.assign() method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for cloning an object.&lt;/li&gt; 
   &lt;li&gt;It is used to merge objects with the same properties.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a proxy object&lt;/h3&gt; &lt;p&gt;The Proxy object is used to define custom behavior for fundamental operations such as property lookup, assignment, enumeration, function invocation, etc. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var p = new Proxy(target, handler);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of proxy object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var handler = {
    get: function(obj, prop) {
        return prop in obj ?
            obj[prop] :
            100;
    }
};

var p = new Proxy({}, handler);
p.a = 10;
p.b = null;

console.log(p.a, p.b); // 10, null
console.log(&#39;c&#39; in p, p.c); // false, 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, it uses &lt;code&gt;get&lt;/code&gt; handler which define the behavior of the proxy when an operation is performed on it&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of seal method&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;Object.seal()&lt;/strong&gt; method is used to seal an object, by preventing new properties from being added to it and marking all existing properties as non-configurable. But values of present properties can still be changed as long as they are writable. Let&#39;s see the below example to understand more about seal() method&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const object = {
    property: &#39;Welcome JS world&#39;
 };
 Object.seal(object);
 object.property = &#39;Welcome to object world&#39;;
 console.log(Object.isSealed(object)); // true
 delete object.property; // You cannot delete when sealed
 console.log(object.property); //Welcome to object world
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the applications of seal method&lt;/h3&gt; &lt;p&gt;Below are the main applications of Object.seal() method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is used for sealing objects and arrays.&lt;/li&gt; 
   &lt;li&gt;It is used to make an object immutable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between freeze and seal methods&lt;/h3&gt; &lt;p&gt;If an object is frozen using the Object.freeze() method then its properties become immutable and no changes can be made in them whereas if an object is sealed using the Object.seal() method then the changes can be made in the existing properties of the object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you determine if an object is sealed or not&lt;/h3&gt; &lt;p&gt;The Object.isSealed() method is used to determine if an object is sealed or not. An object is sealed if all of the below conditions hold true&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If it is not extensible.&lt;/li&gt; 
   &lt;li&gt;If all of its properties are non-configurable.&lt;/li&gt; 
   &lt;li&gt;If it is not removable (but not necessarily non-writable). Let&#39;s see it in the action&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
property: &#39;Hello, Good morning&#39;
};

Object.seal(object); // Using seal() method to seal the object

console.log(Object.isSealed(object));      // checking whether the object is sealed or not
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get enumerable key and value pairs&lt;/h3&gt; &lt;p&gt;The Object.entries() method is used to return an array of a given object&#39;s own enumerable string-keyed property [key, value] pairs, in the same order as that provided by a for...in loop. Let&#39;s see the functionality of object.entries() method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const object = {
  a: &#39;Good morning&#39;,
  b: 100
};

for (let [key, value] of Object.entries(object)) {
  console.log(`${key}: ${value}`); // a: &#39;Good morning&#39;
                                   // b: 100
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The order is not guaranteed as object defined.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main difference between Object.values and Object.entries method&lt;/h3&gt; &lt;p&gt;The Object.values() method&#39;s behavior is similar to Object.entries() method but it returns an array of values instead [key,value] pairs.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const object = {
   a: &#39;Good morning&#39;,
   b: 100
 };

 for (let value of Object.values(object)) {
   console.log(`${value}`); // &#39;Good morning&#39;
                                100
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How can you get the list of keys of any object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.keys()&lt;/code&gt; method which is used to return an array of a given object&#39;s own property names, in the same order as we get with a normal loop. For example, you can get the keys of a user object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = {
  name: &#39;John&#39;,
  gender: &#39;male&#39;,
  age: 40
};

console.log(Object.keys(user)); //[&#39;name&#39;, &#39;gender&#39;, &#39;age&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an object with prototype&lt;/h3&gt; &lt;p&gt;The Object.create() method is used to create a new object with the specified prototype object and properties. i.e, It uses an existing object as the prototype of the newly created object. It returns a new object with the specified prototype object and properties.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const user = {
   name: &#39;John&#39;,
   printInfo: function () {
     console.log(`My name is ${this.name}.`);
   }
 };

 const admin = Object.create(user);

 admin.name = &quot;Nick&quot;; // Remember that &quot;name&quot; is a property set on &quot;admin&quot; but not on &quot;user&quot; object

 admin.printInfo(); // My name is Nick
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a WeakSet&lt;/h3&gt; &lt;p&gt;WeakSet is used to store a collection of weakly(weak references) held objects. The syntax would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new WeakSet([iterable]);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the below example to explain it&#39;s behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var ws = new WeakSet();
var user = {};
ws.add(user);
ws.has(user);    // true
ws.delete(user); // removes user from the set
ws.has(user);    // false, user has been removed
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between WeakSet and Set&lt;/h3&gt; &lt;p&gt;The main difference is that references to objects in Set are strong while references to objects in WeakSet are weak. i.e, An object in WeakSet can be garbage collected if there is no other reference to it. Other differences are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Sets can store any value Whereas WeakSets can store only collections of objects&lt;/li&gt; 
   &lt;li&gt;WeakSet does not have size property unlike Set&lt;/li&gt; 
   &lt;li&gt;WeakSet does not have methods such as clear, keys, values, entries, forEach.&lt;/li&gt; 
   &lt;li&gt;WeakSet is not iterable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down the collection of methods available on WeakSet&lt;/h3&gt; &lt;p&gt;Below are the list of methods available on WeakSet,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;add(value): A new object is appended with the given value to the weakset&lt;/li&gt; 
   &lt;li&gt;delete(value): Deletes the value from the WeakSet collection.&lt;/li&gt; 
   &lt;li&gt;has(value): It returns true if the value is present in the WeakSet Collection, otherwise it returns false.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s see the functionality of all the above methods in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var weakSetObject = new WeakSet();
var firstObject = {};
var secondObject = {};
// add(value)
weakSetObject.add(firstObject);
weakSetObject.add(secondObject);
console.log(weakSetObject.has(firstObject)); //true
weakSetObject.delete(secondObject);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a WeakMap&lt;/h3&gt; &lt;p&gt;The WeakMap object is a collection of key/value pairs in which the keys are weakly referenced. In this case, keys must be objects and the values can be arbitrary values. The syntax is looking like as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new WeakMap([iterable])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the below example to explain it&#39;s behavior,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var ws = new WeakMap();
 var user = {};
 ws.set(user);
 ws.has(user);    // true
 ws.delete(user); // removes user from the map
 ws.has(user);    // false, user has been removed
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between WeakMap and Map&lt;/h3&gt; &lt;p&gt;The main difference is that references to key objects in Map are strong while references to key objects in WeakMap are weak. i.e, A key object in WeakMap can be garbage collected if there is no other reference to it. Other differences are,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Maps can store any key type Whereas WeakMaps can store only collections of key objects&lt;/li&gt; 
   &lt;li&gt;WeakMap does not have size property unlike Map&lt;/li&gt; 
   &lt;li&gt;WeakMap does not have methods such as clear, keys, values, entries, forEach.&lt;/li&gt; 
   &lt;li&gt;WeakMap is not iterable.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down the collection of methods available on WeakMap&lt;/h3&gt; &lt;p&gt;Below are the list of methods available on WeakMap,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;set(key, value): Sets the value for the key in the WeakMap object. Returns the WeakMap object.&lt;/li&gt; 
   &lt;li&gt;delete(key): Removes any value associated to the key.&lt;/li&gt; 
   &lt;li&gt;has(key): Returns a Boolean asserting whether a value has been associated to the key in the WeakMap object or not.&lt;/li&gt; 
   &lt;li&gt;get(key): Returns the value associated to the key, or undefined if there is none. Let&#39;s see the functionality of all the above methods in an example,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var weakMapObject = new WeakMap();
var firstObject = {};
var secondObject = {};
// set(key, value)
weakMapObject.set(firstObject, &#39;John&#39;);
weakMapObject.set(secondObject, 100);
console.log(weakMapObject.has(firstObject)); //true
console.log(weakMapObject.get(firstObject)); // John
weakMapObject.delete(secondObject);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of uneval&lt;/h3&gt; &lt;p&gt;The uneval() is an inbuilt function which is used to create a string representation of the source code of an Object. It is a top-level function and is not associated with any object. Let&#39;s see the below example to know more about it&#39;s functionality,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 1;
uneval(a); // returns a String containing 1
uneval(function user() {}); // returns &quot;(function user(){})&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you encode an URL&lt;/h3&gt; &lt;p&gt;The encodeURI() function is used to encode complete URI which has special characters except (, / ? : @ &amp;amp; = + $ #) characters.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var uri = &#39;https://mozilla.org/?x=—à–µ–ª–ª—ã&#39;;
var encoded = encodeURI(uri);
console.log(encoded); // https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you decode an URL&lt;/h3&gt; &lt;p&gt;The decodeURI() function is used to decode a Uniform Resource Identifier (URI) previously created by encodeURI().&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var uri = &#39;https://mozilla.org/?x=—à–µ–ª–ª—ã&#39;;
 var encoded = encodeURI(uri);
 console.log(encoded); // https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B
try {
  console.log(decodeURI(encoded)); // &quot;https://mozilla.org/?x=—à–µ–ª–ª—ã&quot;
} catch(e) { // catches a malformed URI
  console.error(e);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print the contents of web page&lt;/h3&gt; &lt;p&gt;The window object provided a print() method which is used to print the contents of the current window. It opens a Print dialog box which lets you choose between various printing options. Let&#39;s see the usage of print method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;   &amp;lt;input type=&quot;button&quot; value=&quot;Print&quot; onclick=&quot;window.print()&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In most browsers, it will block while the print dialog is open.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between uneval and eval&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;uneval&lt;/code&gt; function returns the source of a given object; whereas the &lt;code&gt;eval&lt;/code&gt; function does the opposite, by evaluating that source code in a different memory area. Let&#39;s see an example to clarify the difference,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = uneval(function greeting() { return &#39;Hello, Good morning&#39;; });
var greeting = eval(msg);
greeting(); // returns &quot;Hello, Good morning&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an anonymous function&lt;/h3&gt; &lt;p&gt;An anonymous function is a function without a name! Anonymous functions are commonly assigned to a variable name or used as a callback function. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function (optionalParameters) {
  //do something
}

const myFunction = function(){ //Anonymous function assigned to a variable
  //do something
};

[1, 2, 3].map(function(element){ //Anonymous function used as a callback function
  //do something
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see the above anonymous function in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = function (a, b) {return a * b};
var z = x(5, 10);
console.log(z); // 50
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the precedence order between local and global variables&lt;/h3&gt; &lt;p&gt;A local variable takes precedence over a global variable with the same name. Let&#39;s see this behavior in an example.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var msg = &quot;Good morning&quot;;
function greeting() {
   msg = &quot;Good Evening&quot;;
   console.log(msg);
}
greeting();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are javascript accessors&lt;/h3&gt; &lt;p&gt;ECMAScript 5 introduced javascript object accessors or computed properties through getters and setters. Getters uses the &lt;code&gt;get&lt;/code&gt; keyword whereas Setters uses the &lt;code&gt;set&lt;/code&gt; keyword.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user = {
  firstName: &quot;John&quot;,
  lastName : &quot;Abraham&quot;,
  language : &quot;en&quot;,
  get lang() {
    return this.language;
  }
  set lang(lang) {
  this.language = lang;
  }
};
console.log(user.lang); // getter access lang as en
user.lang = &#39;fr&#39;;
console.log(user.lang); // setter used to set lang as fr
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define property on Object constructor&lt;/h3&gt; &lt;p&gt;The Object.defineProperty() static method is used to define a new property directly on an object, or modify an existing property on an object, and returns the object. Let&#39;s see an example to know how to define property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};

Object.defineProperty(newObject, &#39;newProperty&#39;, {
  value: 100,
  writable: false
});

console.log(newObject.newProperty); // 100

newObject.newProperty = 200; // It throws an error in strict mode due to writable setting

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between get and defineProperty&lt;/h3&gt; &lt;p&gt;Both have similar results until unless you use classes. If you use &lt;code&gt;get&lt;/code&gt; the property will be defined on the prototype of the object whereas using &lt;code&gt;Object.defineProperty()&lt;/code&gt; the property will be defined on the instance it is applied to.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of Getters and Setters&lt;/h3&gt; &lt;p&gt;Below are the list of benefits of Getters and Setters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;They provide simpler syntax&lt;/li&gt; 
   &lt;li&gt;They are used for defining computed properties, or accessors in JS.&lt;/li&gt; 
   &lt;li&gt;Useful to provide equivalence relation between properties and methods&lt;/li&gt; 
   &lt;li&gt;They can provide better data quality&lt;/li&gt; 
   &lt;li&gt;Useful for doing things behind the scenes with the encapsulated logic.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I add getters and setters using defineProperty method&lt;/h3&gt; &lt;p&gt;Yes, You can use the &lt;code&gt;Object.defineProperty()&lt;/code&gt; method to add Getters and Setters. For example, the below counter object uses increment, decrement, add and subtract properties,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var obj = {counter : 0};

// Define getters
Object.defineProperty(obj, &quot;increment&quot;, {
  get : function () {this.counter++;}
});
Object.defineProperty(obj, &quot;decrement&quot;, {
  get : function () {this.counter--;}
});

// Define setters
Object.defineProperty(obj, &quot;add&quot;, {
  set : function (value) {this.counter += value;}
});
Object.defineProperty(obj, &quot;subtract&quot;, {
  set : function (value) {this.counter -= value;}
});

obj.add = 10;
obj.subtract = 5;
console.log(obj.increment); //6
console.log(obj.decrement); //5
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of switch-case&lt;/h3&gt; &lt;p&gt;The switch case statement in JavaScript is used for decision making purposes. In a few cases, using the switch case statement is going to be more convenient than if-else statements. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;switch (expression)
{
    case value1:
        statement1;
        break;
    case value2:
        statement2;
        break;
    .
    .
    case valueN:
        statementN;
        break;
    default:
        statementDefault;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above multi-way branch statement provides an easy way to dispatch execution to different parts of code based on the value of the expression.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the conventions to be followed for the usage of switch case&lt;/h3&gt; &lt;p&gt;Below are the list of conventions should be taken care,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The expression can be of type either number or string.&lt;/li&gt; 
   &lt;li&gt;Duplicate values are not allowed for the expression.&lt;/li&gt; 
   &lt;li&gt;The default statement is optional. If the expression passed to switch does not match with any case value then the statement within default case will be executed.&lt;/li&gt; 
   &lt;li&gt;The break statement is used inside the switch to terminate a statement sequence.&lt;/li&gt; 
   &lt;li&gt;The break statement is optional. But if it is omitted, the execution will continue on into the next case.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are primitive data types&lt;/h3&gt; &lt;p&gt;A primitive data type is data that has a primitive value (which has no properties or methods). There are 7 types of primitive data types.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;string&lt;/li&gt; 
   &lt;li&gt;number&lt;/li&gt; 
   &lt;li&gt;boolean&lt;/li&gt; 
   &lt;li&gt;null&lt;/li&gt; 
   &lt;li&gt;undefined&lt;/li&gt; 
   &lt;li&gt;bigint&lt;/li&gt; 
   &lt;li&gt;symbol&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to access object properties&lt;/h3&gt; &lt;p&gt;There are 3 possible ways for accessing the property of an object.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Dot notation:&lt;/strong&gt; It uses dot for accessing the properties&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName.property
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Square brackets notation:&lt;/strong&gt; It uses square brackets for property access&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName[&quot;property&quot;]
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Expression notation:&lt;/strong&gt; It uses expression in the square brackets&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;objectName[expression]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the function parameter rules&lt;/h3&gt; &lt;p&gt;JavaScript functions follow below rules for parameters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The function definitions do not specify data types for parameters.&lt;/li&gt; 
   &lt;li&gt;Do not perform type checking on the passed arguments.&lt;/li&gt; 
   &lt;li&gt;Do not check the number of arguments received. i.e, The below function follows the above rules,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function functionName(parameter1, parameter2, parameter3) {
  console.log(parameter1); // 1
}
functionName(1);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an error object&lt;/h3&gt; &lt;p&gt;An error object is a built in error object that provides error information when an error occurs. It has two properties: name and message. For example, the below function logs error details,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  greeting(&quot;Welcome&quot;);
}
catch(err) {
  console.log(err.name + &quot;&amp;lt;br&amp;gt;&quot; + err.message);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;When you get a syntax error&lt;/h3&gt; &lt;p&gt;A SyntaxError is thrown if you try to evaluate code with a syntax error. For example, the below missing quote for the function parameter throws a syntax error&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  eval(&quot;greeting(&#39;welcome)&quot;);   // Missing &#39; will produce an error
}
catch(err) {
  console.log(err.name);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different error names from error object&lt;/h3&gt; &lt;p&gt;There are 6 different types of error names returned from error object,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Error Name&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;EvalError&lt;/td&gt; 
     &lt;td&gt;An error has occurred in the eval() function&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;RangeError&lt;/td&gt; 
     &lt;td&gt;An error has occurred with a number &quot;out of range&quot;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;ReferenceError&lt;/td&gt; 
     &lt;td&gt;An error due to an illegal reference&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;SyntaxError&lt;/td&gt; 
     &lt;td&gt;An error due to a syntax error&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;TypeError&lt;/td&gt; 
     &lt;td&gt;An error due to a type error&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;URIError&lt;/td&gt; 
     &lt;td&gt;An error due to encodeURI()&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the various statements in error handling&lt;/h3&gt; &lt;p&gt;Below are the list of statements used in an error handling,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;try:&lt;/strong&gt; This statement is used to test a block of code for errors&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;catch:&lt;/strong&gt; This statement is used to handle the error&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;throw:&lt;/strong&gt; This statement is used to create custom errors.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;finally:&lt;/strong&gt; This statement is used to execute code after try and catch regardless of the result.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the two types of loops in javascript&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Entry Controlled loops:&lt;/strong&gt; In this kind of loop type, the test condition is tested before entering the loop body. For example, For Loop and While Loop comes under this category.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Exit Controlled Loops:&lt;/strong&gt; In this kind of loop type, the test condition is tested or evaluated at the end of the loop body. i.e, the loop body will execute at least once irrespective of test condition true or false. For example, do-while loop comes under this category.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is nodejs&lt;/h3&gt; &lt;p&gt;Node.js is a server-side platform built on Chrome&#39;s JavaScript runtime for easily building fast and scalable network applications. It is an event-based, non-blocking, asynchronous I/O runtime that uses Google&#39;s V8 JavaScript engine and libuv library.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Intl object&lt;/h3&gt; &lt;p&gt;The Intl object is the namespace for the ECMAScript Internationalization API, which provides language sensitive string comparison, number formatting, and date and time formatting. It provides access to several constructors and language sensitive functions.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform language specific date and time formatting&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; object which is a constructor for objects that enable language-sensitive date and time formatting. Let&#39;s see this behavior with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var date = new Date(Date.UTC(2019, 07, 07, 3, 0, 0));
console.log(new Intl.DateTimeFormat(&#39;en-GB&#39;).format(date)); // 07/08/2019
console.log(new Intl.DateTimeFormat(&#39;en-AU&#39;).format(date)); // 07/08/2019
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Iterator&lt;/h3&gt; &lt;p&gt;An iterator is an object which defines a sequence and a return value upon its termination. It implements the Iterator protocol with a &lt;code&gt;next()&lt;/code&gt; method which returns an object with two properties: &lt;code&gt;value&lt;/code&gt; (the next value in the sequence) and &lt;code&gt;done&lt;/code&gt; (which is true if the last value in the sequence has been consumed).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How does synchronous iteration works&lt;/h3&gt; &lt;p&gt;Synchronous iteration was introduced in ES6 and it works with below set of components,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Iterable:&lt;/strong&gt; It is an object which can be iterated over via a method whose key is Symbol.iterator. &lt;strong&gt;Iterator:&lt;/strong&gt; It is an object returned by invoking &lt;code&gt;[Symbol.iterator]()&lt;/code&gt; on an iterable. This iterator object wraps each iterated element in an object and returns it via &lt;code&gt;next()&lt;/code&gt; method one by one. &lt;strong&gt;IteratorResult:&lt;/strong&gt; It is an object returned by &lt;code&gt;next()&lt;/code&gt; method. The object contains two properties; the &lt;code&gt;value&lt;/code&gt; property contains an iterated element and the &lt;code&gt;done&lt;/code&gt; property determines whether the element is the last element or not.&lt;/p&gt; &lt;p&gt;Let&#39;s demonstrate synchronous iteration with an array as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const iterable = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;];
const iterator = iterable[Symbol.iterator]();
console.log(iterator.next());  // { value: &#39;one&#39;, done: false }
console.log(iterator.next());  // { value: &#39;two&#39;, done: false }
console.log(iterator.next());  // { value: &#39;three&#39;, done: false }
console.log(iterator.next());  // { value: &#39;undefined, done: true }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event loop&lt;/h3&gt; &lt;p&gt;The Event Loop is a queue of callback functions. When an async function executes, the callback function is pushed into the queue. The JavaScript engine doesn&#39;t start processing the event loop until the async function has finished executing the code. &lt;strong&gt;Note:&lt;/strong&gt; It allows Node.js to perform non-blocking I/O operations even though JavaScript is single-threaded.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is call stack&lt;/h3&gt; &lt;p&gt;Call Stack is a data structure for javascript interpreters to keep track of function calls in the program. It has two major actions,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Whenever you call a function for its execution, you are pushing it to the stack.&lt;/li&gt; 
   &lt;li&gt;Whenever the execution is completed, the function is popped out of the stack.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s take an example and it&#39;s state representation in a diagram format&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function hungry() {
   eatFruits();
}
function eatFruits() {
   return &quot;I&#39;m eating fruits&quot;;
}

// Invoke the `hungry` function
hungry();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code processed in a call stack as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Add the &lt;code&gt;hungry()&lt;/code&gt; function to the call stack list and execute the code.&lt;/li&gt; 
   &lt;li&gt;Add the &lt;code&gt;eatFruits()&lt;/code&gt; function to the call stack list and execute the code.&lt;/li&gt; 
   &lt;li&gt;Delete the &lt;code&gt;eatFruits()&lt;/code&gt; function from our call stack list.&lt;/li&gt; 
   &lt;li&gt;Delete the &lt;code&gt;hungry()&lt;/code&gt; function from the call stack list since there are no items anymore.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/call-stack.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event queue&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a decorator&lt;/h3&gt; &lt;p&gt;A decorator is an expression that evaluates to a function and that takes the target, name, and decorator descriptor as arguments. Also, it optionally returns a decorator descriptor to install on the target object. Let&#39;s define admin decorator for user class at design time,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function admin(isAdmin) {
   return function(target) {
       target.isAdmin = isAdmin;
   }
}

@admin(true)
class User() {
}
console.log(User.isAdmin); //true

 @admin(false)
 class User() {
 }
 console.log(User.isAdmin); //false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the properties of Intl object&lt;/h3&gt; &lt;p&gt;Below are the list of properties available on Intl object,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Collator:&lt;/strong&gt; These are the objects that enable language-sensitive string comparison.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;DateTimeFormat:&lt;/strong&gt; These are the objects that enable language-sensitive date and time formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;ListFormat:&lt;/strong&gt; These are the objects that enable language-sensitive list formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;NumberFormat:&lt;/strong&gt; Objects that enable language-sensitive number formatting.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;PluralRules:&lt;/strong&gt; Objects that enable plural-sensitive formatting and language-specific rules for plurals.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;RelativeTimeFormat:&lt;/strong&gt; Objects that enable language-sensitive relative time formatting.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an Unary operator&lt;/h3&gt; &lt;p&gt;The unary(+) operator is used to convert a variable to a number.If the variable cannot be converted, it will still become a number but with the value NaN. Let&#39;s see this behavior in an action.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = &quot;100&quot;;
var y = + x;
console.log(typeof x, typeof y); // string, number

var a = &quot;Hello&quot;;
var b = + a;
console.log(typeof a, typeof b, b); // string, number, NaN
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you sort elements in an array&lt;/h3&gt; &lt;p&gt;The sort() method is used to sort the elements of an array in place and returns the sorted array. The example usage would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var months = [&quot;Aug&quot;, &quot;Sep&quot;, &quot;Jan&quot;, &quot;June&quot;];
months.sort();
console.log(months); //  [&quot;Aug&quot;, &quot;Jan&quot;, &quot;June&quot;, &quot;Sep&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of compareFunction while sorting arrays&lt;/h3&gt; &lt;p&gt;The compareFunction is used to define the sort order. If omitted, the array elements are converted to strings, then sorted according to each character&#39;s Unicode code point value. Let&#39;s take an example to see the usage of compareFunction,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 5, 3, 4];
numbers.sort((a, b) =&amp;gt; b - a);
console.log(numbers); // [5, 4, 3, 2, 1]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you reversing an array&lt;/h3&gt; &lt;p&gt;You can use the reverse() method to reverse the elements in an array. This method is useful to sort an array in descending order. Let&#39;s see the usage of reverse() method in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 5, 3, 4];
numbers.sort((a, b) =&amp;gt; b - a);
numbers.reverse();
console.log(numbers); // [1, 2, 3, 4 ,5]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find min and max value in an array&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;Math.min&lt;/code&gt; and &lt;code&gt;Math.max&lt;/code&gt; methods on array variables to find the minimum and maximum elements within an array. Let&#39;s create two functions to find the min and max value with in an array,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var marks = [50, 20, 70, 60, 45, 30];
function findMin(arr) {
  return Math.min.apply(null, arr);
}
function findMax(arr) {
  return Math.max.apply(null, arr);
}

console.log(findMin(marks));
console.log(findMax(marks));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you find min and max values without Math functions&lt;/h3&gt; &lt;p&gt;You can write functions which loop through an array comparing each value with the lowest value or highest value to find the min and max values. Let&#39;s create those functions to find min and max values,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var marks = [50, 20, 70, 60, 45, 30];
 function findMin(arr) {
   var length = arr.length
   var min = Infinity;
   while (length--) {
     if (arr[length] &amp;lt; min) {
       min = arr[len];
     }
   }
   return min;
 }

 function findMax(arr) {
   var length = arr.length
   var max = -Infinity;
   while (len--) {
     if (arr[length] &amp;gt; max) {
       max = arr[length];
     }
   }
   return max;
 }

 console.log(findMin(marks));
 console.log(findMax(marks));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an empty statement and purpose of it&lt;/h3&gt; &lt;p&gt;The empty statement is a semicolon (;) indicating that no statement will be executed, even if JavaScript syntax requires one. Since there is no action with an empty statement you might think that it&#39;s usage is quite less, but the empty statement is occasionally useful when you want to create a loop that has an empty body. For example, you can initialize an array with zero values as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Initialize an array a
for(int i=0; i &amp;lt; a.length; a[i++] = 0) ;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get metadata of a module&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;import.meta&lt;/code&gt; object which is a meta-property exposing context-specific meta data to a JavaScript module. It contains information about the current module, such as the module&#39;s URL. In browsers, you might get different meta data than NodeJS.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;script type=&quot;module&quot; src=&quot;welcome-module.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
console.log(import.meta); // { url: &quot;file:///home/user/welcome-module.js&quot; }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a comma operator&lt;/h3&gt; &lt;p&gt;The comma operator is used to evaluate each of its operands from left to right and returns the value of the last operand. This is totally different from comma usage within arrays, objects, and function arguments and parameters. For example, the usage for numeric expressions would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 1;
x = (x++, x);

console.log(x); // 2
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the advantage of a comma operator&lt;/h3&gt; &lt;p&gt;It is normally used to include multiple expressions in a location that requires a single expression. One of the common usages of this comma operator is to supply multiple parameters in a &lt;code&gt;for&lt;/code&gt; loop. For example, the below for loop uses multiple expressions in a single location using comma operator,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (var a = 0, b =10; a &amp;lt;= 10; a++, b--)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use the comma operator in a return statement where it processes before returning.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
   var a = 1;
   return (a += 10, a); // 11
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is typescript&lt;/h3&gt; &lt;p&gt;TypeScript is a typed superset of JavaScript created by Microsoft that adds optional types, classes, async/await, and many other features, and compiles to plain JavaScript. Angular built entirely in TypeScript and used as a primary language. You can install it globally as&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g typescript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s see a simple example of TypeScript usage,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;function greeting(name: string): string {
   return &quot;Hello, &quot; + name;
}

let user = &quot;Sudheer&quot;;

console.log(greeting(user));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The greeting method allows only string type as argument.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between javascript and typescript&lt;/h3&gt; &lt;p&gt;Below are the list of differences between javascript and typescript,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;feature&lt;/th&gt; 
     &lt;th&gt;typescript&lt;/th&gt; 
     &lt;th&gt;javascript&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Language paradigm&lt;/td&gt; 
     &lt;td&gt;Object oriented programming language&lt;/td&gt; 
     &lt;td&gt;Scripting language&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Typing support&lt;/td&gt; 
     &lt;td&gt;Supports static typing&lt;/td&gt; 
     &lt;td&gt;It has dynamic typing&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Modules&lt;/td&gt; 
     &lt;td&gt;Supported&lt;/td&gt; 
     &lt;td&gt;Not supported&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Interface&lt;/td&gt; 
     &lt;td&gt;It has interfaces concept&lt;/td&gt; 
     &lt;td&gt;Doesn&#39;t support interfaces&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Optional parameters&lt;/td&gt; 
     &lt;td&gt;Functions support optional parameters&lt;/td&gt; 
     &lt;td&gt;No support of optional parameters for functions&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of typescript over javascript&lt;/h3&gt; &lt;p&gt;Below are some of the advantages of typescript over javascript,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;TypeScript is able to find compile time errors at the development time only and it makes sures less runtime errors. Whereas javascript is an interpreted language.&lt;/li&gt; 
   &lt;li&gt;TypeScript is strongly-typed or supports static typing which allows for checking type correctness at compile time. This is not available in javascript.&lt;/li&gt; 
   &lt;li&gt;TypeScript compiler can compile the .ts files into ES3,ES4 and ES5 unlike ES6 features of javascript which may not be supported in some browsers.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an object initializer&lt;/h3&gt; &lt;p&gt;An object initializer is an expression that describes the initialization of an Object. The syntax for this expression is represented as a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}). This is also known as literal notation. It is one of the ways to create an object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var initObject = {a: &#39;John&#39;, b: 50, c: {}};

console.log(initObject.a); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a constructor method&lt;/h3&gt; &lt;p&gt;The constructor method is a special method for creating and initializing an object created within a class. If you do not specify a constructor method, a default constructor is used. The example usage of constructor would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Employee {
  constructor() {
    this.name = &quot;John&quot;;
  }
}

var employeeObject = new Employee();

console.log(employeeObject.name); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if you write constructor more than once in a class&lt;/h3&gt; &lt;p&gt;The &quot;constructor&quot; in a class is a special method and it should be defined only once in a class. i.e, If you write a constructor method more than once in a class it will throw a &lt;code&gt;SyntaxError&lt;/code&gt; error.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; class Employee {
   constructor() {
     this.name = &quot;John&quot;;
   }
   constructor() {   //  Uncaught SyntaxError: A class may only have one constructor
     this.age = 30;
   }
 }

 var employeeObject = new Employee();

 console.log(employeeObject.name);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you call the constructor of a parent class&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;super&lt;/code&gt; keyword to call the constructor of a parent class. Remember that &lt;code&gt;super()&lt;/code&gt; must be called before using &#39;this&#39; reference. Otherwise it will cause a reference error. Let&#39;s the usage of it,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Square extends Rectangle {
  constructor(length) {
    super(length, length);
    this.name = &#39;Square&#39;;
  }

  get area() {
    return this.width * this.height;
  }

  set area(value) {
    this.area = value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the prototype of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt; method to return the prototype of the specified object. i.e. The value of the internal &lt;code&gt;prototype&lt;/code&gt; property. If there are no inherited properties then &lt;code&gt;null&lt;/code&gt; value is returned.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newPrototype = {};
const newObject = Object.create(newPrototype);

console.log(Object.getPrototypeOf(newObject) === newPrototype); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens If I pass string type for getPrototype method&lt;/h3&gt; &lt;p&gt;In ES5, it will throw a TypeError exception if the obj parameter isn&#39;t an object. Whereas in ES2015, the parameter will be coerced to an &lt;code&gt;Object&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// ES5
Object.getPrototypeOf(&#39;James&#39;); // TypeError: &quot;James&quot; is not an object
// ES2015
Object.getPrototypeOf(&#39;James&#39;); // String.prototype
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you set prototype of one object to another&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; method that sets the prototype (i.e., the internal &lt;code&gt;Prototype&lt;/code&gt; property) of a specified object to another object or null. For example, if you want to set prototype of a square object to rectangle object would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Object.setPrototypeOf(Square.prototype, Rectangle.prototype);
Object.setPrototypeOf({}, null);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether an object can be extendable or not&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.isExtensible()&lt;/code&gt; method is used to determine if an object is extendable or not. i.e, Whether it can have new properties added to it or not.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};
console.log(Object.isExtensible(newObject)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; By default, all the objects are extendable. i.e, The new properties can be added or modified.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you prevent an object to extend&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.preventExtensions()&lt;/code&gt; method is used to prevent new properties from ever being added to an object. In other words, it prevents future extensions to the object. Let&#39;s see the usage of this property,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};
Object.preventExtensions(newObject); // NOT extendable

try {
  Object.defineProperty(newObject, &#39;newProperty&#39;, { // Adding new property
    value: 100
  });
} catch (e) {
  console.log(e); // TypeError: Cannot define property newProperty, object is not extensible
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to make an object non-extensible&lt;/h3&gt; &lt;p&gt;You can mark an object non-extensible in 3 ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Object.preventExtensions&lt;/li&gt; 
   &lt;li&gt;Object.seal&lt;/li&gt; 
   &lt;li&gt;Object.freeze&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var newObject = {};

Object.preventExtensions(newObject); // Prevent objects are non-extensible
Object.isExtensible(newObject); // false

var sealedObject = Object.seal({}); // Sealed objects are non-extensible
Object.isExtensible(sealedObject); // false

var frozenObject = Object.freeze({}); // Frozen objects are non-extensible
Object.isExtensible(frozenObject); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define multiple properties on an object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Object.defineProperties()&lt;/code&gt; method is used to define new or modify existing properties directly on an object and returning the object. Let&#39;s define multiple properties on an empty object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {};

Object.defineProperties(newObject, {
  newProperty1: {
    value: &#39;John&#39;,
    writable: true
  },
  newProperty2: {}
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is MEAN in javascript&lt;/h3&gt; &lt;p&gt;The MEAN (MongoDB, Express, AngularJS, and Node.js) stack is the most popular open-source JavaScript software tech stack available for building dynamic web apps where you can write both the server-side and client-side halves of the web project entirely in JavaScript.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What Is Obfuscation in javascript&lt;/h3&gt; &lt;p&gt;Obfuscation is the deliberate act of creating obfuscated javascript code(i.e, source or machine code) that is difficult for humans to understand. It is something similar to encryption, but a machine can understand the code and execute it. Let&#39;s see the below function before Obfuscation,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function greeting() {
   console.log(&#39;Hello, welcome to JS world&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And after the code Obfuscation, it would be appeared as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;eval(function(p,a,c,k,e,d){e=function(c){return c};if(!&#39;&#39;.replace(/^/,String)){while(c--){d[c]=k[c]||c}k=[function(e){return d[e]}];e=function(){return&#39;\\w+&#39;};c=1};while(c--){if(k[c]){p=p.replace(new RegExp(&#39;\\b&#39;+e(c)+&#39;\\b&#39;,&#39;g&#39;),k[c])}}return p}(&#39;2 1(){0.3(\&#39;4, 7 6 5 8\&#39;)}&#39;,9,9,&#39;console|greeting|function|log|Hello|JS|to|welcome|world&#39;.split(&#39;|&#39;),0,{}))
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need Obfuscation&lt;/h3&gt; &lt;p&gt;Below are the few reasons for Obfuscation,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The Code size will be reduced. So data transfers between server and client will be fast.&lt;/li&gt; 
   &lt;li&gt;It hides the business logic from outside world and protects the code from others&lt;/li&gt; 
   &lt;li&gt;Reverse engineering is highly difficult&lt;/li&gt; 
   &lt;li&gt;The download time will be reduced&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is Minification&lt;/h3&gt; &lt;p&gt;Minification is the process of removing all unnecessary characters(empty spaces are removed) and variables will be renamed without changing it&#39;s functionality. It is also a type of obfuscation .&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of minification&lt;/h3&gt; &lt;p&gt;Normally it is recommended to use minification for heavy traffic and intensive requirements of resources. It reduces file sizes with below benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Decreases loading times of a web page&lt;/li&gt; 
   &lt;li&gt;Saves bandwidth usages&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Obfuscation and Encryption&lt;/h3&gt; &lt;p&gt;Below are the main differences between Obfuscation and Encryption,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Feature&lt;/th&gt; 
     &lt;th&gt;Obfuscation&lt;/th&gt; 
     &lt;th&gt;Encryption&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Definition&lt;/td&gt; 
     &lt;td&gt;Changing the form of any data in any other form&lt;/td&gt; 
     &lt;td&gt;Changing the form of information to an unreadable format by using a key&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;A key to decode&lt;/td&gt; 
     &lt;td&gt;It can be decoded without any key&lt;/td&gt; 
     &lt;td&gt;It is required&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Target data format&lt;/td&gt; 
     &lt;td&gt;It will be converted to a complex form&lt;/td&gt; 
     &lt;td&gt;Converted into an unreadable format&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common tools used for minification&lt;/h3&gt; &lt;p&gt;There are many online/offline tools to minify the javascript files,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Google&#39;s Closure Compiler&lt;/li&gt; 
   &lt;li&gt;UglifyJS2&lt;/li&gt; 
   &lt;li&gt;jsmin&lt;/li&gt; 
   &lt;li&gt;javascript-minifier.com/&lt;/li&gt; 
   &lt;li&gt;prettydiff.com&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform form validation using javascript&lt;/h3&gt; &lt;p&gt;JavaScript can be used to perform HTML form validation. For example, if the form field is empty, the function needs to notify, and return false, to prevent the form being submitted. Lets&#39; perform user login in an html form,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;form name=&quot;myForm&quot; onsubmit=&quot;return validateForm()&quot; method=&quot;post&quot;&amp;gt;
User name: &amp;lt;input type=&quot;text&quot; name=&quot;uname&quot;&amp;gt;
&amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And the validation on user login is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function validateForm() {
  var x = document.forms[&quot;myForm&quot;][&quot;uname&quot;].value;
  if (x == &quot;&quot;) {
    alert(&quot;The username shouldn&#39;t be empty&quot;);
    return false;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you perform form validation without javascript&lt;/h3&gt; &lt;p&gt;You can perform HTML form validation automatically without using javascript. The validation enabled by applying the &lt;code&gt;required&lt;/code&gt; attribute to prevent form submission when the input is empty.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;form method=&quot;post&quot;&amp;gt;
  &amp;lt;input type=&quot;text&quot; name=&quot;uname&quot; required&amp;gt;
  &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Automatic form validation does not work in Internet Explorer 9 or earlier.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the DOM methods available for constraint validation&lt;/h3&gt; &lt;p&gt;The below DOM methods are available for constraint validation on an invalid input,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;checkValidity(): It returns true if an input element contains valid data.&lt;/li&gt; 
   &lt;li&gt;setCustomValidity(): It is used to set the validationMessage property of an input element. Let&#39;s take an user login form with DOM validations&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
  var userName = document.getElementById(&quot;uname&quot;);
  if (!userName.checkValidity()) {
    document.getElementById(&quot;message&quot;).innerHTML = userName.validationMessage;
  } else {
    document.getElementById(&quot;message&quot;).innerHTML = &quot;Entered a valid username&quot;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the available constraint validation DOM properties&lt;/h3&gt; &lt;p&gt;Below are the list of some of the constraint validation DOM properties available,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;validity: It provides a list of boolean properties related to the validity of an input element.&lt;/li&gt; 
   &lt;li&gt;validationMessage: It displays the message when the validity is false.&lt;/li&gt; 
   &lt;li&gt;willValidate: It indicates if an input element will be validated or not.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the list of validity properties&lt;/h3&gt; &lt;p&gt;The validity property of an input element provides a set of properties related to the validity of data.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;customError: It returns true, if a custom validity message is set.&lt;/li&gt; 
   &lt;li&gt;patternMismatch: It returns true, if an element&#39;s value does not match its pattern attribute.&lt;/li&gt; 
   &lt;li&gt;rangeOverflow: It returns true, if an element&#39;s value is greater than its max attribute.&lt;/li&gt; 
   &lt;li&gt;rangeUnderflow: It returns true, if an element&#39;s value is less than its min attribute.&lt;/li&gt; 
   &lt;li&gt;stepMismatch: It returns true, if an element&#39;s value is invalid according to step attribute.&lt;/li&gt; 
   &lt;li&gt;tooLong: It returns true, if an element&#39;s value exceeds its maxLength attribute.&lt;/li&gt; 
   &lt;li&gt;typeMismatch: It returns true, if an element&#39;s value is invalid according to type attribute.&lt;/li&gt; 
   &lt;li&gt;valueMissing: It returns true, if an element with a required attribute has no value.&lt;/li&gt; 
   &lt;li&gt;valid: It returns true, if an element&#39;s value is valid.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example usage of rangeOverflow property&lt;/h3&gt; &lt;p&gt;If an element&#39;s value is greater than its max attribute then rangeOverflow property returns true. For example, the below form submission throws an error if the value is more than 100,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input id=&quot;age&quot; type=&quot;number&quot; max=&quot;100&quot;&amp;gt;
&amp;lt;button onclick=&quot;myOverflowFunction()&quot;&amp;gt;OK&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myOverflowFunction() {
  if (document.getElementById(&quot;age&quot;).validity.rangeOverflow) {
    alert(&quot;The mentioned age is not allowed&quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is enums feature available in javascript&lt;/h3&gt; &lt;p&gt;No, javascript does not natively support enums. But there are different kinds of solutions to simulate them even though they may not provide exact equivalents. For example, you can use freeze or seal on object,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var DaysEnum = Object.freeze({&quot;monday&quot;:1, &quot;tuesday&quot;:2, &quot;wednesday&quot;:3, ...})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an enum&lt;/h3&gt; &lt;p&gt;An enum is a type restricting variables to one value from a predefined set of constants. JavaScript has no enums but typescript provides built-in enum support.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;enum Color {
 RED, GREEN, BLUE
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you list all properties of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; method which returns an array of all properties found directly in a given object. Let&#39;s the usage of it in an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const newObject = {
  a: 1,
  b: 2,
  c: 3
};

console.log(Object.getOwnPropertyNames(newObject));  [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get property descriptors of an object&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Object.getOwnPropertyDescriptors()&lt;/code&gt; method which returns all own property descriptors of a given object. The example usage of this method is below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const newObject = {
   a: 1,
   b: 2,
   c: 3
 };
const descriptorsObject = Object.getOwnPropertyDescriptors(newObject);
console.log(descriptorsObject.a.writable); //true
console.log(descriptorsObject.a.configurable); //true
console.log(descriptorsObject.a.enumerable); //true
console.log(descriptorsObject.a.value); // 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the attributes provided by a property descriptor&lt;/h3&gt; &lt;p&gt;A property descriptor is a record which has the following attributes&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;value: The value associated with the property&lt;/li&gt; 
   &lt;li&gt;writable: Determines whether the value associated with the property can be changed or not&lt;/li&gt; 
   &lt;li&gt;configurable: Returns true if the type of this property descriptor can be changed and if the property can be deleted from the corresponding object.&lt;/li&gt; 
   &lt;li&gt;enumerable: Determines whether the property appears during enumeration of the properties on the corresponding object or not.&lt;/li&gt; 
   &lt;li&gt;set: A function which serves as a setter for the property&lt;/li&gt; 
   &lt;li&gt;get: A function which serves as a getter for the property&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you extend classes&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;extends&lt;/code&gt; keyword is used in class declarations/expressions to create a class which is a child of another class. It can be used to subclass custom classes as well as built-in objects. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ChildClass extends ParentClass { ... }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of Square subclass from Polygon parent class,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; class Square extends Rectangle {
   constructor(length) {
     super(length, length);
     this.name = &#39;Square&#39;;
   }

   get area() {
     return this.width * this.height;
   }

   set area(value) {
     this.area = value;
   }
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do I modify the url without reloading the page&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;window.location.url&lt;/code&gt; property will be helpful to modify the url but it reloads the page. HTML5 introduced the &lt;code&gt;history.pushState()&lt;/code&gt; and &lt;code&gt;history.replaceState()&lt;/code&gt; methods, which allow you to add and modify history entries, respectively. For example, you can use pushState as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.history.pushState(&#39;page2&#39;, &#39;Title&#39;, &#39;/page2.html&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check whether an array includes a particular value or not&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;Array#includes()&lt;/code&gt; method is used to determine whether an array includes a particular value among its entries by returning either true or false. Let&#39;s see an example to find an element(numeric and string) within an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var numericArray = [1, 2, 3, 4];
console.log(numericArray.includes(3)); // true

var stringArray = [&#39;green&#39;, &#39;yellow&#39;, &#39;blue&#39;];
console.log(stringArray.includes(&#39;blue&#39;)); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you compare scalar arrays&lt;/h3&gt; &lt;p&gt;You can use length and every method of arrays to compare two scalar(compared directly using ===) arrays. The combination of these expressions can give the expected result,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrayFirst = [1,2,3,4,5];
const arraySecond = [1,2,3,4,5];
console.log(arrayFirst.length === arraySecond.length &amp;amp;&amp;amp; arrayFirst.every((value, index) =&amp;gt; value === arraySecond[index])); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you would like to compare arrays irrespective of order then you should sort them before,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrayFirst = [2,3,1,4,5];
const arraySecond = [1,2,3,4,5];
console.log(arrayFirst.length === arraySecond.length &amp;amp;&amp;amp; arrayFirst.sort().every((value, index) =&amp;gt; value === arraySecond[index])); //true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to get the value from get parameters&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;new URL()&lt;/code&gt; object accepts the url string and &lt;code&gt;searchParams&lt;/code&gt; property of this object can be used to access the get parameters. Remember that you may need to use polyfill or &lt;code&gt;window.location&lt;/code&gt; to access the URL in older browsers(including IE).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let urlString = &quot;http://www.some-domain.com/about.html?x=1&amp;amp;y=2&amp;amp;z=3&quot;; //window.location.href
let url = new URL(urlString);
let parameterZ = url.searchParams.get(&quot;z&quot;);
console.log(parameterZ); // 3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print numbers with commas as thousand separators&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt; method which returns a string with a language-sensitive representation such as thousand separator,currency etc of this number.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function convertToThousandFormat(x){
  return x.toLocaleString(); // 12,345.679
}

console.log(convertToThousandFormat(12345.6789));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between java and javascript&lt;/h3&gt; &lt;p&gt;Both are totally unrelated programming languages and no relation between them. Java is statically typed, compiled, runs on its own VM. Whereas Javascript is dynamically typed, interpreted, and runs in a browser and nodejs environments. Let&#39;s see the major differences in a tabular format,&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Feature&lt;/th&gt; 
     &lt;th&gt;Java&lt;/th&gt; 
     &lt;th&gt;JavaScript&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Typed&lt;/td&gt; 
     &lt;td&gt;It&#39;s a strongly typed language&lt;/td&gt; 
     &lt;td&gt;It&#39;s a dynamic typed language&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Paradigm&lt;/td&gt; 
     &lt;td&gt;Object oriented programming&lt;/td&gt; 
     &lt;td&gt;Prototype based programming&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Scoping&lt;/td&gt; 
     &lt;td&gt;Block scoped&lt;/td&gt; 
     &lt;td&gt;Function-scoped&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Concurrency&lt;/td&gt; 
     &lt;td&gt;Thread based&lt;/td&gt; 
     &lt;td&gt;event based&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Memory&lt;/td&gt; 
     &lt;td&gt;Uses more memory&lt;/td&gt; 
     &lt;td&gt;Uses less memory. Hence it will be used for web pages&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Does JavaScript supports namespace&lt;/h3&gt; &lt;p&gt;JavaScript doesn‚Äôt support namespace by default. So if you create any element(function, method, object, variable) then it becomes global and pollutes the global namespace. Let&#39;s take an example of defining two functions without any namespace,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func1() {
    console.log(&quot;This is a first definition&quot;);

}
function func1() {
    console.log(&quot;This is a second definition&quot;);
}
func1(); // This is a second definition
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It always calls the second function definition. In this case, namespace will solve the name collision problem.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you declare namespace&lt;/h3&gt; &lt;p&gt;Even though JavaScript lacks namespaces, we can use Objects , IIFE to create namespaces.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using Object Literal Notation:&lt;/strong&gt; Let&#39;s wrap variables and functions inside an Object literal which acts as a namespace. After that you can access them using object notation&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var namespaceOne = {
   function func1() {
       console.log(&quot;This is a first definition&quot;);
   }
}
var namespaceTwo = {
     function func1() {
         console.log(&quot;This is a second definition&quot;);
     }
 }
namespaceOne.func1(); // This is a first definition
namespaceTwo.func1(); // This is a second definition
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using IIFE (Immediately invoked function expression):&lt;/strong&gt; The outer pair of parentheses of IIFE creates a local scope for all the code inside of it and makes the anonymous function a function expression. Due to that, you can create the same function in two different function expressions to act as a namespace.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function() {
 function fun1(){
   console.log(&quot;This is a first definition&quot;);
   } fun1();
}());

(function() {
    function fun1(){
       console.log(&quot;This is a second definition&quot;);
   } fun1();
 }());
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Using a block and a let/const declaration:&lt;/strong&gt; In ECMAScript 6, you can simply use a block and a let declaration to restrict the scope of a variable to a block.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; {
  let myFunction= function fun1(){
  console.log(&quot;This is a first definition&quot;);
  }
  myFunction();
 }
  //myFunction(): ReferenceError: myFunction is not defined.

 {
  let myFunction= function fun1(){
  console.log(&quot;This is a second definition&quot;);
  }
  myFunction();
 }
  //myFunction(): ReferenceError: myFunction is not defined.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you invoke javascript code in an iframe from parent page&lt;/h3&gt; &lt;p&gt;Initially iFrame needs to be accessed using either &lt;code&gt;document.getElementBy&lt;/code&gt; or &lt;code&gt;window.frames&lt;/code&gt;. After that &lt;code&gt;contentWindow&lt;/code&gt; property of iFrame gives the access for targetFunction&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.getElementById(&#39;targetFrame&#39;).contentWindow.targetFunction();
window.frames[0].frameElement.contentWindow.targetFunction(); // Accessing iframe this way may not work in latest versions chrome and firefox

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do get the timezone offset from date&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;getTimezoneOffset&lt;/code&gt; method of the date object. This method returns the time zone difference, in minutes, from current locale (host system settings) to UTC&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var offset = new Date().getTimezoneOffset();
console.log(offset); // -480
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you load CSS and JS files dynamically&lt;/h3&gt; &lt;p&gt;You can create both link and script elements in the DOM and append them as child to head tag. Let&#39;s create a function to add script and style resources as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function loadAssets(filename, filetype) {
  if (filetype == &quot;css&quot;) { // External CSS file
       var fileReference = document.createElement(&quot;link&quot;)
       fileReference.setAttribute(&quot;rel&quot;, &quot;stylesheet&quot;);
       fileReference.setAttribute(&quot;type&quot;, &quot;text/css&quot;);
       fileReference.setAttribute(&quot;href&quot;, filename);
  } else if (filetype == &quot;js&quot;) { // External JavaScript file
       var fileReference = document.createElement(&#39;script&#39;);
       fileReference.setAttribute(&quot;type&quot;, &quot;text/javascript&quot;);
       fileReference.setAttribute(&quot;src&quot;, filename);
  }
  if (typeof fileReference != &quot;undefined&quot;)
       document.getElementsByTagName(&quot;head&quot;)[0].appendChild(fileReference)
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different methods to find HTML elements in DOM&lt;/h3&gt; &lt;p&gt;If you want to access any element in an HTML page, you need to start with accessing the document object. Later you can use any of the below methods to find the HTML element,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;document.getElementById(id): It finds an element by Id&lt;/li&gt; 
   &lt;li&gt;document.getElementsByTagName(name): It finds an element by tag name&lt;/li&gt; 
   &lt;li&gt;document.getElementsByClassName(name): It finds an element by class name&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is jQuery&lt;/h3&gt; &lt;p&gt;jQuery is a popular cross-browser JavaScript library that provides Document Object Model (DOM) traversal, event handling, animations and AJAX interactions by minimizing the discrepancies across browsers. It is widely famous with its philosophy of ‚ÄúWrite less, do more‚Äù. For example, you can display welcome message on the page load using jQuery as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(document).ready(function(){ // It selects the document and apply the function on page load
    alert(&#39;Welcome to jQuery world&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can download it from jquery&#39;s official site or install it from CDNs, like google.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is V8 JavaScript engine&lt;/h3&gt; &lt;p&gt;V8 is an open source high-performance JavaScript engine used by the Google Chrome browser, written in C++. It is also being used in the node.js project. It implements ECMAScript and WebAssembly, and runs on Windows 7 or later, macOS 10.12+, and Linux systems that use x64, IA-32, ARM, or MIPS processors. &lt;strong&gt;Note:&lt;/strong&gt; It can run standalone, or can be embedded into any C++ application.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we call javascript as dynamic language&lt;/h3&gt; &lt;p&gt;JavaScript is a loosely typed or a dynamic language because variables in JavaScript are not directly associated with any particular value type, and any variable can be assigned/reassigned with values of all types.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let age = 50;    // age is a number now
age  = &#39;old&#39;; // age is a string now
age  = true;  // age is a boolean
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a void operator&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;void&lt;/code&gt; operator evaluates the given expression and then returns undefined(i.e, without returning value). The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;void (expression)
void expression
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s display a message without any redirection or reload&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;a href=&quot;javascript:void(alert(&#39;Welcome to JS world&#39;))&quot;&amp;gt;Click here to see a message&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This operator is often used to obtain the undefined primitive value, using &quot;void(0)&quot;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to set the cursor to wait&lt;/h3&gt; &lt;p&gt;The cursor can be set to wait in JavaScript by using the property &quot;cursor&quot;. Let&#39;s perform this behavior on page load using the below function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction() {
window.document.body.style.cursor = &quot;wait&quot;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and this function invoked on page load&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body onload=&quot;myFunction()&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an infinite loop&lt;/h3&gt; &lt;p&gt;You can create infinite loops using for and while loops without using any expressions. The for loop construct or syntax is better approach in terms of ESLint and code optimizer tools,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (;;) {}
while(true) {
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need to avoid with statement&lt;/h3&gt; &lt;p&gt;JavaScript&#39;s with statement was intended to provide a shorthand for writing recurring accesses to objects. So it can help reduce file size by reducing the need to repeat a lengthy object reference without performance penalty. Let&#39;s take an example where it is used to avoid redundancy when accessing an object several times.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;a.b.c.greeting   = &#39;welcome&#39;;
a.b.c.age = 32;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using &lt;code&gt;with&lt;/code&gt; it turns this into:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;with(a.b.c) {
        greeting   = &quot;welcome&quot;;
        age = 32;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But this &lt;code&gt;with&lt;/code&gt; statement creates performance problems since one cannot predict whether an argument will refer to a real variable or to a property inside the with argument.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below for loops&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;for (var i = 0; i &amp;lt; 4; i++) { // global scope
  setTimeout(() =&amp;gt; console.log(i));
}

for (let i = 0; i &amp;lt; 4; i++) { // block scope
  setTimeout(() =&amp;gt; console.log(i));
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above for loops is 4 4 4 4 and 0 1 2 3&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; Due to the event queue/loop of javascript, the &lt;code&gt;setTimeout&lt;/code&gt; callback function is called after the loop has been executed. Since the variable i is declared with the &lt;code&gt;var&lt;/code&gt; keyword it became a global variable and the value was equal to 4 using iteration when the time &lt;code&gt;setTimeout&lt;/code&gt; function is invoked. Hence, the output of the first loop is &lt;code&gt;4 4 4 4&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Whereas in the second loop, the variable i is declared as the &lt;code&gt;let&lt;/code&gt; keyword it becomes a block scoped variable and it holds a new value(0, 1 ,2 3) for each iteration. Hence, the output of the first loop is &lt;code&gt;0 1 2 3&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;List down some of the features of ES6&lt;/h3&gt; &lt;p&gt;Below are the list of some new features of ES6,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Support for constants or immutable variables&lt;/li&gt; 
   &lt;li&gt;Block-scope support for variables, constants and functions&lt;/li&gt; 
   &lt;li&gt;Arrow functions&lt;/li&gt; 
   &lt;li&gt;Default parameters&lt;/li&gt; 
   &lt;li&gt;Rest and Spread Parameters&lt;/li&gt; 
   &lt;li&gt;Template Literals&lt;/li&gt; 
   &lt;li&gt;Multi-line Strings&lt;/li&gt; 
   &lt;li&gt;Destructuring Assignment&lt;/li&gt; 
   &lt;li&gt;Enhanced Object Literals&lt;/li&gt; 
   &lt;li&gt;Promises&lt;/li&gt; 
   &lt;li&gt;Classes&lt;/li&gt; 
   &lt;li&gt;Modules&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ES6&lt;/h3&gt; &lt;p&gt;ES6 is the sixth edition of the javascript language and it was released in June 2015. It was initially known as ECMAScript 6 (ES6) and later renamed to ECMAScript 2015. Almost all the modern browsers support ES6 but for the old browsers there are many transpilers, like Babel.js etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I redeclare let and const variables&lt;/h3&gt; &lt;p&gt;No, you cannot redeclare let and const variables. If you do, it throws below error&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Uncaught SyntaxError: Identifier &#39;someVariable&#39; has already been declared
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; The variable declaration with &lt;code&gt;var&lt;/code&gt; keyword refers to a function scope and the variable is treated as if it were declared at the top of the enclosing scope due to hoisting feature. So all the multiple declarations contributing to the same hoisted variable without any error. Let&#39;s take an example of re-declaring variables in the same scope for both var and let/const variables.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var name = &#39;John&#39;;
function myFunc() {
    var name = &#39;Nick&#39;;
    var name = &#39;Abraham&#39;; // Re-assigned in the same function block
    alert(name); // Abraham
}
myFunc();
alert(name); // John
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The block-scoped multi-declaration throws syntax error,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let name = &#39;John&#39;;
function myFunc() {
    let name = &#39;Nick&#39;;
    let name = &#39;Abraham&#39;; // Uncaught SyntaxError: Identifier &#39;name&#39; has already been declared
    alert(name);
}

myFunc();
alert(name);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is const variable makes the value immutable&lt;/h3&gt; &lt;p&gt;No, the const variable doesn&#39;t make the value immutable. But it disallows subsequent assignments(i.e, You can declare with assignment but can&#39;t assign another value later)&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const userList = [];
userList.push(&#39;John&#39;); // Can mutate even though it can&#39;t re-assign
console.log(userList); // [&#39;John&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are default parameters&lt;/h3&gt; &lt;p&gt;In E5, we need to depend on logical OR operators to handle default values of function parameters. Whereas in ES6, Default function parameters feature allows parameters to be initialized with default values if no value or undefined is passed. Let&#39;s compare the behavior with an examples,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES5
var calculateArea = function(height, width) {
   height =  height || 50;
   width = width || 60;

   return width * height;
}
console.log(calculateArea()); //300
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The default parameters makes the initialization more simpler,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES6
var calculateArea = function(height = 50, width = 60) {
   return width * height;
}

console.log(calculateArea()); //300
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are template literals&lt;/h3&gt; &lt;p&gt;Template literals or template strings are string literals allowing embedded expressions. These are enclosed by the back-tick (`) character instead of double or single quotes. In E6, this feature enables using dynamic expressions as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = `Welcome to JS World, Mr. ${firstName} ${lastName}.`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In ES5, you need break string like below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = &#39;Welcome to JS World, Mr. &#39; + firstName + &#39; &#39; + lastName.`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can use multi-line strings and string interpolation features with template literals.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you write multi-line strings in template literals&lt;/h3&gt; &lt;p&gt;In ES5, you would have to use newline escape characters(&#39;\n&#39;) and concatenation symbols(+) in order to get multi-line strings.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;This is string sentence 1\n&#39; +
&#39;This is string sentence 2&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in ES6, You don&#39;t need to mention any newline sequence character,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(`This is string sentence
&#39;This is string sentence 2`);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are nesting templates&lt;/h3&gt; &lt;p&gt;The nesting template is a feature supported within template literals syntax to allow inner backticks inside a placeholder ${ } within the template. For example, the below nesting template is used to display the icons based on user permissions whereas outer template checks for platform type,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const iconStyles = `icon ${ isMobilePlatform() ? &#39;&#39; :
 `icon-${user.isAuthorized ? &#39;submit&#39; : &#39;disabled&#39;}` }`;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can write the above use case without nesting template features as well. However, the nesting template feature is more compact and readable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Without nesting templates
 const iconStyles = `icon ${ isMobilePlatform() ? &#39;&#39; :
  (user.isAuthorized ? &#39;icon-submit&#39; : &#39;icon-disabled&#39;}`;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are tagged templates&lt;/h3&gt; &lt;p&gt;Tagged templates are the advanced form of templates in which tags allow you to parse template literals with a function. The tag function accepts the first parameter as an array of strings and remaining parameters as expressions. This function can also return manipulated strings based on parameters. Let&#39;s see the usage of this tagged template behavior of an IT professional skill set in an organization,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var user1 = &#39;John&#39;;
var skill1 = &#39;JavaScript&#39;;
var experience1 = 15;

var user2 = &#39;Kane&#39;;
var skill2 = &#39;JavaScript&#39;;
var experience2 = 5;

function myInfoTag(strings, userExp, experienceExp, skillExp) {
  var str0 = strings[0]; // &quot;Mr/Ms. &quot;
  var str1 = strings[1]; // &quot; is a/an &quot;
  var str2 = strings[2]; // &quot;in&quot;

  var expertiseStr;
  if (experienceExp &amp;gt; 10){
    expertiseStr = &#39;expert developer&#39;;
  } else if(skillExp &amp;gt; 5 &amp;amp;&amp;amp; skillExp &amp;lt;= 10) {
    expertiseStr = &#39;senior developer&#39;;
  } else {
    expertiseStr = &#39;junior developer&#39;;
  }

  return ${str0}${userExp}${str1}${expertiseStr}${str2}${skillExp};
}

var output1 = myInfoTag`Mr/Ms. ${ user1 } is a/an ${ experience1 } in ${skill1}`;
var output2 = myInfoTag`Mr/Ms. ${ user2 } is a/an ${ experience2 } in ${skill2}`;

console.log(output1);// Mr/Ms. John is a/an expert developer in JavaScript
console.log(output2);// Mr/Ms. Kane is a/an junior developer in JavaScript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are raw strings&lt;/h3&gt; &lt;p&gt;ES6 provides a raw strings feature using the &lt;code&gt;String.raw()&lt;/code&gt; method which is used to get the raw string form of template strings. This feature allows you to access the raw strings as they were entered, without processing escape sequences. For example, the usage would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var calculationString = String.raw `The sum of numbers is \n${1+2+3+4}!`;
console.log(calculationString); // The sum of numbers is 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use raw strings, the newline character sequence will be processed by displaying the output in multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var calculationString = `The sum of numbers is \n${1+2+3+4}!`;
console.log(calculationString);
// The sum of numbers is
// 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Also, the raw property is available on the first argument to the tag function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function tag(strings) {
   console.log(strings.raw[0]);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is destructuring assignment&lt;/h3&gt; &lt;p&gt;The destructuring assignment is a JavaScript expression that makes it possible to unpack values from arrays or properties from objects into distinct variables. Let&#39;s get the month values from an array using destructuring assignment&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var [one, two, three] = [&#39;JAN&#39;, &#39;FEB&#39;, &#39;MARCH&#39;];

console.log(one); // &quot;JAN&quot;
console.log(two); // &quot;FEB&quot;
console.log(three); // &quot;MARCH&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and you can get user properties of an object using destructuring assignment,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var {name, age} = {name: &#39;John&#39;, age: 32};

console.log(name); // John
console.log(age); // 32
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are default values in destructuring assignment&lt;/h3&gt; &lt;p&gt;A variable can be assigned a default value when the value unpacked from the array or object is undefined during destructuring assignment. It helps to avoid setting default values separately for each assignment. Let&#39;s take an example for both arrays and object use cases,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Arrays destructuring:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x, y, z;

[x=2, y=4, z=6] = [10];
console.log(x); // 10
console.log(y); // 4
console.log(z); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Objects destructuring:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var {x=2, y=4, z=6} = {x: 10};

console.log(x); // 10
console.log(y); // 4
console.log(z); // 6
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you swap variables in destructuring assignment&lt;/h3&gt; &lt;p&gt;If you don&#39;t use destructuring assignment, swapping two values requires a temporary variable. Whereas using a destructuring feature, two variable values can be swapped in one destructuring expression. Let&#39;s swap two number variables in array destructuring assignment,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x = 10, y = 20;

[x, y] = [y, x];
console.log(x); // 20
console.log(y); // 10
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are enhanced object literals&lt;/h3&gt; &lt;p&gt;Object literals make it easy to quickly create objects with properties inside the curly braces. For example, it provides shorter syntax for common object property definition as below.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//ES6
var x = 10, y = 20
obj = { x, y }
console.log(obj); // {x: 10, y:20}
//ES5
var x = 10, y = 20
obj = { x : x, y : y}
console.log(obj); // {x: 10, y:20}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are dynamic imports&lt;/h3&gt; &lt;p&gt;The dynamic imports using &lt;code&gt;import()&lt;/code&gt; function syntax allows us to load modules on demand by using promises or the async/await syntax. Currently this feature is in &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;stage4 proposal&lt;/a&gt;. The main advantage of dynamic imports is reduction of our bundle&#39;s sizes, the size/payload response of our requests and overall improvements in the user experience. The syntax of dynamic imports would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(&#39;./Module&#39;).then(Module =&amp;gt; Module.method());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the use cases for dynamic imports&lt;/h3&gt; &lt;p&gt;Below are some of the use cases of using dynamic imports over static imports,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Import a module on-demand or conditionally. For example, if you want to load a polyfill on legacy browser&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (isLegacyBrowser()) {
    import(¬∑¬∑¬∑)
    .then(¬∑¬∑¬∑);
}
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Compute the module specifier at runtime. For example, you can use it for internationalization.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(`messages_${getLocale()}.js`).then(¬∑¬∑¬∑);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Import a module from within a regular script instead a module.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are typed arrays&lt;/h3&gt; &lt;p&gt;Typed arrays are array-like objects from ECMAScript 6 API for handling binary data. JavaScript provides 8 Typed array types,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Int8Array: An array of 8-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Int16Array: An array of 16-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Int32Array: An array of 32-bit signed integers&lt;/li&gt; 
   &lt;li&gt;Uint8Array: An array of 8-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Uint16Array: An array of 16-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Uint32Array: An array of 32-bit unsigned integers&lt;/li&gt; 
   &lt;li&gt;Float32Array: An array of 32-bit floating point numbers&lt;/li&gt; 
   &lt;li&gt;Float64Array: An array of 64-bit floating point numbers&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, you can create an array of 8-bit signed integers as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const a = new Int8Array();
// You can pre-allocate n bytes
const bytes = 1024
const a = new Int8Array(bytes)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of module loaders&lt;/h3&gt; &lt;p&gt;The module loaders provides the below features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Dynamic loading&lt;/li&gt; 
   &lt;li&gt;State isolation&lt;/li&gt; 
   &lt;li&gt;Global namespace isolation&lt;/li&gt; 
   &lt;li&gt;Compilation hooks&lt;/li&gt; 
   &lt;li&gt;Nested virtualization&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is collation&lt;/h3&gt; &lt;p&gt;Collation is used for sorting a set of strings and searching within a set of strings. It is parameterized by locale and aware of Unicode. Let&#39;s take comparison and sorting features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Comparison:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var list = [ &quot;√§&quot;, &quot;a&quot;, &quot;z&quot; ]; // In German,  &quot;√§&quot; sorts with &quot;a&quot; Whereas in Swedish, &quot;√§&quot; sorts after &quot;z&quot;
var l10nDE = new Intl.Collator(&quot;de&quot;);
var l10nSV = new Intl.Collator(&quot;sv&quot;);
console.log(l10nDE.compare(&quot;√§&quot;, &quot;z&quot;) === -1); // true
console.log(l10nSV.compare(&quot;√§&quot;, &quot;z&quot;) === +1); // true
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Sorting:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var list = [ &quot;√§&quot;, &quot;a&quot;, &quot;z&quot; ]; // In German,  &quot;√§&quot; sorts with &quot;a&quot; Whereas in Swedish, &quot;√§&quot; sorts after &quot;z&quot;
var l10nDE = new Intl.Collator(&quot;de&quot;);
var l10nSV = new Intl.Collator(&quot;sv&quot;);
console.log(list.sort(l10nDE.compare)) // [ &quot;a&quot;, &quot;√§&quot;, &quot;z&quot; ]
console.log(list.sort(l10nSV.compare)) // [ &quot;a&quot;, &quot;z&quot;, &quot;√§&quot; ]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is for...of statement&lt;/h3&gt; &lt;p&gt;The for...of statement creates a loop iterating over iterable objects or elements such as built-in String, Array, Array-like objects (like arguments or NodeList), TypedArray, Map, Set, and user-defined iterables. The basic usage of for...of statement on arrays would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arrayIterable = [10, 20, 30, 40, 50];

for (let value of arrayIterable) {
  value ++;
  console.log(value); // 11 21 31 41 51
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below spread operator array&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;[...&#39;John Resig&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the array is [&#39;J&#39;, &#39;o&#39;, &#39;h&#39;, &#39;n&#39;, &#39;&#39;, &#39;R&#39;, &#39;e&#39;, &#39;s&#39;, &#39;i&#39;, &#39;g&#39;] &lt;strong&gt;Explanation:&lt;/strong&gt; The string is an iterable type and the spread operator within an array maps every character of an iterable to one element. Hence, each character of a string becomes an element within an Array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is PostMessage secure&lt;/h3&gt; &lt;p&gt;Yes, postMessages can be considered very secure as long as the programmer/developer is careful about checking the origin and source of an arriving message. But if you try to send/receive a message without verifying its source will create cross-site scripting attacks.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems with postmessage target origin as wildcard&lt;/h3&gt; &lt;p&gt;The second argument of postMessage method specifies which origin is allowed to receive the message. If you use the wildcard ‚Äú*‚Äù as an argument then any origin is allowed to receive the message. In this case, there is no way for the sender window to know if the target window is at the target origin when sending the message. If the target window has been navigated to another origin, the other origin would receive the data. Hence, this may lead to XSS vulnerabilities.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;targetWindow.postMessage(message, &#39;*&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you avoid receiving postMessages from attackers&lt;/h3&gt; &lt;p&gt;Since the listener listens for any message, an attacker can trick the application by sending a message from the attacker‚Äôs origin, which gives an impression that the receiver received the message from the actual sender‚Äôs window. You can avoid this issue by validating the origin of the message on the receiver&#39;s end using the ‚Äúmessage.origin‚Äù attribute. For examples, let&#39;s check the sender&#39;s origin &lt;a href=&quot;http://www.some-sender.com&quot;&gt;http://www.some-sender.com&lt;/a&gt; on receiver side &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/www.some-receiver.com&quot;&gt;www.some-receiver.com&lt;/a&gt;,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Listener on http://www.some-receiver.com/
window.addEventListener(&quot;message&quot;, function(message){
    if(/^http://www\.some-sender\.com$/.test(message.origin)){
         console.log(&#39;You received the data from valid sender&#39;, message.data);
   }
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Can I avoid using postMessages completely&lt;/h3&gt; &lt;p&gt;You cannot avoid using postMessages completely(or 100%). Even though your application doesn‚Äôt use postMessage considering the risks, a lot of third party scripts use postMessage to communicate with the third party service. So your application might be using postMessage without your knowledge.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is postMessages synchronous&lt;/h3&gt; &lt;p&gt;The postMessages are synchronous in IE8 browser but they are asynchronous in IE9 and all other modern browsers (i.e, IE9+, Firefox, Chrome, Safari).Due to this asynchronous behaviour, we use a callback mechanism when the postMessage is returned.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What paradigm is Javascript&lt;/h3&gt; &lt;p&gt;JavaScript is a multi-paradigm language, supporting imperative/procedural programming, Object-Oriented Programming and functional programming. JavaScript supports Object-Oriented Programming with prototypical inheritance.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between internal and external javascript&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Internal JavaScript:&lt;/strong&gt; It is the source code within the script tag. &lt;strong&gt;External JavaScript:&lt;/strong&gt; The source code is stored in an external file(stored with .js extension) and referred with in the tag.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is JavaScript faster than server side script&lt;/h3&gt; &lt;p&gt;Yes, JavaScript is faster than server side script. Because JavaScript is a client-side script it does not require any web server‚Äôs help for its computation or calculation. So JavaScript is always faster than any server-side script like ASP, PHP, etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get the status of a checkbox&lt;/h3&gt; &lt;p&gt;You can apply the &lt;code&gt;checked&lt;/code&gt; property on the selected checkbox in the DOM. If the value is &lt;code&gt;True&lt;/code&gt; means the checkbox is checked otherwise it is unchecked. For example, the below HTML checkbox element can be access using javascript as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;  &amp;lt;input type=&quot;checkbox&quot; name=&quot;checkboxname&quot; value=&quot;Agree&quot;&amp;gt; Agree the conditions&amp;lt;br&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(document.getElementById(‚Äòcheckboxname‚Äô).checked); // true or false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of double tilde operator&lt;/h3&gt; &lt;p&gt;The double tilde operator(~~) is known as double NOT bitwise operator. This operator is going to be a quicker substitute for Math.floor().&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you convert character to ASCII code&lt;/h3&gt; &lt;p&gt;You can use the &lt;code&gt;String.prototype.charCodeAt()&lt;/code&gt; method to convert string characters to ASCII numbers. For example, let&#39;s find ASCII code for the first letter of &#39;ABC&#39; string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;ABC&quot;.charCodeAt(0) // returns 65
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas &lt;code&gt;String.fromCharCode()&lt;/code&gt; method converts numbers to equal ASCII characters.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;String.fromCharCode(65,66,67); // returns &#39;ABC&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is ArrayBuffer&lt;/h3&gt; &lt;p&gt;An ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer. You can create it as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let buffer = new ArrayBuffer(16); // create a buffer of length 16
alert(buffer.byteLength); // 16
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To manipulate an ArrayBuffer, we need to use a ‚Äúview‚Äù object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Create a DataView referring to the buffer
 let view = new DataView(buffer);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below string expression&lt;/h3&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&quot;Welcome to JS world&quot;[0])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above expression is &quot;W&quot;. &lt;strong&gt;Explanation:&lt;/strong&gt; The bracket notation with specific index on a string returns the character at a specific location. Hence, it returns the character &quot;W&quot; of the string. Since this is not supported in IE7 and below versions, you may need to use the .charAt() method to get the desired result.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of Error object&lt;/h3&gt; &lt;p&gt;The Error constructor creates an error object and the instances of error objects are thrown when runtime errors occur. The Error object can also be used as a base object for user-defined exceptions. The syntax of error object would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new Error([message[, fileName[, lineNumber]]])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can throw user defined exceptions or errors using Error object in try...catch block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  if(withdraw &amp;gt; balance)
  throw new Error(&quot;Oops! You don&#39;t have enough balance&quot;);
} catch (e) {
  console.log(e.name + &#39;: &#39; + e.message);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of EvalError object&lt;/h3&gt; &lt;p&gt;The EvalError object indicates an error regarding the global &lt;code&gt;eval()&lt;/code&gt; function. Even though this exception is not thrown by JavaScript anymore, the EvalError object remains for compatibility. The syntax of this expression would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new EvalError([message[, fileName[, lineNumber]]])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can throw EvalError with in try...catch block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  throw new EvalError(&#39;Eval function error&#39;, &#39;someFile.js&#39;, 100);
} catch (e) {
  console.log(e.message, e.name, e.fileName);              // &quot;Eval function error&quot;, &quot;EvalError&quot;, &quot;someFile.js&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the list of cases error thrown from non-strict mode to strict mode&lt;/h3&gt; &lt;p&gt;When you apply &#39;use strict&#39;; syntax, some of the below cases will throw a SyntaxError before executing the script&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When you use Octal syntax&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var n = 022;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using &lt;code&gt;with&lt;/code&gt; statement&lt;/li&gt; 
   &lt;li&gt;When you use delete operator on a variable name&lt;/li&gt; 
   &lt;li&gt;Using eval or arguments as variable or function argument name&lt;/li&gt; 
   &lt;li&gt;When you use newly reserved keywords&lt;/li&gt; 
   &lt;li&gt;When you declare a function in a block&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (someCondition) { function f() {} }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Hence, the errors from above cases are helpful to avoid errors in development/production environments.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Do all objects have prototypes&lt;/h3&gt; &lt;p&gt;No. All objects have prototypes except for the base object which is created by the user, or an object that is created using the new keyword.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between a parameter and an argument&lt;/h3&gt; &lt;p&gt;Parameter is the variable name of a function definition whereas an argument represents the value given to a function when it is invoked. Let&#39;s explain this with a simple function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFunction(parameter1, parameter2, parameter3) {
  console.log(arguments[0]) // &quot;argument1&quot;
  console.log(arguments[1]) // &quot;argument2&quot;
  console.log(arguments[2]) // &quot;argument3&quot;
}
myFunction(&quot;argument1&quot;, &quot;argument2&quot;, &quot;argument3&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of some method in arrays&lt;/h3&gt; &lt;p&gt;The some() method is used to test whether at least one element in the array passes the test implemented by the provided function. The method returns a boolean value. Let&#39;s take an example to test for any odd elements,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5, 6 ,7, 8, 9, 10];

var odd = element ==&amp;gt; element % 2 !== 0;

console.log(array.some(odd)); // true (the odd element exists)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you combine two or more arrays&lt;/h3&gt; &lt;p&gt;The concat() method is used to join two or more arrays by returning a new array containing all the elements. The syntax would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;array1.concat(array2, array3, ..., arrayX)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s take an example of array&#39;s concatenation with veggies and fruits arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  var veggies = [&quot;Tomato&quot;, &quot;Carrot&quot;, &quot;Cabbage&quot;];
  var fruits = [&quot;Apple&quot;, &quot;Orange&quot;, &quot;Pears&quot;];
  var veggiesAndFruits = veggies.concat(fruits);
  console.log(veggiesAndFruits); // Tomato, Carrot, Cabbage, Apple, Orange, Pears
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Shallow and Deep copy&lt;/h3&gt; &lt;p&gt;There are two ways to copy an object,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Shallow Copy:&lt;/strong&gt; Shallow copy is a bitwise copy of an object. A new object is created that has an exact copy of the values in the original object. If any of the fields of the object are references to other objects, just the reference addresses are copied i.e., only the memory address is copied.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetails = {
  name: &quot;John&quot;, age: 25, expertise: &quot;Software Developer&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;to create a duplicate&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetailsShallowCopy = empDetails    //Shallow copying!
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;if we change some property value in the duplicate one like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;empDetailsShallowCopy.name = &quot;Johnson&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above statement will also change the name of &lt;code&gt;empDetails&lt;/code&gt;, since we have a shallow copy. That means we&#39;re losing the original data as well.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Deep copy:&lt;/strong&gt; A deep copy copies all fields, and makes copies of dynamically allocated memory pointed to by the fields. A deep copy occurs when an object is copied along with the objects to which it refers.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetails = {
  name: &quot;John&quot;, age: 25, expertise: &quot;Software Developer&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Create a deep copy by using the properties from the original object into new variable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var empDetailsDeepCopy = {
  name: empDetails.name,
  age: empDetails.age,
  expertise: empDetails.expertise
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now if you change &lt;code&gt;empDetailsDeepCopy.name&lt;/code&gt;, it will only affect &lt;code&gt;empDetailsDeepCopy&lt;/code&gt; &amp;amp; not &lt;code&gt;empDetails&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create specific number of copies of a string&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;repeat()&lt;/code&gt; method is used to construct and return a new string which contains the specified number of copies of the string on which it was called, concatenated together. Remember that this method has been added to the ECMAScript 2015 specification. Let&#39;s take an example of Hello string to repeat it 4 times,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&#39;Hello&#39;.repeat(4);  // &#39;HelloHelloHelloHello&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you return all matching strings against a regular expression&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;matchAll()&lt;/code&gt; method can be used to return an iterator of all results matching a string against a regular expression. For example, the below example returns an array of matching string results against a regular expression,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let regexp = /Hello(\d?))/g;
let greeting = &#39;Hello1Hello2Hello3&#39;;

let greetingList = [...greeting.matchAll(regexp)];

console.log(greetingList[0]); //Hello1
console.log(greetingList[1]); //Hello2
console.log(greetingList[2]); //Hello3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you trim a string at the beginning or ending&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;trim&lt;/code&gt; method of string prototype is used to trim on both sides of a string. But if you want to trim especially at the beginning or ending of the string then you can use &lt;code&gt;trimStart/trimLeft&lt;/code&gt; and &lt;code&gt;trimEnd/trimRight&lt;/code&gt; methods. Let&#39;s see an example of these methods on a greeting message,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var greeting = &#39;   Hello, Goodmorning!   &#39;;

console.log(greeting); // &quot;   Hello, Goodmorning!   &quot;
console.log(greeting.trimStart()); // &quot;Hello, Goodmorning!   &quot;
console.log(greeting.trimLeft()); // &quot;Hello, Goodmorning!   &quot;

console.log(greeting.trimEnd()); // &quot;   Hello, Goodmorning!&quot;
console.log(greeting.trimRight()); // &quot;   Hello, Goodmorning!&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below console statement with unary operator&lt;/h3&gt; &lt;p&gt;Let&#39;s take console statement with unary operator as given below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+ &#39;Hello&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output of the above console log statement returns NaN. Because the element is prefixed by the unary operator and the JavaScript interpreter will try to convert that element into a number type. Since the conversion fails, the value of the statement results in NaN value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Does javascript uses mixins&lt;/h3&gt; &lt;p&gt;Mixin is a generic object-oriented programming term - is a class containing methods that can be used by other classes without a need to inherit from it. In JavaScript we can only inherit from a single object. ie. There can be only one &lt;code&gt;[[prototype]]&lt;/code&gt; for an object.&lt;/p&gt; &lt;p&gt;But sometimes we require to extend more than one, to overcome this we can use Mixin which helps to copy methods to the prototype of another class.&lt;/p&gt; &lt;p&gt;Say for instance, we&#39;ve two classes &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;CleanRoom&lt;/code&gt;. Suppose we need to add &lt;code&gt;CleanRoom&lt;/code&gt; functionality to &lt;code&gt;User&lt;/code&gt;, so that user can clean the room at demand. Here&#39;s where concept called mixins comes into picture.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// mixin
let cleanRoomMixin = {
     cleanRoom() {
     alert(`Hello ${this.name}, your room is clean now`);
},
sayBye() {
     alert(`Bye ${this.name}`);
}
};

// usage:
class User {
     constructor(name) {
          this.name = name;
     }
}

// copy the methods
Object.assign(User.prototype, cleanRoomMixin);

// now User can clean the room
new User(&quot;Dude&quot;).cleanRoom(); // Hello Dude, your room is clean now!
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a thunk function&lt;/h3&gt; &lt;p&gt;A thunk is just a function which delays the evaluation of the value. It doesn‚Äôt take any arguments but gives the value whenever you invoke the thunk. i.e, It is used not to execute now but it will be sometime in the future. Let&#39;s take a synchronous example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const add = (x,y) =&amp;gt; x + y;

const thunk = () =&amp;gt; add(2,3);

thunk() // 5
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are asynchronous thunks&lt;/h3&gt; &lt;p&gt;The asynchronous thunks are useful to make network requests. Let&#39;s see an example of network requests,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function fetchData(fn){
  fetch(&#39;https://jsonplaceholder.typicode.com/todos/1&#39;)
  .then(response =&amp;gt; response.json())
  .then(json =&amp;gt; fn(json))
}

const asyncThunk = function (){
   return fetchData(function getData(data){
      console.log(data)
  })
}

asyncThunk()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;getData&lt;/code&gt; function won&#39;t be called immediately but it will be invoked only when the data is available from API endpoint. The setTimeout function is also used to make our code asynchronous. The best real time example is redux state management library which uses the asynchronous thunks to delay the actions to dispatch.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of below function calls&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Code snippet:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const circle = {
  radius: 20,
  diameter() {
    return this.radius * 2;
  },
  perimeter: () =&amp;gt; 2 * Math.PI * this.radius
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;console.log(circle.diameter()); console.log(circle.perimeter());&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The output is 40 and NaN. Remember that diameter is a regular function, whereas the value of perimeter is an arrow function. The &lt;code&gt;this&lt;/code&gt; keyword of a regular function(i.e, diameter) refers to the surrounding scope which is a class(i.e, Shape object). Whereas this keyword of perimeter function refers to the surrounding scope which is a window object. Since there is no radius property on window objects it returns an undefined value and the multiple of number value returns NaN value.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to remove all line breaks from a string&lt;/h3&gt; &lt;p&gt;The easiest approach is using regular expressions to detect and replace newlines in the string. In this case, we use replace function along with string to replace with, which in our case is an empty string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function remove_linebreaks( var message ) {
    return message.replace( /[\r\n]+/gm, &quot;&quot; );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above expression, g and m are for global and multiline flags.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between reflow and repaint&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;repaint&lt;/em&gt; occurs when changes are made which affect the visibility of an element, but not its layout. Examples of this include outline, visibility, or background color. A &lt;em&gt;reflow&lt;/em&gt; involves changes that affect the layout of a portion of the page (or the whole page). Resizing the browser window, changing the font, content changing (such as user typing text), using JavaScript methods involving computed styles, adding or removing elements from the DOM, and changing an element&#39;s classes are a few of the things that can trigger reflow. Reflow of an element causes the subsequent reflow of all child and ancestor elements as well as any elements following it in the DOM.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens with negating an array&lt;/h3&gt; &lt;p&gt;Negating an array with &lt;code&gt;!&lt;/code&gt; character will coerce the array into a boolean. Since Arrays are considered to be truthy So negating it will return &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(![]); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What happens if we add two arrays&lt;/h3&gt; &lt;p&gt;If you add two arrays together, it will convert them both to strings and concatenate them. For example, the result of adding arrays would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([&#39;a&#39;] + [&#39;b&#39;]);  // &quot;ab&quot;
console.log([] + []); // &quot;&quot;
console.log(![] + []); // &quot;false&quot;, because ![] returns false.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the output of prepend additive operator on falsy values&lt;/h3&gt; &lt;p&gt;If you prepend the additive(+) operator on falsy values(null, undefined, NaN, false, &quot;&quot;), the falsy value converts to a number value zero. Let&#39;s display them on browser console as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+null); // 0
console.log(+undefined);// NaN
console.log(+false); // 0
console.log(+NaN); // NaN
console.log(+&quot;&quot;); // 0
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create self string using special characters&lt;/h3&gt; &lt;p&gt;The self string can be formed with the combination of &lt;code&gt;[]()!+&lt;/code&gt; characters. You need to remember the below conventions to achieve this pattern.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Since Arrays are truthful values, negating the arrays will produce false: ![] === false&lt;/li&gt; 
   &lt;li&gt;As per JavaScript coercion rules, the addition of arrays together will toString them: [] + [] === &quot;&quot;&lt;/li&gt; 
   &lt;li&gt;Prepend an array with + operator will convert an array to false, the negation will make it true and finally converting the result will produce value &#39;1&#39;: +(!(+[])) === 1&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;By applying the above rules, we can derive below conditions&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;![] + [] === &quot;false&quot;
+!+[] === 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now the character pattern would be created as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;      s               e               l               f
 ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^

 (![] + [])[3] + (![] + [])[4] + (![] + [])[2] + (![] + [])[0]
 ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^
(![] + [])[+!+[]+!+[]+!+[]] +
(![] + [])[+!+[]+!+[]+!+[]+!+[]] +
(![] + [])[+!+[]+!+[]] +
(![] + [])[+[]]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(![]+[])[+!+[]+!+[]+!+[]]+(![]+[])[+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]+!+[]]+(![]+[])[+[]]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you remove falsy values from an array&lt;/h3&gt; &lt;p&gt;You can apply the filter method on the array by passing Boolean as a parameter. This way it removes all falsy values(0, undefined, null, false and &quot;&quot;) from the array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myArray = [false, null, 1,5, undefined]
myArray.filter(Boolean); // [1, 5] // is same as myArray.filter(x =&amp;gt; x);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get unique values of an array&lt;/h3&gt; &lt;p&gt;You can get unique values of an array with the combination of &lt;code&gt;Set&lt;/code&gt; and rest expression/spread(...) syntax.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([...new Set([1, 2, 4, 4, 3])]); // [1, 2, 4, 3]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is destructuring aliases&lt;/h3&gt; &lt;p&gt;Sometimes you would like to have a destructured variable with a different name than the property name. In that case, you&#39;ll use a &lt;code&gt;: newName&lt;/code&gt; to specify a name for the variable. This process is called destructuring aliases.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = { x: 1 };
// Grabs obj.x as as { otherName }
const { x: otherName } = obj;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you map the array values without using map method&lt;/h3&gt; &lt;p&gt;You can map the array values without using the &lt;code&gt;map&lt;/code&gt; method by just using the &lt;code&gt;from&lt;/code&gt; method of Array. Let&#39;s map city names from Countries array,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const countries = [
    { name: &#39;India&#39;, capital: &#39;Delhi&#39; },
    { name: &#39;US&#39;, capital: &#39;Washington&#39; },
    { name: &#39;Russia&#39;, capital: &#39;Moscow&#39; },
    { name: &#39;Singapore&#39;, capital: &#39;Singapore&#39; },
    { name: &#39;China&#39;, capital: &#39;Beijing&#39; },
    { name: &#39;France&#39;, capital: &#39;Paris&#39; },
];

const cityNames = Array.from(countries, ({ capital}) =&amp;gt; capital);
console.log(cityNames); // [&#39;Delhi, &#39;Washington&#39;, &#39;Moscow&#39;, &#39;Singapore&#39;, &#39;Beijing&#39;, &#39;Paris&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you empty an array&lt;/h3&gt; &lt;p&gt;You can empty an array quickly by setting the array length to zero.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let cities = [&#39;Singapore&#39;, &#39;Delhi&#39;, &#39;London&#39;];
cities.length = 0; // cities becomes []
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you rounding numbers to certain decimals&lt;/h3&gt; &lt;p&gt;You can round numbers to a certain number of decimals using &lt;code&gt;toFixed&lt;/code&gt; method from native javascript.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let pie = 3.141592653;
pie = pie.toFixed(3); // 3.142
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to convert an array to an object&lt;/h3&gt; &lt;p&gt;You can convert an array to an object with the same data using spread(...) operator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var fruits = [&quot;banana&quot;, &quot;apple&quot;, &quot;orange&quot;, &quot;watermelon&quot;];
var fruitsObject = {...fruits};
console.log(fruitsObject); // {0: &quot;banana&quot;, 1: &quot;apple&quot;, 2: &quot;orange&quot;, 3: &quot;watermelon&quot;}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create an array with some data&lt;/h3&gt; &lt;p&gt;You can create an array with some data or an array with the same values using &lt;code&gt;fill&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var newArray = new Array(5).fill(&quot;0&quot;);
console.log(newArray); // [&quot;0&quot;, &quot;0&quot;, &quot;0&quot;, &quot;0&quot;, &quot;0&quot;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the placeholders from console object&lt;/h3&gt; &lt;p&gt;Below are the list of placeholders available from console object,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;%o ‚Äî It takes an object,&lt;/li&gt; 
   &lt;li&gt;%s ‚Äî It takes a string,&lt;/li&gt; 
   &lt;li&gt;%d ‚Äî It is used for a decimal or integer These placeholders can be represented in the console.log as below&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;};
console.log(&quot;Hello %s, your details %o are available in the object form&quot;, &quot;John&quot;, user); // Hello John, your details {name: &quot;John&quot;, id: 1, city: &quot;Delhi&quot;} are available in object
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to add CSS to console messages&lt;/h3&gt; &lt;p&gt;Yes, you can apply CSS styles to console messages similar to html text on the web page.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;%c The text has blue color, with large font and red background&#39;, &#39;color: blue; font-size: x-large; background: red&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The text will be displayed as below, &lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-css.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All CSS styles can be applied to console messages.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of dir method of console object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;console.dir()&lt;/code&gt; is used to display an interactive list of the properties of the specified JavaScript object as JSON.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;};
console.dir(user);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The user object displayed in JSON representation &lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-dir.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to debug HTML elements in console&lt;/h3&gt; &lt;p&gt;Yes, it is possible to get and debug HTML elements in the console just like inspecting elements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const element = document.getElementsByTagName(&quot;body&quot;)[0];
console.log(element);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It prints the HTML element in the console,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-html.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you display data in a tabular format using console object&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;console.table()&lt;/code&gt; is used to display data in the console in a tabular format to visualize complex arrays or objects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const users = [{ &quot;name&quot;:&quot;John&quot;, &quot;id&quot;: 1, &quot;city&quot;: &quot;Delhi&quot;}, { &quot;name&quot;:&quot;Max&quot;, &quot;id&quot;: 2, &quot;city&quot;: &quot;London&quot;}, { &quot;name&quot;:&quot;Rod&quot;, &quot;id&quot;: 3, &quot;city&quot;: &quot;Paris&quot;} ];
console.table(users);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The data visualized in a table format,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/console-table.png&quot; alt=&quot;Screenshot&quot;&gt; &lt;strong&gt;Not:&lt;/strong&gt; Remember that &lt;code&gt;console.table()&lt;/code&gt; is not supported in IE.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you verify that an argument is a Number or not&lt;/h3&gt; &lt;p&gt;The combination of IsNaN and isFinite methods are used to confirm whether an argument is a number or not.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isNumber(n){
    return !isNaN(parseFloat(n)) &amp;amp;&amp;amp; isFinite(n);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create copy to clipboard button&lt;/h3&gt; &lt;p&gt;You need to select the content(using .select() method) of the input element and execute the copy command with execCommand (i.e, execCommand(&#39;copy&#39;)). You can also execute other system commands like cut and paste.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.querySelector(&quot;#copy-button&quot;).onclick = function() {
  // Select the content
  document.querySelector(&quot;#copy-input&quot;).select();
  // Copy to the clipboard
  document.execCommand(&#39;copy&#39;);
};
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the shortcut to get timestamp&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new Date().getTime()&lt;/code&gt; to get the current timestamp. There is an alternative shortcut to get the value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(+new Date());
console.log(Date.now());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you flattening multi dimensional arrays&lt;/h3&gt; &lt;p&gt;Flattening bi-dimensional arrays is trivial with Spread operator.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const biDimensionalArr = [11, [22, 33], [44, 55], [66, 77], 88, 99];
const flattenArr = [].concat(...biDimensionalArr); // [11, 22, 33, 44, 55, 66, 77, 88, 99]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can make it work with multi-dimensional arrays by recursive calls,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function flattenMultiArray(arr) {
    const flattened = [].concat(...arr);
    return flattened.some(item =&amp;gt; Array.isArray(item)) ? flattenMultiArray(flattened) : flattened;
 }
const multiDimensionalArr = [11, [22, 33], [44, [55, 66, [77, [88]], 99]]];
const flatArr = flattenMultiArray(multiDimensionalArr); // [11, 22, 33, 44, 55, 66, 77, 88, 99]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest multi condition checking&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;indexOf&lt;/code&gt; to compare input with multiple values instead of checking each value as one condition.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Verbose approach
if (input === &#39;first&#39; || input === 1 || input === &#39;second&#39; || input === 2) {
  someFunction();
}
// Shortcut
if ([&#39;first&#39;, 1, &#39;second&#39;, 2].indexOf(input) !== -1) {
  someFunction();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you capture browser back button&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;window.onbeforeunload&lt;/code&gt; method is used to capture browser back button events. This is helpful to warn users about losing the current data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; window.onbeforeunload = function() {
    alert(&quot;You work will be lost&quot;);
 };
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you disable right click in the web page&lt;/h3&gt; &lt;p&gt;The right click on the page can be disabled by returning false from the &lt;code&gt;oncontextmenu&lt;/code&gt; attribute on the body element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body oncontextmenu=&quot;return false;&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are wrapper objects&lt;/h3&gt; &lt;p&gt;Primitive Values like string,number and boolean don&#39;t have properties and methods but they are temporarily converted or coerced to an object(Wrapper object) when you try to perform actions on them. For example, if you apply toUpperCase() method on a primitive string value, it does not throw an error but returns uppercase of the string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let name = &quot;john&quot;;

console.log(name.toUpperCase());  // Behind the scenes treated as console.log(new String(name).toUpperCase());
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;i.e, Every primitive except null and undefined have Wrapper Objects and the list of wrapper objects are String,Number,Boolean,Symbol and BigInt.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is AJAX&lt;/h3&gt; &lt;p&gt;AJAX stands for Asynchronous JavaScript and XML and it is a group of related technologies(HTML, CSS, JavaScript, XMLHttpRequest API etc) used to display data asynchronously. i.e. We can send data to the server and get data from the server without reloading the web page.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to deal with Asynchronous Code&lt;/h3&gt; &lt;p&gt;Below are the list of different ways to deal with Asynchronous code.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Callbacks&lt;/li&gt; 
   &lt;li&gt;Promises&lt;/li&gt; 
   &lt;li&gt;Async/await&lt;/li&gt; 
   &lt;li&gt;Third-party libraries such as async.js,bluebird etc&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to cancel a fetch request&lt;/h3&gt; &lt;p&gt;Until a few days back, One shortcoming of native promises is no direct way to cancel a fetch request. But the new &lt;code&gt;AbortController&lt;/code&gt; from js specification allows you to use a signal to abort one or multiple fetch calls. The basic flow of cancelling a fetch request would be as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Create an &lt;code&gt;AbortController&lt;/code&gt; instance&lt;/li&gt; 
   &lt;li&gt;Get the signal property of an instance and pass the signal as a fetch option for signal&lt;/li&gt; 
   &lt;li&gt;Call the AbortController&#39;s abort property to cancel all fetches that use that signal For example, let&#39;s pass the same signal to multiple fetch calls will cancel all requests with that signal,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const controller = new AbortController();
const { signal } = controller;

fetch(&quot;http://localhost:8000&quot;, { signal }).then(response =&amp;gt; {
    console.log(`Request 1 is complete!`);
}).catch(e =&amp;gt; {
    if(e.name === &quot;AbortError&quot;) {
        // We know it&#39;s been canceled!
    }
});

fetch(&quot;http://localhost:8000&quot;, { signal }).then(response =&amp;gt; {
    console.log(`Request 2 is complete!`);
}).catch(e =&amp;gt; {
     if(e.name === &quot;AbortError&quot;) {
         // We know it&#39;s been canceled!
      }
});

// Wait 2 seconds to abort both requests
setTimeout(() =&amp;gt; controller.abort(), 2000);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is web speech API&lt;/h3&gt; &lt;p&gt;Web speech API is used to enable modern browsers recognize and synthesize speech(i.e, voice data into web apps). This API has been introduced by W3C Community in the year 2012. It has two main parts,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;SpeechRecognition (Asynchronous Speech Recognition or Speech-to-Text):&lt;/strong&gt; It provides the ability to recognize voice context from an audio input and respond accordingly. This is accessed by the &lt;code&gt;SpeechRecognition&lt;/code&gt; interface. The below example shows on how to use this API to get text from speech,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;window.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;  // webkitSpeechRecognition for Chrome and SpeechRecognition for FF
const recognition = new window.SpeechRecognition();
recognition.onresult = (event) =&amp;gt; { // SpeechRecognitionEvent type
  const speechToText = event.results[0][0].transcript;
  console.log(speechToText);
}
recognition.start();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In this API, browser is going to ask you for permission to use your microphone&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;SpeechSynthesis (Text-to-Speech):&lt;/strong&gt; It provides the ability to recognize voice context from an audio input and respond. This is accessed by the &lt;code&gt;SpeechSynthesis&lt;/code&gt; interface. For example, the below code is used to get voice/speech from text,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if(&#39;speechSynthesis&#39; in window){
    var speech = new SpeechSynthesisUtterance(&#39;Hello World!&#39;);
    speech.lang = &#39;en-US&#39;;
    window.speechSynthesis.speak(speech);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above examples can be tested on chrome(33+) browser&#39;s developer console. &lt;strong&gt;Note:&lt;/strong&gt; This API is still a working draft and only available in Chrome and Firefox browsers(ofcourse Chrome only implemented the specification) &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is minimum timeout throttling&lt;/h3&gt; &lt;p&gt;Both browser and NodeJS javascript environments throttles with a minimum delay that is greater than 0ms. That means even though setting a delay of 0ms will not happen instantaneously. &lt;strong&gt;Browsers:&lt;/strong&gt; They have a minimum delay of 4ms. This throttle occurs when successive calls are triggered due to callback nesting(certain depth) or after a certain number of successive intervals. Note: The older browsers have a minimum delay of 10ms. &lt;strong&gt;Nodejs:&lt;/strong&gt; They have a minimum delay of 1ms. This throttle happens when the delay is larger than 2147483647 or less than 1. The best example to explain this timeout throttling behavior is the order of below code snippet.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function runMeFirst() {
    console.log(&#39;My script is initialized&#39;);
}
setTimeout(runMeFirst, 0);
console.log(&#39;Script loaded&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the output would be in&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;Script loaded
My script is initialized
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you don&#39;t use &lt;code&gt;setTimeout&lt;/code&gt;, the order of logs will be sequential.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function runMeFirst() {
   console.log(&#39;My script is initialized&#39;);
}
runMeFirst();
console.log(&#39;Script loaded&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the output is,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;My script is initialized
Script loaded
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you implement zero timeout in modern browsers&lt;/h3&gt; &lt;p&gt;You can&#39;t use setTimeout(fn, 0) to execute the code immediately due to minimum delay of greater than 0ms. But you can use window.postMessage() to achieve this behavior.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are tasks in event loop&lt;/h3&gt; &lt;p&gt;A task is any javascript code/program which is scheduled to be run by the standard mechanisms such as initially starting to run a program, run an event callback, or an interval or timeout being fired. All these tasks are scheduled on a task queue. Below are the list of use cases to add tasks to the task queue,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;When a new javascript program is executed directly from console or running by the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element, the task will be added to the task queue.&lt;/li&gt; 
   &lt;li&gt;When an event fires, the event callback added to task queue&lt;/li&gt; 
   &lt;li&gt;When a setTimeout or setInterval is reached, the corresponding callback added to task queue&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is microtask&lt;/h3&gt; &lt;p&gt;Microtask is the javascript code which needs to be executed immediately after the currently executing task/microtask is completed. They are kind of blocking in nature. i.e, The main thread will be blocked until the microtask queue is empty. The main sources of microtasks are Promise.resolve, Promise.reject, MutationObservers, IntersectionObservers etc&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All of these microtasks are processed in the same turn of the event loop. &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are different event loops&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of queueMicrotask&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you use javascript libraries in typescript file&lt;/h3&gt; &lt;p&gt;It is known that not all JavaScript libraries or frameworks have TypeScript declaration files. But if you still want to use libraries or frameworks in our TypeScript files without getting compilation errors, the only solution is &lt;code&gt;declare&lt;/code&gt; keyword along with a variable declaration. For example, let&#39;s imagine you have a library called &lt;code&gt;customLibrary&lt;/code&gt; that doesn‚Äôt have a TypeScript declaration and have a namespace called &lt;code&gt;customLibrary&lt;/code&gt; in the global namespace. You can use this library in typescript code as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;declare var customLibrary;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the runtime, typescript will provide the type to the &lt;code&gt;customLibrary&lt;/code&gt; variable as &lt;code&gt;any&lt;/code&gt; type. The another alternative without using declare keyword is below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var customLibrary: any;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between promises and observables&lt;/h3&gt; &lt;p&gt;Some of the major difference in a tabular form&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Promises&lt;/th&gt; 
     &lt;th&gt;Observables&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Emits only a single value at a time&lt;/td&gt; 
     &lt;td&gt;Emits multiple values over a period of time(stream of values ranging from 0 to multiple)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Eager in nature; they are going to be called immediately&lt;/td&gt; 
     &lt;td&gt;Lazy in nature; they require subscription to be invoked&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Promise is always asynchronous even though it resolved immediately&lt;/td&gt; 
     &lt;td&gt;Observable can be either synchronous or asynchronous&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Doesn&#39;t provide any operators&lt;/td&gt; 
     &lt;td&gt;Provides operators such as map, forEach, filter, reduce, retry, and retryWhen etc&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Cannot be canceled&lt;/td&gt; 
     &lt;td&gt;Canceled by using unsubscribe() method&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is heap&lt;/h3&gt; &lt;p&gt;Heap(Or memory heap) is the memory location where objects are stored when we define variables. i.e, This is the place where all the memory allocations and de-allocation take place. Both heap and call-stack are two containers of JS runtime. Whenever runtime comes across variables and function declarations in the code it stores them in the Heap.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/heap.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an event table&lt;/h3&gt; &lt;p&gt;Event Table is a data structure that stores and keeps track of all the events which will be executed asynchronously like after some time interval or after the resolution of some API requests. i.e Whenever you call a setTimeout function or invoke async operation, it is added to the Event Table. It doesn&#39;t not execute functions on it‚Äôs own. The main purpose of the event table is to keep track of events and send them to the Event Queue as shown in the below diagram.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/event-table.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a microTask queue&lt;/h3&gt; &lt;p&gt;Microtask Queue is the new queue where all the tasks initiated by promise objects get processed before the callback queue. The microtasks queue are processed before the next rendering and painting jobs. But if these microtasks are running for a long time then it leads to visual degradation.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between shim and polyfill&lt;/h3&gt; &lt;p&gt;A shim is a library that brings a new API to an older environment, using only the means of that environment. It isn&#39;t necessarily restricted to a web application. For example, es5-shim.js is used to emulate ES5 features on older browsers (mainly pre IE9). Whereas polyfill is a piece of code (or plugin) that provides the technology that you, the developer, expect the browser to provide natively. In a simple sentence, A polyfill is a shim for a browser API.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you detect primitive or non primitive value type&lt;/h3&gt; &lt;p&gt;In JavaScript, primitive types include boolean, string, number, BigInt, null, Symbol and undefined. Whereas non-primitive types include the Objects. But you can easily identify them with the below function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var myPrimitive = 30;
var myNonPrimitive = {};
function isPrimitive(val) {
    return Object(val) !== val;
}

isPrimitive(myPrimitive);
isPrimitive(myNonPrimitive);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the value is a primitive data type, the Object constructor creates a new wrapper object for the value. But If the value is a non-primitive data type (an object), the Object constructor will give the same object.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is babel&lt;/h3&gt; &lt;p&gt;Babel is a JavaScript transpiler to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments. Some of the main features are listed below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Transform syntax&lt;/li&gt; 
   &lt;li&gt;Polyfill features that are missing in your target environment (using @babel/polyfill)&lt;/li&gt; 
   &lt;li&gt;Source code transformations (or codemods)&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Is Node.js completely single threaded&lt;/h3&gt; &lt;p&gt;Node is a single thread, but some of the functions included in the Node.js standard library(e.g, fs module functions) are not single threaded. i.e, Their logic runs outside of the Node.js single thread to improve the speed and performance of a program.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common use cases of observables&lt;/h3&gt; &lt;p&gt;Some of the most common use cases of observables are web sockets with push notifications, user input changes, repeating intervals, etc&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is RxJS&lt;/h3&gt; &lt;p&gt;RxJS (Reactive Extensions for JavaScript) is a library for implementing reactive programming using observables that makes it easier to compose asynchronous or callback-based code. It also provides utility functions for creating and working with observables.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Function constructor and function declaration&lt;/h3&gt; &lt;p&gt;The functions which are created with &lt;code&gt;Function constructor&lt;/code&gt; do not create closures to their creation contexts but they are always created in the global scope. i.e, the function can access its own local variables and global scope variables only. Whereas function declarations can access outer function variables(closures) too.&lt;/p&gt; &lt;p&gt;Let&#39;s see this difference with an example,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Function Constructor:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 100;
function createFunction() {
    var a = 200;
    return new Function(&#39;return a;&#39;);
}
console.log(createFunction()()); // 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Function declaration:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 100;
function createFunction() {
    var a = 200;
    return function func() {
        return a;
    }
}
console.log(createFunction()()); // 200
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Short circuit condition&lt;/h3&gt; &lt;p&gt;Short circuit conditions are meant for condensed way of writing simple if statements. Let&#39;s demonstrate the scenario using an example. If you would like to login to a portal with an authentication condition, the expression would be as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (authenticate) {
   loginToPorta();
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since the javascript logical operators evaluated from left to right, the above expression can be simplified using &amp;amp;&amp;amp; logical operator&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;authenticate &amp;amp;&amp;amp; loginToPorta();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to resize an array&lt;/h3&gt; &lt;p&gt;The length property of an array is useful to resize or empty an array quickly. Let&#39;s apply length property on number array to resize the number of elements from 5 to 2,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5];
console.log(array.length); // 5

array.length = 2;
console.log(array.length); // 2
console.log(array); // [1,2]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the array can be emptied too&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array = [1, 2, 3, 4, 5];
array.length = 0;
console.log(array.length); // 0
console.log(array); // []
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an observable&lt;/h3&gt; &lt;p&gt;An Observable is basically a function that can return a stream of values either synchronously or asynchronously to an observer over time. The consumer can get the value by calling &lt;code&gt;subscribe()&lt;/code&gt; method. Let&#39;s look at a simple example of an Observable&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { Observable } from &#39;rxjs&#39;;

const observable = new Observable(observer =&amp;gt; {
  setTimeout(() =&amp;gt; {
    observer.next(&#39;Message from a Observable!&#39;);
  }, 3000);
});

observable.subscribe(value =&amp;gt; console.log(value));
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/images/observables.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Observables are not part of the JavaScript language yet but they are being proposed to be added to the language&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between function and class declarations&lt;/h3&gt; &lt;p&gt;The main difference between function declarations and class declarations is &lt;code&gt;hoisting&lt;/code&gt;. The function declarations are hoisted but not class declarations.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Classes:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = new User(); // ReferenceError

class User {}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Constructor Function:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const user = new User(); // No error

 function User() {
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an async function&lt;/h3&gt; &lt;p&gt;An async function is a function declared with the &lt;code&gt;async&lt;/code&gt; keyword which enables asynchronous, promise-based behavior to be written in a cleaner style by avoiding promise chains. These functions can contain zero or more &lt;code&gt;await&lt;/code&gt; expressions.&lt;/p&gt; &lt;p&gt;Let&#39;s take a below async function example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function logger() {

  let data = await fetch(&#39;http://someapi.com/users&#39;); // pause until fetch returns
  console.log(data)
}
logger();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is basically syntax sugar over ES2015 promises and generators.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you prevent promises swallowing errors&lt;/h3&gt; &lt;p&gt;While using asynchronous code, JavaScript‚Äôs ES6 promises can make your life a lot easier without having callback pyramids and error handling on every second line. But Promises have some pitfalls and the biggest one is swallowing errors by default.&lt;/p&gt; &lt;p&gt;Let&#39;s say you expect to print an error to the console for all the below cases,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).then(function() {
      throw new Error(&#39;error&#39;);
});

Promise.reject(&#39;error value&#39;).catch(function() {
      throw new Error(&#39;error&#39;);
});

new Promise(function(resolve, reject) {
      throw new Error(&#39;error&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But there are many modern JavaScript environments that won&#39;t print any errors. You can fix this problem in different ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add catch block at the end of each chain:&lt;/strong&gt; You can add catch block to the end of each of your promise chains&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).then(function() {
    throw new Error(&#39;error&#39;);
}).catch(function(error) {
  console.error(error.stack);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But it is quite difficult to type for each promise chain and verbose too.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add done method:&lt;/strong&gt; You can replace first solution&#39;s then and catch blocks with done method&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.resolve(&#39;promised value&#39;).done(function() {
    throw new Error(&#39;error&#39;);
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s say you want to fetch data using HTTP and later perform processing on the resulting data asynchronously. You can write &lt;code&gt;done&lt;/code&gt; block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;getDataFromHttp()
  .then(function(result) {
    return processDataAsync(result);
  })
  .done(function(processed) {
    displayData(processed);
  });
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In future, if the processing library API changed to synchronous then you can remove &lt;code&gt;done&lt;/code&gt; block as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; getDataFromHttp()
   .then(function(result) {
     return displayData(processDataAsync(result));
   })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and then you forgot to add &lt;code&gt;done&lt;/code&gt; block to &lt;code&gt;then&lt;/code&gt; block leads to silent errors.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extend ES6 Promises by Bluebird:&lt;/strong&gt; Bluebird extends the ES6 Promises API to avoid the issue in the second solution. This library has a ‚Äúdefault‚Äù onRejection handler which will print all errors from rejected Promises to stderr. After installation, you can process unhandled rejections&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.onPossiblyUnhandledRejection(function(error){
    throw error;
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and discard a rejection, just handle it with an empty catch&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Promise.reject(&#39;error value&#39;).catch(function() {});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is deno&lt;/h3&gt; &lt;p&gt;Deno is a simple, modern and secure runtime for JavaScript and TypeScript that uses V8 JavaScript engine and the Rust programming language.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make an object iterable in javascript&lt;/h3&gt; &lt;p&gt;By default, plain objects are not iterable. But you can make the object iterable by defining a &lt;code&gt;Symbol.iterator&lt;/code&gt; property on it.&lt;/p&gt; &lt;p&gt;Let&#39;s demonstrate this with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const collection = {
  one: 1,
  two: 2,
  three: 3,
  [Symbol.iterator]() {
    const values = Object.keys(this);
    let i = 0;
    return {
      next: () =&amp;gt; {
        return {
          value: this[values[i++]],
          done: i &amp;gt; values.length
        }
      }
    };
  }
};

const iterator = collection[Symbol.iterator]();

console.log(iterator.next());    // ‚Üí {value: 1, done: false}
console.log(iterator.next());    // ‚Üí {value: 2, done: false}
console.log(iterator.next());    // ‚Üí {value: 3, done: false}
console.log(iterator.next());    // ‚Üí {value: undefined, done: true}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above process can be simplified using a generator function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const collection = {
   one: 1,
   two: 2,
   three: 3,
   [Symbol.iterator]: function * () {
     for (let key in this) {
       yield this[key];
     }
   }
 };
 const iterator = collection[Symbol.iterator]();
 console.log(iterator.next());    // {value: 1, done: false}
 console.log(iterator.next());    // {value: 2, done: false}
 console.log(iterator.next());    // {value: 3, done: false}
 console.log(iterator.next());    // {value: undefined, done: true}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is a Proper Tail Call&lt;/h3&gt; &lt;p&gt;First, we should know about tail call before talking about &quot;Proper Tail Call&quot;. A tail call is a subroutine or function call performed as the final action of a calling function. Whereas &lt;strong&gt;Proper tail call(PTC)&lt;/strong&gt; is a technique where the program or code will not create additional stack frames for a recursion when the function call is a tail call.&lt;/p&gt; &lt;p&gt;For example, the below classic or head recursion of factorial function relies on stack for each step. Each step need to be processed upto &lt;code&gt;n * factorial(n - 1)&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function factorial(n) {
  if (n === 0) {
    return 1
  }
  return n * factorial(n - 1)
}
console.log(factorial(5)); //120
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But if you use Tail recursion functions, they keep passing all the necessary data it needs down the recursion without relying on the stack.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function factorial(n, acc = 1) {
  if (n === 0) {
    return acc
  }
  return factorial(n - 1, n * acc)
}
console.log(factorial(5)); //120
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above pattern returns the same output as the first one. But the accumulator keeps track of total as an argument without using stack memory on recursive calls.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you check an object is a promise or not&lt;/h3&gt; &lt;p&gt;If you don&#39;t know if a value is a promise or not, wrapping the value as &lt;code&gt;Promise.resolve(value)&lt;/code&gt; which returns a promise&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;   function isPromise(object){
      if(Promise &amp;amp;&amp;amp; Promise.resolve){
      return Promise.resolve(object) == object;
      }else{
      throw &quot;Promise not supported in your environment&quot;
      }
   }

   var i = 1;
   var promise = new Promise(function(resolve,reject){
      resolve()
   });

   console.log(isPromise(i)); // false
   console.log(isPromise(p)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way is to check for &lt;code&gt;.then()&lt;/code&gt; handler type&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function isPromise(value) {
   return Boolean(value &amp;amp;&amp;amp; typeof value.then === &#39;function&#39;);
}
var i = 1;
var promise = new Promise(function(resolve,reject){
   resolve()
});

console.log(isPromise(i)) // false
console.log(isPromise(promise)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to detect if a function is called as constructor&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;new.target&lt;/code&gt; pseudo-property to detect whether a function was called as a constructor(using the new operator) or as a regular function call.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;If a constructor or function invoked using the new operator, new.target returns a reference to the constructor or function.&lt;/li&gt; 
   &lt;li&gt;For function calls, new.target is undefined.&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Myfunc() {
   if (new.target) {
      console.log(&#39;called with new&#39;);
   } else {
      console.log(&#39;not called with new&#39;);
   }
}

new Myfunc(); // called with new
Myfunc(); // not called with new
Myfunc.call({}); not called with new
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between arguments object and rest parameter&lt;/h3&gt; &lt;p&gt;There are three main differences between arguments object and rest parameters&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The arguments object is an array-like but not an array. Whereas the rest parameters are array instances.&lt;/li&gt; 
   &lt;li&gt;The arguments object does not support methods such as sort, map, forEach, or pop. Whereas these methods can be used in rest parameters.&lt;/li&gt; 
   &lt;li&gt;The rest parameters are only the ones that haven‚Äôt been given a separate name, while the arguments object contains all arguments passed to the function&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between spread operator and rest parameter&lt;/h3&gt; &lt;p&gt;Rest parameter collects all remaining elements into an array. Whereas Spread operator allows iterables( arrays / objects / strings ) to be expanded into single arguments/elements. i.e, Rest parameter is opposite to the spread operator.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different kinds of generators&lt;/h3&gt; &lt;p&gt;There are five kinds of generators,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator function declaration:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; function* myGenFunc() {
      yield 1;
      yield 2;
      yield 3;
 }
 const genObj = myGenFunc();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator function expressions:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myGenFunc = function* () {
       yield 1;
       yield 2;
       yield 3;
};
const genObj = myGenFunc();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator method definitions in object literals:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const myObj = {
     * myGeneratorMethod() {
        yield 1;
        yield 2;
        yield 3;
     }
 };
 const genObj = myObj.myGeneratorMethod();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator method definitions in class:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  class MyClass {
     * myGeneratorMethod() {
        yield 1;
        yield 2;
        yield 3;
     }
  }
  const myObject = new MyClass();
  const genObj = myObject.myGeneratorMethod();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Generator as a computed property:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const SomeObj = {
  *[Symbol.iterator] () {
    yield 1;
    yield 2;
    yield 3;
  }
}

console.log(Array.from(SomeObj)); // [ 1, 2, 3 ]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the built-in iterables&lt;/h3&gt; &lt;p&gt;Below are the list of built-in iterables in javascript,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Arrays and TypedArrays&lt;/li&gt; 
   &lt;li&gt;Strings: Iterate over each character or Unicode code-points&lt;/li&gt; 
   &lt;li&gt;Maps: iterate over its key-value pairs&lt;/li&gt; 
   &lt;li&gt;Sets: iterates over their elements&lt;/li&gt; 
   &lt;li&gt;arguments: An array-like special variable in functions&lt;/li&gt; 
   &lt;li&gt;DOM collection such as NodeList&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between for...of and for...in statements&lt;/h3&gt; &lt;p&gt;Both for...in and for...of statements iterate over js data structures. The only difference is over what they iterate:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;for..in iterates over all enumerable property keys of an object&lt;/li&gt; 
   &lt;li&gt;for..of iterates over the values of an iterable object.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s explain this difference with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let arr = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;];

arr.newProp = &#39;newVlue&#39;;

// key are the property keys
for (let key in arr) {
  console.log(key);
}

// value are the property values
for (let value of arr) {
  console.log(value);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since for..in loop iterates over the keys of the object, the first loop logs 0, 1, 2 and newProp while iterating over the array object. The for..of loop iterates over the values of a arr data structure and logs a, b, c in the console.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you define instance and non-instance properties&lt;/h3&gt; &lt;p&gt;The Instance properties must be defined inside of class methods. For example, name and age properties defined insider constructor as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Person {
  constructor(name, age) {
    this.name = name;
    this.age = age;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But Static(class) and prototype data properties must be defined outside of the ClassBody declaration. Let&#39;s assign the age value for Person class as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Person.staticAge = 30;
Person.prototype.prototypeAge = 40;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between isNaN and Number.isNaN?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;isNaN&lt;/strong&gt;: The global function &lt;code&gt;isNaN&lt;/code&gt; converts the argument to a Number and returns true if the resulting value is NaN.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Number.isNaN&lt;/strong&gt;: This method does not convert the argument. But it returns true when the type is a Number and value is NaN.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Let&#39;s see the difference with an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isNaN(‚Äòhello‚Äô);   // true
Number.isNaN(&#39;hello&#39;); // false
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to invoke an IIFE without any extra brackets?&lt;/h3&gt; &lt;p&gt;Immediately Invoked Function Expressions(IIFE) requires a pair of parenthesis to wrap the function which contains set of statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;(function(dt) { 
   console.log(dt.toLocaleTimeString()); 
 })(new Date()); 
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since both IIFE and void operator discard the result of an expression, you can avoid the extra brackets using &lt;code&gt;void operator&lt;/code&gt; for IIFE as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; void function(dt) { 
   console.log(dt.toLocaleTimeString()); 
 }(new Date()); 
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;**[‚¨Ü Back to Top](#table-of-contents)**
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;422&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is that possible to use expressions in switch cases?&lt;/h3&gt; You might have seen expressions used in switch condition but it is also possible to use for switch cases by assigning true value for the switch condition. Let&#39;s see the weather condition based on temparature as an example, &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const weather = function getWeather(temp) {
   switch(true) {
       case temp &amp;lt; 0: return &#39;freezing&#39;;
       case temp &amp;lt; 10: return &#39;cold&#39;;
       case temp &amp;lt; 24: return &#39;cool&#39;;
       default: return &#39;unknown&#39;;
   }
   }(10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;**[‚¨Ü Back to Top](#table-of-contents)**
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;423&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the easiest way to ignore promise errors?&lt;/h3&gt; &lt;p&gt;The easiest and safest way to ignore promise errors is void that error. This approach is ESLint friendly too.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await promise.catch(e =&amp;gt; void e);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do style the console output using CSS?&lt;/h3&gt; &lt;p&gt;You can add CSS styling to the console output using the CSS format content specifier %c. The console string message can be appended after the specifier and CSS style in another argument. Let&#39;s print the red the color text using console.log and CSS specifier as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;%cThis is a red text&quot;, &quot;color:red&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is also possible to add more styles for the content. For example, the font-size can be modified for the above text&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&quot;%cThis is a red text with bigger font&quot;, &quot;color:red; font-size:20px&quot;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is nullish coalescing operator (??)?&lt;/h3&gt; &lt;p&gt;It is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, and otherwise returns its left-hand side operand. This can be contrasted with the logical OR (||) operator, which returns the right-hand side operand if the left operand is any falsy value, not only null or undefined.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(null ?? true); // true
console.log(false ?? true); // false
console.log(undefined ?? true); // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you group and nest console output?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;console.group()&lt;/code&gt; can be used to group related log messages to be able to easily read the logs and use console.groupEnd()to close the group. Along with this, you can also nest groups which allows to output message in hierarchical manner.&lt;/p&gt; &lt;p&gt;For example, if you‚Äôre logging a user‚Äôs details:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.group(&#39;User Details&#39;);
console.log(&#39;name: Sudheer Jonna&#39;);
console.log(&#39;job: Software Developer&#39;);

// Nested Group
console.group(&#39;Address&#39;);
console.log(&#39;Street: Commonwealth&#39;);
console.log(&#39;City: Los Angeles&#39;);
console.log(&#39;State: California&#39;);

console.groupEnd();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use &lt;code&gt;console.groupCollapsed()&lt;/code&gt; instead of &lt;code&gt;console.group()&lt;/code&gt; if you want the groups to be collapsed by default.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Coding Exercise&lt;/h3&gt; 
&lt;h4&gt;1. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var car = new Vehicle(&quot;Honda&quot;, &quot;white&quot;, &quot;2010&quot;, &quot;UK&quot;);
console.log(car);

function Vehicle(model, color, year, country) {
    this.model = model;
    this.color = color;
    this.year = year;
    this.country = country;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Undefined&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError&lt;/li&gt; 
 &lt;li&gt;3: null&lt;/li&gt; 
 &lt;li&gt;4: {model: &quot;Honda&quot;, color: &quot;white&quot;, year: &quot;2010&quot;, country: &quot;UK&quot;}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The function declarations are hoisted similar to any variables. So the placement for &lt;code&gt;Vehicle&lt;/code&gt; function declaration doesn&#39;t make any difference.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;2. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
    let x = y = 0;
    x++;
    y++;
    return x;
}

console.log(foo(), typeof x, typeof y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, undefined and undefined&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError: X is not defined&lt;/li&gt; 
 &lt;li&gt;3: 1, undefined and number&lt;/li&gt; 
 &lt;li&gt;4: 1, number and number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;Of course the return value of &lt;code&gt;foo()&lt;/code&gt; is 1 due to the increment operator. But the statement &lt;code&gt;let x = y = 0&lt;/code&gt; declares a local variable x. Whereas y declared as a global variable accidentally. This statement is equivalent to,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; let x;
 window.y = 0;
 x = window.y;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Since the block scoped variable x is undefined outside of the function, the type will be undefined too. Whereas the global variable &lt;code&gt;y&lt;/code&gt; is available outside the function, the value is 0 and type is number.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;3. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function main(){
   console.log(&#39;A&#39;);
   setTimeout(
      function print(){ console.log(&#39;B&#39;); }
   ,0);
   console.log(&#39;C&#39;);
}
main();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: A, B and C&lt;/li&gt; 
 &lt;li&gt;2: B, A and C&lt;/li&gt; 
 &lt;li&gt;3: A and C&lt;/li&gt; 
 &lt;li&gt;4: A, C and B&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The statements order is based on the event loop mechanism. The order of statements follows the below order,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;At first, the main function is pushed to the stack.&lt;/li&gt; 
  &lt;li&gt;Then the browser pushes the fist statement of the main function( i.e, A&#39;s console.log) to the stack, executing and popping out immediately.&lt;/li&gt; 
  &lt;li&gt;But &lt;code&gt;setTimeout&lt;/code&gt; statement moved to Browser API to apply the delay for callback.&lt;/li&gt; 
  &lt;li&gt;In the meantime, C&#39;s console.log added to stack, executed and popped out.&lt;/li&gt; 
  &lt;li&gt;The callback of &lt;code&gt;setTimeout&lt;/code&gt; moved from Browser API to message queue.&lt;/li&gt; 
  &lt;li&gt;The &lt;code&gt;main&lt;/code&gt; function popped out from stack because there are no statements to execute&lt;/li&gt; 
  &lt;li&gt;The callback moved from message queue to the stack since the stack is empty.&lt;/li&gt; 
  &lt;li&gt;The console.log for B is added to the stack and display on the console.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;4. What is the output of below equality check&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(0.1 + 0.2 === 0.3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: false&lt;/li&gt; 
 &lt;li&gt;2: true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;This is due to the float point math problem. Since the floating point numbers are encoded in binary format, the addition operations on them lead to rounding errors. Hence, the comparison of floating points doesn&#39;t give expected results. You can find more details about the explanation here &lt;a href=&quot;https://0.30000000000000004.com/&quot;&gt;0.30000000000000004.com/&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;5. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var y = 1;
  if (function f(){}) {
    y += typeof f;
  }
  console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1function&lt;/li&gt; 
 &lt;li&gt;2: 1object&lt;/li&gt; 
 &lt;li&gt;3: ReferenceError&lt;/li&gt; 
 &lt;li&gt;4: 1undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The main points in the above code snippets are,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;You can see function expression instead function declaration inside if statement. So it always returns true.&lt;/li&gt; 
  &lt;li&gt;Since it is not declared(or assigned) anywhere, f is undefined and typeof f is undefined too.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;In other words, it is same as&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var y = 1;
  if (&#39;foo&#39;) {
    y += typeof f;
  }
  console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It returns 1object for MS Edge browser&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;6. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return
  {
    message: &quot;Hello World&quot;
  };
}
console.log(foo());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Hello World&lt;/li&gt; 
 &lt;li&gt;2: Object {message: &quot;Hello World&quot;}&lt;/li&gt; 
 &lt;li&gt;3: Undefined&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;This is a semicolon issue. Normally semicolons are optional in JavaScript. So if there are any statements(in this case, return) missing semicolon, it is automatically inserted immediately. Hence, the function returned as undefined.&lt;/p&gt; 
 &lt;p&gt;Whereas if the opening curly brace is along with the return keyword then the function is going to be returned as expected.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return {
    message: &quot;Hello World&quot;
  };
}
console.log(foo()); // {message: &quot;Hello World&quot;}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;7. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var myChars = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]
delete myChars[0];
console.log(myChars);
console.log(myChars[0]);
console.log(myChars.length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [empty, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], empty, 3&lt;/li&gt; 
 &lt;li&gt;2: [null, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], empty, 3&lt;/li&gt; 
 &lt;li&gt;3: [empty, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], undefined, 4&lt;/li&gt; 
 &lt;li&gt;4: [null, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;], undefined, 4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;The &lt;code&gt;delete&lt;/code&gt; operator will delete the object property but it will not reindex the array or change its length. So the number or elements or length of the array won&#39;t be changed. If you try to print myChars then you can observe that it doesn&#39;t set an undefined value, rather the property is removed from the array. The newer versions of Chrome use &lt;code&gt;empty&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt; to make the difference a bit clearer.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;8. What is the output of below code in latest Chrome&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var array1 = new Array(3);
console.log(array1);

var array2 = [];
array2[2] = 100;
console.log(array2);

var array3 = [,,,];
console.log(array3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [undefined √ó 3], [undefined √ó 2, 100], [undefined √ó 3]&lt;/li&gt; 
 &lt;li&gt;2: [empty √ó 3], [empty √ó 2, 100], [empty √ó 3]&lt;/li&gt; 
 &lt;li&gt;3: [null √ó 3], [null √ó 2, 100], [null √ó 3]&lt;/li&gt; 
 &lt;li&gt;4: [], [100], []&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;The latest chrome versions display &lt;code&gt;sparse array&lt;/code&gt;(they are filled with holes) using this empty x n notation. Whereas the older versions have undefined x n notation. &lt;strong&gt;Note:&lt;/strong&gt; The latest version of FF displays &lt;code&gt;n empty slots&lt;/code&gt; notation.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;9. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {
  prop1: function() { return 0 },
  prop2() { return 1 },
  [&#39;prop&#39; + 3]() { return 2 }
}

console.log(obj.prop1());
console.log(obj.prop2());
console.log(obj.prop3());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 0, 1, 2&lt;/li&gt; 
 &lt;li&gt;2: 0, { return 1 }, 2&lt;/li&gt; 
 &lt;li&gt;3: 0, { return 1 }, { return 2 }&lt;/li&gt; 
 &lt;li&gt;4: 0, 1, undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;ES6 provides method definitions and property shorthands for objects. So both prop2 and prop3 are treated as regular function values.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;10. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(1 &amp;lt; 2 &amp;lt; 3);
console.log(3 &amp;gt; 2 &amp;gt; 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: true, true&lt;/li&gt; 
 &lt;li&gt;2: true, false&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError, SyntaxError,&lt;/li&gt; 
 &lt;li&gt;4: false, false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;The important point is that if the statement contains the same operators(e.g, &amp;lt; or &amp;gt;) then it can be evaluated from left to right. The first statement follows the below order,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;console.log(1 &amp;lt; 2 &amp;lt; 3);&lt;/li&gt; 
  &lt;li&gt;console.log(true &amp;lt; 3);&lt;/li&gt; 
  &lt;li&gt;console.log(1 &amp;lt; 3); // True converted as &lt;code&gt;1&lt;/code&gt; during comparison&lt;/li&gt; 
  &lt;li&gt;True&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Whereas the second statement follows the below order,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;console.log(3 &amp;gt; 2 &amp;gt; 1);&lt;/li&gt; 
  &lt;li&gt;console.log(true &amp;gt; 1);&lt;/li&gt; 
  &lt;li&gt;console.log(1 &amp;gt; 1); // False converted as &lt;code&gt;0&lt;/code&gt; during comparison&lt;/li&gt; 
  &lt;li&gt;False&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;11. What is the output of below code in non-strict mode&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function printNumbers(first, second, first) {
  console.log(first, second, first);
}
printNumbers(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, 2, 3&lt;/li&gt; 
 &lt;li&gt;2: 3, 2, 3&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError: Duplicate parameter name not allowed in this context&lt;/li&gt; 
 &lt;li&gt;4: 1, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;In non-strict mode, the regular JavaScript functions allow duplicate named parameters. The above code snippet has duplicate parameters on 1st and 3rd parameters. The value of the first parameter is mapped to the third argument which is passed to the function. Hence, the 3rd argument overrides the first parameter.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In strict mode, duplicate parameters will throw a Syntax Error.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;12. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const printNumbersArrow = (first, second, first) =&amp;gt; {
  console.log(first, second, first);
}
printNumbersArrow(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, 2, 3&lt;/li&gt; 
 &lt;li&gt;2: 3, 2, 3&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError: Duplicate parameter name not allowed in this context&lt;/li&gt; 
 &lt;li&gt;4: 1, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;Unlike regular functions, the arrow functions doesn&#39;t not allow duplicate parameters in either strict or non-strict mode. So you can see &lt;code&gt;SyntaxError&lt;/code&gt; in the console.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;13. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrowFunc = () =&amp;gt; arguments.length;
console.log(arrowFunc(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: ReferenceError: arguments is not defined&lt;/li&gt; 
 &lt;li&gt;2: 3&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: null&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Arrow functions do not have an &lt;code&gt;arguments, super, this, or new.target&lt;/code&gt; bindings. So any reference to &lt;code&gt;arguments&lt;/code&gt; variable tries to resolve to a binding in a lexically enclosing environment. In this case, the arguments variable is not defined outside of the arrow function. Hence, you will receive a reference error.&lt;/p&gt; 
 &lt;p&gt;Where as the normal function provides the number of arguments passed to the function&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const func = function () {
                    return arguments.length;
                    }
console.log(func(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;But If you still want to use an arrow function then rest operator on arguments provides the expected arguments&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrowFunc = (...args) =&amp;gt; args.length;
console.log(arrowFunc(1, 2, 3));
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;14. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log( String.prototype.trimLeft.name === &#39;trimLeft&#39; );
console.log( String.prototype.trimLeft.name === &#39;trimStart&#39; );
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, False&lt;/li&gt; 
 &lt;li&gt;2: False, True&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;In order to be consistent with functions like &lt;code&gt;String.prototype.padStart&lt;/code&gt;, the standard method name for trimming the whitespaces is considered as &lt;code&gt;trimStart&lt;/code&gt;. Due to web web compatibility reasons, the old method name &#39;trimLeft&#39; still acts as an alias for &#39;trimStart&#39;. Hence, the prototype for &#39;trimLeft&#39; is always &#39;trimStart&#39;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;15. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(Math.max());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: undefined&lt;/li&gt; 
 &lt;li&gt;2: Infinity&lt;/li&gt; 
 &lt;li&gt;3: 0&lt;/li&gt; 
 &lt;li&gt;4: -Infinity&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;-Infinity is the initial comparant because almost every other value is bigger. So when no arguments are provided, -Infinity is going to be returned. &lt;strong&gt;Note:&lt;/strong&gt; Zero number of arguments is a valid case.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;16. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(10 == [10]);
console.log(10 == [[[[[[[10]]]]]]]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, True&lt;/li&gt; 
 &lt;li&gt;2: True, False&lt;/li&gt; 
 &lt;li&gt;3: False, False&lt;/li&gt; 
 &lt;li&gt;4: False, True&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;As per the comparison algorithm in the ECMAScript specification(ECMA-262), the above expression converted into JS as below&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;10 === Number([10].valueOf().toString()) // 10
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;So it doesn&#39;t matter about number brackets([]) around the number, it is always converted to a number in the expression.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;17. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(10 + &#39;10&#39;);
console.log(10 - &#39;10&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 20, 0&lt;/li&gt; 
 &lt;li&gt;2: 1010, 0&lt;/li&gt; 
 &lt;li&gt;3: 1010, 10-10&lt;/li&gt; 
 &lt;li&gt;4: NaN, NaN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;The concatenation operator(+) is applicable for both number and string types. So if any operand is string type then both operands concatenated as strings. Whereas subtract(-) operator tries to convert the operands as number type.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;18. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([0] == false);
if([0]) {
console.log(&quot;I&#39;m True&quot;);
} else {
console.log(&quot;I&#39;m False&quot;);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True, I&#39;m True&lt;/li&gt; 
 &lt;li&gt;2: True, I&#39;m False&lt;/li&gt; 
 &lt;li&gt;3: False, I&#39;m True&lt;/li&gt; 
 &lt;li&gt;4: False, I&#39;m False&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;In comparison operators, the expression &lt;code&gt;[0]&lt;/code&gt; converted to Number([0].valueOf().toString()) which is resolved to false. Whereas &lt;code&gt;[0]&lt;/code&gt; just becomes a truthy value without any conversion because there is no comparison operator.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;19. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log([1, 2] + [3, 4]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [1,2,3,4]&lt;/li&gt; 
 &lt;li&gt;2: [1,2][3,4]&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: 1,23,4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The + operator is not meant or defined for arrays. So it converts arrays into strings and concatenates them.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;20. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = new Set([1, 1, 2, 3, 4]);
console.log(numbers);

const browser = new Set(&#39;Firefox&#39;);
console.log(browser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: {1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;f&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
 &lt;li&gt;2: {1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
 &lt;li&gt;3: [1, 2, 3, 4], [&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;o&quot;, &quot;x&quot;]&lt;/li&gt; 
 &lt;li&gt;4: {1, 1, 2, 3, 4}, {&quot;F&quot;, &quot;i&quot;, &quot;r&quot;, &quot;e&quot;, &quot;f&quot;, &quot;o&quot;, &quot;x&quot;}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Since &lt;code&gt;Set&lt;/code&gt; object is a collection of unique values, it won&#39;t allow duplicate values in the collection. At the same time, it is case sensitive data structure.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;21. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(NaN === NaN);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: True&lt;/li&gt; 
 &lt;li&gt;2: False&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;JavaScript follows IEEE 754 spec standards. As per this spec, NaNs are never equal for floating-point numbers.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;22. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 3, 4, NaN];
console.log(numbers.indexOf(NaN));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 4&lt;/li&gt; 
 &lt;li&gt;2: NaN&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: -1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The &lt;code&gt;indexOf&lt;/code&gt; uses strict equality operator(===) internally and &lt;code&gt;NaN === NaN&lt;/code&gt; evaluates to false. Since indexOf won&#39;t be able to find NaN inside an array, it returns -1 always. But you can use &lt;code&gt;Array.prototype.findIndex&lt;/code&gt; method to find out the index of NaN in an array or You can use &lt;code&gt;Array.prototype.includes&lt;/code&gt; to check if NaN is present in an array or not.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let numbers = [1, 2, 3, 4, NaN];
console.log(numbers.findIndex(Number.isNaN)); // 4

console.log(numbers.includes(NaN)); // true
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;23. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let [a, ...b,] = [1, 2, 3, 4, 5];
console.log(a, b);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, [2, 3, 4, 5]&lt;/li&gt; 
 &lt;li&gt;2: 1, {2, 3, 4, 5}&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: 1, [2, 3, 4]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;When using rest parameters, trailing commas are not allowed and will throw a SyntaxError. If you remove the trailing comma then it displays 1st answer&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let [a, ...b] = [1, 2, 3, 4, 5];
console.log(a, b); // 1, [2, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;25. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function func() {
   return 10;
}
console.log(func());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Promise {&amp;lt;fulfilled&amp;gt;: 10}&lt;/li&gt; 
 &lt;li&gt;2: 10&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Promise {&amp;lt;rejected&amp;gt;: 10}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Async functions always return a promise. But even if the return value of an async function is not explicitly a promise, it will be implicitly wrapped in a promise. The above async function is equivalent to below expression,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func() {
   return Promise.resolve(10)
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;26. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function func() {
   await 10;
}
console.log(func());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Promise {&amp;lt;fulfilled&amp;gt;: 10}&lt;/li&gt; 
 &lt;li&gt;2: 10&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Promise {&amp;lt;resolved&amp;gt;: undefined}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The await expression returns value 10 with promise resolution and the code after each await expression can be treated as existing in a &lt;code&gt;.then&lt;/code&gt; callback. In this case, there is no return expression at the end of the function. Hence, the default return value of &lt;code&gt;undefined&lt;/code&gt; is returned as the resolution of the promise. The above async function is equivalent to below expression,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function func() {
   return Promise.resolve(10).then(() =&amp;gt; undefined)
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;27. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function delay() {
  return new Promise(resolve =&amp;gt; setTimeout(resolve, 2000));
}

async function delayedLog(item) {
  await delay();
  console.log(item);
}

async function processArray(array) {
  array.forEach(item =&amp;gt; {
    await delayedLog(item);
  })
}

processArray([1, 2, 3, 4]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: 1, 2, 3, 4&lt;/li&gt; 
 &lt;li&gt;3: 4, 4, 4, 4&lt;/li&gt; 
 &lt;li&gt;4: 4, 3, 2, 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Even though ‚ÄúprocessArray‚Äù is an async function, the anonymous function that we use for &lt;code&gt;forEach&lt;/code&gt; is synchronous. If you use await inside a synchronous function then it throws a syntax error.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;28. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function delay() {
  return new Promise(resolve =&amp;gt; setTimeout(resolve, 2000));
}

async function delayedLog(item) {
  await delay();
  console.log(item);
}

async function process(array) {
  array.forEach(async (item) =&amp;gt; {
    await delayedLog(item);
  });
  console.log(&#39;Process completed!&#39;);
}
process([1, 2, 3, 5]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1 2 3 5 and Process completed!&lt;/li&gt; 
 &lt;li&gt;2: 5 5 5 5 and Process completed!&lt;/li&gt; 
 &lt;li&gt;3: Process completed! and 5 5 5 5&lt;/li&gt; 
 &lt;li&gt;4: Process completed! and 1 2 3 5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The forEach method will not wait until all items are finished but it just runs the tasks and goes next. Hence, the last statement is displayed first followed by a sequence of promise resolutions.&lt;/p&gt; 
 &lt;p&gt;But you control the array sequence using for..of loop,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;async function processArray(array) {
  for (const item of array) {
    await delayedLog(item);
  }
  console.log(&#39;Process completed!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;29. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var set = new Set();
set.add(&quot;+0&quot;).add(&quot;-0&quot;).add(NaN).add(undefined).add(NaN);;
console.log(set);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Set(4) {&quot;+0&quot;, &quot;-0&quot;, NaN, undefined}&lt;/li&gt; 
 &lt;li&gt;2: Set(3) {&quot;+0&quot;, NaN, undefined}&lt;/li&gt; 
 &lt;li&gt;3: Set(5) {&quot;+0&quot;, &quot;-0&quot;, NaN, undefined, NaN}&lt;/li&gt; 
 &lt;li&gt;4: Set(4) {&quot;+0&quot;, NaN, undefined, NaN}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;Set has few exceptions from equality check,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;All NaN values are equal&lt;/li&gt; 
  &lt;li&gt;Both +0 and -0 considered as different values&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;30. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sym1 = Symbol(&#39;one&#39;);
const sym2 = Symbol(&#39;one&#39;);

const sym3 = Symbol.for(&#39;two&#39;);
const sym4 = Symbol.for(&#39;two&#39;);

cnsooe.log(sym1 === sym2, sym3 === sym4);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: true, true&lt;/li&gt; 
 &lt;li&gt;2: true, false&lt;/li&gt; 
 &lt;li&gt;3: false, true&lt;/li&gt; 
 &lt;li&gt;4: false, false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;Symbol follows below conventions,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Every symbol value returned from Symbol() is unique irrespective of the optional string.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;Symbol.for()&lt;/code&gt; function creates a symbol in a global symbol registry list. But it doesn&#39;t necessarily create a new symbol on every call, it checks first if a symbol with the given key is already present in the registry and returns the symbol if it is found. Otherwise a new symbol created in the registry.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The symbol description is just useful for debugging purposes.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;31. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sym1 = new Symbol(&#39;one&#39;);
console.log(sym1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: one&lt;/li&gt; 
 &lt;li&gt;3: Symbol(&#39;one&#39;)&lt;/li&gt; 
 &lt;li&gt;4: Symbol&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;&lt;code&gt;Symbol&lt;/code&gt; is a just a standard function and not an object constructor(unlike other primitives new Boolean, new String and new Number). So if you try to call it with the new operator will result in a TypeError&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;32. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let myNumber = 100;
let myString = &#39;100&#39;;

if (!typeof myNumber === &quot;string&quot;) {
   console.log(&quot;It is not a string!&quot;);
} else {
    console.log(&quot;It is a string!&quot;);
}

if (!typeof myString === &quot;number&quot;){
   console.log(&quot;It is not a number!&quot;)
} else {
   console.log(&quot;It is a number!&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: It is not a string!, It is not a number!&lt;/li&gt; 
 &lt;li&gt;3: It is not a string!, It is a number!&lt;/li&gt; 
 &lt;li&gt;4: It is a string!, It is a number!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The return value of &lt;code&gt;typeof myNumber (OR) typeof myString&lt;/code&gt; is always the truthy value (either &quot;number&quot; or &quot;string&quot;). Since ! operator converts the value to a boolean value, the value of both &lt;code&gt;!typeof myNumber or !typeof myString&lt;/code&gt; is always false. Hence the if condition fails and control goes to else block.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;33. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(JSON.stringify({ myArray: [&#39;one&#39;, undefined, function(){}, Symbol(&#39;&#39;)] }));
console.log(JSON.stringify({ [Symbol.for(&#39;one&#39;)]: &#39;one&#39; }, [Symbol.for(&#39;one&#39;)]));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: {&quot;myArray&quot;:[&#39;one&#39;, undefined, {}, Symbol]}, {}&lt;/li&gt; 
 &lt;li&gt;2: {&quot;myArray&quot;:[&#39;one&#39;, null,null,null]}, {}&lt;/li&gt; 
 &lt;li&gt;3: {&quot;myArray&quot;:[&#39;one&#39;, null,null,null]}, &quot;{ [Symbol.for(&#39;one&#39;)]: &#39;one&#39; }, [Symbol.for(&#39;one&#39;)]&quot;&lt;/li&gt; 
 &lt;li&gt;4: {&quot;myArray&quot;:[&#39;one&#39;, undefined, function(){}, Symbol(&#39;&#39;)]}, {}&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;The symbols has below constraints,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;The undefined, Functions, and Symbols are not valid JSON values. So those values are either omitted (in an object) or changed to null (in an array). Hence, it returns null values for the value array.&lt;/li&gt; 
  &lt;li&gt;All Symbol-keyed properties will be completely ignored. Hence it returns an empty object({}).&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;34. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class A {
  constructor() {
    console.log(new.target.name)
  }
}

class B extends A { constructor() { super() } }

new A();
new B();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: A, A&lt;/li&gt; 
 &lt;li&gt;2: A, B&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Using constructors, &lt;code&gt;new.target&lt;/code&gt; refers to the constructor (points to the class definition of class which is initialized) that was directly invoked by new. This also applies to the case if the constructor is in a parent class and was delegated from a child constructor.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;35. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const [x, ...y,] = [1, 2, 3, 4];
console.log(x, y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1, [2, 3, 4]&lt;/li&gt; 
 &lt;li&gt;2: 1, [2, 3]&lt;/li&gt; 
 &lt;li&gt;3: 1, [2]&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;It throws a syntax error because the rest element should not have a trailing comma. You should always consider using a rest operator as the last element.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;36. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const {a: x = 10, b: y = 20} = {a: 30};

console.log(x);
console.log(y);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 30, 20&lt;/li&gt; 
 &lt;li&gt;2: 10, 20&lt;/li&gt; 
 &lt;li&gt;3: 10, undefined&lt;/li&gt; 
 &lt;li&gt;4: 30, undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;The object property follows below rules,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;The object properties can be retrieved and assigned to a variable with a different name&lt;/li&gt; 
  &lt;li&gt;The property assigned a default value when the retrieved value is &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;37. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20}) {
  console.log(length*width);
}

area();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 200&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: 0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;If you leave out the right-hand side assignment for the destructuring object, the function will look for at least one argument to be supplied when invoked. Otherwise you will receive an error &lt;code&gt;Error: Cannot read property &#39;length&#39; of undefined&lt;/code&gt; as mentioned above.&lt;/p&gt; 
 &lt;p&gt;You can avoid the error with either of the below changes,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;Pass at least an empty object:&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20}) {
  console.log(length*width);
}

area({});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start=&quot;2&quot;&gt; 
  &lt;li&gt;&lt;strong&gt;Assign default empty object:&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function area({length = 10, width = 20} = {}) {
  console.log(length*width);
}

area();
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;38. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const props = [
  { id: 1, name: &#39;John&#39;},
  { id: 2, name: &#39;Jack&#39;},
  { id: 3, name: &#39;Tom&#39;}
];

const [,, { name }] = props;
console.log(name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: Tom&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: undefined&lt;/li&gt; 
 &lt;li&gt;4: John&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;It is possible to combine Array and Object destructuring. In this case, the third element in the array props accessed first followed by name property in the object.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;39. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function checkType(num = 1) {
  console.log(typeof num);
}

checkType();
checkType(undefined);
checkType(&#39;&#39;);
checkType(null);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: number, undefined, string, object&lt;/li&gt; 
 &lt;li&gt;2: undefined, undefined, string, object&lt;/li&gt; 
 &lt;li&gt;3: number, number, string, object&lt;/li&gt; 
 &lt;li&gt;4: number, number, number, number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;If the function argument is set implicitly(not passing argument) or explicitly to undefined, the value of the argument is the default parameter. Whereas for other falsy values(&#39;&#39; or null), the value of the argument is passed as a parameter.&lt;/p&gt; 
 &lt;p&gt;Hence, the result of function calls categorized as below,&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;The first two function calls logs number type since the type of default value is number&lt;/li&gt; 
  &lt;li&gt;The type of &#39;&#39; and null values are string and object type respectively.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;40. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function add(item, items = []) {
  items.push(item);
  return items;
}

console.log(add(&#39;Orange&#39;));
console.log(add(&#39;Apple&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [&#39;Orange&#39;], [&#39;Orange&#39;, &#39;Apple&#39;]&lt;/li&gt; 
 &lt;li&gt;2: [&#39;Orange&#39;], [&#39;Apple&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Since the default argument is evaluated at call time, a new object is created each time the function is called. So in this case, the new array is created and an element pushed to the default empty array.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;41. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function greet(greeting, name, message = greeting + &#39; &#39; + name) {
  console.log([greeting, name, message]);
}

greet(&#39;Hello&#39;, &#39;John&#39;);
greet(&#39;Hello&#39;, &#39;John&#39;, &#39;Good morning!&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: [&#39;Hello&#39;, &#39;John&#39;, &#39;Hello John&#39;], [&#39;Hello&#39;, &#39;John&#39;, &#39;Good morning!&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Since parameters defined earlier are available to later default parameters, this code snippet doesn&#39;t throw any error.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;42. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function outer(f = inner()) {
  function inner() { return &#39;Inner&#39; }
}
outer();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: ReferenceError&lt;/li&gt; 
 &lt;li&gt;2: Inner&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;The functions and variables declared in the function body cannot be referred from default value parameter initializers. If you still try to access, it throws a run-time ReferenceError(i.e, &lt;code&gt;inner&lt;/code&gt; is not defined).&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;43. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function myFun(x, y, ...manyMoreArgs) {
  console.log(manyMoreArgs)
}

myFun(1, 2, 3, 4, 5);
myFun(1, 2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [3, 4, 5], undefined&lt;/li&gt; 
 &lt;li&gt;2: SyntaxError&lt;/li&gt; 
 &lt;li&gt;3: [3, 4, 5], []&lt;/li&gt; 
 &lt;li&gt;4: [3, 4, 5], [undefined]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;The rest parameter is used to hold the remaining parameters of a function and it becomes an empty array if the argument is not provided.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;44. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const obj = {&#39;key&#39;: &#39;value&#39;};
const array = [...obj];
console.log(array);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: [&#39;key&#39;, &#39;value&#39;]&lt;/li&gt; 
 &lt;li&gt;2: TypeError&lt;/li&gt; 
 &lt;li&gt;3: []&lt;/li&gt; 
 &lt;li&gt;4: [&#39;key&#39;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Spread syntax can be applied only to iterable objects. By default, Objects are not iterable, but they become iterable when used in an Array, or with iterating functions such as &lt;code&gt;map(), reduce(), and assign()&lt;/code&gt;. If you still try to do it, it still throws &lt;code&gt;TypeError: obj is not iterable&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;45. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* myGenFunc() {
    yield 1;
    yield 2;
    yield 3;
}
var myGenObj = new myGenFunc;
console.log(myGenObj.next().value);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1&lt;/li&gt; 
 &lt;li&gt;2: undefined&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: TypeError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;Generators are not constructible type. But if you still proceed to do, there will be an error saying &quot;TypeError: myGenFunc is not a constructor&quot;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;46. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function* yieldAndReturn() {
  yield 1;
  return 2;
  yield 3;
}

var myGenObj = yieldAndReturn()
console.log(myGenObj.next());
console.log(myGenObj.next());
console.log(myGenObj.next());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: { value: 1, done: false }, { value: 2, done: true }, { value: undefined, done: true }&lt;/li&gt; 
 &lt;li&gt;2: { value: 1, done: false }, { value: 2, done: false }, { value: undefined, done: true }&lt;/li&gt; 
 &lt;li&gt;3: { value: 1, done: false }, { value: 2, done: true }, { value: 3, done: true }&lt;/li&gt; 
 &lt;li&gt;4: { value: 1, done: false }, { value: 2, done: false }, { value: 3, done: true }&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;A return statement in a generator function will make the generator finish. If a value is returned, it will be set as the value property of the object and done property to true. When a generator is finished, subsequent next() calls return an object of this form: &lt;code&gt;{value: undefined, done: true}&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;47. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const myGenerator = (function *(){
  yield 1;
  yield 2;
  yield 3;
})();
for (const value of myGenerator) {
  console.log(value);
  break;
}

for (const value of myGenerator) {
  console.log(value);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 1,2,3 and 1,2,3&lt;/li&gt; 
 &lt;li&gt;2: 1,2,3 and 4,5,6&lt;/li&gt; 
 &lt;li&gt;3: 1 and 1&lt;/li&gt; 
 &lt;li&gt;4: 1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;The generator should not be re-used once the iterator is closed. i.e, Upon exiting a loop(on completion or using break &amp;amp; return), the generator is closed and trying to iterate over it again does not yield any more results. Hence, the second loop doesn&#39;t print any value.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;48. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const num = 0o38;
console.log(num);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: 38&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;If you use an invalid number(outside of 0-7 range) in the octal literal, JavaScript will throw a SyntaxError. In ES5, it treats the octal literal as a decimal number.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;49. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const squareObj = new Square(10);
console.log(squareObj.area);

class Square {
  constructor(length) {
    this.length = length;
  }

  get area() {
    return this.length * this.length;
  }

  set area(value) {
    this.area = value;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 100&lt;/li&gt; 
 &lt;li&gt;2: ReferenceError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Unlike function declarations, class declarations are not hoisted. i.e, First You need to declare your class and then access it, otherwise it will throw a ReferenceError &quot;Uncaught ReferenceError: Square is not defined&quot;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Class expressions also applies to the same hoisting restrictions of class declarations.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;50. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Person() { }

Person.prototype.walk = function() {
  return this;
}

Person.run = function() {
  return this;
}

let user = new Person();
let walk = user.walk;
console.log(walk());

let run = Person.run;
console.log(run());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: undefined, undefined&lt;/li&gt; 
 &lt;li&gt;2: Person, Person&lt;/li&gt; 
 &lt;li&gt;3: SyntaxError&lt;/li&gt; 
 &lt;li&gt;4: Window, Window&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;When a regular or prototype method is called without a value for &lt;strong&gt;this&lt;/strong&gt;, the methods return an initial this value if the value is not undefined. Otherwise global window object will be returned. In our case, the initial &lt;code&gt;this&lt;/code&gt; value is undefined so both methods return window objects.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;51. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Vehicle {
  constructor(name) {
    this.name = name;
  }

  start() {
    console.log(`${this.name} vehicle started`);
  }
}

class Car extends Vehicle {
  start() {
    console.log(`${this.name} car started`);
    super.start();
  }
}

const car = new Car(&#39;BMW&#39;);
console.log(car.start());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: SyntaxError&lt;/li&gt; 
 &lt;li&gt;2: BMW vehicle started, BMW car started&lt;/li&gt; 
 &lt;li&gt;3: BMW car started, BMW vehicle started&lt;/li&gt; 
 &lt;li&gt;4: BMW car started, BMW car started&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 3&lt;/h5&gt; 
 &lt;p&gt;The super keyword is used to call methods of a superclass. Unlike other languages the super invocation doesn&#39;t need to be a first statement. i.e, The statements will be executed in the same order of code.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;52. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const USER = {&#39;age&#39;: 30};
USER.age = 25;
console.log(USER.age);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 30&lt;/li&gt; 
 &lt;li&gt;2: 25&lt;/li&gt; 
 &lt;li&gt;3: Uncaught TypeError&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Even though we used constant variables, the content of it is an object and the object&#39;s contents (e.g properties) can be altered. Hence, the change is going to be valid in this case.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;53. What is the output of below code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&#39;üôÇ&#39; === &#39;üôÇ&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: false&lt;/li&gt; 
 &lt;li&gt;2: true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 2&lt;/h5&gt; 
 &lt;p&gt;Emojis are unicodes and the unicode for smile symbol is &quot;U+1F642&quot;. The unicode comparision of same emojies is equivalent to string comparison. Hence, the output is always true.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;54. What is the output of below code?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(typeof typeof typeof true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: string&lt;/li&gt; 
 &lt;li&gt;2: boolean&lt;/li&gt; 
 &lt;li&gt;3: NaN&lt;/li&gt; 
 &lt;li&gt;4: number&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;The typeof operator on any primitive returns a string value. So even if you apply the chain of typeof operators on the return value, it is always string.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;55. What is the output of below code?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let zero = new Number(0);

if (zero) {
  console.log(&quot;If&quot;);
} else {
  console.log(&quot;Else&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: If&lt;/li&gt; 
 &lt;li&gt;2: Else&lt;/li&gt; 
 &lt;li&gt;3: NaN&lt;/li&gt; 
 &lt;li&gt;4: SyntaxError&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;ol&gt; 
  &lt;li&gt;The type of operator on new Number always returns object. i.e, typeof new Number(0) --&amp;gt; object.&lt;/li&gt; 
  &lt;li&gt;Objects are always truthy in if block&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Hence the above code block always goes to if section.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;55. What is the output of below code in non strict mode?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let msg = &quot;Good morning!!&quot;;

msg.name = &quot;John&quot;; 

console.log(msg.name);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: &quot;&quot;&lt;/li&gt; 
 &lt;li&gt;2: Error&lt;/li&gt; 
 &lt;li&gt;3: John&lt;/li&gt; 
 &lt;li&gt;4: Undefined&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 4&lt;/h5&gt; 
 &lt;p&gt;It returns undefined for non-strict mode and returns Error for strict mode. In non-strict mode, the wrapper object is going to be created and get the mentioned property. But the object get disappeared after accessing the property in next line.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;56. What is the output of below code?&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let count = 10;

(function innerFunc() {
    if (count === 10) {
        let count = 11;
        console.log(count);
    }
    console.log(count);
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 11, 10&lt;/li&gt; 
 &lt;li&gt;2: 11, 11&lt;/li&gt; 
 &lt;li&gt;3: 10, 11&lt;/li&gt; 
 &lt;li&gt;4: 10, 10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Answer&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;h5&gt;Answer: 1&lt;/h5&gt; 
 &lt;p&gt;11 and 10 is logged to the console.&lt;/p&gt; 
 &lt;p&gt;The innerFunc is a closure which captures the count variable from the outerscope. i.e, 10. But the conditional has another local variable &lt;code&gt;count&lt;/code&gt; which overwrites the ourter &lt;code&gt;count&lt;/code&gt; variable. So the first console.log displays value 11. Whereas the second console.log logs 10 by capturing the count variable from outerscope.&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/javascript-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;The questions provided in this repository are the summary of frequently asked questions across numerous companies. We cannot guarantee that these questions will actually be asked during your interview process, nor should you focus on memorizing all of them. The primary purpose is for you to get a sense of what some companies might ask ‚Äî do not get discouraged if you don&#39;t know the answer to all of them ‚Å†‚Äî that is ok!&lt;/p&gt; 
&lt;p&gt;Good luck with your interview üòä&lt;/p&gt; 
&lt;hr&gt;</description>
    </item>
    
  </channel>
</rss>
