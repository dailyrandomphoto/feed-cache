<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 14 Feb 2021 01:32:42 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player which supports M3U-playlists. You can also use the SFW version of the playlist &lt;code&gt;https://iptv-org.github.io/iptv/index.sfw.m3u&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.readme/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h2&gt;Playlists by category&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Playlists by language&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Playlists by country&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;languages&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;countries&quot;: [
      {
        &quot;code&quot;: &quot;us&quot;,
        &quot;name&quot;: &quot;United States&quot;
      },
      {
        &quot;code&quot;: &quot;ca&quot;,
        &quot;name&quot;: &quot;Canada&quot;
      }
    ],
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue.&lt;/p&gt; 
&lt;p&gt;However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that&#39;s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>reactend/reactend-express</title>
      <link>https://github.com/reactend/reactend-express</link>
      <description>&lt;p&gt;React renderer to build Node.js server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Reactend / Express&lt;/h1&gt; 
&lt;p&gt;React-like http-server on Nodejs
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;🕹 &lt;a href=&quot;https://repl.it/@orkhanjafarov/reactend-playground?v=1&quot;&gt;Playground on repl.it&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;📄 &lt;a href=&quot;https://github.com/gigantz/reactend-template&quot;&gt;Reactend Template&lt;/a&gt;&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/reactend/reactend-express/master/logo.svg?sanitize=true&quot; alt=&quot;Planet Express&quot;&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;What&#39;s that?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js http-server based on React-Components&lt;/li&gt; 
 &lt;li&gt;Express.js inside&lt;/li&gt; 
 &lt;li&gt;Get, Post, Delete and etc. components to use router method&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Get(render)&lt;/code&gt; and &lt;code&gt;Res.Render&lt;/code&gt; to render your regular React DOM Components&lt;/li&gt; 
 &lt;li&gt;useContext(ReqResContext) hook to access &lt;code&gt;req, res&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Support &lt;code&gt;styled-components&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Built-in logger (morgan)&lt;/li&gt; 
 &lt;li&gt;Middleware component in Router and its Routes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;handler&lt;/code&gt; prop in Route components to use as regular controller&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;and many many features that should be documented...&lt;/em&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;Run this to create reactend project on your local machine&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx create-reactend my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Code Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;
import { resolve } from &#39;path&#39;;

import { registerApp, App, Static, Router, Get, Post, Res, Logger } from &#39;@reactend/express&#39;;

const ExpressApp = () =&amp;gt; (
  &amp;lt;App port={process.env.PORT || 8080}&amp;gt;
    &amp;lt;Static publicPath={resolve(__dirname, &#39;/public&#39;)} /&amp;gt;
    &amp;lt;Logger mode=&quot;dev&quot; /&amp;gt;
    &amp;lt;Router path=&quot;/&quot;&amp;gt;
      &amp;lt;Get&amp;gt;
        &amp;lt;Res.Header name=&quot;Cache-Control&quot; value=&quot;public, max-age=31557600&quot; /&amp;gt;
        &amp;lt;Res.Render component={HomePage} /&amp;gt;
      &amp;lt;/Get&amp;gt;
      &amp;lt;Get path=&quot;/components&quot; render={ComponentsPage} /&amp;gt;
      &amp;lt;Router path=&quot;/api&quot;&amp;gt;
        &amp;lt;Post
          path=&quot;/status&quot;
          json={{ msg: &#39;It is okay, bro&#39; }}
          handler={(req) =&amp;gt; console.log(req.originalUrl)}
        /&amp;gt;
      &amp;lt;/Router&amp;gt;
      &amp;lt;Get path=&quot;*&quot; text=&quot;Not Found&quot; status={404} /&amp;gt;
    &amp;lt;/Router&amp;gt;
  &amp;lt;/App&amp;gt;
);

registerApp(ExpressApp);
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;You can use this way too&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import cors from &#39;cors&#39;;
&amp;lt;Middleware handler={cors()} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&amp;lt;Get path=&quot;/redirect&quot;&amp;gt;
  &amp;lt;Res.Redirect statusCode={301} path=&quot;https://ru.reactjs.org&quot; /&amp;gt;
&amp;lt;/Get&amp;gt;

&amp;lt;Post path=&quot;/json&quot;&amp;gt;
  &amp;lt;Res.Status statusCode={401} /&amp;gt;
  &amp;lt;Res.Content json={{ msg: &#39;No Access&#39; }} contentType=&quot;application/json&quot; /&amp;gt;
&amp;lt;/Post&amp;gt;

&amp;lt;Get path=&quot;/send-file&quot;&amp;gt;
  &amp;lt;Res.SendFile path={resolve(&#39;public/code-example.png&#39;)} onError={console.log} /&amp;gt;
&amp;lt;/Get&amp;gt;

&amp;lt;Get path=&quot;/render&quot;&amp;gt;
  &amp;lt;Res.Render component={() =&amp;gt; &amp;lt;h1&amp;gt;Shut Up And Take My Money!&amp;lt;/h1&amp;gt;} /&amp;gt;
&amp;lt;/Get&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Components&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;This minor description for now (Docs is on the way)&lt;/em&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; - App Instance (props: port) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Static /&amp;gt;&lt;/code&gt; - Static route (props: publicPath, path, options) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Router /&amp;gt;&lt;/code&gt; - Router-Provider (props: path) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Get /&amp;gt;, &amp;lt;Post /&amp;gt; and ...&lt;/code&gt; - Route component (props: path, content, 
 &lt;!-- raw HTML omitted --&gt;handler, status) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Middleware /&amp;gt;&lt;/code&gt; - Middleware (props: handler) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Logger /&amp;gt;&lt;/code&gt; - morgan logger (props: mode, disabled) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Res /&amp;gt;&lt;/code&gt; - Response components 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Res.Render /&amp;gt;&lt;/code&gt; - Render (props: component) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Res.Content /&amp;gt;&lt;/code&gt; - Response send (props: json, text, contentType) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Res.Status /&amp;gt;&lt;/code&gt; - Response Status (props: statusCode) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Res.SendFile /&amp;gt;&lt;/code&gt; - Response Send File (props: path, options, 
 &lt;!-- raw HTML omitted --&gt;onError) 
 &lt;!-- raw HTML omitted --&gt; &lt;code&gt;&amp;lt;Res.Redirect /&amp;gt;&lt;/code&gt; - Redirect (props: path, statusCode) 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Contact me&lt;/h2&gt; 
&lt;p&gt;Email me if you have any idea and you would like to be contributor &lt;a href=&quot;mailto:orkhanjafarovr@gmail.com&quot;&gt;orkhanjafarovr@gmail.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cheers ✨&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flybywiresim/a32nx</title>
      <link>https://github.com/flybywiresim/a32nx</link>
      <description>&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/UjzuHMU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub latest release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&quot; alt=&quot;Github All Releases download count&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/flybywiresim/a32nx/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible. It aims to enhance the default A320neo by improving the systems depth and functionality to bring it up to payware-level, all for free.&lt;/p&gt; 
&lt;p&gt;The following aircraft configuration is currently simulated:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Model      A320-251N
Engine     LEAP 1A-26
FMGS       Honeywell Pegasus II
FWC Std.   H2F9E
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that this configuration may change in the future as the A32NX project evolves and changes.&lt;/p&gt; 
&lt;h3&gt;SimBrief Airframe with the correct weights&lt;/h3&gt; 
&lt;p&gt;✈&lt;a href=&quot;https://www.simbrief.com/system/dispatch.php?sharefleet=eyJ0cyI6IjE2MDU4MjAwNzg5NDYiLCJiYXNldHlwZSI6IkEzMjAiLCJjb21tZW50cyI6IkZMWSBCWSBXSVJFIiwiaWNhbyI6IkEyME4iLCJuYW1lIjoiQTMyME5FTyBGQlciLCJlbmdpbmVzIjoiTEVBUC0xQTI2IiwicmVnIjoiQTIwTiIsImZpbiI6IiIsInNlbGNhbCI6IiIsImhleGNvZGUiOiIiLCJjYXQiOiJNIiwicGVyIjoiQyIsImVxdWlwIjoiU0RFM0ZHSElSV1kiLCJ0cmFuc3BvbmRlciI6IkxCMSIsInBibiI6IkExQjFDMUQxTzFTMSIsImV4dHJhcm1rIjoiIiwibWF4cGF4IjoiMTgwIiwid2d0dW5pdHMiOiJLR1MiLCJvZXciOiI0MTAwMCIsIm16ZnciOiI2MjUwMCIsIm10b3ciOiI3OTAwMCIsIm1sdyI6IjY2MDAwIiwibWF4ZnVlbCI6IjIxMjczIiwicGF4d2d0IjoiMTA0IiwiZGVmYXVsdGNpIjoiIiwiZnVlbGZhY3RvciI6IlAwMCIsImNydWlzZW9mZnNldCI6IlAwMDAwIn0-&quot;&gt;SimBrief Airframe with the correct weights&lt;/a&gt; Credits: &lt;a href=&quot;https://github.com/viniciusfont&quot;&gt;@viniciusfont&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;h3&gt;A32NX Installer&lt;/h3&gt; 
&lt;p&gt;Download the new A32NX installer where you can select either the Stable or Developer build, and download and install the mod directly into your community folder, &lt;a href=&quot;https://api.flybywiresim.com/installer&quot;&gt;download here&lt;/a&gt; (&lt;a href=&quot;https://github.com/flybywiresim/installer/&quot;&gt;source&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Traditional Download Methods&lt;/h3&gt; 
&lt;h4&gt;Latest Stable Release&lt;/h4&gt; 
&lt;p&gt;This is the recommended stable release, as it has been thoroughly tested.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/latest/download/flybywiresim-a32nx.zip&quot;&gt;Download the stable release here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can see the changelog on the releases page: &lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases&quot;&gt;View Here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build&lt;/h4&gt; 
&lt;p&gt;This has the latest features, but is much more unstable, use at your own risk.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/download/vmaster/A32NX-master.zip&quot;&gt;Download developer build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/releases/tag/vmaster&quot;&gt;View info about the latest build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Unstable Master Branch Build (with custom FBW)&lt;/h4&gt; 
&lt;p&gt;This version is the same as the regular master/development version, but with the WIP custom fly-by-wire system. Expect issues with flight directors/autopilot if you intend to use this version. No support will be provided via Discord.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://flybywiresim-packages.nyc3.cdn.digitaloceanspaces.com/vmaster-cfbw/A32NX-master-cfbw.zip&quot;&gt;Download custom FBW development build here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/flybywiresim/a32nx/tree/fbw/docs&quot;&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; view warnings and info for the custom FBW build here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Please follow ALL steps in this README if you encounter any issues with installation before seeking support.&lt;/h3&gt; 
&lt;p&gt;Open the zip that you downloaded from one of the links above, and drag the A32NX folder inside the zip into your Community folder.&lt;/p&gt; 
&lt;p&gt;See below for the location of your Community folder:&lt;/p&gt; 
&lt;p&gt;For the Microsoft Store edition AND/OR Gamepass edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\Packages\Microsoft.FlightSimulator_&amp;lt;RANDOMLETTERS&amp;gt;\LocalCache\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Steam edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Roaming\Microsoft Flight Simulator\Packages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the Boxed edition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the &quot;A32NX&quot; folder into your community package folder. It is located in: &lt;code&gt;C:\Users\[YOUR USERNAME]\AppData\Local\MSFSPackages\Community&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above methods do not work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can find your community folder by going into FS2020 general options and enabling developer mode. You will see a menu appear on top. Go to tools and virtual file system. Click on watch bases and your community folder will be listed in one of the folders.&lt;/li&gt; 
 &lt;li&gt;Please make sure you&#39;re copying the &quot;A32NX&quot; folder into your community package folder, NOT the &quot;flybywiresim-a32nx&quot; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Known Issues (Please note that most issues are being worked on and some of them may even be fixed in the master branch)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Captain&#39;s PFD may occasionally turn off during flight&lt;/li&gt; 
 &lt;li&gt;No Smoking switch doesn&#39;t use a full range of motion.&lt;/li&gt; 
 &lt;li&gt;Automatic ECAM page switching has minor bugs.&lt;/li&gt; 
 &lt;li&gt;AP not following the flight plan (leaking input values affect, but don&#39;t disconnect the AP) [Workaround: Set dead-zones for your input device higher]&lt;/li&gt; 
 &lt;li&gt;Autopilot goes direct to RWY on APP (same with the default A320) [Workaround: Use DIR to a waypoint or selected heading]&lt;/li&gt; 
 &lt;li&gt;Upper ECAM displays wrong THR levers position / N1 rating.&lt;/li&gt; 
 &lt;li&gt;Newly added ASOBO A320 liveries are incompatible with the A32NX mod.&lt;/li&gt; 
 &lt;li&gt;Ruder keybindings not working (you have to set your keybinding to rudder axis right and left)&lt;/li&gt; 
 &lt;li&gt;Wing dips on landing (due to bad transition to direct law in flare, same with the default A320) [Workaround use minimal aileron input on landing]&lt;/li&gt; 
 &lt;li&gt;Black screens / unable to start (conflict with another mod/livery or incorrect installation of the A32NX mod, use the &lt;a href=&quot;https://api.flybywiresim.com/installer&quot;&gt;installer&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The contents of this repository are DUAL LICENSED.&lt;/p&gt; 
&lt;p&gt;Textual-form source code in this repository is licensed under the GNU General Public License version 3. Artistic assets (including but not limited to images, sound banks, 3D models, and textures) are licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Creative Commons CC BY-NC-SA 4.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Any other works found to be not explicitly covered by the above definitions are all rights reserved to avoid ambiguities at the moment, but we are very permissive about their use if you contact us.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can I download the aircraft in the current state?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Yes, see &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Where is the plane in-sim?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The mod is added on top of the default A320neo from Asobo. If you want to uninstall it and revert to the original aircraft, just delete the A32NX folder in your community folder.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: What are the liveries available?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: All liveries for the default A320 are compatible with the A32NX Mod. You can download some of your favourite liveries at &lt;a href=&quot;https://flightsim.to&quot;&gt;Flightsim.to&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When will it be released?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: The project is an ongoing rolling release. See &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#Downloads&quot;&gt;Downloads&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: When is the next update?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We don&#39;t know, since it depends on many factors. We will announce each Stable build update via &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;discord&lt;/a&gt; and our social media: &lt;a href=&quot;https://www.facebook.com/FlyByWireSimulations&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/FlybywireSim&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do I join the team?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Head over to &lt;a href=&quot;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&quot;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Is it payware?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: No, it is a completely free aircraft, open-source.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do we report bugs?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Report bugs to us in the &lt;a href=&quot;https://discord.gg/flybywire&quot;&gt;Discord server&lt;/a&gt;, under the #help channel, or by creating a GitHub issue. Just make sure to search for existing issues first before creating a new one.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Why is my version not the same as what I see others using?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: We have two versions, the Stable and Developer (Master). The Stable version is a &#39;snapshot&#39; of the development which we regard as stable with the current version of the simulator. The Developer build is updated daily and is a constant work in progress and although we test thoroughly each update, minor issues may occur from time to time. If you find this to be the case, you can report these issues in #help in discord or via GitHub Issues (Check there is not an existing issue of the same nature as yours).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client</title>
      <link>https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client</link>
      <description>&lt;p&gt;A cross-platform unofficial Google Assistant Client for Desktop (powered by Google Assistant SDK)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Assistant Unofficial Desktop Client&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/github/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client.svg?style=for-the-badge&amp;amp;logo=travis&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/blob/master/package.json&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client?style=for-the-badge&amp;amp;logo=node.js&amp;amp;logoColor=green&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/total.svg?logo=github&amp;amp;style=for-the-badge&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client.svg?logo=github&amp;amp;style=for-the-badge&quot; alt=&quot;Issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client.svg?style=for-the-badge&amp;amp;color=blue&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/languages/top/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client.svg?style=for-the-badge&amp;amp;color=yellow&quot; alt=&quot;Top Language&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client.svg?style=for-the-badge&quot; alt=&quot;Last Commit&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commits-since/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/latest.svg?style=for-the-badge&quot; alt=&quot;Commits since last release&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/master/images/Banner.png&quot; alt=&quot;G Assist Banner&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Google Assistant Unofficial Desktop Client is a cross-platform desktop client for Google Assistant based on &lt;strong&gt;Google Assistant SDK&lt;/strong&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h2&gt;Note:&lt;/h2&gt; 
 &lt;p&gt;The &lt;strong&gt;&quot;Google Assistant Unofficial Desktop Client&quot;&lt;/strong&gt; is under development. So, if you find any bugs or have any suggestion, feel free to post an &lt;em&gt;issue&lt;/em&gt; or a &lt;em&gt;pull request&lt;/em&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;p&gt;The design is inspired by Google Assistant in Chrome OS and comes in both Light Mode &lt;em&gt;(beta)&lt;/em&gt; and Dark Mode 😉.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/master/images/Assistant_light_dark.jpg&quot; alt=&quot;G Assist Screenshot&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;In order to use the client, you must have a &lt;em&gt;&quot;Key File&quot;&lt;/em&gt; and &lt;em&gt;&quot;Token&quot;&lt;/em&gt; for authentication which you can get by going through &lt;strong&gt;Device Registration&lt;/strong&gt; process. You can go through the wiki given below to get started.&lt;/p&gt; 
&lt;p&gt;&quot;&lt;em&gt;Setup Authentication for Google Assistant Unofficial Desktop Client&lt;/em&gt;&quot; Wiki (For both &lt;strong&gt;Device Registration&lt;/strong&gt; &amp;amp; &lt;strong&gt;Authentication&lt;/strong&gt; help):&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/wiki/Setup-Authentication-for-Google-Assistant-Unofficial-Desktop-Client&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Other References&lt;/h4&gt; 
&lt;p&gt;If you want a user friendly registration method, use &lt;strong&gt;Device Registration&lt;/strong&gt; UI:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;https://developers.google.com/assistant/sdk/guides/library/python/embed/config-dev-project-and-account&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use a CLI tool to complete the &lt;strong&gt;Device Registration&lt;/strong&gt; and &lt;strong&gt;Authentication&lt;/strong&gt; process manually, read the following:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;https://developers.google.com/assistant/sdk/reference/device-registration/register-device-manual&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;After you have registered your device and downloaded the required authentication files, you can head on to &lt;em&gt;Settings&lt;/em&gt; and set the &lt;em&gt;&quot;Key File Path&quot;&lt;/em&gt; and &lt;em&gt;&quot;Saved Tokens Path&quot;&lt;/em&gt; to the location where the respective files are located.&lt;/p&gt; 
&lt;h2&gt;How to Build?&lt;/h2&gt; 
&lt;h3&gt;Using &lt;code&gt;npm&lt;/code&gt;&lt;/h3&gt; 
&lt;hr&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Get dependencies from npm
npm install

# Run the Assistant
npm start

# Build the Assistant
npm run dist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using &lt;code&gt;yarn&lt;/code&gt;&lt;/h3&gt; 
&lt;hr&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Get dependencies from npm registry
yarn install

# Run the Assistant
yarn start

# Build the Assistant
yarn dist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t want to build the project for yourself, you can download the Assistant Setup/Installer for the respective platform from &lt;a href=&quot;https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/releases&quot;&gt;here (releases)&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Linux Build&lt;/h3&gt; 
&lt;p&gt;If you are a linux user, &lt;code&gt;Snap&lt;/code&gt; build is recommended over &lt;code&gt;AppImage&lt;/code&gt;. You can download the snap from snapstore.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://snapcraft.io/g-assist&quot;&gt;&lt;img src=&quot;https://snapcraft.io/static/images/badges/en/snap-store-black.svg&quot; alt=&quot;Get it from the Snap Store&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Default Keyboard Shortcut&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows:&lt;/strong&gt; Win + Shift + A&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MacOS:&lt;/strong&gt; Cmd + Shift + A&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux:&lt;/strong&gt; Super + Shift + A&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Keyboard shortcut is configurable in the settings&lt;/p&gt; 
&lt;h2&gt;TODO&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Set &lt;code&gt;build&lt;/code&gt; for Mac and Linux in &lt;em&gt;package.json&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Create Config File&lt;/li&gt; 
 &lt;li&gt;[x] Remove &#39;auth&#39; from the &lt;code&gt;app&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;[ ] Respond to &quot;Ok Google&quot; or &quot;Hey Google&quot;&lt;/li&gt; 
 &lt;li&gt;[x] Activate Mic for &lt;code&gt;continuousConverstion&lt;/code&gt; only when audio output is done&lt;/li&gt; 
 &lt;li&gt;[x] Use different dependency for audio recording&lt;/li&gt; 
 &lt;li&gt;[ ] Improve Carousel UI Rendering in the &lt;code&gt;main_area&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;[x] Improve Error Handling&lt;/li&gt; 
 &lt;li&gt;[x] Improve Assistant Audio Output&lt;/li&gt; 
 &lt;li&gt;[x] Turn off &lt;code&gt;webAudio&lt;/code&gt; after visualization&lt;/li&gt; 
 &lt;li&gt;[x] &quot;Enable Audio Output&quot; in Settings&lt;/li&gt; 
 &lt;li&gt;[x] Divide Settings into sections&lt;/li&gt; 
 &lt;li&gt;[x] Don&#39;t accept empty queries&lt;/li&gt; 
 &lt;li&gt;[x] Info for each Setting&lt;/li&gt; 
 &lt;li&gt;[x] Animation while talking&lt;/li&gt; 
 &lt;li&gt;[x] Ping when activating mic&lt;/li&gt; 
 &lt;li&gt;[x] Welcome screen for first-time users&lt;/li&gt; 
 &lt;li&gt;[x] Display images from Google Images&lt;/li&gt; 
 &lt;li&gt;[x] Option to disable auto-scaling&lt;/li&gt; 
 &lt;li&gt;[x] Cleanup CSS&lt;/li&gt; 
 &lt;li&gt;[x] Remove &lt;code&gt;sox&lt;/code&gt; as a dependency&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Libraries Used&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;p5.js:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For visualization purpose when the user speaks through mic.&lt;/li&gt; 
   &lt;li&gt;Link: https://p5js.org/&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;aud_player.js:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For playing audio through speakers.&lt;/li&gt; 
   &lt;li&gt;Link: https://github.com/ItsWendell/google-assistant-desktop-client/blob/develop/src/renderer/providers/assistant/player.js&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;microphone.js:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For recording audio using Web API.&lt;/li&gt; 
   &lt;li&gt;Link: https://github.com/ItsWendell/google-assistant-desktop-client/blob/develop/src/renderer/providers/assistant/microphone.js&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>nuxt/nuxt.js</title>
      <link>https://github.com/nuxt/nuxt.js</link>
      <description>&lt;p&gt;The Intuitive Vue Framework&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;Build your next Vue.js application with confidence using Nuxt: a framework making web development simple and powerful.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📘 Documentation: &lt;a href=&quot;https://nuxtjs.org&quot;&gt;https://nuxtjs.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 Community: &lt;a href=&quot;https://cmty.app/nuxt&quot;&gt;cmty.app/nuxt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎬 Video: &lt;a href=&quot;https://www.youtube.com/watch?v=kmf-p-pTi40&quot;&gt;1 minute demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🐦 Twitter: &lt;a href=&quot;https://twitter.nuxtjs.org/&quot;&gt;@nuxt_js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 Chat: &lt;a href=&quot;https://discord.nuxtjs.org/&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌟 &lt;a href=&quot;https://awesome.nuxtjs.org/&quot;&gt;AwesomeNuxt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👉 &lt;a href=&quot;https://template.nuxtjs.org&quot;&gt;Play with Nuxt online&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automatic transpilation and bundling (with webpack and babel)&lt;/li&gt; 
 &lt;li&gt;Hot code reloading&lt;/li&gt; 
 &lt;li&gt;Server-side rendering OR Single Page App OR Static Generated, you choose :fire:&lt;/li&gt; 
 &lt;li&gt;Static file serving. &lt;code&gt;./static/&lt;/code&gt; is mapped to &lt;code&gt;/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Configurable with a &lt;code&gt;nuxt.config.js&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;Custom layouts with the &lt;code&gt;layouts/&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;Middleware&lt;/li&gt; 
 &lt;li&gt;Code splitting for every &lt;code&gt;pages/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Loading just the critical CSS (page-level)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more at &lt;a href=&quot;https://nuxtjs.org&quot;&gt;https://nuxtjs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npx create-nuxt-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It&#39;s as simple as that!&lt;/p&gt; 
&lt;p&gt;Learn more at https://nuxtjs.org/guide/installation&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Please take a look at &lt;a href=&quot;https://nuxtjs.org/examples&quot;&gt;https://nuxtjs.org/examples&lt;/a&gt; or directly in &lt;a href=&quot;https://github.com/nuxt/nuxt.js/tree/dev/examples&quot;&gt;https://github.com/nuxt/nuxt.js/tree/dev/examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Production deployment&lt;/h2&gt; 
&lt;p&gt;To deploy, instead of running nuxt, you probably want to build ahead of time. Therefore, building and starting are separate commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nuxt build
nuxt start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn more at https://nuxtjs.org/guide/commands#production-deployment&lt;/p&gt; 
&lt;h2&gt;Consulting from the Nuxt team&lt;/h2&gt; 
&lt;p&gt;Get help with that tough bug or make sure your Nuxt app is ready to deploy. For $250 an hour, get technical support, advice, code reviews, and development from the Nuxt core team: &lt;a href=&quot;https://otechie.com/nuxt?ref=readme&quot;&gt;Hire Nuxt on Otechie&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Professional support with TideLift&lt;/h2&gt; 
&lt;p&gt;Professionally supported Nuxt is now available!&lt;/p&gt; 
&lt;p&gt;Tidelift gives software development teams a single source for purchasing and maintaining their software, with professional grade assurances from the experts who know it best, while seamlessly integrating with existing tools.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://tidelift.com/subscription/pkg/npm-nuxt?utm_source=npm-nuxt&amp;amp;utm_medium=readme&quot;&gt;Get supported Nuxt with the Tidelift Subscription&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supporting Nuxt&lt;/h2&gt; 
&lt;p&gt;Nuxt is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events.&lt;/p&gt; 
&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&quot;https://opencollective.com/nuxtjs#contribute&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Platinum Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/platinum-sponsors.svg?avatarHeight=96&amp;amp;width=890&quot; alt=&quot;Open Collective Platinum Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Gold Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/gold-sponsors.svg?avatarHeight=80&amp;amp;width=890&quot; alt=&quot;Open Collective Gold Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Silver Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/silver-sponsors.svg?avatarHeight=64&amp;amp;width=890&quot; alt=&quot;Open Collective Silver Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bronze Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/nuxtjs#contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/tiers/bronze-sponsors.svg?avatarHeight=48&amp;amp;width=890&quot; alt=&quot;Open Collective Bronze Sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you to all our &lt;a href=&quot;https://github.com/nuxt/nuxt.js/graphs/contributors&quot;&gt;contributors&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/nuxtjs/contributors.svg?width=890&amp;amp;button=false&quot; alt=&quot;Nuxt Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/nuxt/nuxt.js&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href=&quot;https://nuxtjs.org/guide/contribution-guide#codefund_ad&quot;&gt;Contribution Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Cross-browser testing&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;http://browserstack.com&quot;&gt;BrowserStack&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Automated testing&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://saucelabs.com&quot;&gt;SauceLabs&lt;/a&gt; for supporting Open Source &amp;lt;3&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you discover a security vulnerability regarding Nuxt, please send an e-mail to the team via security@nuxtjs.org! All security vulnerabilities will be promptly addressed.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/blob/dev/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit 
 &lt;!-- raw HTML omitted --&gt;https://nextjs.org/learn
 &lt;!-- raw HTML omitted --&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world&#39;s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/blob/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/arunoda-zeit&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;) – Knight-Mozilla / Coral Project&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>carbon-design-system/carbon</title>
      <link>https://github.com/carbon-design-system/carbon</link>
      <description>&lt;p&gt;A design system built by IBM&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;Carbon is an open-source design system built by IBM. With the IBM Design Language as its foundation, the system consists of working code, design tools and resources, human interface guidelines, and a vibrant community of contributors.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;If you&#39;re just getting started, check out &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/components&quot;&gt;&lt;code&gt;carbon-components&lt;/code&gt;&lt;/a&gt;. If you&#39;re looking for React components, take a look at &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/react&quot;&gt;&lt;code&gt;carbon-components-react&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We also have community-contributed components for the following technologies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBM/carbon-components-angular&quot;&gt;Angular&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/carbon-design-system/carbon-components-vue&quot;&gt;Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBM/carbon-components-svelte&quot;&gt;Svelte&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;re trying to find something specific, here&#39;s a full list of packages that we support!&lt;/p&gt; 
&lt;p&gt;| Package name | Description | | --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/components&quot;&gt;&lt;code&gt;carbon-components&lt;/code&gt;&lt;/a&gt; | Component styles and Vanilla JavaScript | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/react&quot;&gt;&lt;code&gt;carbon-components-react&lt;/code&gt;&lt;/a&gt; | React components | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/elements&quot;&gt;&lt;code&gt;@carbon/elements&lt;/code&gt;&lt;/a&gt; | IBM Design Language elements like colors, type, iconography, and more | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/colors&quot;&gt;&lt;code&gt;@carbon/colors&lt;/code&gt;&lt;/a&gt; | Work with IBM Design Language colors | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/grid&quot;&gt;&lt;code&gt;@carbon/grid&lt;/code&gt;&lt;/a&gt; | Build layouts using the new 16 column grid system | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/icons&quot;&gt;&lt;code&gt;@carbon/icons&lt;/code&gt;&lt;/a&gt; | Iconography assets. We also offer support in: &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/icons-react&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/carbon-design-system/carbon-icons-angular&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/icons-vue&quot;&gt;Vue&lt;/a&gt;, and &lt;a href=&quot;https://github.com/IBM/carbon-icons-svelte&quot;&gt;Svelte&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/pictograms&quot;&gt;&lt;code&gt;@carbon/pictograms&lt;/code&gt;&lt;/a&gt; | Pictogram assets. We also offer support in: &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/pictograms-react&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;https://github.com/IBM/carbon-pictograms-svelte&quot;&gt;Svelte&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/layout&quot;&gt;&lt;code&gt;@carbon/layout&lt;/code&gt;&lt;/a&gt; | Layout-based units and spacing scale | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/motion&quot;&gt;&lt;code&gt;@carbon/motion&lt;/code&gt;&lt;/a&gt; | Productive and expressive motion curves | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/themes&quot;&gt;&lt;code&gt;@carbon/themes&lt;/code&gt;&lt;/a&gt; | Color tokens available in the Carbon Design System, like &lt;code&gt;$interactive-01&lt;/code&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/type&quot;&gt;&lt;code&gt;@carbon/type&lt;/code&gt;&lt;/a&gt; | New type tokens used alongside IBM Plex |&lt;/p&gt; 
&lt;h2&gt;:books: Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See our documentation site &lt;a href=&quot;https://www.carbondesignsystem.com/get-started/develop/react&quot;&gt;here&lt;/a&gt; for full how-to docs and guidelines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/.github/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;: Guidelines for making contributions to this repo.&lt;/li&gt; 
 &lt;li&gt;🏃‍♀️ Migration Guides 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/components/docs/migration/migrate-to-10.x.md&quot;&gt;v9 to v10 (vanilla)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/packages/react/docs/migration/migrate-to-7.x.md&quot;&gt;v9 to v10 (v6 to v7 React)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙌 Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;re always looking for contributors to help us fix bugs, build new features, or help us improve the project documentation. If you&#39;re interested, definitely check out our &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; and our &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/docs/developer-handbook.md&quot;&gt;Developer Guide&lt;/a&gt;! 👀&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/kentcdodds/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/carbon-design-system/carbon/master/LICENSE&quot;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typicode/json-server</title>
      <link>https://github.com/typicode/json-server</link>
      <description>&lt;p&gt;Get a full fake REST API with zero coding in less than 30 seconds (seriously)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JSON Server &lt;a href=&quot;https://travis-ci.org/typicode/json-server&quot;&gt;&lt;img src=&quot;https://travis-ci.org/typicode/json-server.svg?branch=master&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://badge.fury.io/js/json-server&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/json-server.svg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Get a full fake REST API with &lt;strong&gt;zero coding&lt;/strong&gt; in &lt;strong&gt;less than 30 seconds&lt;/strong&gt; (seriously)&lt;/p&gt; 
&lt;p&gt;Created with &amp;lt;3 for front-end developers who need a quick back-end for prototyping and mocking.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://egghead.io/lessons/nodejs-creating-demo-apis-with-json-server&quot;&gt;Egghead.io free video tutorial - Creating demo APIs with json-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsonplaceholder.typicode.com&quot;&gt;JSONPlaceholder - Live running version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://my-json-server.typicode.com&quot;&gt;&lt;strong&gt;My JSON Server&lt;/strong&gt; - no installation required, use your own data&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See also:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;:dog: &lt;a href=&quot;https://github.com/typicode/husky&quot;&gt;husky - Git hooks made easy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;:hotel: &lt;a href=&quot;https://github.com/typicode/hotel&quot;&gt;hotel - developer tool with local .localhost domain and https out of the box&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/users/typicode/sponsorship&quot;&gt;Become a sponsor and have your company logo here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#routes&quot;&gt;Routes&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#plural-routes&quot;&gt;Plural routes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#singular-routes&quot;&gt;Singular routes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#filter&quot;&gt;Filter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#paginate&quot;&gt;Paginate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#sort&quot;&gt;Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#slice&quot;&gt;Slice&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#operators&quot;&gt;Operators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#full-text-search&quot;&gt;Full-text search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#relationships&quot;&gt;Relationships&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#database&quot;&gt;Database&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#homepage&quot;&gt;Homepage&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#extras&quot;&gt;Extras&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#static-file-server&quot;&gt;Static file server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#alternative-port&quot;&gt;Alternative port&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#access-from-anywhere&quot;&gt;Access from anywhere&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#remote-schema&quot;&gt;Remote schema&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#generate-random-data&quot;&gt;Generate random data&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#https&quot;&gt;HTTPS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#add-custom-routes&quot;&gt;Add custom routes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#add-middlewares&quot;&gt;Add middlewares&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#cli-usage&quot;&gt;CLI usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#module&quot;&gt;Module&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#simple-example&quot;&gt;Simple example&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#custom-routes-example&quot;&gt;Custom routes example&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#access-control-example&quot;&gt;Access control example&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#custom-output-example&quot;&gt;Custom output example&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#rewriter-example&quot;&gt;Rewriter example&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#mounting-json-server-on-another-endpoint-example&quot;&gt;Mounting JSON Server on another endpoint example&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#api&quot;&gt;API&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#deployment&quot;&gt;Deployment&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#links&quot;&gt;Links&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#video&quot;&gt;Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#articles&quot;&gt;Articles&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#third-party-tools&quot;&gt;Third-party tools&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Install JSON Server&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install -g json-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;db.json&lt;/code&gt; file with some data&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;posts&quot;: [
    { &quot;id&quot;: 1, &quot;title&quot;: &quot;json-server&quot;, &quot;author&quot;: &quot;typicode&quot; }
  ],
  &quot;comments&quot;: [
    { &quot;id&quot;: 1, &quot;body&quot;: &quot;some comment&quot;, &quot;postId&quot;: 1 }
  ],
  &quot;profile&quot;: { &quot;name&quot;: &quot;typicode&quot; }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start JSON Server&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;json-server --watch db.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now if you go to &lt;a href=&quot;http://localhost:3000/posts/1&quot;&gt;http://localhost:3000/posts/1&lt;/a&gt;, you&#39;ll get&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{ &quot;id&quot;: 1, &quot;title&quot;: &quot;json-server&quot;, &quot;author&quot;: &quot;typicode&quot; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also when doing requests, it&#39;s good to know that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you make POST, PUT, PATCH or DELETE requests, changes will be automatically and safely saved to &lt;code&gt;db.json&lt;/code&gt; using &lt;a href=&quot;https://github.com/typicode/lowdb&quot;&gt;lowdb&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Your request body JSON should be object enclosed, just like the GET output. (for example &lt;code&gt;{&quot;name&quot;: &quot;Foobar&quot;}&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Id values are not mutable. Any &lt;code&gt;id&lt;/code&gt; value in the body of your PUT or PATCH request will be ignored. Only a value set in a POST request will be respected, but only if not already taken.&lt;/li&gt; 
 &lt;li&gt;A POST, PUT or PATCH request should include a &lt;code&gt;Content-Type: application/json&lt;/code&gt; header to use the JSON in the request body. Otherwise it will return a 2XX status code, but without changes being made to the data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Routes&lt;/h2&gt; 
&lt;p&gt;Based on the previous &lt;code&gt;db.json&lt;/code&gt; file, here are all the default routes. You can also add &lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#add-custom-routes&quot;&gt;other routes&lt;/a&gt; using &lt;code&gt;--routes&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Plural routes&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;GET    /posts
GET    /posts/1
POST   /posts
PUT    /posts/1
PATCH  /posts/1
DELETE /posts/1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Singular routes&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;GET    /profile
POST   /profile
PUT    /profile
PATCH  /profile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Filter&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;.&lt;/code&gt; to access deep properties&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?title=json-server&amp;amp;author=typicode
GET /posts?id=1&amp;amp;id=2
GET /comments?author.name=typicode
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Paginate&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;_page&lt;/code&gt; and optionally &lt;code&gt;_limit&lt;/code&gt; to paginate returned data.&lt;/p&gt; 
&lt;p&gt;In the &lt;code&gt;Link&lt;/code&gt; header you&#39;ll get &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;prev&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; links.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?_page=7
GET /posts?_page=7&amp;amp;_limit=20
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;10 items are returned by default&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Sort&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;_sort&lt;/code&gt; and &lt;code&gt;_order&lt;/code&gt; (ascending order by default)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?_sort=views&amp;amp;_order=asc
GET /posts/1/comments?_sort=votes&amp;amp;_order=asc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For multiple fields, use the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?_sort=user,views&amp;amp;_order=desc,asc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Slice&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;_start&lt;/code&gt; and &lt;code&gt;_end&lt;/code&gt; or &lt;code&gt;_limit&lt;/code&gt; (an &lt;code&gt;X-Total-Count&lt;/code&gt; header is included in the response)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?_start=20&amp;amp;_end=30
GET /posts/1/comments?_start=20&amp;amp;_end=30
GET /posts/1/comments?_start=20&amp;amp;_limit=10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Works exactly as &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;Array.slice&lt;/a&gt; (i.e. &lt;code&gt;_start&lt;/code&gt; is inclusive and &lt;code&gt;_end&lt;/code&gt; exclusive)&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Operators&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;_gte&lt;/code&gt; or &lt;code&gt;_lte&lt;/code&gt; for getting a range&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?views_gte=10&amp;amp;views_lte=20
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add &lt;code&gt;_ne&lt;/code&gt; to exclude a value&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?id_ne=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add &lt;code&gt;_like&lt;/code&gt; to filter (RegExp supported)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?title_like=server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Full-text search&lt;/h3&gt; 
&lt;p&gt;Add &lt;code&gt;q&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?q=internet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Relationships&lt;/h3&gt; 
&lt;p&gt;To include children resources, add &lt;code&gt;_embed&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /posts?_embed=comments
GET /posts/1?_embed=comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To include parent resource, add &lt;code&gt;_expand&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /comments?_expand=post
GET /comments/1?_expand=post
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get or create nested resources (by default one level, &lt;a href=&quot;https://raw.githubusercontent.com/typicode/json-server/master/#add-custom-routes&quot;&gt;add custom routes&lt;/a&gt; for more)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET  /posts/1/comments
POST /posts/1/comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;GET /db
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Homepage&lt;/h3&gt; 
&lt;p&gt;Returns default index file or serves &lt;code&gt;./public&lt;/code&gt; directory&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET /
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Extras&lt;/h2&gt; 
&lt;h3&gt;Static file server&lt;/h3&gt; 
&lt;p&gt;You can use JSON Server to serve your HTML, JS and CSS, simply create a &lt;code&gt;./public&lt;/code&gt; directory or use &lt;code&gt;--static&lt;/code&gt; to set a different static files directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir public
echo &#39;hello world&#39; &amp;gt; public/index.html
json-server db.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;json-server db.json --static ./some-other-dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Alternative port&lt;/h3&gt; 
&lt;p&gt;You can start JSON Server on other ports with the &lt;code&gt;--port&lt;/code&gt; flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ json-server --watch db.json --port 3004
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Access from anywhere&lt;/h3&gt; 
&lt;p&gt;You can access your fake API from anywhere using CORS and JSONP.&lt;/p&gt; 
&lt;h3&gt;Remote schema&lt;/h3&gt; 
&lt;p&gt;You can load remote schemas.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ json-server http://example.com/file.json
$ json-server http://jsonplaceholder.typicode.com/db
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate random data&lt;/h3&gt; 
&lt;p&gt;Using JS instead of a JSON file, you can create data programmatically.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// index.js
module.exports = () =&amp;gt; {
  const data = { users: [] }
  // Create 1000 users
  for (let i = 0; i &amp;lt; 1000; i++) {
    data.users.push({ id: i, name: `user${i}` })
  }
  return data
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ json-server index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt; use modules like &lt;a href=&quot;https://github.com/Marak/faker.js&quot;&gt;Faker&lt;/a&gt;, &lt;a href=&quot;https://github.com/boo1ean/casual&quot;&gt;Casual&lt;/a&gt;, &lt;a href=&quot;https://github.com/victorquinn/chancejs&quot;&gt;Chance&lt;/a&gt; or &lt;a href=&quot;https://github.com/json-schema-faker/json-schema-faker&quot;&gt;JSON Schema Faker&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;HTTPS&lt;/h3&gt; 
&lt;p&gt;There are many ways to set up SSL in development. One simple way is to use &lt;a href=&quot;https://github.com/typicode/hotel&quot;&gt;hotel&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Add custom routes&lt;/h3&gt; 
&lt;p&gt;Create a &lt;code&gt;routes.json&lt;/code&gt; file. Pay attention to start every route with &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;/api/*&quot;: &quot;/$1&quot;,
  &quot;/:resource/:id/show&quot;: &quot;/:resource/:id&quot;,
  &quot;/posts/:category&quot;: &quot;/posts?category=:category&quot;,
  &quot;/articles\\?id=:id&quot;: &quot;/posts/:id&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start JSON Server with &lt;code&gt;--routes&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;json-server db.json --routes routes.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can access resources using additional routes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;/api/posts # → /posts
/api/posts/1  # → /posts/1
/posts/1/show # → /posts/1
/posts/javascript # → /posts?category=javascript
/articles?id=1 # → /posts/1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Add middlewares&lt;/h3&gt; 
&lt;p&gt;You can add your middlewares from the CLI using &lt;code&gt;--middlewares&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// hello.js
module.exports = (req, res, next) =&amp;gt; {
  res.header(&#39;X-Hello&#39;, &#39;World&#39;)
  next()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;json-server db.json --middlewares ./hello.js
json-server db.json --middlewares ./first.js ./second.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CLI usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;json-server [options] &amp;lt;source&amp;gt;

Options:
  --config, -c       Path to config file           [default: &quot;json-server.json&quot;]
  --port, -p         Set port                                    [default: 3000]
  --host, -H         Set host                             [default: &quot;localhost&quot;]
  --watch, -w        Watch file(s)                                     [boolean]
  --routes, -r       Path to routes file
  --middlewares, -m  Paths to middleware files                           [array]
  --static, -s       Set static files directory
  --read-only, --ro  Allow only GET requests                           [boolean]
  --no-cors, --nc    Disable Cross-Origin Resource Sharing             [boolean]
  --no-gzip, --ng    Disable GZIP Content-Encoding                     [boolean]
  --snapshots, -S    Set snapshots directory                      [default: &quot;.&quot;]
  --delay, -d        Add delay to responses (ms)
  --id, -i           Set database id property (e.g. _id)         [default: &quot;id&quot;]
  --foreignKeySuffix, --fks  Set foreign key suffix, (e.g. _id as in post_id)
                                                                 [default: &quot;Id&quot;]
  --quiet, -q        Suppress log messages from output                 [boolean]
  --help, -h         Show help                                         [boolean]
  --version, -v      Show version number                               [boolean]

Examples:
  json-server db.json
  json-server file.js
  json-server http://example.com/db.json

https://github.com/typicode/json-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also set options in a &lt;code&gt;json-server.json&lt;/code&gt; configuration file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;port&quot;: 3000
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Module&lt;/h3&gt; 
&lt;p&gt;If you need to add authentication, validation, or &lt;strong&gt;any behavior&lt;/strong&gt;, you can use the project as a module in combination with other Express middlewares.&lt;/p&gt; 
&lt;h4&gt;Simple example&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ npm install json-server --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// server.js
const jsonServer = require(&#39;json-server&#39;)
const server = jsonServer.create()
const router = jsonServer.router(&#39;db.json&#39;)
const middlewares = jsonServer.defaults()

server.use(middlewares)
server.use(router)
server.listen(3000, () =&amp;gt; {
  console.log(&#39;JSON Server is running&#39;)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ node server.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The path you provide to the &lt;code&gt;jsonServer.router&lt;/code&gt; function is relative to the directory from where you launch your node process. If you run the above code from another directory, it’s better to use an absolute path:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const path = require(&#39;path&#39;)
const router = jsonServer.router(path.join(__dirname, &#39;db.json&#39;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For an in-memory database, simply pass an object to &lt;code&gt;jsonServer.router()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please note also that &lt;code&gt;jsonServer.router()&lt;/code&gt; can be used in existing Express projects.&lt;/p&gt; 
&lt;h4&gt;Custom routes example&lt;/h4&gt; 
&lt;p&gt;Let&#39;s say you want a route that echoes query parameters and another one that set a timestamp on every resource created.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const jsonServer = require(&#39;json-server&#39;)
const server = jsonServer.create()
const router = jsonServer.router(&#39;db.json&#39;)
const middlewares = jsonServer.defaults()

// Set default middlewares (logger, static, cors and no-cache)
server.use(middlewares)

// Add custom routes before JSON Server router
server.get(&#39;/echo&#39;, (req, res) =&amp;gt; {
  res.jsonp(req.query)
})

// To handle POST, PUT and PATCH you need to use a body-parser
// You can use the one used by JSON Server
server.use(jsonServer.bodyParser)
server.use((req, res, next) =&amp;gt; {
  if (req.method === &#39;POST&#39;) {
    req.body.createdAt = Date.now()
  }
  // Continue to JSON Server router
  next()
})

// Use default router
server.use(router)
server.listen(3000, () =&amp;gt; {
  console.log(&#39;JSON Server is running&#39;)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Access control example&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const jsonServer = require(&#39;json-server&#39;)
const server = jsonServer.create()
const router = jsonServer.router(&#39;db.json&#39;)
const middlewares = jsonServer.defaults()

server.use(middlewares)
server.use((req, res, next) =&amp;gt; {
 if (isAuthorized(req)) { // add your authorization logic here
   next() // continue to JSON Server router
 } else {
   res.sendStatus(401)
 }
})
server.use(router)
server.listen(3000, () =&amp;gt; {
  console.log(&#39;JSON Server is running&#39;)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Custom output example&lt;/h4&gt; 
&lt;p&gt;To modify responses, overwrite &lt;code&gt;router.render&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// In this example, returned resources will be wrapped in a body property
router.render = (req, res) =&amp;gt; {
  res.jsonp({
    body: res.locals.data
  })
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can set your own status code for the response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// In this example we simulate a server side error response
router.render = (req, res) =&amp;gt; {
  res.status(500).jsonp({
    error: &quot;error message here&quot;
  })
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Rewriter example&lt;/h4&gt; 
&lt;p&gt;To add rewrite rules, use &lt;code&gt;jsonServer.rewriter()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Add this before server.use(router)
server.use(jsonServer.rewriter({
  &#39;/api/*&#39;: &#39;/$1&#39;,
  &#39;/blog/:resource/:id/show&#39;: &#39;/:resource/:id&#39;
}))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Mounting JSON Server on another endpoint example&lt;/h4&gt; 
&lt;p&gt;Alternatively, you can also mount the router on &lt;code&gt;/api&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;server.use(&#39;/api&#39;, router)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;API&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;jsonServer.create()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Returns an Express server.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;jsonServer.defaults([options])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Returns middlewares used by JSON Server.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;options 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;static&lt;/code&gt; path to static files&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;logger&lt;/code&gt; enable logger middleware (default: true)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bodyParser&lt;/code&gt; enable body-parser middleware (default: true)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;noCors&lt;/code&gt; disable CORS (default: false)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt; accept only GET requests (default: false)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;jsonServer.router([path|object])&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Returns JSON Server router.&lt;/p&gt; 
&lt;h3&gt;Deployment&lt;/h3&gt; 
&lt;p&gt;You can deploy JSON Server. For example, &lt;a href=&quot;http://jsonplaceholder.typicode.com&quot;&gt;JSONPlaceholder&lt;/a&gt; is an online fake API powered by JSON Server and running on Heroku.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;h3&gt;Video&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://egghead.io/lessons/nodejs-creating-demo-apis-with-json-server&quot;&gt;Creating Demo APIs with json-server on egghead.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nmotw.in/json-server/&quot;&gt;Node Module Of The Week - json-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://marmelab.com/blog/2014/09/15/easy-backend-for-your-restful-api.html&quot;&gt;ng-admin: Add an AngularJS admin GUI to any RESTful API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/fast-prototyping-restangular-and-json-server/&quot;&gt;Fast prototyping using Restangular and Json-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coligo.io/create-mock-rest-api-with-json-server/&quot;&gt;Create a Mock REST API in Seconds for Prototyping your Frontend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@housecor/rapid-development-via-mock-apis-e559087be066#.93d7w8oro&quot;&gt;No API? No Problem! Rapid Development via Mock APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dzone.com/articles/zero-code-rest-with-json-server&quot;&gt;Zero Code REST With json-server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Third-party tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tfiwm/grunt-json-server&quot;&gt;Grunt JSON Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/clue/docker-json-server&quot;&gt;Docker JSON Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/naholyr/json-server-gui&quot;&gt;JSON Server GUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dfsq/json-server-init&quot;&gt;JSON file generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maty21/json-server-extension&quot;&gt;JSON Server extension&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://thanks.typicode.com&quot;&gt;Supporters&lt;/a&gt; ✨&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cypress-io/cypress</title>
      <link>https://github.com/cypress-io/cypress</link>
      <description>&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What is Cypress?&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://badge.fury.io/js/cypress&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/cypress.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Install Cypress for Mac, Linux, or Windows, then &lt;a href=&quot;https://docs.cypress.io/guides/getting-started/installing-cypress.html&quot;&gt;get started&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install cypress --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add cypress --dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif&quot; alt=&quot;installing-cli e1693232&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;develop&lt;/code&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/cypress-io/cypress/tree/master.svg?style=svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; - &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/CONTRIBUTING.md&quot;&gt;Contributing Guideline&lt;/a&gt; which explains repo organization, linting, testing, and other steps.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green.svg&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/cypress-io/cypress/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;Let the world know your project is using Cypress.io to test with this cool badge&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.cypress.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg&quot; alt=&quot;Cypress.io&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>orkestral/venom</title>
      <link>https://github.com/orkestral/venom</link>
      <description>&lt;p&gt;Venom the more complete javascript library for Whatsapp, 100% Open Source.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Venom the more complete javascript library for Whatsapp, 100% Open Source&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://s2.click/venom.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/venom-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/venom-bot.svg?color=green&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/node/v/venom-bot&quot; alt=&quot;node&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/venom-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/venom-bot.svg&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://isitmaintained.com/project/orkestral/venom&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;http://isitmaintained.com/badge/resolution/orkestral/venom.svg&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://isitmaintained.com/project/orkestral/venom&quot; title=&quot;Percentage of issues still open&quot;&gt;&lt;img src=&quot;http://isitmaintained.com/badge/open/orkestral/venom.svg&quot; alt=&quot;Percentage of issues still open&quot;&gt;&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/orkestral/venom/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/orkestral/venom/build.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/orkestral/venom/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/orkestral/venom/lint.svg?label=lint&quot; alt=&quot;Lint Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/release-it/release-it&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%93%A6%F0%9F%9A%80-release--it-e10079.svg&quot; alt=&quot;release-it&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Venom is a high-performance system developed with JavaScript to create a bot for WhatsApp, support for creating any interaction, such as customer service, media sending, sentence recognition based on artificial intelligence and all types of design architecture for WhatsApp.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;Grupo de Suporte do Venom em português do Brasil | R$ 30 Mensais&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;🕷🕷 Functions Venom🕷🕷&lt;/h2&gt; 
&lt;p&gt;| | | | ---------------------------------------------------------- | --- | | Automatic QR Refresh | ✔ | | Send &lt;strong&gt;text, image, video, audio, files&lt;/strong&gt; | ✔ | | Get &lt;strong&gt;contacts, chats, groups, group members, Block List&lt;/strong&gt; | ✔ | | Send &lt;strong&gt;contacts &amp;amp; Multples Contacts&lt;/strong&gt; | ✔ | | Send &lt;strong&gt;Location&lt;/strong&gt; | ✔ | | Send &lt;strong&gt;Link Preview&lt;/strong&gt; | ✔ | | Send &lt;strong&gt;stickers&lt;/strong&gt; | ✔ | | Send &lt;strong&gt;stickers GIF&lt;/strong&gt; | ✔ | | Send stories &lt;strong&gt;text, image, video&lt;/strong&gt; | ✔ | | Multiple Sessions | ✔ | | Forward Messages | ✔ | | Receive message | ✔ | | insert user section | ✔ | | 📍 Send location!! | ✔ | | 🕸🕸 &lt;strong&gt;and much more&lt;/strong&gt; | ✔ |&lt;/p&gt; 
&lt;p&gt;Documentation at https://orkestral.github.io/venom/index.html&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm i --save venom-bot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or for &lt;a href=&quot;https://github.com/orkestral/venom/releases/tag/nightly&quot;&gt;Nightly releases&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm i --save https://github.com/orkestral/venom/releases/download/nightly/venom-bot-nightly.tgz
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Supports ES6
// import { create, Whatsapp } from &#39;venom-bot&#39;;
const venom = require(&#39;venom-bot&#39;);

venom
  .create()
  .then((client) =&amp;gt; {

  let time = 0;
  client.onStreamChange((state) =&amp;gt; {

    console.log(&#39;Connection status: &#39;, state);

    clearTimeout(time);
    if(state === &#39;CONNECTED&#39;){
     start(client);
    }
   //  DISCONNECTED when the mobile device is disconnected
    if (state === &#39;DISCONNECTED&#39; || state === &#39;SYNCING&#39;) {
      time = setTimeout(() =&amp;gt; {
        client.close();
       // process.exit(); //optional function if you work with only one session
      }, 80000);
    }

  })
  .catch((erro) =&amp;gt; {
    console.log(&#39;There was an error in the bot&#39;,erro);
  });

function start(client) {
  let inchat = await client.isInsideChat(); //wait until the page is in whatsapp chat
  if (inchat) {
    client.onMessage((message) =&amp;gt; {
      if (message.body === &#39;Hi&#39; &amp;amp;&amp;amp; message.isGroupMsg === false) {
        client
          .sendText(message.from, &#39;Welcome Venom 🕷&#39;)
          .then((result) =&amp;gt; {
            console.log(&#39;Result: &#39;, result); //return object success
          })
          .catch((erro) =&amp;gt; {
            console.error(&#39;Error when sending: &#39;, erro); //return object error
          });
      }
    });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;After executing &lt;code&gt;create()&lt;/code&gt; function, &lt;strong&gt;venom&lt;/strong&gt; will create an instance of whatsapp web. If you are not logged in, it will print a QR code in the terminal. Scan it with your phone and you are ready to go!&lt;/h5&gt; 
&lt;h5&gt;Venom will remember the session so there is no need to authenticate everytime.&lt;/h5&gt; 
&lt;h5&gt;Multiples sessions can be created at the same time by pasing a session name to &lt;code&gt;create()&lt;/code&gt; function:&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Init sales whatsapp bot
venom.create(&#39;sales&#39;).then((salesClient) =&amp;gt; {...});

// Init support whatsapp bot
venom.create(&#39;support&#39;).then((supportClient) =&amp;gt; {...});
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Optional create parameters&lt;/h2&gt; 
&lt;p&gt;Venom &lt;code&gt;create()&lt;/code&gt; method third parameter can have the following optional parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const venom = require(&#39;venom-bot&#39;);

venom
  .create(
    //session
    &#39;sessionName&#39;, //Pass the name of the client you want to start the bot
    //catchQR
    (base64Qrimg, asciiQR, attempts, urlCode) =&amp;gt; {
      console.log(&#39;Number of attempts to read the qrcode: &#39;, attempts);
      console.log(&#39;Terminal qrcode: &#39;, asciiQR);
      console.log(&#39;base64 image string qrcode: &#39;, base64Qrimg);
      console.log(&#39;urlCode (data-ref): &#39;, urlCode);
    },
    // statusFind
    (statusSession, session) =&amp;gt; {
      console.log(&#39;Status Session: &#39;, statusSession); //return isLogged || notLogged || browserClose || qrReadSuccess || qrReadFail || autocloseCalled || desconnectedMobile || deleteToken
      //Create session wss return &quot;serverClose&quot; case server for close
      console.log(&#39;Session name: &#39;, session);
    },
    // options
    {
      folderNameToken: &#39;tokens&#39;, //folder name when saving tokens
      mkdirFolderToken: &#39;&#39;, //folder directory tokens, just inside the venom folder, example:  { mkdirFolderToken: &#39;/node_modules&#39;, } //will save the tokens folder in the node_modules directory
      headless: true, // Headless chrome
      devtools: false, // Open devtools by default
      useChrome: true, // If false will use Chromium instance
      debug: false, // Opens a debug session
      logQR: true, // Logs QR automatically in terminal
      browserWS: &#39;&#39;, // If u want to use browserWSEndpoint
      browserArgs: [&#39;&#39;], // Parameters to be added into the chrome browser instance
      puppeteerOptions: {}, // Will be passed to puppeteer.launch
      disableSpins: true, // Will disable Spinnies animation, useful for containers (docker) for a better log
      disableWelcome: true, // Will disable the welcoming message which appears in the beginning
      updatesLog: true, // Logs info updates automatically in terminal
      autoClose: 60000, // Automatically closes the venom-bot only when scanning the QR code (default 60 seconds, if you want to turn it off, assign 0 or false)
      createPathFileToken: false, //creates a folder when inserting an object in the client&#39;s browser, to work it is necessary to pass the parameters in the function create browserSessionToken
    },
    // BrowserSessionToken
    // To receive the client&#39;s token use the function await client.getSessionTokenBrowser()
    {
      WABrowserId: &#39;&quot;UnXjH.....&quot;&#39;,
      WASecretBundle:
        &#39;{&quot;key&quot;:&quot;+i/nRgWJ....&quot;,&quot;encKey&quot;:&quot;kGdMR5t....&quot;,&quot;macKey&quot;:&quot;+i/nRgW....&quot;}&#39;,
      WAToken1: &#39;&quot;0i8....&quot;&#39;,
      WAToken2: &#39;&quot;1@lPpzwC....&quot;&#39;,
    }
  )
  .then((client) =&amp;gt; {

  let time = 0;
  client.onStreamChange((state) =&amp;gt; {

    console.log(&#39;Connection status: &#39;, state);

    clearTimeout(time);
    if(state === &#39;CONNECTED&#39;){
     start(client);
    }
   //  DISCONNECTED when the mobile device is disconnected
    if (state === &#39;DISCONNECTED&#39; || state === &#39;SYNCING&#39;) {
      time = setTimeout(() =&amp;gt; {
        client.close();
       // process.exit(); //optional function if you work with only one session
      }, 80000);
    }

  })
  .catch((erro) =&amp;gt; {
    console.log(&#39;There was an error in the bot&#39;,erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Callback Status Session&lt;/h2&gt; 
&lt;p&gt;Gets the return if the session is &lt;code&gt;isLogged&lt;/code&gt; or &lt;code&gt;notLogged&lt;/code&gt; or &lt;code&gt;browserClose&lt;/code&gt; or &lt;code&gt;qrReadSuccess&lt;/code&gt; or &lt;code&gt;qrReadFail&lt;/code&gt; or &lt;code&gt;autocloseCalled&lt;/code&gt; or &lt;code&gt;desconnectedMobile&lt;/code&gt; or &lt;code&gt;deleteToken&lt;/code&gt; or &lt;code&gt;Create session wss return &quot;serverClose&quot; case server for close&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;| Status | Condition | | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | | &lt;code&gt;isLogged&lt;/code&gt; | When the user is already logged in to the browser | | &lt;code&gt;notLogged&lt;/code&gt; | When the user is not connected to the browser, it is necessary to scan the QR code through the cell phone in the option WhatsApp Web | | &lt;code&gt;browserClose&lt;/code&gt; | If the browser is closed this parameter is returned | | &lt;code&gt;qrReadSuccess&lt;/code&gt; | If the user is not logged in, the QR code is passed on the terminal a callback is returned. After the correct reading by cell phone this parameter is returned | | &lt;code&gt;qrReadFail&lt;/code&gt; | If the browser stops when the QR code scan is in progress, this parameter is returned | | &lt;code&gt;autocloseCalled&lt;/code&gt; | The browser was closed using the autoClose command | | &lt;code&gt;desconnectedMobile&lt;/code&gt; | Client has desconnected in to mobile | | &lt;code&gt;serverClose&lt;/code&gt; | Client has desconnected in to wss | | &lt;code&gt;deleteToken&lt;/code&gt; | If you pass true within the function &lt;code&gt;client.getSessionTokenBrowser(true)&lt;/code&gt; |&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const venom = require(&#39;venom-bot&#39;);
venom
  .create(
    &#39;sessionName&#39;,
    undefined,
    (statusSession, session) =&amp;gt; {
      console.log(&#39;Status Session: &#39;, statusSession);
      //return isLogged || notLogged || browserClose || qrReadSuccess || qrReadFail || autocloseCalled || desconnectedMobile || deleteToken
      //Create session wss return &quot;serverClose&quot; case server for close
      console.log(&#39;Session name: &#39;, session);
    },
    undefined
  )
  .then((client) =&amp;gt; {
      let time = 0;
  client.onStreamChange((state) =&amp;gt; {

    console.log(&#39;Connection status: &#39;, state);

    clearTimeout(time);
    if(state === &#39;CONNECTED&#39;){
     start(client);
    }
   //  DISCONNECTED when the mobile device is disconnected
    if (state === &#39;DISCONNECTED&#39; || state === &#39;SYNCING&#39;) {
      time = setTimeout(() =&amp;gt; {
        client.close();
       // process.exit(); //optional function if you work with only one session
      }, 80000);
    }
  })
  .catch((erro) =&amp;gt; {
     console.log(&#39;There was an error in the bot&#39;, erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Exporting QR Code&lt;/h2&gt; 
&lt;p&gt;By default QR code will appear on the terminal. If you need to pass the QR somewhere else heres how:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const fs = require(&#39;fs&#39;);
const venom = require(&#39;venom-bot&#39;);

venom
  .create(
    &#39;sessionName&#39;,
    (base64Qr, asciiQR, attempts, urlCode) =&amp;gt; {
      console.log(asciiQR); // Optional to log the QR in the terminal
      var matches = base64Qr.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/),
        response = {};

      if (matches.length !== 3) {
        return new Error(&#39;Invalid input string&#39;);
      }
      response.type = matches[1];
      response.data = new Buffer.from(matches[2], &#39;base64&#39;);

      var imageBuffer = response;
      require(&#39;fs&#39;).writeFile(
        &#39;out.png&#39;,
        imageBuffer[&#39;data&#39;],
        &#39;binary&#39;,
        function (err) {
          if (err != null) {
            console.log(err);
          }
        }
      );
    },
    undefined,
    { logQR: false }
  )
  .then((client) =&amp;gt; {
      let time = 0;
  client.onStreamChange((state) =&amp;gt; {

    console.log(&#39;Connection status: &#39;, state);

    clearTimeout(time);
    if(state === &#39;CONNECTED&#39;){
     start(client);
    }
   //  DISCONNECTED when the mobile device is disconnected
    if (state === &#39;DISCONNECTED&#39; || state === &#39;SYNCING&#39;) {
      time = setTimeout(() =&amp;gt; {
        client.close();
       // process.exit(); //optional function if you work with only one session
      }, 80000);
    }
  })
  .catch((erro) =&amp;gt; {
     console.log(&#39;There was an error in the bot&#39;, erro);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Downloading Files&lt;/h2&gt; 
&lt;p&gt;Puppeteer takes care of the file downloading. The decryption is being done as fast as possible (outruns native methods). Supports big files!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import fs = require(&#39;fs&#39;);
import mime = require(&#39;mime-types&#39;);

client.onMessage( async (message) =&amp;gt; {
  if (message.isMedia === true || message.isMMS === true) {
    const buffer = await client.decryptFile(message);
    // At this point you can do whatever you want with the buffer
    // Most likely you want to write it into a file
    const fileName = `some-file-name.${mime.extension(message.mimetype)}`;
    await fs.writeFile(fileName, buffer, (err) =&amp;gt; {
      ...
    });
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basic Functions (usage)&lt;/h2&gt; 
&lt;p&gt;Not every available function is listed, for further look, every function available can be found in &lt;a href=&quot;https://raw.githubusercontent.com/orkestral/venom/master/src/api/layers&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/orkestral/venom/master/src/lib/wapi/functions&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Chatting&lt;/h3&gt; 
&lt;h5&gt;Here, &lt;code&gt;chatId&lt;/code&gt; could be &lt;code&gt;&amp;lt;phoneNumber&amp;gt;@c.us&lt;/code&gt; or &lt;code&gt;&amp;lt;phoneNumber&amp;gt;-&amp;lt;groupId&amp;gt;@g.us&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
//send an image in Status (history)
await client.sendStatusImg(&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Alan_Turing_Aged_16_%28cropped%29.jpg/300px-Alan_Turing_Aged_16_%28cropped%29.jpg&quot;, &quot;test&quot;)
    .then((result) =&amp;gt; {
     console.log(&#39;Result image: &#39;, result); //return object success
   }).catch((erro) =&amp;gt; {
     console.error(&#39;Error when sending image: &#39;, erro); //return object error
   });

//send an text in Status (history)
await client.sendStatusText(&quot;Água mole em pedra dura tanto bate até que fura&quot;).then((result) =&amp;gt; {
  console.log(&#39;Result text&#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending text: &#39;, erro);//return object error
  });

//send an video in Status (history)
await client.sendStatusVideo(&quot;test.mp4&quot;, &quot;test&quot;).then((result) =&amp;gt; {
  console.log(&#39;Result video&#39;, result);
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending  video: &#39;, erro);
  });

// Send contact
await client
  .sendContactVcard(&#39;000000000000@c.us&#39;, &#39;111111111111@c.us&#39;, &#39;Name of contact&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send a list of contact cards
await client
  .sendContactVcardList(&#39;000000000000@c.us&#39;, [
    &#39;111111111111@c.us&#39;,
    &#39;222222222222@c.us&#39;,
  ])
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send basic text
await client
  .sendText(&#39;000000000000@c.us&#39;, &#39;👋 Hello from venom!&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send location
await client
  .sendLocation(&#39;000000000000@c.us&#39;, &#39;-13.6561589&#39;, &#39;-69.7309264&#39;, &#39;Brasil&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Automatically sends a link with the auto generated link preview. You can also add a custom message to be added.
await client
  .sendLinkPreview(
    &#39;000000000000@c.us&#39;,
    &#39;https://www.youtube.com/watch?v=V1bFr2SWP1I&#39;,
    &#39;Kamakawiwo ole&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send image (you can also upload an image using a valid HTTP protocol)
await client
  .sendImage(
    &#39;000000000000@c.us&#39;,
    &#39;path/to/img.jpg&#39;,
    &#39;image-name&#39;,
    &#39;Caption text&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send file (venom will take care of mime types, just need the path)
// you can also upload an image using a valid HTTP protocol
await client
  .sendFile(
    &#39;000000000000@c.us&#39;,
    &#39;path/to/file.pdf&#39;,
    &#39;file_name&#39;,
    &#39;See my file in pdf&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Sends file
// base64 parameter should have mime type already defined
await client
  .sendFileFromBase64(
    &#39;000000000000@c.us&#39;,
    base64PDF,
    &#39;file_name.pdf&#39;,
    &#39;See my file in pdf&#39;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Generates sticker from the provided animated gif image and sends it (Send image as animated sticker)
// image path imageBase64 A valid gif and webp image is required. You can also send via http/https (http://www.website.com/img.gif)
await client
  .sendImageAsStickerGif(&#39;000000000000@c.us&#39;, &#39;./image.gif&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Generates sticker from given image and sends it (Send Image As Sticker)
// image path imageBase64 A valid png, jpg and webp image is required. You can also send via http/https (http://www.website.com/img.jpg)
await client
  .sendImageAsSticker(&#39;000000000000@c.us&#39;, &#39;./image.jpg&#39;)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Send @tagged message
await client.sendMentioned(
  &#39;000000000000@c.us&#39;,
  &#39;Hello @5218113130740 and @5218243160777!&#39;,
  [&#39;5218113130740&#39;, &#39;5218243160777&#39;]
);

// Reply to a message
await client.reply(
  &#39;000000000000@c.us&#39;,
  &#39;This is a reply!&#39;,
  message.id.toString()
);

// Reply to a message with mention
await client.reply(
  &#39;000000000000@c.us&#39;,
  &#39;Hello @5218113130740 and @5218243160777! This is a reply with mention!&#39;,
  message.id.toString(),
  [&#39;5218113130740&#39;, &#39;5218243160777&#39;]
);

// Send message with options
await client.
        .sendMessageOptions(
          &#39;000000000000@c.us&#39;,
          &#39;This is a reply!&#39;,
           {
              quotedMessageId: reply,
            }
        )
        .then((retorno) =&amp;gt; {
          resp = retorno;
        })
        .catch((e) =&amp;gt; {
          console.log(e);
        });

// Send gif
await client.sendVideoAsGif(
  &#39;000000000000@c.us&#39;,
  &#39;path/to/video.mp4&#39;,
  &#39;video.gif&#39;,
  &#39;Gif image file&#39;
);

// Forwards messages
await client.forwardMessages(
  &#39;000000000000@c.us&#39;,
  [message.id.toString()],
  true
);

// Send seen ✔️✔️
await client.sendSeen(&#39;000000000000@c.us&#39;);

// Start typing...
await client.startTyping(&#39;000000000000@c.us&#39;);

// Stop typing
await client.stopTyping(&#39;000000000000@c.us&#39;);

// Set chat state (0: Typing, 1: Recording, 2: Paused)
await client.setChatState(&#39;000000000000@c.us&#39;, 0 | 1 | 2);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Retrieving Data&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Retrieves all grups
const groups = await client.getAllChatsGroups();

//Retrieves all chats Contacts
const contacts = await client.getAllChatsContacts();

//Retrieves all chats Transmission list
const transmission = await client.getAllChatsTransmission();

//Retrieve all contacts new messages
const contactNewMsg = await client.getChatContactNewMsg();

//Retrieve all groups new messages
const groupNewMsg = await client.getChatGroupNewMsg();

// Returns a list of mute and non-mute users
// &quot;all&quot; List all mutes
// &quot;toMute&quot; List all silent chats
// &quot;noMute&quot; List all chats without silence
const listMute = await client.getListMute(&#39;all&#39;);

// Retrieve the browser session token
// if you want to delete the token file -&amp;gt; const browserSessionToken = await client.getSessionTokenBrowser(true);
const browserSessionToken = await client.getSessionTokenBrowser();

// Calls your list of blocked contacts (returns an array)
const getBlockList = await client.getBlockList();

// Retrieve contacts
const contacts = await client.getAllContacts();

// Retrieve messages in chat
const Messages = await client.getAllMessagesInChat(&#39;000000000000@c.us&#39;);

// Retrieve more chat message
const moreMessages = await client.loadEarlierMessages(&#39;000000000000@c.us&#39;);

// Retrieve all messages in chat
const allMessages = await client.loadAndGetAllMessagesInChat(
  &#39;000000000000@c.us&#39;
);

// Retrieve contact status
const status = await client.getStatus(&#39;000000000000@c.us&#39;);

// Retrieve user profile
const user = await client.getNumberProfile(&#39;000000000000@c.us&#39;);

// Retrieve all unread message
const messages = await client.getAllUnreadMessages();

// Retrieve all chats
const chats = await client.getAllChats();

// Retrieve all groups
const chats = await client.getAllGroups();

// Retrieve profile fic (as url)
const url = await client.getProfilePicFromServer(&#39;000000000000@c.us&#39;);

// Retrieve chat/conversation
const chat = await client.getChat(&#39;000000000000@c.us&#39;);

// Check if the number exists
const chat = await client.checkNumberStatus(&#39;000000000000@c.us&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Group Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// groupId or chatId: leaveGroup 52123123-323235@g.us

// Leave group
await client.leaveGroup(&#39;00000000-000000@g.us&#39;);

// Get group members
await client.getGroupMembers(&#39;00000000-000000@g.us&#39;);

// Get group members ids
await client.getGroupMembersIds(&#39;00000000-000000@g.us&#39;);

// Generate group invite url link
await client.getGroupInviteLink(&#39;00000000-000000@g.us&#39;);

// Create group (title, participants to add)
await client.createGroup(&#39;Group name&#39;, [
  &#39;111111111111@c.us&#39;,
  &#39;222222222222@c.us&#39;,
]);

// Remove participant
await client.removeParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Add participant
await client.addParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Promote participant (Give admin privileges)
await client.promoteParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Demote particiapnt (Revoke admin privileges)
await client.demoteParticipant(&#39;00000000-000000@g.us&#39;, &#39;111111111111@c.us&#39;);

// Get group admins
await client.getGroupAdmins(&#39;00000000-000000@g.us&#39;);

// Return the group status, jid, description from it&#39;s invite link
await client.getGroupInfoFromInviteLink(InviteCode);

// Join a group using the group invite code
await client.joinGroup(InviteCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Profile Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Set client status
await client.setProfileStatus(&#39;On vacations! ✈️&#39;);

// Set client profile name
await client.setProfileName(&#39;Venom bot&#39;);

// Set client profile photo
await client.setProfilePic(&#39;path/to/image.jpg&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Device Functions&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Delete the Service Worker
await client.killServiceWorker();

// Load the service again
await client.restartService();

// Get device info
await client.getHostDevice();

// Get connection state
await client.getConnectionState();

// Get battery level
await client.getBatteryLevel();

// Is connected
await client.isConnected();

// Get whatsapp web version
await client.getWAVersion();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Listen to messages
client.onMessage(message =&amp;gt; {
  ...
})

// Listen to state changes
client.onStateChange(state =&amp;gt; {
  ...
});

// Listen to ack&#39;s
// See the status of the message when sent.
// When receiving the confirmation object, &quot;ack&quot; may return a number, look {@link AckType} for details:
// -7 = MD_DOWNGRADE,
// -6 = INACTIVE,
// -5 = CONTENT_UNUPLOADABLE,
// -4 = CONTENT_TOO_BIG,
// -3 = CONTENT_GONE,
// -2 = EXPIRED,
// -1 = FAILED,
//  0 = CLOCK,
//  1 = SENT,
//  2 = RECEIVED,
//  3 = READ,
//  4 = PLAYED =

client.onAck(ack =&amp;gt; {
  ...
});

// Listen to live location
// chatId: &#39;phone@c.us&#39;
client.onLiveLocation(&quot;000000000000@c.us&quot;, (liveLocation) =&amp;gt; {
  ...
});

// chatId looks like this: &#39;5518156745634-1516512045@g.us&#39;
// Event interface is in here: https://github.com/s2click/venom/blob/master/src/api/model/participant-event.ts
client.onParticipantsChanged(&quot;000000000000@c.us&quot;, (event) =&amp;gt; {
  ...
});

// Listen when client has been added to a group
client.onAddedToGroup(chatEvent =&amp;gt; {
  ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Pin chat and Unpin chat messages with true or false
// Pin chat, non-existent (optional)

await client
  .pinChat(chatId, true, false)
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

///mute a contact
await client
  .sendMute(
    &#39;000000000000@c.us&#39;, //contact mute
    30, //duration of silence, example: 30 minutes
    &#39;minutes&#39; ///kind of silence &quot;hours&quot; &quot;minutes&quot; &quot;year&quot;
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

///unmute contact
await client
  .sendMute(
    &#39;000000000000@c.us&#39; //contact unmute
  )
  .then((result) =&amp;gt; {
    console.log(&#39;Result: &#39;, result); //return object success
  })
  .catch((erro) =&amp;gt; {
    console.error(&#39;Error when sending: &#39;, erro); //return object error
  });

// Change the theme
// string types &quot;dark&quot; or &quot;light&quot;
await client.setTheme(&#39;dark&#39;);

// Receive the current theme
// returns string light or dark
await client.getTheme();

// Delete chat
await client.deleteChat(&#39;000000000000@c.us&#39;);

// Clear chat messages
await client.clearChat(&#39;000000000000@c.us&#39;);

// Archive and unarchive chat messages with true or false
await client.archiveChat(chatId, true);

// Delete message (last parameter: delete only locally)
await client.deleteMessage(&#39;000000000000@c.us&#39;, message.id.toString(), false);

// Mark chat as not seen (returns true if it works)
await client.markUnseenMessage(&#39;000000000000@c.us&#39;);

// Blocks a user (returns true if it works)
await client.blockContact(&#39;000000000000@c.us&#39;);

// Unlocks contacts (returns true if it works)
await client.unblockContact(&#39;000000000000@c.us&#39;);

// Retrieve a number profile / check if contact is a valid whatsapp number
const profile = await client.getNumberProfile(&#39;000000000000@c.us&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Misc&lt;/h2&gt; 
&lt;p&gt;There are some tricks for a better usage of venom.&lt;/p&gt; 
&lt;h4&gt;Keep session alive:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// function to detect conflits and change status
// Force it to keep the current session
// Possible state values:
// CONFLICT
// CONNECTED
// DEPRECATED_VERSION
// OPENING
// PAIRING
// PROXYBLOCK
// SMB_TOS_BLOCK
// TIMEOUT
// TOS_BLOCK
// UNLAUNCHED
// UNPAIRED
// UNPAIRED_IDLE
client.onStateChange((state) =&amp;gt; {
  console.log(&#39;State changed: &#39;, state);
  // force whatsapp take over
  if (&#39;CONFLICT&#39;.includes(state)) client.useHere();
  // detect disconnect on whatsapp
  if (&#39;UNPAIRED&#39;.includes(state)) console.log(&#39;logout&#39;);
});

// DISCONNECTED
// SYNCING
// RESUMING
// CONNECTED
let time = 0;
client.onStreamChange((state) =&amp;gt; {
  console.log(&#39;State Connection Stream: &#39; + state);
  clearTimeout(time);
  if (state === &#39;DISCONNECTED&#39; || state === &#39;SYNCING&#39;) {
    time = setTimeout(() =&amp;gt; {
      client.close();
    }, 80000);
  }
});

// function to detect incoming call
client.onIncomingCall(async (call) =&amp;gt; {
  console.log(call);
  client.sendText(call.peerJid, &quot;Sorry, I still can&#39;t answer calls&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Closing (saving) sessions&lt;/h4&gt; 
&lt;p&gt;Close the session properly to ensure the session is saved for the next time you log in (So it won&#39;t ask for QR scan again). So instead of CTRL+C,&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Catch ctrl+C
process.on(&#39;SIGINT&#39;, function() {
  client.close();
});

// Try-catch close
try {
   ...
} catch (error) {
   client.close();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Auto closing unsynced sessions&lt;/h3&gt; 
&lt;p&gt;The auto close is enabled by default and the timeout is set to 60 sec. Receives the time in milliseconds to countdown until paired.&lt;/p&gt; 
&lt;p&gt;Use &quot;autoClose: 0 | false&quot; to disable auto closing.&lt;/p&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Building venom is really simple altough it contains 3 main projects inside&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Wapi project&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:wapi
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Middleware&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:middleware
&amp;gt; npm run build:jsQR
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Venom&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build:venom
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the entire project just run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;Maintainers are needed, I cannot keep with all the updates by myself. If you are interested please open a Pull Request.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MetaMask/metamask-extension</title>
      <link>https://github.com/MetaMask/metamask-extension</link>
      <description>&lt;p&gt;🌐 🔌 The MetaMask browser extension enables browsing Ethereum blockchain enabled websites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MetaMask Browser Extension&lt;/h1&gt; 
&lt;h2&gt;Hey! We are hiring JavaScript Engineers! &lt;a href=&quot;https://boards.greenhouse.io/consensys/jobs/2572388&quot;&gt;Apply here&lt;/a&gt;!&lt;/h2&gt; 
&lt;p&gt;You can find the latest version of MetaMask on &lt;a href=&quot;https://metamask.io/&quot;&gt;our official website&lt;/a&gt;. For help using MetaMask, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us&quot;&gt;User Support Site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360000682532-General&quot;&gt;general questions&lt;/a&gt;, &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360000682552-Feature-Requests-Ideas&quot;&gt;feature requests&lt;/a&gt;, or &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360001751291-Developer-Questions&quot;&gt;developer questions&lt;/a&gt;, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics&quot;&gt;Community Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.&lt;/p&gt; 
&lt;p&gt;For up to the minute news, follow our &lt;a href=&quot;https://twitter.com/metamask_io&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://medium.com/metamask&quot;&gt;Medium&lt;/a&gt; pages.&lt;/p&gt; 
&lt;p&gt;To learn how to develop MetaMask-compatible applications, visit our &lt;a href=&quot;https://metamask.github.io/metamask-docs/&quot;&gt;Developer Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to contribute to the MetaMask project itself, visit our &lt;a href=&quot;https://github.com/MetaMask/metamask-extension/tree/develop/docs&quot;&gt;Internal Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building locally&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; version 14 
  &lt;ul&gt; 
   &lt;li&gt;If you are using &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (recommended) running &lt;code&gt;nvm use&lt;/code&gt; will automatically choose the right node version for you.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://yarnpkg.com/en/docs/install&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;yarn setup&lt;/code&gt; (not the usual install command)&lt;/li&gt; 
 &lt;li&gt;Copy the &lt;code&gt;.metamaskrc.dist&lt;/code&gt; file to &lt;code&gt;.metamaskrc&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Replace the &lt;code&gt;INFURA_PROJECT_ID&lt;/code&gt; value with your own personal &lt;a href=&quot;https://infura.io/docs&quot;&gt;Infura Project ID&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;If debugging MetaMetrics, you&#39;ll need to add a value for &lt;code&gt;SEGMENT_WRITE_KEY&lt;/code&gt; &lt;a href=&quot;https://segment.com/docs/connections/find-writekey/&quot;&gt;Segment write key&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Build the project to the &lt;code&gt;./dist/&lt;/code&gt; folder with &lt;code&gt;yarn dist&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Optionally, to start a development build (e.g. with logging and file watching) run &lt;code&gt;yarn start&lt;/code&gt; instead. 
  &lt;ul&gt; 
   &lt;li&gt;To start the &lt;a href=&quot;https://github.com/facebook/react-devtools&quot;&gt;React DevTools&lt;/a&gt; and &lt;a href=&quot;http://extension.remotedev.io&quot;&gt;Redux DevTools Extension&lt;/a&gt; alongside the app, use &lt;code&gt;yarn start:dev&lt;/code&gt;. 
    &lt;ul&gt; 
     &lt;li&gt;React DevTools will open in a separate window; no browser extension is required&lt;/li&gt; 
     &lt;li&gt;Redux DevTools will need to be installed as a browser extension. Open the Redux Remote Devtools to access Redux state logs. This can be done by either right clicking within the web browser to bring up the context menu, expanding the Redux DevTools panel and clicking Open Remote DevTools OR clicking the Redux DevTools extension icon and clicking Open Remote DevTools. 
      &lt;ul&gt; 
       &lt;li&gt;You will also need to check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host &lt;code&gt;localhost&lt;/code&gt;, port &lt;code&gt;8000&lt;/code&gt;, secure connection checkbox unchecked)&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Uncompressed builds can be found in &lt;code&gt;/dist&lt;/code&gt;, compressed builds can be found in &lt;code&gt;/builds&lt;/code&gt; once they&#39;re built.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Running Tests&lt;/h3&gt; 
&lt;p&gt;Run tests with &lt;code&gt;yarn test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also test with a continuously watching process, via &lt;code&gt;yarn watch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the linter by itself with &lt;code&gt;yarn lint&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%20%20%20%20%20locked-screen%0A%20%20%20%20%20restore-vault%0A%20%20%20%20%20identicon%0A%20%20%20%20%20config%0A%20%20%20%20%20info%0A%20%20%20%5D%0A%20%20%20%5Breducers%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20metamask%0A%20%20%20%20%20identities%0A%20%20%20%5D%0A%20%20%20%5Bactions%7C%0A%20%20%20%20%20%5BbackgroundConnection%5D%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%5D%3A-%3E%5Bactions%5D%0A%20%20%20%5Bactions%5D%3A-%3E%5Breducers%5D%0A%20%20%20%5Breducers%5D%3A-%3E%5Bcomponents%5D%0A%5D%0A%0A%5Bweb%20dapp%7C%0A%20%20%5Bui%20code%5D%0A%20%20%5Bweb3%5D%0A%20%20%5Bmetamask-inpage%5D%0A%20%20%0A%20%20%5B%3Cactor%3Eui%20developer%5D%0A%20%20%5Bui%20developer%5D-%3E%5Bui%20code%5D%0A%20%20%5Bui%20code%5D%3C-%3E%5Bweb3%5D%0A%20%20%5Bweb3%5D%3C-%3E%5Bmetamask-inpage%5D%0A%5D%0A%0A%5Bmetamask-background%7C%0A%20%20%5Bprovider-engine%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bid%20store%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%3E%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%3C-%3E%5Bid%20store%5D%0A%20%20%5Bconfig%20manager%7C%0A%20%20%20%20%5Brpc%20configuration%5D%0A%20%20%20%20%5Bencrypted%20keys%5D%0A%20%20%20%20%5Bwallet%20nicknames%5D%0A%20%20%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%5Bconfig%20manager%5D%0A%20%20%5Bid%20store%5D%3C-%3E%5Bconfig%20manager%5D%0A%5D%0A%0A%5Buser%5D%3C-%3E%5Bmetamask-ui%5D%0A%0A%5Buser%5D%3C%3A--%3A%3E%5Bweb%20dapp%5D%0A%0A%5Bmetamask-contentscript%7C%0A%20%20%5Bplugin%20restart%20detector%5D%0A%20%20%5Brpc%20passthrough%5D%0A%5D%0A%0A%5Brpc%20%7C%0A%20%20%5Bethereum%20blockchain%20%7C%0A%20%20%20%20%5Bcontracts%5D%0A%20%20%20%20%5Baccounts%5D%0A%20%20%5D%0A%5D%0A%0A%5Bweb%20dapp%5D%3C%3A--%3A%3E%5Bmetamask-contentscript%5D%0A%5Bmetamask-contentscript%5D%3C-%3E%5Bmetamask-background%5D%0A%5Bmetamask-background%5D%3C-%3E%5Bmetamask-ui%5D%0A%5Bmetamask-background%5D%3C-%3E%5Brpc%5D%0A&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/architecture.png&quot; alt=&quot;Architecture Diagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build for Publishing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn dist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-chrome.md&quot;&gt;How to add custom build to Chrome&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-firefox.md&quot;&gt;How to add custom build to Firefox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/translating-guide.md&quot;&gt;How to add a new translation to MetaMask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/publishing.md&quot;&gt;Publishing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/trezor-emulator.md&quot;&gt;How to use the TREZOR emulator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/development/gource-viz.sh&quot;&gt;How to generate a visualization of this repository&#39;s development&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>zeroturnaround/sql-formatter</title>
      <link>https://github.com/zeroturnaround/sql-formatter</link>
      <description>&lt;p&gt;A whitespace formatter for different query languages&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SQL Formatter &lt;a href=&quot;https://npmjs.com/package/sql-formatter&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/sql-formatter.svg&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/zeroturnaround/sql-formatter&quot;&gt;&lt;img src=&quot;https://travis-ci.org/zeroturnaround/sql-formatter.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/zeroturnaround/sql-formatter?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/zeroturnaround/sql-formatter/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;SQL Formatter&lt;/strong&gt; is a JavaScript library for pretty-printing SQL queries. It started as a port of a &lt;a href=&quot;https://github.com/jdorn/sql-formatter&quot;&gt;PHP Library&lt;/a&gt;, but has since considerably diverged.&lt;/p&gt; 
&lt;p&gt;SQL formatter supports the following dialects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;sql&lt;/strong&gt; - &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL:2011&quot;&gt;Standard SQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;mariadb&lt;/strong&gt; - &lt;a href=&quot;https://mariadb.com/&quot;&gt;MariaDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;mysql&lt;/strong&gt; - &lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;postgresql&lt;/strong&gt; - &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;db2&lt;/strong&gt; - &lt;a href=&quot;https://www.ibm.com/analytics/us/en/technology/db2/&quot;&gt;IBM DB2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;plsql&lt;/strong&gt; - &lt;a href=&quot;http://www.oracle.com/technetwork/database/features/plsql/index.html&quot;&gt;Oracle PL/SQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;n1ql&lt;/strong&gt; - &lt;a href=&quot;http://www.couchbase.com/n1ql&quot;&gt;Couchbase N1QL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;redshift&lt;/strong&gt; - &lt;a href=&quot;https://docs.aws.amazon.com/redshift/latest/dg/cm_chap_SQLCommandRef.html&quot;&gt;Amazon Redshift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;spark&lt;/strong&gt; - &lt;a href=&quot;https://spark.apache.org/docs/latest/api/sql/index.html&quot;&gt;Spark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;tsql&lt;/strong&gt; - &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/sql-server/&quot;&gt;SQL Server Transact-SQL&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It does not support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stored procedures.&lt;/li&gt; 
 &lt;li&gt;Changing of the delimiter type to something else than &lt;code&gt;;&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;→ &lt;a href=&quot;https://zeroturnaround.github.io/sql-formatter/&quot;&gt;Try the demo.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Get the latest version from NPM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install sql-formatter
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage as library&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { format } from &#39;sql-formatter&#39;;

console.log(format(&#39;SELECT * FROM tbl&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT
  *
FROM
  tbl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also pass in configuration options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;format(&#39;SELECT * FROM tbl&#39;, {
  language: &#39;spark&#39;, // Defaults to &quot;sql&quot; (see the above list of supported dialects)
  indent: &#39;    &#39;, // Defaults to two spaces
  uppercase: bool, // Defaults to false (not safe to use when SQL dialect has case-sensitive identifiers)
  linesBetweenQueries: 2, // Defaults to 1
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Placeholders replacement&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Named placeholders
format(&quot;SELECT * FROM tbl WHERE foo = @foo&quot;, {
  params: {foo: &quot;&#39;bar&#39;&quot;}
}));

// Indexed placeholders
format(&quot;SELECT * FROM tbl WHERE foo = ?&quot;, {
  params: [&quot;&#39;bar&#39;&quot;]
}));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both result in:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;SELECT
  *
FROM
  tbl
WHERE
  foo = &#39;bar&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage from command line&lt;/h2&gt; 
&lt;p&gt;The CLI tool will be installed under &lt;code&gt;sql-formatter&lt;/code&gt; and may be invoked via &lt;code&gt;npx sql-formatter&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sql-formatter -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;usage: sql-formatter [-h] [-o OUTPUT] [-l {db2,mariadb,mysql,n1ql,plsql,postgresql,redshift,spark,sql,tsql}]
                     [-i N | -t] [-u] [--lines-between-queries N] [--version] [FILE]

SQL Formatter

positional arguments:
  FILE                  Input SQL file (defaults to stdin)

optional arguments:
  -h, --help            show this help message and exit
  -o OUTPUT, --output OUTPUT
                        File to write SQL output (defaults to stdout)
  -l {db2,mariadb,mysql,n1ql,plsql,postgresql,redshift,spark,sql,tsql},
  --language {db2,mariadb,mysql,n1ql,plsql,postgresql,redshift,spark,sql,tsql}
                        SQL Formatter dialect (defaults to basic sql)
  -i N, --indent N      Number of spaces to indent query blocks (defaults to 2)
  -t, --tab-indent      Indent query blocks with tabs instead of spaces
  -u, --uppercase       Capitalize language keywords
  --lines-between-queries N
                        How many newlines to insert between queries (separated by &quot;;&quot;)
  --version             show program&#39;s version number and exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, the tool takes queries from stdin and processes them to stdout but one can also name an input file name or use the &lt;code&gt;--output&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;echo &#39;select * from tbl where id = 3&#39; | sql-formatter -u
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT
  *
FROM
  tbl
WHERE
  id = 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage without NPM&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t use a module bundler, clone the repository, run &lt;code&gt;npm install&lt;/code&gt; and grab a file from &lt;code&gt;/dist&lt;/code&gt; directory to use inside a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. This makes SQL Formatter available as a global variable &lt;code&gt;window.sqlFormatter&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Make sure to run all checks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run check
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...and you&#39;re ready to poke us with a pull request.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/zeroturnaround/sql-formatter/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goldbergyoni/nodebestpractices</title>
      <link>https://github.com/goldbergyoni/nodebestpractices</link>
      <description>&lt;p&gt;✅ The Node.js best practices list (February 2021)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js Best Practices&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/twitter-s.png&quot; alt=&quot;nodepractices&quot;&gt;&lt;/a&gt; &lt;strong&gt;Follow us on Twitter!&lt;/strong&gt; &lt;a href=&quot;https://twitter.com/nodepractices/&quot;&gt;&lt;strong&gt;@nodepractices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Read in a different language: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt;&lt;strong&gt;CN&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt;&lt;strong&gt;BR&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt;&lt;strong&gt;RU&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt;&lt;strong&gt;PL&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.japanese.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/JA.png&quot; alt=&quot;JA&quot;&gt;&lt;strong&gt;JA&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#translations&quot;&gt;(&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt;&lt;strong&gt;ES&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt;&lt;strong&gt;FR&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt;&lt;strong&gt;HE&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt;&lt;strong&gt;KR&lt;/strong&gt;, &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt;&lt;strong&gt;TR&lt;/strong&gt; and &lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt;&lt;strong&gt;EU&lt;/strong&gt; in progress! )&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h6&gt;Built and maintained by our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#steering-committee&quot;&gt;Steering Committee&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#collaborators&quot;&gt;Collaborators&lt;/a&gt;&lt;/h6&gt; 
&lt;h1&gt;Latest Best Practices and News&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🇯🇵 Japanese translation:&lt;/strong&gt; Our guide is now also translated to Japanese! Courtesy of the amazing &lt;a href=&quot;https://github.com/YukiOta&quot;&gt;YukiOta&lt;/a&gt; and &lt;a href=&quot;https://github.com/YA21&quot;&gt;Yuta Azumi&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;✅ New best practice:&lt;/strong&gt; Bullet 6.8 by Josh Hemphill recommends &quot;Protect Users&#39; Passwords/Secrets using BCrypt or Script&quot;. It contains an in-depth explanation about when and why each option suits a specific project. Don&#39;t miss this short guide with a brief overview of the various hashing options&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🎊 60,000 stars!&lt;/strong&gt;: Our repo was starred and trusted by 60,100 developers. We&#39;re speechless&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome! 3 Things You Ought To Know First&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;1. You are reading dozens of the best Node.js articles -&lt;/strong&gt; this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. It is the largest compilation, and it is growing every week -&lt;/strong&gt; currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We&#39;d love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/writing-guidelines.md&quot;&gt;writing guidelines here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Best practices have additional info -&lt;/strong&gt; most bullets include a &lt;strong&gt;🔗Read More&lt;/strong&gt; link that expands on the practice with code examples, quotes from selected blogs, and more information&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#1-project-structure-practices&quot;&gt;Project Structure Practices (5)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#2-error-handling-practices&quot;&gt;Error Handling Practices (11) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Code Style Practices (12) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#4-testing-and-overall-quality-practices&quot;&gt;Testing And Overall Quality Practices (13) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#5-going-to-production-practices&quot;&gt;Going To Production Practices (19) &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#6-security-best-practices&quot;&gt;Security Practices (25)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#7-draft-performance-best-practices&quot;&gt;Performance Practices (2) (Work In Progress️ ✍️)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#8-docker-best-practices&quot;&gt;Docker Practices (15)&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;1. Project Structure Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.1 Structure your solution by components&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit &#39;Read More&#39; below to see examples of correct project structure&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It&#39;s also considered harder to scale-out when all the business units are not separated&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/breakintcomponents.md&quot;&gt;&lt;strong&gt;Read More: structure by components&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.2 Layer your components, keep the web layer within its boundaries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each component should contain &#39;layers&#39; - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (e.g. Express req, res) to business logic and data layers - this makes your application dependent on and accessible only by specific web frameworks&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, triggers from message queues, etc&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/createlayers.md&quot;&gt;&lt;strong&gt;Read More: layer your app&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.3 Wrap common utilities as npm packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In a large app that constitutes a large codebase, cross-cutting-concern utilities like a logger, encryption and alike, should be wrapped by your code and exposed as private npm packages. This allows sharing them among multiple codebases and projects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You&#39;ll have to invent your deployment and the dependency wheel&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/wraputilities.md&quot;&gt;&lt;strong&gt;Read More: Structure by feature&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.4 Separate Express &#39;app&#39; and &#39;server&#39;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid the nasty habit of defining the entire &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; app in a single huge file - separate your &#39;Express&#39; definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won&#39;t be a big pleasure to maintain hundreds of lines of code in a single file&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/separateexpress.md&quot;&gt;&lt;strong&gt;Read More: separate Express &#39;app&#39; and &#39;server&#39;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 1.5 Use environment aware, secure and hierarchical config&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like &lt;a href=&quot;https://www.npmjs.com/package/rc&quot;&gt;rc&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/nconf&quot;&gt;nconf&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/config&quot;&gt;config&lt;/a&gt;, and &lt;a href=&quot;https://www.npmjs.com/package/convict&quot;&gt;convict&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failing to satisfy any of the config requirements will simply bog down the development or DevOps team. Probably both&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/projectstructre/configguide.md&quot;&gt;&lt;strong&gt;Read More: configuration best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;2. Error Handling Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.1 Use Async-Await or promises for async error handling&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/asyncerrorhandling.md&quot;&gt;&lt;strong&gt;Read More: avoiding callbacks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.2 Use only the built-in Error object&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Many throw errors as a string or as some custom type – this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error – using only the built-in Error object (or an object that extends the built-in Error object) will increase uniformity and prevent loss of information&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When invoking some component, being uncertain which type of errors come in return – it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/useonlythebuiltinerror.md&quot;&gt;&lt;strong&gt;Read More: using the built-in error object&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.3 Distinguish operational vs programmer errors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read an undefined variable) refers to unknown code failures that dictate to gracefully restart the application&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal – keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/operationalvsprogrammererror.md&quot;&gt;&lt;strong&gt;Read More: operational vs programmer error&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.4 Handle errors centrally, not within a middleware&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not handling errors within a single place will lead to code duplication and probably to improperly handled errors&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/centralizedhandling.md&quot;&gt;&lt;strong&gt;Read More: handling errors in a centralized place&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.5 Document API errors using Swagger or GraphQL&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you&#39;re using GraphQL, you can utilize your schema and comments as well.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An API client might decide to crash and restart only because it received back an error it couldn’t understand. Note: the caller of your API might be you (very typical in a microservice environment)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/documentingusingswagger.md&quot;&gt;&lt;strong&gt;Read More: documenting API errors in Swagger or GraphQL&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.6 Exit the process gracefully when a stranger comes to town&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. Common practice suggests restarting the process carefully using a process management tool like &lt;a href=&quot;https://www.npmjs.com/package/forever&quot;&gt;Forever&lt;/a&gt; or &lt;a href=&quot;http://pm2.keymetrics.io/&quot;&gt;PM2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/shuttingtheprocess.md&quot;&gt;&lt;strong&gt;Read More: shutting the process&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.7 Use a mature logger to increase error visibility&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A set of mature logging tools like &lt;a href=&quot;https://github.com/pinojs/pino&quot;&gt;Pino&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/log4js&quot;&gt;Log4js&lt;/a&gt;, will speed-up error discovery and understanding. So forget about console.log&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/usematurelogger.md&quot;&gt;&lt;strong&gt;Read More: using a mature logger&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.8 Test error flows using your favorite test framework&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Whether professional automated QA or plain manual developer testing – Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha &amp;amp; Chai can handle this easily (see code examples within the &quot;Gist popup&quot;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without testing, whether automatically or manually, you can’t rely on your code to return the right errors. Without meaningful errors – there’s no error handling&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/testingerrorflows.md&quot;&gt;&lt;strong&gt;Read More: testing error flows&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.9 Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes, and slow parts that you were missing&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you’ll never be aware which are your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.10 Catch unhandled promise rejections&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any exception thrown within a promise will get swallowed and discarded unless a developer didn’t forget to explicitly handle it. Even if your code is subscribed to &lt;code&gt;process.uncaughtException&lt;/code&gt;! Overcome this by registering to the event &lt;code&gt;process.unhandledRejection&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your errors will get swallowed and leave no trace. Nothing to worry about&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/catchunhandledpromiserejection.md&quot;&gt;&lt;strong&gt;Read More: catching unhandled promise rejection&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.11 Fail fast, validate arguments using a dedicated library&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like &lt;a href=&quot;https://www.npmjs.com/package/ajv&quot;&gt;ajv&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;Joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider this – your function expects a numeric argument “Discount” which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/failfast.md&quot;&gt;&lt;strong&gt;Read More: failing fast&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 2.12 Always await promises before returning to avoid a partial stacktrace&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always do &lt;code&gt;return await&lt;/code&gt; when returning a promise to benefit full error stacktrace. If a function returns a promise, that function must be declared as &lt;code&gt;async&lt;/code&gt; function and explicitly &lt;code&gt;await&lt;/code&gt; the promise before returning it&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The function that returns a promise without awaiting won&#39;t appear in the stacktrace. Such missing frames would probably complicate the understanding of the flow that leads to the error, especially if the cause of the abnormal behavior is inside of the missing function&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/errorhandling/returningpromises.md&quot;&gt;&lt;strong&gt;Read More: returning promises&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;3. Code Style Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.1 Use ESLint&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;a href=&quot;https://eslint.org&quot;&gt;ESLint&lt;/a&gt; is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt;prettier&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/js-beautify&quot;&gt;beautify&lt;/a&gt; are more powerful in formatting the fix and work in conjunction with ESLint&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project&#39;s code style&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/codestylepractices/eslint_prettier.md&quot;&gt;&lt;strong&gt;Read More: Using ESLint and Prettier&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.2 Node.js specific plugins&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-node&quot;&gt;eslint-plugin-node&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;eslint-plugin-node-security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as a path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.3 Start a Codeblock&#39;s Curly Braces on the Same Line&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The opening curly braces of a code block should be on the same line as the opening statement&lt;/p&gt; 
&lt;h3&gt;Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function someFunction() {
  // code block
}

// Avoid
function someFunction()
{
  // code block
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://stackoverflow.com/questions/3641519/why-does-a-results-vary-based-on-curly-brace-placement&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;Why do results vary based on curly brace placement?&quot; (StackOverflow)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.4 Separate your statements properly&lt;/h2&gt; 
&lt;p&gt;No matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use ESLint to gain awareness about separation concerns. &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; or &lt;a href=&quot;https://standardjs.com/&quot;&gt;Standardjs&lt;/a&gt; can automatically resolve these issues.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As seen in the previous section, JavaScript&#39;s interpreter automatically adds a semicolon at the end of a statement if there isn&#39;t one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediately invoked function expressions to prevent most of the unexpected errors.&lt;/p&gt; 
&lt;h3&gt;Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
function doThing() {
    // ...
}

doThing()

// Do

const items = [1, 2, 3]
items.forEach(console.log)

// Avoid — throws exception
const m = new Map()
const a = [1,2,3]
[...m.values()].forEach(console.log)
&amp;gt; [...m.values()].forEach(console.log)
&amp;gt;  ^^^
&amp;gt; SyntaxError: Unexpected token ...

// Avoid — throws exception
const count = 2 // it tries to run 2(), but 2 is not a function
(function doSomething() {
  // do something amazing
}())
// put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs altogether
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://eslint.org/docs/rules/semi&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;Semi ESLint rule&quot;&lt;/a&gt; 🔗 &lt;a href=&quot;https://eslint.org/docs/rules/no-unexpected-multiline&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; &quot;No unexpected multiline ESLint rule&quot;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.5 Name your functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you&#39;re looking at when checking a memory snapshot&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.6 Use naming conventions for variables, constants, functions and classes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use &lt;strong&gt;&lt;em&gt;lowerCamelCase&lt;/em&gt;&lt;/strong&gt; when naming constants, variables and functions and &lt;strong&gt;&lt;em&gt;UpperCamelCase&lt;/em&gt;&lt;/strong&gt; (capital first letter as well) when naming classes. This will help you to easily distinguish between plain variables/functions, and classes that require instantiation. Use descriptive names, but try to keep them short&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; JavaScript is the only language in the world that allows invoking a constructor (&quot;Class&quot;) directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase&lt;/p&gt; 
&lt;h3&gt;3.6 Code Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// for class name we use UpperCamelCase
class SomeClassExample {}

// for const names we use the const keyword and lowerCamelCase
const config = {
  key: &quot;value&quot;,
};

// for variables and functions names we use lowerCamelCase
let someVariableExample = &quot;value&quot;;
function doSomething() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.7 Prefer const over let. Ditch the var&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using &lt;code&gt;const&lt;/code&gt; means that once a variable is assigned, it cannot be reassigned. Preferring &lt;code&gt;const&lt;/code&gt; will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use &lt;code&gt;let&lt;/code&gt; to declare it. Another important aspect of &lt;code&gt;let&lt;/code&gt; is that a variable declared using it is only available in the block scope in which it was defined. &lt;code&gt;var&lt;/code&gt; is function scoped, not block-scoped, and &lt;a href=&quot;https://hackernoon.com/why-you-shouldnt-use-var-anymore-f109a58b9b70&quot;&gt;shouldn&#39;t be used in ES6&lt;/a&gt; now that you have &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; at your disposal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging becomes way more cumbersome when following a variable that frequently changes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75&quot;&gt;&lt;strong&gt;Read more: JavaScript ES6+: var, let, or const?&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.8 Require modules first, not inside functions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.9 Require modules by folders, as opposed to the files directly&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When developing a module/library in a folder, place an index.js file that exposes the module&#39;s internals so every consumer will pass through it. This serves as an &#39;interface&#39; to your module and eases future changes without breaking the contract&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Changing the internal structure of files or the signature may break the interface with clients&lt;/p&gt; 
&lt;h3&gt;3.9 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Do
module.exports.SMSProvider = require(&quot;./SMSProvider&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver&quot;);

// Avoid
module.exports.SMSProvider = require(&quot;./SMSProvider/SMSProvider.js&quot;);
module.exports.SMSNumberResolver = require(&quot;./SMSNumberResolver/SMSNumberResolver.js&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.10 Use the &lt;code&gt;===&lt;/code&gt; operator&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Prefer the strict equality operator &lt;code&gt;===&lt;/code&gt; over the weaker abstract equality operator &lt;code&gt;==&lt;/code&gt;. &lt;code&gt;==&lt;/code&gt; will compare two variables after converting them to a common type. There is no type conversion in &lt;code&gt;===&lt;/code&gt;, and both variables must be of the same type to be equal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unequal variables might return true when compared with the &lt;code&gt;==&lt;/code&gt; operator&lt;/p&gt; 
&lt;h3&gt;3.10 Code example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;&quot; == &quot;0&quot;; // false
0 == &quot;&quot;; // true
0 == &quot;0&quot;; // true

false == &quot;false&quot;; // false
false == &quot;0&quot;; // true

false == undefined; // false
false == null; // false
null == undefined; // true

&quot; \t\r\n &quot; == 0; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All statements above will return false if used with &lt;code&gt;===&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.11 Use Async Await, avoid callbacks&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Handling async errors in callback style are probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting, and makes it difficult to reason about the code flow&lt;/p&gt; 
&lt;p&gt;🔗&lt;a href=&quot;https://github.com/yortus/asyncawait&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt; Guide to async-await 1.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 3.12 Use arrow function expressions (=&amp;gt;)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Though it&#39;s recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. &lt;code&gt;this&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Longer code (in ES5 functions) is more prone to bugs and cumbersome to read&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75&quot;&gt;&lt;strong&gt;Read more: It’s Time to Embrace Arrow Functions&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;4. Testing And Overall Quality Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.1 At the very least, write API (component) testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Most projects just don&#39;t have any automated testing due to short timetables or often the &#39;testing project&#39; ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like &lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;). Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.2 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make the test speak at the requirements level so it&#39;s self-explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances, and what is the expected result&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named “Add product” failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/3-parts-in-name.md&quot;&gt;&lt;strong&gt;Read More: Include 3 parts in each test name&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.3 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Structure your tests with 3 well-separated sections: Arrange, Act &amp;amp; Assert (AAA). The first part includes the test setup, then the execution of the unit under test, and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not only you spend long daily hours on understanding the main code, but now also what should have been the simple part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/aaa.md&quot;&gt;&lt;strong&gt;Read More: Structure tests by the AAA pattern&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.4 Detect code issues with a linter&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use a code linter to check the basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/#3-code-style-practices&quot;&gt;Section 3&lt;/a&gt; on Code Style Practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may let pass some anti-pattern and possible vulnerable code to your production environment.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.5 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent test coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/avoid-global-test-fixture.md&quot;&gt;&lt;strong&gt;Read More: Avoid global test fixtures&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as 🔗 &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; and 🔗 &lt;a href=&quot;https://snyk.io&quot;&gt;snyk.io&lt;/a&gt; that can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.7 Tag your tests&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;: mocha --grep &#39;sanity&#39;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.8 Check your test coverage, it helps to identify wrong test patterns&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code coverage tools like &lt;a href=&quot;https://github.com/istanbuljs/istanbuljs&quot;&gt;Istanbul&lt;/a&gt;/&lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;NYC&lt;/a&gt; are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; There won&#39;t be any automated metric telling you when a large portion of your code is not covered by testing&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.9 Inspect for outdated packages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use your preferred tool (e.g. &lt;code&gt;npm outdated&lt;/code&gt; or &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;npm-check-updates&lt;/a&gt;) to detect installed outdated packages, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.10 Use production-like environment for e2e testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as close to your real production environment as possible like a-continue (Missed -continue here, needs content. Judging by the &lt;strong&gt;Otherwise&lt;/strong&gt; clause, this should mention docker-compose)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without docker-compose, teams must maintain a testing DB for each testing environment including developers&#39; machines, keep all those DBs in sync so test results won&#39;t vary across environments&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.11 Refactor regularly using static analysis tools&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity), and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;Sonarqube&lt;/a&gt; (2,600+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (1,500+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/refactoring.md&quot;&gt;&lt;strong&gt;Read More: Refactoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your continuous integration platform (CICD) will host all the quality tools (e.g test, lint) so it should come with a vibrant ecosystem of plugins. &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of a complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like &lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it&#39;s a trade-off between robustness and speed - choose your side carefully&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/citools.md&quot;&gt;&lt;strong&gt;Read More: Choosing CI platform&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 4.13 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When a middleware holds some immense logic that spans many requests, it is worth testing it in isolation without waking up the entire web framework. This can be easily achieved by stubbing and spying on the {req, res, next} objects&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/testingandquality/test-middlewares.md&quot;&gt;&lt;strong&gt;Read More: Test middlewares in isolation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;5. Going To Production Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.1. Monitoring&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring is a game of finding out issues before customers do – obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click ‘The Gist’ below for an overview of the solutions&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure === disappointed customers. Simple&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/monitoring.md&quot;&gt;&lt;strong&gt;Read More: Monitoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.2. Increase transparency using smart logging&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/smartlogging.md&quot;&gt;&lt;strong&gt;Read More: Increase transparency using smart logging&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use ‘real’ middleware services like nginx, HAproxy or cloud vendor services instead&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/delegatetoproxy.md&quot;&gt;&lt;strong&gt;Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.4. Lock dependencies&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default – when you install packages at various environments it tries to fetch packages’ latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use &lt;code&gt;npm shrinkwrap&lt;/code&gt;. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/lockdependencies.md&quot;&gt;&lt;strong&gt;Read More: Lock dependencies&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.5. Guard process uptime using the right tool&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today&#39;s ‘dockerized’ world, cluster management tools should be considered as well&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/guardprocess.md&quot;&gt;&lt;strong&gt;Read More: Guard process uptime using the right tool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.6. Utilize all CPU cores&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; At its basic form, a Node app runs on a single CPU core while all others are left idling. It’s your duty to replicate the Node process and utilize all CPUs – For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/utilizecpu.md&quot;&gt;&lt;strong&gt;Read More: Utilize all CPU cores&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.7. Create a ‘maintenance endpoint’&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it’s highly recommended to rely on standard and battle-tests tools, some valuable information and operations are easier done using code&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You’ll find that you’re performing many “diagnostic deploys” – shipping code to production only to extract some information for diagnostic purposes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/createmaintenanceendpoint.md&quot;&gt;&lt;strong&gt;Read More: Create a ‘maintenance endpoint’&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.8. Discover errors and downtime using APM products&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Application monitoring and performance products (a.k.a APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-users side while suggesting the root cause&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you’ll never be aware which is your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/apmproducts.md&quot;&gt;&lt;strong&gt;Read More: Discover errors and downtime using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.9. Make your code production-ready&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code with the end in mind, plan for production from day 1. This sounds a bit vague so I’ve compiled a few development tips that are closely related to production maintenance (click Gist below)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A world champion IT/DevOps guy won’t save a system that is badly written&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/productioncode.md&quot;&gt;&lt;strong&gt;Read More: Make your code production-ready&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.10. Measure and guard the memory usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node’s code – thus watching Node’s process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your process memory might leak a hundred megabytes a day like how it happened at &lt;a href=&quot;https://www.joyent.com/blog/walmart-node-js-memory-leak&quot;&gt;Walmart&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/measurememory.md&quot;&gt;&lt;strong&gt;Read More: Measure and guard the memory usage&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.11. Get your frontend assets out of Node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your single Node thread will be busy streaming hundreds of html/images/angular/react files instead of allocating all its resources for the task it was born for – serving dynamic content&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/frontendout.md&quot;&gt;&lt;strong&gt;Read More: Get your frontend assets out of Node&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.12. Be stateless, kill your servers almost every day&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider ‘killing’ your servers periodically or use ‘serverless’ platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/bestateless.md&quot;&gt;&lt;strong&gt;Read More: Be stateless, kill your Servers almost every day&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.13. Use tools that automatically detect vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/detectvulnerabilities.md&quot;&gt;&lt;strong&gt;Read More: Use tools that automatically detect vulnerabilities&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.14. Assign a transaction id to each log statement&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Unfortunately, this is not easy to achieve in Node due to its async nature, see code examples inside&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Looking at a production error log without the context – what happened before – makes it much harder and slower to reason about the issue&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/assigntransactionid.md&quot;&gt;&lt;strong&gt;Read More: Assign ‘TransactionId’ to each log statement&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.15. Set NODE_ENV=production&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Set the environment variable NODE_ENV to ‘production’ or ‘development’ to flag whether production optimizations should get activated – many npm packages determine the current environment and optimize their code for production&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting &lt;code&gt;NODE_ENV&lt;/code&gt; makes it slower by a factor of three!&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/setnodeenv.md&quot;&gt;&lt;strong&gt;Read More: Set NODE_ENV=production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.16. Design automated, atomic and zero-downtime deployments&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don’t require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Long deployments -&amp;gt; production downtime &amp;amp; human-related error -&amp;gt; team unconfident in making deployment -&amp;gt; fewer deployments and features&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.17. Use an LTS release of Node.js&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/LTSrelease.md&quot;&gt;&lt;strong&gt;Read More: Use an LTS release of Node.js&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.18. Don&#39;t route logs within the app&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to &lt;code&gt;stdout&lt;/code&gt; using a logger utility and then let the execution environment (container, server, etc.) pipe the &lt;code&gt;stdout&lt;/code&gt; stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Application handling log routing === hard to scale, loss of logs, poor separation of concerns&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/logrouting.md&quot;&gt;&lt;strong&gt;Read More: Log Routing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 5.19. Install your packages with &lt;code&gt;npm ci&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; You have to be sure that production code uses the exact version of the packages you have tested it with. Run &lt;code&gt;npm ci&lt;/code&gt; to strictly do a clean install of your dependencies matching package.json and package-lock.json. Using this command is recommended in automated environments such as continuous integration pipelines.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/production/installpackageswithnpmci.md&quot;&gt;&lt;strong&gt;Read More: Use npm ci&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;6. Security Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.1. Embrace linter security rules&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make use of security-related linter plugins such as &lt;a href=&quot;https://github.com/nodesecurity/eslint-plugin-security&quot;&gt;eslint-plugin-security&lt;/a&gt; to catch security vulnerabilities and issues as early as possible, preferably while they&#39;re being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click &#39;Read more&#39; below to see code examples that will get caught by a security linter&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/lintrules.md&quot;&gt;&lt;strong&gt;Read More: Lint rules&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.2. Limit concurrent requests using a middleware&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, &lt;a href=&quot;https://www.npmjs.com/package/rate-limiter-flexible&quot;&gt;rate-limiter-flexible&lt;/a&gt; package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. &lt;a href=&quot;https://www.npmjs.com/package/express-rate-limit&quot;&gt;express-rate-limit&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/limitrequests.md&quot;&gt;&lt;strong&gt;Read More: Implement rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.3 Extract secrets from config files or use packages to encrypt them&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit/push hooks to prevent committing secrets accidentally&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secretmanagement.md&quot;&gt;&lt;strong&gt;Read More: Secret management&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.4. Prevent query injection vulnerabilities with ORM/ODM libraries&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent SQL/NoSQL injection and other malicious attacks, always make use of an ORM/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. &lt;a href=&quot;https://github.com/sequelize/sequelize&quot;&gt;Sequelize&lt;/a&gt;, &lt;a href=&quot;https://github.com/tgriesser/knex&quot;&gt;Knex&lt;/a&gt;, &lt;a href=&quot;https://github.com/Automattic/mongoose&quot;&gt;mongoose&lt;/a&gt;) have built-in protection against injection attacks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/ormodmusage.md&quot;&gt;&lt;strong&gt;Read More: Query injection prevention using ORM/ODM libraries&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.5. Collection of generic security best practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/commonsecuritybestpractices.md&quot;&gt;&lt;strong&gt;Read More: Common security best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.6. Adjust the HTTP response headers for enhanced security&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like &lt;a href=&quot;https://www.npmjs.com/package/helmet&quot;&gt;helmet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Attackers could perform direct attacks on your application&#39;s users, leading to huge security vulnerabilities&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/secureheaders.md&quot;&gt;&lt;strong&gt;Read More: Using secure headers in your application&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.7. Constantly and automatically inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like &lt;a href=&quot;https://docs.npmjs.com/cli/audit&quot;&gt;npm audit&lt;/a&gt; or &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker could detect your web framework and attack all its known vulnerabilities.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/dependencysecurity.md&quot;&gt;&lt;strong&gt;Read More: Dependency security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.8. Protect Users&#39; Passwords/Secrets using bcrypt or scrypt&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Passwords or secrets (e.g. API keys) should be stored using a secure hash + salt function like &lt;code&gt;bcrypt&lt;/code&gt;,&lt;code&gt;scrypt&lt;/code&gt;, or worst case &lt;code&gt;pbkdf2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Passwords and secrets that are stored without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/userpasswords.md&quot;&gt;&lt;strong&gt;Read More: User Passwords&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.9. Escape HTML, JS and CSS output&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/escape-output.md&quot;&gt;&lt;strong&gt;Read More: Escape output&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.10. Validate incoming JSON schemas&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Validate the incoming requests&#39; body payload and ensure it meets expectations, fail fast if it doesn&#39;t. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as &lt;a href=&quot;https://www.npmjs.com/package/jsonschema&quot;&gt;jsonschema&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/joi&quot;&gt;joi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/validation.md&quot;&gt;&lt;strong&gt;Read More: Validate incoming JSON schemas&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.11. Support blocklisting JWTs&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using JSON Web Tokens (for example, with &lt;a href=&quot;https://github.com/jaredhanson/passport&quot;&gt;Passport.js&lt;/a&gt;), by default there&#39;s no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there&#39;s no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blocklist of untrusted tokens that are validated on each request.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/expirejwt.md&quot;&gt;&lt;strong&gt;Read More: Blocklist JSON Web Tokens&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.12. Prevent brute-force attacks against authorization&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A simple and powerful technique is to limit authorization attempts using two metrics:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first is number of consecutive failed attempts by the same user unique ID/name and IP address.&lt;/li&gt; 
 &lt;li&gt;The second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/login-rate-limit.md&quot;&gt;&lt;strong&gt;Read More: Login rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.13. Run Node.js as non-root user&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It&#39;s recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user&#39;s behalf by invoking the container with the flag &quot;-u username&quot;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to his server)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/non-root-user.md&quot;&gt;&lt;strong&gt;Read More: Run Node.js as non-root user&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.14. Limit payload size using a reverse-proxy or a middleware&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring &lt;a href=&quot;https://github.com/expressjs/body-parser&quot;&gt;express body parser&lt;/a&gt; to accept only small-size payloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/requestpayloadsizelimit.md&quot;&gt;&lt;strong&gt;Read More: Limit payload size&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.15. Avoid JavaScript eval statements&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;code&gt;eval&lt;/code&gt; is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is &lt;code&gt;new Function&lt;/code&gt; constructor. &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; should never be passed dynamic JavaScript code either.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious JavaScript code finds a way into text passed into &lt;code&gt;eval&lt;/code&gt; or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoideval.md&quot;&gt;&lt;strong&gt;Read More: Avoid JavaScript eval statements&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.16. Prevent evil RegEx from overloading your single thread execution&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on 🔥. For that reason, prefer third-party validation packages like &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt; instead of writing your own Regex patterns, or make use of &lt;a href=&quot;https://github.com/substack/safe-regex&quot;&gt;safe-regex&lt;/a&gt; to detect vulnerable regex patterns&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular &lt;code&gt;moment&lt;/code&gt; package was found vulnerable with malicious RegEx usage in November of 2017&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/regex.md&quot;&gt;&lt;strong&gt;Read More: Prevent malicious RegEx&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.17. Avoid module loading using a variable&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid requiring/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. &lt;code&gt;fs.readFile()&lt;/code&gt;) or other sensitive resource access with dynamic variables originating from user input. &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security&quot;&gt;Eslint-plugin-security&lt;/a&gt; linter can catch such patterns and warn early enough&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the file system, or access already existing system files.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/safemoduleloading.md&quot;&gt;&lt;strong&gt;Read More: Safe module loading&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.18. Run unsafe code in a sandbox&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When tasked to run external code that is given at run-time (e.g. plugin), use any sort of &#39;sandbox&#39; execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. &lt;code&gt;cluster.fork()&lt;/code&gt;), serverless environment or dedicated npm packages that act as a sandbox&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sandbox.md&quot;&gt;&lt;strong&gt;Read More: Run unsafe code in a sandbox&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.19. Take extra care when working with child processes&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using &lt;code&gt;child_process.execFile&lt;/code&gt; which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/childprocesses.md&quot;&gt;&lt;strong&gt;Read More: Be cautious when working with child processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.20. Hide error details from clients&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/hideerrors.md&quot;&gt;&lt;strong&gt;Read More: Hide error details from client&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.21. Configure 2FA for npm or Yarn&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any step in the development chain should be protected with MFA (multi-factor authentication), npm/Yarn are a sweet opportunity for attackers who can get their hands on some developer&#39;s password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; &lt;a href=&quot;https://medium.com/@oprearocks/eslint-backdoor-what-it-is-and-how-to-fix-the-issue-221f58f1a8c8&quot;&gt;Have you heard about the eslint developer whose password was hijacked?&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.22. Modify session middleware settings&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each web framework and technology has its known weaknesses - telling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the &lt;code&gt;X-Powered-By&lt;/code&gt; header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/sessions.md&quot;&gt;&lt;strong&gt;Read More: Cookie and session security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.23. Avoid DOS attacks by explicitly setting when a process should crash&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error - unless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There&#39;s no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests - a handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.24. Prevent unsafe redirects&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/saferedirects.md&quot;&gt;&lt;strong&gt;Read More: Prevent unsafe redirects&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 6.25. Avoid publishing secrets to the npm registry&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An &lt;code&gt;.npmignore&lt;/code&gt; file can be used to ignore specific files or folders, or the &lt;code&gt;files&lt;/code&gt; array in &lt;code&gt;package.json&lt;/code&gt; can act as an allow list.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your project&#39;s API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/security/avoid_publishing_secrets.md&quot;&gt;&lt;strong&gt;Read More: Avoid publishing secrets&lt;/strong&gt;&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;7. Draft: Performance Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;h2&gt;Our contributors are working on this section. &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/256&quot;&gt;Would you like to join?&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 7.1. Don&#39;t block the event loop&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. &lt;strong&gt;3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/block-loop.md&quot;&gt;&lt;strong&gt;Read More: Do not block the event loop&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 7.2. Prefer native JS methods over user-land utils like Lodash&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; It&#39;s often more penalising to use utility libraries like &lt;code&gt;lodash&lt;/code&gt; and &lt;code&gt;underscore&lt;/code&gt; over native methods as it leads to unneeded dependencies and slower performance. Bear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it&#39;s now about 50% more performant than utility libraries.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You&#39;ll have to maintain less performant projects where you could have simply used what was &lt;strong&gt;already&lt;/strong&gt; available or dealt with a few more lines in exchange of a few more files.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/performance/nativeoverutil.md&quot;&gt;&lt;strong&gt;Read More: Native over user land utils&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;&lt;code&gt;8. Docker Best Practices&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;🏅 Many thanks to &lt;a href=&quot;https://github.com/BretFisher&quot;&gt;Bret Fisher&lt;/a&gt; from whom we learned many of the following practices&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.1 Use multi-stage builds for leaner and more secure Docker images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use multi-stage build to copy only necessary production artifacts. A lot of build-time dependencies and files are not needed for running your application. With multi-stage builds these resources can be used during build while the runtime environment contains only what&#39;s necessary. Multi-stage builds are an easy way to get rid of overweight and security threats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Larger images will take longer to build and ship, build-only tools might contain vulnerabilities and secrets only meant for the build phase might be leaked.&lt;/p&gt; 
&lt;h3&gt;Example Dockerfile for multi-stage builds&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;FROM node:14.4.0 AS build

COPY . .
RUN npm ci &amp;amp;&amp;amp; npm run build

FROM node:slim-14.4.0

USER node
EXPOSE 8080

COPY --from=build /home/node/app/dist /home/node/app/package.json /home/node/app/package-lock.json ./
RUN npm ci --production

CMD [ &quot;node&quot;, &quot;dist/app.js&quot; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/multi_stage_builds.md&quot;&gt;&lt;strong&gt;Read More: Use multi-stage builds&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.2. Bootstrap using &#39;node&#39; command, avoid npm start&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; use &lt;code&gt;CMD [&#39;node&#39;,&#39;server.js&#39;]&lt;/code&gt; to start your app, avoid using npm scripts which don&#39;t pass OS signals to the code. This prevents problems with child-process, signal handling, graceful shutdown and having zombie processes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When no signals are passed, your code will never be notified about shutdowns. Without this, it will lose its chance to close properly possibly losing current requests and/or data.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/bootstrap-using-node.md&quot;&gt;&lt;strong&gt;Read More: Bootstrap container using node command, avoid npm start&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.3. Let the Docker runtime handle replication and uptime&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using a Docker run time orchestrator (e.g., Kubernetes), invoke the Node.js process directly without intermediate process managers or custom code that replicate the process (e.g. PM2, Cluster module). The runtime platform has the highest amount of data and visibility for making placement decision - It knows best how many processes are needed, how to spread them and what to do in case of crashes&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Container keeps crashing due to lack of resources will get restarted indefinitely by the process manager. Should Kubernetes be aware of that, it could relocate it to a different roomy instance&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/restart-and-replicate-processes.md&quot;&gt;&lt;strong&gt;Read More: Let the Docker orchestrator restart and replicate processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.4. Use .dockerignore to prevent leaking secrets&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Include a &lt;code&gt;.dockerignore&lt;/code&gt; file that filters out common secret files and development artifacts. By doing so, you might prevent secrets from leaking into the image. As a bonus the build time will significantly decrease. Also, ensure not to copy all files recursively rather explicitly choose what should be copied to Docker&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise&lt;/strong&gt;: Common personal secret files like &lt;code&gt;.env&lt;/code&gt;, &lt;code&gt;.aws&lt;/code&gt; and &lt;code&gt;.npmrc&lt;/code&gt; will be shared with anybody with access to the image (e.g. Docker repository)&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/docker-ignore.md&quot;&gt;&lt;strong&gt;Read More: Use .dockerignore&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.5. Clean-up dependencies before production&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Although Dev-Dependencies are sometimes needed during the build and test life-cycle, eventually the image that is shipped to production should be minimal and clean from development dependencies. Doing so guarantees that only necessary code is shipped and the amount of potential attacks (i.e. attack surface) is minimized. When using multi-stage build (see dedicated bullet) this can be achieved by installing all dependencies first and finally running &lt;code&gt;npm ci --production&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many of the infamous npm security breaches were found within development packages (e.g. &lt;a href=&quot;https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&quot;&gt;eslint-scope&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;🔗 Read More: &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/install-for-production.md&quot;&gt;Remove development dependencies&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.6. Shutdown smartly and gracefully&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handle the process SIGTERM event and clean-up all existing connection and resources. This should be done while responding to ongoing requests. In Dockerized runtimes shutting down containers is not a rare event, rather a frequent occurrence that happen as part of routine work. Achieving this demands some thoughtful code to orchestrate several moving parts: The load balancer, keep-alive connections, the HTTP server and other resources&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Dying immediately means not responding to thousands of disappointed users&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/graceful-shutdown.md&quot;&gt;&lt;strong&gt;Read More: Graceful shutdown&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.7. Set memory limits using both Docker and v8&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Always configure a memory limit using both Docker and the JavaScript runtime flags. The Docker limit is needed to make thoughtful container placement decision, the --v8&#39;s flag max-old-space is needed to kick off the GC on time and prevent under utilization of memory. Practically, set the v8&#39;s old space memory to be a just bit less than the container limit&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The docker definition is needed to perform thoughtful scaling decision and prevent starving other citizens. Without also defining the v8&#39;s limits, it will under utilize the container resources - Without explicit instructions it crashes when utilizing ~50-60% of its host resources&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/memory-limit.md&quot;&gt;&lt;strong&gt;Read More: Set memory limits using Docker only&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.8. Plan for efficient caching&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Rebuilding a whole docker image from cache can be nearly instantaneous if done correctly. The less updated instructions should be at the top of your Dockerfile and the ones constantly changing (like app code) should be at the bottom.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Docker build will be very long and consume lot of resources even when making tiny changes&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/use-cache-for-shorter-build-time.md&quot;&gt;&lt;strong&gt;Read More: Leverage caching to reduce build times&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.9. Use explicit image reference, avoid &lt;code&gt;latest&lt;/code&gt; tag&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Specify an explicit image digest or versioned label, never refer to &lt;code&gt;latest&lt;/code&gt;. Developers are often led to believe that specifying the &lt;code&gt;latest&lt;/code&gt; tag will provide them with the most recent image in the repository however this is not the case. Using a digest guarantees that every instance of the service is running exactly the same code.&lt;/p&gt; 
&lt;p&gt;In addition, referring to an image tag means that the base image is subject to change, as image tags cannot be relied upon for a deterministic install. Instead, if a deterministic install is expected, a SHA256 digest can be used to reference an exact image.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A new version of a base image could be deployed into production with breaking changes, causing unintended application behaviour.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/image-tags.md&quot;&gt;&lt;strong&gt;Read More: Understand image tags and use the &quot;latest&quot; tag with caution&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.10. Prefer smaller Docker base images&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Large images lead to higher exposure to vulnerabilities and increased resource consumption. Using leaner Docker images, such as Slim and Alpine Linux variants, mitigates this issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Building, pushing, and pulling images will take longer, unknown attack vectors can be used by malicious actors and more resources are consumed.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/smaller_base_images.md&quot;&gt;&lt;strong&gt;Read More: Prefer smaller images&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.11. Clean-out build-time secrets, avoid secrets in args&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid secrets leaking from the Docker build environment. A Docker image is typically shared in multiple environment like CI and a registry that are not as sanitized as production. A typical example is an npm token which is usually passed to a dockerfile as argument. This token stays within the image long after it is needed and allows the attacker indefinite access to a private npm registry. This can be avoided by coping a secret file like &lt;code&gt;.npmrc&lt;/code&gt; and then removing it using multi-stage build (beware, build history should be deleted as well) or by using Docker build-kit secret feature which leaves zero traces&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Everyone with access to the CI and docker registry will also get access to some precious organization secrets as a bonus&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/avoid-build-time-secrets.md&quot;&gt;&lt;strong&gt;Read More: Clean-out build-time secrets&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.12. Scan images for multi layers of vulnerabilities&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Besides checking code dependencies vulnerabilities also scan the final image that is shipped to production. Docker image scanners check the code dependencies but also the OS binaries. This E2E security scan covers more ground and verifies that no bad guy injected bad things during the build. Consequently, it is recommended running this as the last step before deployment. There are a handful of free and commercial scanners that also provide CI/CD plugins&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your code might be entirely free from vulnerabilities. However it might still get hacked due to vulnerable version of OS-level binaries (e.g. OpenSSL, TarBall) that are commonly being used by applications&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/scan-images.md&quot;&gt;&lt;strong&gt;Read More: Generic Docker practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.13 Clean NODE_MODULE cache&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; After installing dependencies in a container remove the local cache. It doesn&#39;t make any sense to duplicate the dependencies for faster future installs since there won&#39;t be any further installs - A Docker image is immutable. Using a single line of code tens of MB (typically 10-50% of the image size) are shaved off&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; The image that will get shipped to production will weigh 30% more due to files that will never get used&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/clean-cache.md&quot;&gt;&lt;strong&gt;Read More: Clean NODE_MODULE cache&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.14. Generic Docker practices&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of Docker advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/generic-tips.md&quot;&gt;&lt;strong&gt;Read More: Generic Docker practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/images/checkbox-small-blue.png&quot; alt=&quot;✔&quot;&gt; 8.15. Lint your Dockerfile&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Linting your Dockerfile is an important step to identify issues in your Dockerfile which differ from best practices. By checking for potential flaws using a specialised Docker linter, performance and security improvements can be easily identified, saving countless hours of wasted time or security issues in production code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Mistakenly the Dockerfile creator left Root as the production user, and also used an image from unknown source repository. This could be avoided with with just a simple linter.&lt;/p&gt; 
&lt;p&gt;🔗 &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/sections/docker/lint-dockerfile.md&quot;&gt;&lt;strong&gt;Read More: Lint your Dockerfile&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Milestones&lt;/h1&gt; 
&lt;p&gt;To maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/milestones&quot;&gt;milestones&lt;/a&gt; and join the working groups if you want to contribute to this project&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;All translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!&lt;/p&gt; 
&lt;h3&gt;Completed translations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/BR.png&quot; alt=&quot;BR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.brazilian-portuguese.md&quot;&gt;Brazilian Portuguese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/marcelosdm&quot;&gt;Marcelo Melo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/CN.png&quot; alt=&quot;CN&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.chinese.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mattjin&quot;&gt;Matt Jin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/RU.png&quot; alt=&quot;RU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.russian.md&quot;&gt;Russian&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/contributorpw&quot;&gt;Alex Ivanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/PL.png&quot; alt=&quot;PL&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.polish.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/JA.png&quot; alt=&quot;JA&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.japanese.md&quot;&gt;Japanese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/YukiOta&quot;&gt;Yuki Ota&lt;/a&gt;, &lt;a href=&quot;https://github.com/YA21&quot;&gt;Yuta Azumi&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Translations in progress&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/FR.png&quot; alt=&quot;FR&quot;&gt; &lt;a href=&quot;https://github.com/gaspaonrocks/nodebestpractices/blob/french-translation/README.french.md&quot;&gt;French&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/129&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/HE.png&quot; alt=&quot;HE&quot;&gt; Hebrew (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/156&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/KR.png&quot; alt=&quot;KR&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.korean.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/uronly14me&quot;&gt;Sangbeom Han&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/94&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/ES.png&quot; alt=&quot;ES&quot;&gt; &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/blob/spanish-translation/README.spanish.md&quot;&gt;Spanish&lt;/a&gt; (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/95&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/TR.png&quot; alt=&quot;TR&quot;&gt; Turkish (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/139&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/assets/flags/EU.png&quot; alt=&quot;EU&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/README.basque.md&quot;&gt;Basque&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/anediaz&quot;&gt;Ane Diaz de Tuesta&lt;/a&gt; &amp;amp; Joxefe Diaz de Tuesta (&lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/issues/842&quot;&gt;Discussion&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;Steering Committee&lt;/h2&gt; 
&lt;p&gt;Meet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices/projects&quot;&gt;GitHub projects&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;Yoni Goldberg&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Independent Node.js consultant who works with customers in the USA, Europe, and Israel on building large-scale Node.js applications. Many of the best practices above were first published at &lt;a href=&quot;https://goldbergyoni.com&quot;&gt;goldbergyoni.com&lt;/a&gt;. Reach Yoni at &lt;a href=&quot;https://github.com/goldbergyoni&quot;&gt;@goldbergyoni&lt;/a&gt; or &lt;a href=&quot;mailto:me@goldbergyoni.com&quot;&gt;me@goldbergyoni.com&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;💻 full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Full Stack Developer &amp;amp; Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/kevynb&quot;&gt;Kevyn Bruyere&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Independent full-stack developer with a taste for Ops and automation.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Steering Committee Emeriti&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sagirk&quot;&gt;Sagir Khan&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Deep specialist in JavaScript and its ecosystem — React, Node.js, TypeScript, GraphQL, MongoDB, pretty much anything that involves JS/JSON in any layer of the system — building products using the web platform for the world’s most recognized brands. Individual Member of the Node.js Foundation.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Collaborators&lt;/h2&gt; 
&lt;p&gt;Thank you to all our collaborators! 🙏&lt;/p&gt; 
&lt;p&gt;Our collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributor guidelines&lt;/a&gt; 🎉&lt;/p&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | | :---------------------------------------------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------------------: | | &lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter (Founder)&lt;/a&gt; | &lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt; |&lt;/p&gt; 
&lt;h3&gt;Collaborator Emeriti&lt;/h3&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | | :-------------------------------------------------------------------------------------------------------------------------: | | &lt;a href=&quot;https://github.com/refack&quot;&gt;Refael Ackermann&lt;/a&gt; |&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you&#39;ve ever wanted to contribute to open source, now is your chance! See the &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/nodebestpractices/master/.operations/CONTRIBUTING.md&quot;&gt;contributing docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>HowProgrammingWorks/Index</title>
      <link>https://github.com/HowProgrammingWorks/Index</link>
      <description>&lt;p&gt;Metarhia educational program index 📖&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Индекс и состояние курсов&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Links.md&quot;&gt;Индекс каналов и групп сообщества Метархия&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Talks.md&quot;&gt;Индекс докладов на конференциях&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Practice/Index.md&quot;&gt;Индекс практических заданий&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Последовательная программа&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Introduction.md&quot;&gt;Введение и обзор знаний&lt;/a&gt; (есть несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Fundamentals.md&quot;&gt;Основы программирования, модули (1 год обучения)&lt;/a&gt; (есть до 95% материала)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Advanced.md&quot;&gt;Программирование (2 год обучения)&lt;/a&gt; (есть до 65% материала)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Отдельные курсы&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Asynchronous.md&quot;&gt;Асинхронное программирование&lt;/a&gt; (есть 97% примеров кода и видео-лекции)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/NodeJS.md&quot;&gt;Технологический стек Node.js&lt;/a&gt; (есть 95% кода и видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Metarhia.md&quot;&gt;Технологический стек Metarhia&lt;/a&gt; (есть 5% примеров и видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Patterns.md&quot;&gt;Шаблоны проектирования&lt;/a&gt; (есть 50% примеров кода и видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Paradigms.md&quot;&gt;Парадигмы программирования&lt;/a&gt; (есть 50% кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Metaprogramming.md&quot;&gt;Метапрограммирование и мультипарадигменное программирование&lt;/a&gt; (есть 50% кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/AlgAndData.md&quot;&gt;Алгоритмы и структуры данных&lt;/a&gt; (есть до 20% материала, нужно сводить разные варианты)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Network.md&quot;&gt;Проектирование сетевых протоколов и сервисов&lt;/a&gt; (есть 50% примеров кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Tools.md&quot;&gt;Инструменты разработки и жизненного цикла ПО&lt;/a&gt; (есть несколько видео-лекций, нужно расширять)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Functional.md&quot;&gt;Функциональное программирование&lt;/a&gt; (есть 20% примеров кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/OOP.md&quot;&gt;Объектно-ориентированное программирование&lt;/a&gt; (есть 20% примеров кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/OS.md&quot;&gt;Операционные системы&lt;/a&gt; (нужно сформировать программу)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/System.md&quot;&gt;Системное программирование&lt;/a&gt; (нужно сформировать программу)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Architecture.md&quot;&gt;Архитектура информационных систем&lt;/a&gt; (есть несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Web.md&quot;&gt;Веб-технологии&lt;/a&gt; (есть 25% кода и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Parallel.md&quot;&gt;Параллельное программирование&lt;/a&gt; (есть 10% примеров и несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Databases.md&quot;&gt;Проектирование баз данных&lt;/a&gt; (есть 25% примеров и видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Highload.md&quot;&gt;Высоконагруженные и масштабируемые системы&lt;/a&gt; (есть несколько видео-лекций)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/UI-UX.md&quot;&gt;Проектирование пользовательских интерфейсов&lt;/a&gt; (нужно сформировать программу)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Security.md&quot;&gt;Безопасность информационных систем&lt;/a&gt; (нужно сформировать программу)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HowProgrammingWorks/Index/master/Courses/Quality.md&quot;&gt;Качество, тестирование и надежность ПО&lt;/a&gt; (есть несколько видео-лекций)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>serverless/serverless</title>
      <link>https://github.com/serverless/serverless</link>
      <description>&lt;p&gt;⚡ Serverless Framework – Build web, mobile and IoT applications with serverless architectures using AWS Lambda, Azure Functions, Google CloudFunctions &amp; more! –&lt;/p&gt;&lt;hr&gt;&lt;p&gt;👋🏾 &lt;strong&gt;Please consider donating to these organizations to help fund an education in &lt;em&gt;technology&lt;/em&gt;, &lt;em&gt;entrepreneurship&lt;/em&gt; and &lt;em&gt;leadership&lt;/em&gt; for POC. #BLM&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hiddengeniusproject.org/donate/&quot;&gt;Hidden Genius Project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.blackgirlscode.com/&quot;&gt;Black Girls Who Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code2040-2020.funraise.org/&quot;&gt;Code2040&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;http://serverless.com&quot;&gt;&lt;img src=&quot;https://s3.amazonaws.com/assets.github.serverless/readme-serverless-framework.gif&quot; alt=&quot;Serverless Application Framework AWS Lambda API Gateway&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.serverless.com&quot;&gt;&lt;img src=&quot;http://public.serverless.com/badges/v3.svg&quot; alt=&quot;serverless&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/serverless/serverless/actions?query=workflow%3AIntegrate&quot;&gt;&lt;img src=&quot;https://github.com/serverless/serverless/workflows/Integrate/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/serverless&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/serverless.svg&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/serverless/serverless&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/serverless/serverless/branch/master/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/serverless/serverless&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/serverless/serverless.svg&quot; alt=&quot;gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/github/serverless/serverless&quot;&gt;&lt;img src=&quot;https://snyk.io/test/github/serverless/serverless/badge.svg&quot; alt=&quot;Known Vulnerabilities&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/serverless&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/serverless.svg&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.serverless.com&quot;&gt;Website&lt;/a&gt; • &lt;a href=&quot;https://serverless.com/framework/docs/&quot;&gt;Docs&lt;/a&gt; • &lt;a href=&quot;https://serverless.com/subscribe/&quot;&gt;Newsletter&lt;/a&gt; • &lt;a href=&quot;https://teespring.com/stores/serverless&quot;&gt;Swag&lt;/a&gt; • &lt;a href=&quot;https://gitter.im/serverless/serverless&quot;&gt;Gitter&lt;/a&gt; • &lt;a href=&quot;http://forum.serverless.com&quot;&gt;Forum&lt;/a&gt; • &lt;a href=&quot;https://www.meetup.com/pro/serverless/&quot;&gt;Meetups&lt;/a&gt; • &lt;a href=&quot;https://twitter.com/goserverless&quot;&gt;Twitter&lt;/a&gt; • &lt;a href=&quot;https://serverless.com/company/jobs/&quot;&gt;We&#39;re Hiring&lt;/a&gt; • &lt;a href=&quot;https://dashboard.serverless.com&quot;&gt;Try Pro&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Serverless Framework&lt;/strong&gt; – Build applications comprised of microservices that run in response to events, auto-scale for you, and only charge you when they run. This lowers the total cost of maintaining your apps, enabling you to build more logic, faster.&lt;/p&gt; 
&lt;p&gt;The Framework uses new event-driven compute services, like AWS Lambda, Google Cloud Functions, and more. It&#39;s a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying your serverless architecture. It&#39;s also completely extensible via plugins.&lt;/p&gt; 
&lt;p&gt;Serverless is an MIT open-source project, actively maintained by a full-time, venture-backed team.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Watch the video overview here.
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;In 2020, the Serverless Framework began introducing advanced functionality for specific serverless use-cases, known as Serverless Framework Components. Check out the Components featured below, &lt;a href=&quot;https://github.com/serverless-components&quot;&gt;and more here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;| &lt;a href=&quot;https://github.com/serverless-components/fullstack-app&quot;&gt;&lt;img src=&quot;https://s3.amazonaws.com/assets.github.serverless/components/ad-components-fullstack.png&quot; alt=&quot;serverless framework fullstack application&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/serverless-components/express&quot;&gt;&lt;img src=&quot;https://s3.amazonaws.com/public.assets.serverless.com/images/ads/ad-components-express.png&quot; alt=&quot;serverless framework express.js&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/serverless-components/website&quot;&gt;&lt;img src=&quot;https://s3.amazonaws.com/public.assets.serverless.com/images/ads/ad-components-website.png&quot; alt=&quot;serverless framework website&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/serverless-components/aws-dynamodb&quot;&gt;&lt;img src=&quot;https://s3.amazonaws.com/public.assets.serverless.com/images/ads/ad-components-dynamodb.png&quot; alt=&quot;serverless framework dynamodb&quot;&gt;&lt;/a&gt; | | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#quick-start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#services&quot;&gt;Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#consultants&quot;&gt;Consultants&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#licensing&quot;&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#v.5&quot;&gt;Previous Version 0.5.x&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install via npm:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g serverless
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set-up your &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/docs/providers/aws/guide/credentials.md&quot;&gt;Provider Credentials&lt;/a&gt;&lt;/strong&gt;. &lt;a href=&quot;https://www.youtube.com/watch?v=HSd9uYj2LJA&quot;&gt;Watch the video on setting up credentials&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Service:&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can create a new service or &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#how-to-install-a-service&quot;&gt;install existing services&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Create a new Serverless Service/Project
serverless create --template aws-nodejs --path my-service
# Change into the newly created directory
cd my-service
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Deploy a Service:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Use this when you have made changes to your Functions, Events or Resources in &lt;code&gt;serverless.yml&lt;/code&gt; or you simply want to deploy all changes within your Service at the same time.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless deploy -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Deploy the Function:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Use this to quickly upload and overwrite your AWS Lambda code on AWS, allowing you to develop faster.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless deploy function -f hello
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Invoke the Function on AWS:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Invokes an AWS Lambda Function on AWS and returns logs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless invoke -f hello -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;7&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Invoke the Function on your machine:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Invokes an AWS Lambda Function on your local machine and returns logs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless invoke local -f hello -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;8&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Fetch the Function Logs:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Open up a separate tab in your console and stream all logs for a specific Function using this command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless logs -f hello -t
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;9&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Remove the Service:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Removes all Functions, Events and Resources from your AWS account.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless remove
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How to Install a Service:&lt;/h3&gt; 
&lt;p&gt;This is a convenience method to install a pre-made Serverless Service locally by downloading the Github repo and unzipping it. Services are listed below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless install -u https://github.com/your-url-to-the-serverless-service
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/docs/providers/aws/guide/README.md&quot;&gt;Serverless Framework Guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Services (V1.0)&lt;/h2&gt; 
&lt;p&gt;The following are services you can instantly install and use by running &lt;code&gt;serverless install --url &amp;lt;service-github-url&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/examples&quot;&gt;serverless-examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-crud&quot;&gt;CRUD&lt;/a&gt; - CRUD service, &lt;a href=&quot;https://github.com/jahangirmohammed/serverless-crud-scala&quot;&gt;Scala Port&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/faunadb/serverless-crud&quot;&gt;CRUD with FaunaDB&lt;/a&gt; - CRUD service using FaunaDB&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tscanlin/serverless-s3-crud&quot;&gt;CRUD with S3&lt;/a&gt; - CRUD service using S3&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jetbridge/sls-flask&quot;&gt;CRUD with Flask and SQLAlchemy&lt;/a&gt; - Python &lt;a href=&quot;https://blog.jetbridge.com/framework/&quot;&gt;CRUD API service&lt;/a&gt; with Flask, SQLAlchemy and Swagger&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/serverless-graphql&quot;&gt;GraphQL Boilerplate&lt;/a&gt; - GraphQL application Boilerplate service&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laardee/serverless-authentication-boilerplate&quot;&gt;Authentication&lt;/a&gt; - Authentication boilerplate service&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahefnawy/serverless-mailer&quot;&gt;Mailer&lt;/a&gt; - Service for sending emails&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-kinesis-streams&quot;&gt;Kinesis streams&lt;/a&gt; - Service to showcase Kinesis stream support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-dynamodb-streams&quot;&gt;DynamoDB streams&lt;/a&gt; - Service to showcase DynamoDB stream support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-landingpage-backend&quot;&gt;Landingpage backend&lt;/a&gt; - Landingpage backend service to store E-Mail addresses&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-facebook-messenger-bot&quot;&gt;Facebook Messenger Chatbot&lt;/a&gt; - Chatbot for the Facebook Messenger platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-lambda-chaining&quot;&gt;Lambda chaining&lt;/a&gt; - Service which chains Lambdas through SNS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmuens/serverless-secured-api&quot;&gt;Secured API&lt;/a&gt; - Service which exposes an API key accessible API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahefnawy/serverless-authorizer&quot;&gt;Authorizer&lt;/a&gt; - Service that uses API Gateway custom authorizers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahefnawy/serverless-thumbnails&quot;&gt;Thumbnails&lt;/a&gt; - Service that takes an image url and returns a 100x100 thumbnail&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eahefnawy/serverless-boilerplate&quot;&gt;Boilerplate&lt;/a&gt; - Opinionated boilerplate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/americansystems/serverless-es6-jest&quot;&gt;ES6 + Jest&lt;/a&gt; - ES6 + Jest Boilerplate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZeroSharp/serverless-php&quot;&gt;PHP&lt;/a&gt; - Call a PHP function from your lambda&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stewartlord/serverless-ruby&quot;&gt;Ruby&lt;/a&gt; - Call a Ruby function from your lambda&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnagan/serverless-slack-app&quot;&gt;Slack App&lt;/a&gt; - Slack App Boilerplate with OAuth and Bot actions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/choefele/swift-lambda-app&quot;&gt;Swift&lt;/a&gt; - Full-featured project template to develop Lambda functions in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dav009/serverless-aws-alarms-notifier&quot;&gt;Cloudwatch Alerts on Slack&lt;/a&gt; - Get AWS Cloudwatch alerts notifications on Slack&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;serverless install&lt;/code&gt; command will only work on V1.0 or later.&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Node.js, Python, Java, Go, C#, Ruby, Swift, Kotlin, PHP, Scala, &amp;amp; F#&lt;/li&gt; 
 &lt;li&gt;Manages the lifecycle of your serverless architecture (build, deploy, update, delete).&lt;/li&gt; 
 &lt;li&gt;Safely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).&lt;/li&gt; 
 &lt;li&gt;Functions can be grouped (&quot;serverless services&quot;) for easy management of code, resources &amp;amp; processes, across large projects &amp;amp; teams.&lt;/li&gt; 
 &lt;li&gt;Minimal configuration and scaffolding.&lt;/li&gt; 
 &lt;li&gt;Built-in support for multiple stages.&lt;/li&gt; 
 &lt;li&gt;Optimized for CI/CD workflows.&lt;/li&gt; 
 &lt;li&gt;Loaded with automation, optimization and best practices.&lt;/li&gt; 
 &lt;li&gt;100% Extensible: Extend or modify the Framework and its operations via Plugins.&lt;/li&gt; 
 &lt;li&gt;An ecosystem of serverless services and plugins.&lt;/li&gt; 
 &lt;li&gt;A passionate and welcoming community!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We love our contributors! Please read our &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/CONTRIBUTING.md&quot;&gt;Contributing Document&lt;/a&gt; to learn how you can start working on the Framework yourself.&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://github.com/serverless/serverless/labels/help%20wanted&quot;&gt;help wanted&lt;/a&gt; or &lt;a href=&quot;https://github.com/serverless/serverless/labels/good%20first%20issue&quot;&gt;good first issue&lt;/a&gt; labels to find issues we want to move forward on with your help.&lt;/p&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eepurl.com/b8dv4P&quot;&gt;Email Updates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://forum.serverless.com&quot;&gt;Serverless Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/serverless/serverless&quot;&gt;Gitter Chatroom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.meetup.com/serverless/&quot;&gt;Serverless Meetups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/serverless-framework&quot;&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/serverless&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goserverless&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;mailto:hello@serverless.com&quot;&gt;Contact Us&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Consultants&lt;/h2&gt; 
&lt;p&gt;We recommend the following professional services organizations who are experts in serverless development:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serverlessguru.com/&quot;&gt;Serverless Guru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.antstack.io/&quot;&gt;Antstack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.theodo.co.uk&quot;&gt;Theodo&lt;/a&gt; - full stack teams passionate about Serverless that also run the Serverless Transformation Newsletter &amp;amp; Blog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://null.tc/&quot;&gt;null&lt;/a&gt; - maintains &lt;a href=&quot;https://bref.sh/&quot;&gt;Bref&lt;/a&gt; to create serverless PHP applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nordcloud.com&quot;&gt;Nordcloud&lt;/a&gt; - they created &lt;a href=&quot;https://github.com/nordcloud?utf8=%E2%9C%93&amp;amp;q=serverless&amp;amp;type=&amp;amp;language=&quot;&gt;several plugins&lt;/a&gt;, sponsor &lt;a href=&quot;https://helsinki.serverlessdays.io/&quot;&gt;Serverless Days Helsinki&lt;/a&gt; and regularly host &lt;a href=&quot;https://www.meetup.com/Serverless-Finland/&quot;&gt;Serverless Finland&lt;/a&gt; Meetups.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.apitalent.co.nz&quot;&gt;API talent&lt;/a&gt; - who also run &lt;a href=&quot;http://www.meetup.com/Serverless-Auckland&quot;&gt;Serverless-Auckland Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.epxlabs.com/&quot;&gt;EPX Labs&lt;/a&gt; - runs &lt;a href=&quot;https://www.meetup.com/Serverless-NYC/&quot;&gt;Serverless NYC Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.seraro.com/&quot;&gt;Seraro&lt;/a&gt; - Who also runs Atlanta Serverless Meetup (https://www.meetup.com/Atlanta-CABI-Camp-Cloud-AI-Blockchain-IOT) and Delhi Serverless Meetup (https://www.meetup.com/Delhi-NCR-Serverless-Architecture-Meetup/)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://superluminar.io&quot;&gt;superluminar&lt;/a&gt; - runs serverlessdays Hamburg and Serverless Meetup Hamburg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jetbridge.com&quot;&gt;JetBridge&lt;/a&gt; - cloud-native and serverless application development services.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;d like to be featured here, &lt;a href=&quot;mailto:hello@serverless.com&quot;&gt;please contact us&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Serverless is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/LICENSE.txt&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms in the MIT License.&lt;/p&gt; 
&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Previous Serverless Version 0.5.x&lt;/h1&gt; 
&lt;p&gt;You can find projects and plugins relating to version 0.5 &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/0.5.x-RESOURCES.md&quot;&gt;here&lt;/a&gt;. Note that these are not compatible with v1.0 but we are working diligently on updating them. &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/docs/providers/aws/guide/plugins.md&quot;&gt;Guide on building v1.0 plugins&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can read the v0.5.x documentation at &lt;a href=&quot;https://serverless.readme.io/v0.5.0/docs&quot;&gt;readme.io&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sebhildebrandt/systeminformation</title>
      <link>https://github.com/sebhildebrandt/systeminformation</link>
      <description>&lt;p&gt;System Information Library for Node.JS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://npmjs.org/package/systeminformation&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/systeminformation.svg?style=flat-square&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/systeminformation&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/systeminformation.svg?style=flat-square&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/sebhildebrandt/systeminformation.svg?style=flat-square&quot; alt=&quot;Git Issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation/issues?q=is%3Aissue+is%3Aclosed&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-closed-raw/sebhildebrandt/systeminformation.svg?style=flat-square&amp;amp;color=brightgreen&quot; alt=&quot;Closed Issues&quot;&gt;&lt;/a&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://lgtm.com/projects/g/sebhildebrandt/systeminformation/context:javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/grade/javascript/g/sebhildebrandt/systeminformation.svg?style=flat-square&quot; alt=&quot;Code Quality: Javascript&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/sebhildebrandt/systeminformation/alerts&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/g/sebhildebrandt/systeminformation.svg?style=flat-square&quot; alt=&quot;Total alerts&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sebhildebrandt&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/caretaker-sebhildebrandt-blue.svg?style=flat-square&quot; alt=&quot;Caretaker&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.buymeacoffee.com/systeminfo&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Buy%20me%20a%20coffee-blue?style=flat-square&quot; alt=&quot;Sponsoring&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&quot; alt=&quot;MIT license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is amazing. Started as a small project just for myself, it now has &amp;gt; 10,000 lines of code, &amp;gt; 400 versions published, &amp;gt; 3 mio downloads per month, &amp;gt; 30 mio downloads overall. Thank you to all who contributed to this project!&lt;/p&gt; 
&lt;h2&gt;New Version 5.0&lt;/h2&gt; 
&lt;p&gt;The new Version 5 is here - I spend several weeks finalizing this new version. Any support is highly appreciated - &lt;a href=&quot;https://www.buymeacoffee.com/systeminfo&quot;&gt;Buy me a coffee&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This next major version release 5.0 comes with new functionality and several improvements and changes (some of them are breaking changes!):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;added audio: get detailed audio device information&lt;/li&gt; 
 &lt;li&gt;added bluetooth: get detailed bluetooth device information&lt;/li&gt; 
 &lt;li&gt;added printer: get information from detected printers&lt;/li&gt; 
 &lt;li&gt;added usb: get detailed usb controller and device information&lt;/li&gt; 
 &lt;li&gt;added wifi interfaces ans connections: extended wifi information&lt;/li&gt; 
 &lt;li&gt;better uuid function to get unique hardware and OS UUIDs&lt;/li&gt; 
 &lt;li&gt;better/extended cpu info detection&lt;/li&gt; 
 &lt;li&gt;better/extended system info detection&lt;/li&gt; 
 &lt;li&gt;Apple Silicon M1 support&lt;/li&gt; 
 &lt;li&gt;better Raspberry-PI detection&lt;/li&gt; 
 &lt;li&gt;systeminformation website updated and extendet with full documentation and examples &lt;a href=&quot;https://systeminformation.io&quot;&gt;systeminformation.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;lot of minor improvements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Breaking Changes in version 5: you will see several breaking changes for the sake of a more consistent API interface and to be future proof. Read the &lt;a href=&quot;https://systeminformation.io/changes.html&quot;&gt;detailed version 5 changes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I did a lot of testing on different platforms and machines but of course there might be some issues that I am not aware of. I would be happy if you inform me when you discover any issues. Issues can be &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation/issues/new/choose&quot;&gt;opened here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Lightweight collection of 50+ functions to retrieve detailed hardware, system and OS information.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;simple to use&lt;/li&gt; 
 &lt;li&gt;get detailed information about system, cpu, baseboard, battery, memory, disks/filesystem, network, docker, software, services and processes&lt;/li&gt; 
 &lt;li&gt;supports Linux, macOS, partial Windows, FreeBSD, OpenBSD, NetBSD and SunOS support&lt;/li&gt; 
 &lt;li&gt;no npm dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt;: this is a &lt;code&gt;node.js&lt;/code&gt; library. It is supposed to be used as a backend/server-side library and will definitely not work within a browser.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install systeminformation --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Still need Version 4?&lt;/h4&gt; 
&lt;p&gt;If you need version 4 (for compatibility reasons), you can install version 4 (latest release) like this&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install systeminformation@4 —save
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;All functions (except &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt;) are implemented as asynchronous functions. Here a small example how to use them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const si = require(&#39;systeminformation&#39;);

// promises style - new since version 3
si.cpu()
  .then(data =&amp;gt; console.log(data))
  .catch(error =&amp;gt; console.error(error));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Callback, Promises, Async / Await&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;News and Changes&lt;/h2&gt; 
&lt;h3&gt;Latest Activity&lt;/h3&gt; 
&lt;p&gt;(last 7 major and minor version releases)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Version 5.3.0: &lt;code&gt;osInfo()&lt;/code&gt; added remoteSession (win only)&lt;/li&gt; 
 &lt;li&gt;Version 5.2.0: &lt;code&gt;wifiInterfaces()&lt;/code&gt; and &lt;code&gt;wifiConnections()&lt;/code&gt; added&lt;/li&gt; 
 &lt;li&gt;Version 5.1.0: &lt;code&gt;memLayout()&lt;/code&gt; added ECC flag, &lt;code&gt;bios()&lt;/code&gt; added language, features (linux)&lt;/li&gt; 
 &lt;li&gt;Version 5.0.0: new version 5 - attention there are some breaking changes. See &lt;a href=&quot;https://systeminformation.io/changes.html&quot;&gt;detailed version 5 changes here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Version 4.34.0: &lt;code&gt;system()&lt;/code&gt; added flag virtual (linux, windows)&lt;/li&gt; 
 &lt;li&gt;Version 4.33.0: &lt;code&gt;graphics()&lt;/code&gt; added nvidia-smi support (linux, windows)&lt;/li&gt; 
 &lt;li&gt;Version 4.32.0: &lt;code&gt;graphics()&lt;/code&gt; added clinfo support (linux)&lt;/li&gt; 
 &lt;li&gt;Version 4.31.0: &lt;code&gt;osInfo()&lt;/code&gt; added FQDN&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find all changes here: &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation/blob/master/CHANGELOG.md&quot;&gt;detailed changelog&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Core concept&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; comes with some basic OS information, but I always wanted a little more. So I came up to write this little library. This library is still work in progress. It is supposed to be used as a backend/server-side library (will definitely not work within a browser). It requires node.js version 4.0 and above.&lt;/p&gt; 
&lt;p&gt;I was able to test it on several Debian, Raspbian, Ubuntu distributions as well as macOS (Mavericks, Yosemite, El Captain, Sierra, High Sierra, Mojave, Catalina, Big Sur) and some Windows 7, Windows 8, Windows 10, FreeBSD, OpenBSD, NetBSD and SunOS machines. Not all functions are supported on all operating systems. Have a look at the function reference in the docs to get further details.&lt;/p&gt; 
&lt;p&gt;If you have comments, suggestions &amp;amp; reports, please feel free to contact me!&lt;/p&gt; 
&lt;p&gt;I also created a nice little command line tool called &lt;a href=&quot;https://github.com/sebhildebrandt/mmon&quot;&gt;mmon&lt;/a&gt; (micro-monitor) for Linux and macOS, also available via &lt;a href=&quot;https://github.com/sebhildebrandt/mmon&quot;&gt;github&lt;/a&gt; and &lt;a href=&quot;https://npmjs.org/package/mmon&quot;&gt;npm&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Reference&lt;/h2&gt; 
&lt;h3&gt;Function Reference and OS Support&lt;/h3&gt; 
&lt;p&gt;Full function reference with examples can be found at &lt;a href=&quot;https://systeminformation.io&quot;&gt;https://systeminformation.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;1. General&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.version() | : string | X | X | X | X | X | lib version (no callback/promise) | | si.time() | {...} | X | X | X | X | X | (no callback/promise) | | | current | X | X | X | X | X | local (server) time | | | uptime | X | X | X | X | X | uptime in number of seconds | | | timezone | X | X | X | X | X | e.g. GMT+0200 | | | timezoneName | X | X | X | X | X | e.g. CEST |&lt;/p&gt; 
&lt;h4&gt;2. System (HW)&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.system(cb) | {...} | X | X | X | X | | hardware information | | | manufacturer | X | X | X | X | | e.g. &#39;MSI&#39; | | | model | X | X | X | X | | model/product e.g. &#39;MS-7823&#39; | | | version | X | X | X | X | | version e.g. &#39;1.0&#39; | | | serial | X | X | X | X | | serial number | | | uuid | X | X | X | X | | UUID | | | sku | X | X | X | X | | SKU number | | | virtual | X | X | | X | | is virtual machine | | | virtualHost | X | X | | X | | virtual host (if virtual) | | | raspberry | X | | | | | optional raspberry revision data | | si.bios(cb) | {...} | X | X | X | X | | bios information | | | vendor | X | X | X | X | | e.g. &#39;AMI&#39; | | | version | X | X | X | X | | version | | | releaseDate | X | X | | X | | release date | | | revision | X | X | | X | | revision | | si.baseboard(cb) | {...} | X | X | X | X | | baseboard information | | | manufacturer | X | X | X | X | | e.g. &#39;ASUS&#39; | | | model | X | X | X | X | | model / product name | | | version | X | X | X | X | | version | | | serial | X | X | X | X | | serial number | | | assetTag | X | X | X | X | | asset tag | | | memMax | X | | X | X | | max memory in bytes | | | memSlots | X | | X | X | | memory slots on baseboard | | si.chassis(cb) | {...} | X | X | X | X | | chassis information | | | manufacturer | X | X | X | X | | e.g. &#39;MSI&#39; | | | model | X | X | X | X | | model / product name | | | type | X | X | X | X | | model / product name | | | version | X | X | X | X | | version | | | serial | X | X | X | X | | serial number | | | assetTag | X | X | X | X | | asset tag | | | sku | | | | X | | SKU number |&lt;/p&gt; 
&lt;h4&gt;3. CPU&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.cpu(cb) | {...} | X | X | X | X | | CPU information| | | manufacturer | X | X | X | X | | e.g. &#39;Intel(R)&#39; | | | brand | X | X | X | X | | e.g. &#39;Core(TM)2 Duo&#39; | | | speed | X | X | X | X | | in GHz e.g. &#39;3.40&#39; | | | speedMin | X | | X | X | | in GHz e.g. &#39;0.80&#39; | | | speedMax | X | X | X | X | | in GHz e.g. &#39;3.90&#39; | | | governor | X | | | | | e.g. &#39;powersave&#39; | | | cores | X | X | X | X | | # cores | | | physicalCores | X | X | X | X | | # physical cores | | | efficiencyCores | | | X | | | # efficiancy cores (ARM only) | | | performanceCores | | | X | | | # performance cores (ARM only) | | | processors | X | X | X | X | | # processors | | | socket | X | X | | X | | socket type e.g. &quot;LGA1356&quot; | | | vendor | X | X | X | X | | vendor ID | | | family | X | X | X | X | | processor family | | | model | X | X | X | X | | processor model | | | stepping | X | X | X | X | | processor stepping | | | revision | X | | X | X | | revision | | | voltage | | X | | | | voltage | | | flags | X | X | X | X | | CPU flags | | | virtualization | X | X | X | X | | virtualization supported | | | cache | X | X | X | X | | cache in bytes (object) | | | cache.l1d | X | X | X | X | | L1D (data) size | | | cache.l1i | X | X | X | X | | L1I (instruction) size | | | cache.l2 | X | X | X | X | | L2 size | | | cache.l3 | X | X | X | X | | L3 size | | si.cpuFlags(cb) | : string | X | X | X | X | | CPU flags| | si.cpuCache(cb) | {...} | X | X | X | X | | CPU cache sizes | | | l1d | X | X | X | X | | L1D size | | | l1i | X | X | X | X | | L1I size | | | l2 | X | X | X | X | | L2 size | | | l3 | X | X | X | X | | L3 size | | si.cpuCurrentSpeed(cb) | {...} | X | X | X | X | X | current CPU speed (in GHz)| | | avg | X | X | X | X | X | avg CPU speed (all cores) | | | min | X | X | X | X | X | min CPU speed (all cores) | | | max | X | X | X | X | X | max CPU speed (all cores) | | | cores | X | X | X | X | X | CPU speed per core (array) | | si.cpuTemperature(cb) | {...} | X | X | X* | X | | CPU temperature (if supported) | | | main | X | X | X | X | | main temperature (avg) | | | cores | X | X | X | X | | array of temperatures | | | max | X | X | X | X | | max temperature |&lt;/p&gt; 
&lt;h4&gt;4. Memory&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.mem(cb) | {...} | X | X | X | X | X | Memory information (in bytes)| | | total | X | X | X | X | X | total memory in bytes | | | free | X | X | X | X | X | not used in bytes | | | used | X | X | X | X | X | used (incl. buffers/cache) | | | active | X | X | X | X | X | used actively (excl. buffers/cache) | | | buffcache | X | X | X | | X | used by buffers+cache | | | buffers | X | | | | | used by buffers | | | cached | X | | | | | used by cache | | | slab | X | | | | | used by slab | | | available | X | X | X | X | X | potentially available (total - active) | | | swaptotal | X | X | X | X | X | | | | swapused | X | X | X | X | X | | | | swapfree | X | X | X | X | X | | | si.memLayout(cb) | [{...}] | X | X | X | X | | Memory Layout (array) | | | [0].size | X | X | X | X | | size in bytes | | | [0].bank | X | X | | X | | memory bank | | | [0].type | X | X | X | X | | memory type | | | [0].clockSpeed | X | X | X | X | | clock speed | | | [0].formFactor | X | X | | X | | form factor | | | [0].manufacturer | X | X | X | X | | manufacturer | | | [0].partNum | X | X | X | X | | part number | | | [0].serialNum | X | X | X | X | | serial number | | | [0].voltageConfigured | X | X | | X | | voltage conf. | | | [0].voltageMin | X | X | | X | | voltage min | | | [0].voltageMax | X | X | | X | | voltage max |&lt;/p&gt; 
&lt;h4&gt;5. Battery&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.battery(cb) | {...} | X | X | X | X | | battery information | | | hasBattery | X | X | X | X | | indicates presence of battery | | | cycleCount | X | | X | | | numbers of recharges | | | isCharging | X | X | X | X | | indicates if battery is charging | | | designedCapacity | X | | X | X | | max capacity of battery (mWh) | | | maxCapacity | X | | X | X | | max capacity of battery (mWh) | | | currentCapacity | X | | X | X | | current capacity of battery (mWh) | | | capacityUnit | X | | X | X | | capacity unit (mWh) | | | voltage | X | | X | X | | current voltage of battery (V) | | | percent | X | X | X | X | | charging level in percent | | | timeRemaining | X | | X | | | minutes left (if discharging) | | | acConnected | X | X | X | X | | AC connected | | | type | X | | X | | | battery type | | | model | X | | X | | | model | | | manufacturer | X | | X | | | manufacturer | | | serial | X | | X | | | battery serial |&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;See known issues if you have problem with macOS temperature or windows temperature&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. Graphics&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.graphics(cb) | {...} | X | | X | X | | arrays of graphics controllers and displays | | | controllers[]| X | | X | X | | graphics controllers array | | | ...[0].model | X | | X | X | | graphics controller model | | | ...[0].vendor | X | | X | X | | e.g. ATI | | | ...[0].deviceName | | | | X | | e.g. \\.\DISPLAY1 | | | ...[0].bus | X | | X | X | | on which bus (e.g. PCIe) | | | ...[0].vram | X | | X | X | | VRAM size (in MB) | | | ...[0].vramDynamic | X | | X | X | | true if dynamicly allocated ram | | | displays[] | X | | X | X | | monitor/display array | | | ...[0].vendor | | | | X | | monitor/display vendor | | | ...[0].model | X | | X | X | | monitor/display model | | | ...[0].main | X | | X | X| | true if main monitor | | | ...[0].builtin | X | | X | | | true if built in monitor | | | ...[0].connection | X | | X | X | | e.g. DisplayPort or HDMI | | | ...[0].sizeX | X | | X | X | | size in mm horizontal | | | ...[0].sizeY | X | | X | X | | size in mm vertical | | | ...[0].pixelDepth | X | | X | X | | color depth in bits | | | ...[0].resolutionX | X | | X | X | | pixel horizontal | | | ...[0].resolutionY | X | | X | X | | pixel vertical | | | ...[0].currentResX | X | | X | X | | current pixel horizontal | | | ...[0].currentResY | X | | X | X | | current pixel vertical | | | ...[0].positionX | | | | X | | display position X | | | ...[0].positionY | | | | X | | display position Y | | | ...[0].currentRefreshRate | X | | X | X | | current screen refresh rate |&lt;/p&gt; 
&lt;h4&gt;7. Operating System&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.osInfo(cb) | {...} | X | X | X | X | X | OS information | | | platform | X | X | X | X | X | &#39;linux&#39;, &#39;darwin&#39;, &#39;win32&#39;, ... | | | distro | X | X | X | X | X | | | | release | X | X | X | X | X | | | | codename | | | X | | | | | | kernel | X | X | X | X | X | kernel release - same as os.release() | | | arch | X | X | X | X | X | same as os.arch() | | | hostname | X | X | X | X | X | same as os.hostname() | | | fqdn | X | X | X | X | X | FQDN fully qualified domain name | | | codepage | X | X | X | X | | OS build version | | | logofile | X | X | X | X | X | e.g. &#39;apple&#39;, &#39;debian&#39;, &#39;fedora&#39;, ... | | | serial | X | X | X | X | | OS/Host serial number | | | build | X | | X | X | | OS build version | | | servicepack | | | | X | | service pack version | | | uefi | X | X | X | X | | OS started via UEFI | | | hypervisor | | | | X | | hyper-v enabled? (win only) | | | remoteSession | | | | X | | runs in remote session (win only) | | si.uuid(cb) | {...} | X | X | X | X | X | object of several UUIDs | | | os | X | X | X | X | | os specific UUID | | | hardware | X | X | X | X | | hardware specific UUID | | | macs | X | X | X | X | | MAC addresses | | si.versions(apps, cb) | {...} | X | X | X | X | X | version information (kernel, ssl, node, ...)
 &lt;!-- raw HTML omitted --&gt;apps param is optional for detecting
 &lt;!-- raw HTML omitted --&gt;only specific apps/libs
 &lt;!-- raw HTML omitted --&gt;(string, comma separated) | | si.shell(cb) | : string | X | X | X | X | | standard shell | | si.users(cb) | [{...}] | X | X | X | X | X | array of users online | | | [0].user | X | X | X | X | X | user name | | | [0].tty | X | X | X | X | X | terminal | | | [0].date | X | X | X | X | X | login date | | | [0].time | X | X | X | X | X | login time | | | [0].ip | X | X | X | | X | ip address (remote login) | | | [0].command | X | X | X | | X | last command or shell |&lt;/p&gt; 
&lt;h4&gt;8. Current Load, Processes &amp;amp; Services&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.currentLoad(cb) | {...} | X | | X | X | X | CPU-Load | | | avgLoad | X | | X | | X | average load | | | currentLoad | X | | X | X | X | CPU load in % | | | currentLoadUser | X | | X | X | X | CPU load user in % | | | currentLoadSystem | X | | X | X | X | CPU load system in % | | | currentLoadNice | X | | X | X | X | CPU load nice in % | | | currentLoadIdle | X | | X | X | X | CPU load idle in % | | | currentLoadIrq | X | | X | X | X | CPU load system in % | | | rawCurrentLoad... | X | | X | X | X | CPU load raw values (ticks) | | | cpus[] | X | | X | X | X | current loads per CPU in % + raw ticks | | si.fullLoad(cb) | : integer | X | | X | X | | CPU full load since bootup in % | | si.processes(cb) | {...} | X | X | X | X | X | # running processes | | | all | X | X | X | X | X | # of all processes | | | running | X | X | X | X | X | # of all processes running | | | blocked | X | X | X | X | X | # of all processes blocked | | | sleeping | X | X | X | X | X | # of all processes sleeping | | | unknown | | | | X | | # of all processes unknown status | | | list[] | X | X | X | X | X | list of all processes incl. details | | | ...[0].pid | X | X | X | X | X | process PID | | | ...[0].parentPid | X | X | X | X | X | parent process PID | | | ...[0].name | X | X | X | X | X | process name | | | ...[0].pcpu | X | X | X | X | X | process % CPU usage | | | ...[0].pcpuu | X | X | | X | | process % CPU usage (user) | | | ...[0].pcpus | X | X | | X | | process % CPU usage (system) | | | ...[0].pmem | X | X | X | X | X | process memory % | | | ...[0].priority | X | X | X | X | X | process priotity | | | ...[0].memVsz | X | X | X | X | X | process virtual memory size | | | ...[0].memRss | X | X | X | X | X | process mem resident set size | | | ...[0].nice | X | X | X | | X | process nice value | | | ...[0].started | X | X | X | X | X | process start time | | | ...[0].state | X | X | X | X | X | process state (e.g. sleeping) | | | ...[0].tty | X | X | X | | X | tty from which process was started | | | ...[0].user | X | X | X | | X | user who started process | | | ...[0].command | X | X | X | X | X | process starting command | | | ...[0].params | X | X | X | | X | process params | | | ...[0].path | X | X | X | X | X | process path | | | proc | X | X | X | X | | process name | | | pid | X | X | X | X | | PID | | | pids | X | X | X | X | | additional pids | | | cpu | X | X | X | X | | process % CPU | | | mem | X | X | X | X | | process % MEM | | si.services(&#39;mysql, apache2&#39;, cb) | [{...}] | X | X | X | X | | pass comma separated string of services
 &lt;!-- raw HTML omitted --&gt;pass &quot;&lt;em&gt;&quot; for ALL services (linux/win only) | | | [0].name | X | X | X | X | | name of service | | | [0].running | X | X | X | X | | true / false | | | [0].startmode | | | | X | | manual, automatic, ... | | | [0].pids | X | X | X | X | | pids | | | [0].cpu | X | X | X | | | process % CPU | | | [0].mem | X | X | X | | | process % MEM | | si.processLoad(&#39;mysql, apache2&#39;, cb) | [{...}] | X | X | X | X | | pass comma separated string of processes
  &lt;!-- raw HTML omitted --&gt;pass &quot;&lt;/em&gt;&quot; for ALL processes (linux/win only) | | | [0].proc | X | X | X | X | | name of process | | | [0].pids | X | X | X | X | | pids | | | [0].cpu | X | X | X | | | process % CPU | | | [0].mem | X | X | X | | | process % MEM |&lt;/p&gt; 
&lt;h4&gt;9. File System&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.diskLayout(cb) | [{...}] | X | | X | X | | physical disk layout (array) | | | [0].device | X | | X | | | e.g. /dev/sda | | | [0].type | X | | X | X | | HD, SSD, NVMe | | | [0].name | X | | X | X | | disk name | | | [0].vendor | X | | | X | | vendor/producer | | | [0].size | X | | X | X | | size in bytes | | | [0].bytesPerSector | | | | X | | bytes per sector | | | [0].totalCylinders | | | | X | | total cylinders | | | [0].totalHeads | | | | X | | total heads | | | [0].totalSectors | | | | X | | total sectors | | | [0].totalTracks | | | | X | | total tracks | | | [0].tracksPerCylinder | | | | X | | tracks per cylinder | | | [0].sectorsPerTrack | | | | X | | sectors per track | | | [0].firmwareRevision | X | | X | X | | firmware revision | | | [0].serialNum | X | | X | X | | serial number | | | [0].interfaceType | X | | | X | | SATA, PCIe, ... | | | [0].smartStatus | X | | X | X | | S.M.A.R.T Status (see Known Issues) | | | [0].temperature | X | | | | | S.M.A.R.T temperature | | | [0].smartData | X | | | | | full S.M.A.R.T data from smartctl
 &lt;!-- raw HTML omitted --&gt;requires at least smartmontools 7.0 | | si.blockDevices(cb) | [{...}] | X | | X | X | | returns array of disks, partitions,
 &lt;!-- raw HTML omitted --&gt;raids and roms | | | [0].name | X | | X | X | | name | | | [0].type | X | | X | X | | type | | | [0].fstype | X | | X | X | | file system type (e.g. ext4) | | | [0].mount | X | | X | X | | mount point | | | [0].size | X | | X | X | | size in bytes | | | [0].physical | X | | X | X | | physical type (HDD, SSD, CD/DVD) | | | [0].uuid | X | | X | X | | UUID | | | [0].label | X | | X | X | | label | | | [0].model | X | | X | | | model | | | [0].serial | X | | | X | | serial | | | [0].removable | X | | X | X | | serial | | | [0].protocol | X | | X | | | protocol (SATA, PCI-Express, ...) | | si.disksIO(cb) | {...} | X | | X | | | current transfer stats | | | rIO | X | | X | | | read IOs on all mounted drives | | | wIO | X | | X | | | write IOs on all mounted drives | | | tIO | X | | X | | | write IOs on all mounted drives | | | rIO_sec | X | | X | | | read IO per sec (* see notes) | | | wIO_sec | X | | X | | | write IO per sec (* see notes) | | | tIO_sec | X | | X | | | total IO per sec (* see notes) | | | ms | X | | X | | | interval length (for per second values) | | si.fsSize(cb) | [{...}] | X | X | X | X | | returns array of mounted file systems | | | [0].fs | X | X | X | X | | name of file system | | | [0].type | X | X | X | X | | type of file system | | | [0].size | X | X | X | X | | sizes in bytes | | | [0].used | X | X | X | X | | used in bytes | | | [0].available | X | X | X | X | | used in bytes | | | [0].use | X | X | X | X | | used in % | | | [0].mount | X | X | X | X | | mount point | | si.fsOpenFiles(cb) | {...} | X | X | X | | | count max/allocated file descriptors | | | max | X | X | X | | | max file descriptors | | | allocated | X | X | X | | | current open files count | | | available | X | X | X | | | count available | | si.fsStats(cb) | {...} | X | | X | | | current transfer stats | | | rx | X | | X | | | bytes read since startup | | | wx | X | | X | | | bytes written since startup | | | tx | X | | X | | | total bytes read + written since startup | | | rx_sec | X | | X | | | bytes read / second (* see notes) | | | wx_sec | X | | X | | | bytes written / second (* see notes) | | | tx_sec | X | | X | | | total bytes reads + written / second | | | ms | X | | X | | | interval length (for per second values) |&lt;/p&gt; 
&lt;h4&gt;10. USB&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.usb(cb) | [{...}] | X | X | X | X | | get detected USB devices | | | [0].bus | X | | | | | USB bus | | | [0].deviceId | X | | | | | bus device id | | | [0].id | X | | X | X | | internal id | | | [0].name | X | | X | X | | name | | | [0].type | X | | X | X | | name | | | [0].removable | | | X | | | is removable | | | [0].vendor | X | | X | | | vendor | | | [0].manufacturer | X | | X | X | | manifacturer | | | [0].maxPower | X | | | | | max power | | | [0].default | X | | X | X | | is default printer | | | [0].serialNumber | | | X | | | serial number |&lt;/p&gt; 
&lt;h4&gt;11. Printer&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.printer(cb) | [{...}] | X | X | X | X | | get printer information | | | [0].id | X | | X | X | | internal id | | | [0].name | X | | X | X | | name | | | [0].model | X | | X | X | | model | | | [0].uri | X | | X | | | printer URI | | | [0].uuid | X | | | | | printer UUID | | | [0].status | X | | X | X | | printer status (e.g. idle) | | | [0].local | X | | X | X | | is local printer | | | [0].default | | | X | X | | is default printer | | | [0].shared | X | | X | X | | is shared printer |&lt;/p&gt; 
&lt;h4&gt;12. Audio&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.audio(cb) | [{...}] | X | X | X | X | | get printer information | | | [0].id | X | | X | X | | internal id | | | [0].name | X | | X | X | | name | | | [0].manufacturer | X | | X | X | | manufacturer | | | [0].revision | X | | | | | revision | | | [0].driver | X | | | | | driver | | | [0].default | | | X | X | | is default | | | [0].channel | X | | X | | | channel e.g. USB, HDMI, ... | | | [0].type | X | | X | X | | type e.g. Speaker | | | [0].in | | | X | X | | is input channel | | | [0].out | | | X | X | | is output channel | | | [0].interfaceType | X | | X | X | | interface type (PCIe, USB, HDMI, ...) | | | [0].status | X | | X | X | | printer status (e.g. idle) |&lt;/p&gt; 
&lt;h4&gt;13. Network related functions&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.networkInterfaces(cb) | [{...}] | X | X | X | X | X | array of network interfaces | | | [0].iface | X | X | X | X | X | interface | | | [0].ifaceName | X | X | X | X | X | interface name (differs on Windows) | | | [0].ip4 | X | X | X | X | X | ip4 address | | | [0].ip4subnet | X | X | X | X | X | ip4 subnet mask | | | [0].ip6 | X | X | X | X | X | ip6 address | | | [0].ip6subnet | X | X | X | X | X | ip6 subnet mask | | | [0].mac | X | X | X | X | X | MAC address | | | [0].internal | X | X | X | X | X | true if internal interface | | | [0].virtual | X | X | X | X | X | true if virtual interface | | | [0].operstate | X | | X | X | | up / down | | | [0].type | X | | X | X | | wireless / wired | | | [0].duplex | X | | X | | | duplex | | | [0].mtu | X | | X | | | maximum transmission unit | | | [0].speed | X | | X | X | | speed in MBit / s | | | [0].dhcp | X | | X | X | | IP address obtained by DHCP | | | [0].dnsSuffix | X | | | X | | DNS suffix | | | [0].ieee8021xAuth | X | | | X | | IEEE 802.1x auth | | | [0].ieee8021xState | X | | | X | | IEEE 802.1x state | | | [0].carrierChanges | X | | | | | # changes up/down | | si.networkInterfaceDefault(cb) | : string | X | X | X | X | X | get name of default network interface | | si.networkGatewayDefault(cb) | : string | X | X | X | X | X | get default network gateway | | si.networkStats(ifaces,cb) | [{...}] | X | X | X | X | | current network stats of given interfaces
 &lt;!-- raw HTML omitted --&gt;iface list: space or comma separated
 &lt;!-- raw HTML omitted --&gt;iface parameter is optional
 &lt;!-- raw HTML omitted --&gt;defaults to first external network interface,
 &lt;!-- raw HTML omitted --&gt;Pass &#39;&lt;em&gt;&#39; for all interfaces | | | [0].iface | X | X | X | X | | interface | | | [0].operstate | X | X | X | X | | up / down | | | [0].rx_bytes | X | X | X | X | | received bytes overall | | | [0].rx_dropped | X | X | X | X | | received dropped overall | | | [0].rx_errors | X | X | X | X | | received errors overall | | | [0].tx_bytes | X | X | X | X | | transferred bytes overall | | | [0].tx_dropped | X | X | X | X | | transferred dropped overall | | | [0].tx_errors | X | X | X | X | | transferred errors overall | | | [0].rx_sec | X | X | X | X | | received bytes / second (&lt;/em&gt; see notes) | | | [0].tx_sec | X | X | X | X | | transferred bytes per second (* see notes) | | | [0].ms | X | X | X | X | | interval length (for per second values) | | si.networkConnections(cb) | [{...}] | X | X | X | X | | current network network connections
 &lt;!-- raw HTML omitted --&gt;returns an array of all connections| | | [0].protocol | X | X | X | X | | tcp or udp | | | [0].localAddress | X | X | X | X | | local address | | | [0].localPort | X | X | X | X | | local port | | | [0].peerAddress | X | X | X | X | | peer address | | | [0].peerPort | X | X | X | X | | peer port | | | [0].state | X | X | X | X | | like ESTABLISHED, TIME_WAIT, ... | | | [0].pid | X | X | X | X | | process ID | | | [0].process | X | X | | | | process name | | si.inetChecksite(url, cb) | {...} | X | X | X | X | X | response-time (ms) to fetch given URL | | | url | X | X | X | X | X | given url | | | ok | X | X | X | X | X | status code OK (2xx, 3xx) | | | status | X | X | X | X | X | status code | | | ms | X | X | X | X | X | response time in ms | | si.inetLatency(host, cb) | : number | X | X | X | X | X | response-time (ms) to external resource
 &lt;!-- raw HTML omitted --&gt;host parameter is optional (default 8.8.8.8)|&lt;/p&gt; 
&lt;h4&gt;14. Wifi&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.wifiNetworks(cb) | [{...}] | X | | X | X | | array of available wifi networks | | | [0].ssid | X | | X | X | | Wifi network SSID | | | [0].bssid | X | | X | X | | BSSID (mac) | | | [0].mode | X | | | | | mode | | | [0].channel | X | | X | X | | channel | | | [0].frequency | X | | X | X | | frequengy in MHz | | | [0].signalLevel | X | | X | X | | signal level in dB | | | [0].quality | X | | X | X | | quaility in % | | | [0].security | X | | X | X | | array e.g. WPA, WPA-2 | | | [0].wpaFlags | X | | X | X | | array of WPA flags | | | [0].rsnFlags | X | | | | | array of RDN flags | | si.wifiInterfaces(cb) | [{...}] | X | | X | X | | array of detected wifi interfaces | | | [0].id | X | | X | X | | ID | | | [0].iface | X | | X | X | | interface | | | [0].model | X | | X | X | | model | | | [0].vendor | X | | X | X | | vendor | | | [0].mac | X | | X | X | | MAC address | | si.wifiConnections(cb) | [{...}] | X | | X | X | | array of active wifi connections | | | [0].id | X | | X | X | | ID | | | [0].iface | X | | X | X | | interface | | | [0].name | X | | X | X | | name | | | [0].mode | X | | X | X | | model | | | [0].bssid | X | | X | X | | BSSID (mac) | | | [0].mode | X | | | | | mode | | | [0].channel | X | | X | X | | channel | | | [0].frequency | X | | X | X | | frequengy in MHz | | | [0].signalLevel | X | | X | X | | signal level in dB | | | [0].quality | X | | X | X | | quaility in % | | | [0].security | X | | X | X | | array e.g. WPA, WPA-2 | | | [0].txRate | X | | X | X | | transfer rate MBit/s |&lt;/p&gt; 
&lt;h4&gt;15. Bluetooth&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.bluetoothDevices(cb) | [{...}] | X | | X | X | | ... | | | [0].device | | | X | | | device name | | | [0].name | X | | X | X | | name | | | [0].macDevice | X | | X | | | MAC address device | | | [0].macHost | X | | X | | | MAC address host | | | [0].batteryPercent | | | X | | | battery level percent | | | [0].manufacturer | | | X | X | | manufacturer | | | [0].type | X | | X | X | | typoe of bluetooth device | | | [0].connected | X | | X | | | is connected |&lt;/p&gt; 
&lt;h4&gt;16. Docker&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.dockerInfo(cb) | {...} | X | X | X | X | X | returns general docker info | | | id | X | X | X | X | X | Docker ID | | | containers | X | X | X | X | X | number of containers | | | containersRunning | X | X | X | X | X | number of running containers | | | containersPaused | X | X | X | X | X | number of paused containers | | | containersStopped | X | X | X | X | X | number of stopped containers | | | images | X | X | X | X | X | number of images | | | driver | X | X | X | X | X | driver (e.g. &#39;devicemapper&#39;, &#39;overlay2&#39;) | | | memoryLimit | X | X | X | X | X | has memory limit | | | swapLimit | X | X | X | X | X | has swap limit | | | kernelMemory | X | X | X | X | X | has kernal memory | | | cpuCfsPeriod | X | X | X | X | X | has CpuCfsPeriod | | | cpuCfsQuota | X | X | X | X | X | has CpuCfsQuota | | | cpuShares | X | X | X | X | X | has CPUShares | | | cpuSet | X | X | X | X | X | has CPUShares | | | ipv4Forwarding | X | X | X | X | X | has IPv4Forwarding | | | bridgeNfIptables | X | X | X | X | X | has BridgeNfIptables | | | bridgeNfIp6tables | X | X | X | X | X | has BridgeNfIp6tables | | | debug | X | X | X | X | X | Debug on | | | nfd | X | X | X | X | X | named data networking forwarding daemon | | | oomKillDisable | X | X | X | X | X | out-of-memory kill disabled | | | ngoroutines | X | X | X | X | X | number NGoroutines | | | systemTime | X | X | X | X | X | docker SystemTime | | | loggingDriver | X | X | X | X | X | logging driver e.g. &#39;json-file&#39; | | | cgroupDriver | X | X | X | X | X | cgroup driver e.g. &#39;cgroupfs&#39; | | | nEventsListener | X | X | X | X | X | number NEventsListeners | | | kernelVersion | X | X | X | X | X | docker kernel version | | | operatingSystem | X | X | X | X | X | docker OS e.g. &#39;Docker for Mac&#39; | | | osType | X | X | X | X | X | OSType e.g. &#39;linux&#39; | | | architecture | X | X | X | X | X | architecture e.g. x86_64 | | | ncpu | X | X | X | X | X | number of CPUs | | | memTotal | X | X | X | X | X | memory total | | | dockerRootDir | X | X | X | X | X | docker root directory | | | httpProxy | X | X | X | X | X | http proxy | | | httpsProxy | X | X | X | X | X | https proxy | | | noProxy | X | X | X | X | X | NoProxy | | | name | X | X | X | X | X | Name | | | labels | X | X | X | X | X | array of labels | | | experimentalBuild | X | X | X | X | X | is experimental build | | | serverVersion | X | X | X | X | X | server version | | | clusterStore | X | X | X | X | X | cluster store | | | clusterAdvertise | X | X | X | X | X | cluster advertise | | | defaultRuntime | X | X | X | X | X | default runtime e.g. &#39;runc&#39; | | | liveRestoreEnabled | X | X | X | X | X | live store enabled | | | isolation | X | X | X | X | X | isolation | | | initBinary | X | X | X | X | X | init binary | | | productLicense | X | X | X | X | X | product license | | si.dockerContainers(all, cb) | [{...}] | X | X | X | X | X | returns array of active/all docker containers | | | [0].id | X | X | X | X | X | ID of container | | | [0].name | X | X | X | X | X | name of container | | | [0].image | X | X | X | X | X | name of image | | | [0].imageID | X | X | X | X | X | ID of image | | | [0].command | X | X | X | X | X | command | | | [0].created | X | X | X | X | X | creation time (unix) | | | [0].started | X | X | X | X | X | creation time (unix) | | | [0].finished | X | X | X | X | X | creation time (unix) | | | [0].createdAt | X | X | X | X | X | creation date time string | | | [0].startedAt | X | X | X | X | X | creation date time string | | | [0].finishedAt | X | X | X | X | X | creation date time string | | | [0].state | X | X | X | X | X | created, running, exited | | | [0].ports | X | X | X | X | X | array of ports | | | [0].mounts | X | X | X | X | X | array of mounts | | si.dockerContainerStats(ids, cb) | [{...}] | X | X | X | X | X | statistics for specific containers
 &lt;!-- raw HTML omitted --&gt;container IDs: space or comma separated,
 &lt;!-- raw HTML omitted --&gt;pass &#39;*&#39; for all containers| | | [0].id | X | X | X | X | X | Container ID | | | [0].memUsage | X | X | X | X | X | memory usage in bytes | | | [0].memLimit | X | X | X | X | X | memory limit (max mem) in bytes | | | [0].memPercent | X | X | X | X | X | memory usage in percent | | | [0].cpuPercent | X | X | X | X | X | cpu usage in percent | | | [0].pids | X | X | X | X | X | number of processes | | | [0].netIO.rx | X | X | X | X | X | received bytes via network | | | [0].netIO.wx | X | X | X | X | X | sent bytes via network | | | [0].blockIO.r | X | X | X | X | X | bytes read from BlockIO | | | [0].blockIO.w | X | X | X | X | X | bytes written to BlockIO | | | [0].cpuStats | X | X | X | X | X | detailed cpu stats | | | [0].percpuStats | X | X | X | X | X | detailed per cpu stats | | | [0].memoryStats | X | X | X | X | X | detailed memory stats | | | [0].networks | X | X | X | X | X | detailed network stats per interface | | si.dockerContainerProcesses(id, cb) | [{...}] | X | X | X | X | X | array of processes inside a container | | | [0].pidHost | X | X | X | X | X | process ID (host) | | | [0].ppid | X | X | X | X | X | parent process ID | | | [0].pgid | X | X | X | X | X | process group ID | | | [0].user | X | X | X | X | X | effective user name | | | [0].ruser | X | X | X | X | X | real user name | | | [0].group | X | X | X | X | X | effective group name | | | [0].rgroup | X | X | X | X | X | real group name | | | [0].stat | X | X | X | X | X | process state | | | [0].time | X | X | X | X | X | accumulated CPU time | | | [0].elapsed | X | X | X | X | X | elapsed running time | | | [0].nice | X | X | X | X | X | nice value | | | [0].rss | X | X | X | X | X | resident set size | | | [0].vsz | X | X | X | X | X | virtual size in Kbytes | | | [0].command | X | X | X | X | X | command and arguments | | si.dockerAll(cb) | {...} | X | X | X | X | X | list of all containers including their stats
 &lt;!-- raw HTML omitted --&gt;and processes in one single array |&lt;/p&gt; 
&lt;h4&gt;17. Virtual Box&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.vboxInfo(cb) | [{...}] | X | X | X | X | X | returns array general virtual box info | | | [0].id | X | X | X | X | X | virtual box ID | | | [0].name | X | X | X | X | X | name | | | [0].running | X | X | X | X | X | vbox is running | | | [0].started | X | X | X | X | X | started date time | | | [0].runningSince | X | X | X | X | X | running since (secs) | | | [0].stopped | X | X | X | X | X | stopped date time | | | [0].stoppedSince | X | X | X | X | X | stopped since (secs) | | | [0].guestOS | X | X | X | X | X | Guest OS | | | [0].hardwareUUID | X | X | X | X | X | Hardware UUID | | | [0].memory | X | X | X | X | X | Memory in MB | | | [0].vram | X | X | X | X | X | VRAM in MB | | | [0].cpus | X | X | X | X | X | CPUs | | | [0].cpuExepCap | X | X | X | X | X | CPU exec cap | | | [0].cpuProfile | X | X | X | X | X | CPU profile | | | [0].chipset | X | X | X | X | X | chipset | | | [0].firmware | X | X | X | X | X | firmware | | | [0].pageFusion | X | X | X | X | X | page fusion | | | [0].configFile | X | X | X | X | X | config file | | | [0].snapshotFolder | X | X | X | X | X | snapshot folder | | | [0].logFolder | X | X | X | X | X | log folder path | | | [0].hpet | X | X | X | X | X | HPET | | | [0].pae | X | X | X | X | X | PAE | | | [0].longMode | X | X | X | X | X | long mode | | | [0].tripleFaultReset | X | X | X | X | X | triple fault reset | | | [0].apic | X | X | X | X | X | APIC | | | [0].x2Apic | X | X | X | X | X | X2APIC | | | [0].acpi | X | X | X | X | X | ACPI | | | [0].ioApic | X | X | X | X | X | IOAPIC | | | [0].biosApicMode | X | X | X | X | X | BIOS APIC mode | | | [0].bootMenuMode | X | X | X | X | X | boot menu Mode | | | [0].bootDevice1 | X | X | X | X | X | bootDevice1 | | | [0].bootDevice2 | X | X | X | X | X | bootDevice2 | | | [0].bootDevice3 | X | X | X | X | X | bootDevice3 | | | [0].bootDevice4 | X | X | X | X | X | bootDevice4 | | | [0].timeOffset | X | X | X | X | X | time Offset | | | [0].rtc | X | X | X | X | X | RTC |&lt;/p&gt; 
&lt;h4&gt;16. &quot;Get All / Observe&quot; - functions&lt;/h4&gt; 
&lt;p&gt;| Function | Result object | Linux | BSD | Mac | Win | Sun | Comments | | --------------- | ------------- | ----- | ------- | --- | --- | --- | -------- | | si.getStaticData(cb) | {...} | X | X | X | X | X | all static data at once | | si.getDynamicData(srv,iface,cb) | {...} | X | X | X | X | X | all dynamic data at once
 &lt;!-- raw HTML omitted --&gt;Specify services and interfaces to monitor
 &lt;!-- raw HTML omitted --&gt;Defaults to first external network interface
 &lt;!-- raw HTML omitted --&gt;Pass &quot;&lt;em&gt;&quot; for ALL services (linux/win only)
  &lt;!-- raw HTML omitted --&gt;Pass &quot;&lt;/em&gt;&quot; for ALL network interfaces | | si.getAllData(srv,iface,cb) | {...} | X | X | X | X | X | all data at once
 &lt;!-- raw HTML omitted --&gt;Specify services and interfaces to monitor
 &lt;!-- raw HTML omitted --&gt;Defaults to first external network interface
 &lt;!-- raw HTML omitted --&gt;Pass &quot;&lt;em&gt;&quot; for ALL services (linux/win only)
  &lt;!-- raw HTML omitted --&gt;Pass &quot;&lt;/em&gt;&quot; for ALL network interfaces | | si.get(valueObject,cb) | {...} | X | X | X | X | X | get partial system info data at once
 &lt;!-- raw HTML omitted --&gt;In valueObject you can define
 &lt;!-- raw HTML omitted --&gt;all values, you want to get back 
 &lt;!-- raw HTML omitted --&gt;(see documentation for details) | | si.observe(valueObject,interval,cb) | - | X | X | X | X | X | Observe a defined value object
 &lt;!-- raw HTML omitted --&gt;call callback on changes
 &lt;!-- raw HTML omitted --&gt;polling interval in milliseconds |&lt;/p&gt; 
&lt;h3&gt;cb: Asynchronous Function Calls (callback)&lt;/h3&gt; 
&lt;p&gt;Remember: all functions (except &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt;) are implemented as asynchronous functions! There are now three ways to consume them:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Callback Style&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const si = require(&#39;systeminformation&#39;);

si.cpu(function(data) {
  console.log(&#39;CPU Information:&#39;);
  console.log(&#39;- manufucturer: &#39; + data.manufacturer);
  console.log(&#39;- brand: &#39; + data.brand);
  console.log(&#39;- speed: &#39; + data.speed);
  console.log(&#39;- cores: &#39; + data.cores);
  console.log(&#39;- physical cores: &#39; + data.physicalCores);
  console.log(&#39;...&#39;);
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Promises&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Promises Style&lt;/strong&gt; is new in version 3.0.&lt;/p&gt; 
&lt;p&gt;When omitting callback parameter (cb), then you can use all function in a promise oriented way. All functions (except of &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt;) are returning a promise, that you can consume:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const si = require(&#39;systeminformation&#39;);

si.cpu()
  .then(data =&amp;gt; {
    console.log(&#39;CPU Information:&#39;);
    console.log(&#39;- manufucturer: &#39; + data.manufacturer);
    console.log(&#39;- brand: &#39; + data.brand);
    console.log(&#39;- speed: &#39; + data.speed);
    console.log(&#39;- cores: &#39; + data.cores);
    console.log(&#39;- physical cores: &#39; + data.physicalCores);
    console.log(&#39;...&#39;);
  })
  .catch(error =&amp;gt; console.error(error));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Async / Await&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Using async / await&lt;/strong&gt; (available since node v7.6)&lt;/p&gt; 
&lt;p&gt;Since node v7.6 you can also use the &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; pattern. The above example would then look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const si = require(&#39;systeminformation&#39;);

async function cpuData() {
  try {
    const data = await si.cpu();
    console.log(&#39;CPU Information:&#39;);
    console.log(&#39;- manufucturer: &#39; + data.manufacturer);
    console.log(&#39;- brand: &#39; + data.brand);
    console.log(&#39;- speed: &#39; + data.speed);
    console.log(&#39;- cores: &#39; + data.cores);
    console.log(&#39;- physical cores: &#39; + data.physicalCores);
    console.log(&#39;...&#39;);
  } catch (e) {
    console.log(e)
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Known Issues&lt;/h2&gt; 
&lt;h4&gt;macOS - Temperature Sensor&lt;/h4&gt; 
&lt;p&gt;To be able to measure temperature on macOS I created a little additional package. Due to some difficulties in NPM with &lt;code&gt;optionalDependencies&lt;/code&gt; I unfortunately was getting unexpected warnings on other platforms. So I decided to drop this optional dependency for macOS - so by default, you will not get correct values.&lt;/p&gt; 
&lt;p&gt;But if you need to detect macOS temperature just run the following additional installation command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npm install osx-temperature-sensor --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;systeminformation&lt;/code&gt; will then detect this additional library and return the temperature when calling systeminformations standard function &lt;code&gt;cpuTemperature()&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Windows Temperature, Battery, ...&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;wmic&lt;/code&gt; - which is used to determine temperature and battery sometimes needs to be run with admin privileges. So if you do not get any values, try to run it again with according privileges. If you still do not get any values, your system might not support this feature. In some cases we also discovered that &lt;code&gt;wmic&lt;/code&gt; returned incorrect temperature values.&lt;/p&gt; 
&lt;h4&gt;Linux Temperature&lt;/h4&gt; 
&lt;p&gt;In some cases you need to install the Linux &lt;code&gt;sensors&lt;/code&gt; package to be able to measure temperature e.g. on DEBIAN based systems by running &lt;code&gt;sudo apt-get install lm-sensors&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Linux S.M.A.R.T. Status&lt;/h4&gt; 
&lt;p&gt;To be able to detect S.M.A.R.T. status on Linux you need to install &lt;code&gt;smartmontools&lt;/code&gt;. On DEBIAN based Linux distributions you can install it by running &lt;code&gt;sudo apt-get install smartmontools&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;*: Additional Notes&lt;/h2&gt; 
&lt;p&gt;In &lt;code&gt;fsStats()&lt;/code&gt;, &lt;code&gt;disksIO()&lt;/code&gt; and &lt;code&gt;networkStats()&lt;/code&gt; the results / sec. values (rx_sec, IOPS, ...) are calculated correctly beginning with the second call of the function. It is determined by calculating the difference of transferred bytes / IOs divided by the time between two calls of the function.&lt;/p&gt; 
&lt;p&gt;The first time you are calling one of these functions, you will get &lt;code&gt;-1&lt;/code&gt; for transfer rates. The second time, you should then get statistics based on the time between the two calls ...&lt;/p&gt; 
&lt;p&gt;So basically, if you e.g. need a value for network stats every second, your code should look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const si = require(&#39;systeminformation&#39;);

setInterval(function() {
  si.networkStats().then(data =&amp;gt; {
    console.log(data);
  })
}, 1000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Beginning with the second call, you get network transfer values per second.&lt;/p&gt; 
&lt;h2&gt;Finding new issues&lt;/h2&gt; 
&lt;p&gt;I am happy to discuss any comments and suggestions. Please feel free to contact me if you see any possibility of improvement!&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;If you have ideas or comments, please do not hesitate to contact me.&lt;/p&gt; 
&lt;p&gt;Happy monitoring!&lt;/p&gt; 
&lt;p&gt;Sincerely,&lt;/p&gt; 
&lt;p&gt;Sebastian Hildebrandt, &lt;a href=&quot;http://www.plus-innovations.com&quot;&gt;+innovations&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Written by Sebastian Hildebrandt &lt;a href=&quot;https://github.com/sebhildebrandt&quot;&gt;sebhildebrandt&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Contributers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Guillaume Legrain &lt;a href=&quot;https://github.com/glegrain&quot;&gt;glegrain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Riccardo Novaglia &lt;a href=&quot;https://github.com/richy24&quot;&gt;richy24&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Quentin Busuttil &lt;a href=&quot;https://github.com/Buzut&quot;&gt;Buzut&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;lapsio &lt;a href=&quot;https://github.com/lapsio&quot;&gt;lapsio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;csy &lt;a href=&quot;https://github.com/csy1983&quot;&gt;csy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tiago Roldão &lt;a href=&quot;https://github.com/tiagoroldao&quot;&gt;tiagoroldao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;dragonjet &lt;a href=&quot;https://github.com/dragonjet&quot;&gt;dragonjet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Adam Reis &lt;a href=&quot;https://github.com/adamreisnz&quot;&gt;adamreisnz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Jimi M &lt;a href=&quot;https://github.com/ItsJimi&quot;&gt;ItsJimi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Git² &lt;a href=&quot;https://github.com/GitSquared&quot;&gt;GitSquared&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;weiyin &lt;a href=&quot;https://github.com/weiyin&quot;&gt;weiyin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Jorai Rijsdijk &lt;a href=&quot;https://github.com/Erackron&quot;&gt;Erackron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rasmus Porsager &lt;a href=&quot;https://github.com/porsager&quot;&gt;porsager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Nathan Patten &lt;a href=&quot;https://github.com/nrpatten&quot;&gt;nrpatten&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Juan Campuzano &lt;a href=&quot;https://github.com/juancampuzano&quot;&gt;juancampuzano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ricardo Polo &lt;a href=&quot;https://github.com/ricardopolo&quot;&gt;ricardopolo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Miłosz Dźwigała &lt;a href=&quot;https://github.com/mily20001&quot;&gt;mily20001&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;cconley717 &lt;a href=&quot;https://github.com/cconley717&quot;&gt;cconley717&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;OSX Temperature: credits here are going to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Frank Stock &lt;a href=&quot;https://github.com/pcafstockf&quot;&gt;pcafstockf&lt;/a&gt; - for his work on &lt;a href=&quot;https://github.com/pcafstockf/smc-reader&quot;&gt;smc-code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Copyright Information&lt;/h2&gt; 
&lt;p&gt;Linux is a registered trademark of Linus Torvalds. Apple, macOS, OS X are registered trademarks of Apple Inc., Windows is a registered trademark of Microsoft Corporation. Node.js is a trademark of Joyent Inc., Intel is a trademark of Intel Corporation, AMD is a trademark of Advanced Micro Devices Inc., Raspberry Pi is a trademark of the Raspberry Pi Foundation, Debian is a trademark of the Debian Project, Ubuntu is a trademark of Canonical Ltd., FreeBSD is a registered trademark of The FreeBSD Foundation, NetBSD is a registered trademark of The NetBSD Foundation, Docker is a trademark of Docker, Inc., Sun, Solaris, OpenSolaris and registered trademarks of Sun Microsystems, VMware is a trademark of VMware Inc, Virtual Box is a trademark of Oracle Corporation, Xen is a registered trademark of Xen Project, QEMU is a trademark of Fabrice Bellard, bochs is a trademark of The Bochs Project, USB and USB Logo are trademarks of USB Implementation Forum, Bluetooth and Bluetooth Logo are trademarks of Bluetooth SIG.&lt;/p&gt; 
&lt;p&gt;All other trademarks are the property of their respective owners.&lt;/p&gt; 
&lt;h2&gt;License &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&quot; alt=&quot;MIT license&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The &lt;a href=&quot;https://github.com/sebhildebrandt/systeminformation/blob/master/LICENSE&quot;&gt;&lt;code&gt;MIT&lt;/code&gt;&lt;/a&gt; License (MIT)&lt;/p&gt; 
 &lt;p&gt;Copyright © 2014-2021 Sebastian Hildebrandt, &lt;a href=&quot;http://www.plus-innovations.com&quot;&gt;+innovations&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
 &lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
 &lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
 &lt;p&gt;Further details see &lt;a href=&quot;https://raw.githubusercontent.com/sebhildebrandt/systeminformation/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>gatsbyjs/gatsby</title>
      <link>https://github.com/gatsbyjs/gatsby</link>
      <description>&lt;p&gt;Build blazing fast, modern apps and websites with React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Gatsby is a modern web framework for blazing fast websites.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Go Beyond Static Websites.&lt;/strong&gt; Get all the benefits of static websites with none of the limitations. Gatsby sites are fully functional React apps so you can create high-quality, dynamic web apps, from blogs to e-commerce sites to user dashboards.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use a Modern Stack for Every Site.&lt;/strong&gt; No matter where the data comes from, Gatsby sites are built using React and GraphQL. Build a uniform workflow for you and your team, regardless of whether the data is coming from the same backend.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Load Data From Anywhere.&lt;/strong&gt; Gatsby pulls in data from any data source, whether it’s Markdown files, a headless CMS like Contentful or WordPress, or a REST or GraphQL API. Use source plugins to load your data, then develop using Gatsby’s uniform GraphQL interface.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance Is Baked In.&lt;/strong&gt; Ace your performance audits by default. Gatsby automates code splitting, image optimization, inlining critical styles, lazy-loading, prefetching resources, and more to ensure your site is fast — no manual tuning required.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Host at Scale for Pennies.&lt;/strong&gt; Gatsby sites don’t require servers so you can host your entire site on a CDN for a fraction of the cost of a server-rendered site. Many Gatsby sites can be hosted entirely free on services like GitHub Pages and Netlify.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;&lt;strong&gt;Learn how to use Gatsby for your next project.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What’s In This Document&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-get-up-and-running-in-5-minutes&quot;&gt;Get Up and Running in 5 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-learning-gatsby&quot;&gt;Learning Gatsby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-migration-guides&quot;&gt;Migration Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#memo-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/#-thanks&quot;&gt;Thanks to Our Contributors and Sponsors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Get Up and Running in 5 Minutes&lt;/h2&gt; 
&lt;p&gt;You can get a new Gatsby site up and running on your local dev environment in 5 minutes with these four steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install the Gatsby CLI.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install -g gatsby-cli

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Gatsby site from a Gatsby starter.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Get your Gatsby blog set up in a single command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# create a new Gatsby site using the default starter
gatsby new my-blazing-fast-site
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the site in &lt;code&gt;develop&lt;/code&gt; mode.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Next, move into your new site’s directory and start it up:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd my-blazing-fast-site/
gatsby develop
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the source code and start editing!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Your site is now running at &lt;code&gt;http://localhost:8000&lt;/code&gt;. Open the &lt;code&gt;my-blazing-fast-site&lt;/code&gt; directory in your code editor of choice and edit &lt;code&gt;src/pages/index.js&lt;/code&gt;. Save your changes, and the browser will update in real time!&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;At this point, you’ve got a fully functional Gatsby website. For additional information on how you can customize your Gatsby site, see our &lt;a href=&quot;https://gatsbyjs.com/plugins/&quot;&gt;plugins&lt;/a&gt; and &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;the official tutorial&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🎓 Learning Gatsby&lt;/h2&gt; 
&lt;p&gt;Full documentation for Gatsby lives &lt;a href=&quot;https://www.gatsbyjs.com/&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For most developers, we recommend starting with our &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;in-depth tutorial for creating a site with Gatsby&lt;/a&gt;.&lt;/strong&gt; It starts with zero assumptions about your level of ability and walks through every step of the process.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;To dive straight into code samples head &lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;to our documentation&lt;/a&gt;.&lt;/strong&gt; In particular, check out the “
   &lt;!-- raw HTML omitted --&gt;Guides
   &lt;!-- raw HTML omitted --&gt;”, “
   &lt;!-- raw HTML omitted --&gt;API Reference
   &lt;!-- raw HTML omitted --&gt;”, and “
   &lt;!-- raw HTML omitted --&gt;Advanced Tutorials
   &lt;!-- raw HTML omitted --&gt;” sections in the sidebar.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We welcome suggestions for improving our docs. See the &lt;a href=&quot;https://www.gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;“how to contribute”&lt;/a&gt; documentation for more details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Start Learning Gatsby: &lt;a href=&quot;https://www.gatsbyjs.com/tutorial/&quot;&gt;Follow the Tutorial&lt;/a&gt; · &lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot;&gt;Read the Docs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;💼 Migration Guides&lt;/h2&gt; 
&lt;p&gt;Already have a Gatsby site? These handy guides will help you add the improvements of Gatsby v2 to your site without starting from scratch!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/migrating-from-v1-to-v2/&quot;&gt;Migrate a Gatsby site from v1 to v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Still on v0? Start here: &lt;a href=&quot;https://www.gatsbyjs.com/docs/migrating-from-v0-to-v1/&quot;&gt;Migrate a Gatsby site from v0 to v1&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❗ Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Gatsby is dedicated to building a welcoming, diverse, safe community. We expect everyone participating in the Gatsby community to abide by our &lt;a href=&quot;https://www.gatsbyjs.com/contributing/code-of-conduct/&quot;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;. Please read it. Please follow it. In the Gatsby community, we work hard to build each other up and create amazing things together. 💪💜&lt;/p&gt; 
&lt;h2&gt;🤝 How to Contribute&lt;/h2&gt; 
&lt;p&gt;Whether you&#39;re helping us fix bugs, improve the docs, or spread the word, we&#39;d love to have you as part of the Gatsby community! :muscle::purple_heart:&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://www.gatsbyjs.com/contributing/how-to-contribute/&quot;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; for ideas on contributing and setup steps for getting our repositories up and running on your local machine.&lt;/p&gt; 
&lt;h3&gt;A note on how this repository is organized&lt;/h3&gt; 
&lt;p&gt;This repository is a &lt;a href=&quot;https://trunkbaseddevelopment.com/monorepos/&quot;&gt;monorepo&lt;/a&gt; managed using &lt;a href=&quot;https://github.com/lerna/lerna&quot;&gt;Lerna&lt;/a&gt;. This means there are &lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/packages&quot;&gt;multiple packages&lt;/a&gt; managed in this codebase, even though we publish them to NPM as separate packages.&lt;/p&gt; 
&lt;h3&gt;Contributing to Gatsby v1&lt;/h3&gt; 
&lt;p&gt;We are currently only accepting bug fixes for Gatsby v1. No new features will be accepted.&lt;/p&gt; 
&lt;h2&gt;:memo: License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/gatsbyjs/gatsby/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💜 Thanks&lt;/h2&gt; 
&lt;p&gt;Thanks to our many contributors and to &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; for hosting &lt;a href=&quot;https://www.gatsbyjs.com&quot;&gt;Gatsby&lt;/a&gt; and our example sites.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/create-react-app</title>
      <link>https://github.com/facebook/create-react-app</link>
      <description>&lt;p&gt;Set up a modern web app by running one command.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Create React App &lt;a href=&quot;https://dev.azure.com/facebook/create-react-app/_build/latest?definitionId=1&amp;amp;branchName=master&quot;&gt;&lt;img src=&quot;https://dev.azure.com/facebook/create-react-app/_apis/build/status/facebook.create-react-app?branchName=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebook/create-react-app/blob/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-green.svg&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Create React apps with no build configuration.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/#creating-an-app&quot;&gt;Creating an App&lt;/a&gt; – How to create a new app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/&quot;&gt;User Guide&lt;/a&gt; – How to develop apps bootstrapped with Create React App.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Create React App works on macOS, Windows, and Linux.
 &lt;!-- raw HTML omitted --&gt; If something doesn’t work, please &lt;a href=&quot;https://github.com/facebook/create-react-app/issues/new&quot;&gt;file an issue&lt;/a&gt;.
 &lt;!-- raw HTML omitted --&gt; If you have questions or need help, please ask in &lt;a href=&quot;https://github.com/facebook/create-react-app/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Overview&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-react-app my-app
cd my-app
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;ve previously installed &lt;code&gt;create-react-app&lt;/code&gt; globally via &lt;code&gt;npm install -g create-react-app&lt;/code&gt;, we recommend you uninstall the package using &lt;code&gt;npm uninstall -g create-react-app&lt;/code&gt; or &lt;code&gt;yarn global remove create-react-app&lt;/code&gt; to ensure that npx always uses the latest version.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; comes with npm 5.2+ and higher, see &lt;a href=&quot;https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f&quot;&gt;instructions for older npm versions&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Then open &lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt; to see your app.
 &lt;!-- raw HTML omitted --&gt; When you’re ready to deploy to production, create a minified bundle with &lt;code&gt;npm run build&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Get Started Immediately&lt;/h3&gt; 
&lt;p&gt;You &lt;strong&gt;don’t&lt;/strong&gt; need to install or configure tools like webpack or Babel.
 &lt;!-- raw HTML omitted --&gt; They are preconfigured and hidden so that you can focus on the code.&lt;/p&gt; 
&lt;p&gt;Create a project, and you’re good to go.&lt;/p&gt; 
&lt;h2&gt;Creating an App&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;You’ll need to have Node 10.16.0 or later version on your local development machine&lt;/strong&gt; (but it’s not required on the server). We recommend using the latest LTS version. You can use &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (macOS/Linux) or &lt;a href=&quot;https://github.com/coreybutler/nvm-windows#node-version-manager-nvm-for-windows&quot;&gt;nvm-windows&lt;/a&gt; to switch Node versions between different projects.&lt;/p&gt; 
&lt;p&gt;To create a new app, you may choose one of the following methods:&lt;/p&gt; 
&lt;h3&gt;npx&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; is a package runner tool that comes with npm 5.2+ and higher, see &lt;a href=&quot;https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f&quot;&gt;instructions for older npm versions&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;npm&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm init react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;code&gt;npm init &amp;lt;initializer&amp;gt;&lt;/code&gt; is available in npm 6+&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn create react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://yarnpkg.com/lang/en/docs/cli/create/&quot;&gt;&lt;code&gt;yarn create &amp;lt;starter-kit-package&amp;gt;&lt;/code&gt;&lt;/a&gt; is available in Yarn 0.25+&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;It will create a directory called &lt;code&gt;my-app&lt;/code&gt; inside the current folder.
 &lt;!-- raw HTML omitted --&gt; Inside that directory, it will generate the initial project structure and install the transitive dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;my-app
├── README.md
├── node_modules
├── package.json
├── .gitignore
├── public
│   ├── favicon.ico
│   ├── index.html
│   └── manifest.json
└── src
    ├── App.css
    ├── App.js
    ├── App.test.js
    ├── index.css
    ├── index.js
    ├── logo.svg
    └── serviceWorker.js
    └── setupTests.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No configuration or complicated folder structures, only the files you need to build your app.
 &lt;!-- raw HTML omitted --&gt; Once the installation is done, you can open your project folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Inside the newly created project, you can run some built-in commands:&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;yarn start&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the app in development mode.
 &lt;!-- raw HTML omitted --&gt; Open &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;/p&gt; 
&lt;p&gt;The page will automatically reload if you make changes to the code.
 &lt;!-- raw HTML omitted --&gt; You will see the build errors and lint warnings in the console.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;&lt;code&gt;npm test&lt;/code&gt; or &lt;code&gt;yarn test&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the test watcher in an interactive mode.
 &lt;!-- raw HTML omitted --&gt; By default, runs tests related to files changed since the last commit.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/running-tests&quot;&gt;Read more about testing.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm run build&lt;/code&gt; or &lt;code&gt;yarn build&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Builds the app for production to the &lt;code&gt;build&lt;/code&gt; folder.
 &lt;!-- raw HTML omitted --&gt; It correctly bundles React in production mode and optimizes the build for the best performance.&lt;/p&gt; 
&lt;p&gt;The build is minified and the filenames include the hashes.
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Your app is ready to be deployed.&lt;/p&gt; 
&lt;h2&gt;User Guide&lt;/h2&gt; 
&lt;p&gt;You can find detailed instructions on using Create React App and many tips in &lt;a href=&quot;https://facebook.github.io/create-react-app/&quot;&gt;its documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to Update to New Versions?&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/updating-to-new-releases&quot;&gt;User Guide&lt;/a&gt; for this and other information.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;One Dependency:&lt;/strong&gt; There is only one build dependency. It uses webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Configuration Required:&lt;/strong&gt; You don&#39;t need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Lock-In:&lt;/strong&gt; You can “eject” to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What’s Included?&lt;/h2&gt; 
&lt;p&gt;Your environment will have everything you need to build a modern single-page React app:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React, JSX, ES6, TypeScript and Flow syntax support.&lt;/li&gt; 
 &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; 
 &lt;li&gt;Autoprefixed CSS, so you don’t need &lt;code&gt;-webkit-&lt;/code&gt; or other prefixes.&lt;/li&gt; 
 &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; 
 &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; 
 &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; 
 &lt;li&gt;An offline-first &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/service-workers&quot;&gt;service worker&lt;/a&gt; and a &lt;a href=&quot;https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/&quot;&gt;web app manifest&lt;/a&gt;, meeting all the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app&quot;&gt;Progressive Web App&lt;/a&gt; criteria. (&lt;em&gt;Note: Using the service worker is opt-in as of &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;Hassle-free updates for the above tools with a single dependency.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://github.com/nitishdayal/cra_closer_look&quot;&gt;this guide&lt;/a&gt; for an overview of how these tools fit together.&lt;/p&gt; 
&lt;p&gt;The tradeoff is that &lt;strong&gt;these tools are preconfigured to work in a specific way&lt;/strong&gt;. If your project needs more customization, you can &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/available-scripts#npm-run-eject&quot;&gt;&quot;eject&quot;&lt;/a&gt; and customize it, but then you will need to maintain this configuration.&lt;/p&gt; 
&lt;h2&gt;Popular Alternatives&lt;/h2&gt; 
&lt;p&gt;Create React App is a great fit for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Learning React&lt;/strong&gt; in a comfortable and feature-rich development environment.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Starting new single-page React applications.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Creating examples&lt;/strong&gt; with React for your libraries and components.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here are a few common cases where you might want to try something else:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you want to &lt;strong&gt;try React&lt;/strong&gt; without hundreds of transitive build tool dependencies, consider &lt;a href=&quot;https://reactjs.org/docs/try-react.html&quot;&gt;using a single HTML file or an online sandbox instead&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need to &lt;strong&gt;integrate React code with a server-side template framework&lt;/strong&gt; like Rails, Django or Symfony, or if you’re &lt;strong&gt;not building a single-page app&lt;/strong&gt;, consider using &lt;a href=&quot;https://github.com/insin/nwb&quot;&gt;nwb&lt;/a&gt;, or &lt;a href=&quot;https://neutrino.js.org/&quot;&gt;Neutrino&lt;/a&gt; which are more flexible. For Rails specifically, you can use &lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;Rails Webpacker&lt;/a&gt;. For Symfony, try &lt;a href=&quot;https://symfony.com/doc/current/frontend/encore/reactjs.html&quot;&gt;Symfony&#39;s webpack Encore&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need to &lt;strong&gt;publish a React component&lt;/strong&gt;, &lt;a href=&quot;https://github.com/insin/nwb&quot;&gt;nwb&lt;/a&gt; can &lt;a href=&quot;https://github.com/insin/nwb#react-components-and-libraries&quot;&gt;also do this&lt;/a&gt;, as well as &lt;a href=&quot;https://neutrino.js.org/packages/react-components/&quot;&gt;Neutrino&#39;s react-components preset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to do &lt;strong&gt;server rendering&lt;/strong&gt; with React and Node.js, check out &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; or &lt;a href=&quot;https://github.com/jaredpalmer/razzle&quot;&gt;Razzle&lt;/a&gt;. Create React App is agnostic of the backend, and only produces static HTML/JS/CSS bundles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If your website is &lt;strong&gt;mostly static&lt;/strong&gt; (for example, a portfolio or a blog), consider using &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt; or &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;. Unlike Create React App, Gatsby pre-renders the website into HTML at build time. Next.js supports both server rendering and pre-rendering.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, if you need &lt;strong&gt;more customization&lt;/strong&gt;, check out &lt;a href=&quot;https://neutrino.js.org/&quot;&gt;Neutrino&lt;/a&gt; and its &lt;a href=&quot;https://neutrino.js.org/packages/react/&quot;&gt;React preset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All of the above tools can work with little to no configuration.&lt;/p&gt; 
&lt;p&gt;If you prefer configuring the build yourself, &lt;a href=&quot;https://reactjs.org/docs/add-react-to-an-existing-app.html&quot;&gt;follow this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;React Native&lt;/h2&gt; 
&lt;p&gt;Looking for something similar, but for React Native?
 &lt;!-- raw HTML omitted --&gt; Check out &lt;a href=&quot;https://github.com/expo/expo-cli&quot;&gt;Expo CLI&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;d love to have your helping hand on &lt;code&gt;create-react-app&lt;/code&gt;! See &lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we&#39;re looking for and how to get started.&lt;/p&gt; 
&lt;h2&gt;Supporting Create React App&lt;/h2&gt; 
&lt;p&gt;Create React App is a community maintained project and all contributors are volunteers. If you&#39;d like to support the future development of Create React App then please consider donating to our &lt;a href=&quot;https://opencollective.com/create-react-app&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who &lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt;.
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; for hosting our documentation.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We are grateful to the authors of existing related projects for their ideas and collaboration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eanplatter&quot;&gt;@eanplatter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/insin&quot;&gt;@insin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mxstbr&quot;&gt;@mxstbr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Create React App is open source software &lt;a href=&quot;https://github.com/facebook/create-react-app/blob/master/LICENSE&quot;&gt;licensed as MIT&lt;/a&gt;. The Create React App logo is licensed under a &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>swagger-api/swagger-editor</title>
      <link>https://github.com/swagger-api/swagger-editor</link>
      <description>&lt;p&gt;Swagger Editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://badge.fury.io/js/swagger-editor&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/swagger-ui.svg&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://jenkins.swagger.io/job/oss-swagger-editor-master/&quot;&gt;&lt;img src=&quot;https://jenkins.swagger.io/buildStatus/icon?job=oss-swagger-editor-master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/github/swagger-api/swagger-editor&quot;&gt;&lt;img src=&quot;https://codeclimate.com/github/swagger-api/swagger-editor/badges/gpa.svg&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/swagger-api/swagger-editor&quot;&gt;&lt;img src=&quot;https://david-dm.org/swagger-api/swagger-editor/status.svg&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/swagger-api/swagger-editor-#info=devDependencies&quot;&gt;&lt;img src=&quot;https://david-dm.org/swagger-api/swagger-editor/dev-status.svg&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-editor-master/&quot;&gt;&lt;img src=&quot;https://jenkins.swagger.io/view/OSS%20-%20JavaScript/job/oss-swagger-editor-master/badge/icon?subject=jenkins%20build&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🕰️ Looking for the older version of Swagger Editor?&lt;/strong&gt; Refer to the &lt;a href=&quot;https://github.com/swagger-api/swagger-editor/tree/2.x&quot;&gt;&lt;em&gt;2.x&lt;/em&gt; branch&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Swagger Editor lets you edit &lt;a href=&quot;https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md&quot;&gt;Swagger API specifications&lt;/a&gt; in YAML inside your browser and to preview documentations in real time. Valid Swagger JSON descriptions can then be generated and used with the full Swagger tooling (code generation, documentation, etc).&lt;/p&gt; 
&lt;p&gt;As a brand new version, written from the ground up, there are some known issues and unimplemented features. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-editor/master/#known-issues&quot;&gt;Known Issues&lt;/a&gt; section for more details.&lt;/p&gt; 
&lt;p&gt;This repository publishes to two different NPM modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/swagger-editor&quot;&gt;swagger-editor&lt;/a&gt; is a traditional npm module intended for use in single-page applications that are capable of resolving dependencies (via Webpack, Browserify, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/swagger-editor-dist&quot;&gt;swagger-editor-dist&lt;/a&gt; is a dependency-free module that includes everything you need to serve Swagger Editor in a server-side project, or a web project that can&#39;t resolve npm module dependencies.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;re building a single-page application, using &lt;code&gt;swagger-editor&lt;/code&gt; is strongly recommended, since &lt;code&gt;swagger-editor-dist&lt;/code&gt; is significantly larger.&lt;/p&gt; 
&lt;p&gt;For the older version of swagger-editor, refer to the &lt;a href=&quot;https://github.com/swagger-api/swagger-editor/tree/2.x&quot;&gt;&lt;em&gt;2.x branch&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Helpful scripts&lt;/h2&gt; 
&lt;p&gt;Any of the scripts below can be run by typing &lt;code&gt;npm run &amp;lt;script name&amp;gt;&lt;/code&gt; in the project&#39;s root directory.&lt;/p&gt; 
&lt;h3&gt;Developing&lt;/h3&gt; 
&lt;p&gt;Script name | Description --- | --- &lt;code&gt;dev&lt;/code&gt; | Spawn a hot-reloading dev server on port 3200. &lt;code&gt;deps-check&lt;/code&gt; | Generate a size and licensing report on Swagger Editors&#39;s dependencies. &lt;code&gt;lint&lt;/code&gt; | Report ESLint style errors and warnings. &lt;code&gt;lint-errors&lt;/code&gt; | Report ESLint style errors, without warnings. &lt;code&gt;lint-fix&lt;/code&gt; | Attempt to fix style errors automatically. &lt;code&gt;watch&lt;/code&gt; | Rebuild the core files in &lt;code&gt;/dist&lt;/code&gt; when the source code changes. Useful for &lt;code&gt;npm link&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Building&lt;/h3&gt; 
&lt;p&gt;Script name | Description --- | --- &lt;code&gt;build&lt;/code&gt; | Build a new set of JS and CSS assets, and output them to &lt;code&gt;/dist&lt;/code&gt;. &lt;code&gt;build:bundle&lt;/code&gt; | Build &lt;code&gt;swagger-editor-bundle.js&lt;/code&gt; only (commonJS). &lt;code&gt;build:core&lt;/code&gt; | Build &lt;code&gt;swagger-editor.(js\|css)&lt;/code&gt; only (commonJS). &lt;code&gt;build:standalone&lt;/code&gt; | Build &lt;code&gt;swagger-editor-standalone-preset.js&lt;/code&gt; only (commonJS). &lt;code&gt;build:stylesheets&lt;/code&gt; | Build &lt;code&gt;swagger-editor.css&lt;/code&gt; only. &lt;code&gt;build:es:bundle&lt;/code&gt; | Build &lt;code&gt;swagger-editor-es-bundle.js&lt;/code&gt; only (es2015). &lt;code&gt;build:es:bundle:core&lt;/code&gt; | Build &lt;code&gt;swagger-editor-es-bundle-core.js&lt;/code&gt; only (es2015).&lt;/p&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;Script name | Description --- | --- &lt;code&gt;test&lt;/code&gt; | Run unit tests in Node, run Cypress end-to-end tests, and run ESLint in errors-only mode. &lt;code&gt;test:unit-mocha&lt;/code&gt; | Run Mocha-based unit tests in Node. &lt;code&gt;test:unit-jest&lt;/code&gt; | Run Jest-based unit tests in Node. &lt;code&gt;e2e&lt;/code&gt; | Run end-to-end browser tests with Cypress. &lt;code&gt;lint&lt;/code&gt; | Run ESLint test &lt;code&gt;test:artifact&lt;/code&gt; | Run list of bundle artifact tests in Jest &lt;code&gt;test:artifact:umd:bundle&lt;/code&gt; | Run unit test that confirms &lt;code&gt;swagger-editor-bundle&lt;/code&gt; exports as a Function &lt;code&gt;test:artifact:es:bundle&lt;/code&gt; | Run unit test that confirms &lt;code&gt;swagger-editor-es-bundle&lt;/code&gt; exports as a Function &lt;code&gt;test:artifact:es:bundle:core&lt;/code&gt; | Run unit test that confirms &lt;code&gt;swagger-editor-es-bundle-core&lt;/code&gt; exports as a Function&lt;/p&gt; 
&lt;h2&gt;Running locally&lt;/h2&gt; 
&lt;h5&gt;Prerequisites&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;NPM 6.x&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Generally, we recommend the following guidelines from &lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;Node.js Releases&lt;/a&gt; to only use Active LTS or Maintenance LTS releases.&lt;/p&gt; 
&lt;p&gt;Current Node.js Active LTS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 12.x&lt;/li&gt; 
 &lt;li&gt;NPM 6.x&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current Node.js Maintenance LTS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 10.x&lt;/li&gt; 
 &lt;li&gt;NPM 6.x&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have Node.js and npm installed, you can run &lt;code&gt;npm start&lt;/code&gt; to spin up a static server.&lt;/p&gt; 
&lt;p&gt;Otherwise, you can open &lt;code&gt;index.html&lt;/code&gt; directly from your filesystem in your browser.&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to make code changes to Swagger Editor, you can start up a Webpack hot-reloading dev server via &lt;code&gt;npm run dev&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;Browser support&lt;/h5&gt; 
&lt;p&gt;Swagger Editor works in the latest versions of Chrome, Safari, Firefox, and Edge.&lt;/p&gt; 
&lt;h3&gt;Known Issues&lt;/h3&gt; 
&lt;p&gt;To help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Everything listed in &lt;a href=&quot;https://github.com/swagger-api/swagger-ui/blob/master/README.md#known-issues&quot;&gt;Swagger UI&#39;s Known Issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The integration with the codegen is still missing.&lt;/li&gt; 
 &lt;li&gt;Importing specs from a URL is not implemented.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;h3&gt;Running the image from DockerHub&lt;/h3&gt; 
&lt;p&gt;There is a docker image published in &lt;a href=&quot;https://hub.docker.com/r/swaggerapi/swagger-editor/&quot;&gt;DockerHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use this, run the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker pull swaggerapi/swagger-editor
docker run -d -p 80:8080 swaggerapi/swagger-editor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will run Swagger Editor (in detached mode) on port 80 on your machine, so you can open it by navigating to &lt;code&gt;http://localhost&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can provide your own &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;yaml&lt;/code&gt; definition file on your host&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d -p 80:8080 -v $(pwd):/tmp -e SWAGGER_FILE=/tmp/swagger.json swaggerapi/swagger-editor
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can provide a API document from your local machine — for example, if you have a file at &lt;code&gt;./bar/swagger.json&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d -p 80:8080 -e URL=/foo/swagger.json -v /bar:/usr/share/nginx/html/foo swaggerapi/swagger-editor
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can specify a different base url at which where to access the application - for example if you want to application to be available at &lt;code&gt;http://localhost/swagger-editor/&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d -p 80:8080 -e BASE_URL=/swagger-editor swaggerapi/swagger-editor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building and running an image locally&lt;/h3&gt; 
&lt;p&gt;To build and run a docker image with the code checked out on your machine, run the following from the root directory of the project:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Install npm packages (if needed)
npm install

# Build the app
npm run build

# Build an image
docker build -t swagger-editor .

# Run the container
docker run -d -p 80:8080 swagger-editor

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then view the app by navigating to &lt;code&gt;http://localhost&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/swagger-api/swagger-editor/master/docs/import.md&quot;&gt;Importing your OpenAPI document&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/swagger-api/.github/blob/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security contact&lt;/h2&gt; 
&lt;p&gt;Please disclose any security-related issues or vulnerabilities by emailing &lt;a href=&quot;mailto:security@swagger.io&quot;&gt;security@swagger.io&lt;/a&gt;, instead of using the public issue tracker.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jarred-Sumner/git-peek</title>
      <link>https://github.com/Jarred-Sumner/git-peek</link>
      <description>&lt;p&gt;git repo to local editor instantly&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;git-peek&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;git peek&lt;/code&gt; is the fastest way to open a remote git repository in your local text editor.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Use it when you want to browse or search other people&#39;s code with your own editor.&lt;/p&gt; 
&lt;h2&gt;Installation:&lt;/h2&gt; 
&lt;p&gt;Installing from npm makes updates easy:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install -g @jarred/git-peek
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But there are also &lt;a href=&quot;https://github.com/Jarred-Sumner/git-peek/releases&quot;&gt;precompiled binaries&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jarred-Sumner/git-peek/releases/download/1.2.2/git-peek.exe&quot;&gt;Windows x64 – 1.2.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jarred-Sumner/git-peek/releases/download/1.2.2/git-peek-macOS&quot;&gt;macOS x64 – 1.2.2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jarred-Sumner/1-click-from-github-to-editor&quot;&gt;Try the chrome/firefox extension&lt;/a&gt;. It adds an &quot;Open&quot; button to pull requests, files, and repositories, so you can read code with your editor without needing to copy-paste into the terminal. Only works on macOS for now and doesn&#39;t work on vim (terminal editor without a temrinal? how)&lt;/p&gt; 
&lt;h2&gt;Usage:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;git peek https://github.com/ylukem/pin-go
git peek https://github.com/jarred-sumner/atbuild
git peek https://github.com/facebook/react/pull/20790
git peek hanford/trends
git peek react
git peek https://github.com/jarred-sumner/fastbench.dev/tree/main/
git peek https://github.com/evanw/esbuild/blob/master/lib/common.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pass &lt;code&gt;git peek&lt;/code&gt; a git repository or a github link, and it will quickly fetch and open it in your local editor. It stores the repository in a temporary directory and deletes it when you close the editor or &lt;code&gt;git peek&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;It&#39;s fast.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git peek https://github.com/nodejs/node/blob/master/lib/dgram.js
⏳ Extracting repository to temp folder...
💻 Launched editor in 0.20s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you paste a link to a pull request on GitHub, it will open it quickly:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;❯ git peek https://github.com/facebook/react/pull/20790
💻 Launched editor in 0.13s
⏳ Extracting repository to temp folder...
💿 Finished downloading repository!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Much faster than cloning.&lt;/p&gt; 
&lt;p&gt;If you don&#39;t pass &lt;code&gt;git peek&lt;/code&gt; input, it will let you search Github repositories and show &lt;a href=&quot;https://trends.now.sh&quot;&gt;trending repositories&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;❯ git peek
Search Github repositories:
&amp;gt; Search
❯ iam-abbas/Reddit-Stock-T | Fetch currently trending stocks on Reddit
  codeSTACKr/free-develope | Free Developer Resources
  justjavac/1s             | 天若有情天亦老，我为网站加一秒
  PaddlePaddle/PaddleNLP   | NLP Core Library and Model Zoo based on PaddlePa
  ModernPwner/cicuta_viros |
  jevakallio/vscode-live-f | Run your web app inside VS Code
  getActivity/AndroidCodeS | Android 代码规范文档
  gigantz/react-xpress     | React renderer to build Node.js server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you type a repository name without the owner (&lt;code&gt;react&lt;/code&gt; instead of &lt;code&gt;facebook/react&lt;/code&gt;), it will search:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;❯ git peek react
Search Github repositories:
&amp;gt; react
❯ facebook/react           | A declarative, efficient, and flexible JavaScrip
  typescript-cheatsheets/r | Cheatsheets for experienced React developers get
  duxianwei520/react       |  React+webpack+redux+ant design+axios+less全家桶后台管
  discountry/react         | React docs in Chinese | React 中文文档翻译
  Cathy0807/react          | 京东首页构建
  react-redux-antd-es6/rea | 基于react的企业后台管理开发框架
  HackYourFuture/React     | This repository contains all the material for th
  geist-org/react          | Modern and minimalist React UI library.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you paste a link to a file on GitHub, it will quickly open the file in your local editor:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;❯ git peek https://github.com/Jarred-Sumner/git-peek/blob/main/src/index.ts
💻 Launched editor in 0.39s
⏳ Extracting repository to temp folder...
💿 Finished downloading repository!
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git peek -h
 Quickly preview remote Git repositories in your local editor

  USAGE
    $ git-peek [git link or github link or search query or repository file path]

  EXAMPLES
    git peek https://github.com/evanw/esbuild/blob/master/lib/common.ts
    git peek https://github.com/ylukem/pin-go
    git peek https://github.com/jarred-sumner/atbuild
    git peek hanford/trends
    git peek react

  OPTIONS
    -e, --editor=editor  [default: auto] editor to open with, possible values:
                          auto, code, subl, vim, vi, code-insiders.
                          By default, it will search $EDITOR. If not found, it
                          will try code, then subl, then vim.

    -r, --register        [default: false] Register the git-peek:// url protocol
                          This allows the &quot;Open&quot; buttons to work on
                          github.com once you\&#39;ve installed the extension. Only
                          supported on macOS (Windows coming soon).

    -o, --out=           [default: system temp directory] output directory to
                          store repository files in. If youre cloning a large
                          repo and your tempdir is an in-memory storage (/tmp),
                          maybe change this.

    -w, --wait           [default: false] wait to open the editor until the
                          repository finishes downloading. always on for vi.

    --no-keep            [default: false] keep the repository, rather than
                         deleting it.

    -b, --branch         [default: &quot;master&quot;] select a branch/ref to use.
                         if the repository doesn&#39;t use master/main,
                         you&#39;ll want to set this manually. but it will
                         try to infer from the input by default.

    -d                   [default: false] Ask the GitHub API
                          for the default_branch to clone.

    -h, --help           show CLI help

  ENVIRONMENT VARIABLES:
    $EDITOR: code --wait
    $GITHUB_TOKEN: ********
    .env: ✅ $HOME/.git-peek

  For use with private GitHub repositories, set $GITHUB_TOKEN to a personal
  access token. To persist it, store it in your shell config or the .env shown above.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Private repositories &amp;amp; choosing an editor&lt;/h3&gt; 
&lt;p&gt;To use &lt;code&gt;git-peek&lt;/code&gt; with private repositories, set a &lt;code&gt;$GITHUB_TOKEN&lt;/code&gt; to a personal access token. If you don&#39;t want a global shell &lt;code&gt;$GITHUB_TOKEN&lt;/code&gt;, you can set in &lt;code&gt;$HOME/.git-peek&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Its a &lt;code&gt;.env&lt;/code&gt; file, so the syntax looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;EDITOR=&quot;code&quot;
GITHUB_TOKEN=&quot;**********&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also save a custom editor this way. So you don&#39;t have to add &lt;code&gt;-e vim&lt;/code&gt; everytime if &lt;code&gt;$EDITOR&lt;/code&gt; is not propagating to the process.&lt;/p&gt; 
&lt;h2&gt;How does this work?&lt;/h2&gt; 
&lt;p&gt;If you pass it a GitHub repository, it fetches a tarball instead of using git and decompresses it while downloading it (streaming). From unscientific benchmarks, this is about 2x faster than cloning. While downloading &amp;amp; decompressing the tarball, it also downloads the specific file linked to (or the &lt;code&gt;README.md&lt;/code&gt;) via JSDelivr&#39;s CDN. Whichever happens first, it opens in the editor (usually JSDelivr), but it will keep fetching the repo until its complete or the program exits.&lt;/p&gt; 
&lt;p&gt;If you pass it a git repository rather than a Github url, it does a &lt;a href=&quot;https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/&quot;&gt;partial clone&lt;/a&gt; instead of doing a full clone.&lt;/p&gt; 
&lt;p&gt;When your editor closes or you close &lt;code&gt;git peek&lt;/code&gt;, it deletes the repository from your computer.&lt;/p&gt; 
&lt;p&gt;This was inspired by &lt;a href=&quot;https://github.com/conwnet/github1s&quot;&gt;github1s.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Changelog&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.2.2&lt;/code&gt;: Prevent process from sticking around longer than necessary if its still extracting the repository when its supposed to close. Add &lt;code&gt;fs.rmSync&lt;/code&gt; polyfill&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.2.1&lt;/code&gt;: Slightly improve reliability &amp;amp; performance of launching the editor (using child_process.spawn instead of using child_process.exec) and allow the AppleScript to launch multiple instances&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.2.0&lt;/code&gt;: Create a &lt;code&gt;git-peek://&lt;/code&gt; URL handler, so that you can click a link to open a repository in your local editor. Register the URL handler with &lt;code&gt;git peek -r&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.1.37&lt;/code&gt;: Add easter egg to search results&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.1.36&lt;/code&gt;: Add optional &lt;code&gt;-d&lt;/code&gt; flag that automatically asks github what the default branch is before cloning instead of guessing its either &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.1.35&lt;/code&gt;: Add optional &lt;code&gt;--branch&lt;/code&gt; flag so you can choose which branch to clone if its not shown in the url. See &lt;a href=&quot;https://github.com/Jarred-Sumner/git-peek/issues/17&quot;&gt;#17&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.1.34&lt;/code&gt;: Fix home directory path resolution on Windows&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.1.33&lt;/code&gt;: Add precompiled binary for windows in releases script.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.1.32&lt;/code&gt; Add &lt;code&gt;--no-keep&lt;/code&gt; flag which skips deleting repositories on exit. Fix support for unknown editors. When the editor is unknown, it asks to confirm deleting the repository.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;1.1.31&lt;/code&gt;: Fix issue where when &lt;code&gt;vim&lt;/code&gt; is loaded with a specific file (rather than the repository root dir), it would log text on top of &lt;code&gt;vim&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;1.1.30&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;git-peek now starts 32% faster (delayed loading &lt;code&gt;ink&lt;/code&gt; until its used for search)&lt;/p&gt; 
&lt;p&gt;You can now store &lt;code&gt;$EDITOR&lt;/code&gt; and &lt;code&gt;$GITHUB_TOKEN&lt;/code&gt; in &lt;code&gt;$HOME/.git-peek&lt;/code&gt;. Its a &lt;code&gt;.env&lt;/code&gt; file, so the syntax looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;EDITOR=&quot;code&quot;
GITHUB_TOKEN=&quot;**********&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Removed using the &lt;code&gt;$GITHUB_TOKEN&lt;/code&gt; from &lt;code&gt;~/.hubs/config&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1.1.28-29&lt;/code&gt;: Fix for Node 12+ &lt;a href=&quot;https://github.com/Jarred-Sumner/git-peek/issues/14&quot;&gt;#14&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.27&lt;/code&gt;: Added &lt;code&gt;--wait&lt;/code&gt; flag which waits to open the editor until the entire repository is downloaded. Added &lt;code&gt;--out&lt;/code&gt; flag which changes the temp directory to store files in (see #8)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.22-26&lt;/code&gt;: Fix windows bug.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.21&lt;/code&gt;: Add Pull Request support. Now you can use this to quickly read a pull request. For example: &lt;code&gt;git peek https://github.com/facebook/react/pull/20790&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.20&lt;/code&gt;: Fix bug when using with Fedora&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.16-1.1.19&lt;/code&gt;: trying to get &lt;code&gt;release-it&lt;/code&gt; to work&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.15&lt;/code&gt;: Move &lt;code&gt;code-insiders&lt;/code&gt; to end of preference list&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.14&lt;/code&gt;: Fix code-insiders and fix passing in editor manually when its &lt;code&gt;subl&lt;/code&gt; or &lt;code&gt;code&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.13&lt;/code&gt;: Use &lt;code&gt;Authorization&lt;/code&gt; header instead of &lt;code&gt;access_token&lt;/code&gt; query string.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.12&lt;/code&gt;: When available, also use github access token for fetching tarballs (instead of just search)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.11&lt;/code&gt;: When available, use github access token for github API requests to enable private repositories to work. To enable this, either set a &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; environment variable or if you&#39;ve installed &lt;a href=&quot;https://github.com/github/hub&quot;&gt;hub&lt;/a&gt;, it will automatically use &lt;code&gt;oauth_token&lt;/code&gt; from &lt;code&gt;$HOME/.config/hub&lt;/code&gt;. In other words, if you use &lt;code&gt;hub&lt;/code&gt;, this should just work by default.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.10&lt;/code&gt;: Fix vim&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.1.9&lt;/code&gt;: Fix Windows&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>GoogleChrome/lighthouse</title>
      <link>https://github.com/GoogleChrome/lighthouse</link>
      <description>&lt;p&gt;Automated auditing, performance metrics, and best practices for the web.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lighthouse &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/actions&quot;&gt;&lt;img src=&quot;https://github.com/GoogleChrome/lighthouse/workflows/%F0%9F%92%A1%F0%9F%8F%A0/badge.svg&quot; alt=&quot;GitHub Actions Status Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/GoogleChrome/lighthouse?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/GoogleChrome/lighthouse/master.svg&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lh-build-tracker.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/buildtracker-ok-blue&quot; alt=&quot;Build tracker for Lighthouse&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/lighthouse&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/lighthouse.svg&quot; alt=&quot;NPM lighthouse package&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Lighthouse analyzes web apps and web pages, collecting modern performance metrics and insights on developer best practices.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Using Lighthouse 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#using-lighthouse-in-chrome-devtools&quot;&gt;Using Lighthouse in Chrome DevTools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#using-the-chrome-extension&quot;&gt;Using the Chrome extension&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#using-the-node-cli&quot;&gt;Using the Node CLI&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#cli-options&quot;&gt;CLI options&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#using-the-node-module&quot;&gt;Using the Node module&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#viewing-a-report&quot;&gt;Viewing a report&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#online-viewer&quot;&gt;Online Viewer&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#docs--recipes&quot;&gt;Docs &amp;amp; Recipes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#develop&quot;&gt;Developing Lighthouse&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#setup&quot;&gt;Setup&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#run&quot;&gt;Run&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#tests&quot;&gt;Tests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#docs&quot;&gt;Docs&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Associated Products and Projects 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#lighthouse-integrations-in-web-perf-services&quot;&gt;Lighthouse Integrations in Web Perf services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#lighthouse-integrations-in-non-web-perf-services&quot;&gt;Lighthouse Integrations in non-Web Perf services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#related-projects&quot;&gt;Related Projects&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#faq&quot;&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-does-lighthouse-work&quot;&gt;How does Lighthouse work?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#can-i-configure-the-lighthouse-run&quot;&gt;Can I configure the lighthouse run?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-does-lighthouse-use-network-throttling-and-how-can-i-make-it-better&quot;&gt;How does Lighthouse use network throttling, and how can I make it better?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#are-results-sent-to-a-remote-server&quot;&gt;Are results sent to a remote server?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-do-i-author-custom-audits-to-extend-lighthouse&quot;&gt;How do I author custom audits to extend Lighthouse?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-do-i-contribute&quot;&gt;How do I contribute?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Lighthouse in Chrome DevTools&lt;/h2&gt; 
&lt;p&gt;Lighthouse is integrated directly into the Chrome DevTools, under the &quot;Lighthouse&quot; panel.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: install &lt;a href=&quot;https://www.google.com/chrome/browser&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: open Chrome DevTools, select the Lighthouse panel, and hit &quot;Generate report&quot;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Using the Chrome extension&lt;/h2&gt; 
&lt;p&gt;The Chrome extension was available prior to Lighthouse being available in Chrome Developer Tools, and offers similar functionality.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: &lt;a href=&quot;https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk&quot;&gt;install the extension&lt;/a&gt; from the Chrome Web Store.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: follow the &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/#extension&quot;&gt;extension quick-start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using the Node CLI&lt;/h2&gt; 
&lt;p&gt;The Node CLI provides the most flexibility in how Lighthouse runs can be configured and reported. Users who want more advanced usage, or want to run Lighthouse in an automated fashion should use the Node CLI.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Lighthouse requires Node 12 LTS (12.x) or later.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install -g lighthouse
# or use yarn:
# yarn global add lighthouse
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: &lt;code&gt;lighthouse https://airhorner.com/&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;By default, Lighthouse writes the report to an HTML file. You can control the output format by passing flags.&lt;/p&gt; 
&lt;h3&gt;CLI options&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;pre&gt;&lt;code&gt;$ lighthouse --help

lighthouse &amp;lt;url&amp;gt; &amp;lt;options&amp;gt;

Logging:
  --verbose  Displays verbose logging  [boolean] [default: false]
  --quiet    Displays no progress, debug logs, or errors  [boolean] [default: false]

Configuration:
  --save-assets                  Save the trace contents &amp;amp; devtools logs to disk  [boolean] [default: false]
  --list-all-audits              Prints a list of all available audits and exits  [boolean] [default: false]
  --list-trace-categories        Prints a list of all required trace categories and exits  [boolean] [default: false]
  --print-config                 Print the normalized config for the given config and options, then exit.  [boolean] [default: false]
  --additional-trace-categories  Additional categories to capture with the trace (comma-delimited).  [string]
  --config-path                  The path to the config JSON.
                                 An example config file: lighthouse-core/config/lr-desktop-config.js  [string]
  --preset                       Use a built-in configuration.
                                 WARNING: If the --config-path flag is provided, this preset will be ignored.  [string] [choices: &quot;perf&quot;, &quot;experimental&quot;, &quot;desktop&quot;]
  --chrome-flags                 Custom flags to pass to Chrome (space-delimited). For a full list of flags, see https://bit.ly/chrome-flags
                                 Additionally, use the CHROME_PATH environment variable to use a specific Chrome binary. Requires Chromium version 66.0 or later. If omitted, any detected Chrome Canary or Chrome stable will be used.  [string] [default: &quot;&quot;]
  --port                         The port to use for the debugging protocol. Use 0 for a random port  [number] [default: 0]
  --hostname                     The hostname to use for the debugging protocol.  [string] [default: &quot;localhost&quot;]
  --form-factor                  Determines how performance metrics are scored and if mobile-only audits are skipped. For desktop, --preset=desktop instead.  [string] [choices: &quot;mobile&quot;, &quot;desktop&quot;]
  --screenEmulation              Sets screen emulation parameters. See also --preset. Use --screenEmulation.disabled to disable. Otherwise set these 4 parameters individually: --screenEmulation.mobile --screenEmulation.width=360 --screenEmulation.height=640 --screenEmulation.deviceScaleFactor=2
  --emulatedUserAgent            Sets useragent emulation  [string]
  --max-wait-for-load            The timeout (in milliseconds) to wait before the page is considered done loading and the run should continue. WARNING: Very high values can lead to large traces and instability  [number]
  --enable-error-reporting       Enables error reporting, overriding any saved preference. --no-enable-error-reporting will do the opposite. More: https://git.io/vFFTO  [boolean]
  --gather-mode, -G              Collect artifacts from a connected browser and save to disk. (Artifacts folder path may optionally be provided). If audit-mode is not also enabled, the run will quit early.
  --audit-mode, -A               Process saved artifacts from disk. (Artifacts folder path may be provided, otherwise defaults to ./latest-run/)
  --only-audits                  Only run the specified audits  [array]
  --only-categories              Only run the specified categories. Available categories: accessibility, best-practices, performance, pwa, seo  [array]
  --skip-audits                  Run everything except these audits  [array]
  --budget-path                  The path to the budget.json file for LightWallet.  [string]

Output:
  --output       Reporter for the results, supports multiple values. choices: &quot;json&quot;, &quot;html&quot;, &quot;csv&quot;  [array] [default: [&quot;html&quot;]]
  --output-path  The file path to output the results. Use &#39;stdout&#39; to write to stdout.
                   If using JSON output, default is stdout.
                   If using HTML or CSV output, default is a file in the working directory with a name based on the test URL and date.
                   If using multiple outputs, --output-path is appended with the standard extension for each output type. &quot;reports/my-run&quot; -&amp;gt; &quot;reports/my-run.report.html&quot;, &quot;reports/my-run.report.json&quot;, etc.
                   Example: --output-path=./lighthouse-results.html  [string]
  --view         Open HTML report in your browser  [boolean] [default: false]

Options:
  --version                            Show version number  [boolean]
  --help                               Show help  [boolean]
  --cli-flags-path                     The path to a JSON file that contains the desired CLI flags to apply. Flags specified at the command line will still override the file-based ones.
  --locale                             The locale/language the report should be formatted in
  --blocked-url-patterns               Block any network requests to the specified URL patterns  [array]
  --disable-storage-reset              Disable clearing the browser cache and other storage APIs before a run  [boolean]
  --throttling-method                  Controls throttling method  [string] [choices: &quot;devtools&quot;, &quot;provided&quot;, &quot;simulate&quot;]
  --throttling
  --throttling.rttMs                   Controls simulated network RTT (TCP layer)
  --throttling.throughputKbps          Controls simulated network download throughput
  --throttling.requestLatencyMs        Controls emulated network RTT (HTTP layer)
  --throttling.downloadThroughputKbps  Controls emulated network download throughput
  --throttling.uploadThroughputKbps    Controls emulated network upload throughput
  --throttling.cpuSlowdownMultiplier   Controls simulated + emulated CPU throttling
  --extra-headers                      Set extra HTTP Headers to pass with request
  --precomputed-lantern-data-path      Path to the file where lantern simulation data should be read from, overwriting the lantern observed estimates for RTT and server latency.  [string]
  --lantern-data-output-path           Path to the file where lantern simulation data should be written to, can be used in a future run with the `precomputed-lantern-data-path` flag.  [string]
  --plugins                            Run the specified plugins  [array]
  --channel  [string] [default: &quot;cli&quot;]
  --chrome-ignore-default-flags  [boolean] [default: false]

Examples:
  lighthouse &amp;lt;url&amp;gt; --view                                                                          Opens the HTML report in a browser after the run completes
  lighthouse &amp;lt;url&amp;gt; --config-path=./myconfig.js                                                     Runs Lighthouse with your own configuration: custom audits, report generation, etc.
  lighthouse &amp;lt;url&amp;gt; --output=json --output-path=./report.json --save-assets                         Save trace, screenshots, and named JSON report.
  lighthouse &amp;lt;url&amp;gt; --screenEmulation.disabled --throttling-method=provided --no-emulatedUserAgent  Disable device emulation and all throttling
  lighthouse &amp;lt;url&amp;gt; --chrome-flags=&quot;--window-size=412,660&quot;                                          Launch Chrome with a specific window size
  lighthouse &amp;lt;url&amp;gt; --quiet --chrome-flags=&quot;--headless&quot;                                             Launch Headless Chrome, turn off logging
  lighthouse &amp;lt;url&amp;gt; --extra-headers &quot;{\&quot;Cookie\&quot;:\&quot;monster=blue\&quot;, \&quot;x-men\&quot;:\&quot;wolverine\&quot;}&quot;        Stringify&#39;d JSON HTTP Header key/value pairs to send in requests
  lighthouse &amp;lt;url&amp;gt; --extra-headers=./path/to/file.json                                             Path to JSON file of HTTP Header key/value pairs to send in requests
  lighthouse &amp;lt;url&amp;gt; --only-categories=performance,pwa                                               Only run the specified categories. Available categories: accessibility, best-practices, performance, pwa, seo

For more information on Lighthouse, see https://developers.google.com/web/tools/lighthouse/.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Output Examples&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;lighthouse
# saves `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.html`

lighthouse --output json
# json output sent to stdout

lighthouse --output html --output-path ./report.html
# saves `./report.html`

# NOTE: specifying an output path with multiple formats ignores your specified extension for *ALL* formats
lighthouse --output json --output html --output-path ./myfile.json
# saves `./myfile.report.json` and `./myfile.report.html`

lighthouse --output json --output html
# saves `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.json` and `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.html`

lighthouse --output-path=~/mydir/foo.out --save-assets
# saves `~/mydir/foo.report.html`
# saves `~/mydir/foo-0.trace.json` and `~/mydir/foo-0.devtoolslog.json`

lighthouse --output-path=./report.json --output json
# saves `./report.json`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Lifecycle Examples&lt;/h5&gt; 
&lt;p&gt;You can run a subset of Lighthouse&#39;s lifecycle if desired via the &lt;code&gt;--gather-mode&lt;/code&gt; (&lt;code&gt;-G&lt;/code&gt;) and &lt;code&gt;--audit-mode&lt;/code&gt; (&lt;code&gt;-A&lt;/code&gt;) CLI flags.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;lighthouse http://example.com -G
# launches browser, collects artifacts, saves them to disk (in `./latest-run/`) and quits

lighthouse http://example.com -A
# skips browser interaction, loads artifacts from disk (in `./latest-run/`), runs audits on them, generates report

lighthouse http://example.com -GA
# Normal gather + audit run, but also saves collected artifacts to disk for subsequent -A runs.


# You can optionally provide a custom folder destination to -G/-A/-GA. Without a value, the default will be `$PWD/latest-run`.
lighthouse -GA=./gmailartifacts https://gmail.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notes on Error Reporting&lt;/h4&gt; 
&lt;p&gt;The first time you run the CLI you will be prompted with a message asking you if Lighthouse can anonymously report runtime exceptions. The Lighthouse team uses this information to detect new bugs and avoid regressions. Opting out will not affect your ability to use Lighthouse in any way. &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/blob/master/docs/error-reporting.md&quot;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using the Node module&lt;/h2&gt; 
&lt;p&gt;You can also use Lighthouse programmatically with the Node module.&lt;/p&gt; 
&lt;p&gt;Read &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/readme.md#using-programmatically&quot;&gt;Using Lighthouse programmatically&lt;/a&gt; for help getting started.&lt;br&gt; Read &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/configuration.md&quot;&gt;Lighthouse Configuration&lt;/a&gt; to learn more about the configuration options available.&lt;/p&gt; 
&lt;h2&gt;Viewing a report&lt;/h2&gt; 
&lt;p&gt;Lighthouse can produce a report as JSON or HTML.&lt;/p&gt; 
&lt;p&gt;HTML report:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Online Viewer&lt;/h3&gt; 
&lt;p&gt;Running Lighthouse with the &lt;code&gt;--output=json&lt;/code&gt; flag generates a JSON dump of the run. You can view this report online by visiting &lt;a href=&quot;https://googlechrome.github.io/lighthouse/viewer/&quot;&gt;https://googlechrome.github.io/lighthouse/viewer/&lt;/a&gt; and dragging the file onto the app. You can also use the &quot;Export&quot; button from the top of any Lighthouse HTML report and open the report in the &lt;a href=&quot;https://googlechrome.github.io/lighthouse/viewer/&quot;&gt;Lighthouse Viewer&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In the Viewer, reports can be shared by clicking the share icon in the top right corner and signing in to GitHub.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: shared reports are stashed as a secret Gist in GitHub, under your account.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Docs &amp;amp; Recipes&lt;/h2&gt; 
&lt;p&gt;Useful documentation, examples, and recipes to get you started.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/variability.md&quot;&gt;Dealing with variance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/readme.md#using-programmatically&quot;&gt;Using Lighthouse programmatically&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/authenticated-pages.md&quot;&gt;Testing a site with authentication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/plugins.md&quot;&gt;Developing Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/new-audits.md&quot;&gt;Making a New Audit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/readme.md#testing-on-a-mobile-device&quot;&gt;Testing on a mobile device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/performance-budgets.md&quot;&gt;Setting a performance budget&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/architecture.md&quot;&gt;Lighthouse Architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Recipes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/recipes/gulp&quot;&gt;gulp&lt;/a&gt; - helpful for CI integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/recipes/lighthouse-plugin-example&quot;&gt;Plugin&lt;/a&gt; - example Lighthouse plugin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/recipes/custom-audit&quot;&gt;Custom Audit example&lt;/a&gt; - extend Lighthouse, run your own audits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Videos&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The session from Google I/O 2018 covers the new performance engine, upcoming Lighthouse REST API, and using the Chrome UX report to evaluate real-user data.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=UvK9zAsSM8Q&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/UvK9zAsSM8Q/0.jpg&quot; alt=&quot;Lighthouse @ Google I/O 2018&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The session from Google I/O 2017 covers architecture, writing custom audits, GitHub/Travis/CI integration, headless Chrome, and more:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=NoRYn6gOtVo&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/NoRYn6gOtVo/0.jpg&quot; alt=&quot;Lighthouse @ Google I/O 2017&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;click to watch the video&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Develop&lt;/h2&gt; 
&lt;p&gt;Read on for the basics of hacking on Lighthouse. Also, see &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# yarn should be installed first

git clone https://github.com/GoogleChrome/lighthouse

cd lighthouse
yarn
yarn build-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node lighthouse-cli http://example.com
# append --chrome-flags=&quot;--no-sandbox --headless --disable-gpu&quot; if you run into problems connecting to Chrome
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Getting started tip&lt;/strong&gt;: &lt;code&gt;node --inspect-brk lighthouse-cli http://example.com&lt;/code&gt; to open up Chrome DevTools and step through the entire app. See &lt;a href=&quot;https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.59rma3ukm&quot;&gt;Debugging Node.js with Chrome DevTools&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# lint and test all files
yarn test

# watch for file changes and run tests
#   Requires http://entrproject.org : brew install entr
yarn watch

## run linting, unit, and smoke tests separately
yarn lint
yarn unit
yarn smoke

## run tsc compiler
yarn type-check
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docs&lt;/h3&gt; 
&lt;p&gt;Some of our docs have tests that run only in CI by default. If you end up needing to modify our documentation, you&#39;ll need to run &lt;code&gt;yarn test-docs&lt;/code&gt; locally to make sure they pass.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Additional Dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install jq&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Lighthouse Integrations in Web Perf services&lt;/h2&gt; 
&lt;p&gt;This section details services that have integrated Lighthouse data. If you&#39;re working on a cool project integrating Lighthouse and would like to be featured here, file an issue to this repo or tweet at us &lt;a href=&quot;https://twitter.com/____lighthouse&quot;&gt;@_____lighthouse&lt;/a&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.webpagetest.org&quot;&gt;Web Page Test&lt;/a&gt;&lt;/strong&gt; — An &lt;a href=&quot;https://github.com/WPO-Foundation/webpagetest&quot;&gt;open source&lt;/a&gt; tool for measuring and analyzing the performance of web pages on real devices. Users can choose to produce a Lighthouse report alongside the analysis of WebPageTest results.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://httparchive.org/&quot;&gt;HTTPArchive&lt;/a&gt;&lt;/strong&gt; - HTTPArchive tracks how the web is built by crawling 500k pages with Web Page Test, including Lighthouse results, and stores the information in BigQuery where it is &lt;a href=&quot;https://discuss.httparchive.org/t/quickstart-guide-to-exploring-the-http-archive/682&quot;&gt;publicly available&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://calibreapp.com&quot;&gt;Calibre&lt;/a&gt;&lt;/strong&gt; - Calibre is a comprehensive performance monitoring platform running on Lighthouse. See the performance impact of your work before it hits production with GitHub Pull Request Reviews. Track the impact of Third Party scripts. Automate your performance system with a developer-first Node.js API. Try Calibre with a free 15-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.debugbear.com/&quot;&gt;DebugBear&lt;/a&gt;&lt;/strong&gt; - DebugBear is a website monitoring tool based on Lighthouse. See how your scores and metrics changed over time, with a focus on understanding what caused each change. DebugBear is a paid product with a free 30-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://treo.sh&quot;&gt;Treo&lt;/a&gt;&lt;/strong&gt; - Treo is Lighthouse as a Service. It provides regression testing, geographical regions, custom networks, and integrations with GitHub &amp;amp; Slack. Treo is a paid product with plans for solo-developers and teams.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://screpy.com&quot;&gt;Screpy&lt;/a&gt;&lt;/strong&gt; - Screpy is a web analysis tool that can analyze all pages of your websites in one dashboard and monitor them with your team. It&#39;s powered by Lighthouse and it also includes some different analysis tools (SERP, W3C, Uptime, etc). Screpy has free and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://lighthouse-keeper.com/&quot;&gt;Lighthouse Keeper&lt;/a&gt;&lt;/strong&gt; - Lighthouse Keeper monitors your pages&#39; Lighthouse scores and notifies you if they drop below your thresholds. Lighthouse Keeper is a free service that monitors up to 3 URLs once per day.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://siteimprove.com/en/performance/&quot;&gt;Siteimprove Performance&lt;/a&gt;&lt;/strong&gt; — Siteimprove Performance is a web Performance monitoring solution that enables a marketer, manager or decision maker to understand and optimize website load times. Get easy-to-use insights with a focus on quick and impactful wins. Siteimprove Performance is a paid product with a free 14-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://speedcurve.com&quot;&gt;SpeedCurve&lt;/a&gt;&lt;/strong&gt; — SpeedCurve is a tool for continuously monitoring web performance across different browsers, devices, and regions. It can aggregate any metric including Lighthouse scores across multiple pages and sites, and allows you to set performance budgets with Slack or email alerts. SpeedCurve is a paid product with a free 30-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://speedrank.app&quot;&gt;Speedrank&lt;/a&gt;&lt;/strong&gt; - Speedrank monitors the performance of your website in the background. It displays Lighthouse reports over time and delivers recommendations for improvement. Speedrank is a paid product with 14-day-trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.foo.software/lighthouse&quot;&gt;Foo&lt;/a&gt;&lt;/strong&gt; - Lighthouse-as-a-service offering free and premium plans. Provides monitoring and historical reporting of Lighthouse audits with CircleCI, GitHub, and other integrations. Features include Slack notifications, PR comment reporting and more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://apdex.co&quot;&gt;Apdex&lt;/a&gt;&lt;/strong&gt; - Apdex is a website performance service. The main features are historical Lighthouse report visualizations, mobile/desktop options, alerts, uptime monitoring, and more. There are flexible paid plans and a 30-day free trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://websu.io&quot;&gt;Websu&lt;/a&gt;&lt;/strong&gt; - Websu is an open source project to provide Lighthouse-as-a-Service through a simple HTTP REST API. The main features are ability to host and deploy in your own environment and historical Lighthouse report summaries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Lighthouse Integrations in non-Web Perf services&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pagewatch.dev/&quot;&gt;PageWatch&lt;/a&gt;&lt;/strong&gt; — PageWatch is a tool to find problem pages on your website. It provides insights into spelling errors, layout issues, slow pages (powered by Lighthouse) and more. PageWatch is offered via free and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.seo-guard.com&quot;&gt;SEO Guard&lt;/a&gt;&lt;/strong&gt; — SEO Guard is a website monitoring solution. It provides metrics based on Lighthouse scores. The service is offered via free and paid premium plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://fluxguard.com/&quot;&gt;Fluxguard&lt;/a&gt;&lt;/strong&gt; - Fluxguard provides website DOM change monitoring orchestrated with Google Puppeteer, and audited by Lighthouse. Fluxguard is a freemium product, with monthly monitoring of up to 75 pages for free.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://microlink.io&quot;&gt;Microlink&lt;/a&gt;&lt;/strong&gt; — Microlink is a cloud browser as API. It offers Lighthouse reports on demand, making it easy to build any service on top. Similar functionality is available via the underlying open-source project named browserless.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://wattspeed.com/&quot;&gt;Wattspeed&lt;/a&gt;&lt;/strong&gt; — Wattspeed is a free tool that generates snapshots - historical captures of your web pages that include Lighthouse scores, a list of technologies, W3C HTML validator results, DOM size, mixed content info, and more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://awesometechstack.com&quot;&gt;AwesomeTechStack&lt;/a&gt;&lt;/strong&gt; — AwesomeTechStack is a free to use website tech stack analyzer. AwesomeTechStack provides insights into the security, modernity, and performance of any website&#39;s technology stack and guidance to improve performance. Lighthouse insights are a crucial part of a website&#39;s tech stack rating.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/treosh/lighthouse-plugin-field-performance&quot;&gt;lighthouse-plugin-field-performance&lt;/a&gt;&lt;/strong&gt; - a plugin that adds real-user performance metrics for the URL using the data from &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report/&quot;&gt;Chrome UX Report&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/googleads/publisher-ads-lighthouse-plugin&quot;&gt;lighthouse-plugin-publisher-ads&lt;/a&gt;&lt;/strong&gt; - a tool to improve ad speed and overall quality through a series of automated audits. At the moment, this is primarily targeted at sites using Google Ad Manager. This tool will aid in resolving discovered problems, providing a tool to be used to evaluate effectiveness of iterative changes while suggesting actionable feedback.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/dvelasquez/lighthouse-plugin-crux&quot;&gt;lighthouse-plugin-crux&lt;/a&gt;&lt;/strong&gt; - a plugin that quickly gathers real-user-metrics data from the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report/api/reference&quot;&gt;Chrome UX Report API&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;p&gt;Other awesome open source projects that use Lighthouse.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/TGiles/auto-lighthouse&quot;&gt;auto-lighthouse&lt;/a&gt;&lt;/strong&gt; - a CLI for crawling a domain and generating mobile and desktop reports for each page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/treosh/exthouse&quot;&gt;Exthouse&lt;/a&gt;&lt;/strong&gt; - Analyze the impact of a browser extension on web performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/boyney123/garie&quot;&gt;Garie&lt;/a&gt;&lt;/strong&gt; - An open source tool for monitoring performance using Lighthouse, PageSpeed Insights, &lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt;, &lt;a href=&quot;https://grafana.com/&quot;&gt;Grafana&lt;/a&gt; and &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://labs.moduscreate.com/gimbal-web-performance-audit-budgeting&quot;&gt;Gimbal&lt;/a&gt;&lt;/strong&gt; - An &lt;a href=&quot;https://github.com/ModusCreateOrg/gimbal&quot;&gt;open source (MIT licensed)&lt;/a&gt; tool used to measure, analyze, and budget aspects of a web application. Gimbal also integrates reports with GitHub pull requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Cognifide/gradle-lighthouse-plugin&quot;&gt;Gradle Lighthouse Plugin&lt;/a&gt;&lt;/strong&gt; - An open source Gradle plugin that runs Lighthouse tests on multiple URLs and asserts category score thresholds (useful in continuous integration).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/github/lightcrawler&quot;&gt;lightcrawler&lt;/a&gt;&lt;/strong&gt; - Crawl a website and run each page found through Lighthouse.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/emazzotta/lighthouse-badges&quot;&gt;lighthouse-badges&lt;/a&gt;&lt;/strong&gt; - Generate gh-badges (shields.io) based on Lighthouse performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.npmjs.com/package/lighthouse-batch&quot;&gt;lighthouse-batch&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse over a number of sites and generate a summary of their metrics/scores.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.npmjs.com/package/lighthouse-batch-parallel&quot;&gt;lighthouse-batch-parallel&lt;/a&gt;&lt;/strong&gt; - Run multiple Lighthouse runs in parallel to accelerate the data collecting process, get the result stream (csv, json, js object) in your own process (warning: performance results may be volatile).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/foo-software/lighthouse-check-action&quot;&gt;lighthouse-check-action&lt;/a&gt;&lt;/strong&gt; - A Github Action to run Lighthouse in a workflow, featuring Slack notifications and report upload to S3.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://circleci.com/orbs/registry/orb/foo-software/lighthouse-check&quot;&gt;lighthouse-check-orb&lt;/a&gt;&lt;/strong&gt; - A CircleCI Orb to run Lighthouse in a workflow, featuring Slack notifications and report upload to S3.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/andreasonny83/lighthouse-ci&quot;&gt;andreasonny83/lighthouse-ci&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and assert scores satisfy your custom thresholds.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse-ci&quot;&gt;GoogleChrome/lighthouse-ci&lt;/a&gt;&lt;/strong&gt; - (&lt;strong&gt;official&lt;/strong&gt;) Automate running Lighthouse for every commit, viewing the changes, and preventing regressions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/treosh/lighthouse-ci-action&quot;&gt;lighthouse-ci-action&lt;/a&gt;&lt;/strong&gt; - A Github Action that makes it easy to run Lighthouse in CI and keep your pages small using performance budgets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/thearegee/lighthouse-cron&quot;&gt;lighthouse-cron&lt;/a&gt;&lt;/strong&gt; - Cron multiple batch Lighthouse audits and emit results for sending to remote server.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/carlesnunez/lighthouse-gh-reporter&quot;&gt;lighthouse-gh-reporter&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse in CI and report back in a comment on your pull requests&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/ebidel/lighthouse-hue&quot;&gt;lighthouse-hue&lt;/a&gt;&lt;/strong&gt; - Set the color of Philips Hue lights based on a Lighthouse score&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/justinribeiro/lighthouse-jest-example&quot;&gt;lighthouse-jest-example&lt;/a&gt;&lt;/strong&gt; - Gather performance metrics via Lighthouse and assert results with Jest; uses Puppeteer to start Chrome with network emulation settings defined by WebPageTest.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/joytocode/lighthouse-lambda&quot;&gt;lighthouse-lambda&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse on AWS Lambda with prebuilt stable desktop Headless Chrome.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/manekinekko/lighthouse-magic-light&quot;&gt;lighthouse-magic-light&lt;/a&gt;&lt;/strong&gt; - Set the color of the MagicLight Bluetooth Smart Light Bulb based on Lighthouse score&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/rishichawda/lighthouse-mocha-example&quot;&gt;lighthouse-mocha-example&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse performance tests with Mocha and chrome-launcher.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/verivox/lighthouse-monitor&quot;&gt;lighthouse-monitor&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse against all your URLs. Send metrics to any backend you want, save all reports with automatic data retention, and compare any two results in a web UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/foo-software/lighthouse-persist&quot;&gt;lighthouse-persist&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and upload HTML reports to an AWS S3 bucket.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/dvelasquez/lighthouse-viewer/tree/main/packages/lighthouse-viewer&quot;&gt;lighthouse-viewer&lt;/a&gt;&lt;/strong&gt; - Render the Lighthouse JSON into a report, using the Lighthouse Report Renderer repackaged as UMD and ESM. Also available with React, Svelte and Vue wrappers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/godaddy/lighthouse4u&quot;&gt;lighthouse4u&lt;/a&gt;&lt;/strong&gt; - LH4U provides Google Lighthouse as a service, surfaced by both a friendly UI+API, and backed by Elastic Search for easy querying and visualization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://performance-budgets.netlify.com/&quot;&gt;performance-budgets&lt;/a&gt;&lt;/strong&gt; - Easily assert Lighthouse budgets with Docker.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/paulirish/pwmetrics/&quot;&gt;pwmetrics&lt;/a&gt;&lt;/strong&gt; - Gather performance metrics&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.npmjs.com/package/react-lighthouse-viewer&quot;&gt;react-lighthouse-viewer&lt;/a&gt;&lt;/strong&gt; - Render a Lighthouse JSON report in a React Component.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/viasite/site-audit-seo&quot;&gt;site-audit-seo&lt;/a&gt;&lt;/strong&gt; - CLI tool for SEO site audit, crawl site, lighthouse each page. Output to console and tables in csv, xlsx, json, web or Google Drive.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/addyosmani/webpack-lighthouse-plugin&quot;&gt;webpack-lighthouse-plugin&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse from a Webpack build.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/lirantal/is-website-vulnerable&quot;&gt;is-website-vulnerable&lt;/a&gt;&lt;/strong&gt; - An open source Node.js CLI tool that finds publicly known security vulnerabilities in a website&#39;s frontend JavaScript libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/mfrachet/cypress-audit&quot;&gt;cypress-audit&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and Pa11y audits directly in your E2E test suites.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How does Lighthouse work?&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/architecture.md&quot;&gt;Lighthouse Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why is the performance score so low? It looks fine to me.&lt;/h3&gt; 
&lt;p&gt;Lighthouse reports the performance metrics as they would be experienced by a typical mobile user on a 4G connection and a mid-tier ~$200 phone. Even if it loads quickly on your device and network, users in other environments will experience the site very differently.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/throttling.md&quot;&gt;guide to throttling&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why does the performance score change so much?&lt;/h3&gt; 
&lt;p&gt;Lighthouse performance scores will change due to inherent variability in web and network technologies, even if there hasn&#39;t been a code change. Test in consistent environments, run Lighthouse multiple times, and beware of variability before drawing conclusions about a performance-impacting change.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/variability.md&quot;&gt;guide to reducing variability&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Can I configure the lighthouse run?&lt;/h3&gt; 
&lt;p&gt;Yes! Details in &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/configuration.md&quot;&gt;Lighthouse configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;How does Lighthouse use network throttling, and how can I make it better?&lt;/h3&gt; 
&lt;p&gt;Good question. Network and CPU throttling are applied by default in a Lighthouse run. The network attempts to emulate slow 4G connectivity and the CPU is slowed down 4x from your machine&#39;s default speed. If you prefer to run Lighthouse without throttling, you&#39;ll have to use the CLI and disable it with the &lt;code&gt;--throttling.*&lt;/code&gt; flags mentioned above.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/throttling.md&quot;&gt;guide to network throttling&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Are results sent to a remote server?&lt;/h3&gt; 
&lt;p&gt;Nope. Lighthouse runs locally, auditing a page using a local version of the Chrome browser installed on the machine. Report results are never processed or beaconed to a remote server.&lt;/p&gt; 
&lt;h3&gt;How do I author custom audits to extend Lighthouse?&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: see &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/architecture.md&quot;&gt;Lighthouse Architecture&lt;/a&gt; for more information on terminology and architecture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Lighthouse can be extended to run custom audits and gatherers that you author. This is great if you&#39;re already tracking performance metrics in your site and want to surface those metrics within a Lighthouse report.&lt;/p&gt; 
&lt;p&gt;If you&#39;re interested in running your own custom audits, check out our &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/recipes/custom-audit&quot;&gt;Custom Audit Example&lt;/a&gt; over in recipes.&lt;/p&gt; 
&lt;h3&gt;How do I contribute?&lt;/h3&gt; 
&lt;p&gt;We&#39;d love help writing audits, fixing bugs, and making the tool more useful! See &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>AMAI-GmbH/AI-Expert-Roadmap</title>
      <link>https://github.com/AMAI-GmbH/AI-Expert-Roadmap</link>
      <description>&lt;p&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Below you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a data scientist, machine learning or an ai expert. We made these charts for our new employees to make them AI Experts but we wanted to share them here to help the community.&lt;/p&gt; 
&lt;p&gt;If you are interested to become an AI EXPERT at &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Become+Expert&quot;&gt;AMAI&lt;/a&gt; in Germany, or you want to &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Hire+Expert&quot;&gt;hire an AI Expert&lt;/a&gt;, please say &lt;a href=&quot;mailto:hi@am.ai&quot;&gt;hi@am.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Note&lt;/h2&gt; 
&lt;p&gt;👉 An &lt;strong&gt;interactive version with links to follow&lt;/strong&gt; about each bullet of the list can be found at &lt;a href=&quot;https://i.am.ai/roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Interactive&quot;&gt;i.am.ai/roadmap&lt;/a&gt; 👈&lt;/p&gt; 
&lt;p&gt;To receive updates &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/stargazers&quot;&gt;star :star:&lt;/a&gt; and watch :eyes: the &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/&quot;&gt;GitHub Repo&lt;/a&gt; to get notified, when we add new content to stay on the top of the most recent research.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;The purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would better suited for some cases than the other and remember hip and trendy never means best suited for the job.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Fundamentals&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Data Science Roadmap&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Machine Learning Roadmap&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Deep Learning Roadmap&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Data Engineer Roadmap&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Big Data Engineer Roadmap&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;🚦 Wrap Up&lt;/h2&gt; 
&lt;p&gt;If you think any of the roadmaps can be improved, please do open a PR with any updates and submit any issues. Also, we will continue to improve this, so you might want to watch/star this repository to revisit.&lt;/p&gt; 
&lt;h2&gt;🙌 Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/contributing.md&quot;&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open pull request with improvements&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
 &lt;li&gt;Reach out with any feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported By&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nozbe/WatermelonDB</title>
      <link>https://github.com/Nozbe/WatermelonDB</link>
      <description>&lt;p&gt;🍉 Reactive &amp; asynchronous database for powerful React and React Native apps ⚡️&lt;/p&gt;&lt;hr&gt;&lt;p&gt;| | WatermelonDB | | - | ------------ | | ⚡️ | &lt;strong&gt;Launch your app instantly&lt;/strong&gt; no matter how much data you have | | 📈 | &lt;strong&gt;Highly scalable&lt;/strong&gt; from hundreds to tens of thousands of records | | 😎 | &lt;strong&gt;Lazy loaded&lt;/strong&gt;. Only load data when you need it | | 🔄 | &lt;strong&gt;Offline-first.&lt;/strong&gt; &lt;a href=&quot;https://nozbe.github.io/WatermelonDB/Advanced/Sync.html&quot;&gt;Sync&lt;/a&gt; with your own backend | | 📱 | &lt;strong&gt;Multiplatform&lt;/strong&gt;. iOS, Android, and the web | | ⚛️ | &lt;strong&gt;Works with React.&lt;/strong&gt; Easily plug data into components | | ⏱ | &lt;strong&gt;Fast.&lt;/strong&gt; And getting faster with every release! | | ✅ | &lt;strong&gt;Proven.&lt;/strong&gt; Powers &lt;a href=&quot;https://nozbe.com/teams&quot;&gt;Nozbe Teams&lt;/a&gt; since 2017 (and &lt;a href=&quot;https://raw.githubusercontent.com/Nozbe/WatermelonDB/master/#who-uses-watermelondb&quot;&gt;many others&lt;/a&gt;) | | ✨ | &lt;strong&gt;Reactive.&lt;/strong&gt; (Optional) &lt;a href=&quot;https://github.com/ReactiveX/rxjs&quot;&gt;RxJS&lt;/a&gt; API | | 🔗 | &lt;strong&gt;Relational.&lt;/strong&gt; Built on rock-solid &lt;a href=&quot;https://www.sqlite.org&quot;&gt;SQLite&lt;/a&gt; foundation | | ⚠️ | &lt;strong&gt;Static typing&lt;/strong&gt; with &lt;a href=&quot;https://flow.org&quot;&gt;Flow&lt;/a&gt; or &lt;a href=&quot;https://typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;Why Watermelon?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;WatermelonDB&lt;/strong&gt; is a new way of dealing with user data in React Native and React web apps.&lt;/p&gt; 
&lt;p&gt;It&#39;s optimized for building &lt;strong&gt;complex applications&lt;/strong&gt; in React Native, and the number one goal is &lt;strong&gt;real-world performance&lt;/strong&gt;. In simple words, &lt;em&gt;your app must launch fast&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;For simple apps, using Redux or MobX with a persistence adapter is the easiest way to go. But when you start scaling to thousands or tens of thousands of database records, your app will now be slow to launch (especially on slower Android devices). Loading a full database into JavaScript is expensive!&lt;/p&gt; 
&lt;p&gt;Watermelon fixes it &lt;strong&gt;by being lazy&lt;/strong&gt;. Nothing is loaded until it&#39;s requested. And since all querying is performed directly on the rock-solid &lt;a href=&quot;https://www.sqlite.org/index.html&quot;&gt;SQLite database&lt;/a&gt; on a separate native thread, most queries resolve in an instant.&lt;/p&gt; 
&lt;p&gt;But unlike using SQLite directly, Watermelon is &lt;strong&gt;fully observable&lt;/strong&gt;. So whenever you change a record, all UI that depends on it will automatically re-render. For example, completing a task in a to-do app will re-render the task component, the list (to reorder), and all relevant task counters. &lt;a href=&quot;https://www.youtube.com/watch?v=UlZ1QnFF4Cw&quot;&gt;&lt;strong&gt;Learn more&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;| 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | | ---- | --- | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;📺 
 &lt;!-- raw HTML omitted --&gt;Next-generation React databases
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;(a talk about WatermelonDB)
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;✨ 
 &lt;!-- raw HTML omitted --&gt;Check out web Demo
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; |&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Quick (over-simplified) example:&lt;/strong&gt; an app with posts and comments.&lt;/p&gt; 
&lt;p&gt;First, you define Models:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class Post extends Model {
  @field(&#39;name&#39;) name
  @field(&#39;body&#39;) body
  @children(&#39;comments&#39;) comments
}

class Comment extends Model {
  @field(&#39;body&#39;) body
  @field(&#39;author&#39;) author
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, you connect components to the data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const Comment = ({ comment }) =&amp;gt; (
  &amp;lt;View style={styles.commentBox}&amp;gt;
    &amp;lt;Text&amp;gt;{comment.body} — by {comment.author}&amp;lt;/Text&amp;gt;
  &amp;lt;/View&amp;gt;
)

// This is how you make your app reactive! ✨
const enhance = withObservables([&#39;comment&#39;], ({ comment }) =&amp;gt; ({
  comment,
}))
const EnhancedComment = enhance(Comment)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And now you can render the whole Post:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const Post = ({ post, comments }) =&amp;gt; (
  &amp;lt;View&amp;gt;
    &amp;lt;Text&amp;gt;{post.name}&amp;lt;/Text&amp;gt;
    &amp;lt;Text&amp;gt;Comments:&amp;lt;/Text&amp;gt;
    {comments.map(comment =&amp;gt;
      &amp;lt;Comment key={comment.id} comment={comment} /&amp;gt;
    )}
  &amp;lt;/View&amp;gt;
)

const enhance = withObservables([&#39;post&#39;], ({ post }) =&amp;gt; ({
  post,
  comments: post.comments
}))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result is fully reactive! Whenever a post or comment is added, changed, or removed, the right components &lt;strong&gt;will automatically re-render&lt;/strong&gt; on screen. Doesn&#39;t matter if a change occurred in a totally different part of the app, it all just works out of the box!&lt;/p&gt; 
&lt;h3&gt;➡️ &lt;strong&gt;Learn more:&lt;/strong&gt; &lt;a href=&quot;https://nozbe.github.io/WatermelonDB/&quot;&gt;see full documentation&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Who uses WatermelonDB&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;em&gt;Does your company or app use 🍉? Open a pull request and add your logo/icon with link here!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;WatermelonDB is an open-source project and it needs your help to thrive!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If there&#39;s a missing feature, a bug, or other improvement you&#39;d like, we encourage you to contribute! Feel free to open an issue to get some guidance and see &lt;a href=&quot;https://raw.githubusercontent.com/Nozbe/WatermelonDB/master/CONTRIBUTING.md&quot;&gt;Contributing guide&lt;/a&gt; for details about project setup, testing, etc.&lt;/p&gt; 
&lt;p&gt;If you&#39;re just getting started, see &lt;a href=&quot;https://github.com/Nozbe/WatermelonDB/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&quot;&gt;good first issues&lt;/a&gt; that are easy to contribute to. If you make a non-trivial contribution, email me, and I&#39;ll send you a nice 🍉 sticker!&lt;/p&gt; 
&lt;p&gt;If you make or are considering making an app using WatermelonDB, please let us know!&lt;/p&gt; 
&lt;h2&gt;Author and license&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;WatermelonDB&lt;/strong&gt; was created by &lt;a href=&quot;https://github.com/Nozbe&quot;&gt;@Nozbe&lt;/a&gt;. Main author and maintainer is &lt;a href=&quot;https://github.com/radex&quot;&gt;Radek Pietruszewski&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Contributors:&lt;/strong&gt; &lt;a href=&quot;https://github.com/mobily&quot;&gt;@mobily&lt;/a&gt;, &lt;a href=&quot;https://github.com/kokusGr&quot;&gt;@kokusGr&lt;/a&gt;, &lt;a href=&quot;https://github.com/rozPierog&quot;&gt;@rozPierog&lt;/a&gt;, &lt;a href=&quot;https://github.com/rkrajewski&quot;&gt;@rkrajewski&lt;/a&gt;, &lt;a href=&quot;https://github.com/domeknn&quot;&gt;@domeknn&lt;/a&gt;, &lt;a href=&quot;https://github.com/Tereszkiewicz&quot;&gt;@Tereszkiewicz&lt;/a&gt; and &lt;a href=&quot;https://github.com/Nozbe/WatermelonDB/graphs/contributors&quot;&gt;more&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;WatermelonDB is available under the MIT license. See the &lt;a href=&quot;https://raw.githubusercontent.com/Nozbe/WatermelonDB/master/LICENSE&quot;&gt;LICENSE file&lt;/a&gt; for more info.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NazwaS/termux-whatsapp-bot</title>
      <link>https://github.com/NazwaS/termux-whatsapp-bot</link>
      <description>&lt;p&gt;Only termux&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Moshimoshi~ I&#39;m Nazwa
 &lt;!-- raw HTML omitted --&gt;&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://saweria.co/nazwas&quot;&gt;Saweria&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://trakteer.id/NazwaS&quot;&gt;Trakteer&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Made By&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; Termux
&amp;gt; WhatsApp
&amp;gt; 2 HandPhone
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h2&gt;Information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change vcard contacts on &lt;a href=&quot;https://github.com/NazwaS/termux-whatsapp-bot/blob/main/nzwa.js#L90&quot;&gt;this section&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Change Options on &lt;a href=&quot;https://github.com/NazwaS/termux-whatsapp-bot/blob/main/options/option.json&quot;&gt;this file&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Change menu on &lt;a href=&quot;https://github.com/NazwaS/termux-whatsapp-bot/tree/main/database/menu&quot;&gt;this folders&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;Get BarBarKey on &lt;a href=&quot;https://mhankbarbar.tech&quot;&gt;this site&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;How To Editing option.json&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;{
    &quot;botName&quot;: &quot;BOT_NAME&quot;,
    &quot;ownerName&quot;: &quot;OWNER_NAME&quot;,
    &quot;BarBarKey&quot;: &quot;YOUR_APIKEY&quot;,
    &quot;ownerNumbers&quot;: &quot;628885xxxxxx@s.whatsapp.net&quot;,
    &quot;languages&quot;: &quot;ind&quot;,
    &quot;botPrefix&quot;: &quot;.&quot;,
    &quot;memberLimitss&quot;: &quot;25&quot;,
    &quot;userDefaultLimit&quot;: &quot;30&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change &lt;code&gt;botName&lt;/code&gt; with your Bot Name Example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&quot;botName&quot;: &quot;Isemori Bot&quot;,
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change &lt;code&gt;ownerName&lt;/code&gt; with your Name Example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&quot;ownerName&quot;: &quot;Nazwa&quot;,
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change &lt;code&gt;BarBarKey&lt;/code&gt; with your mhankbarbar ApiKey Example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&quot;BarBarKey&quot;: &quot;A4wJwkoSak82hj82NWo92&quot;,
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change &lt;code&gt;ownerNumbers&lt;/code&gt; with your WhatsApp Number ID Example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&quot;ownerNumbers&quot;: &quot;12542123926@s.whatsapp.net&quot;,
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Change &lt;code&gt;languages&lt;/code&gt; with your language ID (Coming soon)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change &lt;code&gt;botPrefix&lt;/code&gt; with your prefix Example:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&quot;botPrefix&quot;: &quot;!&quot;,
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change &lt;code&gt;memberLimitss&lt;/code&gt; with a member limits :v Example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&quot;memberLimitss&quot;: &quot;35&quot;,
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change &lt;code&gt;userDefaultLimit&lt;/code&gt; with Inisial limit Example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&quot;userDefaultLimit&quot;: &quot;35&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Follow The Steps Below!&lt;/p&gt; 
&lt;h2&gt;For Termux&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; termux-setup-storage
(after that tap on permission)
&amp;gt; apt install git -y
&amp;gt; git clone https://github.com/NazwaS/termux-whatsapp-bot
&amp;gt; cd termux-whatsapp-bot
&amp;gt; bash install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Starting Bot&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stopping Bot&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; Ctrl + Z
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h2&gt;For PC/VPS/RDP&lt;/h2&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download libwebp &amp;amp; tutorial &lt;a href=&quot;https://developers.google.com/speed/webp/download&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download FFmpeg &lt;a href=&quot;https://ffmpeg.org/download.html&quot;&gt;here&lt;/a&gt; - Tutorial Installing &lt;a href=&quot;http://blog.gregzaal.com/how-to-install-ffmpeg-on-windows/&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download Wget &amp;amp; tutorial &lt;a href=&quot;http://gnuwin32.sourceforge.net/packages/wget.htm&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download tesseract-ocr &lt;a href=&quot;https://tesseract-ocr.github.io/tessdoc/Downloads.html&quot;&gt;here&lt;/a&gt; - Tutorial Installing &lt;a href=&quot;https://emop.tamu.edu/Installing-Tesseract-Windows8&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download NodeJS &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download Git &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;here&lt;/a&gt; - Tutorial Installing &lt;a href=&quot;https://phoenixnap.com/kb/how-to-install-git-windows&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; git clone https://github.com/NazwaS/termux-whatsapp-bot
&amp;gt; cd termux-whatsapp-bot
&amp;gt; npm install
&amp;gt; npm i imgbb-uploader
&amp;gt; npm i got
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Starting Bot&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stopping Bot&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; Ctrl + C
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;120+ Features&lt;/h2&gt; 
&lt;p&gt;| Unique Features | YES | :---------------------------------------------: | :-----------: | | Register Name And Age|✅| | Leveling|✅| | Money|✅| | Limit Commands|✅| | Buy Limit With Money|✅| | Event|✅| | Mining (Need Activate Event)|✅|&lt;/p&gt; 
&lt;p&gt;| MAKER | YES | | :---------------------------------------------: | :-----------: | | Sticker Maker|✅| | Sticker Gif Maker|✅| | Convert Sticker To Image|✅| | Convert Video To MP3|✅| | Black Pink Logo Maker|✅| | 3D Text Maker|✅| | Quote Maker|✅| | Water Maker|✅| | Fire Text Maker|✅| | Marvel Logo Maker|✅| | Snow Write Maker|✅| | Ninja Logo Maker|✅| | Logo Wolf Maker|✅| | Logo Wolf Maker2|✅| | Neon Logo Maker|✅| | Neon Logo Maker2|✅| | Lion Logo Maker|✅| | Joker Logo Maker|✅| | Shadow Image Maker|✅| | Burn Papper Image Maker|✅| | Coffee Image Maker|✅| | Love Papper Image Maker|✅| | Wood Block Image Maker|✅| | Quotes On Wood Heart Image Maker|✅| | Message Under The Grass Image Maker|✅| | Underground Ocean Image Maker|✅| | Wooden Boards Image Maker|✅| | Wolf Metal Image Maker|✅| | Metalic Text Glow Image Maker|✅| | 8 Bit Image Maker|✅| | Text Sticker Maker|✅| | Herry Potter Image Maker|✅| | Pubg Logo Maker|✅|&lt;/p&gt; 
&lt;p&gt;| SimSimi | YES | | :-----------------: | :-------: | | Simi|✅| | Simih|✅|&lt;/p&gt; 
&lt;p&gt;| MEDIA | YES | | :-----------------: | :-------: | | Trend Twit|✅| | YT Search|✅| | Random KPOP|✅|&lt;/p&gt; 
&lt;p&gt;| EDUCATION | YES | | :-----------------: | :-------: | | The Meaning Of The Name|✅| | Nulis|✅| | Quotes|✅| | Quotes2|✅| | Translate|✅| | Tafsir Mimpi|✅|&lt;/p&gt; 
&lt;p&gt;| ASK | YES | | :-----------------: | :-------: | | Apakah|✅| | Kapankah|✅| | Bisakah|✅|&lt;/p&gt; 
&lt;p&gt;| DOWNLOADER | YES | | :-----------------: | :-------: | | Pinterest Downloader|✅| | Ytmp3 Downloader|✅| | Ytmp4 Downloader|✅| | Joox Downloader|✅| | Joox2 Downloader|✅| | TikTok Downloader|✅|&lt;/p&gt; 
&lt;p&gt;| MEME | YES | | :-----------------: | :-------: | | Meme|✅| | Meme Indo|✅|&lt;/p&gt; 
&lt;p&gt;| GROUP | YES | | :-----------------: | :-------: | | Open Group|✅| | Close Group|✅| | Promote Member|✅| | Demote Member|✅| | Hide Tag|✅| | Tag All Members|✅| | Tag All Members2|✅| | Tag All Members3|✅| | Tag All Members4|✅| | Tag All Members5|✅| | Add Member|✅| | Kick Member|✅| | Show List Admins|✅| | Leave Group|✅| | Show Owner Group|✅| | welcome New Members|✅| | Nsfw|✅| | Simih|✅| | Tag Me|✅| | Anti Link Group|✅|&lt;/p&gt; 
&lt;p&gt;| SOUND | YES | | :-----------------: | :-------: | | Text To Speach|✅| | Play|✅|&lt;/p&gt; 
&lt;p&gt;| MUSIC | YES | | :-----------------: | :-------: | | Music Lyrics|✅| | Chord Guitar|✅|&lt;/p&gt; 
&lt;p&gt;| ISLAM | YES | | :-----------------: | :-------: | | Qur&#39;an|✅|&lt;/p&gt; 
&lt;p&gt;| STALK | YES | | :-----------------: | :-------: | | Instagram Stalk|✅| | Tiktok Stalk|✅|&lt;/p&gt; 
&lt;p&gt;| WIBU | YES | | :-----------------: | :-------: | | Neonime|✅| | Pokemon|✅| | Nekonime|✅| | Loli|✅| | Random Shota|✅| | Random Waifu|✅| | Random Anime|✅| | Random Husbu|✅| | Random Husbu2|✅| | What Anime Is This|✅|&lt;/p&gt; 
&lt;p&gt;| FUN | YES | | :-----------------: | :-------: | | Alay|✅| | Glitch|✅| | Game|✅| | Cek Ganteng|✅| | Watak|✅| | Random Hobby|✅| | Simi|✅| | Say|✅|&lt;/p&gt; 
&lt;p&gt;| INFORMATION | YES | | :-----------------: | :-------: | | List Bahasa|✅| | List Kode Negara|✅| | Information Weather|✅| | KBBI|✅| | Fakta|✅| | Covid|✅| | Earthquake Information|✅| | Ping|✅| | Jadwal TV Now|✅|&lt;/p&gt; 
&lt;p&gt;| 18+ | YES | | :-----------------: | :-------: | | Random Hentai|✅| | NSFW Neko|✅| | NSFW Trap|✅|&lt;/p&gt; 
&lt;p&gt;| OWNER | YES | | :-----------------: | :-------: | | Set Prefix|✅| | Block Member|✅| | Broadcast|✅| | Group Broadcast|✅| | Clear All Chat|✅| | Clone Photo Profile Bot|✅|&lt;/p&gt; 
&lt;p&gt;| OTHER | YES | | :-----------------: | :-------: | | Send|✅| | WaMe|✅| | Virtex|✅| | Exe|✅| | QrCode|✅| | Semoji|✅| | FML|✅| | FML2|✅| | Afk|✅| | Timer|✅|&lt;/p&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h2&gt;Group&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special Thanks To&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jsdom/jsdom</title>
      <link>https://github.com/jsdom/jsdom</link>
      <description>&lt;p&gt;A JavaScript implementation of various web standards, for use with Node.js&lt;/p&gt;&lt;hr&gt;&lt;p&gt;jsdom is a pure-JavaScript implementation of many web standards, notably the WHATWG &lt;a href=&quot;https://dom.spec.whatwg.org/&quot;&gt;DOM&lt;/a&gt; and &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML&lt;/a&gt; Standards, for use with Node.js. In general, the goal of the project is to emulate enough of a subset of a web browser to be useful for testing and scraping real-world web applications.&lt;/p&gt; 
&lt;p&gt;The latest versions of jsdom require Node.js v10 or newer. (Versions of jsdom below v16 still work with previous Node.js versions, but are unsupported.)&lt;/p&gt; 
&lt;h2&gt;Basic usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const jsdom = require(&quot;jsdom&quot;);
const { JSDOM } = jsdom;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use jsdom, you will primarily use the &lt;code&gt;JSDOM&lt;/code&gt; constructor, which is a named export of the jsdom main module. Pass the constructor a string. You will get back a &lt;code&gt;JSDOM&lt;/code&gt; object, which has a number of useful properties, notably &lt;code&gt;window&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const dom = new JSDOM(`&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;`);
console.log(dom.window.document.querySelector(&quot;p&quot;).textContent); // &quot;Hello world&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Note that jsdom will parse the HTML you pass it just like a browser does, including implied &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tags.)&lt;/p&gt; 
&lt;p&gt;The resulting object is an instance of the &lt;code&gt;JSDOM&lt;/code&gt; class, which contains a number of useful properties and methods besides &lt;code&gt;window&lt;/code&gt;. In general, it can be used to act on the jsdom from the &quot;outside,&quot; doing things that are not possible with the normal DOM APIs. For simple cases, where you don&#39;t need any of this functionality, we recommend a coding pattern like&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { window } = new JSDOM(`...`);
// or even
const { document } = (new JSDOM(`...`)).window;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Full documentation on everything you can do with the &lt;code&gt;JSDOM&lt;/code&gt; class is below, in the section &quot;&lt;code&gt;JSDOM&lt;/code&gt; Object API&quot;.&lt;/p&gt; 
&lt;h2&gt;Customizing jsdom&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;JSDOM&lt;/code&gt; constructor accepts a second parameter which can be used to customize your jsdom in the following ways.&lt;/p&gt; 
&lt;h3&gt;Simple options&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const dom = new JSDOM(``, {
  url: &quot;https://example.org/&quot;,
  referrer: &quot;https://example.com/&quot;,
  contentType: &quot;text/html&quot;,
  includeNodeLocations: true,
  storageQuota: 10000000
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;url&lt;/code&gt; sets the value returned by &lt;code&gt;window.location&lt;/code&gt;, &lt;code&gt;document.URL&lt;/code&gt;, and &lt;code&gt;document.documentURI&lt;/code&gt;, and affects things like resolution of relative URLs within the document and the same-origin restrictions and referrer used while fetching subresources. It defaults to &lt;code&gt;&quot;about:blank&quot;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;referrer&lt;/code&gt; just affects the value read from &lt;code&gt;document.referrer&lt;/code&gt;. It defaults to no referrer (which reflects as the empty string).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;contentType&lt;/code&gt; affects the value read from &lt;code&gt;document.contentType&lt;/code&gt;, as well as how the document is parsed: as HTML or as XML. Values that are not a &lt;a href=&quot;https://mimesniff.spec.whatwg.org/#html-mime-type&quot;&gt;HTML mime type&lt;/a&gt; or an &lt;a href=&quot;https://mimesniff.spec.whatwg.org/#xml-mime-type&quot;&gt;XML mime type&lt;/a&gt; will throw. It defaults to &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;. If a &lt;code&gt;charset&lt;/code&gt; parameter is present, it can affect &lt;a href=&quot;https://raw.githubusercontent.com/jsdom/jsdom/master/#encoding-sniffing&quot;&gt;binary data processing&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;includeNodeLocations&lt;/code&gt; preserves the location info produced by the HTML parser, allowing you to retrieve it with the &lt;code&gt;nodeLocation()&lt;/code&gt; method (described below). It also ensures that line numbers reported in exception stack traces for code running inside &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; elements are correct. It defaults to &lt;code&gt;false&lt;/code&gt; to give the best performance, and cannot be used with an XML content type since our XML parser does not support location info.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;storageQuota&lt;/code&gt; is the maximum size in code units for the separate storage areas used by &lt;code&gt;localStorage&lt;/code&gt; and &lt;code&gt;sessionStorage&lt;/code&gt;. Attempts to store data larger than this limit will cause a &lt;code&gt;DOMException&lt;/code&gt; to be thrown. By default, it is set to 5,000,000 code units per origin, as inspired by the HTML specification.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that both &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;referrer&lt;/code&gt; are canonicalized before they&#39;re used, so e.g. if you pass in &lt;code&gt;&quot;https:example.com&quot;&lt;/code&gt;, jsdom will interpret that as if you had given &lt;code&gt;&quot;https://example.com/&quot;&lt;/code&gt;. If you pass an unparseable URL, the call will throw. (URLs are parsed and serialized according to the &lt;a href=&quot;http://url.spec.whatwg.org/&quot;&gt;URL Standard&lt;/a&gt;.)&lt;/p&gt; 
&lt;h3&gt;Executing scripts&lt;/h3&gt; 
&lt;p&gt;jsdom&#39;s most powerful ability is that it can execute scripts inside the jsdom. These scripts can modify the content of the page and access all the web platform APIs jsdom implements.&lt;/p&gt; 
&lt;p&gt;However, this is also highly dangerous when dealing with untrusted content. The jsdom sandbox is not foolproof, and code running inside the DOM&#39;s &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;s can, if it tries hard enough, get access to the Node.js environment, and thus to your machine. As such, the ability to execute scripts embedded in the HTML is disabled by default:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const dom = new JSDOM(`&amp;lt;body&amp;gt;
  &amp;lt;script&amp;gt;document.body.appendChild(document.createElement(&quot;hr&quot;));&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;`);

// The script will not be executed, by default:
dom.window.document.body.children.length === 1;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To enable executing scripts inside the page, you can use the &lt;code&gt;runScripts: &quot;dangerously&quot;&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const dom = new JSDOM(`&amp;lt;body&amp;gt;
  &amp;lt;script&amp;gt;document.body.appendChild(document.createElement(&quot;hr&quot;));&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;`, { runScripts: &quot;dangerously&quot; });

// The script will be executed and modify the DOM:
dom.window.document.body.children.length === 2;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Again we emphasize to only use this when feeding jsdom code you know is safe. If you use it on arbitrary user-supplied code, or code from the Internet, you are effectively running untrusted Node.js code, and your machine could be compromised.&lt;/p&gt; 
&lt;p&gt;If you want to execute &lt;em&gt;external&lt;/em&gt; scripts, included via &lt;code&gt;&amp;lt;script src=&quot;&quot;&amp;gt;&lt;/code&gt;, you&#39;ll also need to ensure that they load them. To do this, add the option &lt;code&gt;resources: &quot;usable&quot;&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jsdom/jsdom/master/#loading-subresources&quot;&gt;as described below&lt;/a&gt;. (You&#39;ll likely also want to set the &lt;code&gt;url&lt;/code&gt; option, for the reasons discussed there.)&lt;/p&gt; 
&lt;p&gt;Event handler attributes, like &lt;code&gt;&amp;lt;div onclick=&quot;&quot;&amp;gt;&lt;/code&gt;, are also governed by this setting; they will not function unless &lt;code&gt;runScripts&lt;/code&gt; is set to &lt;code&gt;&quot;dangerously&quot;&lt;/code&gt;. (However, event handler &lt;em&gt;properties&lt;/em&gt;, like &lt;code&gt;div.onclick = ...&lt;/code&gt;, will function regardless of &lt;code&gt;runScripts&lt;/code&gt;.)&lt;/p&gt; 
&lt;p&gt;If you are simply trying to execute script &quot;from the outside&quot;, instead of letting &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; elements and event handlers attributes run &quot;from the inside&quot;, you can use the &lt;code&gt;runScripts: &quot;outside-only&quot;&lt;/code&gt; option, which enables fresh copies of all the JavaScript spec-provided globals to be installed on &lt;code&gt;window&lt;/code&gt;. This includes things like &lt;code&gt;window.Array&lt;/code&gt;, &lt;code&gt;window.Promise&lt;/code&gt;, etc. It also, notably, includes &lt;code&gt;window.eval&lt;/code&gt;, which allows running scripts, but with the jsdom &lt;code&gt;window&lt;/code&gt; as the global:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { window } = new JSDOM(``, { runScripts: &quot;outside-only&quot; });

window.eval(`document.body.innerHTML = &quot;&amp;lt;p&amp;gt;Hello, world!&amp;lt;/p&amp;gt;&quot;;`);
window.document.body.children.length === 1;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is turned off by default for performance reasons, but is safe to enable.&lt;/p&gt; 
&lt;p&gt;(Note that in the default configuration, without setting &lt;code&gt;runScripts&lt;/code&gt;, the values of &lt;code&gt;window.Array&lt;/code&gt;, &lt;code&gt;window.eval&lt;/code&gt;, etc. will be the same as those provided by the outer Node.js environment. That is, &lt;code&gt;window.eval === eval&lt;/code&gt; will hold, so &lt;code&gt;window.eval&lt;/code&gt; will not run scripts in a useful way.)&lt;/p&gt; 
&lt;p&gt;We strongly advise against trying to &quot;execute scripts&quot; by mashing together the jsdom and Node global environments (e.g. by doing &lt;code&gt;global.window = dom.window&lt;/code&gt;), and then executing scripts or test code inside the Node global environment. Instead, you should treat jsdom like you would a browser, and run all scripts and tests that need access to a DOM inside the jsdom environment, using &lt;code&gt;window.eval&lt;/code&gt; or &lt;code&gt;runScripts: &quot;dangerously&quot;&lt;/code&gt;. This might require, for example, creating a browserify bundle to execute as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element—just like you would in a browser.&lt;/p&gt; 
&lt;p&gt;Finally, for advanced use cases you can use the &lt;code&gt;dom.getInternalVMContext()&lt;/code&gt; method, documented below.&lt;/p&gt; 
&lt;h3&gt;Pretending to be a visual browser&lt;/h3&gt; 
&lt;p&gt;jsdom does not have the capability to render visual content, and will act like a headless browser by default. It provides hints to web pages through APIs such as &lt;code&gt;document.hidden&lt;/code&gt; that their content is not visible.&lt;/p&gt; 
&lt;p&gt;When the &lt;code&gt;pretendToBeVisual&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt;, jsdom will pretend that it is rendering and displaying content. It does this by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Changing &lt;code&gt;document.hidden&lt;/code&gt; to return &lt;code&gt;false&lt;/code&gt; instead of &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Changing &lt;code&gt;document.visibilityState&lt;/code&gt; to return &lt;code&gt;&quot;visible&quot;&lt;/code&gt; instead of &lt;code&gt;&quot;prerender&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Enabling &lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; and &lt;code&gt;window.cancelAnimationFrame()&lt;/code&gt; methods, which otherwise do not exist&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const window = (new JSDOM(``, { pretendToBeVisual: true })).window;

window.requestAnimationFrame(timestamp =&amp;gt; {
  console.log(timestamp &amp;gt; 0);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that jsdom still &lt;a href=&quot;https://raw.githubusercontent.com/jsdom/jsdom/master/#unimplemented-parts-of-the-web-platform&quot;&gt;does not do any layout or rendering&lt;/a&gt;, so this is really just about &lt;em&gt;pretending&lt;/em&gt; to be visual, not about implementing the parts of the platform a real, visual web browser would implement.&lt;/p&gt; 
&lt;h3&gt;Loading subresources&lt;/h3&gt; 
&lt;h4&gt;Basic options&lt;/h4&gt; 
&lt;p&gt;By default, jsdom will not load any subresources such as scripts, stylesheets, images, or iframes. If you&#39;d like jsdom to load such resources, you can pass the &lt;code&gt;resources: &quot;usable&quot;&lt;/code&gt; option, which will load all usable resources. Those are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Frames and iframes, via &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Stylesheets, via &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Scripts, via &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, but only if &lt;code&gt;runScripts: &quot;dangerously&quot;&lt;/code&gt; is also set&lt;/li&gt; 
 &lt;li&gt;Images, via &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, but only if the &lt;code&gt;canvas&lt;/code&gt; npm package is also installed (see &quot;&lt;a href=&quot;https://raw.githubusercontent.com/jsdom/jsdom/master/#canvas-support&quot;&gt;Canvas Support&lt;/a&gt;&quot; below)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When attempting to load resources, recall that the default value for the &lt;code&gt;url&lt;/code&gt; option is &lt;code&gt;&quot;about:blank&quot;&lt;/code&gt;, which means that any resources included via relative URLs will fail to load. (The result of trying to parse the URL &lt;code&gt;/something&lt;/code&gt; against the URL &lt;code&gt;about:blank&lt;/code&gt; is an error.) So, you&#39;ll likely want to set a non-default value for the &lt;code&gt;url&lt;/code&gt; option in those cases, or use one of the &lt;a href=&quot;https://raw.githubusercontent.com/jsdom/jsdom/master/#convenience-apis&quot;&gt;convenience APIs&lt;/a&gt; that do so automatically.&lt;/p&gt; 
&lt;h4&gt;Advanced configuration&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;This resource loader system is new as of jsdom v12.0.0, and we&#39;d love your feedback on whether it meets your needs and how easy it is to use. Please file an issue to discuss!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To more fully customize jsdom&#39;s resource-loading behavior, you can pass an instance of the &lt;code&gt;ResourceLoader&lt;/code&gt; class as the &lt;code&gt;resources&lt;/code&gt; option value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const resourceLoader = new jsdom.ResourceLoader({
  proxy: &quot;http://127.0.0.1:9001&quot;,
  strictSSL: false,
  userAgent: &quot;Mellblomenator/9000&quot;,
});
const dom = new JSDOM(``, { resources: resourceLoader });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The three options to the &lt;code&gt;ResourceLoader&lt;/code&gt; constructor are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;proxy&lt;/code&gt; is the address of an HTTP proxy to be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strictSSL&lt;/code&gt; can be set to false to disable the requirement that SSL certificates be valid.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;userAgent&lt;/code&gt; affects the &lt;code&gt;User-Agent&lt;/code&gt; header sent, and thus the resulting value for &lt;code&gt;navigator.userAgent&lt;/code&gt;. It defaults to 
  &lt;!-- raw HTML omitted --&gt;`Mozilla/5.0 (${process.platform || &quot;unknown OS&quot;}) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/${jsdomVersion}`
  &lt;!-- raw HTML omitted --&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can further customize resource fetching by subclassing &lt;code&gt;ResourceLoader&lt;/code&gt; and overriding the &lt;code&gt;fetch()&lt;/code&gt; method. For example, here is a version that only returns results for requests to a trusted origin:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class CustomResourceLoader extends jsdom.ResourceLoader {
  fetch(url, options) {
    // Override the contents of this script to do something unusual.
    if (url === &quot;https://example.com/some-specific-script.js&quot;) {
      return Promise.resolve(Buffer.from(&quot;window.someGlobal = 5;&quot;));
    }

    return super.fetch(url, options);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;jsdom will call your custom resource loader&#39;s &lt;code&gt;fetch()&lt;/code&gt; method whenever it encounters a &quot;usable&quot; resource, per the above section. The method takes a URL string, as well as a few options which you should pass through unmodified if calling &lt;code&gt;super.fetch()&lt;/code&gt;. It must return a promise for a Node.js &lt;code&gt;Buffer&lt;/code&gt; object, or return &lt;code&gt;null&lt;/code&gt; if the resource is intentionally not to be loaded. In general, most cases will want to delegate to &lt;code&gt;super.fetch()&lt;/code&gt;, as shown.&lt;/p&gt; 
&lt;p&gt;One of the options you will receive in &lt;code&gt;fetch()&lt;/code&gt; will be the element (if applicable) that is fetching a resource.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;class CustomResourceLoader extends jsdom.ResourceLoader {
  fetch(url, options) {
    if (options.element) {
      console.log(`Element ${options.element.localName} is requesting the url ${url}`);
    }

    return super.fetch(url, options);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Virtual consoles&lt;/h3&gt; 
&lt;p&gt;Like web browsers, jsdom has the concept of a &quot;console&quot;. This records both information directly sent from the page, via scripts executing inside the document, as well as information from the jsdom implementation itself. We call the user-controllable console a &quot;virtual console&quot;, to distinguish it from the Node.js &lt;code&gt;console&lt;/code&gt; API and from the inside-the-page &lt;code&gt;window.console&lt;/code&gt; API.&lt;/p&gt; 
&lt;p&gt;By default, the &lt;code&gt;JSDOM&lt;/code&gt; constructor will return an instance with a virtual console that forwards all its output to the Node.js console. To create your own virtual console and pass it to jsdom, you can override this default by doing&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const virtualConsole = new jsdom.VirtualConsole();
const dom = new JSDOM(``, { virtualConsole });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Code like this will create a virtual console with no behavior. You can give it behavior by adding event listeners for all the possible console methods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;virtualConsole.on(&quot;error&quot;, () =&amp;gt; { ... });
virtualConsole.on(&quot;warn&quot;, () =&amp;gt; { ... });
virtualConsole.on(&quot;info&quot;, () =&amp;gt; { ... });
virtualConsole.on(&quot;dir&quot;, () =&amp;gt; { ... });
// ... etc. See https://console.spec.whatwg.org/#logging
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Note that it is probably best to set up these event listeners &lt;em&gt;before&lt;/em&gt; calling &lt;code&gt;new JSDOM()&lt;/code&gt;, since errors or console-invoking script might occur during parsing.)&lt;/p&gt; 
&lt;p&gt;If you simply want to redirect the virtual console output to another console, like the default Node.js one, you can do&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;virtualConsole.sendTo(console);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is also a special event, &lt;code&gt;&quot;jsdomError&quot;&lt;/code&gt;, which will fire with error objects to report errors from jsdom itself. This is similar to how error messages often show up in web browser consoles, even if they are not initiated by &lt;code&gt;console.error&lt;/code&gt;. So far, the following errors are output this way:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Errors loading or parsing subresources (scripts, stylesheets, frames, and iframes)&lt;/li&gt; 
 &lt;li&gt;Script execution errors that are not handled by a window &lt;code&gt;onerror&lt;/code&gt; event handler that returns &lt;code&gt;true&lt;/code&gt; or calls &lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Not-implemented errors resulting from calls to methods, like &lt;code&gt;window.alert&lt;/code&gt;, which jsdom does not implement, but installs anyway for web compatibility&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;re using &lt;code&gt;sendTo(c)&lt;/code&gt; to send errors to &lt;code&gt;c&lt;/code&gt;, by default it will call &lt;code&gt;c.error(errorStack[, errorDetail])&lt;/code&gt; with information from &lt;code&gt;&quot;jsdomError&quot;&lt;/code&gt; events. If you&#39;d prefer to maintain a strict one-to-one mapping of events to method calls, and perhaps handle &lt;code&gt;&quot;jsdomError&quot;&lt;/code&gt;s yourself, then you can do&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;virtualConsole.sendTo(c, { omitJSDOMErrors: true });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Cookie jars&lt;/h3&gt; 
&lt;p&gt;Like web browsers, jsdom has the concept of a cookie jar, storing HTTP cookies. Cookies that have a URL on the same domain as the document, and are not marked HTTP-only, are accessible via the &lt;code&gt;document.cookie&lt;/code&gt; API. Additionally, all cookies in the cookie jar will impact the fetching of subresources.&lt;/p&gt; 
&lt;p&gt;By default, the &lt;code&gt;JSDOM&lt;/code&gt; constructor will return an instance with an empty cookie jar. To create your own cookie jar and pass it to jsdom, you can override this default by doing&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const cookieJar = new jsdom.CookieJar(store, options);
const dom = new JSDOM(``, { cookieJar });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is mostly useful if you want to share the same cookie jar among multiple jsdoms, or prime the cookie jar with certain values ahead of time.&lt;/p&gt; 
&lt;p&gt;Cookie jars are provided by the &lt;a href=&quot;https://www.npmjs.com/package/tough-cookie&quot;&gt;tough-cookie&lt;/a&gt; package. The &lt;code&gt;jsdom.CookieJar&lt;/code&gt; constructor is a subclass of the tough-cookie cookie jar which by default sets the &lt;code&gt;looseMode: true&lt;/code&gt; option, since that &lt;a href=&quot;https://github.com/whatwg/html/issues/804&quot;&gt;matches better how browsers behave&lt;/a&gt;. If you want to use tough-cookie&#39;s utilities and classes yourself, you can use the &lt;code&gt;jsdom.toughCookie&lt;/code&gt; module export to get access to the tough-cookie module instance packaged with jsdom.&lt;/p&gt; 
&lt;h3&gt;Intervening before parsing&lt;/h3&gt; 
&lt;p&gt;jsdom allows you to intervene in the creation of a jsdom very early: after the &lt;code&gt;Window&lt;/code&gt; and &lt;code&gt;Document&lt;/code&gt; objects are created, but before any HTML is parsed to populate the document with nodes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const dom = new JSDOM(`&amp;lt;p&amp;gt;Hello&amp;lt;/p&amp;gt;`, {
  beforeParse(window) {
    window.document.childNodes.length === 0;
    window.someCoolAPI = () =&amp;gt; { /* ... */ };
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is especially useful if you are wanting to modify the environment in some way, for example adding shims for web platform APIs jsdom does not support.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;JSDOM&lt;/code&gt; object API&lt;/h2&gt; 
&lt;p&gt;Once you have constructed a &lt;code&gt;JSDOM&lt;/code&gt; object, it will have the following useful capabilities:&lt;/p&gt; 
&lt;h3&gt;Properties&lt;/h3&gt; 
&lt;p&gt;The property &lt;code&gt;window&lt;/code&gt; retrieves the &lt;code&gt;Window&lt;/code&gt; object that was created for you.&lt;/p&gt; 
&lt;p&gt;The properties &lt;code&gt;virtualConsole&lt;/code&gt; and &lt;code&gt;cookieJar&lt;/code&gt; reflect the options you pass in, or the defaults created for you if nothing was passed in for those options.&lt;/p&gt; 
&lt;h3&gt;Serializing the document with &lt;code&gt;serialize()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;serialize()&lt;/code&gt; method will return the &lt;a href=&quot;https://html.spec.whatwg.org/#html-fragment-serialisation-algorithm&quot;&gt;HTML serialization&lt;/a&gt; of the document, including the doctype:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const dom = new JSDOM(`&amp;lt;!DOCTYPE html&amp;gt;hello`);

dom.serialize() === &quot;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;hello&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&quot;;

// Contrast with:
dom.window.document.documentElement.outerHTML === &quot;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;hello&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Getting the source location of a node with &lt;code&gt;nodeLocation(node)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;nodeLocation()&lt;/code&gt; method will find where a DOM node is within the source document, returning the &lt;a href=&quot;https://www.npmjs.com/package/parse5#options-locationinfo&quot;&gt;parse5 location info&lt;/a&gt; for the node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const dom = new JSDOM(
  `&amp;lt;p&amp;gt;Hello
    &amp;lt;img src=&quot;foo.jpg&quot;&amp;gt;
  &amp;lt;/p&amp;gt;`,
  { includeNodeLocations: true }
);

const document = dom.window.document;
const bodyEl = document.body; // implicitly created
const pEl = document.querySelector(&quot;p&quot;);
const textNode = pEl.firstChild;
const imgEl = document.querySelector(&quot;img&quot;);

console.log(dom.nodeLocation(bodyEl));   // null; it&#39;s not in the source
console.log(dom.nodeLocation(pEl));      // { startOffset: 0, endOffset: 39, startTag: ..., endTag: ... }
console.log(dom.nodeLocation(textNode)); // { startOffset: 3, endOffset: 13 }
console.log(dom.nodeLocation(imgEl));    // { startOffset: 13, endOffset: 32 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that this feature only works if you have set the &lt;code&gt;includeNodeLocations&lt;/code&gt; option; node locations are off by default for performance reasons.&lt;/p&gt; 
&lt;h3&gt;Interfacing with the Node.js &lt;code&gt;vm&lt;/code&gt; module using &lt;code&gt;getInternalVMContext()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The built-in &lt;a href=&quot;https://nodejs.org/api/vm.html&quot;&gt;&lt;code&gt;vm&lt;/code&gt;&lt;/a&gt; module of Node.js is what underpins jsdom&#39;s script-running magic. Some advanced use cases, like pre-compiling a script and then running it multiple times, benefit from using the &lt;code&gt;vm&lt;/code&gt; module directly with a jsdom-created &lt;code&gt;Window&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To get access to the &lt;a href=&quot;https://nodejs.org/api/vm.html#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified global object&lt;/a&gt;, suitable for use with the &lt;code&gt;vm&lt;/code&gt; APIs, you can use the &lt;code&gt;getInternalVMContext()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Script } = require(&quot;vm&quot;);

const dom = new JSDOM(``, { runScripts: &quot;outside-only&quot; });
const script = new Script(`
  if (!this.ran) {
    this.ran = 0;
  }

  ++this.ran;
`);

const vmContext = dom.getInternalVMContext();

script.runInContext(vmContext);
script.runInContext(vmContext);
script.runInContext(vmContext);

console.assert(dom.window.ran === 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is somewhat-advanced functionality, and we advise sticking to normal DOM APIs (such as &lt;code&gt;window.eval()&lt;/code&gt; or &lt;code&gt;document.createElement(&quot;script&quot;)&lt;/code&gt;) unless you have very specific needs.&lt;/p&gt; 
&lt;p&gt;Note that this method will throw an exception if the &lt;code&gt;JSDOM&lt;/code&gt; instance was created without &lt;code&gt;runScripts&lt;/code&gt; set, or if you are &lt;a href=&quot;https://raw.githubusercontent.com/jsdom/jsdom/master/#running-jsdom-inside-a-web-browser&quot;&gt;using jsdom in a web browser&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reconfiguring the jsdom with &lt;code&gt;reconfigure(settings)&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;top&lt;/code&gt; property on &lt;code&gt;window&lt;/code&gt; is marked &lt;code&gt;[Unforgeable]&lt;/code&gt; in the spec, meaning it is a non-configurable own property and thus cannot be overridden or shadowed by normal code running inside the jsdom, even using &lt;code&gt;Object.defineProperty&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Similarly, at present jsdom does not handle navigation (such as setting &lt;code&gt;window.location.href = &quot;https://example.com/&quot;&lt;/code&gt;); doing so will cause the virtual console to emit a &lt;code&gt;&quot;jsdomError&quot;&lt;/code&gt; explaining that this feature is not implemented, and nothing will change: there will be no new &lt;code&gt;Window&lt;/code&gt; or &lt;code&gt;Document&lt;/code&gt; object, and the existing &lt;code&gt;window&lt;/code&gt;&#39;s &lt;code&gt;location&lt;/code&gt; object will still have all the same property values.&lt;/p&gt; 
&lt;p&gt;However, if you&#39;re acting from outside the window, e.g. in some test framework that creates jsdoms, you can override one or both of these using the special &lt;code&gt;reconfigure()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const dom = new JSDOM();

dom.window.top === dom.window;
dom.window.location.href === &quot;about:blank&quot;;

dom.reconfigure({ windowTop: myFakeTopForTesting, url: &quot;https://example.com/&quot; });

dom.window.top === myFakeTopForTesting;
dom.window.location.href === &quot;https://example.com/&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that changing the jsdom&#39;s URL will impact all APIs that return the current document URL, such as &lt;code&gt;window.location&lt;/code&gt;, &lt;code&gt;document.URL&lt;/code&gt;, and &lt;code&gt;document.documentURI&lt;/code&gt;, as well as the resolution of relative URLs within the document, and the same-origin checks and referrer used while fetching subresources. It will not, however, perform navigation to the contents of that URL; the contents of the DOM will remain unchanged, and no new instances of &lt;code&gt;Window&lt;/code&gt;, &lt;code&gt;Document&lt;/code&gt;, etc. will be created.&lt;/p&gt; 
&lt;h2&gt;Convenience APIs&lt;/h2&gt; 
&lt;h3&gt;&lt;code&gt;fromURL()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;In addition to the &lt;code&gt;JSDOM&lt;/code&gt; constructor itself, jsdom provides a promise-returning factory method for constructing a jsdom from a URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;JSDOM.fromURL(&quot;https://example.com/&quot;, options).then(dom =&amp;gt; {
  console.log(dom.serialize());
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The returned promise will fulfill with a &lt;code&gt;JSDOM&lt;/code&gt; instance if the URL is valid and the request is successful. Any redirects will be followed to their ultimate destination.&lt;/p&gt; 
&lt;p&gt;The options provided to &lt;code&gt;fromURL()&lt;/code&gt; are similar to those provided to the &lt;code&gt;JSDOM&lt;/code&gt; constructor, with the following additional restrictions and consequences:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;contentType&lt;/code&gt; options cannot be provided.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;referrer&lt;/code&gt; option is used as the HTTP &lt;code&gt;Referer&lt;/code&gt; request header of the initial request.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;resources&lt;/code&gt; option also affects the initial request; this is useful if you want to, for example, configure a proxy (see above).&lt;/li&gt; 
 &lt;li&gt;The resulting jsdom&#39;s URL, content type, and referrer are determined from the response.&lt;/li&gt; 
 &lt;li&gt;Any cookies set via HTTP &lt;code&gt;Set-Cookie&lt;/code&gt; response headers are stored in the jsdom&#39;s cookie jar. Similarly, any cookies already in a supplied cookie jar are sent as HTTP &lt;code&gt;Cookie&lt;/code&gt; request headers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;fromFile()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Similar to &lt;code&gt;fromURL()&lt;/code&gt;, jsdom also provides a &lt;code&gt;fromFile()&lt;/code&gt; factory method for constructing a jsdom from a filename:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;JSDOM.fromFile(&quot;stuff.html&quot;, options).then(dom =&amp;gt; {
  console.log(dom.serialize());
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The returned promise will fulfill with a &lt;code&gt;JSDOM&lt;/code&gt; instance if the given file can be opened. As usual in Node.js APIs, the filename is given relative to the current working directory.&lt;/p&gt; 
&lt;p&gt;The options provided to &lt;code&gt;fromFile()&lt;/code&gt; are similar to those provided to the &lt;code&gt;JSDOM&lt;/code&gt; constructor, with the following additional defaults:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;url&lt;/code&gt; option will default to a file URL corresponding to the given filename, instead of to &lt;code&gt;&quot;about:blank&quot;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;contentType&lt;/code&gt; option will default to &lt;code&gt;&quot;application/xhtml+xml&quot;&lt;/code&gt; if the given filename ends in &lt;code&gt;.xht&lt;/code&gt;, &lt;code&gt;.xhtml&lt;/code&gt;, or &lt;code&gt;.xml&lt;/code&gt;; otherwise it will continue to default to &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;fragment()&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;For the very simplest of cases, you might not need a whole &lt;code&gt;JSDOM&lt;/code&gt; instance with all its associated power. You might not even need a &lt;code&gt;Window&lt;/code&gt; or &lt;code&gt;Document&lt;/code&gt;! Instead, you just need to parse some HTML, and get a DOM object you can manipulate. For that, we have &lt;code&gt;fragment()&lt;/code&gt;, which creates a &lt;code&gt;DocumentFragment&lt;/code&gt; from a given string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const frag = JSDOM.fragment(`&amp;lt;p&amp;gt;Hello&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Hi!&amp;lt;/strong&amp;gt;`);

frag.childNodes.length === 2;
frag.querySelector(&quot;strong&quot;).textContent === &quot;Hi!&quot;;
// etc.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here &lt;code&gt;frag&lt;/code&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; instance, whose contents are created by parsing the provided string. The parsing is done using a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element, so you can include any element there (including ones with weird parsing rules like &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;). It&#39;s also important to note that the resulting &lt;code&gt;DocumentFragment&lt;/code&gt; will not have &lt;a href=&quot;https://html.spec.whatwg.org/multipage/#concept-document-bc&quot;&gt;an associated browsing context&lt;/a&gt;: that is, elements&#39; &lt;code&gt;ownerDocument&lt;/code&gt; will have a null &lt;code&gt;defaultView&lt;/code&gt; property, resources will not load, etc.&lt;/p&gt; 
&lt;p&gt;All invocations of the &lt;code&gt;fragment()&lt;/code&gt; factory result in &lt;code&gt;DocumentFragment&lt;/code&gt;s that share the same template owner &lt;code&gt;Document&lt;/code&gt;. This allows many calls to &lt;code&gt;fragment()&lt;/code&gt; with no extra overhead. But it also means that calls to &lt;code&gt;fragment()&lt;/code&gt; cannot be customized with any options.&lt;/p&gt; 
&lt;p&gt;Note that serialization is not as easy with &lt;code&gt;DocumentFragment&lt;/code&gt;s as it is with full &lt;code&gt;JSDOM&lt;/code&gt; objects. If you need to serialize your DOM, you should probably use the &lt;code&gt;JSDOM&lt;/code&gt; constructor more directly. But for the special case of a fragment containing a single element, it&#39;s pretty easy to do through normal means:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const frag = JSDOM.fragment(`&amp;lt;p&amp;gt;Hello&amp;lt;/p&amp;gt;`);
console.log(frag.firstChild.outerHTML); // logs &quot;&amp;lt;p&amp;gt;Hello&amp;lt;/p&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other noteworthy features&lt;/h2&gt; 
&lt;h3&gt;Canvas support&lt;/h3&gt; 
&lt;p&gt;jsdom includes support for using the &lt;a href=&quot;https://www.npmjs.com/package/canvas&quot;&gt;&lt;code&gt;canvas&lt;/code&gt;&lt;/a&gt; package to extend any &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; elements with the canvas API. To make this work, you need to include &lt;code&gt;canvas&lt;/code&gt; as a dependency in your project, as a peer of &lt;code&gt;jsdom&lt;/code&gt;. If jsdom can find the &lt;code&gt;canvas&lt;/code&gt; package, it will use it, but if it&#39;s not present, then &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; elements will behave like &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s. Since jsdom v13, version 2.x of &lt;code&gt;canvas&lt;/code&gt; is required; version 1.x is no longer supported.&lt;/p&gt; 
&lt;h3&gt;Encoding sniffing&lt;/h3&gt; 
&lt;p&gt;In addition to supplying a string, the &lt;code&gt;JSDOM&lt;/code&gt; constructor can also be supplied binary data, in the form of a Node.js &lt;a href=&quot;https://nodejs.org/docs/latest/api/buffer.html&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; or a standard JavaScript binary data type like &lt;code&gt;ArrayBuffer&lt;/code&gt;, &lt;code&gt;Uint8Array&lt;/code&gt;, &lt;code&gt;DataView&lt;/code&gt;, etc. When this is done, jsdom will &lt;a href=&quot;https://html.spec.whatwg.org/multipage/syntax.html#encoding-sniffing-algorithm&quot;&gt;sniff the encoding&lt;/a&gt; from the supplied bytes, scanning for &lt;code&gt;&amp;lt;meta charset&amp;gt;&lt;/code&gt; tags just like a browser does.&lt;/p&gt; 
&lt;p&gt;If the supplied &lt;code&gt;contentType&lt;/code&gt; option contains a &lt;code&gt;charset&lt;/code&gt; parameter, that encoding will override the sniffed encoding—unless a UTF-8 or UTF-16 BOM is present, in which case those take precedence. (Again, this is just like a browser.)&lt;/p&gt; 
&lt;p&gt;This encoding sniffing also applies to &lt;code&gt;JSDOM.fromFile()&lt;/code&gt; and &lt;code&gt;JSDOM.fromURL()&lt;/code&gt;. In the latter case, any &lt;code&gt;Content-Type&lt;/code&gt; headers sent with the response will take priority, in the same fashion as the constructor&#39;s &lt;code&gt;contentType&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;Note that in many cases supplying bytes in this fashion can be better than supplying a string. For example, if you attempt to use Node.js&#39;s &lt;code&gt;buffer.toString(&quot;utf-8&quot;)&lt;/code&gt; API, Node.js will not strip any leading BOMs. If you then give this string to jsdom, it will interpret it verbatim, leaving the BOM intact. But jsdom&#39;s binary data decoding code will strip leading BOMs, just like a browser; in such cases, supplying &lt;code&gt;buffer&lt;/code&gt; directly will give the desired result.&lt;/p&gt; 
&lt;h3&gt;Closing down a jsdom&lt;/h3&gt; 
&lt;p&gt;Timers in the jsdom (set by &lt;code&gt;window.setTimeout()&lt;/code&gt; or &lt;code&gt;window.setInterval()&lt;/code&gt;) will, by definition, execute code in the future in the context of the window. Since there is no way to execute code in the future without keeping the process alive, outstanding jsdom timers will keep your Node.js process alive. Similarly, since there is no way to execute code in the context of an object without keeping that object alive, outstanding jsdom timers will prevent garbage collection of the window on which they are scheduled.&lt;/p&gt; 
&lt;p&gt;If you want to be sure to shut down a jsdom window, use &lt;code&gt;window.close()&lt;/code&gt;, which will terminate all running timers (and also remove any event listeners on the window and document).&lt;/p&gt; 
&lt;h3&gt;Running jsdom inside a web browser&lt;/h3&gt; 
&lt;p&gt;jsdom has some support for being run inside a web browser, using &lt;a href=&quot;https://browserify.org/&quot;&gt;browserify&lt;/a&gt;. That is, inside a web browser, you can use a browserified jsdom to create an entirely self-contained set of plain JavaScript objects which look and act much like the browser&#39;s existing DOM objects, while being entirely independent of them. &quot;Virtual DOM&quot;, indeed!&lt;/p&gt; 
&lt;p&gt;jsdom&#39;s primary target is still Node.js, and so we use language features that are only present in recent Node.js versions (namely, Node.js v8+). Thus, older browsers will likely not work. (Even transpilation will not help: we use &lt;code&gt;Proxy&lt;/code&gt;s extensively throughout the jsdom codebase.)&lt;/p&gt; 
&lt;p&gt;Notably, jsdom works well inside a web worker. The original contributor, &lt;a href=&quot;https://github.com/lawnsea/&quot;&gt;@lawnsea&lt;/a&gt;, who made this possible, has &lt;a href=&quot;https://pdfs.semanticscholar.org/47f0/6bb6607a975500a30e9e52d7c9fbc0034e27.pdf&quot;&gt;published a paper&lt;/a&gt; about his project which uses this capability.&lt;/p&gt; 
&lt;p&gt;Not everything works perfectly when running jsdom inside a web browser. Sometimes that is because of fundamental limitations (such as not having filesystem access), but sometimes it is simply because we haven&#39;t spent enough time making the appropriate small tweaks. Bug reports are certainly welcome.&lt;/p&gt; 
&lt;h3&gt;Debugging the DOM using Chrome Devtools&lt;/h3&gt; 
&lt;p&gt;As of Node.js v6 you can debug programs using Chrome Devtools. See the &lt;a href=&quot;https://nodejs.org/en/docs/inspector/&quot;&gt;official documentation&lt;/a&gt; for how to get started.&lt;/p&gt; 
&lt;p&gt;By default jsdom elements are formatted as plain old JS objects in the console. To make it easier to debug, you can use &lt;a href=&quot;https://github.com/viddo/jsdom-devtools-formatter&quot;&gt;jsdom-devtools-formatter&lt;/a&gt;, which lets you inspect them like real DOM elements.&lt;/p&gt; 
&lt;h2&gt;Caveats&lt;/h2&gt; 
&lt;h3&gt;Asynchronous script loading&lt;/h3&gt; 
&lt;p&gt;People often have trouble with asynchronous script loading when using jsdom. Many pages load scripts asynchronously, but there is no way to tell when they&#39;re done doing so, and thus when it&#39;s a good time to run your code and inspect the resulting DOM structure. This is a fundamental limitation; we cannot predict what scripts on the web page will do, and so cannot tell you when they are done loading more scripts.&lt;/p&gt; 
&lt;p&gt;This can be worked around in a few ways. The best way, if you control the page in question, is to use whatever mechanisms are given by the script loader to detect when loading is done. For example, if you&#39;re using a module loader like RequireJS, the code could look like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// On the Node.js side:
const window = (new JSDOM(...)).window;
window.onModulesLoaded = () =&amp;gt; {
  console.log(&quot;ready to roll!&quot;);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Inside the HTML you supply to jsdom --&amp;gt;
&amp;lt;script&amp;gt;
requirejs([&quot;entry-module&quot;], () =&amp;gt; {
  window.onModulesLoaded();
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do not control the page, you could try workarounds such as polling for the presence of a specific element.&lt;/p&gt; 
&lt;p&gt;For more details, see the discussion in &lt;a href=&quot;https://github.com/jsdom/jsdom/issues/640&quot;&gt;#640&lt;/a&gt;, especially &lt;a href=&quot;https://github.com/matthewkastor&quot;&gt;@matthewkastor&lt;/a&gt;&#39;s &lt;a href=&quot;https://github.com/jsdom/jsdom/issues/640#issuecomment-22216965&quot;&gt;insightful comment&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Unimplemented parts of the web platform&lt;/h3&gt; 
&lt;p&gt;Although we enjoy adding new features to jsdom and keeping it up to date with the latest web specs, it has many missing APIs. Please feel free to file an issue for anything missing, but we&#39;re a small and busy team, so a pull request might work even better.&lt;/p&gt; 
&lt;p&gt;Beyond just features that we haven&#39;t gotten to yet, there are two major features that are currently outside the scope of jsdom. These are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Navigation&lt;/strong&gt;: the ability to change the global object, and all other objects, when clicking a link or assigning &lt;code&gt;location.href&lt;/code&gt; or similar.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Layout&lt;/strong&gt;: the ability to calculate where elements will be visually laid out as a result of CSS, which impacts methods like &lt;code&gt;getBoundingClientRects()&lt;/code&gt; or properties like &lt;code&gt;offsetTop&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Currently jsdom has dummy behaviors for some aspects of these features, such as sending a &quot;not implemented&quot; &lt;code&gt;&quot;jsdomError&quot;&lt;/code&gt; to the virtual console for navigation, or returning zeros for many layout-related properties. Often you can work around these limitations in your code, e.g. by creating new &lt;code&gt;JSDOM&lt;/code&gt; instances for each page you &quot;navigate&quot; to during a crawl, or using &lt;code&gt;Object.defineProperty()&lt;/code&gt; to change what various layout-related getters and methods return.&lt;/p&gt; 
&lt;p&gt;Note that other tools in the same space, such as PhantomJS, do support these features. On the wiki, we have a more complete writeup about &lt;a href=&quot;https://github.com/jsdom/jsdom/wiki/jsdom-vs.-PhantomJS&quot;&gt;jsdom vs. PhantomJS&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supporting jsdom&lt;/h2&gt; 
&lt;p&gt;jsdom is a community-driven project maintained by a team of &lt;a href=&quot;https://github.com/orgs/jsdom/people&quot;&gt;volunteers&lt;/a&gt;. You could support jsdom by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tidelift.com/subscription/pkg/npm-jsdom?utm_source=npm-jsdom&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&quot;&gt;Getting professional support for jsdom&lt;/a&gt; as part of a Tidelift subscription. Tidelift helps making open source sustainable for us while giving teams assurances for maintenance, licensing, and security.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jsdom/jsdom/blob/master/Contributing.md&quot;&gt;Contributing&lt;/a&gt; directly to the project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;If you need help with jsdom, please feel free to use any of the following venues:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href=&quot;http://groups.google.com/group/jsdom&quot;&gt;mailing list&lt;/a&gt; (best for &quot;how do I&quot; questions)&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://github.com/jsdom/jsdom/issues&quot;&gt;issue tracker&lt;/a&gt; (best for bug reports)&lt;/li&gt; 
 &lt;li&gt;The IRC channel: &lt;a href=&quot;irc://irc.freenode.net/jsdom&quot;&gt;#jsdom on freenode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
